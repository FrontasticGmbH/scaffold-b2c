(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["extensions"] = factory();
	else
		root["extensions"] = factory();
})(global, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 780);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var global = __webpack_require__(2);

var getOwnPropertyDescriptor = __webpack_require__(28).f;

var createNonEnumerableProperty = __webpack_require__(30);

var redefine = __webpack_require__(18);

var setGlobal = __webpack_require__(175);

var copyConstructorProperties = __webpack_require__(140);

var isForced = __webpack_require__(111);
/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
  options.name        - the .name of the function if it does not match the key
*/


module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;

  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }

  if (target) for (key in source) {
    sourceProperty = source[key];

    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];

    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced); // contained in target

    if (!FORCED && targetProperty !== undefined) {
      if (_typeof(sourceProperty) == _typeof(targetProperty)) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    } // add a flag to not completely full polyfills


    if (options.sham || targetProperty && targetProperty.sham) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    } // extend global


    redefine(target, key, sourceProperty, options);
  }
};

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.multiBindToService = exports.getServiceIdentifierAsString = exports.typeConstraint = exports.namedConstraint = exports.taggedConstraint = exports.traverseAncerstors = exports.decorate = exports.id = exports.MetadataReader = exports.postConstruct = exports.targetName = exports.multiInject = exports.unmanaged = exports.optional = exports.LazyServiceIdentifer = exports.inject = exports.named = exports.tagged = exports.injectable = exports.ContainerModule = exports.AsyncContainerModule = exports.TargetTypeEnum = exports.BindingTypeEnum = exports.BindingScopeEnum = exports.Container = exports.METADATA_KEY = void 0;

var keys = __webpack_require__(24);

exports.METADATA_KEY = keys;

var container_1 = __webpack_require__(751);

Object.defineProperty(exports, "Container", {
  enumerable: true,
  get: function get() {
    return container_1.Container;
  }
});

var literal_types_1 = __webpack_require__(67);

Object.defineProperty(exports, "BindingScopeEnum", {
  enumerable: true,
  get: function get() {
    return literal_types_1.BindingScopeEnum;
  }
});
Object.defineProperty(exports, "BindingTypeEnum", {
  enumerable: true,
  get: function get() {
    return literal_types_1.BindingTypeEnum;
  }
});
Object.defineProperty(exports, "TargetTypeEnum", {
  enumerable: true,
  get: function get() {
    return literal_types_1.TargetTypeEnum;
  }
});

var container_module_1 = __webpack_require__(767);

Object.defineProperty(exports, "AsyncContainerModule", {
  enumerable: true,
  get: function get() {
    return container_module_1.AsyncContainerModule;
  }
});
Object.defineProperty(exports, "ContainerModule", {
  enumerable: true,
  get: function get() {
    return container_module_1.ContainerModule;
  }
});

var injectable_1 = __webpack_require__(768);

Object.defineProperty(exports, "injectable", {
  enumerable: true,
  get: function get() {
    return injectable_1.injectable;
  }
});

var tagged_1 = __webpack_require__(769);

Object.defineProperty(exports, "tagged", {
  enumerable: true,
  get: function get() {
    return tagged_1.tagged;
  }
});

var named_1 = __webpack_require__(770);

Object.defineProperty(exports, "named", {
  enumerable: true,
  get: function get() {
    return named_1.named;
  }
});

var inject_1 = __webpack_require__(332);

Object.defineProperty(exports, "inject", {
  enumerable: true,
  get: function get() {
    return inject_1.inject;
  }
});
Object.defineProperty(exports, "LazyServiceIdentifer", {
  enumerable: true,
  get: function get() {
    return inject_1.LazyServiceIdentifer;
  }
});

var optional_1 = __webpack_require__(771);

Object.defineProperty(exports, "optional", {
  enumerable: true,
  get: function get() {
    return optional_1.optional;
  }
});

var unmanaged_1 = __webpack_require__(772);

Object.defineProperty(exports, "unmanaged", {
  enumerable: true,
  get: function get() {
    return unmanaged_1.unmanaged;
  }
});

var multi_inject_1 = __webpack_require__(773);

Object.defineProperty(exports, "multiInject", {
  enumerable: true,
  get: function get() {
    return multi_inject_1.multiInject;
  }
});

var target_name_1 = __webpack_require__(774);

Object.defineProperty(exports, "targetName", {
  enumerable: true,
  get: function get() {
    return target_name_1.targetName;
  }
});

var post_construct_1 = __webpack_require__(775);

Object.defineProperty(exports, "postConstruct", {
  enumerable: true,
  get: function get() {
    return post_construct_1.postConstruct;
  }
});

var metadata_reader_1 = __webpack_require__(330);

Object.defineProperty(exports, "MetadataReader", {
  enumerable: true,
  get: function get() {
    return metadata_reader_1.MetadataReader;
  }
});

var id_1 = __webpack_require__(84);

Object.defineProperty(exports, "id", {
  enumerable: true,
  get: function get() {
    return id_1.id;
  }
});

var decorator_utils_1 = __webpack_require__(74);

Object.defineProperty(exports, "decorate", {
  enumerable: true,
  get: function get() {
    return decorator_utils_1.decorate;
  }
});

var constraint_helpers_1 = __webpack_require__(335);

Object.defineProperty(exports, "traverseAncerstors", {
  enumerable: true,
  get: function get() {
    return constraint_helpers_1.traverseAncerstors;
  }
});
Object.defineProperty(exports, "taggedConstraint", {
  enumerable: true,
  get: function get() {
    return constraint_helpers_1.taggedConstraint;
  }
});
Object.defineProperty(exports, "namedConstraint", {
  enumerable: true,
  get: function get() {
    return constraint_helpers_1.namedConstraint;
  }
});
Object.defineProperty(exports, "typeConstraint", {
  enumerable: true,
  get: function get() {
    return constraint_helpers_1.typeConstraint;
  }
});

var serialization_1 = __webpack_require__(128);

Object.defineProperty(exports, "getServiceIdentifierAsString", {
  enumerable: true,
  get: function get() {
    return serialization_1.getServiceIdentifierAsString;
  }
});

var binding_utils_1 = __webpack_require__(776);

Object.defineProperty(exports, "multiBindToService", {
  enumerable: true,
  get: function get() {
    return binding_utils_1.multiBindToService;
  }
});

/***/ }),
/* 2 */
/***/ (function(module, exports) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var check = function check(it) {
  return it && it.Math == Math && it;
}; // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028


module.exports = // eslint-disable-next-line es/no-global-this -- safe
check((typeof globalThis === "undefined" ? "undefined" : _typeof(globalThis)) == 'object' && globalThis) || check((typeof window === "undefined" ? "undefined" : _typeof(window)) == 'object' && window) || // eslint-disable-next-line no-restricted-globals -- safe
check((typeof self === "undefined" ? "undefined" : _typeof(self)) == 'object' && self) || check((typeof global === "undefined" ? "undefined" : _typeof(global)) == 'object' && global) || // eslint-disable-next-line no-new-func -- fallback
function () {
  return this;
}() || Function('return this')();

/***/ }),
/* 3 */
/***/ (function(module, exports) {

var FunctionPrototype = Function.prototype;
var bind = FunctionPrototype.bind;
var call = FunctionPrototype.call;
var callBind = bind && bind.bind(call);
module.exports = bind ? function (fn) {
  return fn && callBind(call, fn);
} : function (fn) {
  return fn && function () {
    return call.apply(fn, arguments);
  };
};

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var isObject = __webpack_require__(7);

var String = global.String;
var TypeError = global.TypeError; // `Assert: Type(argument) is Object`

module.exports = function (argument) {
  if (isObject(argument)) return argument;
  throw TypeError(String(argument) + ' is not an object');
};

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(4); // Detect IE8's incomplete defineProperty implementation


module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, {
    get: function get() {
      return 7;
    }
  })[1] != 7;
});

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var isCallable = __webpack_require__(9);

module.exports = function (it) {
  return _typeof(it) == 'object' ? it !== null : isCallable(it);
};

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var shared = __webpack_require__(136);

var hasOwn = __webpack_require__(14);

var uid = __webpack_require__(88);

var NATIVE_SYMBOL = __webpack_require__(173);

var USE_SYMBOL_AS_UID = __webpack_require__(227);

var WellKnownSymbolsStore = shared('wks');
var _Symbol = global.Symbol;
var symbolFor = _Symbol && _Symbol['for'];
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? _Symbol : _Symbol && _Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {
    var description = 'Symbol.' + name;

    if (NATIVE_SYMBOL && hasOwn(_Symbol, name)) {
      WellKnownSymbolsStore[name] = _Symbol[name];
    } else if (USE_SYMBOL_AS_UID && symbolFor) {
      WellKnownSymbolsStore[name] = symbolFor(description);
    } else {
      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
    }
  }

  return WellKnownSymbolsStore[name];
};

/***/ }),
/* 9 */
/***/ (function(module, exports) {

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
module.exports = function (argument) {
  return typeof argument == 'function';
};

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var classof = __webpack_require__(73);

var String = global.String;

module.exports = function (argument) {
  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
  return String(argument);
};

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var NATIVE_ARRAY_BUFFER = __webpack_require__(189);

var DESCRIPTORS = __webpack_require__(6);

var global = __webpack_require__(2);

var isCallable = __webpack_require__(9);

var isObject = __webpack_require__(7);

var hasOwn = __webpack_require__(14);

var classof = __webpack_require__(73);

var tryToString = __webpack_require__(108);

var createNonEnumerableProperty = __webpack_require__(30);

var redefine = __webpack_require__(18);

var defineProperty = __webpack_require__(12).f;

var isPrototypeOf = __webpack_require__(38);

var getPrototypeOf = __webpack_require__(48);

var setPrototypeOf = __webpack_require__(53);

var wellKnownSymbol = __webpack_require__(8);

var uid = __webpack_require__(88);

var Int8Array = global.Int8Array;
var Int8ArrayPrototype = Int8Array && Int8Array.prototype;
var Uint8ClampedArray = global.Uint8ClampedArray;
var Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;
var TypedArray = Int8Array && getPrototypeOf(Int8Array);
var TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);
var ObjectPrototype = Object.prototype;
var TypeError = global.TypeError;
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');
var TYPED_ARRAY_CONSTRUCTOR = uid('TYPED_ARRAY_CONSTRUCTOR'); // Fixing native typed arrays in Opera Presto crashes the browser, see #595

var NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';
var TYPED_ARRAY_TAG_REQIRED = false;
var NAME, Constructor, Prototype;
var TypedArrayConstructorsList = {
  Int8Array: 1,
  Uint8Array: 1,
  Uint8ClampedArray: 1,
  Int16Array: 2,
  Uint16Array: 2,
  Int32Array: 4,
  Uint32Array: 4,
  Float32Array: 4,
  Float64Array: 8
};
var BigIntArrayConstructorsList = {
  BigInt64Array: 8,
  BigUint64Array: 8
};

var isView = function isView(it) {
  if (!isObject(it)) return false;
  var klass = classof(it);
  return klass === 'DataView' || hasOwn(TypedArrayConstructorsList, klass) || hasOwn(BigIntArrayConstructorsList, klass);
};

var isTypedArray = function isTypedArray(it) {
  if (!isObject(it)) return false;
  var klass = classof(it);
  return hasOwn(TypedArrayConstructorsList, klass) || hasOwn(BigIntArrayConstructorsList, klass);
};

var aTypedArray = function aTypedArray(it) {
  if (isTypedArray(it)) return it;
  throw TypeError('Target is not a typed array');
};

var aTypedArrayConstructor = function aTypedArrayConstructor(C) {
  if (isCallable(C) && (!setPrototypeOf || isPrototypeOf(TypedArray, C))) return C;
  throw TypeError(tryToString(C) + ' is not a typed array constructor');
};

var exportTypedArrayMethod = function exportTypedArrayMethod(KEY, property, forced, options) {
  if (!DESCRIPTORS) return;
  if (forced) for (var ARRAY in TypedArrayConstructorsList) {
    var TypedArrayConstructor = global[ARRAY];
    if (TypedArrayConstructor && hasOwn(TypedArrayConstructor.prototype, KEY)) try {
      delete TypedArrayConstructor.prototype[KEY];
    } catch (error) {
      /* empty */
    }
  }

  if (!TypedArrayPrototype[KEY] || forced) {
    redefine(TypedArrayPrototype, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property, options);
  }
};

var exportTypedArrayStaticMethod = function exportTypedArrayStaticMethod(KEY, property, forced) {
  var ARRAY, TypedArrayConstructor;
  if (!DESCRIPTORS) return;

  if (setPrototypeOf) {
    if (forced) for (ARRAY in TypedArrayConstructorsList) {
      TypedArrayConstructor = global[ARRAY];
      if (TypedArrayConstructor && hasOwn(TypedArrayConstructor, KEY)) try {
        delete TypedArrayConstructor[KEY];
      } catch (error) {
        /* empty */
      }
    }

    if (!TypedArray[KEY] || forced) {
      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable
      try {
        return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);
      } catch (error) {
        /* empty */
      }
    } else return;
  }

  for (ARRAY in TypedArrayConstructorsList) {
    TypedArrayConstructor = global[ARRAY];

    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {
      redefine(TypedArrayConstructor, KEY, property);
    }
  }
};

for (NAME in TypedArrayConstructorsList) {
  Constructor = global[NAME];
  Prototype = Constructor && Constructor.prototype;
  if (Prototype) createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);else NATIVE_ARRAY_BUFFER_VIEWS = false;
}

for (NAME in BigIntArrayConstructorsList) {
  Constructor = global[NAME];
  Prototype = Constructor && Constructor.prototype;
  if (Prototype) createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);
} // WebKit bug - typed arrays constructors prototype is Object.prototype


if (!NATIVE_ARRAY_BUFFER_VIEWS || !isCallable(TypedArray) || TypedArray === Function.prototype) {
  // eslint-disable-next-line no-shadow -- safe
  TypedArray = function TypedArray() {
    throw TypeError('Incorrect invocation');
  };

  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);
  }
}

if (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {
  TypedArrayPrototype = TypedArray.prototype;
  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);
  }
} // WebKit bug - one more object in Uint8ClampedArray prototype chain


if (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {
  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);
}

if (DESCRIPTORS && !hasOwn(TypedArrayPrototype, TO_STRING_TAG)) {
  TYPED_ARRAY_TAG_REQIRED = true;
  defineProperty(TypedArrayPrototype, TO_STRING_TAG, {
    get: function get() {
      return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;
    }
  });

  for (NAME in TypedArrayConstructorsList) {
    if (global[NAME]) {
      createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);
    }
  }
}

module.exports = {
  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,
  TYPED_ARRAY_CONSTRUCTOR: TYPED_ARRAY_CONSTRUCTOR,
  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQIRED && TYPED_ARRAY_TAG,
  aTypedArray: aTypedArray,
  aTypedArrayConstructor: aTypedArrayConstructor,
  exportTypedArrayMethod: exportTypedArrayMethod,
  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,
  isView: isView,
  isTypedArray: isTypedArray,
  TypedArray: TypedArray,
  TypedArrayPrototype: TypedArrayPrototype
};

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var DESCRIPTORS = __webpack_require__(6);

var IE8_DOM_DEFINE = __webpack_require__(229);

var anObject = __webpack_require__(5);

var toPropertyKey = __webpack_require__(70);

var TypeError = global.TypeError; // eslint-disable-next-line es/no-object-defineproperty -- safe

var $defineProperty = Object.defineProperty; // `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty

exports.f = DESCRIPTORS ? $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) {
    /* empty */
  }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

/***/ }),
/* 13 */
/***/ (function(module, exports) {

var call = Function.prototype.call;
module.exports = call.bind ? call.bind(call) : function () {
  return call.apply(call, arguments);
};

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

var uncurryThis = __webpack_require__(3);

var toObject = __webpack_require__(16);

var hasOwnProperty = uncurryThis({}.hasOwnProperty); // `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty

module.exports = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject(it), key);
};

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = require("stream");

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var requireObjectCoercible = __webpack_require__(20);

var Object = global.Object; // `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject

module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

var toLength = __webpack_require__(39); // `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike


module.exports = function (obj) {
  return toLength(obj.length);
};

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var isCallable = __webpack_require__(9);

var hasOwn = __webpack_require__(14);

var createNonEnumerableProperty = __webpack_require__(30);

var setGlobal = __webpack_require__(175);

var inspectSource = __webpack_require__(138);

var InternalStateModule = __webpack_require__(21);

var CONFIGURABLE_FUNCTION_NAME = __webpack_require__(89).CONFIGURABLE;

var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(String).split('String');
(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  var name = options && options.name !== undefined ? options.name : key;
  var state;

  if (isCallable(value)) {
    if (String(name).slice(0, 7) === 'Symbol(') {
      name = '[' + String(name).replace(/^Symbol\(([^)]*)\)/, '$1') + ']';
    }

    if (!hasOwn(value, 'name') || CONFIGURABLE_FUNCTION_NAME && value.name !== name) {
      createNonEnumerableProperty(value, 'name', name);
    }

    state = enforceInternalState(value);

    if (!state.source) {
      state.source = TEMPLATE.join(typeof name == 'string' ? name : '');
    }
  }

  if (O === global) {
    if (simple) O[key] = value;else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }

  if (simple) O[key] = value;else createNonEnumerableProperty(O, key, value); // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return isCallable(this) && getInternalState(this).source || inspectSource(this);
});

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var isCallable = __webpack_require__(9);

var aFunction = function aFunction(argument) {
  return isCallable(argument) ? argument : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
};

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var TypeError = global.TypeError; // `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible

module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__(230);

var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var isObject = __webpack_require__(7);

var createNonEnumerableProperty = __webpack_require__(30);

var hasOwn = __webpack_require__(14);

var shared = __webpack_require__(174);

var sharedKey = __webpack_require__(139);

var hiddenKeys = __webpack_require__(109);

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError = global.TypeError;
var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function enforce(it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function getterFor(TYPE) {
  return function (it) {
    var state;

    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    }

    return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  var wmget = uncurryThis(store.get);
  var wmhas = uncurryThis(store.has);
  var wmset = uncurryThis(store.set);

  set = function set(it, metadata) {
    if (wmhas(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    wmset(store, it, metadata);
    return metadata;
  };

  get = function get(it) {
    return wmget(store, it) || {};
  };

  has = function has(it) {
    return wmhas(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;

  set = function set(it, metadata) {
    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };

  get = function get(it) {
    return hasOwn(it, STATE) ? it[STATE] : {};
  };

  has = function has(it) {
    return hasOwn(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};

/***/ }),
/* 22 */
/***/ (function(module, exports) {

var ceil = Math.ceil;
var floor = Math.floor; // `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity

module.exports = function (argument) {
  var number = +argument; // eslint-disable-next-line no-self-compare -- safe

  return number !== number || number === 0 ? 0 : (number > 0 ? floor : ceil)(number);
};

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var bind = __webpack_require__(298); // utils is a library of generic helper functions non-specific to axios


var toString = Object.prototype.toString; // eslint-disable-next-line func-names

var kindOf = function (cache) {
  // eslint-disable-next-line func-names
  return function (thing) {
    var str = toString.call(thing);
    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
  };
}(Object.create(null));

function kindOfTest(type) {
  type = type.toLowerCase();
  return function isKindOf(thing) {
    return kindOf(thing) === type;
  };
}
/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */


function isArray(val) {
  return Array.isArray(val);
}
/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */


function isUndefined(val) {
  return typeof val === 'undefined';
}
/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */


function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}
/**
 * Determine if a value is an ArrayBuffer
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */


var isArrayBuffer = kindOfTest('ArrayBuffer');
/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */

function isArrayBufferView(val) {
  var result;

  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
    result = ArrayBuffer.isView(val);
  } else {
    result = val && val.buffer && isArrayBuffer(val.buffer);
  }

  return result;
}
/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */


function isString(val) {
  return typeof val === 'string';
}
/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */


function isNumber(val) {
  return typeof val === 'number';
}
/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */


function isObject(val) {
  return val !== null && _typeof(val) === 'object';
}
/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */


function isPlainObject(val) {
  if (kindOf(val) !== 'object') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}
/**
 * Determine if a value is a Date
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */


var isDate = kindOfTest('Date');
/**
 * Determine if a value is a File
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */

var isFile = kindOfTest('File');
/**
 * Determine if a value is a Blob
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */

var isBlob = kindOfTest('Blob');
/**
 * Determine if a value is a FileList
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */

var isFileList = kindOfTest('FileList');
/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */

function isFunction(val) {
  return toString.call(val) === '[object Function]';
}
/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */


function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}
/**
 * Determine if a value is a FormData
 *
 * @param {Object} thing The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */


function isFormData(thing) {
  var pattern = '[object FormData]';
  return thing && (typeof FormData === 'function' && thing instanceof FormData || toString.call(thing) === pattern || isFunction(thing.toString) && thing.toString() === pattern);
}
/**
 * Determine if a value is a URLSearchParams object
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */


var isURLSearchParams = kindOfTest('URLSearchParams');
/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */

function trim(str) {
  return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, '');
}
/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */


function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' || navigator.product === 'NativeScript' || navigator.product === 'NS')) {
    return false;
  }

  return typeof window !== 'undefined' && typeof document !== 'undefined';
}
/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */


function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  } // Force an array if not already something iterable


  if (_typeof(obj) !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}
/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */


function
  /* obj1, obj2, obj3, ... */
merge() {
  var result = {};

  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }

  return result;
}
/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */


function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}
/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */


function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }

  return content;
}
/**
 * Inherit the prototype methods from one constructor into another
 * @param {function} constructor
 * @param {function} superConstructor
 * @param {object} [props]
 * @param {object} [descriptors]
 */


function inherits(constructor, superConstructor, props, descriptors) {
  constructor.prototype = Object.create(superConstructor.prototype, descriptors);
  constructor.prototype.constructor = constructor;
  props && Object.assign(constructor.prototype, props);
}
/**
 * Resolve object with deep prototype chain to a flat object
 * @param {Object} sourceObj source object
 * @param {Object} [destObj]
 * @param {Function} [filter]
 * @returns {Object}
 */


function toFlatObject(sourceObj, destObj, filter) {
  var props;
  var i;
  var prop;
  var merged = {};
  destObj = destObj || {};

  do {
    props = Object.getOwnPropertyNames(sourceObj);
    i = props.length;

    while (i-- > 0) {
      prop = props[i];

      if (!merged[prop]) {
        destObj[prop] = sourceObj[prop];
        merged[prop] = true;
      }
    }

    sourceObj = Object.getPrototypeOf(sourceObj);
  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);

  return destObj;
}
/*
 * determines whether a string ends with the characters of a specified string
 * @param {String} str
 * @param {String} searchString
 * @param {Number} [position= 0]
 * @returns {boolean}
 */


function endsWith(str, searchString, position) {
  str = String(str);

  if (position === undefined || position > str.length) {
    position = str.length;
  }

  position -= searchString.length;
  var lastIndex = str.indexOf(searchString, position);
  return lastIndex !== -1 && lastIndex === position;
}
/**
 * Returns new array from array like object
 * @param {*} [thing]
 * @returns {Array}
 */


function toArray(thing) {
  if (!thing) return null;
  var i = thing.length;
  if (isUndefined(i)) return null;
  var arr = new Array(i);

  while (i-- > 0) {
    arr[i] = thing[i];
  }

  return arr;
} // eslint-disable-next-line func-names


var isTypedArray = function (TypedArray) {
  // eslint-disable-next-line func-names
  return function (thing) {
    return TypedArray && thing instanceof TypedArray;
  };
}(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM,
  inherits: inherits,
  toFlatObject: toFlatObject,
  kindOf: kindOf,
  kindOfTest: kindOfTest,
  endsWith: endsWith,
  toArray: toArray,
  isTypedArray: isTypedArray,
  isFileList: isFileList
};

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NON_CUSTOM_TAG_KEYS = exports.POST_CONSTRUCT = exports.DESIGN_PARAM_TYPES = exports.PARAM_TYPES = exports.TAGGED_PROP = exports.TAGGED = exports.MULTI_INJECT_TAG = exports.INJECT_TAG = exports.OPTIONAL_TAG = exports.UNMANAGED_TAG = exports.NAME_TAG = exports.NAMED_TAG = void 0;
exports.NAMED_TAG = "named";
exports.NAME_TAG = "name";
exports.UNMANAGED_TAG = "unmanaged";
exports.OPTIONAL_TAG = "optional";
exports.INJECT_TAG = "inject";
exports.MULTI_INJECT_TAG = "multi_inject";
exports.TAGGED = "inversify:tagged";
exports.TAGGED_PROP = "inversify:tagged_props";
exports.PARAM_TYPES = "inversify:paramtypes";
exports.DESIGN_PARAM_TYPES = "design:paramtypes";
exports.POST_CONSTRUCT = "post_construct";

function getNonCustomTagKeys() {
  return [exports.INJECT_TAG, exports.MULTI_INJECT_TAG, exports.NAME_TAG, exports.UNMANAGED_TAG, exports.NAMED_TAG, exports.OPTIONAL_TAG];
}

exports.NON_CUSTOM_TAG_KEYS = getNonCustomTagKeys();

/***/ }),
/* 25 */
/***/ (function(module, exports) {

module.exports = false;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__(52);

var uncurryThis = __webpack_require__(3);

var IndexedObject = __webpack_require__(107);

var toObject = __webpack_require__(16);

var lengthOfArrayLike = __webpack_require__(17);

var arraySpeciesCreate = __webpack_require__(114);

var push = uncurryThis([].push); // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation

var createMethod = function createMethod(TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var IS_FILTER_REJECT = TYPE == 7;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that);
    var length = lengthOfArrayLike(self);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
    var value, result;

    for (; length > index; index++) {
      if (NO_HOLES || index in self) {
        value = self[index];
        result = boundFunction(value, index, O);

        if (TYPE) {
          if (IS_MAP) target[index] = result; // map
          else if (result) switch (TYPE) {
            case 3:
              return true;
            // some

            case 5:
              return value;
            // find

            case 6:
              return index;
            // findIndex

            case 2:
              push(target, value);
            // filter
          } else switch (TYPE) {
            case 4:
              return false;
            // every

            case 7:
              push(target, value);
            // filterReject
          }
        }
      }
    }

    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6),
  // `Array.prototype.filterReject` method
  // https://github.com/tc39/proposal-array-filtering
  filterReject: createMethod(7)
};

/***/ }),
/* 27 */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Headers", function() { return Headers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Request", function() { return Request; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Response", function() { return Response; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FetchError", function() { return FetchError; });
/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);
/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(69);
/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(32);
/* harmony import */ var whatwg_url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(224);
/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75);
/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(49);
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }






 // Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js
// fix for "Readable" isn't a named export issue

var Readable = stream__WEBPACK_IMPORTED_MODULE_0__.Readable;
var BUFFER = Symbol('buffer');
var TYPE = Symbol('type');

var Blob = /*#__PURE__*/function () {
  function Blob() {
    _classCallCheck(this, Blob);

    this[TYPE] = '';
    var blobParts = arguments[0];
    var options = arguments[1];
    var buffers = [];
    var size = 0;

    if (blobParts) {
      var a = blobParts;
      var length = Number(a.length);

      for (var i = 0; i < length; i++) {
        var element = a[i];
        var buffer = void 0;

        if (element instanceof Buffer) {
          buffer = element;
        } else if (ArrayBuffer.isView(element)) {
          buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);
        } else if (element instanceof ArrayBuffer) {
          buffer = Buffer.from(element);
        } else if (element instanceof Blob) {
          buffer = element[BUFFER];
        } else {
          buffer = Buffer.from(typeof element === 'string' ? element : String(element));
        }

        size += buffer.length;
        buffers.push(buffer);
      }
    }

    this[BUFFER] = Buffer.concat(buffers);
    var type = options && options.type !== undefined && String(options.type).toLowerCase();

    if (type && !/[^\u0020-\u007E]/.test(type)) {
      this[TYPE] = type;
    }
  }

  _createClass(Blob, [{
    key: "size",
    get: function get() {
      return this[BUFFER].length;
    }
  }, {
    key: "type",
    get: function get() {
      return this[TYPE];
    }
  }, {
    key: "text",
    value: function text() {
      return Promise.resolve(this[BUFFER].toString());
    }
  }, {
    key: "arrayBuffer",
    value: function arrayBuffer() {
      var buf = this[BUFFER];
      var ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
      return Promise.resolve(ab);
    }
  }, {
    key: "stream",
    value: function stream() {
      var readable = new Readable();

      readable._read = function () {};

      readable.push(this[BUFFER]);
      readable.push(null);
      return readable;
    }
  }, {
    key: "toString",
    value: function toString() {
      return '[object Blob]';
    }
  }, {
    key: "slice",
    value: function slice() {
      var size = this.size;
      var start = arguments[0];
      var end = arguments[1];
      var relativeStart, relativeEnd;

      if (start === undefined) {
        relativeStart = 0;
      } else if (start < 0) {
        relativeStart = Math.max(size + start, 0);
      } else {
        relativeStart = Math.min(start, size);
      }

      if (end === undefined) {
        relativeEnd = size;
      } else if (end < 0) {
        relativeEnd = Math.max(size + end, 0);
      } else {
        relativeEnd = Math.min(end, size);
      }

      var span = Math.max(relativeEnd - relativeStart, 0);
      var buffer = this[BUFFER];
      var slicedBuffer = buffer.slice(relativeStart, relativeStart + span);
      var blob = new Blob([], {
        type: arguments[2]
      });
      blob[BUFFER] = slicedBuffer;
      return blob;
    }
  }]);

  return Blob;
}();

Object.defineProperties(Blob.prototype, {
  size: {
    enumerable: true
  },
  type: {
    enumerable: true
  },
  slice: {
    enumerable: true
  }
});
Object.defineProperty(Blob.prototype, Symbol.toStringTag, {
  value: 'Blob',
  writable: false,
  enumerable: false,
  configurable: true
});
/**
 * fetch-error.js
 *
 * FetchError interface for operational errors
 */

/**
 * Create FetchError instance
 *
 * @param   String      message      Error message for human
 * @param   String      type         Error type for machine
 * @param   String      systemError  For Node.js system error
 * @return  FetchError
 */

function FetchError(message, type, systemError) {
  Error.call(this, message);
  this.message = message;
  this.type = type; // when err.type is `system`, err.code contains system error code

  if (systemError) {
    this.code = this.errno = systemError.code;
  } // hide custom error implementation details from end-users


  Error.captureStackTrace(this, this.constructor);
}

FetchError.prototype = Object.create(Error.prototype);
FetchError.prototype.constructor = FetchError;
FetchError.prototype.name = 'FetchError';
var convert;

try {
  convert = require('encoding').convert;
} catch (e) {}

var INTERNALS = Symbol('Body internals'); // fix an issue where "PassThrough" isn't a named export for node <10

var PassThrough = stream__WEBPACK_IMPORTED_MODULE_0__.PassThrough;
/**
 * Body mixin
 *
 * Ref: https://fetch.spec.whatwg.org/#body
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */

function Body(body) {
  var _this = this;

  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$size = _ref.size;

  var size = _ref$size === undefined ? 0 : _ref$size;
  var _ref$timeout = _ref.timeout;
  var timeout = _ref$timeout === undefined ? 0 : _ref$timeout;

  if (body == null) {
    // body is undefined or null
    body = null;
  } else if (isURLSearchParams(body)) {
    // body is a URLSearchParams
    body = Buffer.from(body.toString());
  } else if (isBlob(body)) ;else if (Buffer.isBuffer(body)) ;else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
    // body is ArrayBuffer
    body = Buffer.from(body);
  } else if (ArrayBuffer.isView(body)) {
    // body is ArrayBufferView
    body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
  } else if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) ;else {
    // none of the above
    // coerce to string then buffer
    body = Buffer.from(String(body));
  }

  this[INTERNALS] = {
    body: body,
    disturbed: false,
    error: null
  };
  this.size = size;
  this.timeout = timeout;

  if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) {
    body.on('error', function (err) {
      var error = err.name === 'AbortError' ? err : new FetchError("Invalid response body while trying to fetch ".concat(_this.url, ": ").concat(err.message), 'system', err);
      _this[INTERNALS].error = error;
    });
  }
}

Body.prototype = {
  get body() {
    return this[INTERNALS].body;
  },

  get bodyUsed() {
    return this[INTERNALS].disturbed;
  },

  /**
   * Decode response as ArrayBuffer
   *
   * @return  Promise
   */
  arrayBuffer: function arrayBuffer() {
    return consumeBody.call(this).then(function (buf) {
      return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
    });
  },

  /**
   * Return raw response as Blob
   *
   * @return Promise
   */
  blob: function blob() {
    var ct = this.headers && this.headers.get('content-type') || '';
    return consumeBody.call(this).then(function (buf) {
      return Object.assign( // Prevent copying
      new Blob([], {
        type: ct.toLowerCase()
      }), _defineProperty({}, BUFFER, buf));
    });
  },

  /**
   * Decode response as json
   *
   * @return  Promise
   */
  json: function json() {
    var _this2 = this;

    return consumeBody.call(this).then(function (buffer) {
      try {
        return JSON.parse(buffer.toString());
      } catch (err) {
        return Body.Promise.reject(new FetchError("invalid json response body at ".concat(_this2.url, " reason: ").concat(err.message), 'invalid-json'));
      }
    });
  },

  /**
   * Decode response as text
   *
   * @return  Promise
   */
  text: function text() {
    return consumeBody.call(this).then(function (buffer) {
      return buffer.toString();
    });
  },

  /**
   * Decode response as buffer (non-spec api)
   *
   * @return  Promise
   */
  buffer: function buffer() {
    return consumeBody.call(this);
  },

  /**
   * Decode response as text, while automatically detecting the encoding and
   * trying to decode to UTF-8 (non-spec api)
   *
   * @return  Promise
   */
  textConverted: function textConverted() {
    var _this3 = this;

    return consumeBody.call(this).then(function (buffer) {
      return convertBody(buffer, _this3.headers);
    });
  }
}; // In browsers, all properties are enumerable.

Object.defineProperties(Body.prototype, {
  body: {
    enumerable: true
  },
  bodyUsed: {
    enumerable: true
  },
  arrayBuffer: {
    enumerable: true
  },
  blob: {
    enumerable: true
  },
  json: {
    enumerable: true
  },
  text: {
    enumerable: true
  }
});

Body.mixIn = function (proto) {
  var _iterator = _createForOfIteratorHelper(Object.getOwnPropertyNames(Body.prototype)),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var name = _step.value;

      // istanbul ignore else: future proof
      if (!(name in proto)) {
        var desc = Object.getOwnPropertyDescriptor(Body.prototype, name);
        Object.defineProperty(proto, name, desc);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
};
/**
 * Consume and convert an entire Body to a Buffer.
 *
 * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body
 *
 * @return  Promise
 */


function consumeBody() {
  var _this4 = this;

  if (this[INTERNALS].disturbed) {
    return Body.Promise.reject(new TypeError("body used already for: ".concat(this.url)));
  }

  this[INTERNALS].disturbed = true;

  if (this[INTERNALS].error) {
    return Body.Promise.reject(this[INTERNALS].error);
  }

  var body = this.body; // body is null

  if (body === null) {
    return Body.Promise.resolve(Buffer.alloc(0));
  } // body is blob


  if (isBlob(body)) {
    body = body.stream();
  } // body is buffer


  if (Buffer.isBuffer(body)) {
    return Body.Promise.resolve(body);
  } // istanbul ignore if: should never happen


  if (!(body instanceof stream__WEBPACK_IMPORTED_MODULE_0__)) {
    return Body.Promise.resolve(Buffer.alloc(0));
  } // body is stream
  // get ready to actually consume the body


  var accum = [];
  var accumBytes = 0;
  var abort = false;
  return new Body.Promise(function (resolve, reject) {
    var resTimeout; // allow timeout on slow response body

    if (_this4.timeout) {
      resTimeout = setTimeout(function () {
        abort = true;
        reject(new FetchError("Response timeout while trying to fetch ".concat(_this4.url, " (over ").concat(_this4.timeout, "ms)"), 'body-timeout'));
      }, _this4.timeout);
    } // handle stream errors


    body.on('error', function (err) {
      if (err.name === 'AbortError') {
        // if the request was aborted, reject with this Error
        abort = true;
        reject(err);
      } else {
        // other errors, such as incorrect content-encoding
        reject(new FetchError("Invalid response body while trying to fetch ".concat(_this4.url, ": ").concat(err.message), 'system', err));
      }
    });
    body.on('data', function (chunk) {
      if (abort || chunk === null) {
        return;
      }

      if (_this4.size && accumBytes + chunk.length > _this4.size) {
        abort = true;
        reject(new FetchError("content size at ".concat(_this4.url, " over limit: ").concat(_this4.size), 'max-size'));
        return;
      }

      accumBytes += chunk.length;
      accum.push(chunk);
    });
    body.on('end', function () {
      if (abort) {
        return;
      }

      clearTimeout(resTimeout);

      try {
        resolve(Buffer.concat(accum, accumBytes));
      } catch (err) {
        // handle streams that have accumulated too much data (issue #414)
        reject(new FetchError("Could not create Buffer from response body for ".concat(_this4.url, ": ").concat(err.message), 'system', err));
      }
    });
  });
}
/**
 * Detect buffer encoding and convert to target encoding
 * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding
 *
 * @param   Buffer  buffer    Incoming buffer
 * @param   String  encoding  Target encoding
 * @return  String
 */


function convertBody(buffer, headers) {
  if (typeof convert !== 'function') {
    throw new Error('The package `encoding` must be installed to use the textConverted() function');
  }

  var ct = headers.get('content-type');
  var charset = 'utf-8';
  var res, str; // header

  if (ct) {
    res = /charset=([^;]*)/i.exec(ct);
  } // no charset in content type, peek at response body for at most 1024 bytes


  str = buffer.slice(0, 1024).toString(); // html5

  if (!res && str) {
    res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str);
  } // html4


  if (!res && str) {
    res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str);

    if (!res) {
      res = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(str);

      if (res) {
        res.pop(); // drop last quote
      }
    }

    if (res) {
      res = /charset=(.*)/i.exec(res.pop());
    }
  } // xml


  if (!res && str) {
    res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str);
  } // found charset


  if (res) {
    charset = res.pop(); // prevent decode issues when sites use incorrect encoding
    // ref: https://hsivonen.fi/encoding-menu/

    if (charset === 'gb2312' || charset === 'gbk') {
      charset = 'gb18030';
    }
  } // turn raw buffers into a single utf-8 buffer


  return convert(buffer, 'UTF-8', charset).toString();
}
/**
 * Detect a URLSearchParams object
 * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143
 *
 * @param   Object  obj     Object to detect by type or brand
 * @return  String
 */


function isURLSearchParams(obj) {
  // Duck-typing as a necessary condition.
  if (_typeof(obj) !== 'object' || typeof obj.append !== 'function' || typeof obj["delete"] !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {
    return false;
  } // Brand-checking and more duck-typing as optional condition.


  return obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';
}
/**
 * Check if `obj` is a W3C `Blob` object (which `File` inherits from)
 * @param  {*} obj
 * @return {boolean}
 */


function isBlob(obj) {
  return _typeof(obj) === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
}
/**
 * Clone body given Res/Req instance
 *
 * @param   Mixed  instance  Response or Request instance
 * @return  Mixed
 */


function _clone(instance) {
  var p1, p2;
  var body = instance.body; // don't allow cloning a used body

  if (instance.bodyUsed) {
    throw new Error('cannot clone body after it is used');
  } // check that body is a stream and not form-data object
  // note: we can't clone the form-data object without having it as a dependency


  if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__ && typeof body.getBoundary !== 'function') {
    // tee instance body
    p1 = new PassThrough();
    p2 = new PassThrough();
    body.pipe(p1);
    body.pipe(p2); // set instance body to teed body and return the other teed body

    instance[INTERNALS].body = p1;
    body = p2;
  }

  return body;
}
/**
 * Performs the operation "extract a `Content-Type` value from |object|" as
 * specified in the specification:
 * https://fetch.spec.whatwg.org/#concept-bodyinit-extract
 *
 * This function assumes that instance.body is present.
 *
 * @param   Mixed  instance  Any options.body input
 */


function extractContentType(body) {
  if (body === null) {
    // body is null
    return null;
  } else if (typeof body === 'string') {
    // body is string
    return 'text/plain;charset=UTF-8';
  } else if (isURLSearchParams(body)) {
    // body is a URLSearchParams
    return 'application/x-www-form-urlencoded;charset=UTF-8';
  } else if (isBlob(body)) {
    // body is blob
    return body.type || null;
  } else if (Buffer.isBuffer(body)) {
    // body is buffer
    return null;
  } else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
    // body is ArrayBuffer
    return null;
  } else if (ArrayBuffer.isView(body)) {
    // body is ArrayBufferView
    return null;
  } else if (typeof body.getBoundary === 'function') {
    // detect form data input from form-data module
    return "multipart/form-data;boundary=".concat(body.getBoundary());
  } else if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) {
    // body is stream
    // can't really do much about this
    return null;
  } else {
    // Body constructor defaults other things to string
    return 'text/plain;charset=UTF-8';
  }
}
/**
 * The Fetch Standard treats this as if "total bytes" is a property on the body.
 * For us, we have to explicitly get it with a function.
 *
 * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes
 *
 * @param   Body    instance   Instance of Body
 * @return  Number?            Number of bytes, or null if not possible
 */


function getTotalBytes(instance) {
  var body = instance.body;

  if (body === null) {
    // body is null
    return 0;
  } else if (isBlob(body)) {
    return body.size;
  } else if (Buffer.isBuffer(body)) {
    // body is buffer
    return body.length;
  } else if (body && typeof body.getLengthSync === 'function') {
    // detect form data input from form-data module
    if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x
    body.hasKnownLength && body.hasKnownLength()) {
      // 2.x
      return body.getLengthSync();
    }

    return null;
  } else {
    // body is stream
    return null;
  }
}
/**
 * Write a Body to a Node.js WritableStream (e.g. http.Request) object.
 *
 * @param   Body    instance   Instance of Body
 * @return  Void
 */


function writeToStream(dest, instance) {
  var body = instance.body;

  if (body === null) {
    // body is null
    dest.end();
  } else if (isBlob(body)) {
    body.stream().pipe(dest);
  } else if (Buffer.isBuffer(body)) {
    // body is buffer
    dest.write(body);
    dest.end();
  } else {
    // body is stream
    body.pipe(dest);
  }
} // expose Promise


Body.Promise = global.Promise;
/**
 * headers.js
 *
 * Headers class offers convenient helpers
 */

var invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;
var invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;

function validateName(name) {
  name = "".concat(name);

  if (invalidTokenRegex.test(name) || name === '') {
    throw new TypeError("".concat(name, " is not a legal HTTP header name"));
  }
}

function validateValue(value) {
  value = "".concat(value);

  if (invalidHeaderCharRegex.test(value)) {
    throw new TypeError("".concat(value, " is not a legal HTTP header value"));
  }
}
/**
 * Find the key in the map object given a header name.
 *
 * Returns undefined if not found.
 *
 * @param   String  name  Header name
 * @return  String|Undefined
 */


function find(map, name) {
  name = name.toLowerCase();

  for (var key in map) {
    if (key.toLowerCase() === name) {
      return key;
    }
  }

  return undefined;
}

var MAP = Symbol('map');

var Headers = /*#__PURE__*/function (_Symbol$iterator) {
  /**
   * Headers class
   *
   * @param   Object  headers  Response headers
   * @return  Void
   */
  function Headers() {
    _classCallCheck(this, Headers);

    var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
    this[MAP] = Object.create(null);

    if (init instanceof Headers) {
      var rawHeaders = init.raw();
      var headerNames = Object.keys(rawHeaders);

      for (var _i = 0, _headerNames = headerNames; _i < _headerNames.length; _i++) {
        var headerName = _headerNames[_i];

        var _iterator2 = _createForOfIteratorHelper(rawHeaders[headerName]),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var value = _step2.value;
            this.append(headerName, value);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }

      return;
    } // We don't worry about converting prop to ByteString here as append()
    // will handle it.


    if (init == null) ;else if (_typeof(init) === 'object') {
      var method = init[Symbol.iterator];

      if (method != null) {
        if (typeof method !== 'function') {
          throw new TypeError('Header pairs must be iterable');
        } // sequence<sequence<ByteString>>
        // Note: per spec we have to first exhaust the lists then process them


        var pairs = [];

        var _iterator3 = _createForOfIteratorHelper(init),
            _step3;

        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            var _pair = _step3.value;

            if (_typeof(_pair) !== 'object' || typeof _pair[Symbol.iterator] !== 'function') {
              throw new TypeError('Each header pair must be iterable');
            }

            pairs.push(Array.from(_pair));
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }

        for (var _i2 = 0, _pairs = pairs; _i2 < _pairs.length; _i2++) {
          var pair = _pairs[_i2];

          if (pair.length !== 2) {
            throw new TypeError('Each header pair must be a name/value tuple');
          }

          this.append(pair[0], pair[1]);
        }
      } else {
        // record<ByteString, ByteString>
        for (var _i3 = 0, _Object$keys = Object.keys(init); _i3 < _Object$keys.length; _i3++) {
          var key = _Object$keys[_i3];
          var _value = init[key];
          this.append(key, _value);
        }
      }
    } else {
      throw new TypeError('Provided initializer must be an object');
    }
  }
  /**
   * Return combined header value given name
   *
   * @param   String  name  Header name
   * @return  Mixed
   */


  _createClass(Headers, [{
    key: "get",
    value: function get(name) {
      name = "".concat(name);
      validateName(name);
      var key = find(this[MAP], name);

      if (key === undefined) {
        return null;
      }

      return this[MAP][key].join(', ');
    }
    /**
     * Iterate over all headers
     *
     * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
     * @param   Boolean   thisArg   `this` context for callback function
     * @return  Void
     */

  }, {
    key: "forEach",
    value: function forEach(callback) {
      var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
      var pairs = getHeaders(this);
      var i = 0;

      while (i < pairs.length) {
        var _pairs$i = pairs[i];
        var name = _pairs$i[0],
            value = _pairs$i[1];
        callback.call(thisArg, value, name, this);
        pairs = getHeaders(this);
        i++;
      }
    }
    /**
     * Overwrite header values given name
     *
     * @param   String  name   Header name
     * @param   String  value  Header value
     * @return  Void
     */

  }, {
    key: "set",
    value: function set(name, value) {
      name = "".concat(name);
      value = "".concat(value);
      validateName(name);
      validateValue(value);
      var key = find(this[MAP], name);
      this[MAP][key !== undefined ? key : name] = [value];
    }
    /**
     * Append a value onto existing header
     *
     * @param   String  name   Header name
     * @param   String  value  Header value
     * @return  Void
     */

  }, {
    key: "append",
    value: function append(name, value) {
      name = "".concat(name);
      value = "".concat(value);
      validateName(name);
      validateValue(value);
      var key = find(this[MAP], name);

      if (key !== undefined) {
        this[MAP][key].push(value);
      } else {
        this[MAP][name] = [value];
      }
    }
    /**
     * Check for header name existence
     *
     * @param   String   name  Header name
     * @return  Boolean
     */

  }, {
    key: "has",
    value: function has(name) {
      name = "".concat(name);
      validateName(name);
      return find(this[MAP], name) !== undefined;
    }
    /**
     * Delete all header values given name
     *
     * @param   String  name  Header name
     * @return  Void
     */

  }, {
    key: "delete",
    value: function _delete(name) {
      name = "".concat(name);
      validateName(name);
      var key = find(this[MAP], name);

      if (key !== undefined) {
        delete this[MAP][key];
      }
    }
    /**
     * Return raw headers (non-spec api)
     *
     * @return  Object
     */

  }, {
    key: "raw",
    value: function raw() {
      return this[MAP];
    }
    /**
     * Get an iterator on keys.
     *
     * @return  Iterator
     */

  }, {
    key: "keys",
    value: function keys() {
      return createHeadersIterator(this, 'key');
    }
    /**
     * Get an iterator on values.
     *
     * @return  Iterator
     */

  }, {
    key: "values",
    value: function values() {
      return createHeadersIterator(this, 'value');
    }
    /**
     * Get an iterator on entries.
     *
     * This is the default iterator of the Headers object.
     *
     * @return  Iterator
     */

  }, {
    key: _Symbol$iterator,
    value: function value() {
      return createHeadersIterator(this, 'key+value');
    }
  }]);

  return Headers;
}(Symbol.iterator);

Headers.prototype.entries = Headers.prototype[Symbol.iterator];
Object.defineProperty(Headers.prototype, Symbol.toStringTag, {
  value: 'Headers',
  writable: false,
  enumerable: false,
  configurable: true
});
Object.defineProperties(Headers.prototype, {
  get: {
    enumerable: true
  },
  forEach: {
    enumerable: true
  },
  set: {
    enumerable: true
  },
  append: {
    enumerable: true
  },
  has: {
    enumerable: true
  },
  "delete": {
    enumerable: true
  },
  keys: {
    enumerable: true
  },
  values: {
    enumerable: true
  },
  entries: {
    enumerable: true
  }
});

function getHeaders(headers) {
  var kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';
  var keys = Object.keys(headers[MAP]).sort();
  return keys.map(kind === 'key' ? function (k) {
    return k.toLowerCase();
  } : kind === 'value' ? function (k) {
    return headers[MAP][k].join(', ');
  } : function (k) {
    return [k.toLowerCase(), headers[MAP][k].join(', ')];
  });
}

var INTERNAL = Symbol('internal');

function createHeadersIterator(target, kind) {
  var iterator = Object.create(HeadersIteratorPrototype);
  iterator[INTERNAL] = {
    target: target,
    kind: kind,
    index: 0
  };
  return iterator;
}

var HeadersIteratorPrototype = Object.setPrototypeOf({
  next: function next() {
    // istanbul ignore if
    if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {
      throw new TypeError('Value of `this` is not a HeadersIterator');
    }

    var _INTERNAL = this[INTERNAL];
    var target = _INTERNAL.target,
        kind = _INTERNAL.kind,
        index = _INTERNAL.index;
    var values = getHeaders(target, kind);
    var len = values.length;

    if (index >= len) {
      return {
        value: undefined,
        done: true
      };
    }

    this[INTERNAL].index = index + 1;
    return {
      value: values[index],
      done: false
    };
  }
}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));
Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
  value: 'HeadersIterator',
  writable: false,
  enumerable: false,
  configurable: true
});
/**
 * Export the Headers object in a form that Node.js can consume.
 *
 * @param   Headers  headers
 * @return  Object
 */

function exportNodeCompatibleHeaders(headers) {
  var obj = Object.assign({
    __proto__: null
  }, headers[MAP]); // http.request() only supports string as Host header. This hack makes
  // specifying custom Host header possible.

  var hostHeaderKey = find(headers[MAP], 'Host');

  if (hostHeaderKey !== undefined) {
    obj[hostHeaderKey] = obj[hostHeaderKey][0];
  }

  return obj;
}
/**
 * Create a Headers object from an object of headers, ignoring those that do
 * not conform to HTTP grammar productions.
 *
 * @param   Object  obj  Object of headers
 * @return  Headers
 */


function createHeadersLenient(obj) {
  var headers = new Headers();

  for (var _i4 = 0, _Object$keys2 = Object.keys(obj); _i4 < _Object$keys2.length; _i4++) {
    var name = _Object$keys2[_i4];

    if (invalidTokenRegex.test(name)) {
      continue;
    }

    if (Array.isArray(obj[name])) {
      var _iterator4 = _createForOfIteratorHelper(obj[name]),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var val = _step4.value;

          if (invalidHeaderCharRegex.test(val)) {
            continue;
          }

          if (headers[MAP][name] === undefined) {
            headers[MAP][name] = [val];
          } else {
            headers[MAP][name].push(val);
          }
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    } else if (!invalidHeaderCharRegex.test(obj[name])) {
      headers[MAP][name] = [obj[name]];
    }
  }

  return headers;
}

var INTERNALS$1 = Symbol('Response internals'); // fix an issue where "STATUS_CODES" aren't a named export for node <10

var STATUS_CODES = http__WEBPACK_IMPORTED_MODULE_1__.STATUS_CODES;
/**
 * Response class
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */

var Response = /*#__PURE__*/function () {
  function Response() {
    _classCallCheck(this, Response);

    var body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    Body.call(this, body, opts);
    var status = opts.status || 200;
    var headers = new Headers(opts.headers);

    if (body != null && !headers.has('Content-Type')) {
      var contentType = extractContentType(body);

      if (contentType) {
        headers.append('Content-Type', contentType);
      }
    }

    this[INTERNALS$1] = {
      url: opts.url,
      status: status,
      statusText: opts.statusText || STATUS_CODES[status],
      headers: headers,
      counter: opts.counter
    };
  }

  _createClass(Response, [{
    key: "url",
    get: function get() {
      return this[INTERNALS$1].url || '';
    }
  }, {
    key: "status",
    get: function get() {
      return this[INTERNALS$1].status;
    }
    /**
     * Convenience property representing if the request ended normally
     */

  }, {
    key: "ok",
    get: function get() {
      return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
    }
  }, {
    key: "redirected",
    get: function get() {
      return this[INTERNALS$1].counter > 0;
    }
  }, {
    key: "statusText",
    get: function get() {
      return this[INTERNALS$1].statusText;
    }
  }, {
    key: "headers",
    get: function get() {
      return this[INTERNALS$1].headers;
    }
    /**
     * Clone this response
     *
     * @return  Response
     */

  }, {
    key: "clone",
    value: function clone() {
      return new Response(_clone(this), {
        url: this.url,
        status: this.status,
        statusText: this.statusText,
        headers: this.headers,
        ok: this.ok,
        redirected: this.redirected
      });
    }
  }]);

  return Response;
}();

Body.mixIn(Response.prototype);
Object.defineProperties(Response.prototype, {
  url: {
    enumerable: true
  },
  status: {
    enumerable: true
  },
  ok: {
    enumerable: true
  },
  redirected: {
    enumerable: true
  },
  statusText: {
    enumerable: true
  },
  headers: {
    enumerable: true
  },
  clone: {
    enumerable: true
  }
});
Object.defineProperty(Response.prototype, Symbol.toStringTag, {
  value: 'Response',
  writable: false,
  enumerable: false,
  configurable: true
});
var INTERNALS$2 = Symbol('Request internals');
var URL = url__WEBPACK_IMPORTED_MODULE_2__.URL || whatwg_url__WEBPACK_IMPORTED_MODULE_3__.URL; // fix an issue where "format", "parse" aren't a named export for node <10

var parse_url = url__WEBPACK_IMPORTED_MODULE_2__.parse;
var format_url = url__WEBPACK_IMPORTED_MODULE_2__.format;
/**
 * Wrapper around `new URL` to handle arbitrary URLs
 *
 * @param  {string} urlStr
 * @return {void}
 */

function parseURL(urlStr) {
  /*
  	Check whether the URL is absolute or not
  		Scheme: https://tools.ietf.org/html/rfc3986#section-3.1
  	Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3
  */
  if (/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(urlStr)) {
    urlStr = new URL(urlStr).toString();
  } // Fallback to old implementation for arbitrary URLs


  return parse_url(urlStr);
}

var streamDestructionSupported = ('destroy' in stream__WEBPACK_IMPORTED_MODULE_0__.Readable.prototype);
/**
 * Check if a value is an instance of Request.
 *
 * @param   Mixed   input
 * @return  Boolean
 */

function isRequest(input) {
  return _typeof(input) === 'object' && _typeof(input[INTERNALS$2]) === 'object';
}

function isAbortSignal(signal) {
  var proto = signal && _typeof(signal) === 'object' && Object.getPrototypeOf(signal);
  return !!(proto && proto.constructor.name === 'AbortSignal');
}
/**
 * Request class
 *
 * @param   Mixed   input  Url or Request instance
 * @param   Object  init   Custom options
 * @return  Void
 */


var Request = /*#__PURE__*/function () {
  function Request(input) {
    _classCallCheck(this, Request);

    var init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var parsedURL; // normalize input

    if (!isRequest(input)) {
      if (input && input.href) {
        // in order to support Node.js' Url objects; though WHATWG's URL objects
        // will fall into this branch also (since their `toString()` will return
        // `href` property anyway)
        parsedURL = parseURL(input.href);
      } else {
        // coerce input to a string before attempting to parse
        parsedURL = parseURL("".concat(input));
      }

      input = {};
    } else {
      parsedURL = parseURL(input.url);
    }

    var method = init.method || input.method || 'GET';
    method = method.toUpperCase();

    if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {
      throw new TypeError('Request with GET/HEAD method cannot have body');
    }

    var inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? _clone(input) : null;
    Body.call(this, inputBody, {
      timeout: init.timeout || input.timeout || 0,
      size: init.size || input.size || 0
    });
    var headers = new Headers(init.headers || input.headers || {});

    if (inputBody != null && !headers.has('Content-Type')) {
      var contentType = extractContentType(inputBody);

      if (contentType) {
        headers.append('Content-Type', contentType);
      }
    }

    var signal = isRequest(input) ? input.signal : null;
    if ('signal' in init) signal = init.signal;

    if (signal != null && !isAbortSignal(signal)) {
      throw new TypeError('Expected signal to be an instanceof AbortSignal');
    }

    this[INTERNALS$2] = {
      method: method,
      redirect: init.redirect || input.redirect || 'follow',
      headers: headers,
      parsedURL: parsedURL,
      signal: signal
    }; // node-fetch-only options

    this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;
    this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;
    this.counter = init.counter || input.counter || 0;
    this.agent = init.agent || input.agent;
  }

  _createClass(Request, [{
    key: "method",
    get: function get() {
      return this[INTERNALS$2].method;
    }
  }, {
    key: "url",
    get: function get() {
      return format_url(this[INTERNALS$2].parsedURL);
    }
  }, {
    key: "headers",
    get: function get() {
      return this[INTERNALS$2].headers;
    }
  }, {
    key: "redirect",
    get: function get() {
      return this[INTERNALS$2].redirect;
    }
  }, {
    key: "signal",
    get: function get() {
      return this[INTERNALS$2].signal;
    }
    /**
     * Clone this request
     *
     * @return  Request
     */

  }, {
    key: "clone",
    value: function clone() {
      return new Request(this);
    }
  }]);

  return Request;
}();

Body.mixIn(Request.prototype);
Object.defineProperty(Request.prototype, Symbol.toStringTag, {
  value: 'Request',
  writable: false,
  enumerable: false,
  configurable: true
});
Object.defineProperties(Request.prototype, {
  method: {
    enumerable: true
  },
  url: {
    enumerable: true
  },
  headers: {
    enumerable: true
  },
  redirect: {
    enumerable: true
  },
  clone: {
    enumerable: true
  },
  signal: {
    enumerable: true
  }
});
/**
 * Convert a Request to Node.js http request options.
 *
 * @param   Request  A Request instance
 * @return  Object   The options object to be passed to http.request
 */

function getNodeRequestOptions(request) {
  var parsedURL = request[INTERNALS$2].parsedURL;
  var headers = new Headers(request[INTERNALS$2].headers); // fetch step 1.3

  if (!headers.has('Accept')) {
    headers.set('Accept', '*/*');
  } // Basic fetch


  if (!parsedURL.protocol || !parsedURL.hostname) {
    throw new TypeError('Only absolute URLs are supported');
  }

  if (!/^https?:$/.test(parsedURL.protocol)) {
    throw new TypeError('Only HTTP(S) protocols are supported');
  }

  if (request.signal && request.body instanceof stream__WEBPACK_IMPORTED_MODULE_0__.Readable && !streamDestructionSupported) {
    throw new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');
  } // HTTP-network-or-cache fetch steps 2.4-2.7


  var contentLengthValue = null;

  if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {
    contentLengthValue = '0';
  }

  if (request.body != null) {
    var totalBytes = getTotalBytes(request);

    if (typeof totalBytes === 'number') {
      contentLengthValue = String(totalBytes);
    }
  }

  if (contentLengthValue) {
    headers.set('Content-Length', contentLengthValue);
  } // HTTP-network-or-cache fetch step 2.11


  if (!headers.has('User-Agent')) {
    headers.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');
  } // HTTP-network-or-cache fetch step 2.15


  if (request.compress && !headers.has('Accept-Encoding')) {
    headers.set('Accept-Encoding', 'gzip,deflate');
  }

  var agent = request.agent;

  if (typeof agent === 'function') {
    agent = agent(parsedURL);
  }

  if (!headers.has('Connection') && !agent) {
    headers.set('Connection', 'close');
  } // HTTP-network fetch step 4.2
  // chunked encoding is handled by Node.js


  return Object.assign({}, parsedURL, {
    method: request.method,
    headers: exportNodeCompatibleHeaders(headers),
    agent: agent
  });
}
/**
 * abort-error.js
 *
 * AbortError interface for cancelled requests
 */

/**
 * Create AbortError instance
 *
 * @param   String      message      Error message for human
 * @return  AbortError
 */


function AbortError(message) {
  Error.call(this, message);
  this.type = 'aborted';
  this.message = message; // hide custom error implementation details from end-users

  Error.captureStackTrace(this, this.constructor);
}

AbortError.prototype = Object.create(Error.prototype);
AbortError.prototype.constructor = AbortError;
AbortError.prototype.name = 'AbortError';
var URL$1 = url__WEBPACK_IMPORTED_MODULE_2__.URL || whatwg_url__WEBPACK_IMPORTED_MODULE_3__.URL; // fix an issue where "PassThrough", "resolve" aren't a named export for node <10

var PassThrough$1 = stream__WEBPACK_IMPORTED_MODULE_0__.PassThrough;

var isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {
  var orig = new URL$1(original).hostname;
  var dest = new URL$1(destination).hostname;
  return orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);
};
/**
 * Fetch function
 *
 * @param   Mixed    url   Absolute url or Request instance
 * @param   Object   opts  Fetch options
 * @return  Promise
 */


function fetch(url, opts) {
  // allow custom promise
  if (!fetch.Promise) {
    throw new Error('native promise missing, set fetch.Promise to your favorite alternative');
  }

  Body.Promise = fetch.Promise; // wrap http.request into fetch

  return new fetch.Promise(function (resolve, reject) {
    // build request object
    var request = new Request(url, opts);
    var options = getNodeRequestOptions(request);
    var send = (options.protocol === 'https:' ? https__WEBPACK_IMPORTED_MODULE_4__ : http__WEBPACK_IMPORTED_MODULE_1__).request;
    var signal = request.signal;
    var response = null;

    var abort = function abort() {
      var error = new AbortError('The user aborted a request.');
      reject(error);

      if (request.body && request.body instanceof stream__WEBPACK_IMPORTED_MODULE_0__.Readable) {
        request.body.destroy(error);
      }

      if (!response || !response.body) return;
      response.body.emit('error', error);
    };

    if (signal && signal.aborted) {
      abort();
      return;
    }

    var abortAndFinalize = function abortAndFinalize() {
      abort();
      finalize();
    }; // send request


    var req = send(options);
    var reqTimeout;

    if (signal) {
      signal.addEventListener('abort', abortAndFinalize);
    }

    function finalize() {
      req.abort();
      if (signal) signal.removeEventListener('abort', abortAndFinalize);
      clearTimeout(reqTimeout);
    }

    if (request.timeout) {
      req.once('socket', function (socket) {
        reqTimeout = setTimeout(function () {
          reject(new FetchError("network timeout at: ".concat(request.url), 'request-timeout'));
          finalize();
        }, request.timeout);
      });
    }

    req.on('error', function (err) {
      reject(new FetchError("request to ".concat(request.url, " failed, reason: ").concat(err.message), 'system', err));
      finalize();
    });
    req.on('response', function (res) {
      clearTimeout(reqTimeout);
      var headers = createHeadersLenient(res.headers); // HTTP fetch step 5

      if (fetch.isRedirect(res.statusCode)) {
        // HTTP fetch step 5.2
        var location = headers.get('Location'); // HTTP fetch step 5.3

        var locationURL = null;

        try {
          locationURL = location === null ? null : new URL$1(location, request.url).toString();
        } catch (err) {
          // error here can only be invalid URL in Location: header
          // do not throw when options.redirect == manual
          // let the user extract the errorneous redirect URL
          if (request.redirect !== 'manual') {
            reject(new FetchError("uri requested responds with an invalid redirect URL: ".concat(location), 'invalid-redirect'));
            finalize();
            return;
          }
        } // HTTP fetch step 5.5


        switch (request.redirect) {
          case 'error':
            reject(new FetchError("uri requested responds with a redirect, redirect mode is set to error: ".concat(request.url), 'no-redirect'));
            finalize();
            return;

          case 'manual':
            // node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.
            if (locationURL !== null) {
              // handle corrupted header
              try {
                headers.set('Location', locationURL);
              } catch (err) {
                // istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request
                reject(err);
              }
            }

            break;

          case 'follow':
            // HTTP-redirect fetch step 2
            if (locationURL === null) {
              break;
            } // HTTP-redirect fetch step 5


            if (request.counter >= request.follow) {
              reject(new FetchError("maximum redirect reached at: ".concat(request.url), 'max-redirect'));
              finalize();
              return;
            } // HTTP-redirect fetch step 6 (counter increment)
            // Create a new Request object.


            var requestOpts = {
              headers: new Headers(request.headers),
              follow: request.follow,
              counter: request.counter + 1,
              agent: request.agent,
              compress: request.compress,
              method: request.method,
              body: request.body,
              signal: request.signal,
              timeout: request.timeout,
              size: request.size
            };

            if (!isDomainOrSubdomain(request.url, locationURL)) {
              for (var _i5 = 0, _arr = ['authorization', 'www-authenticate', 'cookie', 'cookie2']; _i5 < _arr.length; _i5++) {
                var name = _arr[_i5];
                requestOpts.headers["delete"](name);
              }
            } // HTTP-redirect fetch step 9


            if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {
              reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));
              finalize();
              return;
            } // HTTP-redirect fetch step 11


            if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {
              requestOpts.method = 'GET';
              requestOpts.body = undefined;
              requestOpts.headers["delete"]('content-length');
            } // HTTP-redirect fetch step 15


            resolve(fetch(new Request(locationURL, requestOpts)));
            finalize();
            return;
        }
      } // prepare response


      res.once('end', function () {
        if (signal) signal.removeEventListener('abort', abortAndFinalize);
      });
      var body = res.pipe(new PassThrough$1());
      var response_options = {
        url: request.url,
        status: res.statusCode,
        statusText: res.statusMessage,
        headers: headers,
        size: request.size,
        timeout: request.timeout,
        counter: request.counter
      }; // HTTP-network fetch step 12.1.1.3

      var codings = headers.get('Content-Encoding'); // HTTP-network fetch step 12.1.1.4: handle content codings
      // in following scenarios we ignore compression support
      // 1. compression support is disabled
      // 2. HEAD request
      // 3. no Content-Encoding header
      // 4. no content response (204)
      // 5. content not modified response (304)

      if (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {
        response = new Response(body, response_options);
        resolve(response);
        return;
      } // For Node v6+
      // Be less strict when decoding compressed responses, since sometimes
      // servers send slightly invalid responses that are still accepted
      // by common browsers.
      // Always using Z_SYNC_FLUSH is what cURL does.


      var zlibOptions = {
        flush: zlib__WEBPACK_IMPORTED_MODULE_5__.Z_SYNC_FLUSH,
        finishFlush: zlib__WEBPACK_IMPORTED_MODULE_5__.Z_SYNC_FLUSH
      }; // for gzip

      if (codings == 'gzip' || codings == 'x-gzip') {
        body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_5__.createGunzip(zlibOptions));
        response = new Response(body, response_options);
        resolve(response);
        return;
      } // for deflate


      if (codings == 'deflate' || codings == 'x-deflate') {
        // handle the infamous raw deflate response from old servers
        // a hack for old IIS and Apache servers
        var raw = res.pipe(new PassThrough$1());
        raw.once('data', function (chunk) {
          // see http://stackoverflow.com/questions/37519828
          if ((chunk[0] & 0x0F) === 0x08) {
            body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_5__.createInflate());
          } else {
            body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_5__.createInflateRaw());
          }

          response = new Response(body, response_options);
          resolve(response);
        });
        return;
      } // for br


      if (codings == 'br' && typeof zlib__WEBPACK_IMPORTED_MODULE_5__.createBrotliDecompress === 'function') {
        body = body.pipe(zlib__WEBPACK_IMPORTED_MODULE_5__.createBrotliDecompress());
        response = new Response(body, response_options);
        resolve(response);
        return;
      } // otherwise, use response as-is


      response = new Response(body, response_options);
      resolve(response);
    });
    writeToStream(req, request);
  });
}
/**
 * Redirect code matching
 *
 * @param   Number   code  Status code
 * @return  Boolean
 */


fetch.isRedirect = function (code) {
  return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;
}; // expose Promise


fetch.Promise = global.Promise;
/* harmony default export */ __webpack_exports__["default"] = (fetch);


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(6);

var call = __webpack_require__(13);

var propertyIsEnumerableModule = __webpack_require__(135);

var createPropertyDescriptor = __webpack_require__(46);

var toIndexedObject = __webpack_require__(34);

var toPropertyKey = __webpack_require__(70);

var hasOwn = __webpack_require__(14);

var IE8_DOM_DEFINE = __webpack_require__(229); // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe


var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor; // `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor

exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPropertyKey(P);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) {
    /* empty */
  }
  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
};

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var isCallable = __webpack_require__(9);

var tryToString = __webpack_require__(108);

var TypeError = global.TypeError; // `Assert: IsCallable(argument) is true`

module.exports = function (argument) {
  if (isCallable(argument)) return argument;
  throw TypeError(tryToString(argument) + ' is not a function');
};

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(6);

var definePropertyModule = __webpack_require__(12);

var createPropertyDescriptor = __webpack_require__(46);

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var bind = __webpack_require__(277); // utils is a library of generic helper functions non-specific to axios


var toString = Object.prototype.toString;
/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */

function isArray(val) {
  return Array.isArray(val);
}
/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */


function isUndefined(val) {
  return typeof val === 'undefined';
}
/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */


function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}
/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */


function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}
/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */


function isFormData(val) {
  return toString.call(val) === '[object FormData]';
}
/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */


function isArrayBufferView(val) {
  var result;

  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
    result = ArrayBuffer.isView(val);
  } else {
    result = val && val.buffer && isArrayBuffer(val.buffer);
  }

  return result;
}
/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */


function isString(val) {
  return typeof val === 'string';
}
/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */


function isNumber(val) {
  return typeof val === 'number';
}
/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */


function isObject(val) {
  return val !== null && _typeof(val) === 'object';
}
/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */


function isPlainObject(val) {
  if (toString.call(val) !== '[object Object]') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}
/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */


function isDate(val) {
  return toString.call(val) === '[object Date]';
}
/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */


function isFile(val) {
  return toString.call(val) === '[object File]';
}
/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */


function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}
/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */


function isFunction(val) {
  return toString.call(val) === '[object Function]';
}
/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */


function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}
/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */


function isURLSearchParams(val) {
  return toString.call(val) === '[object URLSearchParams]';
}
/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */


function trim(str) {
  return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, '');
}
/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */


function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' || navigator.product === 'NativeScript' || navigator.product === 'NS')) {
    return false;
  }

  return typeof window !== 'undefined' && typeof document !== 'undefined';
}
/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */


function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  } // Force an array if not already something iterable


  if (_typeof(obj) !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}
/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */


function
  /* obj1, obj2, obj3, ... */
merge() {
  var result = {};

  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }

  return result;
}
/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */


function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}
/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */


function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }

  return content;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM
};

/***/ }),
/* 32 */
/***/ (function(module, exports) {

module.exports = require("url");

/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FragmentMeta; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * @hidden
 * Class providing meta data about a fragment of content with helper functions.
 */
var FragmentMeta = /*#__PURE__*/function () {
  /**
   * Creates a new FragmentMeta instance.
   * @param data JSON representation of the FragmentMeta model
   */
  function FragmentMeta(data) {
    _classCallCheck(this, FragmentMeta);

    if (data) {
      Object.assign(this, data);
    }
  }
  /**
   * Export to JSON
   */


  _createClass(FragmentMeta, [{
    key: "toJSON",
    value: function toJSON() {
      return {
        schema: this.schema
      };
    }
    /**
     * @hidden
     * Returns true if the provided node contains meta data to self-describe the JSON schema it was created against.
     * @param node JSON node to test
     */

  }], [{
    key: "isFragment",
    value: function isFragment(node) {
      return node != null && node._meta != null && node._meta.schema != null;
    }
  }]);

  return FragmentMeta;
}();

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(107);

var requireObjectCoercible = __webpack_require__(20);

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__(234);

var hasOwn = __webpack_require__(14);

var wrappedWellKnownSymbolModule = __webpack_require__(233);

var defineProperty = __webpack_require__(12).f;

module.exports = function (NAME) {
  var _Symbol = path.Symbol || (path.Symbol = {});

  if (!hasOwn(_Symbol, NAME)) defineProperty(_Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var bind = __webpack_require__(314); // utils is a library of generic helper functions non-specific to axios


var toString = Object.prototype.toString;
/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */

function isArray(val) {
  return toString.call(val) === '[object Array]';
}
/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */


function isUndefined(val) {
  return typeof val === 'undefined';
}
/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */


function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}
/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */


function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}
/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */


function isFormData(val) {
  return typeof FormData !== 'undefined' && val instanceof FormData;
}
/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */


function isArrayBufferView(val) {
  var result;

  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
    result = ArrayBuffer.isView(val);
  } else {
    result = val && val.buffer && val.buffer instanceof ArrayBuffer;
  }

  return result;
}
/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */


function isString(val) {
  return typeof val === 'string';
}
/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */


function isNumber(val) {
  return typeof val === 'number';
}
/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */


function isObject(val) {
  return val !== null && _typeof(val) === 'object';
}
/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */


function isPlainObject(val) {
  if (toString.call(val) !== '[object Object]') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}
/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */


function isDate(val) {
  return toString.call(val) === '[object Date]';
}
/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */


function isFile(val) {
  return toString.call(val) === '[object File]';
}
/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */


function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}
/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */


function isFunction(val) {
  return toString.call(val) === '[object Function]';
}
/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */


function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}
/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */


function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}
/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */


function trim(str) {
  return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, '');
}
/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */


function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' || navigator.product === 'NativeScript' || navigator.product === 'NS')) {
    return false;
  }

  return typeof window !== 'undefined' && typeof document !== 'undefined';
}
/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */


function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  } // Force an array if not already something iterable


  if (_typeof(obj) !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}
/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */


function
  /* obj1, obj2, obj3, ... */
merge() {
  var result = {};

  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }

  return result;
}
/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */


function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}
/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */


function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }

  return content;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM
};

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

var uncurryThis = __webpack_require__(3);

var toString = uncurryThis({}.toString);
var stringSlice = uncurryThis(''.slice);

module.exports = function (it) {
  return stringSlice(toString(it), 8, -1);
};

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

var uncurryThis = __webpack_require__(3);

module.exports = uncurryThis({}.isPrototypeOf);

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

var toIntegerOrInfinity = __webpack_require__(22);

var min = Math.min; // `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength

module.exports = function (argument) {
  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};

/***/ }),
/* 40 */
/***/ (function(module, exports) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var FunctionPrototype = Function.prototype;
var apply = FunctionPrototype.apply;
var bind = FunctionPrototype.bind;
var call = FunctionPrototype.call; // eslint-disable-next-line es/no-reflect -- safe

module.exports = (typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) == 'object' && Reflect.apply || (bind ? call.bind(apply) : function () {
  return call.apply(apply, arguments);
});

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

/* global ActiveXObject -- old IE, WSH */
var anObject = __webpack_require__(5);

var defineProperties = __webpack_require__(141);

var enumBugKeys = __webpack_require__(177);

var hiddenKeys = __webpack_require__(109);

var html = __webpack_require__(232);

var documentCreateElement = __webpack_require__(137);

var sharedKey = __webpack_require__(139);

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function EmptyConstructor() {
  /* empty */
};

var scriptTag = function scriptTag(content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
}; // Create object with fake `null` prototype: use ActiveX Object with cleared prototype


var NullProtoObjectViaActiveX = function NullProtoObjectViaActiveX(activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak

  return temp;
}; // Create object with fake `null` prototype: use iframe Object with cleared prototype


var NullProtoObjectViaIFrame = function NullProtoObjectViaIFrame() {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe); // https://github.com/zloirock/core-js/issues/475

  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
}; // Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug


var activeXDocument;

var _NullProtoObject = function NullProtoObject() {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) {
    /* ignore */
  }

  _NullProtoObject = typeof document != 'undefined' ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) // old IE
  : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument); // WSH

  var length = enumBugKeys.length;

  while (length--) {
    delete _NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  }

  return _NullProtoObject();
};

hiddenKeys[IE_PROTO] = true; // `Object.create` method
// https://tc39.es/ecma262/#sec-object.create

module.exports = Object.create || function create(O, Properties) {
  var result;

  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null; // add "__proto__" for Object.getPrototypeOf polyfill

    result[IE_PROTO] = O;
  } else result = _NullProtoObject();

  return Properties === undefined ? result : defineProperties(result, Properties);
};

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

var uncurryThis = __webpack_require__(3);

var requireObjectCoercible = __webpack_require__(20);

var toString = __webpack_require__(10);

var quot = /"/g;
var replace = uncurryThis(''.replace); // `CreateHTML` abstract operation
// https://tc39.es/ecma262/#sec-createhtml

module.exports = function (string, tag, attribute, value) {
  var S = toString(requireObjectCoercible(string));
  var p1 = '<' + tag;
  if (attribute !== '') p1 += ' ' + attribute + '="' + replace(toString(value), quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(4); // check the existence of a method, lowercase
// of a tag and escaping quotes in arguments


module.exports = function (METHOD_NAME) {
  return fails(function () {
    var test = ''[METHOD_NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  });
};

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* eslint no-console: 0 */


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var urllib = __webpack_require__(32);

var util = __webpack_require__(82);

var fs = __webpack_require__(125);

var fetch = __webpack_require__(165);

var dns = __webpack_require__(289);

var net = __webpack_require__(166);

var os = __webpack_require__(163);

var DNS_TTL = 5 * 60 * 1000;
var networkInterfaces = module.exports.networkInterfaces = os.networkInterfaces();

var resolver = function resolver(family, hostname, callback) {
  var familySupported = // crux that replaces Object.values(networkInterfaces) as Object.values is not supported in nodejs v6
  Object.keys(networkInterfaces).map(function (key) {
    return networkInterfaces[key];
  }) // crux that replaces .flat() as it is not supported in older Node versions (v10 and older)
  .reduce(function (acc, val) {
    return acc.concat(val);
  }, []).filter(function (i) {
    return !i.internal;
  }).filter(function (i) {
    return i.family === 'IPv' + family;
  }).length > 0;

  if (!familySupported) {
    return callback(null, []);
  }

  dns['resolve' + family](hostname, function (err, addresses) {
    if (err) {
      switch (err.code) {
        case dns.NODATA:
        case dns.NOTFOUND:
        case dns.NOTIMP:
        case dns.SERVFAIL:
        case dns.CONNREFUSED:
        case 'EAI_AGAIN':
          return callback(null, []);
      }

      return callback(err);
    }

    return callback(null, Array.isArray(addresses) ? addresses : [].concat(addresses || []));
  });
};

var dnsCache = module.exports.dnsCache = new Map();

var formatDNSValue = function formatDNSValue(value, extra) {
  if (!value) {
    return Object.assign({}, extra || {});
  }

  return Object.assign({
    servername: value.servername,
    host: !value.addresses || !value.addresses.length ? null : value.addresses.length === 1 ? value.addresses[0] : value.addresses[Math.floor(Math.random() * value.addresses.length)]
  }, extra || {});
};

module.exports.resolveHostname = function (options, callback) {
  options = options || {};

  if (!options.host && options.servername) {
    options.host = options.servername;
  }

  if (!options.host || net.isIP(options.host)) {
    // nothing to do here
    var value = {
      addresses: [options.host],
      servername: options.servername || false
    };
    return callback(null, formatDNSValue(value, {
      cached: false
    }));
  }

  var cached;

  if (dnsCache.has(options.host)) {
    cached = dnsCache.get(options.host);

    if (!cached.expires || cached.expires >= Date.now()) {
      return callback(null, formatDNSValue(cached.value, {
        cached: true
      }));
    }
  }

  resolver(4, options.host, function (err, addresses) {
    if (err) {
      if (cached) {
        // ignore error, use expired value
        return callback(null, formatDNSValue(cached.value, {
          cached: true,
          error: err
        }));
      }

      return callback(err);
    }

    if (addresses && addresses.length) {
      var _value = {
        addresses: addresses,
        servername: options.servername || options.host
      };
      dnsCache.set(options.host, {
        value: _value,
        expires: Date.now() + DNS_TTL
      });
      return callback(null, formatDNSValue(_value, {
        cached: false
      }));
    }

    resolver(6, options.host, function (err, addresses) {
      if (err) {
        if (cached) {
          // ignore error, use expired value
          return callback(null, formatDNSValue(cached.value, {
            cached: true,
            error: err
          }));
        }

        return callback(err);
      }

      if (addresses && addresses.length) {
        var _value2 = {
          addresses: addresses,
          servername: options.servername || options.host
        };
        dnsCache.set(options.host, {
          value: _value2,
          expires: Date.now() + DNS_TTL
        });
        return callback(null, formatDNSValue(_value2, {
          cached: false
        }));
      }

      try {
        dns.lookup(options.host, {}, function (err, address) {
          if (err) {
            if (cached) {
              // ignore error, use expired value
              return callback(null, formatDNSValue(cached.value, {
                cached: true,
                error: err
              }));
            }

            return callback(err);
          }

          if (!address && cached) {
            // nothing was found, fallback to cached value
            return callback(null, formatDNSValue(cached.value, {
              cached: true
            }));
          }

          var value = {
            addresses: address ? [address] : [options.host],
            servername: options.servername || options.host
          };
          dnsCache.set(options.host, {
            value: value,
            expires: Date.now() + DNS_TTL
          });
          return callback(null, formatDNSValue(value, {
            cached: false
          }));
        });
      } catch (err) {
        if (cached) {
          // ignore error, use expired value
          return callback(null, formatDNSValue(cached.value, {
            cached: true,
            error: err
          }));
        }

        return callback(err);
      }
    });
  });
};
/**
 * Parses connection url to a structured configuration object
 *
 * @param {String} str Connection url
 * @return {Object} Configuration object
 */


module.exports.parseConnectionUrl = function (str) {
  str = str || '';
  var options = {};
  [urllib.parse(str, true)].forEach(function (url) {
    var auth;

    switch (url.protocol) {
      case 'smtp:':
        options.secure = false;
        break;

      case 'smtps:':
        options.secure = true;
        break;

      case 'direct:':
        options.direct = true;
        break;
    }

    if (!isNaN(url.port) && Number(url.port)) {
      options.port = Number(url.port);
    }

    if (url.hostname) {
      options.host = url.hostname;
    }

    if (url.auth) {
      auth = url.auth.split(':');

      if (!options.auth) {
        options.auth = {};
      }

      options.auth.user = auth.shift();
      options.auth.pass = auth.join(':');
    }

    Object.keys(url.query || {}).forEach(function (key) {
      var obj = options;
      var lKey = key;
      var value = url.query[key];

      if (!isNaN(value)) {
        value = Number(value);
      }

      switch (value) {
        case 'true':
          value = true;
          break;

        case 'false':
          value = false;
          break;
      } // tls is nested object


      if (key.indexOf('tls.') === 0) {
        lKey = key.substr(4);

        if (!options.tls) {
          options.tls = {};
        }

        obj = options.tls;
      } else if (key.indexOf('.') >= 0) {
        // ignore nested properties besides tls
        return;
      }

      if (!(lKey in obj)) {
        obj[lKey] = value;
      }
    });
  });
  return options;
};

module.exports._logFunc = function (logger, level, defaults, data, message) {
  var entry = {};
  Object.keys(defaults || {}).forEach(function (key) {
    if (key !== 'level') {
      entry[key] = defaults[key];
    }
  });
  Object.keys(data || {}).forEach(function (key) {
    if (key !== 'level') {
      entry[key] = data[key];
    }
  });

  for (var _len = arguments.length, args = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
    args[_key - 5] = arguments[_key];
  }

  logger[level].apply(logger, [entry, message].concat(args));
};
/**
 * Returns a bunyan-compatible logger interface. Uses either provided logger or
 * creates a default console logger
 *
 * @param {Object} [options] Options object that might include 'logger' value
 * @return {Object} bunyan compatible logger
 */


module.exports.getLogger = function (options, defaults) {
  options = options || {};
  var response = {};
  var levels = ['trace', 'debug', 'info', 'warn', 'error', 'fatal'];

  if (!options.logger) {
    // use vanity logger
    levels.forEach(function (level) {
      response[level] = function () {
        return false;
      };
    });
    return response;
  }

  var logger = options.logger;

  if (options.logger === true) {
    // create console logger
    logger = createDefaultLogger(levels);
  }

  levels.forEach(function (level) {
    response[level] = function (data, message) {
      var _module$exports;

      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      (_module$exports = module.exports)._logFunc.apply(_module$exports, [logger, level, defaults, data, message].concat(args));
    };
  });
  return response;
};
/**
 * Wrapper for creating a callback that either resolves or rejects a promise
 * based on input
 *
 * @param {Function} resolve Function to run if callback is called
 * @param {Function} reject Function to run if callback ends with an error
 */


module.exports.callbackPromise = function (resolve, reject) {
  return function () {
    var args = Array.from(arguments);
    var err = args.shift();

    if (err) {
      reject(err);
    } else {
      resolve.apply(void 0, _toConsumableArray(args));
    }
  };
};
/**
 * Resolves a String or a Buffer value for content value. Useful if the value
 * is a Stream or a file or an URL. If the value is a Stream, overwrites
 * the stream object with the resolved value (you can't stream a value twice).
 *
 * This is useful when you want to create a plugin that needs a content value,
 * for example the `html` or `text` value as a String or a Buffer but not as
 * a file path or an URL.
 *
 * @param {Object} data An object or an Array you want to resolve an element for
 * @param {String|Number} key Property name or an Array index
 * @param {Function} callback Callback function with (err, value)
 */


module.exports.resolveContent = function (data, key, callback) {
  var promise;

  if (!callback) {
    promise = new Promise(function (resolve, reject) {
      callback = module.exports.callbackPromise(resolve, reject);
    });
  }

  var content = data && data[key] && data[key].content || data[key];
  var contentStream;
  var encoding = (_typeof(data[key]) === 'object' && data[key].encoding || 'utf8').toString().toLowerCase().replace(/[-_\s]/g, '');

  if (!content) {
    return callback(null, content);
  }

  if (_typeof(content) === 'object') {
    if (typeof content.pipe === 'function') {
      return resolveStream(content, function (err, value) {
        if (err) {
          return callback(err);
        } // we can't stream twice the same content, so we need
        // to replace the stream object with the streaming result


        if (data[key].content) {
          data[key].content = value;
        } else {
          data[key] = value;
        }

        callback(null, value);
      });
    } else if (/^https?:\/\//i.test(content.path || content.href)) {
      contentStream = fetch(content.path || content.href);
      return resolveStream(contentStream, callback);
    } else if (/^data:/i.test(content.path || content.href)) {
      var parts = (content.path || content.href).match(/^data:((?:[^;]*;)*(?:[^,]*)),(.*)$/i);

      if (!parts) {
        return callback(null, Buffer.from(0));
      }

      return callback(null, /\bbase64$/i.test(parts[1]) ? Buffer.from(parts[2], 'base64') : Buffer.from(decodeURIComponent(parts[2])));
    } else if (content.path) {
      return resolveStream(fs.createReadStream(content.path), callback);
    }
  }

  if (typeof data[key].content === 'string' && !['utf8', 'usascii', 'ascii'].includes(encoding)) {
    content = Buffer.from(data[key].content, encoding);
  } // default action, return as is


  setImmediate(function () {
    return callback(null, content);
  });
  return promise;
};
/**
 * Copies properties from source objects to target objects
 */


module.exports.assign = function
  /* target, ... sources */
() {
  var args = Array.from(arguments);
  var target = args.shift() || {};
  args.forEach(function (source) {
    Object.keys(source || {}).forEach(function (key) {
      if (['tls', 'auth'].includes(key) && source[key] && _typeof(source[key]) === 'object') {
        // tls and auth are special keys that need to be enumerated separately
        // other objects are passed as is
        if (!target[key]) {
          // ensure that target has this key
          target[key] = {};
        }

        Object.keys(source[key]).forEach(function (subKey) {
          target[key][subKey] = source[key][subKey];
        });
      } else {
        target[key] = source[key];
      }
    });
  });
  return target;
};

module.exports.encodeXText = function (str) {
  // ! 0x21
  // + 0x2B
  // = 0x3D
  // ~ 0x7E
  if (!/[^\x21-\x2A\x2C-\x3C\x3E-\x7E]/.test(str)) {
    return str;
  }

  var buf = Buffer.from(str);
  var result = '';

  for (var i = 0, len = buf.length; i < len; i++) {
    var c = buf[i];

    if (c < 0x21 || c > 0x7e || c === 0x2b || c === 0x3d) {
      result += '+' + (c < 0x10 ? '0' : '') + c.toString(16).toUpperCase();
    } else {
      result += String.fromCharCode(c);
    }
  }

  return result;
};
/**
 * Streams a stream value into a Buffer
 *
 * @param {Object} stream Readable stream
 * @param {Function} callback Callback function with (err, value)
 */


function resolveStream(stream, callback) {
  var responded = false;
  var chunks = [];
  var chunklen = 0;
  stream.on('error', function (err) {
    if (responded) {
      return;
    }

    responded = true;
    callback(err);
  });
  stream.on('readable', function () {
    var chunk;

    while ((chunk = stream.read()) !== null) {
      chunks.push(chunk);
      chunklen += chunk.length;
    }
  });
  stream.on('end', function () {
    if (responded) {
      return;
    }

    responded = true;
    var value;

    try {
      value = Buffer.concat(chunks, chunklen);
    } catch (E) {
      return callback(E);
    }

    callback(null, value);
  });
}
/**
 * Generates a bunyan-like logger that prints to console
 *
 * @returns {Object} Bunyan logger instance
 */


function createDefaultLogger(levels) {
  var levelMaxLen = 0;
  var levelNames = new Map();
  levels.forEach(function (level) {
    if (level.length > levelMaxLen) {
      levelMaxLen = level.length;
    }
  });
  levels.forEach(function (level) {
    var levelName = level.toUpperCase();

    if (levelName.length < levelMaxLen) {
      levelName += ' '.repeat(levelMaxLen - levelName.length);
    }

    levelNames.set(level, levelName);
  });

  var print = function print(level, entry, message) {
    var prefix = '';

    if (entry) {
      if (entry.tnx === 'server') {
        prefix = 'S: ';
      } else if (entry.tnx === 'client') {
        prefix = 'C: ';
      }

      if (entry.sid) {
        prefix = '[' + entry.sid + '] ' + prefix;
      }

      if (entry.cid) {
        prefix = '[#' + entry.cid + '] ' + prefix;
      }
    }

    for (var _len3 = arguments.length, args = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {
      args[_key3 - 3] = arguments[_key3];
    }

    message = util.format.apply(util, [message].concat(args));
    message.split(/\r?\n/).forEach(function (line) {
      console.log('[%s] %s %s', new Date().toISOString().substr(0, 19).replace(/T/, ' '), levelNames.get(level), prefix + line);
    });
  };

  var logger = {};
  levels.forEach(function (level) {
    logger[level] = print.bind(null, level);
  });
  return logger;
}

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.STACK_OVERFLOW = exports.CIRCULAR_DEPENDENCY_IN_FACTORY = exports.POST_CONSTRUCT_ERROR = exports.MULTIPLE_POST_CONSTRUCT_METHODS = exports.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = exports.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = exports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = exports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = exports.ARGUMENTS_LENGTH_MISMATCH = exports.INVALID_DECORATOR_OPERATION = exports.INVALID_TO_SELF_VALUE = exports.INVALID_FUNCTION_BINDING = exports.INVALID_MIDDLEWARE_RETURN = exports.NO_MORE_SNAPSHOTS_AVAILABLE = exports.INVALID_BINDING_TYPE = exports.NOT_IMPLEMENTED = exports.CIRCULAR_DEPENDENCY = exports.UNDEFINED_INJECT_ANNOTATION = exports.MISSING_INJECT_ANNOTATION = exports.MISSING_INJECTABLE_ANNOTATION = exports.NOT_REGISTERED = exports.CANNOT_UNBIND = exports.AMBIGUOUS_MATCH = exports.KEY_NOT_FOUND = exports.NULL_ARGUMENT = exports.DUPLICATED_METADATA = exports.DUPLICATED_INJECTABLE_DECORATOR = void 0;
exports.DUPLICATED_INJECTABLE_DECORATOR = "Cannot apply @injectable decorator multiple times.";
exports.DUPLICATED_METADATA = "Metadata key was used more than once in a parameter:";
exports.NULL_ARGUMENT = "NULL argument";
exports.KEY_NOT_FOUND = "Key Not Found";
exports.AMBIGUOUS_MATCH = "Ambiguous match found for serviceIdentifier:";
exports.CANNOT_UNBIND = "Could not unbind serviceIdentifier:";
exports.NOT_REGISTERED = "No matching bindings found for serviceIdentifier:";
exports.MISSING_INJECTABLE_ANNOTATION = "Missing required @injectable annotation in:";
exports.MISSING_INJECT_ANNOTATION = "Missing required @inject or @multiInject annotation in:";

var UNDEFINED_INJECT_ANNOTATION = function UNDEFINED_INJECT_ANNOTATION(name) {
  return "@inject called with undefined this could mean that the class " + name + " has " + "a circular dependency problem. You can use a LazyServiceIdentifer to  " + "overcome this limitation.";
};

exports.UNDEFINED_INJECT_ANNOTATION = UNDEFINED_INJECT_ANNOTATION;
exports.CIRCULAR_DEPENDENCY = "Circular dependency found:";
exports.NOT_IMPLEMENTED = "Sorry, this feature is not fully implemented yet.";
exports.INVALID_BINDING_TYPE = "Invalid binding type:";
exports.NO_MORE_SNAPSHOTS_AVAILABLE = "No snapshot available to restore.";
exports.INVALID_MIDDLEWARE_RETURN = "Invalid return type in middleware. Middleware must return!";
exports.INVALID_FUNCTION_BINDING = "Value provided to function binding must be a function!";
exports.INVALID_TO_SELF_VALUE = "The toSelf function can only be applied when a constructor is " + "used as service identifier";
exports.INVALID_DECORATOR_OPERATION = "The @inject @multiInject @tagged and @named decorators " + "must be applied to the parameters of a class constructor or a class property.";

var ARGUMENTS_LENGTH_MISMATCH = function ARGUMENTS_LENGTH_MISMATCH() {
  var values = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    values[_i] = arguments[_i];
  }

  return "The number of constructor arguments in the derived class " + (values[0] + " must be >= than the number of constructor arguments of its base class.");
};

exports.ARGUMENTS_LENGTH_MISMATCH = ARGUMENTS_LENGTH_MISMATCH;
exports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = "Invalid Container constructor argument. Container options " + "must be an object.";
exports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = "Invalid Container option. Default scope must " + "be a string ('singleton' or 'transient').";
exports.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = "Invalid Container option. Auto bind injectable must " + "be a boolean";
exports.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = "Invalid Container option. Skip base check must " + "be a boolean";
exports.MULTIPLE_POST_CONSTRUCT_METHODS = "Cannot apply @postConstruct decorator multiple times in the same class";

var POST_CONSTRUCT_ERROR = function POST_CONSTRUCT_ERROR() {
  var values = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    values[_i] = arguments[_i];
  }

  return "@postConstruct error in class " + values[0] + ": " + values[1];
};

exports.POST_CONSTRUCT_ERROR = POST_CONSTRUCT_ERROR;

var CIRCULAR_DEPENDENCY_IN_FACTORY = function CIRCULAR_DEPENDENCY_IN_FACTORY() {
  var values = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    values[_i] = arguments[_i];
  }

  return "It looks like there is a circular dependency " + ("in one of the '" + values[0] + "' bindings. Please investigate bindings with") + ("service identifier '" + values[1] + "'.");
};

exports.CIRCULAR_DEPENDENCY_IN_FACTORY = CIRCULAR_DEPENDENCY_IN_FACTORY;
exports.STACK_OVERFLOW = "Maximum call stack size exceeded";

/***/ }),
/* 46 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(12).f;

var hasOwn = __webpack_require__(14);

var wellKnownSymbol = __webpack_require__(8);

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (target, TAG, STATIC) {
  if (target && !STATIC) target = target.prototype;

  if (target && !hasOwn(target, TO_STRING_TAG)) {
    defineProperty(target, TO_STRING_TAG, {
      configurable: true,
      value: TAG
    });
  }
};

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var hasOwn = __webpack_require__(14);

var isCallable = __webpack_require__(9);

var toObject = __webpack_require__(16);

var sharedKey = __webpack_require__(139);

var CORRECT_PROTOTYPE_GETTER = __webpack_require__(182);

var IE_PROTO = sharedKey('IE_PROTO');
var Object = global.Object;
var ObjectPrototype = Object.prototype; // `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof

module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  var object = toObject(O);
  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];
  var constructor = object.constructor;

  if (isCallable(constructor) && object instanceof constructor) {
    return constructor.prototype;
  }

  return object instanceof Object ? ObjectPrototype : null;
};

/***/ }),
/* 49 */
/***/ (function(module, exports) {

module.exports = require("zlib");

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Metadata = void 0;

var METADATA_KEY = __webpack_require__(24);

var Metadata = function () {
  function Metadata(key, value) {
    this.key = key;
    this.value = value;
  }

  Metadata.prototype.toString = function () {
    if (this.key === METADATA_KEY.NAMED_TAG) {
      return "named: " + this.value.toString() + " ";
    } else {
      return "tagged: { key:" + this.key.toString() + ", value: " + this.value + " }";
    }
  };

  return Metadata;
}();

exports.Metadata = Metadata;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);

  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
    desc = {
      enumerable: true,
      get: function get() {
        return m[k];
      }
    };
  }

  Object.defineProperty(o, k2, desc);
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decodeXML = exports.decodeHTMLStrict = exports.decodeHTMLAttribute = exports.decodeHTML = exports.determineBranch = exports.EntityDecoder = exports.DecodingMode = exports.BinTrieFlags = exports.fromCodePoint = exports.replaceCodePoint = exports.decodeCodePoint = exports.xmlDecodeTree = exports.htmlDecodeTree = void 0;

var decode_data_html_js_1 = __importDefault(__webpack_require__(778));

exports.htmlDecodeTree = decode_data_html_js_1["default"];

var decode_data_xml_js_1 = __importDefault(__webpack_require__(779));

exports.xmlDecodeTree = decode_data_xml_js_1["default"];

var decode_codepoint_js_1 = __importStar(__webpack_require__(336));

exports.decodeCodePoint = decode_codepoint_js_1["default"];

var decode_codepoint_js_2 = __webpack_require__(336);

Object.defineProperty(exports, "replaceCodePoint", {
  enumerable: true,
  get: function get() {
    return decode_codepoint_js_2.replaceCodePoint;
  }
});
Object.defineProperty(exports, "fromCodePoint", {
  enumerable: true,
  get: function get() {
    return decode_codepoint_js_2.fromCodePoint;
  }
});
var CharCodes;

(function (CharCodes) {
  CharCodes[CharCodes["NUM"] = 35] = "NUM";
  CharCodes[CharCodes["SEMI"] = 59] = "SEMI";
  CharCodes[CharCodes["EQUALS"] = 61] = "EQUALS";
  CharCodes[CharCodes["ZERO"] = 48] = "ZERO";
  CharCodes[CharCodes["NINE"] = 57] = "NINE";
  CharCodes[CharCodes["LOWER_A"] = 97] = "LOWER_A";
  CharCodes[CharCodes["LOWER_F"] = 102] = "LOWER_F";
  CharCodes[CharCodes["LOWER_X"] = 120] = "LOWER_X";
  CharCodes[CharCodes["LOWER_Z"] = 122] = "LOWER_Z";
  CharCodes[CharCodes["UPPER_A"] = 65] = "UPPER_A";
  CharCodes[CharCodes["UPPER_F"] = 70] = "UPPER_F";
  CharCodes[CharCodes["UPPER_Z"] = 90] = "UPPER_Z";
})(CharCodes || (CharCodes = {}));
/** Bit that needs to be set to convert an upper case ASCII character to lower case */


var TO_LOWER_BIT = 32;
var BinTrieFlags;

(function (BinTrieFlags) {
  BinTrieFlags[BinTrieFlags["VALUE_LENGTH"] = 49152] = "VALUE_LENGTH";
  BinTrieFlags[BinTrieFlags["BRANCH_LENGTH"] = 16256] = "BRANCH_LENGTH";
  BinTrieFlags[BinTrieFlags["JUMP_TABLE"] = 127] = "JUMP_TABLE";
})(BinTrieFlags = exports.BinTrieFlags || (exports.BinTrieFlags = {}));

function isNumber(code) {
  return code >= CharCodes.ZERO && code <= CharCodes.NINE;
}

function isHexadecimalCharacter(code) {
  return code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F || code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F;
}

function isAsciiAlphaNumeric(code) {
  return code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z || code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z || isNumber(code);
}
/**
 * Checks if the given character is a valid end character for an entity in an attribute.
 *
 * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.
 * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state
 */


function isEntityInAttributeInvalidEnd(code) {
  return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);
}

var EntityDecoderState;

(function (EntityDecoderState) {
  EntityDecoderState[EntityDecoderState["EntityStart"] = 0] = "EntityStart";
  EntityDecoderState[EntityDecoderState["NumericStart"] = 1] = "NumericStart";
  EntityDecoderState[EntityDecoderState["NumericDecimal"] = 2] = "NumericDecimal";
  EntityDecoderState[EntityDecoderState["NumericHex"] = 3] = "NumericHex";
  EntityDecoderState[EntityDecoderState["NamedEntity"] = 4] = "NamedEntity";
})(EntityDecoderState || (EntityDecoderState = {}));

var DecodingMode;

(function (DecodingMode) {
  /** Entities in text nodes that can end with any character. */
  DecodingMode[DecodingMode["Legacy"] = 0] = "Legacy";
  /** Only allow entities terminated with a semicolon. */

  DecodingMode[DecodingMode["Strict"] = 1] = "Strict";
  /** Entities in attributes have limitations on ending characters. */

  DecodingMode[DecodingMode["Attribute"] = 2] = "Attribute";
})(DecodingMode = exports.DecodingMode || (exports.DecodingMode = {}));
/**
 * Token decoder with support of writing partial entities.
 */


var EntityDecoder =
/** @class */
function () {
  function EntityDecoder(
  /** The tree used to decode entities. */
  decodeTree,
  /**
   * The function that is called when a codepoint is decoded.
   *
   * For multi-byte named entities, this will be called multiple times,
   * with the second codepoint, and the same `consumed` value.
   *
   * @param codepoint The decoded codepoint.
   * @param consumed The number of bytes consumed by the decoder.
   */
  emitCodePoint,
  /** An object that is used to produce errors. */
  errors) {
    this.decodeTree = decodeTree;
    this.emitCodePoint = emitCodePoint;
    this.errors = errors;
    /** The current state of the decoder. */

    this.state = EntityDecoderState.EntityStart;
    /** Characters that were consumed while parsing an entity. */

    this.consumed = 1;
    /**
     * The result of the entity.
     *
     * Either the result index of a numeric entity, or the codepoint of a
     * numeric entity.
     */

    this.result = 0;
    /** The current index in the decode tree. */

    this.treeIndex = 0;
    /** The number of characters that were consumed in excess. */

    this.excess = 1;
    /** The mode in which the decoder is operating. */

    this.decodeMode = DecodingMode.Strict;
  }
  /** Resets the instance to make it reusable. */


  EntityDecoder.prototype.startEntity = function (decodeMode) {
    this.decodeMode = decodeMode;
    this.state = EntityDecoderState.EntityStart;
    this.result = 0;
    this.treeIndex = 0;
    this.excess = 1;
    this.consumed = 1;
  };
  /**
   * Write an entity to the decoder. This can be called multiple times with partial entities.
   * If the entity is incomplete, the decoder will return -1.
   *
   * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the
   * entity is incomplete, and resume when the next string is written.
   *
   * @param string The string containing the entity (or a continuation of the entity).
   * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */


  EntityDecoder.prototype.write = function (str, offset) {
    switch (this.state) {
      case EntityDecoderState.EntityStart:
        {
          if (str.charCodeAt(offset) === CharCodes.NUM) {
            this.state = EntityDecoderState.NumericStart;
            this.consumed += 1;
            return this.stateNumericStart(str, offset + 1);
          }

          this.state = EntityDecoderState.NamedEntity;
          return this.stateNamedEntity(str, offset);
        }

      case EntityDecoderState.NumericStart:
        {
          return this.stateNumericStart(str, offset);
        }

      case EntityDecoderState.NumericDecimal:
        {
          return this.stateNumericDecimal(str, offset);
        }

      case EntityDecoderState.NumericHex:
        {
          return this.stateNumericHex(str, offset);
        }

      case EntityDecoderState.NamedEntity:
        {
          return this.stateNamedEntity(str, offset);
        }
    }
  };
  /**
   * Switches between the numeric decimal and hexadecimal states.
   *
   * Equivalent to the `Numeric character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */


  EntityDecoder.prototype.stateNumericStart = function (str, offset) {
    if (offset >= str.length) {
      return -1;
    }

    if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {
      this.state = EntityDecoderState.NumericHex;
      this.consumed += 1;
      return this.stateNumericHex(str, offset + 1);
    }

    this.state = EntityDecoderState.NumericDecimal;
    return this.stateNumericDecimal(str, offset);
  };

  EntityDecoder.prototype.addToNumericResult = function (str, start, end, base) {
    if (start !== end) {
      var digitCount = end - start;
      this.result = this.result * Math.pow(base, digitCount) + parseInt(str.substr(start, digitCount), base);
      this.consumed += digitCount;
    }
  };
  /**
   * Parses a hexadecimal numeric entity.
   *
   * Equivalent to the `Hexademical character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */


  EntityDecoder.prototype.stateNumericHex = function (str, offset) {
    var startIdx = offset;

    while (offset < str.length) {
      var _char = str.charCodeAt(offset);

      if (isNumber(_char) || isHexadecimalCharacter(_char)) {
        offset += 1;
      } else {
        this.addToNumericResult(str, startIdx, offset, 16);
        return this.emitNumericEntity(_char, 3);
      }
    }

    this.addToNumericResult(str, startIdx, offset, 16);
    return -1;
  };
  /**
   * Parses a decimal numeric entity.
   *
   * Equivalent to the `Decimal character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */


  EntityDecoder.prototype.stateNumericDecimal = function (str, offset) {
    var startIdx = offset;

    while (offset < str.length) {
      var _char2 = str.charCodeAt(offset);

      if (isNumber(_char2)) {
        offset += 1;
      } else {
        this.addToNumericResult(str, startIdx, offset, 10);
        return this.emitNumericEntity(_char2, 2);
      }
    }

    this.addToNumericResult(str, startIdx, offset, 10);
    return -1;
  };
  /**
   * Validate and emit a numeric entity.
   *
   * Implements the logic from the `Hexademical character reference start
   * state` and `Numeric character reference end state` in the HTML spec.
   *
   * @param lastCp The last code point of the entity. Used to see if the
   *               entity was terminated with a semicolon.
   * @param expectedLength The minimum number of characters that should be
   *                       consumed. Used to validate that at least one digit
   *                       was consumed.
   * @returns The number of characters that were consumed.
   */


  EntityDecoder.prototype.emitNumericEntity = function (lastCp, expectedLength) {
    var _a; // Ensure we consumed at least one digit.


    if (this.consumed <= expectedLength) {
      (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);
      return 0;
    } // Figure out if this is a legit end of the entity


    if (lastCp === CharCodes.SEMI) {
      this.consumed += 1;
    } else if (this.decodeMode === DecodingMode.Strict) {
      return 0;
    }

    this.emitCodePoint((0, decode_codepoint_js_1.replaceCodePoint)(this.result), this.consumed);

    if (this.errors) {
      if (lastCp !== CharCodes.SEMI) {
        this.errors.missingSemicolonAfterCharacterReference();
      }

      this.errors.validateNumericCharacterReference(this.result);
    }

    return this.consumed;
  };
  /**
   * Parses a named entity.
   *
   * Equivalent to the `Named character reference state` in the HTML spec.
   *
   * @param str The string containing the entity (or a continuation of the entity).
   * @param offset The current offset.
   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
   */


  EntityDecoder.prototype.stateNamedEntity = function (str, offset) {
    var decodeTree = this.decodeTree;
    var current = decodeTree[this.treeIndex]; // The mask is the number of bytes of the value, including the current byte.

    var valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;

    for (; offset < str.length; offset++, this.excess++) {
      var _char3 = str.charCodeAt(offset);

      this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), _char3);

      if (this.treeIndex < 0) {
        return this.result === 0 || // If we are parsing an attribute
        this.decodeMode === DecodingMode.Attribute && ( // We shouldn't have consumed any characters after the entity,
        valueLength === 0 || // And there should be no invalid characters.
        isEntityInAttributeInvalidEnd(_char3)) ? 0 : this.emitNotTerminatedNamedEntity();
      }

      current = decodeTree[this.treeIndex];
      valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14; // If the branch is a value, store it and continue

      if (valueLength !== 0) {
        // If the entity is terminated by a semicolon, we are done.
        if (_char3 === CharCodes.SEMI) {
          return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);
        } // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.


        if (this.decodeMode !== DecodingMode.Strict) {
          this.result = this.treeIndex;
          this.consumed += this.excess;
          this.excess = 0;
        }
      }
    }

    return -1;
  };
  /**
   * Emit a named entity that was not terminated with a semicolon.
   *
   * @returns The number of characters consumed.
   */


  EntityDecoder.prototype.emitNotTerminatedNamedEntity = function () {
    var _a;

    var _b = this,
        result = _b.result,
        decodeTree = _b.decodeTree;

    var valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;
    this.emitNamedEntityData(result, valueLength, this.consumed);
    (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();
    return this.consumed;
  };
  /**
   * Emit a named entity.
   *
   * @param result The index of the entity in the decode tree.
   * @param valueLength The number of bytes in the entity.
   * @param consumed The number of characters consumed.
   *
   * @returns The number of characters consumed.
   */


  EntityDecoder.prototype.emitNamedEntityData = function (result, valueLength, consumed) {
    var decodeTree = this.decodeTree;
    this.emitCodePoint(valueLength === 1 ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH : decodeTree[result + 1], consumed);

    if (valueLength === 3) {
      // For multi-byte values, we need to emit the second byte.
      this.emitCodePoint(decodeTree[result + 2], consumed);
    }

    return consumed;
  };
  /**
   * Signal to the parser that the end of the input was reached.
   *
   * Remaining data will be emitted and relevant errors will be produced.
   *
   * @returns The number of characters consumed.
   */


  EntityDecoder.prototype.end = function () {
    var _a;

    switch (this.state) {
      case EntityDecoderState.NamedEntity:
        {
          // Emit a named entity if we have one.
          return this.result !== 0 && (this.decodeMode !== DecodingMode.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;
        }
      // Otherwise, emit a numeric entity if we have one.

      case EntityDecoderState.NumericDecimal:
        {
          return this.emitNumericEntity(0, 2);
        }

      case EntityDecoderState.NumericHex:
        {
          return this.emitNumericEntity(0, 3);
        }

      case EntityDecoderState.NumericStart:
        {
          (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);
          return 0;
        }

      case EntityDecoderState.EntityStart:
        {
          // Return 0 if we have no entity.
          return 0;
        }
    }
  };

  return EntityDecoder;
}();

exports.EntityDecoder = EntityDecoder;
/**
 * Creates a function that decodes entities in a string.
 *
 * @param decodeTree The decode tree.
 * @returns A function that decodes entities in a string.
 */

function getDecoder(decodeTree) {
  var ret = "";
  var decoder = new EntityDecoder(decodeTree, function (str) {
    return ret += (0, decode_codepoint_js_1.fromCodePoint)(str);
  });
  return function decodeWithTrie(str, decodeMode) {
    var lastIndex = 0;
    var offset = 0;

    while ((offset = str.indexOf("&", offset)) >= 0) {
      ret += str.slice(lastIndex, offset);
      decoder.startEntity(decodeMode);
      var len = decoder.write(str, // Skip the "&"
      offset + 1);

      if (len < 0) {
        lastIndex = offset + decoder.end();
        break;
      }

      lastIndex = offset + len; // If `len` is 0, skip the current `&` and continue.

      offset = len === 0 ? lastIndex + 1 : lastIndex;
    }

    var result = ret + str.slice(lastIndex); // Make sure we don't keep a reference to the final string.

    ret = "";
    return result;
  };
}
/**
 * Determines the branch of the current node that is taken given the current
 * character. This function is used to traverse the trie.
 *
 * @param decodeTree The trie.
 * @param current The current node.
 * @param nodeIdx The index right after the current node and its value.
 * @param char The current character.
 * @returns The index of the next node, or -1 if no branch is taken.
 */


function determineBranch(decodeTree, current, nodeIdx, _char4) {
  var branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;
  var jumpOffset = current & BinTrieFlags.JUMP_TABLE; // Case 1: Single branch encoded in jump offset

  if (branchCount === 0) {
    return jumpOffset !== 0 && _char4 === jumpOffset ? nodeIdx : -1;
  } // Case 2: Multiple branches encoded in jump table


  if (jumpOffset) {
    var value = _char4 - jumpOffset;
    return value < 0 || value >= branchCount ? -1 : decodeTree[nodeIdx + value] - 1;
  } // Case 3: Multiple branches encoded in dictionary
  // Binary search for the character.


  var lo = nodeIdx;
  var hi = lo + branchCount - 1;

  while (lo <= hi) {
    var mid = lo + hi >>> 1;
    var midVal = decodeTree[mid];

    if (midVal < _char4) {
      lo = mid + 1;
    } else if (midVal > _char4) {
      hi = mid - 1;
    } else {
      return decodeTree[mid + branchCount];
    }
  }

  return -1;
}

exports.determineBranch = determineBranch;
var htmlDecoder = getDecoder(decode_data_html_js_1["default"]);
var xmlDecoder = getDecoder(decode_data_xml_js_1["default"]);
/**
 * Decodes an HTML string.
 *
 * @param str The string to decode.
 * @param mode The decoding mode.
 * @returns The decoded string.
 */

function decodeHTML(str, mode) {
  if (mode === void 0) {
    mode = DecodingMode.Legacy;
  }

  return htmlDecoder(str, mode);
}

exports.decodeHTML = decodeHTML;
/**
 * Decodes an HTML string in an attribute.
 *
 * @param str The string to decode.
 * @returns The decoded string.
 */

function decodeHTMLAttribute(str) {
  return htmlDecoder(str, DecodingMode.Attribute);
}

exports.decodeHTMLAttribute = decodeHTMLAttribute;
/**
 * Decodes an HTML string, requiring all entities to be terminated by a semicolon.
 *
 * @param str The string to decode.
 * @returns The decoded string.
 */

function decodeHTMLStrict(str) {
  return htmlDecoder(str, DecodingMode.Strict);
}

exports.decodeHTMLStrict = decodeHTMLStrict;
/**
 * Decodes an XML string, requiring all entities to be terminated by a semicolon.
 *
 * @param str The string to decode.
 * @returns The decoded string.
 */

function decodeXML(str) {
  return xmlDecoder(str, DecodingMode.Strict);
}

exports.decodeXML = decodeXML;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

var uncurryThis = __webpack_require__(3);

var aCallable = __webpack_require__(29);

var bind = uncurryThis(uncurryThis.bind); // optional / simple context binding

module.exports = function (fn, that) {
  aCallable(fn);
  return that === undefined ? fn : bind ? bind(fn, that) : function
    /* ...args */
  () {
    return fn.apply(that, arguments);
  };
};

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable no-proto -- safe */
var uncurryThis = __webpack_require__(3);

var anObject = __webpack_require__(5);

var aPossiblePrototype = __webpack_require__(236); // `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe


module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;

  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    setter = uncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);
    setter(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) {
    /* empty */
  }

  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter(O, proto);else O.__proto__ = proto;
    return O;
  };
}() : undefined);

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var isPrototypeOf = __webpack_require__(38);

var TypeError = global.TypeError;

module.exports = function (it, Prototype) {
  if (isPrototypeOf(Prototype, it)) return it;
  throw TypeError('Incorrect invocation');
};

/***/ }),
/* 55 */
/***/ (function(module) {

module.exports = JSON.parse("{\"name\":\"nodemailer\",\"version\":\"6.7.3\",\"description\":\"Easy as cake e-mail sending from your Node.js applications\",\"main\":\"lib/nodemailer.js\",\"scripts\":{\"test\":\"grunt\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/nodemailer/nodemailer.git\"},\"keywords\":[\"Nodemailer\"],\"author\":\"Andris Reinman\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/nodemailer/nodemailer/issues\"},\"homepage\":\"https://nodemailer.com/\",\"devDependencies\":{\"@aws-sdk/client-ses\":\"3.54.1\",\"aws-sdk\":\"2.1096.0\",\"bunyan\":\"1.8.15\",\"chai\":\"4.3.6\",\"eslint-config-nodemailer\":\"1.2.0\",\"eslint-config-prettier\":\"8.5.0\",\"grunt\":\"1.4.1\",\"grunt-cli\":\"1.4.3\",\"grunt-eslint\":\"24.0.0\",\"grunt-mocha-test\":\"0.13.3\",\"libbase64\":\"1.2.1\",\"libmime\":\"5.0.0\",\"libqp\":\"1.1.0\",\"mocha\":\"9.2.2\",\"nodemailer-ntlm-auth\":\"1.0.1\",\"proxy\":\"1.0.2\",\"proxy-test-server\":\"1.0.0\",\"sinon\":\"13.0.1\",\"smtp-server\":\"3.10.0\"},\"engines\":{\"node\":\">=6.0.0\"}}");

/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createHttpClient", function() { return createHttpClient; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRequestConfig", function() { return createRequestConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enforceObjPath", function() { return enforceObjPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "errorHandler", function() { return errorHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "freezeSys", function() { return freezeSys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUserAgentHeader", function() { return getUserAgentHeader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toPlainObject", function() { return toPlainObject; });
/* harmony import */ var fast_copy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(105);
/* harmony import */ var qs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(342);
/* harmony import */ var qs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(qs__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_isstring__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(226);
/* harmony import */ var lodash_isstring__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isstring__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var p_throttle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(343);
/* harmony import */ var p_throttle__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(p_throttle__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lodash_isplainobject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(132);
/* harmony import */ var lodash_isplainobject__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_isplainobject__WEBPACK_IMPORTED_MODULE_4__);
function _typeof2(obj) { "@babel/helpers - typeof"; return _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof2(obj); }







function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}

function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}

function _wrapRegExp() {
  _wrapRegExp = function _wrapRegExp(re, groups) {
    return new BabelRegExp(re, void 0, groups);
  };

  var _super = RegExp.prototype,
      _groups = new WeakMap();

  function BabelRegExp(re, flags, groups) {
    var _this = new RegExp(re, flags);

    return _groups.set(_this, groups || _groups.get(re)), _setPrototypeOf(_this, BabelRegExp.prototype);
  }

  function buildGroups(result, re) {
    var g = _groups.get(re);

    return Object.keys(g).reduce(function (groups, name) {
      var i = g[name];
      if ("number" == typeof i) groups[name] = result[i];else {
        for (var k = 0; void 0 === result[i[k]] && k + 1 < i.length;) {
          k++;
        }

        groups[name] = result[i[k]];
      }
      return groups;
    }, Object.create(null));
  }

  return _inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (str) {
    var result = _super.exec.call(this, str);

    return result && (result.groups = buildGroups(result, this)), result;
  }, BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {
    if ("string" == typeof substitution) {
      var groups = _groups.get(this);

      return _super[Symbol.replace].call(this, str, substitution.replace(/\$<([^>]+)>/g, function (_, name) {
        return "$" + groups[name];
      }));
    }

    if ("function" == typeof substitution) {
      var _this = this;

      return _super[Symbol.replace].call(this, str, function () {
        var args = arguments;
        return "object" != _typeof2(args[args.length - 1]) && (args = [].slice.call(args)).push(buildGroups(args, _this)), substitution.apply(this, args);
      });
    }

    return _super[Symbol.replace].call(this, str, substitution);
  }, _wrapRegExp.apply(this, arguments);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];

  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;

      var F = function F() {};

      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e2) {
          throw _e2;
        },
        f: F
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var normalCompletion = true,
      didErr = false,
      err;
  return {
    s: function s() {
      it = it.call(o);
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e3) {
      didErr = true;
      err = _e3;
    },
    f: function f() {
      try {
        if (!normalCompletion && it["return"] != null) it["return"]();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}

function isNode() {
  /**
   * Polyfills of 'process' might set process.browser === true
   *
   * See:
   * https://github.com/webpack/node-libs-browser/blob/master/mock/process.js#L8
   * https://github.com/defunctzombie/node-process/blob/master/browser.js#L156
   **/
  return typeof process !== 'undefined' && !process.browser;
}

function isReactNative() {
  return typeof window !== 'undefined' && 'navigator' in window && 'product' in window.navigator && window.navigator.product === 'ReactNative';
}

function getNodeVersion() {
  return process.versions && process.versions.node ? "v".concat(process.versions.node) : process.version;
}

function getWindow() {
  return window;
}

function noop() {
  return undefined;
}

var PERCENTAGE_REGEX = /*#__PURE__*/_wrapRegExp(/(\d+)(%)/, {
  value: 1
});

function calculateLimit(type) {
  var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 7;
  var limit = max;

  if (PERCENTAGE_REGEX.test(type)) {
    var _type$match;

    var groups = (_type$match = type.match(PERCENTAGE_REGEX)) === null || _type$match === void 0 ? void 0 : _type$match.groups;

    if (groups && groups.value) {
      var percentage = parseInt(groups.value) / 100;
      limit = Math.round(max * percentage);
    }
  }

  return Math.min(30, Math.max(1, limit));
}

function createThrottle(limit, logger) {
  logger('info', "Throttle request to ".concat(limit, "/s"));
  return p_throttle__WEBPACK_IMPORTED_MODULE_3___default()({
    limit: limit,
    interval: 1000,
    strict: false
  });
}

var rateLimitThrottle = function rateLimitThrottle(axiosInstance) {
  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'auto';
  var _axiosInstance$defaul = axiosInstance.defaults.logHandler,
      logHandler = _axiosInstance$defaul === void 0 ? noop : _axiosInstance$defaul;
  var limit = lodash_isstring__WEBPACK_IMPORTED_MODULE_2___default()(type) ? calculateLimit(type) : calculateLimit('auto', type);
  var throttle = createThrottle(limit, logHandler);
  var isCalculated = false;
  var requestInterceptorId = axiosInstance.interceptors.request.use(function (config) {
    return throttle(function () {
      return config;
    })();
  }, function (error) {
    return Promise.reject(error);
  });
  var responseInterceptorId = axiosInstance.interceptors.response.use(function (response) {
    if (!isCalculated && lodash_isstring__WEBPACK_IMPORTED_MODULE_2___default()(type) && (type === 'auto' || PERCENTAGE_REGEX.test(type)) && response.headers && response.headers['x-contentful-ratelimit-second-limit']) {
      var rawLimit = parseInt(response.headers['x-contentful-ratelimit-second-limit']);
      var nextLimit = calculateLimit(type, rawLimit);

      if (nextLimit !== limit) {
        if (requestInterceptorId) {
          axiosInstance.interceptors.request.eject(requestInterceptorId);
        }

        limit = nextLimit;
        throttle = createThrottle(nextLimit, logHandler);
        requestInterceptorId = axiosInstance.interceptors.request.use(function (config) {
          return throttle(function () {
            return config;
          })();
        }, function (error) {
          return Promise.reject(error);
        });
      }

      isCalculated = true;
    }

    return response;
  }, function (error) {
    return Promise.reject(error);
  });
  return function () {
    axiosInstance.interceptors.request.eject(requestInterceptorId);
    axiosInstance.interceptors.response.eject(responseInterceptorId);
  };
};

var delay = function delay(ms) {
  return new Promise(function (resolve) {
    setTimeout(resolve, ms);
  });
};

var defaultWait = function defaultWait(attempts) {
  return Math.pow(Math.SQRT2, attempts);
};

function rateLimit(instance) {
  var maxRetry = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;
  var _instance$defaults = instance.defaults,
      _instance$defaults$re = _instance$defaults.responseLogger,
      responseLogger = _instance$defaults$re === void 0 ? noop : _instance$defaults$re,
      _instance$defaults$re2 = _instance$defaults.requestLogger,
      requestLogger = _instance$defaults$re2 === void 0 ? noop : _instance$defaults$re2;
  instance.interceptors.request.use(function (config) {
    requestLogger(config);
    return config;
  }, function (error) {
    requestLogger(error);
    return Promise.reject(error);
  });
  instance.interceptors.response.use(function (response) {
    // we don't need to do anything here
    responseLogger(response);
    return response;
  }, function (error) {
    var response = error.response;
    var config = error.config;
    responseLogger(error); // Do not retry if it is disabled or no request config exists (not an axios error)

    if (!config || !instance.defaults.retryOnError) {
      return Promise.reject(error);
    } // Retried already for max attempts


    var doneAttempts = config.attempts || 1;

    if (doneAttempts > maxRetry) {
      error.attempts = config.attempts;
      return Promise.reject(error);
    }

    var retryErrorType = null;
    var wait = defaultWait(doneAttempts); // Errors without response did not receive anything from the server

    if (!response) {
      retryErrorType = 'Connection';
    } else if (response.status >= 500 && response.status < 600) {
      // 5** errors are server related
      retryErrorType = "Server ".concat(response.status);
    } else if (response.status === 429) {
      // 429 errors are exceeded rate limit exceptions
      retryErrorType = 'Rate limit'; // all headers are lowercased by axios https://github.com/mzabriskie/axios/issues/413

      if (response.headers && error.response.headers['x-contentful-ratelimit-reset']) {
        wait = response.headers['x-contentful-ratelimit-reset'];
      }
    }

    if (retryErrorType) {
      // convert to ms and add jitter
      wait = Math.floor(wait * 1000 + Math.random() * 200 + 500);
      instance.defaults.logHandler('warning', "".concat(retryErrorType, " error occurred. Waiting for ").concat(wait, " ms before retrying...")); // increase attempts counter

      config.attempts = doneAttempts + 1;
      /* Somehow between the interceptor and retrying the request the httpAgent/httpsAgent gets transformed from an Agent-like object
       to a regular object, causing failures on retries after rate limits. Removing these properties here fixes the error, but retry
       requests still use the original http/httpsAgent property */

      delete config.httpAgent;
      delete config.httpsAgent;
      return delay(wait).then(function () {
        return instance(config);
      });
    }

    return Promise.reject(error);
  });
}

function asyncToken(instance, getToken) {
  instance.interceptors.request.use(function (config) {
    return getToken().then(function (accessToken) {
      config.headers = _objectSpread2(_objectSpread2({}, config.headers), {}, {
        Authorization: "Bearer ".concat(accessToken)
      });
      return config;
    });
  });
} // Also enforces toplevel domain specified, no spaces and no protocol


var HOST_REGEX = /^(?!\w+:\/\/)([^\s:]+\.?[^\s:]+)(?::(\d+))?(?!:)$/;
/**
 * Create pre configured axios instance
 * @private
 * @param {AxiosStatic} axios - Axios library
 * @param {CreateHttpClientParams} options - Initialization parameters for the HTTP client
 * @return {ContentfulAxiosInstance} Initialized axios instance
 */

function createHttpClient(axios, options) {
  var defaultConfig = {
    insecure: false,
    retryOnError: true,
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    logHandler: function logHandler(level, data) {
      if (level === 'error' && data) {
        var title = [data.name, data.message].filter(function (a) {
          return a;
        }).join(' - ');
        console.error("[error] ".concat(title));
        console.error(data);
        return;
      }

      console.log("[".concat(level, "] ").concat(data));
    },
    // Passed to axios
    headers: {},
    httpAgent: false,
    httpsAgent: false,
    timeout: 30000,
    throttle: 0,
    proxy: false,
    basePath: '',
    adapter: undefined,
    maxContentLength: 1073741824,
    // 1GB
    maxBodyLength: 1073741824 // 1GB

  };

  var config = _objectSpread2(_objectSpread2({}, defaultConfig), options);

  if (!config.accessToken) {
    var missingAccessTokenError = new TypeError('Expected parameter accessToken');
    config.logHandler('error', missingAccessTokenError);
    throw missingAccessTokenError;
  } // Construct axios baseURL option


  var protocol = config.insecure ? 'http' : 'https';
  var space = config.space ? "".concat(config.space, "/") : '';
  var hostname = config.defaultHostname;
  var port = config.insecure ? 80 : 443;

  if (config.host && HOST_REGEX.test(config.host)) {
    var parsed = config.host.split(':');

    if (parsed.length === 2) {
      var _parsed = _slicedToArray(parsed, 2);

      hostname = _parsed[0];
      port = _parsed[1];
    } else {
      hostname = parsed[0];
    }
  } // Ensure that basePath does start but not end with a slash


  if (config.basePath) {
    config.basePath = "/".concat(config.basePath.split('/').filter(Boolean).join('/'));
  }

  var baseURL = options.baseURL || "".concat(protocol, "://").concat(hostname, ":").concat(port).concat(config.basePath, "/spaces/").concat(space);

  if (!config.headers.Authorization && typeof config.accessToken !== 'function') {
    config.headers.Authorization = 'Bearer ' + config.accessToken;
  } // Set these headers only for node because browsers don't like it when you
  // override user-agent or accept-encoding.
  // The SDKs should set their own X-Contentful-User-Agent.


  if (isNode()) {
    config.headers['user-agent'] = 'node.js/' + getNodeVersion();
    config.headers['Accept-Encoding'] = 'gzip';
  }

  var axiosOptions = {
    // Axios
    baseURL: baseURL,
    headers: config.headers,
    httpAgent: config.httpAgent,
    httpsAgent: config.httpsAgent,
    paramsSerializer: qs__WEBPACK_IMPORTED_MODULE_1___default.a.stringify,
    proxy: config.proxy,
    timeout: config.timeout,
    adapter: config.adapter,
    maxContentLength: config.maxContentLength,
    maxBodyLength: config.maxBodyLength,
    // Contentful
    logHandler: config.logHandler,
    responseLogger: config.responseLogger,
    requestLogger: config.requestLogger,
    retryOnError: config.retryOnError
  };
  var instance = axios.create(axiosOptions);
  instance.httpClientParams = options;
  /**
   * Creates a new axios instance with the same default base parameters as the
   * current one, and with any overrides passed to the newParams object
   * This is useful as the SDKs use dependency injection to get the axios library
   * and the version of the library comes from different places depending
   * on whether it's a browser build or a node.js build.
   * @private
   * @param {CreateHttpClientParams} httpClientParams - Initialization parameters for the HTTP client
   * @return {ContentfulAxiosInstance} Initialized axios instance
   */

  instance.cloneWithNewParams = function (newParams) {
    return createHttpClient(axios, _objectSpread2(_objectSpread2({}, Object(fast_copy__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(options)), newParams));
  };
  /**
   * Apply interceptors.
   * Please note that the order of interceptors is important
   */


  if (config.onBeforeRequest) {
    instance.interceptors.request.use(config.onBeforeRequest);
  }

  if (typeof config.accessToken === 'function') {
    asyncToken(instance, config.accessToken);
  }

  if (config.throttle) {
    rateLimitThrottle(instance, config.throttle);
  }

  rateLimit(instance, config.retryLimit);

  if (config.onError) {
    instance.interceptors.response.use(function (response) {
      return response;
    }, config.onError);
  }

  return instance;
}
/* eslint-disable @typescript-eslint/no-explicit-any */

/**
 * Creates request parameters configuration by parsing an existing query object
 * @private
 * @param {Object} query
 * @return {Object} Config object with `params` property, ready to be used in axios
 */


function createRequestConfig(_ref) {
  var query = _ref.query;
  var config = {};
  delete query.resolveLinks;
  config.params = Object(fast_copy__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(query);
  return config;
} // eslint-disable-next-line @typescript-eslint/no-explicit-any


function enforceObjPath(obj, path) {
  if (!(path in obj)) {
    var err = new Error();
    err.name = 'PropertyMissing';
    err.message = "Required property ".concat(path, " missing from:\n\n").concat(JSON.stringify(obj), "\n\n");
    throw err;
  }

  return true;
} // copied from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze


function deepFreeze(object) {
  var propNames = Object.getOwnPropertyNames(object);

  var _iterator = _createForOfIteratorHelper(propNames),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var name = _step.value;
      var value = object[name];

      if (value && _typeof(value) === 'object') {
        deepFreeze(value);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return Object.freeze(object);
}

function freezeSys(obj) {
  deepFreeze(obj.sys || {});
  return obj;
}

function getBrowserOS() {
  var win = getWindow();

  if (!win) {
    return null;
  }

  var userAgent = win.navigator.userAgent; // TODO: platform is deprecated.

  var platform = win.navigator.platform;
  var macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'];
  var windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'];
  var iosPlatforms = ['iPhone', 'iPad', 'iPod'];

  if (macosPlatforms.indexOf(platform) !== -1) {
    return 'macOS';
  } else if (iosPlatforms.indexOf(platform) !== -1) {
    return 'iOS';
  } else if (windowsPlatforms.indexOf(platform) !== -1) {
    return 'Windows';
  } else if (/Android/.test(userAgent)) {
    return 'Android';
  } else if (/Linux/.test(platform)) {
    return 'Linux';
  }

  return null;
}

function getNodeOS() {
  var platform = process.platform || 'linux';
  var version = process.version || '0.0.0';
  var platformMap = {
    android: 'Android',
    aix: 'Linux',
    darwin: 'macOS',
    freebsd: 'Linux',
    linux: 'Linux',
    openbsd: 'Linux',
    sunos: 'Linux',
    win32: 'Windows'
  };

  if (platform in platformMap) {
    return "".concat(platformMap[platform] || 'Linux', "/").concat(version);
  }

  return null;
}

function getUserAgentHeader(sdk, application, integration, feature) {
  var headerParts = [];

  if (application) {
    headerParts.push("app ".concat(application));
  }

  if (integration) {
    headerParts.push("integration ".concat(integration));
  }

  if (feature) {
    headerParts.push('feature ' + feature);
  }

  headerParts.push("sdk ".concat(sdk));
  var platform = null;

  try {
    if (isReactNative()) {
      platform = getBrowserOS();
      headerParts.push('platform ReactNative');
    } else if (isNode()) {
      platform = getNodeOS();
      headerParts.push("platform node.js/".concat(getNodeVersion()));
    } else {
      platform = getBrowserOS();
      headerParts.push('platform browser');
    }
  } catch (e) {
    platform = null;
  }

  if (platform) {
    headerParts.push("os ".concat(platform));
  }

  return "".concat(headerParts.filter(function (item) {
    return item !== '';
  }).join('; '), ";");
}
/**
 * Mixes in a method to return just a plain object with no additional methods
 * @private
 * @param data - Any plain JSON response returned from the API
 * @return Enhanced object with toPlainObject method
 */


function toPlainObject(data) {
  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  // @ts-expect-error
  return Object.defineProperty(data, 'toPlainObject', {
    enumerable: false,
    configurable: false,
    writable: false,
    value: function value() {
      return Object(fast_copy__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(this);
    }
  });
}
/**
 * Handles errors received from the server. Parses the error into a more useful
 * format, places it in an exception and throws it.
 * See https://www.contentful.com/developers/docs/references/errors/
 * for more details on the data received on the errorResponse.data property
 * and the expected error codes.
 * @private
 */


function errorHandler(errorResponse) {
  var config = errorResponse.config,
      response = errorResponse.response;
  var errorName; // Obscure the Management token

  if (config && config.headers && config.headers['Authorization']) {
    var token = "...".concat(config.headers['Authorization'].toString().substr(-5));
    config.headers['Authorization'] = "Bearer ".concat(token);
  }

  if (!lodash_isplainobject__WEBPACK_IMPORTED_MODULE_4___default()(response) || !lodash_isplainobject__WEBPACK_IMPORTED_MODULE_4___default()(config)) {
    throw errorResponse;
  }

  var data = response === null || response === void 0 ? void 0 : response.data;
  var errorData = {
    status: response === null || response === void 0 ? void 0 : response.status,
    statusText: response === null || response === void 0 ? void 0 : response.statusText,
    message: '',
    details: {}
  };

  if (lodash_isplainobject__WEBPACK_IMPORTED_MODULE_4___default()(config)) {
    errorData.request = {
      url: config.url,
      headers: config.headers,
      method: config.method,
      payloadData: config.data
    };
  }

  if (data && lodash_isplainobject__WEBPACK_IMPORTED_MODULE_4___default()(data)) {
    if ('requestId' in data) {
      errorData.requestId = data.requestId || 'UNKNOWN';
    }

    if ('message' in data) {
      errorData.message = data.message || '';
    }

    if ('details' in data) {
      errorData.details = data.details || {};
    }

    if ('sys' in data) {
      if ('id' in data.sys) {
        errorName = data.sys.id;
      }
    }
  }

  var error = new Error();
  error.name = errorName && errorName !== 'Unknown' ? errorName : "".concat(response === null || response === void 0 ? void 0 : response.status, " ").concat(response === null || response === void 0 ? void 0 : response.statusText);

  try {
    error.message = JSON.stringify(errorData, null, '  ');
  } catch (_unused) {
    var _errorData$message;

    error.message = (_errorData$message = errorData === null || errorData === void 0 ? void 0 : errorData.message) !== null && _errorData$message !== void 0 ? _errorData$message : '';
  }

  throw error;
}



/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HttpError; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function dataToMessage(data) {
  if (typeof data === 'string') {
    return data;
  } else if (data.error && data.error.message) {
    return data.error.message;
  } else {
    return JSON.stringify(data);
  }
}

var HttpError = /*#__PURE__*/function (_Error) {
  _inherits(HttpError, _Error);

  var _super = _createSuper(HttpError);

  function HttpError(status, data, message) {
    var _this;

    _classCallCheck(this, HttpError);

    _this = _super.call(this, message || dataToMessage(data));
    _this.status = status;
    _this.data = data;
    _this.name = 'HTTP_ERROR';
    Object.setPrototypeOf(_assertThisInitialized(_this), (this instanceof HttpError ? this.constructor : void 0).prototype);
    return _this;
  }

  return _createClass(HttpError);
}( /*#__PURE__*/_wrapNativeSuper(Error));

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(19);

module.exports = getBuiltIn('navigator', 'userAgent') || '';

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

var aCallable = __webpack_require__(29); // `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod


module.exports = function (V, P) {
  var func = V[P];
  return func == null ? undefined : aCallable(func);
};

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

var toIntegerOrInfinity = __webpack_require__(22);

var max = Math.max;
var min = Math.min; // Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).

module.exports = function (index, length) {
  var integer = toIntegerOrInfinity(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var toPropertyKey = __webpack_require__(70);

var definePropertyModule = __webpack_require__(12);

var createPropertyDescriptor = __webpack_require__(46);

module.exports = function (object, key, value) {
  var propertyKey = toPropertyKey(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));else object[propertyKey] = value;
};

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var global = __webpack_require__(2);

var bind = __webpack_require__(52);

var call = __webpack_require__(13);

var anObject = __webpack_require__(5);

var tryToString = __webpack_require__(108);

var isArrayIteratorMethod = __webpack_require__(183);

var lengthOfArrayLike = __webpack_require__(17);

var isPrototypeOf = __webpack_require__(38);

var getIterator = __webpack_require__(143);

var getIteratorMethod = __webpack_require__(117);

var iteratorClose = __webpack_require__(239);

var TypeError = global.TypeError;

var Result = function Result(stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

var ResultPrototype = Result.prototype;

module.exports = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = bind(unboundFunction, that);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function stop(condition) {
    if (iterator) iteratorClose(iterator, 'normal', condition);
    return new Result(true, condition);
  };

  var callFn = function callFn(value) {
    if (AS_ENTRIES) {
      anObject(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    }

    return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (!iterFn) throw TypeError(tryToString(iterable) + ' is not iterable'); // optimisation for array iterators

    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && isPrototypeOf(ResultPrototype, result)) return result;
      }

      return new Result(false);
    }

    iterator = getIterator(iterable, iterFn);
  }

  next = iterator.next;

  while (!(step = call(next, iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose(iterator, 'throw', error);
    }

    if (_typeof(result) == 'object' && result && isPrototypeOf(ResultPrototype, result)) return result;
  }

  return new Result(false);
};

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(8);

var create = __webpack_require__(41);

var definePropertyModule = __webpack_require__(12);

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype; // Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables

if (ArrayPrototype[UNSCOPABLES] == undefined) {
  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
} // add a key to Array.prototype[@@unscopables]


module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var fails = __webpack_require__(4);

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing
    method.call(null, argument || function () {
      throw 1;
    }, 1);
  });
};

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var call = __webpack_require__(13);

var DESCRIPTORS = __webpack_require__(6);

var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(202);

var ArrayBufferViewCore = __webpack_require__(11);

var ArrayBufferModule = __webpack_require__(147);

var anInstance = __webpack_require__(54);

var createPropertyDescriptor = __webpack_require__(46);

var createNonEnumerableProperty = __webpack_require__(30);

var isIntegralNumber = __webpack_require__(194);

var toLength = __webpack_require__(39);

var toIndex = __webpack_require__(248);

var toOffset = __webpack_require__(267);

var toPropertyKey = __webpack_require__(70);

var hasOwn = __webpack_require__(14);

var classof = __webpack_require__(73);

var isObject = __webpack_require__(7);

var isSymbol = __webpack_require__(87);

var create = __webpack_require__(41);

var isPrototypeOf = __webpack_require__(38);

var setPrototypeOf = __webpack_require__(53);

var getOwnPropertyNames = __webpack_require__(72).f;

var typedArrayFrom = __webpack_require__(268);

var forEach = __webpack_require__(26).forEach;

var setSpecies = __webpack_require__(92);

var definePropertyModule = __webpack_require__(12);

var getOwnPropertyDescriptorModule = __webpack_require__(28);

var InternalStateModule = __webpack_require__(21);

var inheritIfRequired = __webpack_require__(91);

var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var round = Math.round;
var RangeError = global.RangeError;
var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
var ArrayBufferPrototype = ArrayBuffer.prototype;
var DataView = ArrayBufferModule.DataView;
var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;
var TYPED_ARRAY_CONSTRUCTOR = ArrayBufferViewCore.TYPED_ARRAY_CONSTRUCTOR;
var TYPED_ARRAY_TAG = ArrayBufferViewCore.TYPED_ARRAY_TAG;
var TypedArray = ArrayBufferViewCore.TypedArray;
var TypedArrayPrototype = ArrayBufferViewCore.TypedArrayPrototype;
var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
var isTypedArray = ArrayBufferViewCore.isTypedArray;
var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
var WRONG_LENGTH = 'Wrong length';

var fromList = function fromList(C, list) {
  aTypedArrayConstructor(C);
  var index = 0;
  var length = list.length;
  var result = new C(length);

  while (length > index) {
    result[index] = list[index++];
  }

  return result;
};

var addGetter = function addGetter(it, key) {
  nativeDefineProperty(it, key, {
    get: function get() {
      return getInternalState(this)[key];
    }
  });
};

var isArrayBuffer = function isArrayBuffer(it) {
  var klass;
  return isPrototypeOf(ArrayBufferPrototype, it) || (klass = classof(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';
};

var isTypedArrayIndex = function isTypedArrayIndex(target, key) {
  return isTypedArray(target) && !isSymbol(key) && key in target && isIntegralNumber(+key) && key >= 0;
};

var wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {
  key = toPropertyKey(key);
  return isTypedArrayIndex(target, key) ? createPropertyDescriptor(2, target[key]) : nativeGetOwnPropertyDescriptor(target, key);
};

var wrappedDefineProperty = function defineProperty(target, key, descriptor) {
  key = toPropertyKey(key);

  if (isTypedArrayIndex(target, key) && isObject(descriptor) && hasOwn(descriptor, 'value') && !hasOwn(descriptor, 'get') && !hasOwn(descriptor, 'set') // TODO: add validation descriptor w/o calling accessors
  && !descriptor.configurable && (!hasOwn(descriptor, 'writable') || descriptor.writable) && (!hasOwn(descriptor, 'enumerable') || descriptor.enumerable)) {
    target[key] = descriptor.value;
    return target;
  }

  return nativeDefineProperty(target, key, descriptor);
};

if (DESCRIPTORS) {
  if (!NATIVE_ARRAY_BUFFER_VIEWS) {
    getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;
    definePropertyModule.f = wrappedDefineProperty;
    addGetter(TypedArrayPrototype, 'buffer');
    addGetter(TypedArrayPrototype, 'byteOffset');
    addGetter(TypedArrayPrototype, 'byteLength');
    addGetter(TypedArrayPrototype, 'length');
  }

  $({
    target: 'Object',
    stat: true,
    forced: !NATIVE_ARRAY_BUFFER_VIEWS
  }, {
    getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,
    defineProperty: wrappedDefineProperty
  });

  module.exports = function (TYPE, wrapper, CLAMPED) {
    var BYTES = TYPE.match(/\d+$/)[0] / 8;
    var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + TYPE;
    var SETTER = 'set' + TYPE;
    var NativeTypedArrayConstructor = global[CONSTRUCTOR_NAME];
    var TypedArrayConstructor = NativeTypedArrayConstructor;
    var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;
    var exported = {};

    var getter = function getter(that, index) {
      var data = getInternalState(that);
      return data.view[GETTER](index * BYTES + data.byteOffset, true);
    };

    var setter = function setter(that, index, value) {
      var data = getInternalState(that);
      if (CLAMPED) value = (value = round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;
      data.view[SETTER](index * BYTES + data.byteOffset, value, true);
    };

    var addElement = function addElement(that, index) {
      nativeDefineProperty(that, index, {
        get: function get() {
          return getter(this, index);
        },
        set: function set(value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };

    if (!NATIVE_ARRAY_BUFFER_VIEWS) {
      TypedArrayConstructor = wrapper(function (that, data, offset, $length) {
        anInstance(that, TypedArrayConstructorPrototype);
        var index = 0;
        var byteOffset = 0;
        var buffer, byteLength, length;

        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new ArrayBuffer(byteLength);
        } else if (isArrayBuffer(data)) {
          buffer = data;
          byteOffset = toOffset(offset, BYTES);
          var $len = data.byteLength;

          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - byteOffset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + byteOffset > $len) throw RangeError(WRONG_LENGTH);
          }

          length = byteLength / BYTES;
        } else if (isTypedArray(data)) {
          return fromList(TypedArrayConstructor, data);
        } else {
          return call(typedArrayFrom, TypedArrayConstructor, data);
        }

        setInternalState(that, {
          buffer: buffer,
          byteOffset: byteOffset,
          byteLength: byteLength,
          length: length,
          view: new DataView(buffer)
        });

        while (index < length) {
          addElement(that, index++);
        }
      });
      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
      TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(TypedArrayPrototype);
    } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {
      TypedArrayConstructor = wrapper(function (dummy, data, typedArrayOffset, $length) {
        anInstance(dummy, TypedArrayConstructorPrototype);
        return inheritIfRequired(function () {
          if (!isObject(data)) return new NativeTypedArrayConstructor(toIndex(data));
          if (isArrayBuffer(data)) return $length !== undefined ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length) : typedArrayOffset !== undefined ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES)) : new NativeTypedArrayConstructor(data);
          if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);
          return call(typedArrayFrom, TypedArrayConstructor, data);
        }(), dummy, TypedArrayConstructor);
      });
      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
      forEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {
        if (!(key in TypedArrayConstructor)) {
          createNonEnumerableProperty(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);
        }
      });
      TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;
    }

    if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {
      createNonEnumerableProperty(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);
    }

    createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_CONSTRUCTOR, TypedArrayConstructor);

    if (TYPED_ARRAY_TAG) {
      createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);
    }

    exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;
    $({
      global: true,
      forced: TypedArrayConstructor != NativeTypedArrayConstructor,
      sham: !NATIVE_ARRAY_BUFFER_VIEWS
    }, exported);

    if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {
      createNonEnumerableProperty(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);
    }

    if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {
      createNonEnumerableProperty(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);
    }

    setSpecies(CONSTRUCTOR_NAME);
  };
} else module.exports = function () {
  /* empty */
};

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var punycode = __webpack_require__(162);

var tr46 = __webpack_require__(605);

var specialSchemes = {
  ftp: 21,
  file: null,
  gopher: 70,
  http: 80,
  https: 443,
  ws: 80,
  wss: 443
};
var failure = Symbol("failure");

function countSymbols(str) {
  return punycode.ucs2.decode(str).length;
}

function at(input, idx) {
  var c = input[idx];
  return isNaN(c) ? undefined : String.fromCodePoint(c);
}

function isASCIIDigit(c) {
  return c >= 0x30 && c <= 0x39;
}

function isASCIIAlpha(c) {
  return c >= 0x41 && c <= 0x5A || c >= 0x61 && c <= 0x7A;
}

function isASCIIAlphanumeric(c) {
  return isASCIIAlpha(c) || isASCIIDigit(c);
}

function isASCIIHex(c) {
  return isASCIIDigit(c) || c >= 0x41 && c <= 0x46 || c >= 0x61 && c <= 0x66;
}

function isSingleDot(buffer) {
  return buffer === "." || buffer.toLowerCase() === "%2e";
}

function isDoubleDot(buffer) {
  buffer = buffer.toLowerCase();
  return buffer === ".." || buffer === "%2e." || buffer === ".%2e" || buffer === "%2e%2e";
}

function isWindowsDriveLetterCodePoints(cp1, cp2) {
  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);
}

function isWindowsDriveLetterString(string) {
  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === ":" || string[1] === "|");
}

function isNormalizedWindowsDriveLetterString(string) {
  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === ":";
}

function containsForbiddenHostCodePoint(string) {
  return string.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/) !== -1;
}

function containsForbiddenHostCodePointExcludingPercent(string) {
  return string.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/) !== -1;
}

function isSpecialScheme(scheme) {
  return specialSchemes[scheme] !== undefined;
}

function isSpecial(url) {
  return isSpecialScheme(url.scheme);
}

function defaultPort(scheme) {
  return specialSchemes[scheme];
}

function percentEncode(c) {
  var hex = c.toString(16).toUpperCase();

  if (hex.length === 1) {
    hex = "0" + hex;
  }

  return "%" + hex;
}

function utf8PercentEncode(c) {
  var buf = new Buffer(c);
  var str = "";

  for (var i = 0; i < buf.length; ++i) {
    str += percentEncode(buf[i]);
  }

  return str;
}

function utf8PercentDecode(str) {
  var input = new Buffer(str);
  var output = [];

  for (var i = 0; i < input.length; ++i) {
    if (input[i] !== 37) {
      output.push(input[i]);
    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {
      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));
      i += 2;
    } else {
      output.push(input[i]);
    }
  }

  return new Buffer(output).toString();
}

function isC0ControlPercentEncode(c) {
  return c <= 0x1F || c > 0x7E;
}

var extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);

function isPathPercentEncode(c) {
  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);
}

var extraUserinfoPercentEncodeSet = new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);

function isUserinfoPercentEncode(c) {
  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);
}

function percentEncodeChar(c, encodeSetPredicate) {
  var cStr = String.fromCodePoint(c);

  if (encodeSetPredicate(c)) {
    return utf8PercentEncode(cStr);
  }

  return cStr;
}

function parseIPv4Number(input) {
  var R = 10;

  if (input.length >= 2 && input.charAt(0) === "0" && input.charAt(1).toLowerCase() === "x") {
    input = input.substring(2);
    R = 16;
  } else if (input.length >= 2 && input.charAt(0) === "0") {
    input = input.substring(1);
    R = 8;
  }

  if (input === "") {
    return 0;
  }

  var regex = R === 10 ? /[^0-9]/ : R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/;

  if (regex.test(input)) {
    return failure;
  }

  return parseInt(input, R);
}

function parseIPv4(input) {
  var parts = input.split(".");

  if (parts[parts.length - 1] === "") {
    if (parts.length > 1) {
      parts.pop();
    }
  }

  if (parts.length > 4) {
    return input;
  }

  var numbers = [];

  var _iterator = _createForOfIteratorHelper(parts),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var part = _step.value;

      if (part === "") {
        return input;
      }

      var _n = parseIPv4Number(part);

      if (_n === failure) {
        return input;
      }

      numbers.push(_n);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  for (var i = 0; i < numbers.length - 1; ++i) {
    if (numbers[i] > 255) {
      return failure;
    }
  }

  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {
    return failure;
  }

  var ipv4 = numbers.pop();
  var counter = 0;

  for (var _i = 0, _numbers = numbers; _i < _numbers.length; _i++) {
    var n = _numbers[_i];
    ipv4 += n * Math.pow(256, 3 - counter);
    ++counter;
  }

  return ipv4;
}

function serializeIPv4(address) {
  var output = "";
  var n = address;

  for (var i = 1; i <= 4; ++i) {
    output = String(n % 256) + output;

    if (i !== 4) {
      output = "." + output;
    }

    n = Math.floor(n / 256);
  }

  return output;
}

function parseIPv6(input) {
  var address = [0, 0, 0, 0, 0, 0, 0, 0];
  var pieceIndex = 0;
  var compress = null;
  var pointer = 0;
  input = punycode.ucs2.decode(input);

  if (input[pointer] === 58) {
    if (input[pointer + 1] !== 58) {
      return failure;
    }

    pointer += 2;
    ++pieceIndex;
    compress = pieceIndex;
  }

  while (pointer < input.length) {
    if (pieceIndex === 8) {
      return failure;
    }

    if (input[pointer] === 58) {
      if (compress !== null) {
        return failure;
      }

      ++pointer;
      ++pieceIndex;
      compress = pieceIndex;
      continue;
    }

    var value = 0;
    var length = 0;

    while (length < 4 && isASCIIHex(input[pointer])) {
      value = value * 0x10 + parseInt(at(input, pointer), 16);
      ++pointer;
      ++length;
    }

    if (input[pointer] === 46) {
      if (length === 0) {
        return failure;
      }

      pointer -= length;

      if (pieceIndex > 6) {
        return failure;
      }

      var numbersSeen = 0;

      while (input[pointer] !== undefined) {
        var ipv4Piece = null;

        if (numbersSeen > 0) {
          if (input[pointer] === 46 && numbersSeen < 4) {
            ++pointer;
          } else {
            return failure;
          }
        }

        if (!isASCIIDigit(input[pointer])) {
          return failure;
        }

        while (isASCIIDigit(input[pointer])) {
          var number = parseInt(at(input, pointer));

          if (ipv4Piece === null) {
            ipv4Piece = number;
          } else if (ipv4Piece === 0) {
            return failure;
          } else {
            ipv4Piece = ipv4Piece * 10 + number;
          }

          if (ipv4Piece > 255) {
            return failure;
          }

          ++pointer;
        }

        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;
        ++numbersSeen;

        if (numbersSeen === 2 || numbersSeen === 4) {
          ++pieceIndex;
        }
      }

      if (numbersSeen !== 4) {
        return failure;
      }

      break;
    } else if (input[pointer] === 58) {
      ++pointer;

      if (input[pointer] === undefined) {
        return failure;
      }
    } else if (input[pointer] !== undefined) {
      return failure;
    }

    address[pieceIndex] = value;
    ++pieceIndex;
  }

  if (compress !== null) {
    var swaps = pieceIndex - compress;
    pieceIndex = 7;

    while (pieceIndex !== 0 && swaps > 0) {
      var temp = address[compress + swaps - 1];
      address[compress + swaps - 1] = address[pieceIndex];
      address[pieceIndex] = temp;
      --pieceIndex;
      --swaps;
    }
  } else if (compress === null && pieceIndex !== 8) {
    return failure;
  }

  return address;
}

function serializeIPv6(address) {
  var output = "";
  var seqResult = findLongestZeroSequence(address);
  var compress = seqResult.idx;
  var ignore0 = false;

  for (var pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {
    if (ignore0 && address[pieceIndex] === 0) {
      continue;
    } else if (ignore0) {
      ignore0 = false;
    }

    if (compress === pieceIndex) {
      var separator = pieceIndex === 0 ? "::" : ":";
      output += separator;
      ignore0 = true;
      continue;
    }

    output += address[pieceIndex].toString(16);

    if (pieceIndex !== 7) {
      output += ":";
    }
  }

  return output;
}

function parseHost(input, isSpecialArg) {
  if (input[0] === "[") {
    if (input[input.length - 1] !== "]") {
      return failure;
    }

    return parseIPv6(input.substring(1, input.length - 1));
  }

  if (!isSpecialArg) {
    return parseOpaqueHost(input);
  }

  var domain = utf8PercentDecode(input);
  var asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);

  if (asciiDomain === null) {
    return failure;
  }

  if (containsForbiddenHostCodePoint(asciiDomain)) {
    return failure;
  }

  var ipv4Host = parseIPv4(asciiDomain);

  if (typeof ipv4Host === "number" || ipv4Host === failure) {
    return ipv4Host;
  }

  return asciiDomain;
}

function parseOpaqueHost(input) {
  if (containsForbiddenHostCodePointExcludingPercent(input)) {
    return failure;
  }

  var output = "";
  var decoded = punycode.ucs2.decode(input);

  for (var i = 0; i < decoded.length; ++i) {
    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);
  }

  return output;
}

function findLongestZeroSequence(arr) {
  var maxIdx = null;
  var maxLen = 1; // only find elements > 1

  var currStart = null;
  var currLen = 0;

  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] !== 0) {
      if (currLen > maxLen) {
        maxIdx = currStart;
        maxLen = currLen;
      }

      currStart = null;
      currLen = 0;
    } else {
      if (currStart === null) {
        currStart = i;
      }

      ++currLen;
    }
  } // if trailing zeros


  if (currLen > maxLen) {
    maxIdx = currStart;
    maxLen = currLen;
  }

  return {
    idx: maxIdx,
    len: maxLen
  };
}

function serializeHost(host) {
  if (typeof host === "number") {
    return serializeIPv4(host);
  } // IPv6 serializer


  if (host instanceof Array) {
    return "[" + serializeIPv6(host) + "]";
  }

  return host;
}

function trimControlChars(url) {
  return url.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g, "");
}

function trimTabAndNewline(url) {
  return url.replace(/\u0009|\u000A|\u000D/g, "");
}

function shortenPath(url) {
  var path = url.path;

  if (path.length === 0) {
    return;
  }

  if (url.scheme === "file" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {
    return;
  }

  path.pop();
}

function includesCredentials(url) {
  return url.username !== "" || url.password !== "";
}

function cannotHaveAUsernamePasswordPort(url) {
  return url.host === null || url.host === "" || url.cannotBeABaseURL || url.scheme === "file";
}

function isNormalizedWindowsDriveLetter(string) {
  return /^[A-Za-z]:$/.test(string);
}

function URLStateMachine(input, base, encodingOverride, url, stateOverride) {
  this.pointer = 0;
  this.input = input;
  this.base = base || null;
  this.encodingOverride = encodingOverride || "utf-8";
  this.stateOverride = stateOverride;
  this.url = url;
  this.failure = false;
  this.parseError = false;

  if (!this.url) {
    this.url = {
      scheme: "",
      username: "",
      password: "",
      host: null,
      port: null,
      path: [],
      query: null,
      fragment: null,
      cannotBeABaseURL: false
    };

    var _res = trimControlChars(this.input);

    if (_res !== this.input) {
      this.parseError = true;
    }

    this.input = _res;
  }

  var res = trimTabAndNewline(this.input);

  if (res !== this.input) {
    this.parseError = true;
  }

  this.input = res;
  this.state = stateOverride || "scheme start";
  this.buffer = "";
  this.atFlag = false;
  this.arrFlag = false;
  this.passwordTokenSeenFlag = false;
  this.input = punycode.ucs2.decode(this.input);

  for (; this.pointer <= this.input.length; ++this.pointer) {
    var c = this.input[this.pointer];
    var cStr = isNaN(c) ? undefined : String.fromCodePoint(c); // exec state machine

    var ret = this["parse " + this.state](c, cStr);

    if (!ret) {
      break; // terminate algorithm
    } else if (ret === failure) {
      this.failure = true;
      break;
    }
  }
}

URLStateMachine.prototype["parse scheme start"] = function parseSchemeStart(c, cStr) {
  if (isASCIIAlpha(c)) {
    this.buffer += cStr.toLowerCase();
    this.state = "scheme";
  } else if (!this.stateOverride) {
    this.state = "no scheme";
    --this.pointer;
  } else {
    this.parseError = true;
    return failure;
  }

  return true;
};

URLStateMachine.prototype["parse scheme"] = function parseScheme(c, cStr) {
  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {
    this.buffer += cStr.toLowerCase();
  } else if (c === 58) {
    if (this.stateOverride) {
      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {
        return false;
      }

      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {
        return false;
      }

      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === "file") {
        return false;
      }

      if (this.url.scheme === "file" && (this.url.host === "" || this.url.host === null)) {
        return false;
      }
    }

    this.url.scheme = this.buffer;
    this.buffer = "";

    if (this.stateOverride) {
      return false;
    }

    if (this.url.scheme === "file") {
      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {
        this.parseError = true;
      }

      this.state = "file";
    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {
      this.state = "special relative or authority";
    } else if (isSpecial(this.url)) {
      this.state = "special authority slashes";
    } else if (this.input[this.pointer + 1] === 47) {
      this.state = "path or authority";
      ++this.pointer;
    } else {
      this.url.cannotBeABaseURL = true;
      this.url.path.push("");
      this.state = "cannot-be-a-base-URL path";
    }
  } else if (!this.stateOverride) {
    this.buffer = "";
    this.state = "no scheme";
    this.pointer = -1;
  } else {
    this.parseError = true;
    return failure;
  }

  return true;
};

URLStateMachine.prototype["parse no scheme"] = function parseNoScheme(c) {
  if (this.base === null || this.base.cannotBeABaseURL && c !== 35) {
    return failure;
  } else if (this.base.cannotBeABaseURL && c === 35) {
    this.url.scheme = this.base.scheme;
    this.url.path = this.base.path.slice();
    this.url.query = this.base.query;
    this.url.fragment = "";
    this.url.cannotBeABaseURL = true;
    this.state = "fragment";
  } else if (this.base.scheme === "file") {
    this.state = "file";
    --this.pointer;
  } else {
    this.state = "relative";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse special relative or authority"] = function parseSpecialRelativeOrAuthority(c) {
  if (c === 47 && this.input[this.pointer + 1] === 47) {
    this.state = "special authority ignore slashes";
    ++this.pointer;
  } else {
    this.parseError = true;
    this.state = "relative";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse path or authority"] = function parsePathOrAuthority(c) {
  if (c === 47) {
    this.state = "authority";
  } else {
    this.state = "path";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse relative"] = function parseRelative(c) {
  this.url.scheme = this.base.scheme;

  if (isNaN(c)) {
    this.url.username = this.base.username;
    this.url.password = this.base.password;
    this.url.host = this.base.host;
    this.url.port = this.base.port;
    this.url.path = this.base.path.slice();
    this.url.query = this.base.query;
  } else if (c === 47) {
    this.state = "relative slash";
  } else if (c === 63) {
    this.url.username = this.base.username;
    this.url.password = this.base.password;
    this.url.host = this.base.host;
    this.url.port = this.base.port;
    this.url.path = this.base.path.slice();
    this.url.query = "";
    this.state = "query";
  } else if (c === 35) {
    this.url.username = this.base.username;
    this.url.password = this.base.password;
    this.url.host = this.base.host;
    this.url.port = this.base.port;
    this.url.path = this.base.path.slice();
    this.url.query = this.base.query;
    this.url.fragment = "";
    this.state = "fragment";
  } else if (isSpecial(this.url) && c === 92) {
    this.parseError = true;
    this.state = "relative slash";
  } else {
    this.url.username = this.base.username;
    this.url.password = this.base.password;
    this.url.host = this.base.host;
    this.url.port = this.base.port;
    this.url.path = this.base.path.slice(0, this.base.path.length - 1);
    this.state = "path";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse relative slash"] = function parseRelativeSlash(c) {
  if (isSpecial(this.url) && (c === 47 || c === 92)) {
    if (c === 92) {
      this.parseError = true;
    }

    this.state = "special authority ignore slashes";
  } else if (c === 47) {
    this.state = "authority";
  } else {
    this.url.username = this.base.username;
    this.url.password = this.base.password;
    this.url.host = this.base.host;
    this.url.port = this.base.port;
    this.state = "path";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse special authority slashes"] = function parseSpecialAuthoritySlashes(c) {
  if (c === 47 && this.input[this.pointer + 1] === 47) {
    this.state = "special authority ignore slashes";
    ++this.pointer;
  } else {
    this.parseError = true;
    this.state = "special authority ignore slashes";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse special authority ignore slashes"] = function parseSpecialAuthorityIgnoreSlashes(c) {
  if (c !== 47 && c !== 92) {
    this.state = "authority";
    --this.pointer;
  } else {
    this.parseError = true;
  }

  return true;
};

URLStateMachine.prototype["parse authority"] = function parseAuthority(c, cStr) {
  if (c === 64) {
    this.parseError = true;

    if (this.atFlag) {
      this.buffer = "%40" + this.buffer;
    }

    this.atFlag = true; // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars

    var len = countSymbols(this.buffer);

    for (var pointer = 0; pointer < len; ++pointer) {
      var codePoint = this.buffer.codePointAt(pointer);

      if (codePoint === 58 && !this.passwordTokenSeenFlag) {
        this.passwordTokenSeenFlag = true;
        continue;
      }

      var encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);

      if (this.passwordTokenSeenFlag) {
        this.url.password += encodedCodePoints;
      } else {
        this.url.username += encodedCodePoints;
      }
    }

    this.buffer = "";
  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {
    if (this.atFlag && this.buffer === "") {
      this.parseError = true;
      return failure;
    }

    this.pointer -= countSymbols(this.buffer) + 1;
    this.buffer = "";
    this.state = "host";
  } else {
    this.buffer += cStr;
  }

  return true;
};

URLStateMachine.prototype["parse hostname"] = URLStateMachine.prototype["parse host"] = function parseHostName(c, cStr) {
  if (this.stateOverride && this.url.scheme === "file") {
    --this.pointer;
    this.state = "file host";
  } else if (c === 58 && !this.arrFlag) {
    if (this.buffer === "") {
      this.parseError = true;
      return failure;
    }

    var host = parseHost(this.buffer, isSpecial(this.url));

    if (host === failure) {
      return failure;
    }

    this.url.host = host;
    this.buffer = "";
    this.state = "port";

    if (this.stateOverride === "hostname") {
      return false;
    }
  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {
    --this.pointer;

    if (isSpecial(this.url) && this.buffer === "") {
      this.parseError = true;
      return failure;
    } else if (this.stateOverride && this.buffer === "" && (includesCredentials(this.url) || this.url.port !== null)) {
      this.parseError = true;
      return false;
    }

    var _host = parseHost(this.buffer, isSpecial(this.url));

    if (_host === failure) {
      return failure;
    }

    this.url.host = _host;
    this.buffer = "";
    this.state = "path start";

    if (this.stateOverride) {
      return false;
    }
  } else {
    if (c === 91) {
      this.arrFlag = true;
    } else if (c === 93) {
      this.arrFlag = false;
    }

    this.buffer += cStr;
  }

  return true;
};

URLStateMachine.prototype["parse port"] = function parsePort(c, cStr) {
  if (isASCIIDigit(c)) {
    this.buffer += cStr;
  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92 || this.stateOverride) {
    if (this.buffer !== "") {
      var port = parseInt(this.buffer);

      if (port > Math.pow(2, 16) - 1) {
        this.parseError = true;
        return failure;
      }

      this.url.port = port === defaultPort(this.url.scheme) ? null : port;
      this.buffer = "";
    }

    if (this.stateOverride) {
      return false;
    }

    this.state = "path start";
    --this.pointer;
  } else {
    this.parseError = true;
    return failure;
  }

  return true;
};

var fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);

URLStateMachine.prototype["parse file"] = function parseFile(c) {
  this.url.scheme = "file";

  if (c === 47 || c === 92) {
    if (c === 92) {
      this.parseError = true;
    }

    this.state = "file slash";
  } else if (this.base !== null && this.base.scheme === "file") {
    if (isNaN(c)) {
      this.url.host = this.base.host;
      this.url.path = this.base.path.slice();
      this.url.query = this.base.query;
    } else if (c === 63) {
      this.url.host = this.base.host;
      this.url.path = this.base.path.slice();
      this.url.query = "";
      this.state = "query";
    } else if (c === 35) {
      this.url.host = this.base.host;
      this.url.path = this.base.path.slice();
      this.url.query = this.base.query;
      this.url.fragment = "";
      this.state = "fragment";
    } else {
      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points
      !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) || this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points
      !fileOtherwiseCodePoints.has(this.input[this.pointer + 2])) {
        this.url.host = this.base.host;
        this.url.path = this.base.path.slice();
        shortenPath(this.url);
      } else {
        this.parseError = true;
      }

      this.state = "path";
      --this.pointer;
    }
  } else {
    this.state = "path";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse file slash"] = function parseFileSlash(c) {
  if (c === 47 || c === 92) {
    if (c === 92) {
      this.parseError = true;
    }

    this.state = "file host";
  } else {
    if (this.base !== null && this.base.scheme === "file") {
      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {
        this.url.path.push(this.base.path[0]);
      } else {
        this.url.host = this.base.host;
      }
    }

    this.state = "path";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse file host"] = function parseFileHost(c, cStr) {
  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {
    --this.pointer;

    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {
      this.parseError = true;
      this.state = "path";
    } else if (this.buffer === "") {
      this.url.host = "";

      if (this.stateOverride) {
        return false;
      }

      this.state = "path start";
    } else {
      var host = parseHost(this.buffer, isSpecial(this.url));

      if (host === failure) {
        return failure;
      }

      if (host === "localhost") {
        host = "";
      }

      this.url.host = host;

      if (this.stateOverride) {
        return false;
      }

      this.buffer = "";
      this.state = "path start";
    }
  } else {
    this.buffer += cStr;
  }

  return true;
};

URLStateMachine.prototype["parse path start"] = function parsePathStart(c) {
  if (isSpecial(this.url)) {
    if (c === 92) {
      this.parseError = true;
    }

    this.state = "path";

    if (c !== 47 && c !== 92) {
      --this.pointer;
    }
  } else if (!this.stateOverride && c === 63) {
    this.url.query = "";
    this.state = "query";
  } else if (!this.stateOverride && c === 35) {
    this.url.fragment = "";
    this.state = "fragment";
  } else if (c !== undefined) {
    this.state = "path";

    if (c !== 47) {
      --this.pointer;
    }
  }

  return true;
};

URLStateMachine.prototype["parse path"] = function parsePath(c) {
  if (isNaN(c) || c === 47 || isSpecial(this.url) && c === 92 || !this.stateOverride && (c === 63 || c === 35)) {
    if (isSpecial(this.url) && c === 92) {
      this.parseError = true;
    }

    if (isDoubleDot(this.buffer)) {
      shortenPath(this.url);

      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {
        this.url.path.push("");
      }
    } else if (isSingleDot(this.buffer) && c !== 47 && !(isSpecial(this.url) && c === 92)) {
      this.url.path.push("");
    } else if (!isSingleDot(this.buffer)) {
      if (this.url.scheme === "file" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {
        if (this.url.host !== "" && this.url.host !== null) {
          this.parseError = true;
          this.url.host = "";
        }

        this.buffer = this.buffer[0] + ":";
      }

      this.url.path.push(this.buffer);
    }

    this.buffer = "";

    if (this.url.scheme === "file" && (c === undefined || c === 63 || c === 35)) {
      while (this.url.path.length > 1 && this.url.path[0] === "") {
        this.parseError = true;
        this.url.path.shift();
      }
    }

    if (c === 63) {
      this.url.query = "";
      this.state = "query";
    }

    if (c === 35) {
      this.url.fragment = "";
      this.state = "fragment";
    }
  } else {
    // TODO: If c is not a URL code point and not "%", parse error.
    if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {
      this.parseError = true;
    }

    this.buffer += percentEncodeChar(c, isPathPercentEncode);
  }

  return true;
};

URLStateMachine.prototype["parse cannot-be-a-base-URL path"] = function parseCannotBeABaseURLPath(c) {
  if (c === 63) {
    this.url.query = "";
    this.state = "query";
  } else if (c === 35) {
    this.url.fragment = "";
    this.state = "fragment";
  } else {
    // TODO: Add: not a URL code point
    if (!isNaN(c) && c !== 37) {
      this.parseError = true;
    }

    if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {
      this.parseError = true;
    }

    if (!isNaN(c)) {
      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);
    }
  }

  return true;
};

URLStateMachine.prototype["parse query"] = function parseQuery(c, cStr) {
  if (isNaN(c) || !this.stateOverride && c === 35) {
    if (!isSpecial(this.url) || this.url.scheme === "ws" || this.url.scheme === "wss") {
      this.encodingOverride = "utf-8";
    }

    var buffer = new Buffer(this.buffer); // TODO: Use encoding override instead

    for (var i = 0; i < buffer.length; ++i) {
      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 || buffer[i] === 0x3C || buffer[i] === 0x3E) {
        this.url.query += percentEncode(buffer[i]);
      } else {
        this.url.query += String.fromCodePoint(buffer[i]);
      }
    }

    this.buffer = "";

    if (c === 35) {
      this.url.fragment = "";
      this.state = "fragment";
    }
  } else {
    // TODO: If c is not a URL code point and not "%", parse error.
    if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {
      this.parseError = true;
    }

    this.buffer += cStr;
  }

  return true;
};

URLStateMachine.prototype["parse fragment"] = function parseFragment(c) {
  if (isNaN(c)) {// do nothing
  } else if (c === 0x0) {
    this.parseError = true;
  } else {
    // TODO: If c is not a URL code point and not "%", parse error.
    if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {
      this.parseError = true;
    }

    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);
  }

  return true;
};

function serializeURL(url, excludeFragment) {
  var output = url.scheme + ":";

  if (url.host !== null) {
    output += "//";

    if (url.username !== "" || url.password !== "") {
      output += url.username;

      if (url.password !== "") {
        output += ":" + url.password;
      }

      output += "@";
    }

    output += serializeHost(url.host);

    if (url.port !== null) {
      output += ":" + url.port;
    }
  } else if (url.host === null && url.scheme === "file") {
    output += "//";
  }

  if (url.cannotBeABaseURL) {
    output += url.path[0];
  } else {
    var _iterator2 = _createForOfIteratorHelper(url.path),
        _step2;

    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var string = _step2.value;
        output += "/" + string;
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }

  if (url.query !== null) {
    output += "?" + url.query;
  }

  if (!excludeFragment && url.fragment !== null) {
    output += "#" + url.fragment;
  }

  return output;
}

function serializeOrigin(tuple) {
  var result = tuple.scheme + "://";
  result += serializeHost(tuple.host);

  if (tuple.port !== null) {
    result += ":" + tuple.port;
  }

  return result;
}

module.exports.serializeURL = serializeURL;

module.exports.serializeURLOrigin = function (url) {
  // https://url.spec.whatwg.org/#concept-url-origin
  switch (url.scheme) {
    case "blob":
      try {
        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));
      } catch (e) {
        // serializing an opaque origin returns "null"
        return "null";
      }

    case "ftp":
    case "gopher":
    case "http":
    case "https":
    case "ws":
    case "wss":
      return serializeOrigin({
        scheme: url.scheme,
        host: url.host,
        port: url.port
      });

    case "file":
      // spec says "exercise to the reader", chrome says "file://"
      return "file://";

    default:
      // serializing an opaque origin returns "null"
      return "null";
  }
};

module.exports.basicURLParse = function (input, options) {
  if (options === undefined) {
    options = {};
  }

  var usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);

  if (usm.failure) {
    return "failure";
  }

  return usm.url;
};

module.exports.setTheUsername = function (url, username) {
  url.username = "";
  var decoded = punycode.ucs2.decode(username);

  for (var i = 0; i < decoded.length; ++i) {
    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);
  }
};

module.exports.setThePassword = function (url, password) {
  url.password = "";
  var decoded = punycode.ucs2.decode(password);

  for (var i = 0; i < decoded.length; ++i) {
    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);
  }
};

module.exports.serializeHost = serializeHost;
module.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;

module.exports.serializeInteger = function (integer) {
  return String(integer);
};

module.exports.parseURL = function (input, options) {
  if (options === undefined) {
    options = {};
  } // We don't handle blobs, so this just delegates:


  return module.exports.basicURLParse(input, {
    baseURL: options.baseURL,
    encodingOverride: options.encodingOverride
  });
};

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TargetTypeEnum = exports.BindingTypeEnum = exports.BindingScopeEnum = void 0;
var BindingScopeEnum = {
  Request: "Request",
  Singleton: "Singleton",
  Transient: "Transient"
};
exports.BindingScopeEnum = BindingScopeEnum;
var BindingTypeEnum = {
  ConstantValue: "ConstantValue",
  Constructor: "Constructor",
  DynamicValue: "DynamicValue",
  Factory: "Factory",
  Function: "Function",
  Instance: "Instance",
  Invalid: "Invalid",
  Provider: "Provider"
};
exports.BindingTypeEnum = BindingTypeEnum;
var TargetTypeEnum = {
  ClassProperty: "ClassProperty",
  ConstructorArgument: "ConstructorArgument",
  Variable: "Variable"
};
exports.TargetTypeEnum = TargetTypeEnum;

/***/ }),
/* 68 */
/***/ (function(module, exports) {

module.exports = require("crypto");

/***/ }),
/* 69 */
/***/ (function(module, exports) {

module.exports = require("http");

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

var toPrimitive = __webpack_require__(172);

var isSymbol = __webpack_require__(87); // `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey


module.exports = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var userAgent = __webpack_require__(58);

var process = global.process;
var Deno = global.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.'); // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us

  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
} // BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0


if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);

  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

module.exports = version;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__(231);

var enumBugKeys = __webpack_require__(177);

var hiddenKeys = enumBugKeys.concat('length', 'prototype'); // `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var TO_STRING_TAG_SUPPORT = __webpack_require__(179);

var isCallable = __webpack_require__(9);

var classofRaw = __webpack_require__(37);

var wellKnownSymbol = __webpack_require__(8);

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var Object = global.Object; // ES3 wrong here

var CORRECT_ARGUMENTS = classofRaw(function () {
  return arguments;
}()) == 'Arguments'; // fallback for IE11 Script Access Denied error

var tryGet = function tryGet(it, key) {
  try {
    return it[key];
  } catch (error) {
    /* empty */
  }
}; // getting tag from ES6+ `Object.prototype.toString`


module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case
  : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag // builtinTag case
  : CORRECT_ARGUMENTS ? classofRaw(O) // ES3 arguments fallback
  : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;
};

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tagProperty = exports.tagParameter = exports.decorate = void 0;

var ERROR_MSGS = __webpack_require__(45);

var METADATA_KEY = __webpack_require__(24);

function tagParameter(annotationTarget, propertyName, parameterIndex, metadata) {
  var metadataKey = METADATA_KEY.TAGGED;

  _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex);
}

exports.tagParameter = tagParameter;

function tagProperty(annotationTarget, propertyName, metadata) {
  var metadataKey = METADATA_KEY.TAGGED_PROP;

  _tagParameterOrProperty(metadataKey, annotationTarget.constructor, propertyName, metadata);
}

exports.tagProperty = tagProperty;

function _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex) {
  var paramsOrPropertiesMetadata = {};
  var isParameterDecorator = typeof parameterIndex === "number";
  var key = parameterIndex !== undefined && isParameterDecorator ? parameterIndex.toString() : propertyName;

  if (isParameterDecorator && propertyName !== undefined) {
    throw new Error(ERROR_MSGS.INVALID_DECORATOR_OPERATION);
  }

  if (Reflect.hasOwnMetadata(metadataKey, annotationTarget)) {
    paramsOrPropertiesMetadata = Reflect.getMetadata(metadataKey, annotationTarget);
  }

  var paramOrPropertyMetadata = paramsOrPropertiesMetadata[key];

  if (!Array.isArray(paramOrPropertyMetadata)) {
    paramOrPropertyMetadata = [];
  } else {
    for (var _i = 0, paramOrPropertyMetadata_1 = paramOrPropertyMetadata; _i < paramOrPropertyMetadata_1.length; _i++) {
      var m = paramOrPropertyMetadata_1[_i];

      if (m.key === metadata.key) {
        throw new Error(ERROR_MSGS.DUPLICATED_METADATA + " " + m.key.toString());
      }
    }
  }

  paramOrPropertyMetadata.push(metadata);
  paramsOrPropertiesMetadata[key] = paramOrPropertyMetadata;
  Reflect.defineMetadata(metadataKey, paramsOrPropertiesMetadata, annotationTarget);
}

function _decorate(decorators, target) {
  Reflect.decorate(decorators, target);
}

function _param(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}

function decorate(decorator, target, parameterIndex) {
  if (typeof parameterIndex === "number") {
    _decorate([_param(parameterIndex, decorator)], target);
  } else if (typeof parameterIndex === "string") {
    Reflect.decorate([decorator], target, parameterIndex);
  } else {
    _decorate([decorator], target);
  }
}

exports.decorate = decorate;

/***/ }),
/* 75 */
/***/ (function(module, exports) {

module.exports = require("https");

/***/ }),
/* 76 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return encodeQueryString; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/**
 * @hidden
 */
function encodeQueryString(queryParameters) {
  var components = [];

  var _iterator = _createForOfIteratorHelper(queryParameters),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var keyValuePair = _step.value;
      var key = keyValuePair[0];
      var value = keyValuePair[1];
      components.push("".concat(key, "=").concat(encodeURIComponent(value)));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return components.join('&');
}

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(37); // `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe


module.exports = Array.isArray || function isArray(argument) {
  return classof(argument) == 'Array';
};

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

var uncurryThis = __webpack_require__(3);

module.exports = uncurryThis([].slice);

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(37);

var global = __webpack_require__(2);

module.exports = classof(global.process) == 'process';

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var hiddenKeys = __webpack_require__(109);

var isObject = __webpack_require__(7);

var hasOwn = __webpack_require__(14);

var defineProperty = __webpack_require__(12).f;

var getOwnPropertyNamesModule = __webpack_require__(72);

var getOwnPropertyNamesExternalModule = __webpack_require__(180);

var isExtensible = __webpack_require__(150);

var uid = __webpack_require__(88);

var FREEZING = __webpack_require__(119);

var REQUIRED = false;
var METADATA = uid('meta');
var id = 0;

var setMetadata = function setMetadata(it) {
  defineProperty(it, METADATA, {
    value: {
      objectID: 'O' + id++,
      // object ID
      weakData: {} // weak collections IDs

    }
  });
};

var fastKey = function fastKey(it, create) {
  // return a primitive with prefix
  if (!isObject(it)) return _typeof(it) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;

  if (!hasOwn(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F'; // not necessary to add metadata

    if (!create) return 'E'; // add missing metadata

    setMetadata(it); // return object ID
  }

  return it[METADATA].objectID;
};

var getWeakData = function getWeakData(it, create) {
  if (!hasOwn(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true; // not necessary to add metadata

    if (!create) return false; // add missing metadata

    setMetadata(it); // return the store of weak collections IDs
  }

  return it[METADATA].weakData;
}; // add metadata on freeze-family methods calling


var onFreeze = function onFreeze(it) {
  if (FREEZING && REQUIRED && isExtensible(it) && !hasOwn(it, METADATA)) setMetadata(it);
  return it;
};

var enable = function enable() {
  meta.enable = function () {
    /* empty */
  };

  REQUIRED = true;
  var getOwnPropertyNames = getOwnPropertyNamesModule.f;
  var splice = uncurryThis([].splice);
  var test = {};
  test[METADATA] = 1; // prevent exposing of metadata key

  if (getOwnPropertyNames(test).length) {
    getOwnPropertyNamesModule.f = function (it) {
      var result = getOwnPropertyNames(it);

      for (var i = 0, length = result.length; i < length; i++) {
        if (result[i] === METADATA) {
          splice(result, i, 1);
          break;
        }
      }

      return result;
    };

    $({
      target: 'Object',
      stat: true,
      forced: true
    }, {
      getOwnPropertyNames: getOwnPropertyNamesExternalModule.f
    });
  }
};

var meta = module.exports = {
  enable: enable,
  fastKey: fastKey,
  getWeakData: getWeakData,
  onFreeze: onFreeze
};
hiddenKeys[METADATA] = true;

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(5); // `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags


module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};

/***/ }),
/* 82 */
/***/ (function(module, exports) {

module.exports = require("util");

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(23);
/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [config] The config.
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */


function AxiosError(message, code, config, request, response) {
  Error.call(this);
  this.message = message;
  this.name = 'AxiosError';
  code && (this.code = code);
  config && (this.config = config);
  request && (this.request = request);
  response && (this.response = response);
}

utils.inherits(AxiosError, Error, {
  toJSON: function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code,
      status: this.response && this.response.status ? this.response.status : null
    };
  }
});
var prototype = AxiosError.prototype;
var descriptors = {};
['ERR_BAD_OPTION_VALUE', 'ERR_BAD_OPTION', 'ECONNABORTED', 'ETIMEDOUT', 'ERR_NETWORK', 'ERR_FR_TOO_MANY_REDIRECTS', 'ERR_DEPRECATED', 'ERR_BAD_RESPONSE', 'ERR_BAD_REQUEST', 'ERR_CANCELED' // eslint-disable-next-line func-names
].forEach(function (code) {
  descriptors[code] = {
    value: code
  };
});
Object.defineProperties(AxiosError, descriptors);
Object.defineProperty(prototype, 'isAxiosError', {
  value: true
}); // eslint-disable-next-line func-names

AxiosError.from = function (error, code, config, request, response, customProps) {
  var axiosError = Object.create(prototype);
  utils.toFlatObject(error, axiosError, function filter(obj) {
    return obj !== Error.prototype;
  });
  AxiosError.call(axiosError, error.message, code, config, request, response);
  axiosError.name = error.name;
  customProps && Object.assign(axiosError, customProps);
  return axiosError;
};

module.exports = AxiosError;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.id = void 0;
var idCounter = 0;

function id() {
  return idCounter++;
}

exports.id = id;

/***/ }),
/* 85 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ContentNotFoundError; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var ContentNotFoundError = /*#__PURE__*/function (_Error) {
  _inherits(ContentNotFoundError, _Error);

  var _super = _createSuper(ContentNotFoundError);

  function ContentNotFoundError(contentItem) {
    var _this;

    _classCallCheck(this, ContentNotFoundError);

    _this = _super.call(this, "Content item \"".concat(contentItem, "\" was not found"));
    _this.contentItem = contentItem;
    _this.name = 'CONTENT_NOT_FOUND';
    Object.setPrototypeOf(_assertThisInitialized(_this), (this instanceof ContentNotFoundError ? this.constructor : void 0).prototype);
    return _this;
  }

  return _createClass(ContentNotFoundError);
}( /*#__PURE__*/_wrapNativeSuper(Error));

/***/ }),
/* 86 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return ContentReferenceMeta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ContentMeta; });
/* harmony import */ var _Edition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(99);
/* harmony import */ var _ContentLifecycle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(100);
/* harmony import */ var _FragmentMeta__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(33);
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * Class providing meta data about an Content Reference resource.
 */

var ContentReferenceMeta = /*#__PURE__*/function (_FragmentMeta) {
  _inherits(ContentReferenceMeta, _FragmentMeta);

  var _super = _createSuper(ContentReferenceMeta);

  function ContentReferenceMeta(data) {
    _classCallCheck(this, ContentReferenceMeta);

    return _super.call(this, data);
  }

  return _createClass(ContentReferenceMeta);
}(_FragmentMeta__WEBPACK_IMPORTED_MODULE_2__[/* FragmentMeta */ "a"]);
/**
 * Class providing meta data about a content item with helper functions.
 */

var ContentMeta = /*#__PURE__*/function (_FragmentMeta2) {
  _inherits(ContentMeta, _FragmentMeta2);

  var _super2 = _createSuper(ContentMeta);

  /**
   * Creates a new ContentMeta instance.
   * @param data JSON representation of the ContentMeta model
   */
  function ContentMeta(data) {
    var _this;

    _classCallCheck(this, ContentMeta);

    _this = _super2.call(this, data);

    if (data) {
      if (data.edition) {
        _this.edition = new _Edition__WEBPACK_IMPORTED_MODULE_0__[/* Edition */ "a"](data.edition);
      }

      if (data.lifecycle) {
        _this.lifecycle = new _ContentLifecycle__WEBPACK_IMPORTED_MODULE_1__[/* ContentLifecycle */ "a"](data.lifecycle);
      }
    }

    return _this;
  }
  /**
   * Export to JSON
   */


  _createClass(ContentMeta, [{
    key: "toJSON",
    value: function toJSON() {
      var result = _get(_getPrototypeOf(ContentMeta.prototype), "toJSON", this).call(this);

      if (this.deliveryId) {
        result.deliveryId = this.deliveryId;
      }

      if (this.deliveryKey) {
        result.deliveryKey = this.deliveryKey;
      }

      if (this.name) {
        result.name = this.name;
      }

      if (this.edition) {
        result.edition = this.edition.toJSON();
      }

      if (this.lifecycle) {
        result.lifecycle = this.lifecycle.toJSON();
      }

      if (this.hierarchy) {
        result.hierarchy = this.hierarchy;
      }

      return result;
    }
    /**
     * @hidden
     * Returns true if the provided node is a content item meta data object
     * @param node JSON node to test
     */

  }], [{
    key: "isContentMeta",
    value: function isContentMeta(node) {
      return node != null && node.schema != null && (node.name != null || node.deliveryId != null);
    }
    /**
     * @hidden
     * Returns true if the provided node is a content body object
     * @param node JSON node to test
     */

  }, {
    key: "isContentBody",
    value: function isContentBody(node) {
      return node != null && this.isContentMeta(node._meta);
    }
  }]);

  return ContentMeta;
}(_FragmentMeta__WEBPACK_IMPORTED_MODULE_2__[/* FragmentMeta */ "a"]);

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var global = __webpack_require__(2);

var getBuiltIn = __webpack_require__(19);

var isCallable = __webpack_require__(9);

var isPrototypeOf = __webpack_require__(38);

var USE_SYMBOL_AS_UID = __webpack_require__(227);

var Object = global.Object;
module.exports = USE_SYMBOL_AS_UID ? function (it) {
  return _typeof(it) == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn('Symbol');
  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, Object(it));
};

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

var uncurryThis = __webpack_require__(3);

var id = 0;
var postfix = Math.random();
var toString = uncurryThis(1.0.toString);

module.exports = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(6);

var hasOwn = __webpack_require__(14);

var FunctionPrototype = Function.prototype; // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe

var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;
var EXISTS = hasOwn(FunctionPrototype, 'name'); // additional protection from minified / mangled / dropped function names

var PROPER = EXISTS && function something() {
  /* empty */
}.name === 'something';

var CONFIGURABLE = EXISTS && (!DESCRIPTORS || DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable);
module.exports = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

var uncurryThis = __webpack_require__(3);

var fails = __webpack_require__(4);

var isCallable = __webpack_require__(9);

var classof = __webpack_require__(73);

var getBuiltIn = __webpack_require__(19);

var inspectSource = __webpack_require__(138);

var noop = function noop() {
  /* empty */
};

var empty = [];
var construct = getBuiltIn('Reflect', 'construct');
var constructorRegExp = /^\s*(?:class|function)\b/;
var exec = uncurryThis(constructorRegExp.exec);
var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);

var isConstructorModern = function isConstructor(argument) {
  if (!isCallable(argument)) return false;

  try {
    construct(noop, empty, argument);
    return true;
  } catch (error) {
    return false;
  }
};

var isConstructorLegacy = function isConstructor(argument) {
  if (!isCallable(argument)) return false;

  switch (classof(argument)) {
    case 'AsyncFunction':
    case 'GeneratorFunction':
    case 'AsyncGeneratorFunction':
      return false;
  }

  try {
    // we can't check .prototype since constructors produced by .bind haven't it
    // `Function#toString` throws on some built-it function in some legacy engines
    // (for example, `DOMQuad` and similar in FF41-)
    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
  } catch (error) {
    return true;
  }
};

isConstructorLegacy.sham = true; // `IsConstructor` abstract operation
// https://tc39.es/ecma262/#sec-isconstructor

module.exports = !construct || fails(function () {
  var called;
  return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function () {
    called = true;
  }) || called;
}) ? isConstructorLegacy : isConstructorModern;

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

var isCallable = __webpack_require__(9);

var isObject = __webpack_require__(7);

var setPrototypeOf = __webpack_require__(53); // makes subclassing work correct for wrapped built-ins


module.exports = function ($this, dummy, Wrapper) {
  var NewTarget, NewTargetPrototype;
  if ( // it can work only with native `setPrototypeOf`
  setPrototypeOf && // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
  isCallable(NewTarget = dummy.constructor) && NewTarget !== Wrapper && isObject(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype) setPrototypeOf($this, NewTargetPrototype);
  return $this;
};

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var getBuiltIn = __webpack_require__(19);

var definePropertyModule = __webpack_require__(12);

var wellKnownSymbol = __webpack_require__(8);

var DESCRIPTORS = __webpack_require__(6);

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule.f;

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineProperty(Constructor, SPECIES, {
      configurable: true,
      get: function get() {
        return this;
      }
    });
  }
};

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__(18);

module.exports = function (target, src, options) {
  for (var key in src) {
    redefine(target, key, src[key], options);
  }

  return target;
};

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(5);

var aConstructor = __webpack_require__(190);

var wellKnownSymbol = __webpack_require__(8);

var SPECIES = wellKnownSymbol('species'); // `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor

module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aConstructor(S);
};

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

var uncurryThis = __webpack_require__(3);

var requireObjectCoercible = __webpack_require__(20);

var toString = __webpack_require__(10);

var whitespaces = __webpack_require__(153);

var replace = uncurryThis(''.replace);
var whitespace = '[' + whitespaces + ']';
var ltrim = RegExp('^' + whitespace + whitespace + '*');
var rtrim = RegExp(whitespace + whitespace + '*$'); // `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation

var createMethod = function createMethod(TYPE) {
  return function ($this) {
    var string = toString(requireObjectCoercible($this));
    if (TYPE & 1) string = replace(string, ltrim, '');
    if (TYPE & 2) string = replace(string, rtrim, '');
    return string;
  };
};

module.exports = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
  start: createMethod(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimend
  end: createMethod(2),
  // `String.prototype.trim` method
  // https://tc39.es/ecma262/#sec-string.prototype.trim
  trim: createMethod(3)
};

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var url = __webpack_require__(32);

var URL = url.URL;

var http = __webpack_require__(69);

var https = __webpack_require__(75);

var Writable = __webpack_require__(15).Writable;

var assert = __webpack_require__(625);

var debug = __webpack_require__(626); // Create handlers that pass events from native requests


var events = ["abort", "aborted", "connect", "error", "socket", "timeout"];
var eventHandlers = Object.create(null);
events.forEach(function (event) {
  eventHandlers[event] = function (arg1, arg2, arg3) {
    this._redirectable.emit(event, arg1, arg2, arg3);
  };
});
var InvalidUrlError = createErrorType("ERR_INVALID_URL", "Invalid URL", TypeError); // Error types with codes

var RedirectionError = createErrorType("ERR_FR_REDIRECTION_FAILURE", "Redirected request failed");
var TooManyRedirectsError = createErrorType("ERR_FR_TOO_MANY_REDIRECTS", "Maximum number of redirects exceeded");
var MaxBodyLengthExceededError = createErrorType("ERR_FR_MAX_BODY_LENGTH_EXCEEDED", "Request body larger than maxBodyLength limit");
var WriteAfterEndError = createErrorType("ERR_STREAM_WRITE_AFTER_END", "write after end"); // An HTTP(S) request that can be redirected

function RedirectableRequest(options, responseCallback) {
  // Initialize the request
  Writable.call(this);

  this._sanitizeOptions(options);

  this._options = options;
  this._ended = false;
  this._ending = false;
  this._redirectCount = 0;
  this._redirects = [];
  this._requestBodyLength = 0;
  this._requestBodyBuffers = []; // Attach a callback if passed

  if (responseCallback) {
    this.on("response", responseCallback);
  } // React to responses of native requests


  var self = this;

  this._onNativeResponse = function (response) {
    self._processResponse(response);
  }; // Perform the first request


  this._performRequest();
}

RedirectableRequest.prototype = Object.create(Writable.prototype);

RedirectableRequest.prototype.abort = function () {
  abortRequest(this._currentRequest);
  this.emit("abort");
}; // Writes buffered data to the current native request


RedirectableRequest.prototype.write = function (data, encoding, callback) {
  // Writing is not allowed if end has been called
  if (this._ending) {
    throw new WriteAfterEndError();
  } // Validate input and shift parameters if necessary


  if (!isString(data) && !isBuffer(data)) {
    throw new TypeError("data should be a string, Buffer or Uint8Array");
  }

  if (isFunction(encoding)) {
    callback = encoding;
    encoding = null;
  } // Ignore empty buffers, since writing them doesn't invoke the callback
  // https://github.com/nodejs/node/issues/22066


  if (data.length === 0) {
    if (callback) {
      callback();
    }

    return;
  } // Only write when we don't exceed the maximum body length


  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {
    this._requestBodyLength += data.length;

    this._requestBodyBuffers.push({
      data: data,
      encoding: encoding
    });

    this._currentRequest.write(data, encoding, callback);
  } // Error when we exceed the maximum body length
  else {
    this.emit("error", new MaxBodyLengthExceededError());
    this.abort();
  }
}; // Ends the current native request


RedirectableRequest.prototype.end = function (data, encoding, callback) {
  // Shift parameters if necessary
  if (isFunction(data)) {
    callback = data;
    data = encoding = null;
  } else if (isFunction(encoding)) {
    callback = encoding;
    encoding = null;
  } // Write data if needed and end


  if (!data) {
    this._ended = this._ending = true;

    this._currentRequest.end(null, null, callback);
  } else {
    var self = this;
    var currentRequest = this._currentRequest;
    this.write(data, encoding, function () {
      self._ended = true;
      currentRequest.end(null, null, callback);
    });
    this._ending = true;
  }
}; // Sets a header value on the current native request


RedirectableRequest.prototype.setHeader = function (name, value) {
  this._options.headers[name] = value;

  this._currentRequest.setHeader(name, value);
}; // Clears a header value on the current native request


RedirectableRequest.prototype.removeHeader = function (name) {
  delete this._options.headers[name];

  this._currentRequest.removeHeader(name);
}; // Global timeout for all underlying requests


RedirectableRequest.prototype.setTimeout = function (msecs, callback) {
  var self = this; // Destroys the socket on timeout

  function destroyOnTimeout(socket) {
    socket.setTimeout(msecs);
    socket.removeListener("timeout", socket.destroy);
    socket.addListener("timeout", socket.destroy);
  } // Sets up a timer to trigger a timeout event


  function startTimer(socket) {
    if (self._timeout) {
      clearTimeout(self._timeout);
    }

    self._timeout = setTimeout(function () {
      self.emit("timeout");
      clearTimer();
    }, msecs);
    destroyOnTimeout(socket);
  } // Stops a timeout from triggering


  function clearTimer() {
    // Clear the timeout
    if (self._timeout) {
      clearTimeout(self._timeout);
      self._timeout = null;
    } // Clean up all attached listeners


    self.removeListener("abort", clearTimer);
    self.removeListener("error", clearTimer);
    self.removeListener("response", clearTimer);

    if (callback) {
      self.removeListener("timeout", callback);
    }

    if (!self.socket) {
      self._currentRequest.removeListener("socket", startTimer);
    }
  } // Attach callback if passed


  if (callback) {
    this.on("timeout", callback);
  } // Start the timer if or when the socket is opened


  if (this.socket) {
    startTimer(this.socket);
  } else {
    this._currentRequest.once("socket", startTimer);
  } // Clean up on events


  this.on("socket", destroyOnTimeout);
  this.on("abort", clearTimer);
  this.on("error", clearTimer);
  this.on("response", clearTimer);
  return this;
}; // Proxy all other public ClientRequest methods


["flushHeaders", "getHeader", "setNoDelay", "setSocketKeepAlive"].forEach(function (method) {
  RedirectableRequest.prototype[method] = function (a, b) {
    return this._currentRequest[method](a, b);
  };
}); // Proxy all public ClientRequest properties

["aborted", "connection", "socket"].forEach(function (property) {
  Object.defineProperty(RedirectableRequest.prototype, property, {
    get: function get() {
      return this._currentRequest[property];
    }
  });
});

RedirectableRequest.prototype._sanitizeOptions = function (options) {
  // Ensure headers are always present
  if (!options.headers) {
    options.headers = {};
  } // Since http.request treats host as an alias of hostname,
  // but the url module interprets host as hostname plus port,
  // eliminate the host property to avoid confusion.


  if (options.host) {
    // Use hostname if set, because it has precedence
    if (!options.hostname) {
      options.hostname = options.host;
    }

    delete options.host;
  } // Complete the URL object when necessary


  if (!options.pathname && options.path) {
    var searchPos = options.path.indexOf("?");

    if (searchPos < 0) {
      options.pathname = options.path;
    } else {
      options.pathname = options.path.substring(0, searchPos);
      options.search = options.path.substring(searchPos);
    }
  }
}; // Executes the next native request (initial or redirect)


RedirectableRequest.prototype._performRequest = function () {
  // Load the native protocol
  var protocol = this._options.protocol;
  var nativeProtocol = this._options.nativeProtocols[protocol];

  if (!nativeProtocol) {
    this.emit("error", new TypeError("Unsupported protocol " + protocol));
    return;
  } // If specified, use the agent corresponding to the protocol
  // (HTTP and HTTPS use different types of agents)


  if (this._options.agents) {
    var scheme = protocol.slice(0, -1);
    this._options.agent = this._options.agents[scheme];
  } // Create the native request and set up its event handlers


  var request = this._currentRequest = nativeProtocol.request(this._options, this._onNativeResponse);
  request._redirectable = this;

  var _iterator = _createForOfIteratorHelper(events),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var event = _step.value;
      request.on(event, eventHandlers[event]);
    } // RFC7230§5.3.1: When making a request directly to an origin server, […]
    // a client MUST send only the absolute path […] as the request-target.

  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  this._currentUrl = /^\//.test(this._options.path) ? url.format(this._options) : // When making a request to a proxy, […]
  // a client MUST send the target URI in absolute-form […].
  this._options.path; // End a redirected request
  // (The first request must be ended explicitly with RedirectableRequest#end)

  if (this._isRedirect) {
    // Write the request entity and end
    var i = 0;
    var self = this;
    var buffers = this._requestBodyBuffers;

    (function writeNext(error) {
      // Only write if this request has not been redirected yet

      /* istanbul ignore else */
      if (request === self._currentRequest) {
        // Report any write errors

        /* istanbul ignore if */
        if (error) {
          self.emit("error", error);
        } // Write the next buffer if there are still left
        else if (i < buffers.length) {
          var buffer = buffers[i++];
          /* istanbul ignore else */

          if (!request.finished) {
            request.write(buffer.data, buffer.encoding, writeNext);
          }
        } // End the request if `end` has been called on us
        else if (self._ended) {
          request.end();
        }
      }
    })();
  }
}; // Processes a response from the current native request


RedirectableRequest.prototype._processResponse = function (response) {
  // Store the redirected response
  var statusCode = response.statusCode;

  if (this._options.trackRedirects) {
    this._redirects.push({
      url: this._currentUrl,
      headers: response.headers,
      statusCode: statusCode
    });
  } // RFC7231§6.4: The 3xx (Redirection) class of status code indicates
  // that further action needs to be taken by the user agent in order to
  // fulfill the request. If a Location header field is provided,
  // the user agent MAY automatically redirect its request to the URI
  // referenced by the Location field value,
  // even if the specific status code is not understood.
  // If the response is not a redirect; return it as-is


  var location = response.headers.location;

  if (!location || this._options.followRedirects === false || statusCode < 300 || statusCode >= 400) {
    response.responseUrl = this._currentUrl;
    response.redirects = this._redirects;
    this.emit("response", response); // Clean up

    this._requestBodyBuffers = [];
    return;
  } // The response is a redirect, so abort the current request


  abortRequest(this._currentRequest); // Discard the remainder of the response to avoid waiting for data

  response.destroy(); // RFC7231§6.4: A client SHOULD detect and intervene
  // in cyclical redirections (i.e., "infinite" redirection loops).

  if (++this._redirectCount > this._options.maxRedirects) {
    this.emit("error", new TooManyRedirectsError());
    return;
  } // Store the request headers if applicable


  var requestHeaders;
  var beforeRedirect = this._options.beforeRedirect;

  if (beforeRedirect) {
    requestHeaders = Object.assign({
      // The Host header was set by nativeProtocol.request
      Host: response.req.getHeader("host")
    }, this._options.headers);
  } // RFC7231§6.4: Automatic redirection needs to done with
  // care for methods not known to be safe, […]
  // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change
  // the request method from POST to GET for the subsequent request.


  var method = this._options.method;

  if ((statusCode === 301 || statusCode === 302) && this._options.method === "POST" || // RFC7231§6.4.4: The 303 (See Other) status code indicates that
  // the server is redirecting the user agent to a different resource […]
  // A user agent can perform a retrieval request targeting that URI
  // (a GET or HEAD request if using HTTP) […]
  statusCode === 303 && !/^(?:GET|HEAD)$/.test(this._options.method)) {
    this._options.method = "GET"; // Drop a possible entity and headers related to it

    this._requestBodyBuffers = [];
    removeMatchingHeaders(/^content-/i, this._options.headers);
  } // Drop the Host header, as the redirect might lead to a different host


  var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers); // If the redirect is relative, carry over the host of the last request

  var currentUrlParts = url.parse(this._currentUrl);
  var currentHost = currentHostHeader || currentUrlParts.host;
  var currentUrl = /^\w+:/.test(location) ? this._currentUrl : url.format(Object.assign(currentUrlParts, {
    host: currentHost
  })); // Determine the URL of the redirection

  var redirectUrl;

  try {
    redirectUrl = url.resolve(currentUrl, location);
  } catch (cause) {
    this.emit("error", new RedirectionError({
      cause: cause
    }));
    return;
  } // Create the redirected request


  debug("redirecting to", redirectUrl);
  this._isRedirect = true;
  var redirectUrlParts = url.parse(redirectUrl);
  Object.assign(this._options, redirectUrlParts); // Drop confidential headers when redirecting to a less secure protocol
  // or to a different domain that is not a superdomain

  if (redirectUrlParts.protocol !== currentUrlParts.protocol && redirectUrlParts.protocol !== "https:" || redirectUrlParts.host !== currentHost && !isSubdomain(redirectUrlParts.host, currentHost)) {
    removeMatchingHeaders(/^(?:authorization|cookie)$/i, this._options.headers);
  } // Evaluate the beforeRedirect callback


  if (isFunction(beforeRedirect)) {
    var responseDetails = {
      headers: response.headers,
      statusCode: statusCode
    };
    var requestDetails = {
      url: currentUrl,
      method: method,
      headers: requestHeaders
    };

    try {
      beforeRedirect(this._options, responseDetails, requestDetails);
    } catch (err) {
      this.emit("error", err);
      return;
    }

    this._sanitizeOptions(this._options);
  } // Perform the redirected request


  try {
    this._performRequest();
  } catch (cause) {
    this.emit("error", new RedirectionError({
      cause: cause
    }));
  }
}; // Wraps the key/value object of protocols with redirect functionality


function wrap(protocols) {
  // Default settings
  var exports = {
    maxRedirects: 21,
    maxBodyLength: 10 * 1024 * 1024
  }; // Wrap each protocol

  var nativeProtocols = {};
  Object.keys(protocols).forEach(function (scheme) {
    var protocol = scheme + ":";
    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];
    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol); // Executes a request, following redirects

    function request(input, options, callback) {
      // Parse parameters
      if (isString(input)) {
        var parsed;

        try {
          parsed = urlToOptions(new URL(input));
        } catch (err) {
          /* istanbul ignore next */
          parsed = url.parse(input);
        }

        if (!isString(parsed.protocol)) {
          throw new InvalidUrlError({
            input: input
          });
        }

        input = parsed;
      } else if (URL && input instanceof URL) {
        input = urlToOptions(input);
      } else {
        callback = options;
        options = input;
        input = {
          protocol: protocol
        };
      }

      if (isFunction(options)) {
        callback = options;
        options = null;
      } // Set defaults


      options = Object.assign({
        maxRedirects: exports.maxRedirects,
        maxBodyLength: exports.maxBodyLength
      }, input, options);
      options.nativeProtocols = nativeProtocols;

      if (!isString(options.host) && !isString(options.hostname)) {
        options.hostname = "::1";
      }

      assert.equal(options.protocol, protocol, "protocol mismatch");
      debug("options", options);
      return new RedirectableRequest(options, callback);
    } // Executes a GET request, following redirects


    function get(input, options, callback) {
      var wrappedRequest = wrappedProtocol.request(input, options, callback);
      wrappedRequest.end();
      return wrappedRequest;
    } // Expose the properties on the wrapped protocol


    Object.defineProperties(wrappedProtocol, {
      request: {
        value: request,
        configurable: true,
        enumerable: true,
        writable: true
      },
      get: {
        value: get,
        configurable: true,
        enumerable: true,
        writable: true
      }
    });
  });
  return exports;
}
/* istanbul ignore next */


function noop() {
  /* empty */
} // from https://github.com/nodejs/node/blob/master/lib/internal/url.js


function urlToOptions(urlObject) {
  var options = {
    protocol: urlObject.protocol,
    hostname: urlObject.hostname.startsWith("[") ?
    /* istanbul ignore next */
    urlObject.hostname.slice(1, -1) : urlObject.hostname,
    hash: urlObject.hash,
    search: urlObject.search,
    pathname: urlObject.pathname,
    path: urlObject.pathname + urlObject.search,
    href: urlObject.href
  };

  if (urlObject.port !== "") {
    options.port = Number(urlObject.port);
  }

  return options;
}

function removeMatchingHeaders(regex, headers) {
  var lastValue;

  for (var header in headers) {
    if (regex.test(header)) {
      lastValue = headers[header];
      delete headers[header];
    }
  }

  return lastValue === null || typeof lastValue === "undefined" ? undefined : String(lastValue).trim();
}

function createErrorType(code, message, baseClass) {
  // Create constructor
  function CustomError(properties) {
    Error.captureStackTrace(this, this.constructor);
    Object.assign(this, properties || {});
    this.code = code;
    this.message = this.cause ? message + ": " + this.cause.message : message;
  } // Attach constructor and set default properties


  CustomError.prototype = new (baseClass || Error)();
  CustomError.prototype.constructor = CustomError;
  CustomError.prototype.name = "Error [" + code + "]";
  return CustomError;
}

function abortRequest(request) {
  var _iterator2 = _createForOfIteratorHelper(events),
      _step2;

  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var event = _step2.value;
      request.removeListener(event, eventHandlers[event]);
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }

  request.on("error", noop);
  request.abort();
}

function isSubdomain(subdomain, domain) {
  assert(isString(subdomain) && isString(domain));
  var dot = subdomain.length - domain.length - 1;
  return dot > 0 && subdomain[dot] === "." && subdomain.endsWith(domain);
}

function isString(value) {
  return typeof value === "string" || value instanceof String;
}

function isFunction(value) {
  return typeof value === "function";
}

function isBuffer(value) {
  return _typeof(value) === "object" && "length" in value;
} // Exports


module.exports = wrap({
  http: http,
  https: https
});
module.exports.wrap = wrap;

/***/ }),
/* 97 */
/***/ (function(module, exports) {

module.exports = require("events");

/***/ }),
/* 98 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return copy; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var toStringFunction = Function.prototype.toString;
var create = Object.create,
    defineProperty = Object.defineProperty,
    getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor,
    getOwnPropertyNames = Object.getOwnPropertyNames,
    getOwnPropertySymbols = Object.getOwnPropertySymbols,
    getPrototypeOf$1 = Object.getPrototypeOf;
var _a = Object.prototype,
    hasOwnProperty = _a.hasOwnProperty,
    propertyIsEnumerable = _a.propertyIsEnumerable;
var SYMBOL_PROPERTIES = typeof getOwnPropertySymbols === 'function';
var WEAK_MAP = typeof WeakMap === 'function';
/**
 * @function createCache
 *
 * @description
 * get a new cache object to prevent circular references
 *
 * @returns the new cache object
 */

var createCache = function () {
  if (WEAK_MAP) {
    return function () {
      return new WeakMap();
    };
  }

  var Cache =
  /** @class */
  function () {
    function Cache() {
      this._keys = [];
      this._values = [];
    }

    Cache.prototype.has = function (key) {
      return !!~this._keys.indexOf(key);
    };

    Cache.prototype.get = function (key) {
      return this._values[this._keys.indexOf(key)];
    };

    Cache.prototype.set = function (key, value) {
      this._keys.push(key);

      this._values.push(value);
    };

    return Cache;
  }();

  return function () {
    return new Cache();
  };
}();
/**
 * @function getCleanClone
 *
 * @description
 * get an empty version of the object with the same prototype it has
 *
 * @param object the object to build a clean clone from
 * @param realm the realm the object resides in
 * @returns the empty cloned object
 */


var getCleanClone = function getCleanClone(object, realm) {
  var prototype = object.__proto__ || getPrototypeOf$1(object);

  if (!prototype) {
    return create(null);
  }

  var Constructor = prototype.constructor;

  if (Constructor === realm.Object) {
    return prototype === realm.Object.prototype ? {} : create(prototype);
  }

  if (~toStringFunction.call(Constructor).indexOf('[native code]')) {
    try {
      return new Constructor();
    } catch (_a) {}
  }

  return create(prototype);
};
/**
 * @function getObjectCloneLoose
 *
 * @description
 * get a copy of the object based on loose rules, meaning all enumerable keys
 * and symbols are copied, but property descriptors are not considered
 *
 * @param object the object to clone
 * @param realm the realm the object resides in
 * @param handleCopy the function that handles copying the object
 * @returns the copied object
 */


var getObjectCloneLoose = function getObjectCloneLoose(object, realm, handleCopy, cache) {
  var clone = getCleanClone(object, realm); // set in the cache immediately to be able to reuse the object recursively

  cache.set(object, clone);

  for (var key in object) {
    if (hasOwnProperty.call(object, key)) {
      clone[key] = handleCopy(object[key], cache);
    }
  }

  if (SYMBOL_PROPERTIES) {
    var symbols = getOwnPropertySymbols(object);

    for (var index = 0, length_1 = symbols.length, symbol = void 0; index < length_1; ++index) {
      symbol = symbols[index];

      if (propertyIsEnumerable.call(object, symbol)) {
        clone[symbol] = handleCopy(object[symbol], cache);
      }
    }
  }

  return clone;
};
/**
 * @function getObjectCloneStrict
 *
 * @description
 * get a copy of the object based on strict rules, meaning all keys and symbols
 * are copied based on the original property descriptors
 *
 * @param object the object to clone
 * @param realm the realm the object resides in
 * @param handleCopy the function that handles copying the object
 * @returns the copied object
 */


var getObjectCloneStrict = function getObjectCloneStrict(object, realm, handleCopy, cache) {
  var clone = getCleanClone(object, realm); // set in the cache immediately to be able to reuse the object recursively

  cache.set(object, clone);
  var properties = SYMBOL_PROPERTIES ? getOwnPropertyNames(object).concat(getOwnPropertySymbols(object)) : getOwnPropertyNames(object);

  for (var index = 0, length_2 = properties.length, property = void 0, descriptor = void 0; index < length_2; ++index) {
    property = properties[index];

    if (property !== 'callee' && property !== 'caller') {
      descriptor = getOwnPropertyDescriptor(object, property);

      if (descriptor) {
        // Only clone the value if actually a value, not a getter / setter.
        if (!descriptor.get && !descriptor.set) {
          descriptor.value = handleCopy(object[property], cache);
        }

        try {
          defineProperty(clone, property, descriptor);
        } catch (error) {
          // Tee above can fail on node in edge cases, so fall back to the loose assignment.
          clone[property] = descriptor.value;
        }
      } else {
        // In extra edge cases where the property descriptor cannot be retrived, fall back to
        // the loose assignment.
        clone[property] = handleCopy(object[property], cache);
      }
    }
  }

  return clone;
};
/**
 * @function getRegExpFlags
 *
 * @description
 * get the flags to apply to the copied regexp
 *
 * @param regExp the regexp to get the flags of
 * @returns the flags for the regexp
 */


var getRegExpFlags = function getRegExpFlags(regExp) {
  var flags = '';

  if (regExp.global) {
    flags += 'g';
  }

  if (regExp.ignoreCase) {
    flags += 'i';
  }

  if (regExp.multiline) {
    flags += 'm';
  }

  if (regExp.unicode) {
    flags += 'u';
  }

  if (regExp.sticky) {
    flags += 'y';
  }

  return flags;
}; // utils


var isArray = Array.isArray;
var getPrototypeOf = Object.getPrototypeOf;

var GLOBAL_THIS = function () {
  if (typeof globalThis !== 'undefined') {
    return globalThis;
  }

  if (typeof self !== 'undefined') {
    return self;
  }

  if (typeof window !== 'undefined') {
    return window;
  }

  if (typeof global !== 'undefined') {
    return global;
  }

  if (console && console.error) {
    console.error('Unable to locate global object, returning "this".');
  }

  return this;
}();
/**
 * @function copy
 *
 * @description
 * copy an value deeply as much as possible
 *
 * If `strict` is applied, then all properties (including non-enumerable ones)
 * are copied with their original property descriptors on both objects and arrays.
 *
 * The value is compared to the global constructors in the `realm` provided,
 * and the native constructor is always used to ensure that extensions of native
 * objects (allows in ES2015+) are maintained.
 *
 * @param value the value to copy
 * @param [options] the options for copying with
 * @param [options.isStrict] should the copy be strict
 * @param [options.realm] the realm (this) value the value is copied from
 * @returns the copied value
 */


function copy(value, options) {
  // manually coalesced instead of default parameters for performance
  var isStrict = !!(options && options.isStrict);
  var realm = options && options.realm || GLOBAL_THIS;
  var getObjectClone = isStrict ? getObjectCloneStrict : getObjectCloneLoose;
  /**
   * @function handleCopy
   *
   * @description
   * copy the value recursively based on its type
   *
   * @param value the value to copy
   * @returns the copied value
   */

  var handleCopy = function handleCopy(value, cache) {
    if (!value || _typeof(value) !== 'object') {
      return value;
    }

    if (cache.has(value)) {
      return cache.get(value);
    }

    var prototype = value.__proto__ || getPrototypeOf(value);
    var Constructor = prototype && prototype.constructor; // plain objects

    if (!Constructor || Constructor === realm.Object) {
      return getObjectClone(value, realm, handleCopy, cache);
    }

    var clone; // arrays

    if (isArray(value)) {
      // if strict, include non-standard properties
      if (isStrict) {
        return getObjectCloneStrict(value, realm, handleCopy, cache);
      }

      clone = new Constructor();
      cache.set(value, clone);

      for (var index = 0, length_1 = value.length; index < length_1; ++index) {
        clone[index] = handleCopy(value[index], cache);
      }

      return clone;
    } // dates


    if (value instanceof realm.Date) {
      return new Constructor(value.getTime());
    } // regexps


    if (value instanceof realm.RegExp) {
      clone = new Constructor(value.source, value.flags || getRegExpFlags(value));
      clone.lastIndex = value.lastIndex;
      return clone;
    } // maps


    if (realm.Map && value instanceof realm.Map) {
      clone = new Constructor();
      cache.set(value, clone);
      value.forEach(function (value, key) {
        clone.set(key, handleCopy(value, cache));
      });
      return clone;
    } // sets


    if (realm.Set && value instanceof realm.Set) {
      clone = new Constructor();
      cache.set(value, clone);
      value.forEach(function (value) {
        clone.add(handleCopy(value, cache));
      });
      return clone;
    } // blobs


    if (realm.Blob && value instanceof realm.Blob) {
      return value.slice(0, value.size, value.type);
    } // buffers (node-only)


    if (realm.Buffer && realm.Buffer.isBuffer(value)) {
      clone = realm.Buffer.allocUnsafe ? realm.Buffer.allocUnsafe(value.length) : new Constructor(value.length);
      cache.set(value, clone);
      value.copy(clone);
      return clone;
    } // arraybuffers / dataviews


    if (realm.ArrayBuffer) {
      // dataviews
      if (realm.ArrayBuffer.isView(value)) {
        clone = new Constructor(value.buffer.slice(0));
        cache.set(value, clone);
        return clone;
      } // arraybuffers


      if (value instanceof realm.ArrayBuffer) {
        clone = value.slice(0);
        cache.set(value, clone);
        return clone;
      }
    } // if the value cannot / should not be cloned, don't


    if ( // promise-like
    typeof value.then === 'function' || // errors
    value instanceof Error || // weakmaps
    realm.WeakMap && value instanceof realm.WeakMap || // weaksets
    realm.WeakSet && value instanceof realm.WeakSet) {
      return value;
    } // assume anything left is a custom constructor


    return getObjectClone(value, realm, handleCopy, cache);
  };

  return handleCopy(value, createCache());
} // Adding reference to allow usage in CommonJS libraries compiled using TSC, which
// expects there to be a default property on the exported value. See
// [#37](https://github.com/planttheidea/fast-copy/issues/37) for details.


copy["default"] = copy;
/**
 * @function strictCopy
 *
 * @description
 * copy the value with `strict` option pre-applied
 *
 * @param value the value to copy
 * @param [options] the options for copying with
 * @param [options.realm] the realm (this) value the value is copied from
 * @returns the copied value
 */

copy.strict = function strictCopy(value, options) {
  return copy(value, {
    isStrict: true,
    realm: options ? options.realm : void 0
  });
};



/***/ }),
/* 99 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Edition; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * Class representing the Edition resource with helper functions.
 * An Edition is the main way of scheduling content to be published on a specific date.
 */
var Edition = /*#__PURE__*/function () {
  /**
   * Creates a new Edition instance.
   * @param data JSON representation of the Edition model
   */
  function Edition(data) {
    _classCallCheck(this, Edition);

    if (data) {
      Object.assign(this, data);
    }
  }
  /**
   * Date when the edition should begin
   */


  _createClass(Edition, [{
    key: "getStartDate",
    value: function getStartDate() {
      return new Date(this.start);
    }
    /**
     * Date when the edition should end
     */

  }, {
    key: "getEndDate",
    value: function getEndDate() {
      return new Date(this.end);
    }
    /**
     * Export to JSON
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        id: this.id,
        start: this.start,
        end: this.end
      };
    }
  }]);

  return Edition;
}();

/***/ }),
/* 100 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ContentLifecycle; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * Class representing the lifecycle status of a Content Item with helper functions.
 */
var ContentLifecycle = /*#__PURE__*/function () {
  /**
   * Creates a new ContentLifecycle instance.
   * @param data JSON representation of the ContentLifecycle model
   */
  function ContentLifecycle(data) {
    _classCallCheck(this, ContentLifecycle);

    if (data) {
      Object.assign(this, data);
    }
  }
  /**
   * Returns a boolean to indicate if the content should no longer be displayed by your application.
   * @param currentTime Optional date to override the current time.
   */


  _createClass(ContentLifecycle, [{
    key: "isExpired",
    value: function isExpired(currentTime) {
      currentTime = currentTime || new Date();
      return this.expiryTime !== undefined && new Date(this.expiryTime).getTime() < currentTime.getTime();
    }
    /**
     * Export to JSON
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        expiryTime: this.expiryTime
      };
    }
  }]);

  return ContentLifecycle;
}();

/***/ }),
/* 101 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ContentItem; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * Class representing Content returned from the Content Delivery Service.
 * The body property will contain the properties specified by the JSON schema content type.
 * Any linked content items will be included inline in the body.
 */
var ContentItem = /*#__PURE__*/function () {
  function ContentItem() {
    _classCallCheck(this, ContentItem);
  }

  _createClass(ContentItem, [{
    key: "toJSON",
    value:
    /**
     * Returns a plain JSON version of the content body, removing helper properties and functions.
     * This should be used if your application needs to serialize the content body, e.g. in an API response.
     */
    function toJSON() {
      return JSON.parse(JSON.stringify(this.body));
    }
  }]);

  return ContentItem;
}();

/***/ }),
/* 102 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Media; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * @hidden
 * Base class for image or video resources.
 */
var Media = /*#__PURE__*/function () {
  function Media(data, config) {
    _classCallCheck(this, Media);

    this.config = config;
    Object.assign(this, data);
  }
  /**
   * Returns the hostname that should be used to load this media resource.
   * The hostname will use the staging and media host overrides if specified
   * otherwise it will use the defaultHost provided by the delivery API.
   * @param secure
   */


  _createClass(Media, [{
    key: "getHost",
    value: function getHost(secure) {
      if (this.config.stagingEnvironment) {
        return this.config.stagingEnvironment;
      }

      if (secure) {
        return this.config.secureMediaHost || this.defaultHost;
      } else {
        return this.config.mediaHost || this.config.secureMediaHost || this.defaultHost;
      }
    }
    /**
     * Export media object to JSON
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        defaultHost: this.defaultHost,
        endpoint: this.endpoint,
        name: this.name,
        id: this.id
      };
    }
  }]);

  return Media;
}();

/***/ }),
/* 103 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export MediaMeta */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImageMeta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return VideoMeta; });
/* harmony import */ var _content_model_FragmentMeta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(33);
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


/**
 * Class providing meta data about a Media resource.
 */

var MediaMeta = /*#__PURE__*/function (_FragmentMeta) {
  _inherits(MediaMeta, _FragmentMeta);

  var _super = _createSuper(MediaMeta);

  function MediaMeta(data) {
    _classCallCheck(this, MediaMeta);

    return _super.call(this, data);
  }

  return _createClass(MediaMeta);
}(_content_model_FragmentMeta__WEBPACK_IMPORTED_MODULE_0__[/* FragmentMeta */ "a"]);
/**
 * Class providing meta data about an Image resource.
 */

var ImageMeta = /*#__PURE__*/function (_MediaMeta) {
  _inherits(ImageMeta, _MediaMeta);

  var _super2 = _createSuper(ImageMeta);

  function ImageMeta(data) {
    _classCallCheck(this, ImageMeta);

    return _super2.call(this, data);
  }

  return _createClass(ImageMeta);
}(MediaMeta);
/**
 * Class providing meta data about a Video resource.
 */

var VideoMeta = /*#__PURE__*/function (_MediaMeta2) {
  _inherits(VideoMeta, _MediaMeta2);

  var _super3 = _createSuper(VideoMeta);

  function VideoMeta(data) {
    _classCallCheck(this, VideoMeta);

    return _super3.call(this, data);
  }

  return _createClass(VideoMeta);
}(MediaMeta);

/***/ }),
/* 104 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImageUrlBuilder; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * Utility which helps construct URLs to image resources hosted using the Amplience Dynamic Media platform.
 *
 * Commonly used transformations can chained together by calling the appropriate function on the builder.
 * Advanced transformations can be used by configuring a transformation template within the Amplience
 * back-office and applying the template to the builder.
 */
var ImageUrlBuilder = /*#__PURE__*/function () {
  function ImageUrlBuilder(media) {
    _classCallCheck(this, ImageUrlBuilder);

    this.media = media;
    this._protocol = 'https';
    this._query = [];
  }
  /**
   * Protocol configures what protocol style to use when building the image URL.
   *
   * ```{{protocol}}[:]//images.site.com/i/account/image```
   * @param value URL protocol, valid values are: http, https and // for protocol relative URLs
   */


  _createClass(ImageUrlBuilder, [{
    key: "protocol",
    value: function protocol(value) {
      this._protocol = value;
      return this;
    }
    /**
     * Host configures the hostname to use when building the image URL.
     * By default, the SDK will use the most appropriate hostname based on
     * the SDK configuration.
     *
     * ```https://{{host}}/i/account/image```
     * @param value Hostname to use instead of the default value.
     */

  }, {
    key: "host",
    value: function host(value) {
      this._host = value;
      return this;
    }
    /**
     * Format converts the image to the file format specified.
     * The format will be appended to the URL as a file extension.
     *
     * ```https://images.site.com/i/account/image.webp```
     * @param value  Images format to use when encoding the output.
     */

  }, {
    key: "format",
    value: function format(value) {
      this._format = value;
      return this;
    }
    /**
     * SEO filename allows a custom filename to be used to improve SEO.
     *
     * ```https://images.site.com/i/account/image/{{seoFileName}}```
     * @param value
     */

  }, {
    key: "seoFileName",
    value: function seoFileName(value) {
      this._seoFileName = value;
      return this;
    }
    /**
     * Template applies a transformation template to the image, which will
     * apply all of the transformation parameters contained in the template to the image.
     *
     * ```https://images.site.com/i/account/image?${{name}}$```
     * @param name The name of the transformation template previously configured in the Amplience back-office.
     */

  }, {
    key: "template",
    value: function template(name) {
      this._query.push("$".concat(encodeURIComponent(name), "$"));

      return this;
    }
    /**
     * Parameter appends the specified parameter to the query string. This can be used to
     * pass variables into templates.
     *
     * ```https://images.site.com/i/account/image?{{name}}={{value}}```
     * @param name
     * @param value
     */

  }, {
    key: "parameter",
    value: function parameter(name, value) {
      this._query.push("".concat(encodeURIComponent(name), "=").concat(encodeURIComponent(value)));

      return this;
    }
    /**
     * Quality sets the compression level for the image output
     *
     * ```https://images.site.com/i/account/image?qlt={{value}}```
     * @param value The quality percentage (0-100)
     */

  }, {
    key: "quality",
    value: function quality(value) {
      this._query.push("qlt=".concat(value));

      return this;
    }
    /**
     * Sharpen applies an unsharp mask to the image to refine edges or make an image look more crisp.
     *
     * ```https://images.site.com/i/account/image?unsharp={{radius}},{{sigma}},{{amount}},{{threshold}}```
     *
     * @param radius The radius of the Gaussian, in pixels, not counting the center pixel.
     * @param sigma The standard deviation of the Gaussian, in pixels.
     * @param amount The percentage of the difference between the original and the blur image that is added back into the original.
     * @param threshold The threshold, as a fraction of MaxRGB, needed to apply the difference amount.
     */

  }, {
    key: "sharpen",
    value: function sharpen() {
      var radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var sigma = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      var amount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
      var threshold = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.05;

      this._query.push("unsharp=".concat(radius, ",").concat(sigma, ",").concat(amount, ",").concat(threshold));

      return this;
    }
    /**
     * Width resizes an image to the pixel size provided. If you only provide one axis,
     * the other will be calculated to maintain aspect ratio. Use the scale mode parameter
     * to apply different resize effects like stretch or crop.
     *
     * ```https://images.site.com/i/account/image?w={{value}}```
     * @param value The new width in pixels.
     */

  }, {
    key: "width",
    value: function width(value) {
      this._query.push("w=".concat(value));

      return this;
    }
    /**
     * Height resizes an image to the pixel size provided. If you only provide one axis,
     * the other will be calculated to maintain aspect ratio. Use the scale mode parameter
     * to apply different resize effects like stretch or crop.
     *
     * ```https://images.site.com/i/account/image?h={{value}}```
     * @param value The new height in pixels.
     */

  }, {
    key: "height",
    value: function height(value) {
      this._query.push("h=".concat(value));

      return this;
    }
    /**
     * Returns the fully constructed URL for this image with any transformations.
     */

  }, {
    key: "build",
    value: function build() {
      var isSecure = this._protocol === '//' || this._protocol === 'https';
      var isVideo = this.media._meta && this.media._meta.schema === 'http://bigcontent.io/cms/schema/v1/core#/definitions/video-link';
      var url = this._protocol === '//' ? '//' : "".concat(this._protocol, "://");
      var host = this._host ? this._host : this.media.getHost(isSecure);
      url += host;
      url += "/".concat(isVideo ? 'v' : 'i', "/");
      url += encodeURIComponent(this.media.endpoint);
      url += '/';
      url += encodeURIComponent(this.media.name);

      if (this._seoFileName) {
        url += '/';
        url += encodeURIComponent(this._seoFileName);
      }

      if (this._format) {
        url += ".".concat(this._format);
      }

      if (this._query.length > 0) {
        url += '?';
        url += this._query.join('&');
      }

      return url;
    }
  }]);

  return ImageUrlBuilder;
}();

/***/ }),
/* 105 */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export copyStrict */
/* unused harmony export createCopier */
/* unused harmony export createStrictCopier */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return index; });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var toStringFunction = Function.prototype.toString;
var create = Object.create;
var toStringObject = Object.prototype.toString;
/**
 * @classdesc Fallback cache for when WeakMap is not natively supported
 */

var LegacyCache =
/** @class */
function () {
  function LegacyCache() {
    this._keys = [];
    this._values = [];
  }

  LegacyCache.prototype.has = function (key) {
    return !!~this._keys.indexOf(key);
  };

  LegacyCache.prototype.get = function (key) {
    return this._values[this._keys.indexOf(key)];
  };

  LegacyCache.prototype.set = function (key, value) {
    this._keys.push(key);

    this._values.push(value);
  };

  return LegacyCache;
}();

function createCacheLegacy() {
  return new LegacyCache();
}

function createCacheModern() {
  return new WeakMap();
}
/**
 * Get a new cache object to prevent circular references.
 */


var createCache = typeof WeakMap !== 'undefined' ? createCacheModern : createCacheLegacy;
/**
 * Get an empty version of the object with the same prototype it has.
 */

function getCleanClone(prototype) {
  if (!prototype) {
    return create(null);
  }

  var Constructor = prototype.constructor;

  if (Constructor === Object) {
    return prototype === Object.prototype ? {} : create(prototype);
  }

  if (~toStringFunction.call(Constructor).indexOf('[native code]')) {
    try {
      return new Constructor();
    } catch (_a) {}
  }

  return create(prototype);
}

function getRegExpFlagsLegacy(regExp) {
  var flags = '';

  if (regExp.global) {
    flags += 'g';
  }

  if (regExp.ignoreCase) {
    flags += 'i';
  }

  if (regExp.multiline) {
    flags += 'm';
  }

  if (regExp.unicode) {
    flags += 'u';
  }

  if (regExp.sticky) {
    flags += 'y';
  }

  return flags;
}

function getRegExpFlagsModern(regExp) {
  return regExp.flags;
}
/**
 * Get the flags to apply to the copied regexp.
 */


var getRegExpFlags = /test/g.flags === 'g' ? getRegExpFlagsModern : getRegExpFlagsLegacy;

function getTagLegacy(value) {
  var type = toStringObject.call(value);
  return type.substring(8, type.length - 1);
}

function getTagModern(value) {
  return value[Symbol.toStringTag] || getTagLegacy(value);
}
/**
 * Get the tag of the value passed, so that the correct copier can be used.
 */


var getTag = typeof Symbol !== 'undefined' ? getTagModern : getTagLegacy;
var defineProperty = Object.defineProperty,
    getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor,
    getOwnPropertyNames = Object.getOwnPropertyNames,
    getOwnPropertySymbols = Object.getOwnPropertySymbols;
var _a = Object.prototype,
    hasOwnProperty = _a.hasOwnProperty,
    propertyIsEnumerable = _a.propertyIsEnumerable;
var SUPPORTS_SYMBOL = typeof getOwnPropertySymbols === 'function';

function getStrictPropertiesModern(object) {
  return getOwnPropertyNames(object).concat(getOwnPropertySymbols(object));
}
/**
 * Get the properites used when copying objects strictly. This includes both keys and symbols.
 */


var getStrictProperties = SUPPORTS_SYMBOL ? getStrictPropertiesModern : getOwnPropertyNames;
/**
 * Striclty copy all properties contained on the object.
 */

function copyOwnPropertiesStrict(value, clone, state) {
  var properties = getStrictProperties(value);

  for (var index = 0, length_1 = properties.length, property = void 0, descriptor = void 0; index < length_1; ++index) {
    property = properties[index];

    if (property === 'callee' || property === 'caller') {
      continue;
    }

    descriptor = getOwnPropertyDescriptor(value, property);

    if (!descriptor) {
      // In extra edge cases where the property descriptor cannot be retrived, fall back to
      // the loose assignment.
      clone[property] = state.copier(value[property], state);
      continue;
    } // Only clone the value if actually a value, not a getter / setter.


    if (!descriptor.get && !descriptor.set) {
      descriptor.value = state.copier(descriptor.value, state);
    }

    try {
      defineProperty(clone, property, descriptor);
    } catch (error) {
      // Tee above can fail on node in edge cases, so fall back to the loose assignment.
      clone[property] = descriptor.value;
    }
  }

  return clone;
}
/**
 * Deeply copy the indexed values in the array.
 */


function copyArrayLoose(array, state) {
  var clone = new state.Constructor(); // set in the cache immediately to be able to reuse the object recursively

  state.cache.set(array, clone);

  for (var index = 0, length_2 = array.length; index < length_2; ++index) {
    clone[index] = state.copier(array[index], state);
  }

  return clone;
}
/**
 * Deeply copy the indexed values in the array, as well as any custom properties.
 */


function copyArrayStrict(array, state) {
  var clone = new state.Constructor(); // set in the cache immediately to be able to reuse the object recursively

  state.cache.set(array, clone);
  return copyOwnPropertiesStrict(array, clone, state);
}
/**
 * Copy the contents of the ArrayBuffer.
 */


function copyArrayBuffer(arrayBuffer, _state) {
  return arrayBuffer.slice(0);
}
/**
 * Create a new Blob with the contents of the original.
 */


function copyBlob(blob, _state) {
  return blob.slice(0, blob.size, blob.type);
}
/**
 * Create a new DataView with the contents of the original.
 */


function copyDataView(dataView, state) {
  return new state.Constructor(copyArrayBuffer(dataView.buffer));
}
/**
 * Create a new Date based on the time of the original.
 */


function copyDate(date, state) {
  return new state.Constructor(date.getTime());
}
/**
 * Deeply copy the keys and values of the original.
 */


function copyMapLoose(map, state) {
  var clone = new state.Constructor(); // set in the cache immediately to be able to reuse the object recursively

  state.cache.set(map, clone);
  map.forEach(function (value, key) {
    clone.set(key, state.copier(value, state));
  });
  return clone;
}
/**
 * Deeply copy the keys and values of the original, as well as any custom properties.
 */


function copyMapStrict(map, state) {
  return copyOwnPropertiesStrict(map, copyMapLoose(map, state), state);
}

function copyObjectLooseLegacy(object, state) {
  var clone = getCleanClone(state.prototype); // set in the cache immediately to be able to reuse the object recursively

  state.cache.set(object, clone);

  for (var key in object) {
    if (hasOwnProperty.call(object, key)) {
      clone[key] = state.copier(object[key], state);
    }
  }

  return clone;
}

function copyObjectLooseModern(object, state) {
  var clone = getCleanClone(state.prototype); // set in the cache immediately to be able to reuse the object recursively

  state.cache.set(object, clone);

  for (var key in object) {
    if (hasOwnProperty.call(object, key)) {
      clone[key] = state.copier(object[key], state);
    }
  }

  var symbols = getOwnPropertySymbols(object);

  for (var index = 0, length_3 = symbols.length, symbol = void 0; index < length_3; ++index) {
    symbol = symbols[index];

    if (propertyIsEnumerable.call(object, symbol)) {
      clone[symbol] = state.copier(object[symbol], state);
    }
  }

  return clone;
}
/**
 * Deeply copy the properties (keys and symbols) and values of the original.
 */


var copyObjectLoose = SUPPORTS_SYMBOL ? copyObjectLooseModern : copyObjectLooseLegacy;
/**
 * Deeply copy the properties (keys and symbols) and values of the original, as well
 * as any hidden or non-enumerable properties.
 */

function copyObjectStrict(object, state) {
  var clone = getCleanClone(state.prototype); // set in the cache immediately to be able to reuse the object recursively

  state.cache.set(object, clone);
  return copyOwnPropertiesStrict(object, clone, state);
}
/**
 * Create a new primitive wrapper from the value of the original.
 */


function copyPrimitiveWrapper(primitiveObject, state) {
  return new state.Constructor(primitiveObject.valueOf());
}
/**
 * Create a new RegExp based on the value and flags of the original.
 */


function copyRegExp(regExp, state) {
  var clone = new state.Constructor(regExp.source, getRegExpFlags(regExp));
  clone.lastIndex = regExp.lastIndex;
  return clone;
}
/**
 * Return the original value (an identity function).
 *
 * @note
 * THis is used for objects that cannot be copied, such as WeakMap.
 */


function copySelf(value, _state) {
  return value;
}
/**
 * Deeply copy the values of the original.
 */


function copySetLoose(set, state) {
  var clone = new state.Constructor(); // set in the cache immediately to be able to reuse the object recursively

  state.cache.set(set, clone);
  set.forEach(function (value) {
    clone.add(state.copier(value, state));
  });
  return clone;
}
/**
 * Deeply copy the values of the original, as well as any custom properties.
 */


function copySetStrict(set, state) {
  return copyOwnPropertiesStrict(set, copySetLoose(set, state), state);
}

var isArray = Array.isArray;
var assign = Object.assign,
    getPrototypeOf = Object.getPrototypeOf;
var DEFAULT_LOOSE_OPTIONS = {
  array: copyArrayLoose,
  arrayBuffer: copyArrayBuffer,
  blob: copyBlob,
  dataView: copyDataView,
  date: copyDate,
  error: copySelf,
  map: copyMapLoose,
  object: copyObjectLoose,
  regExp: copyRegExp,
  set: copySetLoose
};
var DEFAULT_STRICT_OPTIONS = assign({}, DEFAULT_LOOSE_OPTIONS, {
  array: copyArrayStrict,
  map: copyMapStrict,
  object: copyObjectStrict,
  set: copySetStrict
});
/**
 * Get the copiers used for each specific object tag.
 */

function getTagSpecificCopiers(options) {
  return {
    Arguments: options.object,
    Array: options.array,
    ArrayBuffer: options.arrayBuffer,
    Blob: options.blob,
    Boolean: copyPrimitiveWrapper,
    DataView: options.dataView,
    Date: options.date,
    Error: options.error,
    Float32Array: options.arrayBuffer,
    Float64Array: options.arrayBuffer,
    Int8Array: options.arrayBuffer,
    Int16Array: options.arrayBuffer,
    Int32Array: options.arrayBuffer,
    Map: options.map,
    Number: copyPrimitiveWrapper,
    Object: options.object,
    Promise: copySelf,
    RegExp: options.regExp,
    Set: options.set,
    String: copyPrimitiveWrapper,
    WeakMap: copySelf,
    WeakSet: copySelf,
    Uint8Array: options.arrayBuffer,
    Uint8ClampedArray: options.arrayBuffer,
    Uint16Array: options.arrayBuffer,
    Uint32Array: options.arrayBuffer,
    Uint64Array: options.arrayBuffer
  };
}
/**
 * Create a custom copier based on the object-specific copy methods passed.
 */


function createCopier(options) {
  var normalizedOptions = assign({}, DEFAULT_LOOSE_OPTIONS, options);
  var tagSpecificCopiers = getTagSpecificCopiers(normalizedOptions);
  var array = tagSpecificCopiers.Array,
      object = tagSpecificCopiers.Object;

  function copier(value, state) {
    state.prototype = state.Constructor = undefined;

    if (!value || _typeof(value) !== 'object') {
      return value;
    }

    if (state.cache.has(value)) {
      return state.cache.get(value);
    }

    state.prototype = value.__proto__ || getPrototypeOf(value);
    state.Constructor = state.prototype && state.prototype.constructor; // plain objects

    if (!state.Constructor || state.Constructor === Object) {
      return object(value, state);
    } // arrays


    if (isArray(value)) {
      return array(value, state);
    }

    var tagSpecificCopier = tagSpecificCopiers[getTag(value)];

    if (tagSpecificCopier) {
      return tagSpecificCopier(value, state);
    }

    return typeof value.then === 'function' ? value : object(value, state);
  }

  return function copy(value) {
    return copier(value, {
      Constructor: undefined,
      cache: createCache(),
      copier: copier,
      prototype: undefined
    });
  };
}
/**
 * Create a custom copier based on the object-specific copy methods passed, defaulting to the
 * same internals as `copyStrict`.
 */


function createStrictCopier(options) {
  return createCopier(assign({}, DEFAULT_STRICT_OPTIONS, options));
}
/**
 * Copy an value deeply as much as possible, where strict recreation of object properties
 * are maintained. All properties (including non-enumerable ones) are copied with their
 * original property descriptors on both objects and arrays.
 */


var copyStrict = createStrictCopier({});
/**
 * Copy an value deeply as much as possible.
 */

var index = createCopier({});


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

/* eslint-disable no-proto */


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var base64 = __webpack_require__(607);

var ieee754 = __webpack_require__(608);

var customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' // eslint-disable-line dot-notation
? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation
: null;
exports.Buffer = Buffer;
exports.SlowBuffer = SlowBuffer;
exports.INSPECT_MAX_BYTES = 50;
var K_MAX_LENGTH = 0x7fffffff;
exports.kMaxLength = K_MAX_LENGTH;
/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */

Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {
  console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');
}

function typedArraySupport() {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1);
    var proto = {
      foo: function foo() {
        return 42;
      }
    };
    Object.setPrototypeOf(proto, Uint8Array.prototype);
    Object.setPrototypeOf(arr, proto);
    return arr.foo() === 42;
  } catch (e) {
    return false;
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function get() {
    if (!Buffer.isBuffer(this)) return undefined;
    return this.buffer;
  }
});
Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function get() {
    if (!Buffer.isBuffer(this)) return undefined;
    return this.byteOffset;
  }
});

function createBuffer(length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"');
  } // Return an augmented `Uint8Array` instance


  var buf = new Uint8Array(length);
  Object.setPrototypeOf(buf, Buffer.prototype);
  return buf;
}
/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */


function Buffer(arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError('The "string" argument must be of type string. Received type number');
    }

    return allocUnsafe(arg);
  }

  return from(arg, encodingOrOffset, length);
}

Buffer.poolSize = 8192; // not used by this implementation

function from(value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset);
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayView(value);
  }

  if (value == null) {
    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + _typeof(value));
  }

  if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
    return fromArrayBuffer(value, encodingOrOffset, length);
  }

  if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length);
  }

  if (typeof value === 'number') {
    throw new TypeError('The "value" argument must not be of type number. Received type number');
  }

  var valueOf = value.valueOf && value.valueOf();

  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length);
  }

  var b = fromObject(value);
  if (b) return b;

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);
  }

  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + _typeof(value));
}
/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/


Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length);
}; // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148


Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);
Object.setPrototypeOf(Buffer, Uint8Array);

function assertSize(size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number');
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"');
  }
}

function alloc(size, fill, encoding) {
  assertSize(size);

  if (size <= 0) {
    return createBuffer(size);
  }

  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpreted as a start offset.
    return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
  }

  return createBuffer(size);
}
/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/


Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding);
};

function allocUnsafe(size) {
  assertSize(size);
  return createBuffer(size < 0 ? 0 : checked(size) | 0);
}
/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */


Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size);
};
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */


Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size);
};

function fromString(string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8';
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding);
  }

  var length = byteLength(string, encoding) | 0;
  var buf = createBuffer(length);
  var actual = buf.write(string, encoding);

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual);
  }

  return buf;
}

function fromArrayLike(array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0;
  var buf = createBuffer(length);

  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255;
  }

  return buf;
}

function fromArrayView(arrayView) {
  if (isInstance(arrayView, Uint8Array)) {
    var copy = new Uint8Array(arrayView);
    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);
  }

  return fromArrayLike(arrayView);
}

function fromArrayBuffer(array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds');
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds');
  }

  var buf;

  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array);
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset);
  } else {
    buf = new Uint8Array(array, byteOffset, length);
  } // Return an augmented `Uint8Array` instance


  Object.setPrototypeOf(buf, Buffer.prototype);
  return buf;
}

function fromObject(obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0;
    var buf = createBuffer(len);

    if (buf.length === 0) {
      return buf;
    }

    obj.copy(buf, 0, 0, len);
    return buf;
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0);
    }

    return fromArrayLike(obj);
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data);
  }
}

function checked(length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');
  }

  return length | 0;
}

function SlowBuffer(length) {
  if (+length != length) {
    // eslint-disable-line eqeqeq
    length = 0;
  }

  return Buffer.alloc(+length);
}

Buffer.isBuffer = function isBuffer(b) {
  return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false
};

Buffer.compare = function compare(a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);

  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
  }

  if (a === b) return 0;
  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }

  if (x < y) return -1;
  if (y < x) return 1;
  return 0;
};

Buffer.isEncoding = function isEncoding(encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true;

    default:
      return false;
  }
};

Buffer.concat = function concat(list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers');
  }

  if (list.length === 0) {
    return Buffer.alloc(0);
  }

  var i;

  if (length === undefined) {
    length = 0;

    for (i = 0; i < list.length; ++i) {
      length += list[i].length;
    }
  }

  var buffer = Buffer.allocUnsafe(length);
  var pos = 0;

  for (i = 0; i < list.length; ++i) {
    var buf = list[i];

    if (isInstance(buf, Uint8Array)) {
      if (pos + buf.length > buffer.length) {
        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);
        buf.copy(buffer, pos);
      } else {
        Uint8Array.prototype.set.call(buffer, buf, pos);
      }
    } else if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers');
    } else {
      buf.copy(buffer, pos);
    }

    pos += buf.length;
  }

  return buffer;
};

function byteLength(string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length;
  }

  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength;
  }

  if (typeof string !== 'string') {
    throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + _typeof(string));
  }

  var len = string.length;
  var mustMatch = arguments.length > 2 && arguments[2] === true;
  if (!mustMatch && len === 0) return 0; // Use a for loop to avoid recursion

  var loweredCase = false;

  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len;

      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length;

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2;

      case 'hex':
        return len >>> 1;

      case 'base64':
        return base64ToBytes(string).length;

      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8
        }

        encoding = ('' + encoding).toLowerCase();
        loweredCase = true;
    }
  }
}

Buffer.byteLength = byteLength;

function slowToString(encoding, start, end) {
  var loweredCase = false; // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.
  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.

  if (start === undefined || start < 0) {
    start = 0;
  } // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.


  if (start > this.length) {
    return '';
  }

  if (end === undefined || end > this.length) {
    end = this.length;
  }

  if (end <= 0) {
    return '';
  } // Force coercion to uint32. This will also coerce falsey/NaN values to 0.


  end >>>= 0;
  start >>>= 0;

  if (end <= start) {
    return '';
  }

  if (!encoding) encoding = 'utf8';

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end);

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end);

      case 'ascii':
        return asciiSlice(this, start, end);

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end);

      case 'base64':
        return base64Slice(this, start, end);

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end);

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
        encoding = (encoding + '').toLowerCase();
        loweredCase = true;
    }
  }
} // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154


Buffer.prototype._isBuffer = true;

function swap(b, n, m) {
  var i = b[n];
  b[n] = b[m];
  b[m] = i;
}

Buffer.prototype.swap16 = function swap16() {
  var len = this.length;

  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits');
  }

  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1);
  }

  return this;
};

Buffer.prototype.swap32 = function swap32() {
  var len = this.length;

  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits');
  }

  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3);
    swap(this, i + 1, i + 2);
  }

  return this;
};

Buffer.prototype.swap64 = function swap64() {
  var len = this.length;

  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits');
  }

  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7);
    swap(this, i + 1, i + 6);
    swap(this, i + 2, i + 5);
    swap(this, i + 3, i + 4);
  }

  return this;
};

Buffer.prototype.toString = function toString() {
  var length = this.length;
  if (length === 0) return '';
  if (arguments.length === 0) return utf8Slice(this, 0, length);
  return slowToString.apply(this, arguments);
};

Buffer.prototype.toLocaleString = Buffer.prototype.toString;

Buffer.prototype.equals = function equals(b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
  if (this === b) return true;
  return Buffer.compare(this, b) === 0;
};

Buffer.prototype.inspect = function inspect() {
  var str = '';
  var max = exports.INSPECT_MAX_BYTES;
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();
  if (this.length > max) str += ' ... ';
  return '<Buffer ' + str + '>';
};

if (customInspectSymbol) {
  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;
}

Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength);
  }

  if (!Buffer.isBuffer(target)) {
    throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + _typeof(target));
  }

  if (start === undefined) {
    start = 0;
  }

  if (end === undefined) {
    end = target ? target.length : 0;
  }

  if (thisStart === undefined) {
    thisStart = 0;
  }

  if (thisEnd === undefined) {
    thisEnd = this.length;
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index');
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0;
  }

  if (thisStart >= thisEnd) {
    return -1;
  }

  if (start >= end) {
    return 1;
  }

  start >>>= 0;
  end >>>= 0;
  thisStart >>>= 0;
  thisEnd >>>= 0;
  if (this === target) return 0;
  var x = thisEnd - thisStart;
  var y = end - start;
  var len = Math.min(x, y);
  var thisCopy = this.slice(thisStart, thisEnd);
  var targetCopy = target.slice(start, end);

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i];
      y = targetCopy[i];
      break;
    }
  }

  if (x < y) return -1;
  if (y < x) return 1;
  return 0;
}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf


function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1; // Normalize byteOffset

  if (typeof byteOffset === 'string') {
    encoding = byteOffset;
    byteOffset = 0;
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff;
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000;
  }

  byteOffset = +byteOffset; // Coerce to Number.

  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : buffer.length - 1;
  } // Normalize byteOffset: negative offsets start from the end of the buffer


  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;

  if (byteOffset >= buffer.length) {
    if (dir) return -1;else byteOffset = buffer.length - 1;
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0;else return -1;
  } // Normalize val


  if (typeof val === 'string') {
    val = Buffer.from(val, encoding);
  } // Finally, search either indexOf (if dir is true) or lastIndexOf


  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1;
    }

    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
  } else if (typeof val === 'number') {
    val = val & 0xFF; // Search for a byte value [0-255]

    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
      }
    }

    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
  }

  throw new TypeError('val must be string, number or Buffer');
}

function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
  var indexSize = 1;
  var arrLength = arr.length;
  var valLength = val.length;

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase();

    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1;
      }

      indexSize = 2;
      arrLength /= 2;
      valLength /= 2;
      byteOffset /= 2;
    }
  }

  function read(buf, i) {
    if (indexSize === 1) {
      return buf[i];
    } else {
      return buf.readUInt16BE(i * indexSize);
    }
  }

  var i;

  if (dir) {
    var foundIndex = -1;

    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i;
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
      } else {
        if (foundIndex !== -1) i -= i - foundIndex;
        foundIndex = -1;
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;

    for (i = byteOffset; i >= 0; i--) {
      var found = true;

      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false;
          break;
        }
      }

      if (found) return i;
    }
  }

  return -1;
}

Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1;
};

Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
};

Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
};

function hexWrite(buf, string, offset, length) {
  offset = Number(offset) || 0;
  var remaining = buf.length - offset;

  if (!length) {
    length = remaining;
  } else {
    length = Number(length);

    if (length > remaining) {
      length = remaining;
    }
  }

  var strLen = string.length;

  if (length > strLen / 2) {
    length = strLen / 2;
  }

  var i;

  for (i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16);
    if (numberIsNaN(parsed)) return i;
    buf[offset + i] = parsed;
  }

  return i;
}

function utf8Write(buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
}

function asciiWrite(buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length);
}

function base64Write(buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length);
}

function ucs2Write(buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
}

Buffer.prototype.write = function write(string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8';
    length = this.length;
    offset = 0; // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset;
    length = this.length;
    offset = 0; // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0;

    if (isFinite(length)) {
      length = length >>> 0;
      if (encoding === undefined) encoding = 'utf8';
    } else {
      encoding = length;
      length = undefined;
    }
  } else {
    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
  }

  var remaining = this.length - offset;
  if (length === undefined || length > remaining) length = remaining;

  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds');
  }

  if (!encoding) encoding = 'utf8';
  var loweredCase = false;

  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length);

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length);

      case 'ascii':
      case 'latin1':
      case 'binary':
        return asciiWrite(this, string, offset, length);

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length);

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length);

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
        encoding = ('' + encoding).toLowerCase();
        loweredCase = true;
    }
  }
};

Buffer.prototype.toJSON = function toJSON() {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  };
};

function base64Slice(buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf);
  } else {
    return base64.fromByteArray(buf.slice(start, end));
  }
}

function utf8Slice(buf, start, end) {
  end = Math.min(buf.length, end);
  var res = [];
  var i = start;

  while (i < end) {
    var firstByte = buf[i];
    var codePoint = null;
    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

    if (i + bytesPerSequence <= end) {
      var secondByte = void 0,
          thirdByte = void 0,
          fourthByte = void 0,
          tempCodePoint = void 0;

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte;
          }

          break;

        case 2:
          secondByte = buf[i + 1];

          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;

            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint;
            }
          }

          break;

        case 3:
          secondByte = buf[i + 1];
          thirdByte = buf[i + 2];

          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;

            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint;
            }
          }

          break;

        case 4:
          secondByte = buf[i + 1];
          thirdByte = buf[i + 2];
          fourthByte = buf[i + 3];

          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;

            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint;
            }
          }

      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD;
      bytesPerSequence = 1;
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000;
      res.push(codePoint >>> 10 & 0x3FF | 0xD800);
      codePoint = 0xDC00 | codePoint & 0x3FF;
    }

    res.push(codePoint);
    i += bytesPerSequence;
  }

  return decodeCodePointsArray(res);
} // Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety


var MAX_ARGUMENTS_LENGTH = 0x1000;

function decodeCodePointsArray(codePoints) {
  var len = codePoints.length;

  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()
  } // Decode in chunks to avoid "call stack size exceeded".


  var res = '';
  var i = 0;

  while (i < len) {
    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
  }

  return res;
}

function asciiSlice(buf, start, end) {
  var ret = '';
  end = Math.min(buf.length, end);

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F);
  }

  return ret;
}

function latin1Slice(buf, start, end) {
  var ret = '';
  end = Math.min(buf.length, end);

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i]);
  }

  return ret;
}

function hexSlice(buf, start, end) {
  var len = buf.length;
  if (!start || start < 0) start = 0;
  if (!end || end < 0 || end > len) end = len;
  var out = '';

  for (var i = start; i < end; ++i) {
    out += hexSliceLookupTable[buf[i]];
  }

  return out;
}

function utf16leSlice(buf, start, end) {
  var bytes = buf.slice(start, end);
  var res = ''; // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)

  for (var i = 0; i < bytes.length - 1; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
  }

  return res;
}

Buffer.prototype.slice = function slice(start, end) {
  var len = this.length;
  start = ~~start;
  end = end === undefined ? len : ~~end;

  if (start < 0) {
    start += len;
    if (start < 0) start = 0;
  } else if (start > len) {
    start = len;
  }

  if (end < 0) {
    end += len;
    if (end < 0) end = 0;
  } else if (end > len) {
    end = len;
  }

  if (end < start) end = start;
  var newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance

  Object.setPrototypeOf(newBuf, Buffer.prototype);
  return newBuf;
};
/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */


function checkOffset(offset, ext, length) {
  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
}

Buffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
  offset = offset >>> 0;
  byteLength = byteLength >>> 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);
  var val = this[offset];
  var mul = 1;
  var i = 0;

  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul;
  }

  return val;
};

Buffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
  offset = offset >>> 0;
  byteLength = byteLength >>> 0;

  if (!noAssert) {
    checkOffset(offset, byteLength, this.length);
  }

  var val = this[offset + --byteLength];
  var mul = 1;

  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul;
  }

  return val;
};

Buffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 1, this.length);
  return this[offset];
};

Buffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 2, this.length);
  return this[offset] | this[offset + 1] << 8;
};

Buffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 2, this.length);
  return this[offset] << 8 | this[offset + 1];
};

Buffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 4, this.length);
  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
};

Buffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 4, this.length);
  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
};

Buffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {
  offset = offset >>> 0;
  validateNumber(offset, 'offset');
  var first = this[offset];
  var last = this[offset + 7];

  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8);
  }

  var lo = first + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 24);
  var hi = this[++offset] + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + last * Math.pow(2, 24);
  return BigInt(lo) + (BigInt(hi) << BigInt(32));
});
Buffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {
  offset = offset >>> 0;
  validateNumber(offset, 'offset');
  var first = this[offset];
  var last = this[offset + 7];

  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8);
  }

  var hi = first * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + this[++offset];
  var lo = this[++offset] * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + last;
  return (BigInt(hi) << BigInt(32)) + BigInt(lo);
});

Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
  offset = offset >>> 0;
  byteLength = byteLength >>> 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);
  var val = this[offset];
  var mul = 1;
  var i = 0;

  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul;
  }

  mul *= 0x80;
  if (val >= mul) val -= Math.pow(2, 8 * byteLength);
  return val;
};

Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
  offset = offset >>> 0;
  byteLength = byteLength >>> 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);
  var i = byteLength;
  var mul = 1;
  var val = this[offset + --i];

  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul;
  }

  mul *= 0x80;
  if (val >= mul) val -= Math.pow(2, 8 * byteLength);
  return val;
};

Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 1, this.length);
  if (!(this[offset] & 0x80)) return this[offset];
  return (0xff - this[offset] + 1) * -1;
};

Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 2, this.length);
  var val = this[offset] | this[offset + 1] << 8;
  return val & 0x8000 ? val | 0xFFFF0000 : val;
};

Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 2, this.length);
  var val = this[offset + 1] | this[offset] << 8;
  return val & 0x8000 ? val | 0xFFFF0000 : val;
};

Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 4, this.length);
  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
};

Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 4, this.length);
  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
};

Buffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {
  offset = offset >>> 0;
  validateNumber(offset, 'offset');
  var first = this[offset];
  var last = this[offset + 7];

  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8);
  }

  var val = this[offset + 4] + this[offset + 5] * Math.pow(2, 8) + this[offset + 6] * Math.pow(2, 16) + (last << 24); // Overflow

  return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 24));
});
Buffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {
  offset = offset >>> 0;
  validateNumber(offset, 'offset');
  var first = this[offset];
  var last = this[offset + 7];

  if (first === undefined || last === undefined) {
    boundsError(offset, this.length - 8);
  }

  var val = (first << 24) + // Overflow
  this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + this[++offset];
  return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + last);
});

Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 4, this.length);
  return ieee754.read(this, offset, true, 23, 4);
};

Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 4, this.length);
  return ieee754.read(this, offset, false, 23, 4);
};

Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 8, this.length);
  return ieee754.read(this, offset, true, 52, 8);
};

Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
  offset = offset >>> 0;
  if (!noAssert) checkOffset(offset, 8, this.length);
  return ieee754.read(this, offset, false, 52, 8);
};

function checkInt(buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
  if (offset + ext > buf.length) throw new RangeError('Index out of range');
}

Buffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset >>> 0;
  byteLength = byteLength >>> 0;

  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
    checkInt(this, value, offset, byteLength, maxBytes, 0);
  }

  var mul = 1;
  var i = 0;
  this[offset] = value & 0xFF;

  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = value / mul & 0xFF;
  }

  return offset + byteLength;
};

Buffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset >>> 0;
  byteLength = byteLength >>> 0;

  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
    checkInt(this, value, offset, byteLength, maxBytes, 0);
  }

  var i = byteLength - 1;
  var mul = 1;
  this[offset + i] = value & 0xFF;

  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = value / mul & 0xFF;
  }

  return offset + byteLength;
};

Buffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
  this[offset] = value & 0xff;
  return offset + 1;
};

Buffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
  this[offset] = value & 0xff;
  this[offset + 1] = value >>> 8;
  return offset + 2;
};

Buffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
  this[offset] = value >>> 8;
  this[offset + 1] = value & 0xff;
  return offset + 2;
};

Buffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
  this[offset + 3] = value >>> 24;
  this[offset + 2] = value >>> 16;
  this[offset + 1] = value >>> 8;
  this[offset] = value & 0xff;
  return offset + 4;
};

Buffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
  this[offset] = value >>> 24;
  this[offset + 1] = value >>> 16;
  this[offset + 2] = value >>> 8;
  this[offset + 3] = value & 0xff;
  return offset + 4;
};

function wrtBigUInt64LE(buf, value, offset, min, max) {
  checkIntBI(value, min, max, buf, offset, 7);
  var lo = Number(value & BigInt(0xffffffff));
  buf[offset++] = lo;
  lo = lo >> 8;
  buf[offset++] = lo;
  lo = lo >> 8;
  buf[offset++] = lo;
  lo = lo >> 8;
  buf[offset++] = lo;
  var hi = Number(value >> BigInt(32) & BigInt(0xffffffff));
  buf[offset++] = hi;
  hi = hi >> 8;
  buf[offset++] = hi;
  hi = hi >> 8;
  buf[offset++] = hi;
  hi = hi >> 8;
  buf[offset++] = hi;
  return offset;
}

function wrtBigUInt64BE(buf, value, offset, min, max) {
  checkIntBI(value, min, max, buf, offset, 7);
  var lo = Number(value & BigInt(0xffffffff));
  buf[offset + 7] = lo;
  lo = lo >> 8;
  buf[offset + 6] = lo;
  lo = lo >> 8;
  buf[offset + 5] = lo;
  lo = lo >> 8;
  buf[offset + 4] = lo;
  var hi = Number(value >> BigInt(32) & BigInt(0xffffffff));
  buf[offset + 3] = hi;
  hi = hi >> 8;
  buf[offset + 2] = hi;
  hi = hi >> 8;
  buf[offset + 1] = hi;
  hi = hi >> 8;
  buf[offset] = hi;
  return offset + 8;
}

Buffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value) {
  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));
});
Buffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value) {
  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));
});

Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset >>> 0;

  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1);
    checkInt(this, value, offset, byteLength, limit - 1, -limit);
  }

  var i = 0;
  var mul = 1;
  var sub = 0;
  this[offset] = value & 0xFF;

  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1;
    }

    this[offset + i] = (value / mul >> 0) - sub & 0xFF;
  }

  return offset + byteLength;
};

Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset >>> 0;

  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1);
    checkInt(this, value, offset, byteLength, limit - 1, -limit);
  }

  var i = byteLength - 1;
  var mul = 1;
  var sub = 0;
  this[offset + i] = value & 0xFF;

  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1;
    }

    this[offset + i] = (value / mul >> 0) - sub & 0xFF;
  }

  return offset + byteLength;
};

Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
  if (value < 0) value = 0xff + value + 1;
  this[offset] = value & 0xff;
  return offset + 1;
};

Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
  this[offset] = value & 0xff;
  this[offset + 1] = value >>> 8;
  return offset + 2;
};

Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
  this[offset] = value >>> 8;
  this[offset + 1] = value & 0xff;
  return offset + 2;
};

Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
  this[offset] = value & 0xff;
  this[offset + 1] = value >>> 8;
  this[offset + 2] = value >>> 16;
  this[offset + 3] = value >>> 24;
  return offset + 4;
};

Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
  value = +value;
  offset = offset >>> 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
  if (value < 0) value = 0xffffffff + value + 1;
  this[offset] = value >>> 24;
  this[offset + 1] = value >>> 16;
  this[offset + 2] = value >>> 8;
  this[offset + 3] = value & 0xff;
  return offset + 4;
};

Buffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value) {
  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));
});
Buffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value) {
  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));
});

function checkIEEE754(buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range');
  if (offset < 0) throw new RangeError('Index out of range');
}

function writeFloat(buf, value, offset, littleEndian, noAssert) {
  value = +value;
  offset = offset >>> 0;

  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
  }

  ieee754.write(buf, value, offset, littleEndian, 23, 4);
  return offset + 4;
}

Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert);
};

Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert);
};

function writeDouble(buf, value, offset, littleEndian, noAssert) {
  value = +value;
  offset = offset >>> 0;

  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);
  }

  ieee754.write(buf, value, offset, littleEndian, 52, 8);
  return offset + 8;
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert);
};

Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert);
}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)


Buffer.prototype.copy = function copy(target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');
  if (!start) start = 0;
  if (!end && end !== 0) end = this.length;
  if (targetStart >= target.length) targetStart = target.length;
  if (!targetStart) targetStart = 0;
  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done

  if (end === start) return 0;
  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions

  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds');
  }

  if (start < 0 || start >= this.length) throw new RangeError('Index out of range');
  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?

  if (end > this.length) end = this.length;

  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start;
  }

  var len = end - start;

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end);
  } else {
    Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
  }

  return len;
}; // Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])


Buffer.prototype.fill = function fill(val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start;
      start = 0;
      end = this.length;
    } else if (typeof end === 'string') {
      encoding = end;
      end = this.length;
    }

    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string');
    }

    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding);
    }

    if (val.length === 1) {
      var code = val.charCodeAt(0);

      if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code;
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255;
  } else if (typeof val === 'boolean') {
    val = Number(val);
  } // Invalid ranges are not set to a default, so can range check early.


  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index');
  }

  if (end <= start) {
    return this;
  }

  start = start >>> 0;
  end = end === undefined ? this.length : end >>> 0;
  if (!val) val = 0;
  var i;

  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val;
    }
  } else {
    var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
    var len = bytes.length;

    if (len === 0) {
      throw new TypeError('The value "' + val + '" is invalid for argument "value"');
    }

    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len];
    }
  }

  return this;
}; // CUSTOM ERRORS
// =============
// Simplified versions from Node, changed for Buffer-only usage


var errors = {};

function E(sym, getMessage, Base) {
  errors[sym] = /*#__PURE__*/function (_Base) {
    _inherits(NodeError, _Base);

    var _super = _createSuper(NodeError);

    function NodeError() {
      var _this;

      _classCallCheck(this, NodeError);

      _this = _super.call(this);
      Object.defineProperty(_assertThisInitialized(_this), 'message', {
        value: getMessage.apply(_assertThisInitialized(_this), arguments),
        writable: true,
        configurable: true
      }); // Add the error code to the name to include it in the stack trace.

      _this.name = "".concat(_this.name, " [").concat(sym, "]"); // Access the stack to generate the error message including the error code
      // from the name.

      _this.stack; // eslint-disable-line no-unused-expressions
      // Reset the name to the actual name.

      delete _this.name;
      return _this;
    }

    _createClass(NodeError, [{
      key: "code",
      get: function get() {
        return sym;
      },
      set: function set(value) {
        Object.defineProperty(this, 'code', {
          configurable: true,
          enumerable: true,
          value: value,
          writable: true
        });
      }
    }, {
      key: "toString",
      value: function toString() {
        return "".concat(this.name, " [").concat(sym, "]: ").concat(this.message);
      }
    }]);

    return NodeError;
  }(Base);
}

E('ERR_BUFFER_OUT_OF_BOUNDS', function (name) {
  if (name) {
    return "".concat(name, " is outside of buffer bounds");
  }

  return 'Attempt to access memory outside buffer bounds';
}, RangeError);
E('ERR_INVALID_ARG_TYPE', function (name, actual) {
  return "The \"".concat(name, "\" argument must be of type number. Received type ").concat(_typeof(actual));
}, TypeError);
E('ERR_OUT_OF_RANGE', function (str, range, input) {
  var msg = "The value of \"".concat(str, "\" is out of range.");
  var received = input;

  if (Number.isInteger(input) && Math.abs(input) > Math.pow(2, 32)) {
    received = addNumericalSeparator(String(input));
  } else if (typeof input === 'bigint') {
    received = String(input);

    if (input > Math.pow(BigInt(2), BigInt(32)) || input < -Math.pow(BigInt(2), BigInt(32))) {
      received = addNumericalSeparator(received);
    }

    received += 'n';
  }

  msg += " It must be ".concat(range, ". Received ").concat(received);
  return msg;
}, RangeError);

function addNumericalSeparator(val) {
  var res = '';
  var i = val.length;
  var start = val[0] === '-' ? 1 : 0;

  for (; i >= start + 4; i -= 3) {
    res = "_".concat(val.slice(i - 3, i)).concat(res);
  }

  return "".concat(val.slice(0, i)).concat(res);
} // CHECK FUNCTIONS
// ===============


function checkBounds(buf, offset, byteLength) {
  validateNumber(offset, 'offset');

  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {
    boundsError(offset, buf.length - (byteLength + 1));
  }
}

function checkIntBI(value, min, max, buf, offset, byteLength) {
  if (value > max || value < min) {
    var n = typeof min === 'bigint' ? 'n' : '';
    var range;

    if (byteLength > 3) {
      if (min === 0 || min === BigInt(0)) {
        range = ">= 0".concat(n, " and < 2").concat(n, " ** ").concat((byteLength + 1) * 8).concat(n);
      } else {
        range = ">= -(2".concat(n, " ** ").concat((byteLength + 1) * 8 - 1).concat(n, ") and < 2 ** ") + "".concat((byteLength + 1) * 8 - 1).concat(n);
      }
    } else {
      range = ">= ".concat(min).concat(n, " and <= ").concat(max).concat(n);
    }

    throw new errors.ERR_OUT_OF_RANGE('value', range, value);
  }

  checkBounds(buf, offset, byteLength);
}

function validateNumber(value, name) {
  if (typeof value !== 'number') {
    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value);
  }
}

function boundsError(value, length, type) {
  if (Math.floor(value) !== value) {
    validateNumber(value, type);
    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value);
  }

  if (length < 0) {
    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();
  }

  throw new errors.ERR_OUT_OF_RANGE(type || 'offset', ">= ".concat(type ? 1 : 0, " and <= ").concat(length), value);
} // HELPER FUNCTIONS
// ================


var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;

function base64clean(str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]; // Node strips out invalid characters like \n and \t from the string, base64-js does not

  str = str.trim().replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''

  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not

  while (str.length % 4 !== 0) {
    str = str + '=';
  }

  return str;
}

function utf8ToBytes(string, units) {
  units = units || Infinity;
  var codePoint;
  var length = string.length;
  var leadSurrogate = null;
  var bytes = [];

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i); // is surrogate component

    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          continue;
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          continue;
        } // valid lead


        leadSurrogate = codePoint;
        continue;
      } // 2 leads in a row


      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
        leadSurrogate = codePoint;
        continue;
      } // valid surrogate pair


      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
    }

    leadSurrogate = null; // encode utf8

    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break;
      bytes.push(codePoint);
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break;
      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break;
      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break;
      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
    } else {
      throw new Error('Invalid code point');
    }
  }

  return bytes;
}

function asciiToBytes(str) {
  var byteArray = [];

  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF);
  }

  return byteArray;
}

function utf16leToBytes(str, units) {
  var c, hi, lo;
  var byteArray = [];

  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break;
    c = str.charCodeAt(i);
    hi = c >> 8;
    lo = c % 256;
    byteArray.push(lo);
    byteArray.push(hi);
  }

  return byteArray;
}

function base64ToBytes(str) {
  return base64.toByteArray(base64clean(str));
}

function blitBuffer(src, dst, offset, length) {
  var i;

  for (i = 0; i < length; ++i) {
    if (i + offset >= dst.length || i >= src.length) break;
    dst[i + offset] = src[i];
  }

  return i;
} // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166


function isInstance(obj, type) {
  return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
}

function numberIsNaN(obj) {
  // For IE11 support
  return obj !== obj; // eslint-disable-line no-self-compare
} // Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219


var hexSliceLookupTable = function () {
  var alphabet = '0123456789abcdef';
  var table = new Array(256);

  for (var i = 0; i < 16; ++i) {
    var i16 = i * 16;

    for (var j = 0; j < 16; ++j) {
      table[i16 + j] = alphabet[i] + alphabet[j];
    }
  }

  return table;
}(); // Return not function with Error if BigInt not supported


function defineBigIntMethod(fn) {
  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn;
}

function BufferBigIntNotDefined() {
  throw new Error('BigInt not supported');
}

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var fails = __webpack_require__(4);

var classof = __webpack_require__(37);

var Object = global.Object;
var split = uncurryThis(''.split); // fallback for non-array-like ES3 and non-enumerable old V8 strings

module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split(it, '') : Object(it);
} : Object;

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var String = global.String;

module.exports = function (argument) {
  try {
    return String(argument);
  } catch (error) {
    return 'Object';
  }
};

/***/ }),
/* 109 */
/***/ (function(module, exports) {

module.exports = {};

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__(34);

var toAbsoluteIndex = __webpack_require__(60);

var lengthOfArrayLike = __webpack_require__(17); // `Array.prototype.{ indexOf, includes }` methods implementation


var createMethod = function createMethod(IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = lengthOfArrayLike(O);
    var index = toAbsoluteIndex(fromIndex, length);
    var value; // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check

    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++]; // eslint-disable-next-line no-self-compare -- NaN check

      if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not
    } else for (; length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    }
    return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(4);

var isCallable = __webpack_require__(9);

var replacement = /#|\.prototype\./;

var isForced = function isForced(feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true : value == NATIVE ? false : isCallable(detection) ? fails(detection) : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';
module.exports = isForced;

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__(231);

var enumBugKeys = __webpack_require__(177); // `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe


module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var toAbsoluteIndex = __webpack_require__(60);

var lengthOfArrayLike = __webpack_require__(17);

var createProperty = __webpack_require__(61);

var Array = global.Array;
var max = Math.max;

module.exports = function (O, start, end) {
  var length = lengthOfArrayLike(O);
  var k = toAbsoluteIndex(start, length);
  var fin = toAbsoluteIndex(end === undefined ? length : end, length);
  var result = Array(max(fin - k, 0));

  for (var n = 0; k < fin; k++, n++) {
    createProperty(result, n, O[k]);
  }

  result.length = n;
  return result;
};

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

var arraySpeciesConstructor = __webpack_require__(349); // `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate


module.exports = function (originalArray, length) {
  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
};

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

var toString = __webpack_require__(10);

module.exports = function (argument, $default) {
  return argument === undefined ? arguments.length < 2 ? '' : $default : toString(argument);
};

/***/ }),
/* 116 */
/***/ (function(module, exports) {

module.exports = {};

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(73);

var getMethod = __webpack_require__(59);

var Iterators = __webpack_require__(116);

var wellKnownSymbol = __webpack_require__(8);

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (it != undefined) return getMethod(it, ITERATOR) || getMethod(it, '@@iterator') || Iterators[classof(it)];
};

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(4);

var wellKnownSymbol = __webpack_require__(8);

var V8_VERSION = __webpack_require__(71);

var SPECIES = wellKnownSymbol('species');

module.exports = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};

    constructor[SPECIES] = function () {
      return {
        foo: 1
      };
    };

    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(4);

module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing
  return Object.isExtensible(Object.preventExtensions({}));
});

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(7);

var classof = __webpack_require__(37);

var wellKnownSymbol = __webpack_require__(8);

var MATCH = wellKnownSymbol('match'); // `IsRegExp` abstract operation
// https://tc39.es/ecma262/#sec-isregexp

module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
};

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var call = __webpack_require__(13);

var anObject = __webpack_require__(5);

var isCallable = __webpack_require__(9);

var classof = __webpack_require__(37);

var regexpExec = __webpack_require__(157);

var TypeError = global.TypeError; // `RegExpExec` abstract operation
// https://tc39.es/ecma262/#sec-regexpexec

module.exports = function (R, S) {
  var exec = R.exec;

  if (isCallable(exec)) {
    var result = call(exec, R, S);
    if (result !== null) anObject(result);
    return result;
  }

  if (classof(R) === 'RegExp') return call(regexpExec, R, S);
  throw TypeError('RegExp#exec called on incompatible receiver');
};

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */

function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;
module.exports = Cancel;

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Dependencies
 */

var convertKeys = __webpack_require__(209);

var strToCamelCase = __webpack_require__(640);
/**
 * Convert object keys to camel case
 */


module.exports = function toCamelCase(obj, ignored) {
  return convertKeys(obj, strToCamelCase, ignored);
};

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Deep cloning helper for objects
 */

module.exports = function deepClone(obj) {
  return JSON.parse(JSON.stringify(obj));
};

/***/ }),
/* 125 */
/***/ (function(module, exports) {

module.exports = require("fs");

/***/ }),
/* 126 */
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var AxiosError = __webpack_require__(83);

var utils = __webpack_require__(23);
/**
 * A `CanceledError` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */


function CanceledError(message) {
  // eslint-disable-next-line no-eq-null,eqeqeq
  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);
  this.name = 'CanceledError';
}

utils.inherits(CanceledError, AxiosError, {
  __CANCEL__: true
});
module.exports = CanceledError;

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circularDependencyToException = exports.listMetadataForTarget = exports.listRegisteredBindingsForServiceIdentifier = exports.getServiceIdentifierAsString = exports.getFunctionName = void 0;

var ERROR_MSGS = __webpack_require__(45);

function getServiceIdentifierAsString(serviceIdentifier) {
  if (typeof serviceIdentifier === "function") {
    var _serviceIdentifier = serviceIdentifier;
    return _serviceIdentifier.name;
  } else if (_typeof(serviceIdentifier) === "symbol") {
    return serviceIdentifier.toString();
  } else {
    var _serviceIdentifier = serviceIdentifier;
    return _serviceIdentifier;
  }
}

exports.getServiceIdentifierAsString = getServiceIdentifierAsString;

function listRegisteredBindingsForServiceIdentifier(container, serviceIdentifier, getBindings) {
  var registeredBindingsList = "";
  var registeredBindings = getBindings(container, serviceIdentifier);

  if (registeredBindings.length !== 0) {
    registeredBindingsList = "\nRegistered bindings:";
    registeredBindings.forEach(function (binding) {
      var name = "Object";

      if (binding.implementationType !== null) {
        name = getFunctionName(binding.implementationType);
      }

      registeredBindingsList = registeredBindingsList + "\n " + name;

      if (binding.constraint.metaData) {
        registeredBindingsList = registeredBindingsList + " - " + binding.constraint.metaData;
      }
    });
  }

  return registeredBindingsList;
}

exports.listRegisteredBindingsForServiceIdentifier = listRegisteredBindingsForServiceIdentifier;

function alreadyDependencyChain(request, serviceIdentifier) {
  if (request.parentRequest === null) {
    return false;
  } else if (request.parentRequest.serviceIdentifier === serviceIdentifier) {
    return true;
  } else {
    return alreadyDependencyChain(request.parentRequest, serviceIdentifier);
  }
}

function dependencyChainToString(request) {
  function _createStringArr(req, result) {
    if (result === void 0) {
      result = [];
    }

    var serviceIdentifier = getServiceIdentifierAsString(req.serviceIdentifier);
    result.push(serviceIdentifier);

    if (req.parentRequest !== null) {
      return _createStringArr(req.parentRequest, result);
    }

    return result;
  }

  var stringArr = _createStringArr(request);

  return stringArr.reverse().join(" --> ");
}

function circularDependencyToException(request) {
  request.childRequests.forEach(function (childRequest) {
    if (alreadyDependencyChain(childRequest, childRequest.serviceIdentifier)) {
      var services = dependencyChainToString(childRequest);
      throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY + " " + services);
    } else {
      circularDependencyToException(childRequest);
    }
  });
}

exports.circularDependencyToException = circularDependencyToException;

function listMetadataForTarget(serviceIdentifierString, target) {
  if (target.isTagged() || target.isNamed()) {
    var m_1 = "";
    var namedTag = target.getNamedTag();
    var otherTags = target.getCustomTags();

    if (namedTag !== null) {
      m_1 += namedTag.toString() + "\n";
    }

    if (otherTags !== null) {
      otherTags.forEach(function (tag) {
        m_1 += tag.toString() + "\n";
      });
    }

    return " " + serviceIdentifierString + "\n " + serviceIdentifierString + " - " + m_1;
  } else {
    return " " + serviceIdentifierString;
  }
}

exports.listMetadataForTarget = listMetadataForTarget;

function getFunctionName(v) {
  if (v.name) {
    return v.name;
  } else {
    var name_1 = v.toString();
    var match = name_1.match(/^function\s*([^\s(]+)/);
    return match ? match[1] : "Anonymous function: " + name_1;
  }
}

exports.getFunctionName = getFunctionName;

/***/ }),
/* 129 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Image; });
/* harmony import */ var _Media__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(102);
/* harmony import */ var _MediaMeta__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(103);
/* harmony import */ var _content_model_FragmentMeta__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(33);
/* harmony import */ var _ImageUrlBuilder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(104);
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Class representing an Image resource with helper functions.
 * Image URL helper functions will take into consideration staging and custom hostname overrides.
 */

var Image = /*#__PURE__*/function (_Media) {
  _inherits(Image, _Media);

  var _super = _createSuper(Image);

  /**
   * Creates a new Image instance.
   * @param data JSON data from delivery API
   * @param config Client configuration
   */
  function Image(data, config) {
    var _this;

    _classCallCheck(this, Image);

    _this = _super.call(this, data, config);

    if (data && data._meta) {
      _this._meta = new _MediaMeta__WEBPACK_IMPORTED_MODULE_1__[/* ImageMeta */ "a"](data._meta);
    }

    return _this;
  }
  /**
   * Returns a builder which can be used to construct a URL to this image resource.
   * You can apply transformations such as resize and image format using the returned builder.
   *
   * ```typescript
   * image.thumbnail().width(500).build();
   * ```
   */


  _createClass(Image, [{
    key: "url",
    value: function url() {
      return new _ImageUrlBuilder__WEBPACK_IMPORTED_MODULE_3__[/* ImageUrlBuilder */ "a"](this);
    }
    /**
     * Export Image to JSON
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      var result = _get(_getPrototypeOf(Image.prototype), "toJSON", this).call(this);

      if (this._meta) {
        result._meta = this._meta.toJSON();
      }

      return result;
    }
    /**
     * @hidden
     * Returns true if the provided fragment is an image
     * @param fragment
     */

  }], [{
    key: "isImage",
    value: function isImage(fragment) {
      return _content_model_FragmentMeta__WEBPACK_IMPORTED_MODULE_2__[/* FragmentMeta */ "a"].isFragment(fragment) && fragment._meta.schema === 'http://bigcontent.io/cms/schema/v1/core#/definitions/image-link';
    }
  }]);

  return Image;
}(_Media__WEBPACK_IMPORTED_MODULE_0__[/* Media */ "a"]);

/***/ }),
/* 130 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Video; });
/* harmony import */ var _Media__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(102);
/* harmony import */ var _content_model_FragmentMeta__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(33);
/* harmony import */ var _ImageUrlBuilder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(104);
/* harmony import */ var _MediaMeta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(103);
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Class representing a Video resource with helper functions.s
 */

var Video = /*#__PURE__*/function (_Media) {
  _inherits(Video, _Media);

  var _super = _createSuper(Video);

  /**
   * Creates a new Video instance.
   * @param data JSON data from delivery API
   */
  function Video(data, config) {
    var _this;

    _classCallCheck(this, Video);

    _this = _super.call(this, data, config);

    if (data && data._meta) {
      _this._meta = new _MediaMeta__WEBPACK_IMPORTED_MODULE_3__[/* VideoMeta */ "b"](data._meta);
    }

    return _this;
  }
  /**
   * Returns a builder which can be used to construct a video thumbnail URL.
   * You can apply transformations such as resize and image format using the returned builder.
   *
   * ```typescript
   * video.thumbnail().width(500).build();
   * ```
   */


  _createClass(Video, [{
    key: "thumbnail",
    value: function thumbnail() {
      return new _ImageUrlBuilder__WEBPACK_IMPORTED_MODULE_2__[/* ImageUrlBuilder */ "a"](this);
    }
    /**
     * Export Video to JSON
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      var result = _get(_getPrototypeOf(Video.prototype), "toJSON", this).call(this);

      if (this._meta) {
        result._meta = this._meta.toJSON();
      }

      return result;
    }
    /**
     * @hidden
     * Returns true if the provided fragment is a video
     * @param fragment
     */

  }], [{
    key: "isVideo",
    value: function isVideo(fragment) {
      return _content_model_FragmentMeta__WEBPACK_IMPORTED_MODULE_1__[/* FragmentMeta */ "a"].isFragment(fragment) && fragment._meta.schema === 'http://bigcontent.io/cms/schema/v1/core#/definitions/video-link';
    }
  }]);

  return Video;
}(_Media__WEBPACK_IMPORTED_MODULE_0__[/* Media */ "a"]);

/***/ }),
/* 131 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ContentReference; });
/* harmony import */ var _FragmentMeta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(33);
/* harmony import */ var _ContentMeta__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(86);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }



/**
 * Class representing an Content Reference.
 */

var ContentReference = /*#__PURE__*/function () {
  function ContentReference(data) {
    _classCallCheck(this, ContentReference);

    Object.assign(this, data);

    if (data && data._meta) {
      this._meta = new _ContentMeta__WEBPACK_IMPORTED_MODULE_1__[/* ContentReferenceMeta */ "b"](data._meta);
    }

    if (data && data.contentType) {
      this.contentType = data.contentType;
    }
  }
  /**
   * Export ContentReference to JSON
   */


  _createClass(ContentReference, [{
    key: "toJSON",
    value: function toJSON() {
      var id = this.id;
      var result = {
        id: id
      };

      if (this._meta) {
        result._meta = this._meta.toJSON();
      }

      if (this.contentType) {
        result.contentType = this.contentType;
      }

      return result;
    }
    /**
     * @hidden
     * Returns true if the provided fragment is an content reference
     * @param fragment
     */

  }], [{
    key: "isContentReference",
    value: function isContentReference(fragment) {
      return _FragmentMeta__WEBPACK_IMPORTED_MODULE_0__[/* FragmentMeta */ "a"].isFragment(fragment) && fragment._meta.schema === 'http://bigcontent.io/cms/schema/v1/core#/definitions/content-reference';
    }
  }]);

  return ContentReference;
}();

/***/ }),
/* 132 */
/***/ (function(module, exports) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** `Object#toString` result references. */
var objectTag = '[object Object]';
/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */

function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;

  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }

  return result;
}
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */


function overArg(func, transform) {
  return function (arg) {
    return func(transform(arg));
  };
}
/** Used for built-in method references. */


var funcProto = Function.prototype,
    objectProto = Object.prototype;
/** Used to resolve the decompiled source of functions. */

var funcToString = funcProto.toString;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/** Used to infer the `Object` constructor. */

var objectCtorString = funcToString.call(Object);
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */

var objectToString = objectProto.toString;
/** Built-in value references. */

var getPrototype = overArg(Object.getPrototypeOf, Object);
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */

function isObjectLike(value) {
  return !!value && _typeof(value) == 'object';
}
/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */


function isPlainObject(value) {
  if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {
    return false;
  }

  var proto = getPrototype(value);

  if (proto === null) {
    return true;
  }

  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var anyMap = new WeakMap();
var eventsMap = new WeakMap();
var producersMap = new WeakMap();
var anyProducer = Symbol('anyProducer');
var resolvedPromise = Promise.resolve();
var listenerAdded = Symbol('listenerAdded');
var listenerRemoved = Symbol('listenerRemoved');

function assertEventName(eventName) {
  if (typeof eventName !== 'string' && _typeof(eventName) !== 'symbol') {
    throw new TypeError('eventName must be a string or a symbol');
  }
}

function assertListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('listener must be a function');
  }
}

function getListeners(instance, eventName) {
  var events = eventsMap.get(instance);

  if (!events.has(eventName)) {
    events.set(eventName, new Set());
  }

  return events.get(eventName);
}

function getEventProducers(instance, eventName) {
  var key = typeof eventName === 'string' || _typeof(eventName) === 'symbol' ? eventName : anyProducer;
  var producers = producersMap.get(instance);

  if (!producers.has(key)) {
    producers.set(key, new Set());
  }

  return producers.get(key);
}

function enqueueProducers(instance, eventName, eventData) {
  var producers = producersMap.get(instance);

  if (producers.has(eventName)) {
    var _iterator = _createForOfIteratorHelper(producers.get(eventName)),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var producer = _step.value;
        producer.enqueue(eventData);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }

  if (producers.has(anyProducer)) {
    var item = Promise.all([eventName, eventData]);

    var _iterator2 = _createForOfIteratorHelper(producers.get(anyProducer)),
        _step2;

    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var _producer = _step2.value;

        _producer.enqueue(item);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
}

function iterator(instance, eventNames) {
  eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];
  var isFinished = false;

  var flush = function flush() {};

  var queue = [];
  var producer = {
    enqueue: function enqueue(item) {
      queue.push(item);
      flush();
    },
    finish: function finish() {
      isFinished = true;
      flush();
    }
  };

  var _iterator3 = _createForOfIteratorHelper(eventNames),
      _step3;

  try {
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
      var eventName = _step3.value;
      getEventProducers(instance, eventName).add(producer);
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }

  return _defineProperty({
    next: function next() {
      var _this = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (queue) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt("return", {
                  done: true
                });

              case 2:
                if (!(queue.length === 0)) {
                  _context.next = 9;
                  break;
                }

                if (!isFinished) {
                  _context.next = 6;
                  break;
                }

                queue = undefined;
                return _context.abrupt("return", _this.next());

              case 6:
                _context.next = 8;
                return new Promise(function (resolve) {
                  flush = resolve;
                });

              case 8:
                return _context.abrupt("return", _this.next());

              case 9:
                _context.next = 11;
                return queue.shift();

              case 11:
                _context.t0 = _context.sent;
                return _context.abrupt("return", {
                  done: false,
                  value: _context.t0
                });

              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }))();
    },
    "return": function _return(value) {
      var _arguments = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        var _iterator4, _step4, eventName;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                queue = undefined;
                _iterator4 = _createForOfIteratorHelper(eventNames);

                try {
                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                    eventName = _step4.value;
                    getEventProducers(instance, eventName)["delete"](producer);
                  }
                } catch (err) {
                  _iterator4.e(err);
                } finally {
                  _iterator4.f();
                }

                flush();

                if (!(_arguments.length > 0)) {
                  _context2.next = 11;
                  break;
                }

                _context2.next = 7;
                return value;

              case 7:
                _context2.t1 = _context2.sent;
                _context2.t0 = {
                  done: true,
                  value: _context2.t1
                };
                _context2.next = 12;
                break;

              case 11:
                _context2.t0 = {
                  done: true
                };

              case 12:
                return _context2.abrupt("return", _context2.t0);

              case 13:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }))();
    }
  }, Symbol.asyncIterator, function () {
    return this;
  });
}

function defaultMethodNamesOrAssert(methodNames) {
  if (methodNames === undefined) {
    return allEmitteryMethods;
  }

  if (!Array.isArray(methodNames)) {
    throw new TypeError('`methodNames` must be an array of strings');
  }

  var _iterator5 = _createForOfIteratorHelper(methodNames),
      _step5;

  try {
    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
      var methodName = _step5.value;

      if (!allEmitteryMethods.includes(methodName)) {
        if (typeof methodName !== 'string') {
          throw new TypeError('`methodNames` element must be a string');
        }

        throw new Error("".concat(methodName, " is not Emittery method"));
      }
    }
  } catch (err) {
    _iterator5.e(err);
  } finally {
    _iterator5.f();
  }

  return methodNames;
}

var isListenerSymbol = function isListenerSymbol(symbol) {
  return symbol === listenerAdded || symbol === listenerRemoved;
};

var Emittery = /*#__PURE__*/function () {
  function Emittery() {
    _classCallCheck(this, Emittery);

    anyMap.set(this, new Set());
    eventsMap.set(this, new Map());
    producersMap.set(this, new Map());
  }

  _createClass(Emittery, [{
    key: "on",
    value: function on(eventNames, listener) {
      assertListener(listener);
      eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];

      var _iterator6 = _createForOfIteratorHelper(eventNames),
          _step6;

      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
          var eventName = _step6.value;
          assertEventName(eventName);
          getListeners(this, eventName).add(listener);

          if (!isListenerSymbol(eventName)) {
            this.emit(listenerAdded, {
              eventName: eventName,
              listener: listener
            });
          }
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }

      return this.off.bind(this, eventNames, listener);
    }
  }, {
    key: "off",
    value: function off(eventNames, listener) {
      assertListener(listener);
      eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];

      var _iterator7 = _createForOfIteratorHelper(eventNames),
          _step7;

      try {
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
          var eventName = _step7.value;
          assertEventName(eventName);
          getListeners(this, eventName)["delete"](listener);

          if (!isListenerSymbol(eventName)) {
            this.emit(listenerRemoved, {
              eventName: eventName,
              listener: listener
            });
          }
        }
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }
    }
  }, {
    key: "once",
    value: function once(eventNames) {
      var _this2 = this;

      return new Promise(function (resolve) {
        var off = _this2.on(eventNames, function (data) {
          off();
          resolve(data);
        });
      });
    }
  }, {
    key: "events",
    value: function events(eventNames) {
      eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];

      var _iterator8 = _createForOfIteratorHelper(eventNames),
          _step8;

      try {
        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
          var eventName = _step8.value;
          assertEventName(eventName);
        }
      } catch (err) {
        _iterator8.e(err);
      } finally {
        _iterator8.f();
      }

      return iterator(this, eventNames);
    }
  }, {
    key: "emit",
    value: function () {
      var _emit = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(eventName, eventData) {
        var listeners, anyListeners, staticListeners, staticAnyListeners;
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                assertEventName(eventName);
                enqueueProducers(this, eventName, eventData);
                listeners = getListeners(this, eventName);
                anyListeners = anyMap.get(this);
                staticListeners = _toConsumableArray(listeners);
                staticAnyListeners = isListenerSymbol(eventName) ? [] : _toConsumableArray(anyListeners);
                _context5.next = 8;
                return resolvedPromise;

              case 8:
                _context5.next = 10;
                return Promise.all([].concat(_toConsumableArray(staticListeners.map( /*#__PURE__*/function () {
                  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(listener) {
                    return regeneratorRuntime.wrap(function _callee3$(_context3) {
                      while (1) {
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            if (!listeners.has(listener)) {
                              _context3.next = 2;
                              break;
                            }

                            return _context3.abrupt("return", listener(eventData));

                          case 2:
                          case "end":
                            return _context3.stop();
                        }
                      }
                    }, _callee3);
                  }));

                  return function (_x3) {
                    return _ref2.apply(this, arguments);
                  };
                }())), _toConsumableArray(staticAnyListeners.map( /*#__PURE__*/function () {
                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(listener) {
                    return regeneratorRuntime.wrap(function _callee4$(_context4) {
                      while (1) {
                        switch (_context4.prev = _context4.next) {
                          case 0:
                            if (!anyListeners.has(listener)) {
                              _context4.next = 2;
                              break;
                            }

                            return _context4.abrupt("return", listener(eventName, eventData));

                          case 2:
                          case "end":
                            return _context4.stop();
                        }
                      }
                    }, _callee4);
                  }));

                  return function (_x4) {
                    return _ref3.apply(this, arguments);
                  };
                }()))));

              case 10:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function emit(_x, _x2) {
        return _emit.apply(this, arguments);
      }

      return emit;
    }()
  }, {
    key: "emitSerial",
    value: function () {
      var _emitSerial = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(eventName, eventData) {
        var listeners, anyListeners, staticListeners, staticAnyListeners, _iterator9, _step9, listener, _iterator10, _step10, _listener;

        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                assertEventName(eventName);
                listeners = getListeners(this, eventName);
                anyListeners = anyMap.get(this);
                staticListeners = _toConsumableArray(listeners);
                staticAnyListeners = _toConsumableArray(anyListeners);
                _context6.next = 7;
                return resolvedPromise;

              case 7:
                /* eslint-disable no-await-in-loop */
                _iterator9 = _createForOfIteratorHelper(staticListeners);
                _context6.prev = 8;

                _iterator9.s();

              case 10:
                if ((_step9 = _iterator9.n()).done) {
                  _context6.next = 17;
                  break;
                }

                listener = _step9.value;

                if (!listeners.has(listener)) {
                  _context6.next = 15;
                  break;
                }

                _context6.next = 15;
                return listener(eventData);

              case 15:
                _context6.next = 10;
                break;

              case 17:
                _context6.next = 22;
                break;

              case 19:
                _context6.prev = 19;
                _context6.t0 = _context6["catch"](8);

                _iterator9.e(_context6.t0);

              case 22:
                _context6.prev = 22;

                _iterator9.f();

                return _context6.finish(22);

              case 25:
                _iterator10 = _createForOfIteratorHelper(staticAnyListeners);
                _context6.prev = 26;

                _iterator10.s();

              case 28:
                if ((_step10 = _iterator10.n()).done) {
                  _context6.next = 35;
                  break;
                }

                _listener = _step10.value;

                if (!anyListeners.has(_listener)) {
                  _context6.next = 33;
                  break;
                }

                _context6.next = 33;
                return _listener(eventName, eventData);

              case 33:
                _context6.next = 28;
                break;

              case 35:
                _context6.next = 40;
                break;

              case 37:
                _context6.prev = 37;
                _context6.t1 = _context6["catch"](26);

                _iterator10.e(_context6.t1);

              case 40:
                _context6.prev = 40;

                _iterator10.f();

                return _context6.finish(40);

              case 43:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this, [[8, 19, 22, 25], [26, 37, 40, 43]]);
      }));

      function emitSerial(_x5, _x6) {
        return _emitSerial.apply(this, arguments);
      }

      return emitSerial;
    }()
  }, {
    key: "onAny",
    value: function onAny(listener) {
      assertListener(listener);
      anyMap.get(this).add(listener);
      this.emit(listenerAdded, {
        listener: listener
      });
      return this.offAny.bind(this, listener);
    }
  }, {
    key: "anyEvent",
    value: function anyEvent() {
      return iterator(this);
    }
  }, {
    key: "offAny",
    value: function offAny(listener) {
      assertListener(listener);
      this.emit(listenerRemoved, {
        listener: listener
      });
      anyMap.get(this)["delete"](listener);
    }
  }, {
    key: "clearListeners",
    value: function clearListeners(eventNames) {
      eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];

      var _iterator11 = _createForOfIteratorHelper(eventNames),
          _step11;

      try {
        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
          var eventName = _step11.value;

          if (typeof eventName === 'string' || _typeof(eventName) === 'symbol') {
            getListeners(this, eventName).clear();
            var producers = getEventProducers(this, eventName);

            var _iterator12 = _createForOfIteratorHelper(producers),
                _step12;

            try {
              for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
                var producer = _step12.value;
                producer.finish();
              }
            } catch (err) {
              _iterator12.e(err);
            } finally {
              _iterator12.f();
            }

            producers.clear();
          } else {
            anyMap.get(this).clear();

            var _iterator13 = _createForOfIteratorHelper(eventsMap.get(this).values()),
                _step13;

            try {
              for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
                var listeners = _step13.value;
                listeners.clear();
              }
            } catch (err) {
              _iterator13.e(err);
            } finally {
              _iterator13.f();
            }

            var _iterator14 = _createForOfIteratorHelper(producersMap.get(this).values()),
                _step14;

            try {
              for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
                var _producers = _step14.value;

                var _iterator15 = _createForOfIteratorHelper(_producers),
                    _step15;

                try {
                  for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
                    var _producer2 = _step15.value;

                    _producer2.finish();
                  }
                } catch (err) {
                  _iterator15.e(err);
                } finally {
                  _iterator15.f();
                }

                _producers.clear();
              }
            } catch (err) {
              _iterator14.e(err);
            } finally {
              _iterator14.f();
            }
          }
        }
      } catch (err) {
        _iterator11.e(err);
      } finally {
        _iterator11.f();
      }
    }
  }, {
    key: "listenerCount",
    value: function listenerCount(eventNames) {
      eventNames = Array.isArray(eventNames) ? eventNames : [eventNames];
      var count = 0;

      var _iterator16 = _createForOfIteratorHelper(eventNames),
          _step16;

      try {
        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {
          var eventName = _step16.value;

          if (typeof eventName === 'string') {
            count += anyMap.get(this).size + getListeners(this, eventName).size + getEventProducers(this, eventName).size + getEventProducers(this).size;
            continue;
          }

          if (typeof eventName !== 'undefined') {
            assertEventName(eventName);
          }

          count += anyMap.get(this).size;

          var _iterator17 = _createForOfIteratorHelper(eventsMap.get(this).values()),
              _step17;

          try {
            for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {
              var value = _step17.value;
              count += value.size;
            }
          } catch (err) {
            _iterator17.e(err);
          } finally {
            _iterator17.f();
          }

          var _iterator18 = _createForOfIteratorHelper(producersMap.get(this).values()),
              _step18;

          try {
            for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {
              var _value = _step18.value;
              count += _value.size;
            }
          } catch (err) {
            _iterator18.e(err);
          } finally {
            _iterator18.f();
          }
        }
      } catch (err) {
        _iterator16.e(err);
      } finally {
        _iterator16.f();
      }

      return count;
    }
  }, {
    key: "bindMethods",
    value: function bindMethods(target, methodNames) {
      if (_typeof(target) !== 'object' || target === null) {
        throw new TypeError('`target` must be an object');
      }

      methodNames = defaultMethodNamesOrAssert(methodNames);

      var _iterator19 = _createForOfIteratorHelper(methodNames),
          _step19;

      try {
        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {
          var methodName = _step19.value;

          if (target[methodName] !== undefined) {
            throw new Error("The property `".concat(methodName, "` already exists on `target`"));
          }

          Object.defineProperty(target, methodName, {
            enumerable: false,
            value: this[methodName].bind(this)
          });
        }
      } catch (err) {
        _iterator19.e(err);
      } finally {
        _iterator19.f();
      }
    }
  }], [{
    key: "mixin",
    value: function mixin(emitteryPropertyName, methodNames) {
      methodNames = defaultMethodNamesOrAssert(methodNames);
      return function (target) {
        if (typeof target !== 'function') {
          throw new TypeError('`target` must be function');
        }

        var _iterator20 = _createForOfIteratorHelper(methodNames),
            _step20;

        try {
          for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {
            var methodName = _step20.value;

            if (target.prototype[methodName] !== undefined) {
              throw new Error("The property `".concat(methodName, "` already exists on `target`"));
            }
          }
        } catch (err) {
          _iterator20.e(err);
        } finally {
          _iterator20.f();
        }

        function getEmitteryProperty() {
          Object.defineProperty(this, emitteryPropertyName, {
            enumerable: false,
            value: new Emittery()
          });
          return this[emitteryPropertyName];
        }

        Object.defineProperty(target.prototype, emitteryPropertyName, {
          enumerable: false,
          get: getEmitteryProperty
        });

        var emitteryMethodCaller = function emitteryMethodCaller(methodName) {
          return function () {
            var _this$emitteryPropert;

            return (_this$emitteryPropert = this[emitteryPropertyName])[methodName].apply(_this$emitteryPropert, arguments);
          };
        };

        var _iterator21 = _createForOfIteratorHelper(methodNames),
            _step21;

        try {
          for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {
            var _methodName = _step21.value;
            Object.defineProperty(target.prototype, _methodName, {
              enumerable: false,
              value: emitteryMethodCaller(_methodName)
            });
          }
        } catch (err) {
          _iterator21.e(err);
        } finally {
          _iterator21.f();
        }

        return target;
      };
    }
  }]);

  return Emittery;
}();

var allEmitteryMethods = Object.getOwnPropertyNames(Emittery.prototype).filter(function (v) {
  return v !== 'constructor';
}); // Subclass used to encourage TS users to type their events.

Emittery.Typed = /*#__PURE__*/function (_Emittery) {
  _inherits(_class, _Emittery);

  var _super = _createSuper(_class);

  function _class() {
    _classCallCheck(this, _class);

    return _super.apply(this, arguments);
  }

  return _createClass(_class);
}(Emittery);

Object.defineProperty(Emittery.Typed, 'Typed', {
  enumerable: false,
  value: undefined
});
Object.defineProperty(Emittery, 'listenerAdded', {
  value: listenerAdded,
  writable: false,
  enumerable: true,
  configurable: false
});
Object.defineProperty(Emittery, 'listenerRemoved', {
  value: listenerRemoved,
  writable: false,
  enumerable: true,
  configurable: false
});
module.exports = Emittery;

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */

/**
 * Module exports.
 * @public
 */

exports.parse = parse;
exports.serialize = serialize;
/**
 * Module variables.
 * @private
 */

var decode = decodeURIComponent;
var encode = encodeURIComponent;
var pairSplitRegExp = /; */;
/**
 * RegExp to match field-content in RFC 7230 sec 3.2
 *
 * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]
 * field-vchar   = VCHAR / obs-text
 * obs-text      = %x80-FF
 */

var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
/**
 * Parse a cookie header.
 *
 * Parse the given cookie header string into an object
 * The object has the various cookies as keys(names) => values
 *
 * @param {string} str
 * @param {object} [options]
 * @return {object}
 * @public
 */

function parse(str, options) {
  if (typeof str !== 'string') {
    throw new TypeError('argument str must be a string');
  }

  var obj = {};
  var opt = options || {};
  var pairs = str.split(pairSplitRegExp);
  var dec = opt.decode || decode;

  for (var i = 0; i < pairs.length; i++) {
    var pair = pairs[i];
    var eq_idx = pair.indexOf('='); // skip things that don't look like key=value

    if (eq_idx < 0) {
      continue;
    }

    var key = pair.substr(0, eq_idx).trim();
    var val = pair.substr(++eq_idx, pair.length).trim(); // quoted values

    if ('"' == val[0]) {
      val = val.slice(1, -1);
    } // only assign once


    if (undefined == obj[key]) {
      obj[key] = tryDecode(val, dec);
    }
  }

  return obj;
}
/**
 * Serialize data into a cookie header.
 *
 * Serialize the a name value pair into a cookie string suitable for
 * http headers. An optional options object specified cookie parameters.
 *
 * serialize('foo', 'bar', { httpOnly: true })
 *   => "foo=bar; httpOnly"
 *
 * @param {string} name
 * @param {string} val
 * @param {object} [options]
 * @return {string}
 * @public
 */


function serialize(name, val, options) {
  var opt = options || {};
  var enc = opt.encode || encode;

  if (typeof enc !== 'function') {
    throw new TypeError('option encode is invalid');
  }

  if (!fieldContentRegExp.test(name)) {
    throw new TypeError('argument name is invalid');
  }

  var value = enc(val);

  if (value && !fieldContentRegExp.test(value)) {
    throw new TypeError('argument val is invalid');
  }

  var str = name + '=' + value;

  if (null != opt.maxAge) {
    var maxAge = opt.maxAge - 0;

    if (isNaN(maxAge) || !isFinite(maxAge)) {
      throw new TypeError('option maxAge is invalid');
    }

    str += '; Max-Age=' + Math.floor(maxAge);
  }

  if (opt.domain) {
    if (!fieldContentRegExp.test(opt.domain)) {
      throw new TypeError('option domain is invalid');
    }

    str += '; Domain=' + opt.domain;
  }

  if (opt.path) {
    if (!fieldContentRegExp.test(opt.path)) {
      throw new TypeError('option path is invalid');
    }

    str += '; Path=' + opt.path;
  }

  if (opt.expires) {
    if (typeof opt.expires.toUTCString !== 'function') {
      throw new TypeError('option expires is invalid');
    }

    str += '; Expires=' + opt.expires.toUTCString();
  }

  if (opt.httpOnly) {
    str += '; HttpOnly';
  }

  if (opt.secure) {
    str += '; Secure';
  }

  if (opt.sameSite) {
    var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;

    switch (sameSite) {
      case true:
        str += '; SameSite=Strict';
        break;

      case 'lax':
        str += '; SameSite=Lax';
        break;

      case 'strict':
        str += '; SameSite=Strict';
        break;

      case 'none':
        str += '; SameSite=None';
        break;

      default:
        throw new TypeError('option sameSite is invalid');
    }
  }

  return str;
}
/**
 * Try decoding a string using a decoding function.
 *
 * @param {string} str
 * @param {function} decode
 * @private
 */


function tryDecode(str, decode) {
  try {
    return decode(str);
  } catch (e) {
    return str;
  }
}

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $propertyIsEnumerable = {}.propertyIsEnumerable; // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe

var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor; // Nashorn ~ JDK8 bug

var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({
  1: 2
}, 1); // `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable

exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

var IS_PURE = __webpack_require__(25);

var store = __webpack_require__(174);

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.20.0',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'
});

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var isObject = __webpack_require__(7);

var document = global.document; // typeof document.createElement is 'object' in old IE

var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

var uncurryThis = __webpack_require__(3);

var isCallable = __webpack_require__(9);

var store = __webpack_require__(174);

var functionToString = uncurryThis(Function.toString); // this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper

if (!isCallable(store.inspectSource)) {
  store.inspectSource = function (it) {
    return functionToString(it);
  };
}

module.exports = store.inspectSource;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(136);

var uid = __webpack_require__(88);

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

var hasOwn = __webpack_require__(14);

var ownKeys = __webpack_require__(176);

var getOwnPropertyDescriptorModule = __webpack_require__(28);

var definePropertyModule = __webpack_require__(12);

module.exports = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;

  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];

    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(6);

var definePropertyModule = __webpack_require__(12);

var anObject = __webpack_require__(5);

var toIndexedObject = __webpack_require__(34);

var objectKeys = __webpack_require__(112); // `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe


module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var props = toIndexedObject(Properties);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;

  while (length > index) {
    definePropertyModule.f(O, key = keys[index++], props[key]);
  }

  return O;
};

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

var uncurryThis = __webpack_require__(3);

var replace = uncurryThis(''.replace);

var TEST = function (arg) {
  return String(Error(arg).stack);
}('zxcasd');

var V8_OR_CHAKRA_STACK_ENTRY = /\n\s*at [^:]*:[^\n]*/;
var IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);

module.exports = function (stack, dropEntries) {
  if (IS_V8_OR_CHAKRA_STACK && typeof stack == 'string') {
    while (dropEntries--) {
      stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, '');
    }
  }

  return stack;
};

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var call = __webpack_require__(13);

var aCallable = __webpack_require__(29);

var anObject = __webpack_require__(5);

var tryToString = __webpack_require__(108);

var getIteratorMethod = __webpack_require__(117);

var TypeError = global.TypeError;

module.exports = function (argument, usingIterator) {
  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));
  throw TypeError(tryToString(argument) + ' is not iterable');
};

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(8);

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function next() {
      return {
        done: !!called++
      };
    },
    'return': function _return() {
      SAFE_CLOSING = true;
    }
  };

  iteratorWithReturn[ITERATOR] = function () {
    return this;
  }; // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing


  Array.from(iteratorWithReturn, function () {
    throw 2;
  });
} catch (error) {
  /* empty */
}

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;

  try {
    var object = {};

    object[ITERATOR] = function () {
      return {
        next: function next() {
          return {
            done: ITERATION_SUPPORT = true
          };
        }
      };
    };

    exec(object);
  } catch (error) {
    /* empty */
  }

  return ITERATION_SUPPORT;
};

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var toIndexedObject = __webpack_require__(34);

var addToUnscopables = __webpack_require__(63);

var Iterators = __webpack_require__(116);

var InternalStateModule = __webpack_require__(21);

var defineProperty = __webpack_require__(12).f;

var defineIterator = __webpack_require__(185);

var IS_PURE = __webpack_require__(25);

var DESCRIPTORS = __webpack_require__(6);

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR); // `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator

module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated),
    // target
    index: 0,
    // next index
    kind: kind // kind

  }); // `%ArrayIteratorPrototype%.next` method
  // https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;

  if (!target || index >= target.length) {
    state.target = undefined;
    return {
      value: undefined,
      done: true
    };
  }

  if (kind == 'keys') return {
    value: index,
    done: false
  };
  if (kind == 'values') return {
    value: target[index],
    done: false
  };
  return {
    value: [index, target[index]],
    done: false
  };
}, 'values'); // argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject

var values = Iterators.Arguments = Iterators.Array; // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries'); // V8 ~ Chrome 45- bug

if (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {
  defineProperty(values, 'name', {
    value: 'values'
  });
} catch (error) {
  /* empty */
}

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var aCallable = __webpack_require__(29);

var toObject = __webpack_require__(16);

var IndexedObject = __webpack_require__(107);

var lengthOfArrayLike = __webpack_require__(17);

var TypeError = global.TypeError; // `Array.prototype.{ reduce, reduceRight }` methods implementation

var createMethod = function createMethod(IS_RIGHT) {
  return function (that, callbackfn, argumentsLength, memo) {
    aCallable(callbackfn);
    var O = toObject(that);
    var self = IndexedObject(O);
    var length = lengthOfArrayLike(O);
    var index = IS_RIGHT ? length - 1 : 0;
    var i = IS_RIGHT ? -1 : 1;
    if (argumentsLength < 2) while (true) {
      if (index in self) {
        memo = self[index];
        index += i;
        break;
      }

      index += i;

      if (IS_RIGHT ? index < 0 : length <= index) {
        throw TypeError('Reduce of empty array with no initial value');
      }
    }

    for (; IS_RIGHT ? index >= 0 : length > index; index += i) {
      if (index in self) {
        memo = callbackfn(memo, self[index], index, O);
      }
    }

    return memo;
  };
};

module.exports = {
  // `Array.prototype.reduce` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduce
  left: createMethod(false),
  // `Array.prototype.reduceRight` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduceright
  right: createMethod(true)
};

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var DESCRIPTORS = __webpack_require__(6);

var NATIVE_ARRAY_BUFFER = __webpack_require__(189);

var FunctionName = __webpack_require__(89);

var createNonEnumerableProperty = __webpack_require__(30);

var redefineAll = __webpack_require__(93);

var fails = __webpack_require__(4);

var anInstance = __webpack_require__(54);

var toIntegerOrInfinity = __webpack_require__(22);

var toLength = __webpack_require__(39);

var toIndex = __webpack_require__(248);

var IEEE754 = __webpack_require__(399);

var getPrototypeOf = __webpack_require__(48);

var setPrototypeOf = __webpack_require__(53);

var getOwnPropertyNames = __webpack_require__(72).f;

var defineProperty = __webpack_require__(12).f;

var arrayFill = __webpack_require__(184);

var arraySlice = __webpack_require__(113);

var setToStringTag = __webpack_require__(47);

var InternalStateModule = __webpack_require__(21);

var PROPER_FUNCTION_NAME = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length';
var WRONG_INDEX = 'Wrong index';
var NativeArrayBuffer = global[ARRAY_BUFFER];
var $ArrayBuffer = NativeArrayBuffer;
var ArrayBufferPrototype = $ArrayBuffer && $ArrayBuffer[PROTOTYPE];
var $DataView = global[DATA_VIEW];
var DataViewPrototype = $DataView && $DataView[PROTOTYPE];
var ObjectPrototype = Object.prototype;
var Array = global.Array;
var RangeError = global.RangeError;
var fill = uncurryThis(arrayFill);
var reverse = uncurryThis([].reverse);
var packIEEE754 = IEEE754.pack;
var unpackIEEE754 = IEEE754.unpack;

var packInt8 = function packInt8(number) {
  return [number & 0xFF];
};

var packInt16 = function packInt16(number) {
  return [number & 0xFF, number >> 8 & 0xFF];
};

var packInt32 = function packInt32(number) {
  return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];
};

var unpackInt32 = function unpackInt32(buffer) {
  return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];
};

var packFloat32 = function packFloat32(number) {
  return packIEEE754(number, 23, 4);
};

var packFloat64 = function packFloat64(number) {
  return packIEEE754(number, 52, 8);
};

var addGetter = function addGetter(Constructor, key) {
  defineProperty(Constructor[PROTOTYPE], key, {
    get: function get() {
      return getInternalState(this)[key];
    }
  });
};

var get = function get(view, count, index, isLittleEndian) {
  var intIndex = toIndex(index);
  var store = getInternalState(view);
  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
  var bytes = getInternalState(store.buffer).bytes;
  var start = intIndex + store.byteOffset;
  var pack = arraySlice(bytes, start, start + count);
  return isLittleEndian ? pack : reverse(pack);
};

var set = function set(view, count, index, conversion, value, isLittleEndian) {
  var intIndex = toIndex(index);
  var store = getInternalState(view);
  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
  var bytes = getInternalState(store.buffer).bytes;
  var start = intIndex + store.byteOffset;
  var pack = conversion(+value);

  for (var i = 0; i < count; i++) {
    bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];
  }
};

if (!NATIVE_ARRAY_BUFFER) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, ArrayBufferPrototype);
    var byteLength = toIndex(length);
    setInternalState(this, {
      bytes: fill(Array(byteLength), 0),
      byteLength: byteLength
    });
    if (!DESCRIPTORS) this.byteLength = byteLength;
  };

  ArrayBufferPrototype = $ArrayBuffer[PROTOTYPE];

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, DataViewPrototype);
    anInstance(buffer, ArrayBufferPrototype);
    var bufferLength = getInternalState(buffer).byteLength;
    var offset = toIntegerOrInfinity(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    setInternalState(this, {
      buffer: buffer,
      byteLength: byteLength,
      byteOffset: offset
    });

    if (!DESCRIPTORS) {
      this.buffer = buffer;
      this.byteLength = byteLength;
      this.byteOffset = offset;
    }
  };

  DataViewPrototype = $DataView[PROTOTYPE];

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, 'byteLength');
    addGetter($DataView, 'buffer');
    addGetter($DataView, 'byteLength');
    addGetter($DataView, 'byteOffset');
  }

  redefineAll(DataViewPrototype, {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset
    /* , littleEndian */
    ) {
      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset
    /* , littleEndian */
    ) {
      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset
    /* , littleEndian */
    ) {
      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined));
    },
    getUint32: function getUint32(byteOffset
    /* , littleEndian */
    ) {
      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined)) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset
    /* , littleEndian */
    ) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 23);
    },
    getFloat64: function getFloat64(byteOffset
    /* , littleEndian */
    ) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 52);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packInt8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packInt8, value);
    },
    setInt16: function setInt16(byteOffset, value
    /* , littleEndian */
    ) {
      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setUint16: function setUint16(byteOffset, value
    /* , littleEndian */
    ) {
      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setInt32: function setInt32(byteOffset, value
    /* , littleEndian */
    ) {
      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setUint32: function setUint32(byteOffset, value
    /* , littleEndian */
    ) {
      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setFloat32: function setFloat32(byteOffset, value
    /* , littleEndian */
    ) {
      set(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setFloat64: function setFloat64(byteOffset, value
    /* , littleEndian */
    ) {
      set(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : undefined);
    }
  });
} else {
  var INCORRECT_ARRAY_BUFFER_NAME = PROPER_FUNCTION_NAME && NativeArrayBuffer.name !== ARRAY_BUFFER;
  /* eslint-disable no-new -- required for testing */

  if (!fails(function () {
    NativeArrayBuffer(1);
  }) || !fails(function () {
    new NativeArrayBuffer(-1);
  }) || fails(function () {
    new NativeArrayBuffer();
    new NativeArrayBuffer(1.5);
    new NativeArrayBuffer(NaN);
    return INCORRECT_ARRAY_BUFFER_NAME && !CONFIGURABLE_FUNCTION_NAME;
  })) {
    /* eslint-enable no-new -- required for testing */
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, ArrayBufferPrototype);
      return new NativeArrayBuffer(toIndex(length));
    };

    $ArrayBuffer[PROTOTYPE] = ArrayBufferPrototype;

    for (var keys = getOwnPropertyNames(NativeArrayBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) {
        createNonEnumerableProperty($ArrayBuffer, key, NativeArrayBuffer[key]);
      }
    }

    ArrayBufferPrototype.constructor = $ArrayBuffer;
  } else if (INCORRECT_ARRAY_BUFFER_NAME && CONFIGURABLE_FUNCTION_NAME) {
    createNonEnumerableProperty(NativeArrayBuffer, 'name', ARRAY_BUFFER);
  } // WebKit bug - the same parent prototype for typed arrays and data view


  if (setPrototypeOf && getPrototypeOf(DataViewPrototype) !== ObjectPrototype) {
    setPrototypeOf(DataViewPrototype, ObjectPrototype);
  } // iOS Safari 7.x bug


  var testView = new $DataView(new $ArrayBuffer(2));
  var $setInt8 = uncurryThis(DataViewPrototype.setInt8);
  testView.setInt8(0, 2147483648);
  testView.setInt8(1, 2147483649);
  if (testView.getInt8(0) || !testView.getInt8(1)) redefineAll(DataViewPrototype, {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8(this, byteOffset, value << 24 >> 24);
    }
  }, {
    unsafe: true
  });
}

setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
module.exports = {
  ArrayBuffer: $ArrayBuffer,
  DataView: $DataView
};

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(2);

var toIntegerOrInfinity = __webpack_require__(22);

var toString = __webpack_require__(10);

var requireObjectCoercible = __webpack_require__(20);

var RangeError = global.RangeError; // `String.prototype.repeat` method implementation
// https://tc39.es/ecma262/#sec-string.prototype.repeat

module.exports = function repeat(count) {
  var str = toString(requireObjectCoercible(this));
  var result = '';
  var n = toIntegerOrInfinity(count);
  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');

  for (; n > 0; (n >>>= 1) && (str += str)) {
    if (n & 1) result += str;
  }

  return result;
};

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var isForced = __webpack_require__(111);

var redefine = __webpack_require__(18);

var InternalMetadataModule = __webpack_require__(80);

var iterate = __webpack_require__(62);

var anInstance = __webpack_require__(54);

var isCallable = __webpack_require__(9);

var isObject = __webpack_require__(7);

var fails = __webpack_require__(4);

var checkCorrectnessOfIteration = __webpack_require__(144);

var setToStringTag = __webpack_require__(47);

var inheritIfRequired = __webpack_require__(91);

module.exports = function (CONSTRUCTOR_NAME, wrapper, common) {
  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
  var ADDER = IS_MAP ? 'set' : 'add';
  var NativeConstructor = global[CONSTRUCTOR_NAME];
  var NativePrototype = NativeConstructor && NativeConstructor.prototype;
  var Constructor = NativeConstructor;
  var exported = {};

  var fixMethod = function fixMethod(KEY) {
    var uncurriedNativeMethod = uncurryThis(NativePrototype[KEY]);
    redefine(NativePrototype, KEY, KEY == 'add' ? function add(value) {
      uncurriedNativeMethod(this, value === 0 ? 0 : value);
      return this;
    } : KEY == 'delete' ? function (key) {
      return IS_WEAK && !isObject(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
    } : KEY == 'get' ? function get(key) {
      return IS_WEAK && !isObject(key) ? undefined : uncurriedNativeMethod(this, key === 0 ? 0 : key);
    } : KEY == 'has' ? function has(key) {
      return IS_WEAK && !isObject(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
    } : function set(key, value) {
      uncurriedNativeMethod(this, key === 0 ? 0 : key, value);
      return this;
    });
  };

  var REPLACE = isForced(CONSTRUCTOR_NAME, !isCallable(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails(function () {
    new NativeConstructor().entries().next();
  })));

  if (REPLACE) {
    // create collection constructor
    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
    InternalMetadataModule.enable();
  } else if (isForced(CONSTRUCTOR_NAME, true)) {
    var instance = new Constructor(); // early implementations not supports chaining

    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance; // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false

    var THROWS_ON_PRIMITIVES = fails(function () {
      instance.has(1);
    }); // most early implementations doesn't supports iterables, most modern - not close it correctly
    // eslint-disable-next-line no-new -- required for testing

    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) {
      new NativeConstructor(iterable);
    }); // for early implementations -0 and +0 not the same

    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new NativeConstructor();
      var index = 5;

      while (index--) {
        $instance[ADDER](index, index);
      }

      return !$instance.has(-0);
    });

    if (!ACCEPT_ITERABLES) {
      Constructor = wrapper(function (dummy, iterable) {
        anInstance(dummy, NativePrototype);
        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
        if (iterable != undefined) iterate(iterable, that[ADDER], {
          that: that,
          AS_ENTRIES: IS_MAP
        });
        return that;
      });
      Constructor.prototype = NativePrototype;
      NativePrototype.constructor = Constructor;
    }

    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }

    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER); // weak collections should not contains .clear method

    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
  }

  exported[CONSTRUCTOR_NAME] = Constructor;
  $({
    global: true,
    forced: Constructor != NativeConstructor
  }, exported);
  setToStringTag(Constructor, CONSTRUCTOR_NAME);
  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);
  return Constructor;
};

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(4);

var isObject = __webpack_require__(7);

var classof = __webpack_require__(37);

var ARRAY_BUFFER_NON_EXTENSIBLE = __webpack_require__(192); // eslint-disable-next-line es/no-object-isextensible -- safe


var $isExtensible = Object.isExtensible;
var FAILS_ON_PRIMITIVES = fails(function () {
  $isExtensible(1);
}); // `Object.isExtensible` method
// https://tc39.es/ecma262/#sec-object.isextensible

module.exports = FAILS_ON_PRIMITIVES || ARRAY_BUFFER_NON_EXTENSIBLE ? function isExtensible(it) {
  if (!isObject(it)) return false;
  if (ARRAY_BUFFER_NON_EXTENSIBLE && classof(it) == 'ArrayBuffer') return false;
  return $isExtensible ? $isExtensible(it) : true;
} : $isExtensible;

/***/ }),
/* 151 */
/***/ (function(module, exports) {

// eslint-disable-next-line es/no-math-expm1 -- safe
var $expm1 = Math.expm1;
var exp = Math.exp; // `Math.expm1` method implementation
// https://tc39.es/ecma262/#sec-math.expm1

module.exports = !$expm1 // Old FF bug
|| $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168 // Tor Browser bug
|| $expm1(-2e-17) != -2e-17 ? function expm1(x) {
  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : exp(x) - 1;
} : $expm1;

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

var uncurryThis = __webpack_require__(3); // `thisNumberValue` abstract operation
// https://tc39.es/ecma262/#sec-thisnumbervalue


module.exports = uncurryThis(1.0.valueOf);

/***/ }),
/* 153 */
/***/ (function(module, exports) {

// a string of all valid unicode whitespaces
module.exports = "\t\n\x0B\f\r \xA0\u1680\u2000\u2001\u2002" + "\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var IS_PURE = __webpack_require__(25);

var global = __webpack_require__(2);

var fails = __webpack_require__(4);

var WEBKIT = __webpack_require__(188); // Forced replacement object prototype accessors methods


module.exports = IS_PURE || !fails(function () {
  // This feature detection crashes old WebKit
  // https://github.com/zloirock/core-js/issues/232
  if (WEBKIT && WEBKIT < 535) return;
  var key = Math.random(); // In FF throws only define methods
  // eslint-disable-next-line no-undef, no-useless-call -- required for testing

  __defineSetter__.call(null, key, function () {
    /* empty */
  });

  delete global[key];
});

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var aCallable = __webpack_require__(29);

var PromiseCapability = function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aCallable(resolve);
  this.reject = aCallable(reject);
}; // `NewPromiseCapability` abstract operation
// https://tc39.es/ecma262/#sec-newpromisecapability


module.exports.f = function (C) {
  return new PromiseCapability(C);
};

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(4);

var global = __webpack_require__(2); // babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError


var $RegExp = global.RegExp;
var UNSUPPORTED_Y = fails(function () {
  var re = $RegExp('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') != null;
}); // UC Browser bug
// https://github.com/zloirock/core-js/issues/1008

var MISSED_STICKY = UNSUPPORTED_Y || fails(function () {
  return !$RegExp('a', 'y').sticky;
});
var BROKEN_CARET = UNSUPPORTED_Y || fails(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = $RegExp('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') != null;
});
module.exports = {
  BROKEN_CARET: BROKEN_CARET,
  MISSED_STICKY: MISSED_STICKY,
  UNSUPPORTED_Y: UNSUPPORTED_Y
};

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */

/* eslint-disable regexp/no-useless-quantifier -- testing */

var call = __webpack_require__(13);

var uncurryThis = __webpack_require__(3);

var toString = __webpack_require__(10);

var regexpFlags = __webpack_require__(81);

var stickyHelpers = __webpack_require__(156);

var shared = __webpack_require__(136);

var create = __webpack_require__(41);

var getInternalState = __webpack_require__(21).get;

var UNSUPPORTED_DOT_ALL = __webpack_require__(197);

var UNSUPPORTED_NCG = __webpack_require__(263);

var nativeReplace = shared('native-string-replace', String.prototype.replace);
var nativeExec = RegExp.prototype.exec;
var patchedExec = nativeExec;
var charAt = uncurryThis(''.charAt);
var indexOf = uncurryThis(''.indexOf);
var replace = uncurryThis(''.replace);
var stringSlice = uncurryThis(''.slice);

var UPDATES_LAST_INDEX_WRONG = function () {
  var re1 = /a/;
  var re2 = /b*/g;
  call(nativeExec, re1, 'a');
  call(nativeExec, re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
}();

var UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET; // nonparticipating capturing group, copied from es5-shim's String#split patch.

var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;
var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;

if (PATCH) {
  patchedExec = function exec(string) {
    var re = this;
    var state = getInternalState(re);
    var str = toString(string);
    var raw = state.raw;
    var result, reCopy, lastIndex, match, i, object, group;

    if (raw) {
      raw.lastIndex = re.lastIndex;
      result = call(patchedExec, raw, str);
      re.lastIndex = raw.lastIndex;
      return result;
    }

    var groups = state.groups;
    var sticky = UNSUPPORTED_Y && re.sticky;
    var flags = call(regexpFlags, re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = replace(flags, 'y', '');

      if (indexOf(flags, 'g') === -1) {
        flags += 'g';
      }

      strCopy = stringSlice(str, re.lastIndex); // Support anchored sticky behavior.

      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      } // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.


      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }

    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;
    match = call(nativeExec, sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = stringSlice(match.input, charsAdded);
        match[0] = stringSlice(match[0], charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }

    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      call(nativeReplace, match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    if (match && groups) {
      match.groups = object = create(null);

      for (i = 0; i < groups.length; i++) {
        group = groups[i];
        object[group[0]] = match[group[1]];
      }
    }

    return match;
  };
}

module.exports = patchedExec;

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

var uncurryThis = __webpack_require__(3);

var toIntegerOrInfinity = __webpack_require__(22);

var toString = __webpack_require__(10);

var requireObjectCoercible = __webpack_require__(20);

var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var stringSlice = uncurryThis(''.slice);

var createMethod = function createMethod(CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = toString(requireObjectCoercible($this));
    var position = toIntegerOrInfinity(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = charCodeAt(S, position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF ? CONVERT_TO_STRING ? charAt(S, position) : first : CONVERT_TO_STRING ? stringSlice(S, position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // TODO: Remove from `core-js@4` since it's moved to entry points

__webpack_require__(198);

var uncurryThis = __webpack_require__(3);

var redefine = __webpack_require__(18);

var regexpExec = __webpack_require__(157);

var fails = __webpack_require__(4);

var wellKnownSymbol = __webpack_require__(8);

var createNonEnumerableProperty = __webpack_require__(30);

var SPECIES = wellKnownSymbol('species');
var RegExpPrototype = RegExp.prototype;

module.exports = function (KEY, exec, FORCED, SHAM) {
  var SYMBOL = wellKnownSymbol(KEY);
  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};

    O[SYMBOL] = function () {
      return 7;
    };

    return ''[KEY](O) != 7;
  });
  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {}; // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.

      re.constructor = {};

      re.constructor[SPECIES] = function () {
        return re;
      };

      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }

    re.exec = function () {
      execCalled = true;
      return null;
    };

    re[SYMBOL]('');
    return !execCalled;
  });

  if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || FORCED) {
    var uncurriedNativeRegExpMethod = uncurryThis(/./[SYMBOL]);
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      var uncurriedNativeMethod = uncurryThis(nativeMethod);
      var $exec = regexp.exec;

      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return {
            done: true,
            value: uncurriedNativeRegExpMethod(regexp, str, arg2)
          };
        }

        return {
          done: true,
          value: uncurriedNativeMethod(str, regexp, arg2)
        };
      }

      return {
        done: false
      };
    });
    redefine(String.prototype, KEY, methods[0]);
    redefine(RegExpPrototype, SYMBOL, methods[1]);
  }

  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);
};

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var charAt = __webpack_require__(158).charAt; // `AdvanceStringIndex` abstract operation
// https://tc39.es/ecma262/#sec-advancestringindex


module.exports = function (S, index, unicode) {
  return index + (unicode ? charAt(S, index).length : 1);
};

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

var ArrayBufferViewCore = __webpack_require__(11);

var speciesConstructor = __webpack_require__(94);

var TYPED_ARRAY_CONSTRUCTOR = ArrayBufferViewCore.TYPED_ARRAY_CONSTRUCTOR;
var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor; // a part of `TypedArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#typedarray-species-create

module.exports = function (originalArray) {
  return aTypedArrayConstructor(speciesConstructor(originalArray, originalArray[TYPED_ARRAY_CONSTRUCTOR]));
};

/***/ }),
/* 162 */
/***/ (function(module, exports) {

module.exports = require("punycode");

/***/ }),
/* 163 */
/***/ (function(module, exports) {

module.exports = require("os");

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Dependencies
 */

var convertKeys = __webpack_require__(209);

var strToSnakeCase = __webpack_require__(641);
/**
 * Convert object keys to snake case
 */


module.exports = function toSnakeCase(obj, ignored) {
  return convertKeys(obj, strToSnakeCase, ignored);
};

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var http = __webpack_require__(69);

var https = __webpack_require__(75);

var urllib = __webpack_require__(32);

var zlib = __webpack_require__(49);

var PassThrough = __webpack_require__(15).PassThrough;

var Cookies = __webpack_require__(652);

var packageData = __webpack_require__(55);

var MAX_REDIRECTS = 5;

module.exports = function (url, options) {
  return fetch(url, options);
};

module.exports.Cookies = Cookies;

function fetch(url, options) {
  options = options || {};
  options.fetchRes = options.fetchRes || new PassThrough();
  options.cookies = options.cookies || new Cookies();
  options.redirects = options.redirects || 0;
  options.maxRedirects = isNaN(options.maxRedirects) ? MAX_REDIRECTS : options.maxRedirects;

  if (options.cookie) {
    [].concat(options.cookie || []).forEach(function (cookie) {
      options.cookies.set(cookie, url);
    });
    options.cookie = false;
  }

  var fetchRes = options.fetchRes;
  var parsed = urllib.parse(url);
  var method = (options.method || '').toString().trim().toUpperCase() || 'GET';
  var finished = false;
  var cookies;
  var body;
  var handler = parsed.protocol === 'https:' ? https : http;
  var headers = {
    'accept-encoding': 'gzip,deflate',
    'user-agent': 'nodemailer/' + packageData.version
  };
  Object.keys(options.headers || {}).forEach(function (key) {
    headers[key.toLowerCase().trim()] = options.headers[key];
  });

  if (options.userAgent) {
    headers['user-agent'] = options.userAgent;
  }

  if (parsed.auth) {
    headers.Authorization = 'Basic ' + Buffer.from(parsed.auth).toString('base64');
  }

  if (cookies = options.cookies.get(url)) {
    headers.cookie = cookies;
  }

  if (options.body) {
    if (options.contentType !== false) {
      headers['Content-Type'] = options.contentType || 'application/x-www-form-urlencoded';
    }

    if (typeof options.body.pipe === 'function') {
      // it's a stream
      headers['Transfer-Encoding'] = 'chunked';
      body = options.body;
      body.on('error', function (err) {
        if (finished) {
          return;
        }

        finished = true;
        err.type = 'FETCH';
        err.sourceUrl = url;
        fetchRes.emit('error', err);
      });
    } else {
      if (options.body instanceof Buffer) {
        body = options.body;
      } else if (_typeof(options.body) === 'object') {
        try {
          // encodeURIComponent can fail on invalid input (partial emoji etc.)
          body = Buffer.from(Object.keys(options.body).map(function (key) {
            var value = options.body[key].toString().trim();
            return encodeURIComponent(key) + '=' + encodeURIComponent(value);
          }).join('&'));
        } catch (E) {
          if (finished) {
            return;
          }

          finished = true;
          E.type = 'FETCH';
          E.sourceUrl = url;
          fetchRes.emit('error', E);
          return;
        }
      } else {
        body = Buffer.from(options.body.toString().trim());
      }

      headers['Content-Type'] = options.contentType || 'application/x-www-form-urlencoded';
      headers['Content-Length'] = body.length;
    } // if method is not provided, use POST instead of GET


    method = (options.method || '').toString().trim().toUpperCase() || 'POST';
  }

  var req;
  var reqOptions = {
    method: method,
    host: parsed.hostname,
    path: parsed.path,
    port: parsed.port ? parsed.port : parsed.protocol === 'https:' ? 443 : 80,
    headers: headers,
    rejectUnauthorized: false,
    agent: false
  };

  if (options.tls) {
    Object.keys(options.tls).forEach(function (key) {
      reqOptions[key] = options.tls[key];
    });
  }

  try {
    req = handler.request(reqOptions);
  } catch (E) {
    finished = true;
    setImmediate(function () {
      E.type = 'FETCH';
      E.sourceUrl = url;
      fetchRes.emit('error', E);
    });
    return fetchRes;
  }

  if (options.timeout) {
    req.setTimeout(options.timeout, function () {
      if (finished) {
        return;
      }

      finished = true;
      req.abort();
      var err = new Error('Request Timeout');
      err.type = 'FETCH';
      err.sourceUrl = url;
      fetchRes.emit('error', err);
    });
  }

  req.on('error', function (err) {
    if (finished) {
      return;
    }

    finished = true;
    err.type = 'FETCH';
    err.sourceUrl = url;
    fetchRes.emit('error', err);
  });
  req.on('response', function (res) {
    var inflate;

    if (finished) {
      return;
    }

    switch (res.headers['content-encoding']) {
      case 'gzip':
      case 'deflate':
        inflate = zlib.createUnzip();
        break;
    }

    if (res.headers['set-cookie']) {
      [].concat(res.headers['set-cookie'] || []).forEach(function (cookie) {
        options.cookies.set(cookie, url);
      });
    }

    if ([301, 302, 303, 307, 308].includes(res.statusCode) && res.headers.location) {
      // redirect
      options.redirects++;

      if (options.redirects > options.maxRedirects) {
        finished = true;
        var err = new Error('Maximum redirect count exceeded');
        err.type = 'FETCH';
        err.sourceUrl = url;
        fetchRes.emit('error', err);
        req.abort();
        return;
      } // redirect does not include POST body


      options.method = 'GET';
      options.body = false;
      return fetch(urllib.resolve(url, res.headers.location), options);
    }

    fetchRes.statusCode = res.statusCode;
    fetchRes.headers = res.headers;

    if (res.statusCode >= 300 && !options.allowErrorResponse) {
      finished = true;

      var _err = new Error('Invalid status code ' + res.statusCode);

      _err.type = 'FETCH';
      _err.sourceUrl = url;
      fetchRes.emit('error', _err);
      req.abort();
      return;
    }

    res.on('error', function (err) {
      if (finished) {
        return;
      }

      finished = true;
      err.type = 'FETCH';
      err.sourceUrl = url;
      fetchRes.emit('error', err);
      req.abort();
    });

    if (inflate) {
      res.pipe(inflate).pipe(fetchRes);
      inflate.on('error', function (err) {
        if (finished) {
          return;
        }

        finished = true;
        err.type = 'FETCH';
        err.sourceUrl = url;
        fetchRes.emit('error', err);
        req.abort();
      });
    } else {
      res.pipe(fetchRes);
    }
  });
  setImmediate(function () {
    if (body) {
      try {
        if (typeof body.pipe === 'function') {
          return body.pipe(req);
        } else {
          req.write(body);
        }
      } catch (err) {
        finished = true;
        err.type = 'FETCH';
        err.sourceUrl = url;
        fetchRes.emit('error', err);
        return;
      }
    }

    req.end();
  });
  return fetchRes;
}

/***/ }),
/* 166 */
/***/ (function(module, exports) {

module.exports = require("net");

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* eslint no-control-regex:0 */


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var base64 = __webpack_require__(292);

var qp = __webpack_require__(293);

var mimeTypes = __webpack_require__(290);

module.exports = {
  /**
   * Checks if a value is plaintext string (uses only printable 7bit chars)
   *
   * @param {String} value String to be tested
   * @returns {Boolean} true if it is a plaintext string
   */
  isPlainText: function isPlainText(value, isParam) {
    var re = isParam ? /[\x00-\x08\x0b\x0c\x0e-\x1f"\u0080-\uFFFF]/ : /[\x00-\x08\x0b\x0c\x0e-\x1f\u0080-\uFFFF]/;

    if (typeof value !== 'string' || re.test(value)) {
      return false;
    } else {
      return true;
    }
  },

  /**
   * Checks if a multi line string containes lines longer than the selected value.
   *
   * Useful when detecting if a mail message needs any processing at all –
   * if only plaintext characters are used and lines are short, then there is
   * no need to encode the values in any way. If the value is plaintext but has
   * longer lines then allowed, then use format=flowed
   *
   * @param {Number} lineLength Max line length to check for
   * @returns {Boolean} Returns true if there is at least one line longer than lineLength chars
   */
  hasLongerLines: function hasLongerLines(str, lineLength) {
    if (str.length > 128 * 1024) {
      // do not test strings longer than 128kB
      return true;
    }

    return new RegExp('^.{' + (lineLength + 1) + ',}', 'm').test(str);
  },

  /**
   * Encodes a string or an Buffer to an UTF-8 MIME Word (rfc2047)
   *
   * @param {String|Buffer} data String to be encoded
   * @param {String} mimeWordEncoding='Q' Encoding for the mime word, either Q or B
   * @param {Number} [maxLength=0] If set, split mime words into several chunks if needed
   * @return {String} Single or several mime words joined together
   */
  encodeWord: function encodeWord(data, mimeWordEncoding, maxLength) {
    mimeWordEncoding = (mimeWordEncoding || 'Q').toString().toUpperCase().trim().charAt(0);
    maxLength = maxLength || 0;
    var encodedStr;
    var toCharset = 'UTF-8';

    if (maxLength && maxLength > 7 + toCharset.length) {
      maxLength -= 7 + toCharset.length;
    }

    if (mimeWordEncoding === 'Q') {
      // https://tools.ietf.org/html/rfc2047#section-5 rule (3)
      encodedStr = qp.encode(data).replace(/[^a-z0-9!*+\-/=]/gi, function (chr) {
        var ord = chr.charCodeAt(0).toString(16).toUpperCase();

        if (chr === ' ') {
          return '_';
        } else {
          return '=' + (ord.length === 1 ? '0' + ord : ord);
        }
      });
    } else if (mimeWordEncoding === 'B') {
      encodedStr = typeof data === 'string' ? data : base64.encode(data);
      maxLength = maxLength ? Math.max(3, (maxLength - maxLength % 4) / 4 * 3) : 0;
    }

    if (maxLength && (mimeWordEncoding !== 'B' ? encodedStr : base64.encode(data)).length > maxLength) {
      if (mimeWordEncoding === 'Q') {
        encodedStr = this.splitMimeEncodedString(encodedStr, maxLength).join('?= =?' + toCharset + '?' + mimeWordEncoding + '?');
      } else {
        // RFC2047 6.3 (2) states that encoded-word must include an integral number of characters, so no chopping unicode sequences
        var parts = [];
        var lpart = '';

        for (var i = 0, len = encodedStr.length; i < len; i++) {
          var chr = encodedStr.charAt(i); // check if we can add this character to the existing string
          // without breaking byte length limit

          if (Buffer.byteLength(lpart + chr) <= maxLength || i === 0) {
            lpart += chr;
          } else {
            // we hit the length limit, so push the existing string and start over
            parts.push(base64.encode(lpart));
            lpart = chr;
          }
        }

        if (lpart) {
          parts.push(base64.encode(lpart));
        }

        if (parts.length > 1) {
          encodedStr = parts.join('?= =?' + toCharset + '?' + mimeWordEncoding + '?');
        } else {
          encodedStr = parts.join('');
        }
      }
    } else if (mimeWordEncoding === 'B') {
      encodedStr = base64.encode(data);
    }

    return '=?' + toCharset + '?' + mimeWordEncoding + '?' + encodedStr + (encodedStr.substr(-2) === '?=' ? '' : '?=');
  },

  /**
   * Finds word sequences with non ascii text and converts these to mime words
   *
   * @param {String} value String to be encoded
   * @param {String} mimeWordEncoding='Q' Encoding for the mime word, either Q or B
   * @param {Number} [maxLength=0] If set, split mime words into several chunks if needed
   * @param {Boolean} [encodeAll=false] If true and the value needs encoding then encodes entire string, not just the smallest match
   * @return {String} String with possible mime words
   */
  encodeWords: function encodeWords(value, mimeWordEncoding, maxLength, encodeAll) {
    maxLength = maxLength || 0;
    var encodedValue; // find first word with a non-printable ascii or special symbol in it

    var firstMatch = value.match(/(?:^|\s)([^\s]*["\u0080-\uFFFF])/);

    if (!firstMatch) {
      return value;
    }

    if (encodeAll) {
      // if it is requested to encode everything or the string contains something that resebles encoded word, then encode everything
      return this.encodeWord(value, mimeWordEncoding, maxLength);
    } // find the last word with a non-printable ascii in it


    var lastMatch = value.match(/(["\u0080-\uFFFF][^\s]*)[^"\u0080-\uFFFF]*$/);

    if (!lastMatch) {
      // should not happen
      return value;
    }

    var startIndex = firstMatch.index + (firstMatch[0].match(/[^\s]/) || {
      index: 0
    }).index;
    var endIndex = lastMatch.index + (lastMatch[1] || '').length;
    encodedValue = (startIndex ? value.substr(0, startIndex) : '') + this.encodeWord(value.substring(startIndex, endIndex), mimeWordEncoding || 'Q', maxLength) + (endIndex < value.length ? value.substr(endIndex) : '');
    return encodedValue;
  },

  /**
   * Joins parsed header value together as 'value; param1=value1; param2=value2'
   * PS: We are following RFC 822 for the list of special characters that we need to keep in quotes.
   *      Refer: https://www.w3.org/Protocols/rfc1341/4_Content-Type.html
   * @param {Object} structured Parsed header value
   * @return {String} joined header value
   */
  buildHeaderValue: function buildHeaderValue(structured) {
    var _this = this;

    var paramsArray = [];
    Object.keys(structured.params || {}).forEach(function (param) {
      // filename might include unicode characters so it is a special case
      // other values probably do not
      var value = structured.params[param];

      if (!_this.isPlainText(value, true) || value.length >= 75) {
        _this.buildHeaderParam(param, value, 50).forEach(function (encodedParam) {
          if (!/[\s"\\;:/=(),<>@[\]?]|^[-']|'$/.test(encodedParam.value) || encodedParam.key.substr(-1) === '*') {
            paramsArray.push(encodedParam.key + '=' + encodedParam.value);
          } else {
            paramsArray.push(encodedParam.key + '=' + JSON.stringify(encodedParam.value));
          }
        });
      } else if (/[\s'"\\;:/=(),<>@[\]?]|^-/.test(value)) {
        paramsArray.push(param + '=' + JSON.stringify(value));
      } else {
        paramsArray.push(param + '=' + value);
      }
    });
    return structured.value + (paramsArray.length ? '; ' + paramsArray.join('; ') : '');
  },

  /**
   * Encodes a string or an Buffer to an UTF-8 Parameter Value Continuation encoding (rfc2231)
   * Useful for splitting long parameter values.
   *
   * For example
   *      title="unicode string"
   * becomes
   *     title*0*=utf-8''unicode
   *     title*1*=%20string
   *
   * @param {String|Buffer} data String to be encoded
   * @param {Number} [maxLength=50] Max length for generated chunks
   * @param {String} [fromCharset='UTF-8'] Source sharacter set
   * @return {Array} A list of encoded keys and headers
   */
  buildHeaderParam: function buildHeaderParam(key, data, maxLength) {
    var list = [];
    var encodedStr = typeof data === 'string' ? data : (data || '').toString();
    var encodedStrArr;
    var chr, ord;
    var line;
    var startPos = 0;
    var i, len;
    maxLength = maxLength || 50; // process ascii only text

    if (this.isPlainText(data, true)) {
      // check if conversion is even needed
      if (encodedStr.length <= maxLength) {
        return [{
          key: key,
          value: encodedStr
        }];
      }

      encodedStr = encodedStr.replace(new RegExp('.{' + maxLength + '}', 'g'), function (str) {
        list.push({
          line: str
        });
        return '';
      });

      if (encodedStr) {
        list.push({
          line: encodedStr
        });
      }
    } else {
      if (/[\uD800-\uDBFF]/.test(encodedStr)) {
        // string containts surrogate pairs, so normalize it to an array of bytes
        encodedStrArr = [];

        for (i = 0, len = encodedStr.length; i < len; i++) {
          chr = encodedStr.charAt(i);
          ord = chr.charCodeAt(0);

          if (ord >= 0xd800 && ord <= 0xdbff && i < len - 1) {
            chr += encodedStr.charAt(i + 1);
            encodedStrArr.push(chr);
            i++;
          } else {
            encodedStrArr.push(chr);
          }
        }

        encodedStr = encodedStrArr;
      } // first line includes the charset and language info and needs to be encoded
      // even if it does not contain any unicode characters


      line = 'utf-8\x27\x27';
      var encoded = true;
      startPos = 0; // process text with unicode or special chars

      for (i = 0, len = encodedStr.length; i < len; i++) {
        chr = encodedStr[i];

        if (encoded) {
          chr = this.safeEncodeURIComponent(chr);
        } else {
          // try to urlencode current char
          chr = chr === ' ' ? chr : this.safeEncodeURIComponent(chr); // By default it is not required to encode a line, the need
          // only appears when the string contains unicode or special chars
          // in this case we start processing the line over and encode all chars

          if (chr !== encodedStr[i]) {
            // Check if it is even possible to add the encoded char to the line
            // If not, there is no reason to use this line, just push it to the list
            // and start a new line with the char that needs encoding
            if ((this.safeEncodeURIComponent(line) + chr).length >= maxLength) {
              list.push({
                line: line,
                encoded: encoded
              });
              line = '';
              startPos = i - 1;
            } else {
              encoded = true;
              i = startPos;
              line = '';
              continue;
            }
          }
        } // if the line is already too long, push it to the list and start a new one


        if ((line + chr).length >= maxLength) {
          list.push({
            line: line,
            encoded: encoded
          });
          line = chr = encodedStr[i] === ' ' ? ' ' : this.safeEncodeURIComponent(encodedStr[i]);

          if (chr === encodedStr[i]) {
            encoded = false;
            startPos = i - 1;
          } else {
            encoded = true;
          }
        } else {
          line += chr;
        }
      }

      if (line) {
        list.push({
          line: line,
          encoded: encoded
        });
      }
    }

    return list.map(function (item, i) {
      return {
        // encoded lines: {name}*{part}*
        // unencoded lines: {name}*{part}
        // if any line needs to be encoded then the first line (part==0) is always encoded
        key: key + '*' + i + (item.encoded ? '*' : ''),
        value: item.line
      };
    });
  },

  /**
   * Parses a header value with key=value arguments into a structured
   * object.
   *
   *   parseHeaderValue('content-type: text/plain; CHARSET='UTF-8'') ->
   *   {
   *     'value': 'text/plain',
   *     'params': {
   *       'charset': 'UTF-8'
   *     }
   *   }
   *
   * @param {String} str Header value
   * @return {Object} Header value as a parsed structure
   */
  parseHeaderValue: function parseHeaderValue(str) {
    var response = {
      value: false,
      params: {}
    };
    var key = false;
    var value = '';
    var type = 'value';
    var quote = false;
    var escaped = false;
    var chr;

    for (var i = 0, len = str.length; i < len; i++) {
      chr = str.charAt(i);

      if (type === 'key') {
        if (chr === '=') {
          key = value.trim().toLowerCase();
          type = 'value';
          value = '';
          continue;
        }

        value += chr;
      } else {
        if (escaped) {
          value += chr;
        } else if (chr === '\\') {
          escaped = true;
          continue;
        } else if (quote && chr === quote) {
          quote = false;
        } else if (!quote && chr === '"') {
          quote = chr;
        } else if (!quote && chr === ';') {
          if (key === false) {
            response.value = value.trim();
          } else {
            response.params[key] = value.trim();
          }

          type = 'key';
          value = '';
        } else {
          value += chr;
        }

        escaped = false;
      }
    }

    if (type === 'value') {
      if (key === false) {
        response.value = value.trim();
      } else {
        response.params[key] = value.trim();
      }
    } else if (value.trim()) {
      response.params[value.trim().toLowerCase()] = '';
    } // handle parameter value continuations
    // https://tools.ietf.org/html/rfc2231#section-3
    // preprocess values


    Object.keys(response.params).forEach(function (key) {
      var actualKey, nr, match, value;

      if (match = key.match(/(\*(\d+)|\*(\d+)\*|\*)$/)) {
        actualKey = key.substr(0, match.index);
        nr = Number(match[2] || match[3]) || 0;

        if (!response.params[actualKey] || _typeof(response.params[actualKey]) !== 'object') {
          response.params[actualKey] = {
            charset: false,
            values: []
          };
        }

        value = response.params[key];

        if (nr === 0 && match[0].substr(-1) === '*' && (match = value.match(/^([^']*)'[^']*'(.*)$/))) {
          response.params[actualKey].charset = match[1] || 'iso-8859-1';
          value = match[2];
        }

        response.params[actualKey].values[nr] = value; // remove the old reference

        delete response.params[key];
      }
    }); // concatenate split rfc2231 strings and convert encoded strings to mime encoded words

    Object.keys(response.params).forEach(function (key) {
      var value;

      if (response.params[key] && Array.isArray(response.params[key].values)) {
        value = response.params[key].values.map(function (val) {
          return val || '';
        }).join('');

        if (response.params[key].charset) {
          // convert "%AB" to "=?charset?Q?=AB?="
          response.params[key] = '=?' + response.params[key].charset + '?Q?' + value // fix invalidly encoded chars
          .replace(/[=?_\s]/g, function (s) {
            var c = s.charCodeAt(0).toString(16);

            if (s === ' ') {
              return '_';
            } else {
              return '%' + (c.length < 2 ? '0' : '') + c;
            }
          }) // change from urlencoding to percent encoding
          .replace(/%/g, '=') + '?=';
        } else {
          response.params[key] = value;
        }
      }
    });
    return response;
  },

  /**
   * Returns file extension for a content type string. If no suitable extensions
   * are found, 'bin' is used as the default extension
   *
   * @param {String} mimeType Content type to be checked for
   * @return {String} File extension
   */
  detectExtension: function detectExtension(mimeType) {
    return mimeTypes.detectExtension(mimeType);
  },

  /**
   * Returns content type for a file extension. If no suitable content types
   * are found, 'application/octet-stream' is used as the default content type
   *
   * @param {String} extension Extension to be checked for
   * @return {String} File extension
   */
  detectMimeType: function detectMimeType(extension) {
    return mimeTypes.detectMimeType(extension);
  },

  /**
   * Folds long lines, useful for folding header lines (afterSpace=false) and
   * flowed text (afterSpace=true)
   *
   * @param {String} str String to be folded
   * @param {Number} [lineLength=76] Maximum length of a line
   * @param {Boolean} afterSpace If true, leave a space in th end of a line
   * @return {String} String with folded lines
   */
  foldLines: function foldLines(str, lineLength, afterSpace) {
    str = (str || '').toString();
    lineLength = lineLength || 76;
    var pos = 0,
        len = str.length,
        result = '',
        line,
        match;

    while (pos < len) {
      line = str.substr(pos, lineLength);

      if (line.length < lineLength) {
        result += line;
        break;
      }

      if (match = line.match(/^[^\n\r]*(\r?\n|\r)/)) {
        line = match[0];
        result += line;
        pos += line.length;
        continue;
      } else if ((match = line.match(/(\s+)[^\s]*$/)) && match[0].length - (afterSpace ? (match[1] || '').length : 0) < line.length) {
        line = line.substr(0, line.length - (match[0].length - (afterSpace ? (match[1] || '').length : 0)));
      } else if (match = str.substr(pos + line.length).match(/^[^\s]+(\s*)/)) {
        line = line + match[0].substr(0, match[0].length - (!afterSpace ? (match[1] || '').length : 0));
      }

      result += line;
      pos += line.length;

      if (pos < len) {
        result += '\r\n';
      }
    }

    return result;
  },

  /**
   * Splits a mime encoded string. Needed for dividing mime words into smaller chunks
   *
   * @param {String} str Mime encoded string to be split up
   * @param {Number} maxlen Maximum length of characters for one part (minimum 12)
   * @return {Array} Split string
   */
  splitMimeEncodedString: function splitMimeEncodedString(str, maxlen) {
    var curLine,
        match,
        chr,
        done,
        lines = []; // require at least 12 symbols to fit possible 4 octet UTF-8 sequences

    maxlen = Math.max(maxlen || 0, 12);

    while (str.length) {
      curLine = str.substr(0, maxlen); // move incomplete escaped char back to main

      if (match = curLine.match(/[=][0-9A-F]?$/i)) {
        curLine = curLine.substr(0, match.index);
      }

      done = false;

      while (!done) {
        done = true; // check if not middle of a unicode char sequence

        if (match = str.substr(curLine.length).match(/^[=]([0-9A-F]{2})/i)) {
          chr = parseInt(match[1], 16); // invalid sequence, move one char back anc recheck

          if (chr < 0xc2 && chr > 0x7f) {
            curLine = curLine.substr(0, curLine.length - 3);
            done = false;
          }
        }
      }

      if (curLine.length) {
        lines.push(curLine);
      }

      str = str.substr(curLine.length);
    }

    return lines;
  },
  encodeURICharComponent: function encodeURICharComponent(chr) {
    var res = '';
    var ord = chr.charCodeAt(0).toString(16).toUpperCase();

    if (ord.length % 2) {
      ord = '0' + ord;
    }

    if (ord.length > 2) {
      for (var i = 0, len = ord.length / 2; i < len; i++) {
        res += '%' + ord.substr(i, 2);
      }
    } else {
      res += '%' + ord;
    }

    return res;
  },
  safeEncodeURIComponent: function safeEncodeURIComponent(str) {
    var _this2 = this;

    str = (str || '').toString();

    try {
      // might throw if we try to encode invalid sequences, eg. partial emoji
      str = encodeURIComponent(str);
    } catch (E) {
      // should never run
      return str.replace(/[^\x00-\x1F *'()<>@,;:\\"[\]?=\u007F-\uFFFF]+/g, '');
    } // ensure chars that are not handled by encodeURICompent are converted as well


    return str.replace(/[\x00-\x1F *'()<>@,;:\\"[\]?=\u007F-\uFFFF]/g, function (chr) {
      return _this2.encodeURICharComponent(chr);
    });
  }
};

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var implementation = __webpack_require__(709);

module.exports = Function.prototype.bind || implementation;

/***/ }),
/* 169 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RenderedContentItem; });
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class representing the response from the [Content Rendering Service](https://docs.amplience.net/integration/contentrenderingservice.html?h=rendering%20service).
 * Rendered content is the output of converting the JSON body of a content item using a template.
 */
var RenderedContentItem = /*#__PURE__*/_createClass(function RenderedContentItem() {
  _classCallCheck(this, RenderedContentItem);
});

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(612);

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(731);

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var call = __webpack_require__(13);

var isObject = __webpack_require__(7);

var isSymbol = __webpack_require__(87);

var getMethod = __webpack_require__(59);

var ordinaryToPrimitive = __webpack_require__(228);

var wellKnownSymbol = __webpack_require__(8);

var TypeError = global.TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive'); // `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive

module.exports = function (input, pref) {
  if (!isObject(input) || isSymbol(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;

  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call(exoticToPrim, input, pref);
    if (!isObject(result) || isSymbol(result)) return result;
    throw TypeError("Can't convert object to primitive value");
  }

  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = __webpack_require__(71);

var fails = __webpack_require__(4); // eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing


module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  var symbol = Symbol(); // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances

  return !String(symbol) || !(Object(symbol) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
  !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var setGlobal = __webpack_require__(175);

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});
module.exports = store;

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2); // eslint-disable-next-line es/no-object-defineproperty -- safe


var defineProperty = Object.defineProperty;

module.exports = function (key, value) {
  try {
    defineProperty(global, key, {
      value: value,
      configurable: true,
      writable: true
    });
  } catch (error) {
    global[key] = value;
  }

  return value;
};

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(19);

var uncurryThis = __webpack_require__(3);

var getOwnPropertyNamesModule = __webpack_require__(72);

var getOwnPropertySymbolsModule = __webpack_require__(178);

var anObject = __webpack_require__(5);

var concat = uncurryThis([].concat); // all object keys, includes non-enumerable and symbols

module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
};

/***/ }),
/* 177 */
/***/ (function(module, exports) {

// IE8- don't enum bug keys
module.exports = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];

/***/ }),
/* 178 */
/***/ (function(module, exports) {

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
exports.f = Object.getOwnPropertySymbols;

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(8);

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};
test[TO_STRING_TAG] = 'z';
module.exports = String(test) === '[object z]';

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/* eslint-disable es/no-object-getownpropertynames -- safe */
var classof = __webpack_require__(37);

var toIndexedObject = __webpack_require__(34);

var $getOwnPropertyNames = __webpack_require__(72).f;

var arraySlice = __webpack_require__(113);

var windowNames = (typeof window === "undefined" ? "undefined" : _typeof(window)) == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function getWindowNames(it) {
  try {
    return $getOwnPropertyNames(it);
  } catch (error) {
    return arraySlice(windowNames);
  }
}; // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window


module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && classof(it) == 'Window' ? getWindowNames(it) : $getOwnPropertyNames(toIndexedObject(it));
};

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(4);

var createPropertyDescriptor = __webpack_require__(46);

module.exports = !fails(function () {
  var error = Error('a');
  if (!('stack' in error)) return true; // eslint-disable-next-line es/no-object-defineproperty -- safe

  Object.defineProperty(error, 'stack', createPropertyDescriptor(1, 7));
  return error.stack !== 7;
});

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(4);

module.exports = !fails(function () {
  function F() {
    /* empty */
  }

  F.prototype.constructor = null; // eslint-disable-next-line es/no-object-getprototypeof -- required for testing

  return Object.getPrototypeOf(new F()) !== F.prototype;
});

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(8);

var Iterators = __webpack_require__(116);

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype; // check on default Array iterator

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var toObject = __webpack_require__(16);

var toAbsoluteIndex = __webpack_require__(60);

var lengthOfArrayLike = __webpack_require__(17); // `Array.prototype.fill` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.fill


module.exports = function fill(value
/* , start = 0, end = @length */
) {
  var O = toObject(this);
  var length = lengthOfArrayLike(O);
  var argumentsLength = arguments.length;
  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);
  var end = argumentsLength > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);

  while (endPos > index) {
    O[index++] = value;
  }

  return O;
};

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var call = __webpack_require__(13);

var IS_PURE = __webpack_require__(25);

var FunctionName = __webpack_require__(89);

var isCallable = __webpack_require__(9);

var createIteratorConstructor = __webpack_require__(186);

var getPrototypeOf = __webpack_require__(48);

var setPrototypeOf = __webpack_require__(53);

var setToStringTag = __webpack_require__(47);

var createNonEnumerableProperty = __webpack_require__(30);

var redefine = __webpack_require__(18);

var wellKnownSymbol = __webpack_require__(8);

var Iterators = __webpack_require__(116);

var IteratorsCore = __webpack_require__(244);

var PROPER_FUNCTION_NAME = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function returnThis() {
  return this;
};

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function getIterationMethod(KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];

    switch (KIND) {
      case KEYS:
        return function keys() {
          return new IteratorConstructor(this, KIND);
        };

      case VALUES:
        return function values() {
          return new IteratorConstructor(this, KIND);
        };

      case ENTRIES:
        return function entries() {
          return new IteratorConstructor(this, KIND);
        };
    }

    return function () {
      return new IteratorConstructor(this);
    };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR] || IterablePrototype['@@iterator'] || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY; // fix native

  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));

    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {
          redefine(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      } // Set @@toStringTag to native iterators


      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  } // fix Array.prototype.{ values, @@iterator }.name in V8 / FF


  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {
      createNonEnumerableProperty(IterablePrototype, 'name', VALUES);
    } else {
      INCORRECT_VALUES_NAME = true;

      defaultIterator = function values() {
        return call(nativeIterator, this);
      };
    }
  } // export additional methods


  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({
      target: NAME,
      proto: true,
      forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME
    }, methods);
  } // define iterator


  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    redefine(IterablePrototype, ITERATOR, defaultIterator, {
      name: DEFAULT
    });
  }

  Iterators[NAME] = defaultIterator;
  return methods;
};

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var IteratorPrototype = __webpack_require__(244).IteratorPrototype;

var create = __webpack_require__(41);

var createPropertyDescriptor = __webpack_require__(46);

var setToStringTag = __webpack_require__(47);

var Iterators = __webpack_require__(116);

var returnThis = function returnThis() {
  return this;
};

module.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, {
    next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next)
  });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

var arraySlice = __webpack_require__(113);

var floor = Math.floor;

var mergeSort = function mergeSort(array, comparefn) {
  var length = array.length;
  var middle = floor(length / 2);
  return length < 8 ? insertionSort(array, comparefn) : merge(array, mergeSort(arraySlice(array, 0, middle), comparefn), mergeSort(arraySlice(array, middle), comparefn), comparefn);
};

var insertionSort = function insertionSort(array, comparefn) {
  var length = array.length;
  var i = 1;
  var element, j;

  while (i < length) {
    j = i;
    element = array[i];

    while (j && comparefn(array[j - 1], element) > 0) {
      array[j] = array[--j];
    }

    if (j !== i++) array[j] = element;
  }

  return array;
};

var merge = function merge(array, left, right, comparefn) {
  var llength = left.length;
  var rlength = right.length;
  var lindex = 0;
  var rindex = 0;

  while (lindex < llength || rindex < rlength) {
    array[lindex + rindex] = lindex < llength && rindex < rlength ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++] : lindex < llength ? left[lindex++] : right[rindex++];
  }

  return array;
};

module.exports = mergeSort;

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

var userAgent = __webpack_require__(58);

var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);
module.exports = !!webkit && +webkit[1];

/***/ }),
/* 189 */
/***/ (function(module, exports) {

// eslint-disable-next-line es/no-typed-arrays -- safe
module.exports = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var isConstructor = __webpack_require__(90);

var tryToString = __webpack_require__(108);

var TypeError = global.TypeError; // `Assert: IsConstructor(argument) is true`

module.exports = function (argument) {
  if (isConstructor(argument)) return argument;
  throw TypeError(tryToString(argument) + ' is not a constructor');
};

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-string-pad-start-end
var uncurryThis = __webpack_require__(3);

var toLength = __webpack_require__(39);

var toString = __webpack_require__(10);

var $repeat = __webpack_require__(148);

var requireObjectCoercible = __webpack_require__(20);

var repeat = uncurryThis($repeat);
var stringSlice = uncurryThis(''.slice);
var ceil = Math.ceil; // `String.prototype.{ padStart, padEnd }` methods implementation

var createMethod = function createMethod(IS_END) {
  return function ($this, maxLength, fillString) {
    var S = toString(requireObjectCoercible($this));
    var intMaxLength = toLength(maxLength);
    var stringLength = S.length;
    var fillStr = fillString === undefined ? ' ' : toString(fillString);
    var fillLen, stringFiller;
    if (intMaxLength <= stringLength || fillStr == '') return S;
    fillLen = intMaxLength - stringLength;
    stringFiller = repeat(fillStr, ceil(fillLen / fillStr.length));
    if (stringFiller.length > fillLen) stringFiller = stringSlice(stringFiller, 0, fillLen);
    return IS_END ? S + stringFiller : stringFiller + S;
  };
};

module.exports = {
  // `String.prototype.padStart` method
  // https://tc39.es/ecma262/#sec-string.prototype.padstart
  start: createMethod(false),
  // `String.prototype.padEnd` method
  // https://tc39.es/ecma262/#sec-string.prototype.padend
  end: createMethod(true)
};

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

// FF26- bug: ArrayBuffers are non-extensible, but Object.isExtensible does not report it
var fails = __webpack_require__(4);

module.exports = fails(function () {
  if (typeof ArrayBuffer == 'function') {
    var buffer = new ArrayBuffer(8); // eslint-disable-next-line es/no-object-isextensible, es/no-object-defineproperty -- safe

    if (Object.isExtensible(buffer)) Object.defineProperty(buffer, 'a', {
      value: 8
    });
  }
});

/***/ }),
/* 193 */
/***/ (function(module, exports) {

// `Math.sign` method implementation
// https://tc39.es/ecma262/#sec-math.sign
// eslint-disable-next-line es/no-math-sign -- safe
module.exports = Math.sign || function sign(x) {
  // eslint-disable-next-line no-self-compare -- NaN check
  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
};

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(7);

var floor = Math.floor; // `IsIntegralNumber` abstract operation
// https://tc39.es/ecma262/#sec-isintegralnumber
// eslint-disable-next-line es/no-number-isinteger -- safe

module.exports = Number.isInteger || function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var apply = __webpack_require__(40);

var bind = __webpack_require__(52);

var isCallable = __webpack_require__(9);

var hasOwn = __webpack_require__(14);

var fails = __webpack_require__(4);

var html = __webpack_require__(232);

var arraySlice = __webpack_require__(78);

var createElement = __webpack_require__(137);

var IS_IOS = __webpack_require__(259);

var IS_NODE = __webpack_require__(79);

var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var Dispatch = global.Dispatch;
var Function = global.Function;
var MessageChannel = global.MessageChannel;
var String = global.String;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var location, defer, channel, port;

try {
  // Deno throws a ReferenceError on `location` access without `--location` flag
  location = global.location;
} catch (error) {
  /* empty */
}

var run = function run(id) {
  if (hasOwn(queue, id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function runner(id) {
  return function () {
    run(id);
  };
};

var listener = function listener(event) {
  run(event.data);
};

var post = function post(id) {
  // old engines have not location.origin
  global.postMessage(String(id), location.protocol + '//' + location.host);
}; // Node.js 0.9+ & IE10+ has setImmediate, otherwise:


if (!set || !clear) {
  set = function setImmediate(fn) {
    var args = arraySlice(arguments, 1);

    queue[++counter] = function () {
      apply(isCallable(fn) ? fn : Function(fn), undefined, args);
    };

    defer(counter);
    return counter;
  };

  clear = function clearImmediate(id) {
    delete queue[id];
  }; // Node.js 0.8-


  if (IS_NODE) {
    defer = function defer(id) {
      process.nextTick(runner(id));
    }; // Sphere (JS game engine) Dispatch API

  } else if (Dispatch && Dispatch.now) {
    defer = function defer(id) {
      Dispatch.now(runner(id));
    }; // Browsers with MessageChannel, includes WebWorkers
    // except iOS - https://github.com/zloirock/core-js/issues/624

  } else if (MessageChannel && !IS_IOS) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = bind(port.postMessage, port); // Browsers with postMessage, skip WebWorkers
    // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && isCallable(global.postMessage) && !global.importScripts && location && location.protocol !== 'file:' && !fails(post)) {
    defer = post;
    global.addEventListener('message', listener, false); // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function defer(id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    }; // Rest old browsers

  } else {
    defer = function defer(id) {
      setTimeout(runner(id), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};

/***/ }),
/* 196 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return {
      error: false,
      value: exec()
    };
  } catch (error) {
    return {
      error: true,
      value: error
    };
  }
};

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(4);

var global = __webpack_require__(2); // babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError


var $RegExp = global.RegExp;
module.exports = fails(function () {
  var re = $RegExp('.', 's');
  return !(re.dotAll && re.exec('\n') && re.flags === 's');
});

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var exec = __webpack_require__(157); // `RegExp.prototype.exec` method
// https://tc39.es/ecma262/#sec-regexp.prototype.exec


$({
  target: 'RegExp',
  proto: true,
  forced: /./.exec !== exec
}, {
  exec: exec
});

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var isRegExp = __webpack_require__(120);

var TypeError = global.TypeError;

module.exports = function (it) {
  if (isRegExp(it)) {
    throw TypeError("The method doesn't accept regular expressions");
  }

  return it;
};

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(8);

var MATCH = wellKnownSymbol('match');

module.exports = function (METHOD_NAME) {
  var regexp = /./;

  try {
    '/./'[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (error2) {
      /* empty */
    }
  }

  return false;
};

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

var PROPER_FUNCTION_NAME = __webpack_require__(89).PROPER;

var fails = __webpack_require__(4);

var whitespaces = __webpack_require__(153);

var non = "\u200B\x85\u180E"; // check that a method works with the correct list
// of whitespaces and has a correct name

module.exports = function (METHOD_NAME) {
  return fails(function () {
    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() !== non || PROPER_FUNCTION_NAME && whitespaces[METHOD_NAME].name !== METHOD_NAME;
  });
};

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable no-new -- required for testing */
var global = __webpack_require__(2);

var fails = __webpack_require__(4);

var checkCorrectnessOfIteration = __webpack_require__(144);

var NATIVE_ARRAY_BUFFER_VIEWS = __webpack_require__(11).NATIVE_ARRAY_BUFFER_VIEWS;

var ArrayBuffer = global.ArrayBuffer;
var Int8Array = global.Int8Array;
module.exports = !NATIVE_ARRAY_BUFFER_VIEWS || !fails(function () {
  Int8Array(1);
}) || !fails(function () {
  new Int8Array(-1);
}) || !checkCorrectnessOfIteration(function (iterable) {
  new Int8Array();
  new Int8Array(null);
  new Int8Array(1.5);
  new Int8Array(iterable);
}, true) || fails(function () {
  // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill
  return new Int8Array(new ArrayBuffer(2), 1, undefined).length !== 1;
});

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(31);

function encode(val) {
  return encodeURIComponent(val).replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');
}
/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */


module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;

  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];
    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }

        parts.push(encode(key) + '=' + encode(v));
      });
    });
    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');

    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(31);

var normalizeHeaderName = __webpack_require__(617);

var enhanceError = __webpack_require__(205);

var transitionalDefaults = __webpack_require__(206);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;

  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(618);
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__(624);
  }

  return adapter;
}

function stringifySafely(rawValue, parser, encoder) {
  if (utils.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils.trim(rawValue);
    } catch (e) {
      if (e.name !== 'SyntaxError') {
        throw e;
      }
    }
  }

  return (encoder || JSON.stringify)(rawValue);
}

var defaults = {
  transitional: transitionalDefaults,
  adapter: getDefaultAdapter(),
  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');

    if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
      return data;
    }

    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }

    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }

    if (utils.isObject(data) || headers && headers['Content-Type'] === 'application/json') {
      setContentTypeIfUnset(headers, 'application/json');
      return stringifySafely(data);
    }

    return data;
  }],
  transformResponse: [function transformResponse(data) {
    var transitional = this.transitional || defaults.transitional;
    var silentJSONParsing = transitional && transitional.silentJSONParsing;
    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';

    if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) {
      try {
        return JSON.parse(data);
      } catch (e) {
        if (strictJSONParsing) {
          if (e.name === 'SyntaxError') {
            throw enhanceError(e, this, 'E_JSON_PARSE');
          }

          throw e;
        }
      }
    }

    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',
  maxContentLength: -1,
  maxBodyLength: -1,
  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  },
  headers: {
    common: {
      'Accept': 'application/json, text/plain, */*'
    }
  }
};
utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});
utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});
module.exports = defaults;

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */

module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;

  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code,
      status: this.response && this.response.status ? this.response.status : null
    };
  };

  return error;
};

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  silentJSONParsing: true,
  forcedJSONParsing: true,
  clarifyTimeoutError: false
};

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(205);
/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */


module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};

/***/ }),
/* 208 */
/***/ (function(module, exports) {

module.exports = {
  "version": "0.26.1"
};

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Helper to convert an object's keys
 */

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

module.exports = function convertKeys(obj, converter, ignored) {
  //Validate
  if (_typeof(obj) !== 'object' || obj === null) {
    throw new Error('Non object passed to convertKeys: ' + obj);
  } //Ignore arrays


  if (Array.isArray(obj)) {
    return obj;
  } //Ensure array for ignored values


  if (!Array.isArray(ignored)) {
    ignored = [];
  } //Process all properties


  for (var key in obj) {
    //istanbul ignore else
    if (obj.hasOwnProperty(key)) {
      //Convert key to snake case
      var converted = converter(key); //Recursive for child objects, unless ignored
      //The ignored check checks both variants of the key

      if (_typeof(obj[key]) === 'object' && obj[key] !== null) {
        if (!ignored.includes(key) && !ignored.includes(converted)) {
          obj[key] = convertKeys(obj[key], converter, ignored);
        }
      } //Convert key to snake case and set if needed


      if (converted !== key) {
        obj[converted] = obj[key];
        delete obj[key];
      }
    }
  } //Return object


  return obj;
};

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Dependencies
 */

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var splitNameEmail = __webpack_require__(285);
/**
 * Email address class
 */


var EmailAddress = /*#__PURE__*/function () {
  /**
  * Constructor
  */
  function EmailAddress(data) {
    _classCallCheck(this, EmailAddress);

    //Construct from data
    if (data) {
      this.fromData(data);
    }
  }
  /**
   * From data
   */


  _createClass(EmailAddress, [{
    key: "fromData",
    value: function fromData(data) {
      //String given
      if (typeof data === 'string') {
        var _splitNameEmail = splitNameEmail(data),
            _splitNameEmail2 = _slicedToArray(_splitNameEmail, 2),
            _name = _splitNameEmail2[0],
            _email = _splitNameEmail2[1];

        data = {
          name: _name,
          email: _email
        };
      } //Expecting object


      if (_typeof(data) !== 'object') {
        throw new Error('Expecting object or string for EmailAddress data');
      } //Extract name and email


      var _data = data,
          name = _data.name,
          email = _data.email; //Set

      this.setEmail(email);
      this.setName(name);
    }
    /**
     * Set name
     */

  }, {
    key: "setName",
    value: function setName(name) {
      if (typeof name === 'undefined') {
        return;
      }

      if (typeof name !== 'string') {
        throw new Error('String expected for `name`');
      }

      this.name = name;
    }
    /**
     * Set email (mandatory)
     */

  }, {
    key: "setEmail",
    value: function setEmail(email) {
      if (typeof email === 'undefined') {
        throw new Error('Must provide `email`');
      }

      if (typeof email !== 'string') {
        throw new Error('String expected for `email`');
      }

      this.email = email;
    }
    /**
    * To JSON
    */

  }, {
    key: "toJSON",
    value: function toJSON() {
      //Get properties
      var email = this.email,
          name = this.name; //Initialize with mandatory properties

      var json = {
        email: email
      }; //Add name if present

      if (name !== '') {
        json.name = name;
      } //Return


      return json;
    }
    /**************************************************************************
     * Static helpers
     ***/

    /**
     * Create an EmailAddress instance from given data
     */

  }], [{
    key: "create",
    value: function create(data) {
      var _this = this;

      //Array?
      if (Array.isArray(data)) {
        return data.filter(function (item) {
          return !!item;
        }).map(function (item) {
          return _this.create(item);
        });
      } //Already instance of EmailAddress class?


      if (data instanceof EmailAddress) {
        return data;
      } //Create instance


      return new EmailAddress(data);
    }
  }]);

  return EmailAddress;
}(); //Export class


module.exports = EmailAddress;

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var packageInfo = __webpack_require__(55);

var EventEmitter = __webpack_require__(97).EventEmitter;

var net = __webpack_require__(166);

var tls = __webpack_require__(295);

var os = __webpack_require__(163);

var crypto = __webpack_require__(68);

var DataStream = __webpack_require__(665);

var PassThrough = __webpack_require__(15).PassThrough;

var shared = __webpack_require__(44); // default timeout values in ms


var CONNECTION_TIMEOUT = 2 * 60 * 1000; // how much to wait for the connection to be established

var SOCKET_TIMEOUT = 10 * 60 * 1000; // how much to wait for socket inactivity before disconnecting the client

var GREETING_TIMEOUT = 30 * 1000; // how much to wait after connection is established but SMTP greeting is not receieved

/**
 * Generates a SMTP connection object
 *
 * Optional options object takes the following possible properties:
 *
 *  * **port** - is the port to connect to (defaults to 587 or 465)
 *  * **host** - is the hostname or IP address to connect to (defaults to 'localhost')
 *  * **secure** - use SSL
 *  * **ignoreTLS** - ignore server support for STARTTLS
 *  * **requireTLS** - forces the client to use STARTTLS
 *  * **name** - the name of the client server
 *  * **localAddress** - outbound address to bind to (see: http://nodejs.org/api/net.html#net_net_connect_options_connectionlistener)
 *  * **greetingTimeout** - Time to wait in ms until greeting message is received from the server (defaults to 10000)
 *  * **connectionTimeout** - how many milliseconds to wait for the connection to establish
 *  * **socketTimeout** - Time of inactivity until the connection is closed (defaults to 1 hour)
 *  * **lmtp** - if true, uses LMTP instead of SMTP protocol
 *  * **logger** - bunyan compatible logger interface
 *  * **debug** - if true pass SMTP traffic to the logger
 *  * **tls** - options for createCredentials
 *  * **socket** - existing socket to use instead of creating a new one (see: http://nodejs.org/api/net.html#net_class_net_socket)
 *  * **secured** - boolean indicates that the provided socket has already been upgraded to tls
 *
 * @constructor
 * @namespace SMTP Client module
 * @param {Object} [options] Option properties
 */

var SMTPConnection = /*#__PURE__*/function (_EventEmitter) {
  _inherits(SMTPConnection, _EventEmitter);

  var _super = _createSuper(SMTPConnection);

  function SMTPConnection(options) {
    var _this;

    _classCallCheck(this, SMTPConnection);

    _this = _super.call(this, options);
    _this.id = crypto.randomBytes(8).toString('base64').replace(/\W/g, '');
    _this.stage = 'init';
    _this.options = options || {};
    _this.secureConnection = !!_this.options.secure;
    _this.alreadySecured = !!_this.options.secured;
    _this.port = Number(_this.options.port) || (_this.secureConnection ? 465 : 587);
    _this.host = _this.options.host || 'localhost';

    if (typeof _this.options.secure === 'undefined' && _this.port === 465) {
      // if secure option is not set but port is 465, then default to secure
      _this.secureConnection = true;
    }

    _this.name = _this.options.name || _this._getHostname();
    _this.logger = shared.getLogger(_this.options, {
      component: _this.options.component || 'smtp-connection',
      sid: _this.id
    });
    _this.customAuth = new Map();
    Object.keys(_this.options.customAuth || {}).forEach(function (key) {
      var mapKey = (key || '').toString().trim().toUpperCase();

      if (!mapKey) {
        return;
      }

      _this.customAuth.set(mapKey, _this.options.customAuth[key]);
    });
    /**
     * Expose version nr, just for the reference
     * @type {String}
     */

    _this.version = packageInfo.version;
    /**
     * If true, then the user is authenticated
     * @type {Boolean}
     */

    _this.authenticated = false;
    /**
     * If set to true, this instance is no longer active
     * @private
     */

    _this.destroyed = false;
    /**
     * Defines if the current connection is secure or not. If not,
     * STARTTLS can be used if available
     * @private
     */

    _this.secure = !!_this.secureConnection;
    /**
     * Store incomplete messages coming from the server
     * @private
     */

    _this._remainder = '';
    /**
     * Unprocessed responses from the server
     * @type {Array}
     */

    _this._responseQueue = [];
    _this.lastServerResponse = false;
    /**
     * The socket connecting to the server
     * @publick
     */

    _this._socket = false;
    /**
     * Lists supported auth mechanisms
     * @private
     */

    _this._supportedAuth = [];
    /**
     * Set to true, if EHLO response includes "AUTH".
     * If false then authentication is not tried
     */

    _this.allowsAuth = false;
    /**
     * Includes current envelope (from, to)
     * @private
     */

    _this._envelope = false;
    /**
     * Lists supported extensions
     * @private
     */

    _this._supportedExtensions = [];
    /**
     * Defines the maximum allowed size for a single message
     * @private
     */

    _this._maxAllowedSize = 0;
    /**
     * Function queue to run if a data chunk comes from the server
     * @private
     */

    _this._responseActions = [];
    _this._recipientQueue = [];
    /**
     * Timeout variable for waiting the greeting
     * @private
     */

    _this._greetingTimeout = false;
    /**
     * Timeout variable for waiting the connection to start
     * @private
     */

    _this._connectionTimeout = false;
    /**
     * If the socket is deemed already closed
     * @private
     */

    _this._destroyed = false;
    /**
     * If the socket is already being closed
     * @private
     */

    _this._closing = false;
    /**
     * Callbacks for socket's listeners
     */

    _this._onSocketData = function (chunk) {
      return _this._onData(chunk);
    };

    _this._onSocketError = function (error) {
      return _this._onError(error, 'ESOCKET', false, 'CONN');
    };

    _this._onSocketClose = function () {
      return _this._onClose();
    };

    _this._onSocketEnd = function () {
      return _this._onEnd();
    };

    _this._onSocketTimeout = function () {
      return _this._onTimeout();
    };

    return _this;
  }
  /**
   * Creates a connection to a SMTP server and sets up connection
   * listener
   */


  _createClass(SMTPConnection, [{
    key: "connect",
    value: function connect(connectCallback) {
      var _this2 = this;

      if (typeof connectCallback === 'function') {
        this.once('connect', function () {
          _this2.logger.debug({
            tnx: 'smtp'
          }, 'SMTP handshake finished');

          connectCallback();
        });

        var isDestroyedMessage = this._isDestroyedMessage('connect');

        if (isDestroyedMessage) {
          return connectCallback(this._formatError(isDestroyedMessage, 'ECONNECTION', false, 'CONN'));
        }
      }

      var opts = {
        port: this.port,
        host: this.host
      };

      if (this.options.localAddress) {
        opts.localAddress = this.options.localAddress;
      }

      var setupConnectionHandlers = function setupConnectionHandlers() {
        _this2._connectionTimeout = setTimeout(function () {
          _this2._onError('Connection timeout', 'ETIMEDOUT', false, 'CONN');
        }, _this2.options.connectionTimeout || CONNECTION_TIMEOUT);

        _this2._socket.on('error', _this2._onSocketError);
      };

      if (this.options.connection) {
        // connection is already opened
        this._socket = this.options.connection;

        if (this.secureConnection && !this.alreadySecured) {
          setImmediate(function () {
            return _this2._upgradeConnection(function (err) {
              if (err) {
                _this2._onError(new Error('Error initiating TLS - ' + (err.message || err)), 'ETLS', false, 'CONN');

                return;
              }

              _this2._onConnect();
            });
          });
        } else {
          setImmediate(function () {
            return _this2._onConnect();
          });
        }

        return;
      } else if (this.options.socket) {
        // socket object is set up but not yet connected
        this._socket = this.options.socket;
        return shared.resolveHostname(opts, function (err, resolved) {
          if (err) {
            return setImmediate(function () {
              return _this2._onError(err, 'EDNS', false, 'CONN');
            });
          }

          _this2.logger.debug({
            tnx: 'dns',
            source: opts.host,
            resolved: resolved.host,
            cached: !!resolved.cached
          }, 'Resolved %s as %s [cache %s]', opts.host, resolved.host, resolved.cached ? 'hit' : 'miss');

          Object.keys(resolved).forEach(function (key) {
            if (key.charAt(0) !== '_' && resolved[key]) {
              opts[key] = resolved[key];
            }
          });

          try {
            _this2._socket.connect(_this2.port, _this2.host, function () {
              _this2._socket.setKeepAlive(true);

              _this2._onConnect();
            });

            setupConnectionHandlers();
          } catch (E) {
            return setImmediate(function () {
              return _this2._onError(E, 'ECONNECTION', false, 'CONN');
            });
          }
        });
      } else if (this.secureConnection) {
        // connect using tls
        if (this.options.tls) {
          Object.keys(this.options.tls).forEach(function (key) {
            opts[key] = _this2.options.tls[key];
          });
        }

        return shared.resolveHostname(opts, function (err, resolved) {
          if (err) {
            return setImmediate(function () {
              return _this2._onError(err, 'EDNS', false, 'CONN');
            });
          }

          _this2.logger.debug({
            tnx: 'dns',
            source: opts.host,
            resolved: resolved.host,
            cached: !!resolved.cached
          }, 'Resolved %s as %s [cache %s]', opts.host, resolved.host, resolved.cached ? 'hit' : 'miss');

          Object.keys(resolved).forEach(function (key) {
            if (key.charAt(0) !== '_' && resolved[key]) {
              opts[key] = resolved[key];
            }
          });

          try {
            _this2._socket = tls.connect(opts, function () {
              _this2._socket.setKeepAlive(true);

              _this2._onConnect();
            });
            setupConnectionHandlers();
          } catch (E) {
            return setImmediate(function () {
              return _this2._onError(E, 'ECONNECTION', false, 'CONN');
            });
          }
        });
      } else {
        // connect using plaintext
        return shared.resolveHostname(opts, function (err, resolved) {
          if (err) {
            return setImmediate(function () {
              return _this2._onError(err, 'EDNS', false, 'CONN');
            });
          }

          _this2.logger.debug({
            tnx: 'dns',
            source: opts.host,
            resolved: resolved.host,
            cached: !!resolved.cached
          }, 'Resolved %s as %s [cache %s]', opts.host, resolved.host, resolved.cached ? 'hit' : 'miss');

          Object.keys(resolved).forEach(function (key) {
            if (key.charAt(0) !== '_' && resolved[key]) {
              opts[key] = resolved[key];
            }
          });

          try {
            _this2._socket = net.connect(opts, function () {
              _this2._socket.setKeepAlive(true);

              _this2._onConnect();
            });
            setupConnectionHandlers();
          } catch (E) {
            return setImmediate(function () {
              return _this2._onError(E, 'ECONNECTION', false, 'CONN');
            });
          }
        });
      }
    }
    /**
     * Sends QUIT
     */

  }, {
    key: "quit",
    value: function quit() {
      this._sendCommand('QUIT');

      this._responseActions.push(this.close);
    }
    /**
     * Closes the connection to the server
     */

  }, {
    key: "close",
    value: function close() {
      clearTimeout(this._connectionTimeout);
      clearTimeout(this._greetingTimeout);
      this._responseActions = []; // allow to run this function only once

      if (this._closing) {
        return;
      }

      this._closing = true;
      var closeMethod = 'end';

      if (this.stage === 'init') {
        // Close the socket immediately when connection timed out
        closeMethod = 'destroy';
      }

      this.logger.debug({
        tnx: 'smtp'
      }, 'Closing connection to the server using "%s"', closeMethod);
      var socket = this._socket && this._socket.socket || this._socket;

      if (socket && !socket.destroyed) {
        try {
          this._socket[closeMethod]();
        } catch (E) {// just ignore
        }
      }

      this._destroy();
    }
    /**
     * Authenticate user
     */

  }, {
    key: "login",
    value: function login(authData, callback) {
      var _this3 = this;

      var isDestroyedMessage = this._isDestroyedMessage('login');

      if (isDestroyedMessage) {
        return callback(this._formatError(isDestroyedMessage, 'ECONNECTION', false, 'API'));
      }

      this._auth = authData || {}; // Select SASL authentication method

      this._authMethod = (this._auth.method || '').toString().trim().toUpperCase() || false;

      if (!this._authMethod && this._auth.oauth2 && !this._auth.credentials) {
        this._authMethod = 'XOAUTH2';
      } else if (!this._authMethod || this._authMethod === 'XOAUTH2' && !this._auth.oauth2) {
        // use first supported
        this._authMethod = (this._supportedAuth[0] || 'PLAIN').toUpperCase().trim();
      }

      if (this._authMethod !== 'XOAUTH2' && (!this._auth.credentials || !this._auth.credentials.user || !this._auth.credentials.pass)) {
        if (this._auth.user && this._auth.pass) {
          this._auth.credentials = {
            user: this._auth.user,
            pass: this._auth.pass,
            options: this._auth.options
          };
        } else {
          return callback(this._formatError('Missing credentials for "' + this._authMethod + '"', 'EAUTH', false, 'API'));
        }
      }

      if (this.customAuth.has(this._authMethod)) {
        var handler = this.customAuth.get(this._authMethod);
        var lastResponse;
        var returned = false;

        var resolve = function resolve() {
          if (returned) {
            return;
          }

          returned = true;

          _this3.logger.info({
            tnx: 'smtp',
            username: _this3._auth.user,
            action: 'authenticated',
            method: _this3._authMethod
          }, 'User %s authenticated', JSON.stringify(_this3._auth.user));

          _this3.authenticated = true;
          callback(null, true);
        };

        var reject = function reject(err) {
          if (returned) {
            return;
          }

          returned = true;
          callback(_this3._formatError(err, 'EAUTH', lastResponse, 'AUTH ' + _this3._authMethod));
        };

        var handlerResponse = handler({
          auth: this._auth,
          method: this._authMethod,
          extensions: [].concat(this._supportedExtensions),
          authMethods: [].concat(this._supportedAuth),
          maxAllowedSize: this._maxAllowedSize || false,
          sendCommand: function sendCommand(cmd, done) {
            var promise;

            if (!done) {
              promise = new Promise(function (resolve, reject) {
                done = shared.callbackPromise(resolve, reject);
              });
            }

            _this3._responseActions.push(function (str) {
              lastResponse = str;
              var codes = str.match(/^(\d+)(?:\s(\d+\.\d+\.\d+))?\s/);
              var data = {
                command: cmd,
                response: str
              };

              if (codes) {
                data.status = Number(codes[1]) || 0;

                if (codes[2]) {
                  data.code = codes[2];
                }

                data.text = str.substr(codes[0].length);
              } else {
                data.text = str;
                data.status = 0; // just in case we need to perform numeric comparisons
              }

              done(null, data);
            });

            setImmediate(function () {
              return _this3._sendCommand(cmd);
            });
            return promise;
          },
          resolve: resolve,
          reject: reject
        });

        if (handlerResponse && typeof handlerResponse["catch"] === 'function') {
          // a promise was returned
          handlerResponse.then(resolve)["catch"](reject);
        }

        return;
      }

      switch (this._authMethod) {
        case 'XOAUTH2':
          this._handleXOauth2Token(false, callback);

          return;

        case 'LOGIN':
          this._responseActions.push(function (str) {
            _this3._actionAUTH_LOGIN_USER(str, callback);
          });

          this._sendCommand('AUTH LOGIN');

          return;

        case 'PLAIN':
          this._responseActions.push(function (str) {
            _this3._actionAUTHComplete(str, callback);
          });

          this._sendCommand('AUTH PLAIN ' + Buffer.from( //this._auth.user+'\u0000'+
          "\0" + // skip authorization identity as it causes problems with some servers
          this._auth.credentials.user + "\0" + this._auth.credentials.pass, 'utf-8').toString('base64'), // log entry without passwords
          'AUTH PLAIN ' + Buffer.from( //this._auth.user+'\u0000'+
          "\0" + // skip authorization identity as it causes problems with some servers
          this._auth.credentials.user + "\0" + '/* secret */', 'utf-8').toString('base64'));

          return;

        case 'CRAM-MD5':
          this._responseActions.push(function (str) {
            _this3._actionAUTH_CRAM_MD5(str, callback);
          });

          this._sendCommand('AUTH CRAM-MD5');

          return;
      }

      return callback(this._formatError('Unknown authentication method "' + this._authMethod + '"', 'EAUTH', false, 'API'));
    }
    /**
     * Sends a message
     *
     * @param {Object} envelope Envelope object, {from: addr, to: [addr]}
     * @param {Object} message String, Buffer or a Stream
     * @param {Function} callback Callback to return once sending is completed
     */

  }, {
    key: "send",
    value: function send(envelope, message, done) {
      var _this4 = this;

      if (!message) {
        return done(this._formatError('Empty message', 'EMESSAGE', false, 'API'));
      }

      var isDestroyedMessage = this._isDestroyedMessage('send message');

      if (isDestroyedMessage) {
        return done(this._formatError(isDestroyedMessage, 'ECONNECTION', false, 'API'));
      } // reject larger messages than allowed


      if (this._maxAllowedSize && envelope.size > this._maxAllowedSize) {
        return setImmediate(function () {
          done(_this4._formatError('Message size larger than allowed ' + _this4._maxAllowedSize, 'EMESSAGE', false, 'MAIL FROM'));
        });
      } // ensure that callback is only called once


      var returned = false;

      var callback = function callback() {
        if (returned) {
          return;
        }

        returned = true;
        done.apply(void 0, arguments);
      };

      if (typeof message.on === 'function') {
        message.on('error', function (err) {
          return callback(_this4._formatError(err, 'ESTREAM', false, 'API'));
        });
      }

      var startTime = Date.now();

      this._setEnvelope(envelope, function (err, info) {
        if (err) {
          return callback(err);
        }

        var envelopeTime = Date.now();

        var stream = _this4._createSendStream(function (err, str) {
          if (err) {
            return callback(err);
          }

          info.envelopeTime = envelopeTime - startTime;
          info.messageTime = Date.now() - envelopeTime;
          info.messageSize = stream.outByteCount;
          info.response = str;
          return callback(null, info);
        });

        if (typeof message.pipe === 'function') {
          message.pipe(stream);
        } else {
          stream.write(message);
          stream.end();
        }
      });
    }
    /**
     * Resets connection state
     *
     * @param {Function} callback Callback to return once connection is reset
     */

  }, {
    key: "reset",
    value: function reset(callback) {
      var _this5 = this;

      this._sendCommand('RSET');

      this._responseActions.push(function (str) {
        if (str.charAt(0) !== '2') {
          return callback(_this5._formatError('Could not reset session state. response=' + str, 'EPROTOCOL', str, 'RSET'));
        }

        _this5._envelope = false;
        return callback(null, true);
      });
    }
    /**
     * Connection listener that is run when the connection to
     * the server is opened
     *
     * @event
     */

  }, {
    key: "_onConnect",
    value: function _onConnect() {
      var _this6 = this;

      clearTimeout(this._connectionTimeout);
      this.logger.info({
        tnx: 'network',
        localAddress: this._socket.localAddress,
        localPort: this._socket.localPort,
        remoteAddress: this._socket.remoteAddress,
        remotePort: this._socket.remotePort
      }, '%s established to %s:%s', this.secure ? 'Secure connection' : 'Connection', this._socket.remoteAddress, this._socket.remotePort);

      if (this._destroyed) {
        // Connection was established after we already had canceled it
        this.close();
        return;
      }

      this.stage = 'connected'; // clear existing listeners for the socket

      this._socket.removeListener('data', this._onSocketData);

      this._socket.removeListener('timeout', this._onSocketTimeout);

      this._socket.removeListener('close', this._onSocketClose);

      this._socket.removeListener('end', this._onSocketEnd);

      this._socket.on('data', this._onSocketData);

      this._socket.once('close', this._onSocketClose);

      this._socket.once('end', this._onSocketEnd);

      this._socket.setTimeout(this.options.socketTimeout || SOCKET_TIMEOUT);

      this._socket.on('timeout', this._onSocketTimeout);

      this._greetingTimeout = setTimeout(function () {
        // if still waiting for greeting, give up
        if (_this6._socket && !_this6._destroyed && _this6._responseActions[0] === _this6._actionGreeting) {
          _this6._onError('Greeting never received', 'ETIMEDOUT', false, 'CONN');
        }
      }, this.options.greetingTimeout || GREETING_TIMEOUT);

      this._responseActions.push(this._actionGreeting); // we have a 'data' listener set up so resume socket if it was paused


      this._socket.resume();
    }
    /**
     * 'data' listener for data coming from the server
     *
     * @event
     * @param {Buffer} chunk Data chunk coming from the server
     */

  }, {
    key: "_onData",
    value: function _onData(chunk) {
      if (this._destroyed || !chunk || !chunk.length) {
        return;
      }

      var data = (chunk || '').toString('binary');
      var lines = (this._remainder + data).split(/\r?\n/);
      var lastline;
      this._remainder = lines.pop();

      for (var i = 0, len = lines.length; i < len; i++) {
        if (this._responseQueue.length) {
          lastline = this._responseQueue[this._responseQueue.length - 1];

          if (/^\d+-/.test(lastline.split('\n').pop())) {
            this._responseQueue[this._responseQueue.length - 1] += '\n' + lines[i];
            continue;
          }
        }

        this._responseQueue.push(lines[i]);
      }

      if (this._responseQueue.length) {
        lastline = this._responseQueue[this._responseQueue.length - 1];

        if (/^\d+-/.test(lastline.split('\n').pop())) {
          return;
        }
      }

      this._processResponse();
    }
    /**
     * 'error' listener for the socket
     *
     * @event
     * @param {Error} err Error object
     * @param {String} type Error name
     */

  }, {
    key: "_onError",
    value: function _onError(err, type, data, command) {
      clearTimeout(this._connectionTimeout);
      clearTimeout(this._greetingTimeout);

      if (this._destroyed) {
        // just ignore, already closed
        // this might happen when a socket is canceled because of reached timeout
        // but the socket timeout error itself receives only after
        return;
      }

      err = this._formatError(err, type, data, command);
      this.logger.error(data, err.message);
      this.emit('error', err);
      this.close();
    }
  }, {
    key: "_formatError",
    value: function _formatError(message, type, response, command) {
      var err;

      if (/Error\]$/i.test(Object.prototype.toString.call(message))) {
        err = message;
      } else {
        err = new Error(message);
      }

      if (type && type !== 'Error') {
        err.code = type;
      }

      if (response) {
        err.response = response;
        err.message += ': ' + response;
      }

      var responseCode = typeof response === 'string' && Number((response.match(/^\d+/) || [])[0]) || false;

      if (responseCode) {
        err.responseCode = responseCode;
      }

      if (command) {
        err.command = command;
      }

      return err;
    }
    /**
     * 'close' listener for the socket
     *
     * @event
     */

  }, {
    key: "_onClose",
    value: function _onClose() {
      this.logger.info({
        tnx: 'network'
      }, 'Connection closed');

      if (this.upgrading && !this._destroyed) {
        return this._onError(new Error('Connection closed unexpectedly'), 'ETLS', false, 'CONN');
      } else if (![this._actionGreeting, this.close].includes(this._responseActions[0]) && !this._destroyed) {
        return this._onError(new Error('Connection closed unexpectedly'), 'ECONNECTION', false, 'CONN');
      }

      this._destroy();
    }
    /**
     * 'end' listener for the socket
     *
     * @event
     */

  }, {
    key: "_onEnd",
    value: function _onEnd() {
      if (this._socket && !this._socket.destroyed) {
        this._socket.destroy();
      }
    }
    /**
     * 'timeout' listener for the socket
     *
     * @event
     */

  }, {
    key: "_onTimeout",
    value: function _onTimeout() {
      return this._onError(new Error('Timeout'), 'ETIMEDOUT', false, 'CONN');
    }
    /**
     * Destroys the client, emits 'end'
     */

  }, {
    key: "_destroy",
    value: function _destroy() {
      if (this._destroyed) {
        return;
      }

      this._destroyed = true;
      this.emit('end');
    }
    /**
     * Upgrades the connection to TLS
     *
     * @param {Function} callback Callback function to run when the connection
     *        has been secured
     */

  }, {
    key: "_upgradeConnection",
    value: function _upgradeConnection(callback) {
      var _this7 = this;

      // do not remove all listeners or it breaks node v0.10 as there's
      // apparently a 'finish' event set that would be cleared as well
      // we can safely keep 'error', 'end', 'close' etc. events
      this._socket.removeListener('data', this._onSocketData); // incoming data is going to be gibberish from this point onwards


      this._socket.removeListener('timeout', this._onSocketTimeout); // timeout will be re-set for the new socket object


      var socketPlain = this._socket;
      var opts = {
        socket: this._socket,
        host: this.host
      };
      Object.keys(this.options.tls || {}).forEach(function (key) {
        opts[key] = _this7.options.tls[key];
      });
      this.upgrading = true; // tls.connect is not an asynchronous function however it may still throw errors and requires to be wrapped with try/catch

      try {
        this._socket = tls.connect(opts, function () {
          _this7.secure = true;
          _this7.upgrading = false;

          _this7._socket.on('data', _this7._onSocketData);

          socketPlain.removeListener('close', _this7._onSocketClose);
          socketPlain.removeListener('end', _this7._onSocketEnd);
          return callback(null, true);
        });
      } catch (err) {
        return callback(err);
      }

      this._socket.on('error', this._onSocketError);

      this._socket.once('close', this._onSocketClose);

      this._socket.once('end', this._onSocketEnd);

      this._socket.setTimeout(this.options.socketTimeout || SOCKET_TIMEOUT); // 10 min.


      this._socket.on('timeout', this._onSocketTimeout); // resume in case the socket was paused


      socketPlain.resume();
    }
    /**
     * Processes queued responses from the server
     *
     * @param {Boolean} force If true, ignores _processing flag
     */

  }, {
    key: "_processResponse",
    value: function _processResponse() {
      var _this8 = this;

      if (!this._responseQueue.length) {
        return false;
      }

      var str = this.lastServerResponse = (this._responseQueue.shift() || '').toString();

      if (/^\d+-/.test(str.split('\n').pop())) {
        // keep waiting for the final part of multiline response
        return;
      }

      if (this.options.debug || this.options.transactionLog) {
        this.logger.debug({
          tnx: 'server'
        }, str.replace(/\r?\n$/, ''));
      }

      if (!str.trim()) {
        // skip unexpected empty lines
        setImmediate(function () {
          return _this8._processResponse(true);
        });
      }

      var action = this._responseActions.shift();

      if (typeof action === 'function') {
        action.call(this, str);
        setImmediate(function () {
          return _this8._processResponse(true);
        });
      } else {
        return this._onError(new Error('Unexpected Response'), 'EPROTOCOL', str, 'CONN');
      }
    }
    /**
     * Send a command to the server, append \r\n
     *
     * @param {String} str String to be sent to the server
     * @param {String} logStr Optional string to be used for logging instead of the actual string
     */

  }, {
    key: "_sendCommand",
    value: function _sendCommand(str, logStr) {
      if (this._destroyed) {
        // Connection already closed, can't send any more data
        return;
      }

      if (this._socket.destroyed) {
        return this.close();
      }

      if (this.options.debug || this.options.transactionLog) {
        this.logger.debug({
          tnx: 'client'
        }, (logStr || str || '').toString().replace(/\r?\n$/, ''));
      }

      this._socket.write(Buffer.from(str + '\r\n', 'utf-8'));
    }
    /**
     * Initiates a new message by submitting envelope data, starting with
     * MAIL FROM: command
     *
     * @param {Object} envelope Envelope object in the form of
     *        {from:'...', to:['...']}
     *        or
     *        {from:{address:'...',name:'...'}, to:[address:'...',name:'...']}
     */

  }, {
    key: "_setEnvelope",
    value: function _setEnvelope(envelope, callback) {
      var _this9 = this;

      var args = [];
      var useSmtpUtf8 = false;
      this._envelope = envelope || {};
      this._envelope.from = (this._envelope.from && this._envelope.from.address || this._envelope.from || '').toString().trim();
      this._envelope.to = [].concat(this._envelope.to || []).map(function (to) {
        return (to && to.address || to || '').toString().trim();
      });

      if (!this._envelope.to.length) {
        return callback(this._formatError('No recipients defined', 'EENVELOPE', false, 'API'));
      }

      if (this._envelope.from && /[\r\n<>]/.test(this._envelope.from)) {
        return callback(this._formatError('Invalid sender ' + JSON.stringify(this._envelope.from), 'EENVELOPE', false, 'API'));
      } // check if the sender address uses only ASCII characters,
      // otherwise require usage of SMTPUTF8 extension


      if (/[\x80-\uFFFF]/.test(this._envelope.from)) {
        useSmtpUtf8 = true;
      }

      for (var i = 0, len = this._envelope.to.length; i < len; i++) {
        if (!this._envelope.to[i] || /[\r\n<>]/.test(this._envelope.to[i])) {
          return callback(this._formatError('Invalid recipient ' + JSON.stringify(this._envelope.to[i]), 'EENVELOPE', false, 'API'));
        } // check if the recipients addresses use only ASCII characters,
        // otherwise require usage of SMTPUTF8 extension


        if (/[\x80-\uFFFF]/.test(this._envelope.to[i])) {
          useSmtpUtf8 = true;
        }
      } // clone the recipients array for latter manipulation


      this._envelope.rcptQueue = JSON.parse(JSON.stringify(this._envelope.to || []));
      this._envelope.rejected = [];
      this._envelope.rejectedErrors = [];
      this._envelope.accepted = [];

      if (this._envelope.dsn) {
        try {
          this._envelope.dsn = this._setDsnEnvelope(this._envelope.dsn);
        } catch (err) {
          return callback(this._formatError('Invalid DSN ' + err.message, 'EENVELOPE', false, 'API'));
        }
      }

      this._responseActions.push(function (str) {
        _this9._actionMAIL(str, callback);
      }); // If the server supports SMTPUTF8 and the envelope includes an internationalized
      // email address then append SMTPUTF8 keyword to the MAIL FROM command


      if (useSmtpUtf8 && this._supportedExtensions.includes('SMTPUTF8')) {
        args.push('SMTPUTF8');
        this._usingSmtpUtf8 = true;
      } // If the server supports 8BITMIME and the message might contain non-ascii bytes
      // then append the 8BITMIME keyword to the MAIL FROM command


      if (this._envelope.use8BitMime && this._supportedExtensions.includes('8BITMIME')) {
        args.push('BODY=8BITMIME');
        this._using8BitMime = true;
      }

      if (this._envelope.size && this._supportedExtensions.includes('SIZE')) {
        args.push('SIZE=' + this._envelope.size);
      } // If the server supports DSN and the envelope includes an DSN prop
      // then append DSN params to the MAIL FROM command


      if (this._envelope.dsn && this._supportedExtensions.includes('DSN')) {
        if (this._envelope.dsn.ret) {
          args.push('RET=' + shared.encodeXText(this._envelope.dsn.ret));
        }

        if (this._envelope.dsn.envid) {
          args.push('ENVID=' + shared.encodeXText(this._envelope.dsn.envid));
        }
      }

      this._sendCommand('MAIL FROM:<' + this._envelope.from + '>' + (args.length ? ' ' + args.join(' ') : ''));
    }
  }, {
    key: "_setDsnEnvelope",
    value: function _setDsnEnvelope(params) {
      var ret = (params.ret || params["return"] || '').toString().toUpperCase() || null;

      if (ret) {
        switch (ret) {
          case 'HDRS':
          case 'HEADERS':
            ret = 'HDRS';
            break;

          case 'FULL':
          case 'BODY':
            ret = 'FULL';
            break;
        }
      }

      if (ret && !['FULL', 'HDRS'].includes(ret)) {
        throw new Error('ret: ' + JSON.stringify(ret));
      }

      var envid = (params.envid || params.id || '').toString() || null;
      var notify = params.notify || null;

      if (notify) {
        if (typeof notify === 'string') {
          notify = notify.split(',');
        }

        notify = notify.map(function (n) {
          return n.trim().toUpperCase();
        });
        var validNotify = ['NEVER', 'SUCCESS', 'FAILURE', 'DELAY'];
        var invaliNotify = notify.filter(function (n) {
          return !validNotify.includes(n);
        });

        if (invaliNotify.length || notify.length > 1 && notify.includes('NEVER')) {
          throw new Error('notify: ' + JSON.stringify(notify.join(',')));
        }

        notify = notify.join(',');
      }

      var orcpt = (params.recipient || params.orcpt || '').toString() || null;

      if (orcpt && orcpt.indexOf(';') < 0) {
        orcpt = 'rfc822;' + orcpt;
      }

      return {
        ret: ret,
        envid: envid,
        notify: notify,
        orcpt: orcpt
      };
    }
  }, {
    key: "_getDsnRcptToArgs",
    value: function _getDsnRcptToArgs() {
      var args = []; // If the server supports DSN and the envelope includes an DSN prop
      // then append DSN params to the RCPT TO command

      if (this._envelope.dsn && this._supportedExtensions.includes('DSN')) {
        if (this._envelope.dsn.notify) {
          args.push('NOTIFY=' + shared.encodeXText(this._envelope.dsn.notify));
        }

        if (this._envelope.dsn.orcpt) {
          args.push('ORCPT=' + shared.encodeXText(this._envelope.dsn.orcpt));
        }
      }

      return args.length ? ' ' + args.join(' ') : '';
    }
  }, {
    key: "_createSendStream",
    value: function _createSendStream(callback) {
      var _this10 = this;

      var dataStream = new DataStream();
      var logStream;

      if (this.options.lmtp) {
        this._envelope.accepted.forEach(function (recipient, i) {
          var _final = i === _this10._envelope.accepted.length - 1;

          _this10._responseActions.push(function (str) {
            _this10._actionLMTPStream(recipient, _final, str, callback);
          });
        });
      } else {
        this._responseActions.push(function (str) {
          _this10._actionSMTPStream(str, callback);
        });
      }

      dataStream.pipe(this._socket, {
        end: false
      });

      if (this.options.debug) {
        logStream = new PassThrough();
        logStream.on('readable', function () {
          var chunk;

          while (chunk = logStream.read()) {
            _this10.logger.debug({
              tnx: 'message'
            }, chunk.toString('binary').replace(/\r?\n$/, ''));
          }
        });
        dataStream.pipe(logStream);
      }

      dataStream.once('end', function () {
        _this10.logger.info({
          tnx: 'message',
          inByteCount: dataStream.inByteCount,
          outByteCount: dataStream.outByteCount
        }, '<%s bytes encoded mime message (source size %s bytes)>', dataStream.outByteCount, dataStream.inByteCount);
      });
      return dataStream;
    }
    /** ACTIONS **/

    /**
     * Will be run after the connection is created and the server sends
     * a greeting. If the incoming message starts with 220 initiate
     * SMTP session by sending EHLO command
     *
     * @param {String} str Message from the server
     */

  }, {
    key: "_actionGreeting",
    value: function _actionGreeting(str) {
      clearTimeout(this._greetingTimeout);

      if (str.substr(0, 3) !== '220') {
        this._onError(new Error('Invalid greeting. response=' + str), 'EPROTOCOL', str, 'CONN');

        return;
      }

      if (this.options.lmtp) {
        this._responseActions.push(this._actionLHLO);

        this._sendCommand('LHLO ' + this.name);
      } else {
        this._responseActions.push(this._actionEHLO);

        this._sendCommand('EHLO ' + this.name);
      }
    }
    /**
     * Handles server response for LHLO command. If it yielded in
     * error, emit 'error', otherwise treat this as an EHLO response
     *
     * @param {String} str Message from the server
     */

  }, {
    key: "_actionLHLO",
    value: function _actionLHLO(str) {
      if (str.charAt(0) !== '2') {
        this._onError(new Error('Invalid LHLO. response=' + str), 'EPROTOCOL', str, 'LHLO');

        return;
      }

      this._actionEHLO(str);
    }
    /**
     * Handles server response for EHLO command. If it yielded in
     * error, try HELO instead, otherwise initiate TLS negotiation
     * if STARTTLS is supported by the server or move into the
     * authentication phase.
     *
     * @param {String} str Message from the server
     */

  }, {
    key: "_actionEHLO",
    value: function _actionEHLO(str) {
      var match;

      if (str.substr(0, 3) === '421') {
        this._onError(new Error('Server terminates connection. response=' + str), 'ECONNECTION', str, 'EHLO');

        return;
      }

      if (str.charAt(0) !== '2') {
        if (this.options.requireTLS) {
          this._onError(new Error('EHLO failed but HELO does not support required STARTTLS. response=' + str), 'ECONNECTION', str, 'EHLO');

          return;
        } // Try HELO instead


        this._responseActions.push(this._actionHELO);

        this._sendCommand('HELO ' + this.name);

        return;
      } // Detect if the server supports STARTTLS


      if (!this.secure && !this.options.ignoreTLS && (/[ -]STARTTLS\b/im.test(str) || this.options.requireTLS)) {
        this._sendCommand('STARTTLS');

        this._responseActions.push(this._actionSTARTTLS);

        return;
      } // Detect if the server supports SMTPUTF8


      if (/[ -]SMTPUTF8\b/im.test(str)) {
        this._supportedExtensions.push('SMTPUTF8');
      } // Detect if the server supports DSN


      if (/[ -]DSN\b/im.test(str)) {
        this._supportedExtensions.push('DSN');
      } // Detect if the server supports 8BITMIME


      if (/[ -]8BITMIME\b/im.test(str)) {
        this._supportedExtensions.push('8BITMIME');
      } // Detect if the server supports PIPELINING


      if (/[ -]PIPELINING\b/im.test(str)) {
        this._supportedExtensions.push('PIPELINING');
      } // Detect if the server supports AUTH


      if (/[ -]AUTH\b/i.test(str)) {
        this.allowsAuth = true;
      } // Detect if the server supports PLAIN auth


      if (/[ -]AUTH(?:(\s+|=)[^\n]*\s+|\s+|=)PLAIN/i.test(str)) {
        this._supportedAuth.push('PLAIN');
      } // Detect if the server supports LOGIN auth


      if (/[ -]AUTH(?:(\s+|=)[^\n]*\s+|\s+|=)LOGIN/i.test(str)) {
        this._supportedAuth.push('LOGIN');
      } // Detect if the server supports CRAM-MD5 auth


      if (/[ -]AUTH(?:(\s+|=)[^\n]*\s+|\s+|=)CRAM-MD5/i.test(str)) {
        this._supportedAuth.push('CRAM-MD5');
      } // Detect if the server supports XOAUTH2 auth


      if (/[ -]AUTH(?:(\s+|=)[^\n]*\s+|\s+|=)XOAUTH2/i.test(str)) {
        this._supportedAuth.push('XOAUTH2');
      } // Detect if the server supports SIZE extensions (and the max allowed size)


      if (match = str.match(/[ -]SIZE(?:[ \t]+(\d+))?/im)) {
        this._supportedExtensions.push('SIZE');

        this._maxAllowedSize = Number(match[1]) || 0;
      }

      this.emit('connect');
    }
    /**
     * Handles server response for HELO command. If it yielded in
     * error, emit 'error', otherwise move into the authentication phase.
     *
     * @param {String} str Message from the server
     */

  }, {
    key: "_actionHELO",
    value: function _actionHELO(str) {
      if (str.charAt(0) !== '2') {
        this._onError(new Error('Invalid HELO. response=' + str), 'EPROTOCOL', str, 'HELO');

        return;
      } // assume that authentication is enabled (most probably is not though)


      this.allowsAuth = true;
      this.emit('connect');
    }
    /**
     * Handles server response for STARTTLS command. If there's an error
     * try HELO instead, otherwise initiate TLS upgrade. If the upgrade
     * succeedes restart the EHLO
     *
     * @param {String} str Message from the server
     */

  }, {
    key: "_actionSTARTTLS",
    value: function _actionSTARTTLS(str) {
      var _this11 = this;

      if (str.charAt(0) !== '2') {
        if (this.options.opportunisticTLS) {
          this.logger.info({
            tnx: 'smtp'
          }, 'Failed STARTTLS upgrade, continuing unencrypted');
          return this.emit('connect');
        }

        this._onError(new Error('Error upgrading connection with STARTTLS'), 'ETLS', str, 'STARTTLS');

        return;
      }

      this._upgradeConnection(function (err, secured) {
        if (err) {
          _this11._onError(new Error('Error initiating TLS - ' + (err.message || err)), 'ETLS', false, 'STARTTLS');

          return;
        }

        _this11.logger.info({
          tnx: 'smtp'
        }, 'Connection upgraded with STARTTLS');

        if (secured) {
          // restart session
          if (_this11.options.lmtp) {
            _this11._responseActions.push(_this11._actionLHLO);

            _this11._sendCommand('LHLO ' + _this11.name);
          } else {
            _this11._responseActions.push(_this11._actionEHLO);

            _this11._sendCommand('EHLO ' + _this11.name);
          }
        } else {
          _this11.emit('connect');
        }
      });
    }
    /**
     * Handle the response for AUTH LOGIN command. We are expecting
     * '334 VXNlcm5hbWU6' (base64 for 'Username:'). Data to be sent as
     * response needs to be base64 encoded username. We do not need
     * exact match but settle with 334 response in general as some
     * hosts invalidly use a longer message than VXNlcm5hbWU6
     *
     * @param {String} str Message from the server
     */

  }, {
    key: "_actionAUTH_LOGIN_USER",
    value: function _actionAUTH_LOGIN_USER(str, callback) {
      var _this12 = this;

      if (!/^334[ -]/.test(str)) {
        // expecting '334 VXNlcm5hbWU6'
        callback(this._formatError('Invalid login sequence while waiting for "334 VXNlcm5hbWU6"', 'EAUTH', str, 'AUTH LOGIN'));
        return;
      }

      this._responseActions.push(function (str) {
        _this12._actionAUTH_LOGIN_PASS(str, callback);
      });

      this._sendCommand(Buffer.from(this._auth.credentials.user + '', 'utf-8').toString('base64'));
    }
    /**
     * Handle the response for AUTH CRAM-MD5 command. We are expecting
     * '334 <challenge string>'. Data to be sent as response needs to be
     * base64 decoded challenge string, MD5 hashed using the password as
     * a HMAC key, prefixed by the username and a space, and finally all
     * base64 encoded again.
     *
     * @param {String} str Message from the server
     */

  }, {
    key: "_actionAUTH_CRAM_MD5",
    value: function _actionAUTH_CRAM_MD5(str, callback) {
      var _this13 = this;

      var challengeMatch = str.match(/^334\s+(.+)$/);
      var challengeString = '';

      if (!challengeMatch) {
        return callback(this._formatError('Invalid login sequence while waiting for server challenge string', 'EAUTH', str, 'AUTH CRAM-MD5'));
      } else {
        challengeString = challengeMatch[1];
      } // Decode from base64


      var base64decoded = Buffer.from(challengeString, 'base64').toString('ascii'),
          hmacMD5 = crypto.createHmac('md5', this._auth.credentials.pass);
      hmacMD5.update(base64decoded);
      var prepended = this._auth.credentials.user + ' ' + hmacMD5.digest('hex');

      this._responseActions.push(function (str) {
        _this13._actionAUTH_CRAM_MD5_PASS(str, callback);
      });

      this._sendCommand(Buffer.from(prepended).toString('base64'), // hidden hash for logs
      Buffer.from(this._auth.credentials.user + ' /* secret */').toString('base64'));
    }
    /**
     * Handles the response to CRAM-MD5 authentication, if there's no error,
     * the user can be considered logged in. Start waiting for a message to send
     *
     * @param {String} str Message from the server
     */

  }, {
    key: "_actionAUTH_CRAM_MD5_PASS",
    value: function _actionAUTH_CRAM_MD5_PASS(str, callback) {
      if (!str.match(/^235\s+/)) {
        return callback(this._formatError('Invalid login sequence while waiting for "235"', 'EAUTH', str, 'AUTH CRAM-MD5'));
      }

      this.logger.info({
        tnx: 'smtp',
        username: this._auth.user,
        action: 'authenticated',
        method: this._authMethod
      }, 'User %s authenticated', JSON.stringify(this._auth.user));
      this.authenticated = true;
      callback(null, true);
    }
    /**
     * Handle the response for AUTH LOGIN command. We are expecting
     * '334 UGFzc3dvcmQ6' (base64 for 'Password:'). Data to be sent as
     * response needs to be base64 encoded password.
     *
     * @param {String} str Message from the server
     */

  }, {
    key: "_actionAUTH_LOGIN_PASS",
    value: function _actionAUTH_LOGIN_PASS(str, callback) {
      var _this14 = this;

      if (!/^334[ -]/.test(str)) {
        // expecting '334 UGFzc3dvcmQ6'
        return callback(this._formatError('Invalid login sequence while waiting for "334 UGFzc3dvcmQ6"', 'EAUTH', str, 'AUTH LOGIN'));
      }

      this._responseActions.push(function (str) {
        _this14._actionAUTHComplete(str, callback);
      });

      this._sendCommand(Buffer.from((this._auth.credentials.pass || '').toString(), 'utf-8').toString('base64'), // Hidden pass for logs
      Buffer.from('/* secret */', 'utf-8').toString('base64'));
    }
    /**
     * Handles the response for authentication, if there's no error,
     * the user can be considered logged in. Start waiting for a message to send
     *
     * @param {String} str Message from the server
     */

  }, {
    key: "_actionAUTHComplete",
    value: function _actionAUTHComplete(str, isRetry, callback) {
      var _this15 = this;

      if (!callback && typeof isRetry === 'function') {
        callback = isRetry;
        isRetry = false;
      }

      if (str.substr(0, 3) === '334') {
        this._responseActions.push(function (str) {
          if (isRetry || _this15._authMethod !== 'XOAUTH2') {
            _this15._actionAUTHComplete(str, true, callback);
          } else {
            // fetch a new OAuth2 access token
            setImmediate(function () {
              return _this15._handleXOauth2Token(true, callback);
            });
          }
        });

        this._sendCommand('');

        return;
      }

      if (str.charAt(0) !== '2') {
        this.logger.info({
          tnx: 'smtp',
          username: this._auth.user,
          action: 'authfail',
          method: this._authMethod
        }, 'User %s failed to authenticate', JSON.stringify(this._auth.user));
        return callback(this._formatError('Invalid login', 'EAUTH', str, 'AUTH ' + this._authMethod));
      }

      this.logger.info({
        tnx: 'smtp',
        username: this._auth.user,
        action: 'authenticated',
        method: this._authMethod
      }, 'User %s authenticated', JSON.stringify(this._auth.user));
      this.authenticated = true;
      callback(null, true);
    }
    /**
     * Handle response for a MAIL FROM: command
     *
     * @param {String} str Message from the server
     */

  }, {
    key: "_actionMAIL",
    value: function _actionMAIL(str, callback) {
      var _this16 = this;

      var message, curRecipient;

      if (Number(str.charAt(0)) !== 2) {
        if (this._usingSmtpUtf8 && /^550 /.test(str) && /[\x80-\uFFFF]/.test(this._envelope.from)) {
          message = 'Internationalized mailbox name not allowed';
        } else {
          message = 'Mail command failed';
        }

        return callback(this._formatError(message, 'EENVELOPE', str, 'MAIL FROM'));
      }

      if (!this._envelope.rcptQueue.length) {
        return callback(this._formatError('Can\x27t send mail - no recipients defined', 'EENVELOPE', false, 'API'));
      } else {
        this._recipientQueue = [];

        if (this._supportedExtensions.includes('PIPELINING')) {
          while (this._envelope.rcptQueue.length) {
            curRecipient = this._envelope.rcptQueue.shift();

            this._recipientQueue.push(curRecipient);

            this._responseActions.push(function (str) {
              _this16._actionRCPT(str, callback);
            });

            this._sendCommand('RCPT TO:<' + curRecipient + '>' + this._getDsnRcptToArgs());
          }
        } else {
          curRecipient = this._envelope.rcptQueue.shift();

          this._recipientQueue.push(curRecipient);

          this._responseActions.push(function (str) {
            _this16._actionRCPT(str, callback);
          });

          this._sendCommand('RCPT TO:<' + curRecipient + '>' + this._getDsnRcptToArgs());
        }
      }
    }
    /**
     * Handle response for a RCPT TO: command
     *
     * @param {String} str Message from the server
     */

  }, {
    key: "_actionRCPT",
    value: function _actionRCPT(str, callback) {
      var _this17 = this;

      var message,
          err,
          curRecipient = this._recipientQueue.shift();

      if (Number(str.charAt(0)) !== 2) {
        // this is a soft error
        if (this._usingSmtpUtf8 && /^553 /.test(str) && /[\x80-\uFFFF]/.test(curRecipient)) {
          message = 'Internationalized mailbox name not allowed';
        } else {
          message = 'Recipient command failed';
        }

        this._envelope.rejected.push(curRecipient); // store error for the failed recipient


        err = this._formatError(message, 'EENVELOPE', str, 'RCPT TO');
        err.recipient = curRecipient;

        this._envelope.rejectedErrors.push(err);
      } else {
        this._envelope.accepted.push(curRecipient);
      }

      if (!this._envelope.rcptQueue.length && !this._recipientQueue.length) {
        if (this._envelope.rejected.length < this._envelope.to.length) {
          this._responseActions.push(function (str) {
            _this17._actionDATA(str, callback);
          });

          this._sendCommand('DATA');
        } else {
          err = this._formatError('Can\x27t send mail - all recipients were rejected', 'EENVELOPE', str, 'RCPT TO');
          err.rejected = this._envelope.rejected;
          err.rejectedErrors = this._envelope.rejectedErrors;
          return callback(err);
        }
      } else if (this._envelope.rcptQueue.length) {
        curRecipient = this._envelope.rcptQueue.shift();

        this._recipientQueue.push(curRecipient);

        this._responseActions.push(function (str) {
          _this17._actionRCPT(str, callback);
        });

        this._sendCommand('RCPT TO:<' + curRecipient + '>' + this._getDsnRcptToArgs());
      }
    }
    /**
     * Handle response for a DATA command
     *
     * @param {String} str Message from the server
     */

  }, {
    key: "_actionDATA",
    value: function _actionDATA(str, callback) {
      // response should be 354 but according to this issue https://github.com/eleith/emailjs/issues/24
      // some servers might use 250 instead, so lets check for 2 or 3 as the first digit
      if (!/^[23]/.test(str)) {
        return callback(this._formatError('Data command failed', 'EENVELOPE', str, 'DATA'));
      }

      var response = {
        accepted: this._envelope.accepted,
        rejected: this._envelope.rejected
      };

      if (this._envelope.rejectedErrors.length) {
        response.rejectedErrors = this._envelope.rejectedErrors;
      }

      callback(null, response);
    }
    /**
     * Handle response for a DATA stream when using SMTP
     * We expect a single response that defines if the sending succeeded or failed
     *
     * @param {String} str Message from the server
     */

  }, {
    key: "_actionSMTPStream",
    value: function _actionSMTPStream(str, callback) {
      if (Number(str.charAt(0)) !== 2) {
        // Message failed
        return callback(this._formatError('Message failed', 'EMESSAGE', str, 'DATA'));
      } else {
        // Message sent succesfully
        return callback(null, str);
      }
    }
    /**
     * Handle response for a DATA stream
     * We expect a separate response for every recipient. All recipients can either
     * succeed or fail separately
     *
     * @param {String} recipient The recipient this response applies to
     * @param {Boolean} final Is this the final recipient?
     * @param {String} str Message from the server
     */

  }, {
    key: "_actionLMTPStream",
    value: function _actionLMTPStream(recipient, _final2, str, callback) {
      var err;

      if (Number(str.charAt(0)) !== 2) {
        // Message failed
        err = this._formatError('Message failed for recipient ' + recipient, 'EMESSAGE', str, 'DATA');
        err.recipient = recipient;

        this._envelope.rejected.push(recipient);

        this._envelope.rejectedErrors.push(err);

        for (var i = 0, len = this._envelope.accepted.length; i < len; i++) {
          if (this._envelope.accepted[i] === recipient) {
            this._envelope.accepted.splice(i, 1);
          }
        }
      }

      if (_final2) {
        return callback(null, str);
      }
    }
  }, {
    key: "_handleXOauth2Token",
    value: function _handleXOauth2Token(isRetry, callback) {
      var _this18 = this;

      this._auth.oauth2.getToken(isRetry, function (err, accessToken) {
        if (err) {
          _this18.logger.info({
            tnx: 'smtp',
            username: _this18._auth.user,
            action: 'authfail',
            method: _this18._authMethod
          }, 'User %s failed to authenticate', JSON.stringify(_this18._auth.user));

          return callback(_this18._formatError(err, 'EAUTH', false, 'AUTH XOAUTH2'));
        }

        _this18._responseActions.push(function (str) {
          _this18._actionAUTHComplete(str, isRetry, callback);
        });

        _this18._sendCommand('AUTH XOAUTH2 ' + _this18._auth.oauth2.buildXOAuth2Token(accessToken), //  Hidden for logs
        'AUTH XOAUTH2 ' + _this18._auth.oauth2.buildXOAuth2Token('/* secret */'));
      });
    }
    /**
     *
     * @param {string} command
     * @private
     */

  }, {
    key: "_isDestroyedMessage",
    value: function _isDestroyedMessage(command) {
      if (this._destroyed) {
        return 'Cannot ' + command + ' - smtp connection is already destroyed.';
      }

      if (this._socket) {
        if (this._socket.destroyed) {
          return 'Cannot ' + command + ' - smtp connection socket is already destroyed.';
        }

        if (!this._socket.writable) {
          return 'Cannot ' + command + ' - smtp connection socket is already half-closed.';
        }
      }
    }
  }, {
    key: "_getHostname",
    value: function _getHostname() {
      // defaul hostname is machine hostname or [IP]
      var defaultHostname = os.hostname() || ''; // ignore if not FQDN

      if (defaultHostname.indexOf('.') < 0) {
        defaultHostname = '[127.0.0.1]';
      } // IP should be enclosed in []


      if (defaultHostname.match(/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/)) {
        defaultHostname = '[' + defaultHostname + ']';
      }

      return defaultHostname;
    }
  }]);

  return SMTPConnection;
}(EventEmitter);

module.exports = SMTPConnection;

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(23);

function encode(val) {
  return encodeURIComponent(val).replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');
}
/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */


module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;

  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];
    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }

        parts.push(encode(key) + '=' + encode(v));
      });
    });
    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');

    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(23);

var normalizeHeaderName = __webpack_require__(679);

var AxiosError = __webpack_require__(83);

var transitionalDefaults = __webpack_require__(214);

var toFormData = __webpack_require__(299);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;

  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(680);
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__(687);
  }

  return adapter;
}

function stringifySafely(rawValue, parser, encoder) {
  if (utils.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils.trim(rawValue);
    } catch (e) {
      if (e.name !== 'SyntaxError') {
        throw e;
      }
    }
  }

  return (encoder || JSON.stringify)(rawValue);
}

var defaults = {
  transitional: transitionalDefaults,
  adapter: getDefaultAdapter(),
  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');

    if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
      return data;
    }

    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }

    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }

    var isObjectPayload = utils.isObject(data);
    var contentType = headers && headers['Content-Type'];
    var isFileList;

    if ((isFileList = utils.isFileList(data)) || isObjectPayload && contentType === 'multipart/form-data') {
      var _FormData = this.env && this.env.FormData;

      return toFormData(isFileList ? {
        'files[]': data
      } : data, _FormData && new _FormData());
    } else if (isObjectPayload || contentType === 'application/json') {
      setContentTypeIfUnset(headers, 'application/json');
      return stringifySafely(data);
    }

    return data;
  }],
  transformResponse: [function transformResponse(data) {
    var transitional = this.transitional || defaults.transitional;
    var silentJSONParsing = transitional && transitional.silentJSONParsing;
    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';

    if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) {
      try {
        return JSON.parse(data);
      } catch (e) {
        if (strictJSONParsing) {
          if (e.name === 'SyntaxError') {
            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);
          }

          throw e;
        }
      }
    }

    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: __webpack_require__(688)
  },
  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  },
  headers: {
    common: {
      'Accept': 'application/json, text/plain, */*'
    }
  }
};
utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});
utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});
module.exports = defaults;

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  silentJSONParsing: true,
  forcedJSONParsing: true,
  clarifyTimeoutError: false
};

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isAbsoluteURL = __webpack_require__(682);

var combineURLs = __webpack_require__(683);
/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */


module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }

  return requestedURL;
};

/***/ }),
/* 216 */
/***/ (function(module, exports) {

module.exports = {
  "version": "0.27.2"
};

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var replace = String.prototype.replace;
var percentTwenties = /%20/g;
var Format = {
  RFC1738: 'RFC1738',
  RFC3986: 'RFC3986'
};
module.exports = {
  'default': Format.RFC3986,
  formatters: {
    RFC1738: function RFC1738(value) {
      return replace.call(value, percentTwenties, '+');
    },
    RFC3986: function RFC3986(value) {
      return String(value);
    }
  },
  RFC1738: Format.RFC1738,
  RFC3986: Format.RFC3986
};

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(36);

function encode(val) {
  return encodeURIComponent(val).replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');
}
/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */


module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;

  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];
    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }

        parts.push(encode(key) + '=' + encode(v));
      });
    });
    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');

    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(36);

var normalizeHeaderName = __webpack_require__(736);

var enhanceError = __webpack_require__(220);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;

  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(737);
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__(743);
  }

  return adapter;
}

function stringifySafely(rawValue, parser, encoder) {
  if (utils.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils.trim(rawValue);
    } catch (e) {
      if (e.name !== 'SyntaxError') {
        throw e;
      }
    }
  }

  return (encoder || JSON.stringify)(rawValue);
}

var defaults = {
  transitional: {
    silentJSONParsing: true,
    forcedJSONParsing: true,
    clarifyTimeoutError: false
  },
  adapter: getDefaultAdapter(),
  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');

    if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
      return data;
    }

    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }

    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }

    if (utils.isObject(data) || headers && headers['Content-Type'] === 'application/json') {
      setContentTypeIfUnset(headers, 'application/json');
      return stringifySafely(data);
    }

    return data;
  }],
  transformResponse: [function transformResponse(data) {
    var transitional = this.transitional;
    var silentJSONParsing = transitional && transitional.silentJSONParsing;
    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';

    if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) {
      try {
        return JSON.parse(data);
      } catch (e) {
        if (strictJSONParsing) {
          if (e.name === 'SyntaxError') {
            throw enhanceError(e, this, 'E_JSON_PARSE');
          }

          throw e;
        }
      }
    }

    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',
  maxContentLength: -1,
  maxBodyLength: -1,
  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};
defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};
utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});
utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});
module.exports = defaults;

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */

module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;

  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };

  return error;
};

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(220);
/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */


module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BindingOnSyntax = void 0;

var binding_when_syntax_1 = __webpack_require__(223);

var BindingOnSyntax = function () {
  function BindingOnSyntax(binding) {
    this._binding = binding;
  }

  BindingOnSyntax.prototype.onActivation = function (handler) {
    this._binding.onActivation = handler;
    return new binding_when_syntax_1.BindingWhenSyntax(this._binding);
  };

  return BindingOnSyntax;
}();

exports.BindingOnSyntax = BindingOnSyntax;

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BindingWhenSyntax = void 0;

var binding_on_syntax_1 = __webpack_require__(222);

var constraint_helpers_1 = __webpack_require__(335);

var BindingWhenSyntax = function () {
  function BindingWhenSyntax(binding) {
    this._binding = binding;
  }

  BindingWhenSyntax.prototype.when = function (constraint) {
    this._binding.constraint = constraint;
    return new binding_on_syntax_1.BindingOnSyntax(this._binding);
  };

  BindingWhenSyntax.prototype.whenTargetNamed = function (name) {
    this._binding.constraint = constraint_helpers_1.namedConstraint(name);
    return new binding_on_syntax_1.BindingOnSyntax(this._binding);
  };

  BindingWhenSyntax.prototype.whenTargetIsDefault = function () {
    this._binding.constraint = function (request) {
      var targetIsDefault = request.target !== null && !request.target.isNamed() && !request.target.isTagged();
      return targetIsDefault;
    };

    return new binding_on_syntax_1.BindingOnSyntax(this._binding);
  };

  BindingWhenSyntax.prototype.whenTargetTagged = function (tag, value) {
    this._binding.constraint = constraint_helpers_1.taggedConstraint(tag)(value);
    return new binding_on_syntax_1.BindingOnSyntax(this._binding);
  };

  BindingWhenSyntax.prototype.whenInjectedInto = function (parent) {
    this._binding.constraint = function (request) {
      return constraint_helpers_1.typeConstraint(parent)(request.parentRequest);
    };

    return new binding_on_syntax_1.BindingOnSyntax(this._binding);
  };

  BindingWhenSyntax.prototype.whenParentNamed = function (name) {
    this._binding.constraint = function (request) {
      return constraint_helpers_1.namedConstraint(name)(request.parentRequest);
    };

    return new binding_on_syntax_1.BindingOnSyntax(this._binding);
  };

  BindingWhenSyntax.prototype.whenParentTagged = function (tag, value) {
    this._binding.constraint = function (request) {
      return constraint_helpers_1.taggedConstraint(tag)(value)(request.parentRequest);
    };

    return new binding_on_syntax_1.BindingOnSyntax(this._binding);
  };

  BindingWhenSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
    this._binding.constraint = function (request) {
      return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));
    };

    return new binding_on_syntax_1.BindingOnSyntax(this._binding);
  };

  BindingWhenSyntax.prototype.whenNoAncestorIs = function (ancestor) {
    this._binding.constraint = function (request) {
      return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));
    };

    return new binding_on_syntax_1.BindingOnSyntax(this._binding);
  };

  BindingWhenSyntax.prototype.whenAnyAncestorNamed = function (name) {
    this._binding.constraint = function (request) {
      return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));
    };

    return new binding_on_syntax_1.BindingOnSyntax(this._binding);
  };

  BindingWhenSyntax.prototype.whenNoAncestorNamed = function (name) {
    this._binding.constraint = function (request) {
      return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));
    };

    return new binding_on_syntax_1.BindingOnSyntax(this._binding);
  };

  BindingWhenSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
    this._binding.constraint = function (request) {
      return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));
    };

    return new binding_on_syntax_1.BindingOnSyntax(this._binding);
  };

  BindingWhenSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
    this._binding.constraint = function (request) {
      return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));
    };

    return new binding_on_syntax_1.BindingOnSyntax(this._binding);
  };

  BindingWhenSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
    this._binding.constraint = function (request) {
      return constraint_helpers_1.traverseAncerstors(request, constraint);
    };

    return new binding_on_syntax_1.BindingOnSyntax(this._binding);
  };

  BindingWhenSyntax.prototype.whenNoAncestorMatches = function (constraint) {
    this._binding.constraint = function (request) {
      return !constraint_helpers_1.traverseAncerstors(request, constraint);
    };

    return new binding_on_syntax_1.BindingOnSyntax(this._binding);
  };

  return BindingWhenSyntax;
}();

exports.BindingWhenSyntax = BindingWhenSyntax;

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.URL = __webpack_require__(601)["interface"];
exports.serializeURL = __webpack_require__(66).serializeURL;
exports.serializeURLOrigin = __webpack_require__(66).serializeURLOrigin;
exports.basicURLParse = __webpack_require__(66).basicURLParse;
exports.setTheUsername = __webpack_require__(66).setTheUsername;
exports.setThePassword = __webpack_require__(66).setThePassword;
exports.serializeHost = __webpack_require__(66).serializeHost;
exports.serializeInteger = __webpack_require__(66).serializeInteger;
exports.parseURL = __webpack_require__(66).parseURL;

/***/ }),
/* 225 */
/***/ (function(module, exports) {

// Generated by CoffeeScript 1.12.2
(function () {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

  if (typeof performance !== "undefined" && performance !== null && performance.now) {
    module.exports = function () {
      return performance.now();
    };
  } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
    module.exports = function () {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };

    hrtime = process.hrtime;

    getNanoSeconds = function getNanoSeconds() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };

    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    module.exports = function () {
      return Date.now() - loadTime;
    };

    loadTime = Date.now();
  } else {
    module.exports = function () {
      return new Date().getTime() - loadTime;
    };

    loadTime = new Date().getTime();
  }
}).call(this);

/***/ }),
/* 226 */
/***/ (function(module, exports) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/**
 * lodash 4.0.1 (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

/** `Object#toString` result references. */
var stringTag = '[object String]';
/** Used for built-in method references. */

var objectProto = Object.prototype;
/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */

var objectToString = objectProto.toString;
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @type Function
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */

var isArray = Array.isArray;
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */

function isObjectLike(value) {
  return !!value && _typeof(value) == 'object';
}
/**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */


function isString(value) {
  return typeof value == 'string' || !isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag;
}

module.exports = isString;

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL = __webpack_require__(173);

module.exports = NATIVE_SYMBOL && !Symbol.sham && _typeof(Symbol.iterator) == 'symbol';

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var call = __webpack_require__(13);

var isCallable = __webpack_require__(9);

var isObject = __webpack_require__(7);

var TypeError = global.TypeError; // `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive

module.exports = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;
  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  throw TypeError("Can't convert object to primitive value");
};

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(6);

var fails = __webpack_require__(4);

var createElement = __webpack_require__(137); // Thank's IE8 for his funny defineProperty


module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- requied for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function get() {
      return 7;
    }
  }).a != 7;
});

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var isCallable = __webpack_require__(9);

var inspectSource = __webpack_require__(138);

var WeakMap = global.WeakMap;
module.exports = isCallable(WeakMap) && /native code/.test(inspectSource(WeakMap));

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

var uncurryThis = __webpack_require__(3);

var hasOwn = __webpack_require__(14);

var toIndexedObject = __webpack_require__(34);

var indexOf = __webpack_require__(110).indexOf;

var hiddenKeys = __webpack_require__(109);

var push = uncurryThis([].push);

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;

  for (key in O) {
    !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
  } // Don't enum bug & hidden keys


  while (names.length > i) {
    if (hasOwn(O, key = names[i++])) {
      ~indexOf(result, key) || push(result, key);
    }
  }

  return result;
};

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(19);

module.exports = getBuiltIn('document', 'documentElement');

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(8);

exports.f = wellKnownSymbol;

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

module.exports = global;

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var getBuiltIn = __webpack_require__(19);

var hasOwn = __webpack_require__(14);

var createNonEnumerableProperty = __webpack_require__(30);

var isPrototypeOf = __webpack_require__(38);

var setPrototypeOf = __webpack_require__(53);

var copyConstructorProperties = __webpack_require__(140);

var inheritIfRequired = __webpack_require__(91);

var normalizeStringArgument = __webpack_require__(115);

var installErrorCause = __webpack_require__(237);

var clearErrorStack = __webpack_require__(142);

var ERROR_STACK_INSTALLABLE = __webpack_require__(181);

var IS_PURE = __webpack_require__(25);

module.exports = function (FULL_NAME, wrapper, FORCED, IS_AGGREGATE_ERROR) {
  var OPTIONS_POSITION = IS_AGGREGATE_ERROR ? 2 : 1;
  var path = FULL_NAME.split('.');
  var ERROR_NAME = path[path.length - 1];
  var OriginalError = getBuiltIn.apply(null, path);
  if (!OriginalError) return;
  var OriginalErrorPrototype = OriginalError.prototype; // V8 9.3- bug https://bugs.chromium.org/p/v8/issues/detail?id=12006

  if (!IS_PURE && hasOwn(OriginalErrorPrototype, 'cause')) delete OriginalErrorPrototype.cause;
  if (!FORCED) return OriginalError;
  var BaseError = getBuiltIn('Error');
  var WrappedError = wrapper(function (a, b) {
    var message = normalizeStringArgument(IS_AGGREGATE_ERROR ? b : a, undefined);
    var result = IS_AGGREGATE_ERROR ? new OriginalError(a) : new OriginalError();
    if (message !== undefined) createNonEnumerableProperty(result, 'message', message);
    if (ERROR_STACK_INSTALLABLE) createNonEnumerableProperty(result, 'stack', clearErrorStack(result.stack, 2));
    if (this && isPrototypeOf(OriginalErrorPrototype, this)) inheritIfRequired(result, this, WrappedError);
    if (arguments.length > OPTIONS_POSITION) installErrorCause(result, arguments[OPTIONS_POSITION]);
    return result;
  });
  WrappedError.prototype = OriginalErrorPrototype;

  if (ERROR_NAME !== 'Error') {
    if (setPrototypeOf) setPrototypeOf(WrappedError, BaseError);else copyConstructorProperties(WrappedError, BaseError, {
      name: true
    });
  }

  copyConstructorProperties(WrappedError, OriginalError);
  if (!IS_PURE) try {
    // Safari 13- bug: WebAssembly errors does not have a proper `.name`
    if (OriginalErrorPrototype.name !== ERROR_NAME) {
      createNonEnumerableProperty(OriginalErrorPrototype, 'name', ERROR_NAME);
    }

    OriginalErrorPrototype.constructor = WrappedError;
  } catch (error) {
    /* empty */
  }
  return WrappedError;
};

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var global = __webpack_require__(2);

var isCallable = __webpack_require__(9);

var String = global.String;
var TypeError = global.TypeError;

module.exports = function (argument) {
  if (_typeof(argument) == 'object' || isCallable(argument)) return argument;
  throw TypeError("Can't set " + String(argument) + ' as a prototype');
};

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(7);

var createNonEnumerableProperty = __webpack_require__(30); // `InstallErrorCause` abstract operation
// https://tc39.es/proposal-error-cause/#sec-errorobjects-install-error-cause


module.exports = function (O, options) {
  if (isObject(options) && 'cause' in options) {
    createNonEnumerableProperty(O, 'cause', options.cause);
  }
};

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var DESCRIPTORS = __webpack_require__(6);

var fails = __webpack_require__(4);

var anObject = __webpack_require__(5);

var create = __webpack_require__(41);

var normalizeStringArgument = __webpack_require__(115);

var nativeErrorToString = Error.prototype.toString;
var INCORRECT_TO_STRING = fails(function () {
  if (DESCRIPTORS) {
    // Chrome 32- incorrectly call accessor
    // eslint-disable-next-line es/no-object-defineproperty -- safe
    var object = create(Object.defineProperty({}, 'name', {
      get: function get() {
        return this === object;
      }
    }));
    if (nativeErrorToString.call(object) !== 'true') return true;
  } // FF10- does not properly handle non-strings


  return nativeErrorToString.call({
    message: 1,
    name: 2
  }) !== '2: 1' // IE8 does not properly handle defaults
  || nativeErrorToString.call({}) !== 'Error';
});
module.exports = INCORRECT_TO_STRING ? function toString() {
  var O = anObject(this);
  var name = normalizeStringArgument(O.name, 'Error');
  var message = normalizeStringArgument(O.message);
  return !name ? message : !message ? name : name + ': ' + message;
} : nativeErrorToString;

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

var call = __webpack_require__(13);

var anObject = __webpack_require__(5);

var getMethod = __webpack_require__(59);

module.exports = function (iterator, kind, value) {
  var innerResult, innerError;
  anObject(iterator);

  try {
    innerResult = getMethod(iterator, 'return');

    if (!innerResult) {
      if (kind === 'throw') throw value;
      return value;
    }

    innerResult = call(innerResult, iterator);
  } catch (error) {
    innerError = true;
    innerResult = error;
  }

  if (kind === 'throw') throw value;
  if (innerError) throw innerResult;
  anObject(innerResult);
  return value;
};

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var toObject = __webpack_require__(16);

var toAbsoluteIndex = __webpack_require__(60);

var lengthOfArrayLike = __webpack_require__(17);

var min = Math.min; // `Array.prototype.copyWithin` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.copywithin
// eslint-disable-next-line es/no-array-prototype-copywithin -- safe

module.exports = [].copyWithin || function copyWithin(target
/* = 0 */
, start
/* = 0, end = @length */
) {
  var O = toObject(this);
  var len = lengthOfArrayLike(O);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;

  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }

  while (count-- > 0) {
    if (from in O) O[to] = O[from];else delete O[to];
    to += inc;
    from += inc;
  }

  return O;
};

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(2);

var isArray = __webpack_require__(77);

var lengthOfArrayLike = __webpack_require__(17);

var bind = __webpack_require__(52);

var TypeError = global.TypeError; // `FlattenIntoArray` abstract operation
// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray

var flattenIntoArray = function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? bind(mapper, thisArg) : false;
  var element, elementLen;

  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

      if (depth > 0 && isArray(element)) {
        elementLen = lengthOfArrayLike(element);
        targetIndex = flattenIntoArray(target, original, element, elementLen, targetIndex, depth - 1) - 1;
      } else {
        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');
        target[targetIndex] = element;
      }

      targetIndex++;
    }

    sourceIndex++;
  }

  return targetIndex;
};

module.exports = flattenIntoArray;

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $forEach = __webpack_require__(26).forEach;

var arrayMethodIsStrict = __webpack_require__(64);

var STRICT_METHOD = arrayMethodIsStrict('forEach'); // `Array.prototype.forEach` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.foreach

module.exports = !STRICT_METHOD ? function forEach(callbackfn
/* , thisArg */
) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined); // eslint-disable-next-line es/no-array-prototype-foreach -- safe
} : [].forEach;

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(2);

var bind = __webpack_require__(52);

var call = __webpack_require__(13);

var toObject = __webpack_require__(16);

var callWithSafeIterationClosing = __webpack_require__(380);

var isArrayIteratorMethod = __webpack_require__(183);

var isConstructor = __webpack_require__(90);

var lengthOfArrayLike = __webpack_require__(17);

var createProperty = __webpack_require__(61);

var getIterator = __webpack_require__(143);

var getIteratorMethod = __webpack_require__(117);

var Array = global.Array; // `Array.from` method implementation
// https://tc39.es/ecma262/#sec-array.from

module.exports = function from(arrayLike
/* , mapfn = undefined, thisArg = undefined */
) {
  var O = toObject(arrayLike);
  var IS_CONSTRUCTOR = isConstructor(this);
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined);
  var iteratorMethod = getIteratorMethod(O);
  var index = 0;
  var length, result, step, iterator, next, value; // if the target is not iterable or it's an array with the default iterator - use a simple case

  if (iteratorMethod && !(this == Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = getIterator(O, iteratorMethod);
    next = iterator.next;
    result = IS_CONSTRUCTOR ? new this() : [];

    for (; !(step = call(next, iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty(result, index, value);
    }
  } else {
    length = lengthOfArrayLike(O);
    result = IS_CONSTRUCTOR ? new this(length) : Array(length);

    for (; length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty(result, index, value);
    }
  }

  result.length = index;
  return result;
};

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var fails = __webpack_require__(4);

var isCallable = __webpack_require__(9);

var create = __webpack_require__(41);

var getPrototypeOf = __webpack_require__(48);

var redefine = __webpack_require__(18);

var wellKnownSymbol = __webpack_require__(8);

var IS_PURE = __webpack_require__(25);

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false; // `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object

var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;
/* eslint-disable es/no-array-prototype-keys -- safe */

if ([].keys) {
  arrayIterator = [].keys(); // Safari 8 has buggy iterators w/o `next`

  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {
  var test = {}; // FF44- legacy iterators case

  return IteratorPrototype[ITERATOR].call(test) !== test;
});
if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};else if (IS_PURE) IteratorPrototype = create(IteratorPrototype); // `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator

if (!isCallable(IteratorPrototype[ITERATOR])) {
  redefine(IteratorPrototype, ITERATOR, function () {
    return this;
  });
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-array-prototype-lastindexof -- safe */

var apply = __webpack_require__(40);

var toIndexedObject = __webpack_require__(34);

var toIntegerOrInfinity = __webpack_require__(22);

var lengthOfArrayLike = __webpack_require__(17);

var arrayMethodIsStrict = __webpack_require__(64);

var min = Math.min;
var $lastIndexOf = [].lastIndexOf;
var NEGATIVE_ZERO = !!$lastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;
var STRICT_METHOD = arrayMethodIsStrict('lastIndexOf');
var FORCED = NEGATIVE_ZERO || !STRICT_METHOD; // `Array.prototype.lastIndexOf` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.lastindexof

module.exports = FORCED ? function lastIndexOf(searchElement
/* , fromIndex = @[*-1] */
) {
  // convert -0 to +0
  if (NEGATIVE_ZERO) return apply($lastIndexOf, this, arguments) || 0;
  var O = toIndexedObject(this);
  var length = lengthOfArrayLike(O);
  var index = length - 1;
  if (arguments.length > 1) index = min(index, toIntegerOrInfinity(arguments[1]));
  if (index < 0) index = length + index;

  for (; index >= 0; index--) {
    if (index in O && O[index] === searchElement) return index || 0;
  }

  return -1;
} : $lastIndexOf;

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

var userAgent = __webpack_require__(58);

var firefox = userAgent.match(/firefox\/(\d+)/i);
module.exports = !!firefox && +firefox[1];

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

var UA = __webpack_require__(58);

module.exports = /MSIE|Trident/.test(UA);

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var toIntegerOrInfinity = __webpack_require__(22);

var toLength = __webpack_require__(39);

var RangeError = global.RangeError; // `ToIndex` abstract operation
// https://tc39.es/ecma262/#sec-toindex

module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toIntegerOrInfinity(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length or index');
  return length;
};

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var aCallable = __webpack_require__(29);

var isObject = __webpack_require__(7);

var hasOwn = __webpack_require__(14);

var arraySlice = __webpack_require__(78);

var Function = global.Function;
var concat = uncurryThis([].concat);
var join = uncurryThis([].join);
var factories = {};

var construct = function construct(C, argsLength, args) {
  if (!hasOwn(factories, argsLength)) {
    for (var list = [], i = 0; i < argsLength; i++) {
      list[i] = 'a[' + i + ']';
    }

    factories[argsLength] = Function('C,a', 'return new C(' + join(list, ',') + ')');
  }

  return factories[argsLength](C, args);
}; // `Function.prototype.bind` method implementation
// https://tc39.es/ecma262/#sec-function.prototype.bind


module.exports = Function.bind || function bind(that
/* , ...args */
) {
  var F = aCallable(this);
  var Prototype = F.prototype;
  var partArgs = arraySlice(arguments, 1);

  var boundFunction = function
    /* args... */
  bound() {
    var args = concat(partArgs, arraySlice(arguments));
    return this instanceof boundFunction ? construct(F, args.length, args) : F.apply(that, args);
  };

  if (isObject(Prototype)) boundFunction.prototype = Prototype;
  return boundFunction;
};

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defineProperty = __webpack_require__(12).f;

var create = __webpack_require__(41);

var redefineAll = __webpack_require__(93);

var bind = __webpack_require__(52);

var anInstance = __webpack_require__(54);

var iterate = __webpack_require__(62);

var defineIterator = __webpack_require__(185);

var setSpecies = __webpack_require__(92);

var DESCRIPTORS = __webpack_require__(6);

var fastKey = __webpack_require__(80).fastKey;

var InternalStateModule = __webpack_require__(21);

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;
module.exports = {
  getConstructor: function getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var Constructor = wrapper(function (that, iterable) {
      anInstance(that, Prototype);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        index: create(null),
        first: undefined,
        last: undefined,
        size: 0
      });
      if (!DESCRIPTORS) that.size = 0;
      if (iterable != undefined) iterate(iterable, that[ADDER], {
        that: that,
        AS_ENTRIES: IS_MAP
      });
    });
    var Prototype = Constructor.prototype;
    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function define(that, key, value) {
      var state = getInternalState(that);
      var entry = getEntry(that, key);
      var previous, index; // change existing entry

      if (entry) {
        entry.value = value; // create new entry
      } else {
        state.last = entry = {
          index: index = fastKey(key, true),
          key: key,
          value: value,
          previous: previous = state.last,
          next: undefined,
          removed: false
        };
        if (!state.first) state.first = entry;
        if (previous) previous.next = entry;
        if (DESCRIPTORS) state.size++;else that.size++; // add to index

        if (index !== 'F') state.index[index] = entry;
      }

      return that;
    };

    var getEntry = function getEntry(that, key) {
      var state = getInternalState(that); // fast case

      var index = fastKey(key);
      var entry;
      if (index !== 'F') return state.index[index]; // frozen object case

      for (entry = state.first; entry; entry = entry.next) {
        if (entry.key == key) return entry;
      }
    };

    redefineAll(Prototype, {
      // `{ Map, Set }.prototype.clear()` methods
      // https://tc39.es/ecma262/#sec-map.prototype.clear
      // https://tc39.es/ecma262/#sec-set.prototype.clear
      clear: function clear() {
        var that = this;
        var state = getInternalState(that);
        var data = state.index;
        var entry = state.first;

        while (entry) {
          entry.removed = true;
          if (entry.previous) entry.previous = entry.previous.next = undefined;
          delete data[entry.index];
          entry = entry.next;
        }

        state.first = state.last = undefined;
        if (DESCRIPTORS) state.size = 0;else that.size = 0;
      },
      // `{ Map, Set }.prototype.delete(key)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.delete
      // https://tc39.es/ecma262/#sec-set.prototype.delete
      'delete': function _delete(key) {
        var that = this;
        var state = getInternalState(that);
        var entry = getEntry(that, key);

        if (entry) {
          var next = entry.next;
          var prev = entry.previous;
          delete state.index[entry.index];
          entry.removed = true;
          if (prev) prev.next = next;
          if (next) next.previous = prev;
          if (state.first == entry) state.first = next;
          if (state.last == entry) state.last = prev;
          if (DESCRIPTORS) state.size--;else that.size--;
        }

        return !!entry;
      },
      // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.foreach
      // https://tc39.es/ecma262/#sec-set.prototype.foreach
      forEach: function forEach(callbackfn
      /* , that = undefined */
      ) {
        var state = getInternalState(this);
        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined);
        var entry;

        while (entry = entry ? entry.next : state.first) {
          boundFunction(entry.value, entry.key, this); // revert to the last existing entry

          while (entry && entry.removed) {
            entry = entry.previous;
          }
        }
      },
      // `{ Map, Set}.prototype.has(key)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.has
      // https://tc39.es/ecma262/#sec-set.prototype.has
      has: function has(key) {
        return !!getEntry(this, key);
      }
    });
    redefineAll(Prototype, IS_MAP ? {
      // `Map.prototype.get(key)` method
      // https://tc39.es/ecma262/#sec-map.prototype.get
      get: function get(key) {
        var entry = getEntry(this, key);
        return entry && entry.value;
      },
      // `Map.prototype.set(key, value)` method
      // https://tc39.es/ecma262/#sec-map.prototype.set
      set: function set(key, value) {
        return define(this, key === 0 ? 0 : key, value);
      }
    } : {
      // `Set.prototype.add(value)` method
      // https://tc39.es/ecma262/#sec-set.prototype.add
      add: function add(value) {
        return define(this, value = value === 0 ? 0 : value, value);
      }
    });
    if (DESCRIPTORS) defineProperty(Prototype, 'size', {
      get: function get() {
        return getInternalState(this).size;
      }
    });
    return Constructor;
  },
  setStrong: function setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP) {
    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';
    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME); // `{ Map, Set }.prototype.{ keys, values, entries, @@iterator }()` methods
    // https://tc39.es/ecma262/#sec-map.prototype.entries
    // https://tc39.es/ecma262/#sec-map.prototype.keys
    // https://tc39.es/ecma262/#sec-map.prototype.values
    // https://tc39.es/ecma262/#sec-map.prototype-@@iterator
    // https://tc39.es/ecma262/#sec-set.prototype.entries
    // https://tc39.es/ecma262/#sec-set.prototype.keys
    // https://tc39.es/ecma262/#sec-set.prototype.values
    // https://tc39.es/ecma262/#sec-set.prototype-@@iterator

    defineIterator(Constructor, CONSTRUCTOR_NAME, function (iterated, kind) {
      setInternalState(this, {
        type: ITERATOR_NAME,
        target: iterated,
        state: getInternalCollectionState(iterated),
        kind: kind,
        last: undefined
      });
    }, function () {
      var state = getInternalIteratorState(this);
      var kind = state.kind;
      var entry = state.last; // revert to the last existing entry

      while (entry && entry.removed) {
        entry = entry.previous;
      } // get next entry


      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
        // or finish the iteration
        state.target = undefined;
        return {
          value: undefined,
          done: true
        };
      } // return step by kind


      if (kind == 'keys') return {
        value: entry.key,
        done: false
      };
      if (kind == 'values') return {
        value: entry.value,
        done: false
      };
      return {
        value: [entry.key, entry.value],
        done: false
      };
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true); // `{ Map, Set }.prototype[@@species]` accessors
    // https://tc39.es/ecma262/#sec-get-map-@@species
    // https://tc39.es/ecma262/#sec-get-set-@@species

    setSpecies(CONSTRUCTOR_NAME);
  }
};

/***/ }),
/* 251 */
/***/ (function(module, exports) {

var log = Math.log; // `Math.log1p` method implementation
// https://tc39.es/ecma262/#sec-math.log1p
// eslint-disable-next-line es/no-math-log1p -- safe

module.exports = Math.log1p || function log1p(x) {
  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : log(1 + x);
};

/***/ }),
/* 252 */
/***/ (function(module, exports) {

var log = Math.log;
var LOG10E = Math.LOG10E; // eslint-disable-next-line es/no-math-log10 -- safe

module.exports = Math.log10 || function log10(x) {
  return log(x) * LOG10E;
};

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var fails = __webpack_require__(4);

var uncurryThis = __webpack_require__(3);

var toString = __webpack_require__(10);

var trim = __webpack_require__(95).trim;

var whitespaces = __webpack_require__(153);

var charAt = uncurryThis(''.charAt);
var n$ParseFloat = global.parseFloat;
var _Symbol = global.Symbol;
var ITERATOR = _Symbol && _Symbol.iterator;
var FORCED = 1 / n$ParseFloat(whitespaces + '-0') !== -Infinity // MS Edge 18- broken with boxed symbols
|| ITERATOR && !fails(function () {
  n$ParseFloat(Object(ITERATOR));
}); // `parseFloat` method
// https://tc39.es/ecma262/#sec-parsefloat-string

module.exports = FORCED ? function parseFloat(string) {
  var trimmedString = trim(toString(string));
  var result = n$ParseFloat(trimmedString);
  return result === 0 && charAt(trimmedString, 0) == '-' ? -0 : result;
} : n$ParseFloat;

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var fails = __webpack_require__(4);

var uncurryThis = __webpack_require__(3);

var toString = __webpack_require__(10);

var trim = __webpack_require__(95).trim;

var whitespaces = __webpack_require__(153);

var $parseInt = global.parseInt;
var _Symbol = global.Symbol;
var ITERATOR = _Symbol && _Symbol.iterator;
var hex = /^[+-]?0x/i;
var exec = uncurryThis(hex.exec);
var FORCED = $parseInt(whitespaces + '08') !== 8 || $parseInt(whitespaces + '0x16') !== 22 // MS Edge 18- broken with boxed symbols
|| ITERATOR && !fails(function () {
  $parseInt(Object(ITERATOR));
}); // `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix

module.exports = FORCED ? function parseInt(string, radix) {
  var S = trim(toString(string));
  return $parseInt(S, radix >>> 0 || (exec(hex, S) ? 16 : 10));
} : $parseInt;

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var DESCRIPTORS = __webpack_require__(6);

var uncurryThis = __webpack_require__(3);

var call = __webpack_require__(13);

var fails = __webpack_require__(4);

var objectKeys = __webpack_require__(112);

var getOwnPropertySymbolsModule = __webpack_require__(178);

var propertyIsEnumerableModule = __webpack_require__(135);

var toObject = __webpack_require__(16);

var IndexedObject = __webpack_require__(107); // eslint-disable-next-line es/no-object-assign -- safe


var $assign = Object.assign; // eslint-disable-next-line es/no-object-defineproperty -- required for testing

var defineProperty = Object.defineProperty;
var concat = uncurryThis([].concat); // `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign

module.exports = !$assign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && $assign({
    b: 1
  }, $assign(defineProperty({}, 'a', {
    enumerable: true,
    get: function get() {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), {
    b: 2
  })).b !== 1) return true; // should work with symbols and should have deterministic property order (V8 bug)

  var A = {};
  var B = {}; // eslint-disable-next-line es/no-symbol -- safe

  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) {
    B[chr] = chr;
  });
  return $assign({}, A)[symbol] != 7 || objectKeys($assign({}, B)).join('') != alphabet;
}) ? function assign(target, source) {
  // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;

  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;

    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || call(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  }

  return T;
} : $assign;

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(6);

var uncurryThis = __webpack_require__(3);

var objectKeys = __webpack_require__(112);

var toIndexedObject = __webpack_require__(34);

var $propertyIsEnumerable = __webpack_require__(135).f;

var propertyIsEnumerable = uncurryThis($propertyIsEnumerable);
var push = uncurryThis([].push); // `Object.{ entries, values }` methods implementation

var createMethod = function createMethod(TO_ENTRIES) {
  return function (it) {
    var O = toIndexedObject(it);
    var keys = objectKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;

    while (length > i) {
      key = keys[i++];

      if (!DESCRIPTORS || propertyIsEnumerable(O, key)) {
        push(result, TO_ENTRIES ? [key, O[key]] : O[key]);
      }
    }

    return result;
  };
};

module.exports = {
  // `Object.entries` method
  // https://tc39.es/ecma262/#sec-object.entries
  entries: createMethod(true),
  // `Object.values` method
  // https://tc39.es/ecma262/#sec-object.values
  values: createMethod(false)
};

/***/ }),
/* 257 */
/***/ (function(module, exports) {

// `SameValue` abstract operation
// https://tc39.es/ecma262/#sec-samevalue
// eslint-disable-next-line es/no-object-is -- safe
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare -- NaN check
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

module.exports = global.Promise;

/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

var userAgent = __webpack_require__(58);

module.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);

/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var bind = __webpack_require__(52);

var getOwnPropertyDescriptor = __webpack_require__(28).f;

var macrotask = __webpack_require__(195).set;

var IS_IOS = __webpack_require__(259);

var IS_IOS_PEBBLE = __webpack_require__(484);

var IS_WEBOS_WEBKIT = __webpack_require__(485);

var IS_NODE = __webpack_require__(79);

var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var document = global.document;
var process = global.process;
var Promise = global.Promise; // Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`

var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;
var flush, head, last, notify, toggle, node, promise, then; // modern engines have queueMicrotask method

if (!queueMicrotask) {
  flush = function flush() {
    var parent, fn;
    if (IS_NODE && (parent = process.domain)) parent.exit();

    while (head) {
      fn = head.fn;
      head = head.next;

      try {
        fn();
      } catch (error) {
        if (head) notify();else last = undefined;
        throw error;
      }
    }

    last = undefined;
    if (parent) parent.enter();
  }; // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898


  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {
    toggle = true;
    node = document.createTextNode('');
    new MutationObserver(flush).observe(node, {
      characterData: true
    });

    notify = function notify() {
      node.data = toggle = !toggle;
    }; // environments with maybe non-completely correct, but existent Promise

  } else if (!IS_IOS_PEBBLE && Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise.resolve(undefined); // workaround of WebKit ~ iOS Safari 10.1 bug

    promise.constructor = Promise;
    then = bind(promise.then, promise);

    notify = function notify() {
      then(flush);
    }; // Node.js without promises

  } else if (IS_NODE) {
    notify = function notify() {
      process.nextTick(flush);
    }; // for other environments - macrotask based on:
    // - setImmediate
    // - MessageChannel
    // - window.postMessag
    // - onreadystatechange
    // - setTimeout

  } else {
    // strange IE + webpack dev server bug - use .bind(global)
    macrotask = bind(macrotask, global);

    notify = function notify() {
      macrotask(flush);
    };
  }
}

module.exports = queueMicrotask || function (fn) {
  var task = {
    fn: fn,
    next: undefined
  };
  if (last) last.next = task;

  if (!head) {
    head = task;
    notify();
  }

  last = task;
};

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(5);

var isObject = __webpack_require__(7);

var newPromiseCapability = __webpack_require__(155);

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

var hasOwn = __webpack_require__(14);

module.exports = function (descriptor) {
  return descriptor !== undefined && (hasOwn(descriptor, 'value') || hasOwn(descriptor, 'writable'));
};

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(4);

var global = __webpack_require__(2); // babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError


var $RegExp = global.RegExp;
module.exports = fails(function () {
  var re = $RegExp('(?<a>b)', 'g');
  return re.exec('b').groups.a !== 'b' || 'b'.replace(re, '$<a>c') !== 'bc';
});

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var charAt = __webpack_require__(158).charAt;

var toString = __webpack_require__(10);

var InternalStateModule = __webpack_require__(21);

var defineIterator = __webpack_require__(185);

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR); // `String.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-string.prototype-@@iterator

defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: toString(iterated),
    index: 0
  }); // `%StringIteratorPrototype%.next` method
  // https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return {
    value: undefined,
    done: true
  };
  point = charAt(string, index);
  state.index += point.length;
  return {
    value: point,
    done: false
  };
});

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/zloirock/core-js/issues/280
var userAgent = __webpack_require__(58);

module.exports = /Version\/10(?:\.\d+){1,2}(?: [\w./]+)?(?: Mobile\/\w+)? Safari\//.test(userAgent);

/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

var uncurryThis = __webpack_require__(3);

var toObject = __webpack_require__(16);

var floor = Math.floor;
var charAt = uncurryThis(''.charAt);
var replace = uncurryThis(''.replace);
var stringSlice = uncurryThis(''.slice);
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g; // `GetSubstitution` abstract operation
// https://tc39.es/ecma262/#sec-getsubstitution

module.exports = function (matched, str, position, captures, namedCaptures, replacement) {
  var tailPos = position + matched.length;
  var m = captures.length;
  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;

  if (namedCaptures !== undefined) {
    namedCaptures = toObject(namedCaptures);
    symbols = SUBSTITUTION_SYMBOLS;
  }

  return replace(replacement, symbols, function (match, ch) {
    var capture;

    switch (charAt(ch, 0)) {
      case '$':
        return '$';

      case '&':
        return matched;

      case '`':
        return stringSlice(str, 0, position);

      case "'":
        return stringSlice(str, tailPos);

      case '<':
        capture = namedCaptures[stringSlice(ch, 1, -1)];
        break;

      default:
        // \d\d?
        var n = +ch;
        if (n === 0) return match;

        if (n > m) {
          var f = floor(n / 10);
          if (f === 0) return match;
          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);
          return match;
        }

        capture = captures[n - 1];
    }

    return capture === undefined ? '' : capture;
  });
};

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var toPositiveInteger = __webpack_require__(546);

var RangeError = global.RangeError;

module.exports = function (it, BYTES) {
  var offset = toPositiveInteger(it);
  if (offset % BYTES) throw RangeError('Wrong offset');
  return offset;
};

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__(52);

var call = __webpack_require__(13);

var aConstructor = __webpack_require__(190);

var toObject = __webpack_require__(16);

var lengthOfArrayLike = __webpack_require__(17);

var getIterator = __webpack_require__(143);

var getIteratorMethod = __webpack_require__(117);

var isArrayIteratorMethod = __webpack_require__(183);

var aTypedArrayConstructor = __webpack_require__(11).aTypedArrayConstructor;

module.exports = function from(source
/* , mapfn, thisArg */
) {
  var C = aConstructor(this);
  var O = toObject(source);
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod(O);
  var i, length, result, step, iterator, next;

  if (iteratorMethod && !isArrayIteratorMethod(iteratorMethod)) {
    iterator = getIterator(O, iteratorMethod);
    next = iterator.next;
    O = [];

    while (!(step = call(next, iterator)).done) {
      O.push(step.value);
    }
  }

  if (mapping && argumentsLength > 2) {
    mapfn = bind(mapfn, arguments[2]);
  }

  length = lengthOfArrayLike(O);
  result = new (aTypedArrayConstructor(C))(length);

  for (i = 0; length > i; i++) {
    result[i] = mapping ? mapfn(O[i], i) : O[i];
  }

  return result;
};

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var uncurryThis = __webpack_require__(3);

var redefineAll = __webpack_require__(93);

var getWeakData = __webpack_require__(80).getWeakData;

var anObject = __webpack_require__(5);

var isObject = __webpack_require__(7);

var anInstance = __webpack_require__(54);

var iterate = __webpack_require__(62);

var ArrayIterationModule = __webpack_require__(26);

var hasOwn = __webpack_require__(14);

var InternalStateModule = __webpack_require__(21);

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;
var find = ArrayIterationModule.find;
var findIndex = ArrayIterationModule.findIndex;
var splice = uncurryThis([].splice);
var id = 0; // fallback for uncaught frozen keys

var uncaughtFrozenStore = function uncaughtFrozenStore(store) {
  return store.frozen || (store.frozen = new UncaughtFrozenStore());
};

var UncaughtFrozenStore = function UncaughtFrozenStore() {
  this.entries = [];
};

var findUncaughtFrozen = function findUncaughtFrozen(store, key) {
  return find(store.entries, function (it) {
    return it[0] === key;
  });
};

UncaughtFrozenStore.prototype = {
  get: function get(key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function has(key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function set(key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;else this.entries.push([key, value]);
  },
  'delete': function _delete(key) {
    var index = findIndex(this.entries, function (it) {
      return it[0] === key;
    });
    if (~index) splice(this.entries, index, 1);
    return !!~index;
  }
};
module.exports = {
  getConstructor: function getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var Constructor = wrapper(function (that, iterable) {
      anInstance(that, Prototype);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        id: id++,
        frozen: undefined
      });
      if (iterable != undefined) iterate(iterable, that[ADDER], {
        that: that,
        AS_ENTRIES: IS_MAP
      });
    });
    var Prototype = Constructor.prototype;
    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function define(that, key, value) {
      var state = getInternalState(that);
      var data = getWeakData(anObject(key), true);
      if (data === true) uncaughtFrozenStore(state).set(key, value);else data[state.id] = value;
      return that;
    };

    redefineAll(Prototype, {
      // `{ WeakMap, WeakSet }.prototype.delete(key)` methods
      // https://tc39.es/ecma262/#sec-weakmap.prototype.delete
      // https://tc39.es/ecma262/#sec-weakset.prototype.delete
      'delete': function _delete(key) {
        var state = getInternalState(this);
        if (!isObject(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state)['delete'](key);
        return data && hasOwn(data, state.id) && delete data[state.id];
      },
      // `{ WeakMap, WeakSet }.prototype.has(key)` methods
      // https://tc39.es/ecma262/#sec-weakmap.prototype.has
      // https://tc39.es/ecma262/#sec-weakset.prototype.has
      has: function has(key) {
        var state = getInternalState(this);
        if (!isObject(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state).has(key);
        return data && hasOwn(data, state.id);
      }
    });
    redefineAll(Prototype, IS_MAP ? {
      // `WeakMap.prototype.get(key)` method
      // https://tc39.es/ecma262/#sec-weakmap.prototype.get
      get: function get(key) {
        var state = getInternalState(this);

        if (isObject(key)) {
          var data = getWeakData(key);
          if (data === true) return uncaughtFrozenStore(state).get(key);
          return data ? data[state.id] : undefined;
        }
      },
      // `WeakMap.prototype.set(key, value)` method
      // https://tc39.es/ecma262/#sec-weakmap.prototype.set
      set: function set(key, value) {
        return define(this, key, value);
      }
    } : {
      // `WeakSet.prototype.add(value)` method
      // https://tc39.es/ecma262/#sec-weakset.prototype.add
      add: function add(value) {
        return define(this, value, true);
      }
    });
    return Constructor;
  }
};

/***/ }),
/* 270 */
/***/ (function(module, exports) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

// in old WebKit versions, `element.classList` is not an instance of global `DOMTokenList`
var documentCreateElement = __webpack_require__(137);

var classList = documentCreateElement('span').classList;
var DOMTokenListPrototype = classList && classList.constructor && classList.constructor.prototype;
module.exports = DOMTokenListPrototype === Object.prototype ? undefined : DOMTokenListPrototype;

/***/ }),
/* 272 */
/***/ (function(module, exports) {

module.exports = {
  IndexSizeError: {
    s: 'INDEX_SIZE_ERR',
    c: 1,
    m: 1
  },
  DOMStringSizeError: {
    s: 'DOMSTRING_SIZE_ERR',
    c: 2,
    m: 0
  },
  HierarchyRequestError: {
    s: 'HIERARCHY_REQUEST_ERR',
    c: 3,
    m: 1
  },
  WrongDocumentError: {
    s: 'WRONG_DOCUMENT_ERR',
    c: 4,
    m: 1
  },
  InvalidCharacterError: {
    s: 'INVALID_CHARACTER_ERR',
    c: 5,
    m: 1
  },
  NoDataAllowedError: {
    s: 'NO_DATA_ALLOWED_ERR',
    c: 6,
    m: 0
  },
  NoModificationAllowedError: {
    s: 'NO_MODIFICATION_ALLOWED_ERR',
    c: 7,
    m: 1
  },
  NotFoundError: {
    s: 'NOT_FOUND_ERR',
    c: 8,
    m: 1
  },
  NotSupportedError: {
    s: 'NOT_SUPPORTED_ERR',
    c: 9,
    m: 1
  },
  InUseAttributeError: {
    s: 'INUSE_ATTRIBUTE_ERR',
    c: 10,
    m: 1
  },
  InvalidStateError: {
    s: 'INVALID_STATE_ERR',
    c: 11,
    m: 1
  },
  SyntaxError: {
    s: 'SYNTAX_ERR',
    c: 12,
    m: 1
  },
  InvalidModificationError: {
    s: 'INVALID_MODIFICATION_ERR',
    c: 13,
    m: 1
  },
  NamespaceError: {
    s: 'NAMESPACE_ERR',
    c: 14,
    m: 1
  },
  InvalidAccessError: {
    s: 'INVALID_ACCESS_ERR',
    c: 15,
    m: 1
  },
  ValidationError: {
    s: 'VALIDATION_ERR',
    c: 16,
    m: 0
  },
  TypeMismatchError: {
    s: 'TYPE_MISMATCH_ERR',
    c: 17,
    m: 1
  },
  SecurityError: {
    s: 'SECURITY_ERR',
    c: 18,
    m: 1
  },
  NetworkError: {
    s: 'NETWORK_ERR',
    c: 19,
    m: 1
  },
  AbortError: {
    s: 'ABORT_ERR',
    c: 20,
    m: 1
  },
  URLMismatchError: {
    s: 'URL_MISMATCH_ERR',
    c: 21,
    m: 1
  },
  QuotaExceededError: {
    s: 'QUOTA_EXCEEDED_ERR',
    c: 22,
    m: 1
  },
  TimeoutError: {
    s: 'TIMEOUT_ERR',
    c: 23,
    m: 1
  },
  InvalidNodeTypeError: {
    s: 'INVALID_NODE_TYPE_ERR',
    c: 24,
    m: 1
  },
  DataCloneError: {
    s: 'DATA_CLONE_ERR',
    c: 25,
    m: 1
  }
};

/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(4);

var wellKnownSymbol = __webpack_require__(8);

var IS_PURE = __webpack_require__(25);

var ITERATOR = wellKnownSymbol('iterator');
module.exports = !fails(function () {
  var url = new URL('b?a=1&b=2&c=3', 'http://a');
  var searchParams = url.searchParams;
  var result = '';
  url.pathname = 'c%20d';
  searchParams.forEach(function (value, key) {
    searchParams['delete']('b');
    result += key + value;
  });
  return IS_PURE && !url.toJSON || !searchParams.sort || url.href !== 'http://a/c%20d?a=1&c=3' || searchParams.get('c') !== '3' || String(new URLSearchParams('?a=1')) !== 'a=1' || !searchParams[ITERATOR] // throws in Edge
  || new URL('https://a@b').username !== 'a' || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b' // not punycoded in Edge
  || new URL('http://тест').host !== 'xn--e1aybc' // not escaped in Chrome 62-
  || new URL('http://a#б').hash !== '#%D0%B1' // fails in Chrome 66-
  || result !== 'a1c3' // throws in Safari
  || new URL('http://x', undefined).host !== 'x';
});

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`

__webpack_require__(145);

var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var getBuiltIn = __webpack_require__(19);

var call = __webpack_require__(13);

var uncurryThis = __webpack_require__(3);

var USE_NATIVE_URL = __webpack_require__(273);

var redefine = __webpack_require__(18);

var redefineAll = __webpack_require__(93);

var setToStringTag = __webpack_require__(47);

var createIteratorConstructor = __webpack_require__(186);

var InternalStateModule = __webpack_require__(21);

var anInstance = __webpack_require__(54);

var isCallable = __webpack_require__(9);

var hasOwn = __webpack_require__(14);

var bind = __webpack_require__(52);

var classof = __webpack_require__(73);

var anObject = __webpack_require__(5);

var isObject = __webpack_require__(7);

var $toString = __webpack_require__(10);

var create = __webpack_require__(41);

var createPropertyDescriptor = __webpack_require__(46);

var getIterator = __webpack_require__(143);

var getIteratorMethod = __webpack_require__(117);

var wellKnownSymbol = __webpack_require__(8);

var arraySort = __webpack_require__(187);

var ITERATOR = wellKnownSymbol('iterator');
var URL_SEARCH_PARAMS = 'URLSearchParams';
var URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';
var setInternalState = InternalStateModule.set;
var getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);
var getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);
var n$Fetch = getBuiltIn('fetch');
var N$Request = getBuiltIn('Request');
var Headers = getBuiltIn('Headers');
var RequestPrototype = N$Request && N$Request.prototype;
var HeadersPrototype = Headers && Headers.prototype;
var RegExp = global.RegExp;
var TypeError = global.TypeError;
var decodeURIComponent = global.decodeURIComponent;
var encodeURIComponent = global.encodeURIComponent;
var charAt = uncurryThis(''.charAt);
var join = uncurryThis([].join);
var push = uncurryThis([].push);
var replace = uncurryThis(''.replace);
var shift = uncurryThis([].shift);
var splice = uncurryThis([].splice);
var split = uncurryThis(''.split);
var stringSlice = uncurryThis(''.slice);
var plus = /\+/g;
var sequences = Array(4);

var percentSequence = function percentSequence(bytes) {
  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\da-f]{2}){' + bytes + '})', 'gi'));
};

var percentDecode = function percentDecode(sequence) {
  try {
    return decodeURIComponent(sequence);
  } catch (error) {
    return sequence;
  }
};

var deserialize = function deserialize(it) {
  var result = replace(it, plus, ' ');
  var bytes = 4;

  try {
    return decodeURIComponent(result);
  } catch (error) {
    while (bytes) {
      result = replace(result, percentSequence(bytes--), percentDecode);
    }

    return result;
  }
};

var find = /[!'()~]|%20/g;
var replacements = {
  '!': '%21',
  "'": '%27',
  '(': '%28',
  ')': '%29',
  '~': '%7E',
  '%20': '+'
};

var replacer = function replacer(match) {
  return replacements[match];
};

var _serialize = function serialize(it) {
  return replace(encodeURIComponent(it), find, replacer);
};

var validateArgumentsLength = function validateArgumentsLength(passed, required) {
  if (passed < required) throw TypeError('Not enough arguments');
};

var URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {
  setInternalState(this, {
    type: URL_SEARCH_PARAMS_ITERATOR,
    iterator: getIterator(getInternalParamsState(params).entries),
    kind: kind
  });
}, 'Iterator', function next() {
  var state = getInternalIteratorState(this);
  var kind = state.kind;
  var step = state.iterator.next();
  var entry = step.value;

  if (!step.done) {
    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];
  }

  return step;
}, true);

var URLSearchParamsState = function URLSearchParamsState(init) {
  this.entries = [];
  this.url = null;

  if (init !== undefined) {
    if (isObject(init)) this.parseObject(init);else this.parseQuery(typeof init == 'string' ? charAt(init, 0) === '?' ? stringSlice(init, 1) : init : $toString(init));
  }
};

URLSearchParamsState.prototype = {
  type: URL_SEARCH_PARAMS,
  bindURL: function bindURL(url) {
    this.url = url;
    this.update();
  },
  parseObject: function parseObject(object) {
    var iteratorMethod = getIteratorMethod(object);
    var iterator, next, step, entryIterator, entryNext, first, second;

    if (iteratorMethod) {
      iterator = getIterator(object, iteratorMethod);
      next = iterator.next;

      while (!(step = call(next, iterator)).done) {
        entryIterator = getIterator(anObject(step.value));
        entryNext = entryIterator.next;
        if ((first = call(entryNext, entryIterator)).done || (second = call(entryNext, entryIterator)).done || !call(entryNext, entryIterator).done) throw TypeError('Expected sequence with length 2');
        push(this.entries, {
          key: $toString(first.value),
          value: $toString(second.value)
        });
      }
    } else for (var key in object) {
      if (hasOwn(object, key)) {
        push(this.entries, {
          key: key,
          value: $toString(object[key])
        });
      }
    }
  },
  parseQuery: function parseQuery(query) {
    if (query) {
      var attributes = split(query, '&');
      var index = 0;
      var attribute, entry;

      while (index < attributes.length) {
        attribute = attributes[index++];

        if (attribute.length) {
          entry = split(attribute, '=');
          push(this.entries, {
            key: deserialize(shift(entry)),
            value: deserialize(join(entry, '='))
          });
        }
      }
    }
  },
  serialize: function serialize() {
    var entries = this.entries;
    var result = [];
    var index = 0;
    var entry;

    while (index < entries.length) {
      entry = entries[index++];
      push(result, _serialize(entry.key) + '=' + _serialize(entry.value));
    }

    return join(result, '&');
  },
  update: function update() {
    this.entries.length = 0;
    this.parseQuery(this.url.query);
  },
  updateURL: function updateURL() {
    if (this.url) this.url.update();
  }
}; // `URLSearchParams` constructor
// https://url.spec.whatwg.org/#interface-urlsearchparams

var URLSearchParamsConstructor = function
  /* init */
URLSearchParams() {
  anInstance(this, URLSearchParamsPrototype);
  var init = arguments.length > 0 ? arguments[0] : undefined;
  setInternalState(this, new URLSearchParamsState(init));
};

var URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;
redefineAll(URLSearchParamsPrototype, {
  // `URLSearchParams.prototype.append` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-append
  append: function append(name, value) {
    validateArgumentsLength(arguments.length, 2);
    var state = getInternalParamsState(this);
    push(state.entries, {
      key: $toString(name),
      value: $toString(value)
    });
    state.updateURL();
  },
  // `URLSearchParams.prototype.delete` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete
  'delete': function _delete(name) {
    validateArgumentsLength(arguments.length, 1);
    var state = getInternalParamsState(this);
    var entries = state.entries;
    var key = $toString(name);
    var index = 0;

    while (index < entries.length) {
      if (entries[index].key === key) splice(entries, index, 1);else index++;
    }

    state.updateURL();
  },
  // `URLSearchParams.prototype.get` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-get
  get: function get(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = $toString(name);
    var index = 0;

    for (; index < entries.length; index++) {
      if (entries[index].key === key) return entries[index].value;
    }

    return null;
  },
  // `URLSearchParams.prototype.getAll` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall
  getAll: function getAll(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = $toString(name);
    var result = [];
    var index = 0;

    for (; index < entries.length; index++) {
      if (entries[index].key === key) push(result, entries[index].value);
    }

    return result;
  },
  // `URLSearchParams.prototype.has` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-has
  has: function has(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = $toString(name);
    var index = 0;

    while (index < entries.length) {
      if (entries[index++].key === key) return true;
    }

    return false;
  },
  // `URLSearchParams.prototype.set` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-set
  set: function set(name, value) {
    validateArgumentsLength(arguments.length, 1);
    var state = getInternalParamsState(this);
    var entries = state.entries;
    var found = false;
    var key = $toString(name);
    var val = $toString(value);
    var index = 0;
    var entry;

    for (; index < entries.length; index++) {
      entry = entries[index];

      if (entry.key === key) {
        if (found) splice(entries, index--, 1);else {
          found = true;
          entry.value = val;
        }
      }
    }

    if (!found) push(entries, {
      key: key,
      value: val
    });
    state.updateURL();
  },
  // `URLSearchParams.prototype.sort` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort
  sort: function sort() {
    var state = getInternalParamsState(this);
    arraySort(state.entries, function (a, b) {
      return a.key > b.key ? 1 : -1;
    });
    state.updateURL();
  },
  // `URLSearchParams.prototype.forEach` method
  forEach: function forEach(callback
  /* , thisArg */
  ) {
    var entries = getInternalParamsState(this).entries;
    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined);
    var index = 0;
    var entry;

    while (index < entries.length) {
      entry = entries[index++];
      boundFunction(entry.value, entry.key, this);
    }
  },
  // `URLSearchParams.prototype.keys` method
  keys: function keys() {
    return new URLSearchParamsIterator(this, 'keys');
  },
  // `URLSearchParams.prototype.values` method
  values: function values() {
    return new URLSearchParamsIterator(this, 'values');
  },
  // `URLSearchParams.prototype.entries` method
  entries: function entries() {
    return new URLSearchParamsIterator(this, 'entries');
  }
}, {
  enumerable: true
}); // `URLSearchParams.prototype[@@iterator]` method

redefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries, {
  name: 'entries'
}); // `URLSearchParams.prototype.toString` method
// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior

redefine(URLSearchParamsPrototype, 'toString', function toString() {
  return getInternalParamsState(this).serialize();
}, {
  enumerable: true
});
setToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);
$({
  global: true,
  forced: !USE_NATIVE_URL
}, {
  URLSearchParams: URLSearchParamsConstructor
}); // Wrap `fetch` and `Request` for correct work with polyfilled `URLSearchParams`

if (!USE_NATIVE_URL && isCallable(Headers)) {
  var headersHas = uncurryThis(HeadersPrototype.has);
  var headersSet = uncurryThis(HeadersPrototype.set);

  var wrapRequestOptions = function wrapRequestOptions(init) {
    if (isObject(init)) {
      var body = init.body;
      var headers;

      if (classof(body) === URL_SEARCH_PARAMS) {
        headers = init.headers ? new Headers(init.headers) : new Headers();

        if (!headersHas(headers, 'content-type')) {
          headersSet(headers, 'content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }

        return create(init, {
          body: createPropertyDescriptor(0, $toString(body)),
          headers: createPropertyDescriptor(0, headers)
        });
      }
    }

    return init;
  };

  if (isCallable(n$Fetch)) {
    $({
      global: true,
      enumerable: true,
      forced: true
    }, {
      fetch: function fetch(input
      /* , init */
      ) {
        return n$Fetch(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});
      }
    });
  }

  if (isCallable(N$Request)) {
    var RequestConstructor = function Request(input
    /* , init */
    ) {
      anInstance(this, RequestPrototype);
      return new N$Request(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});
    };

    RequestPrototype.constructor = RequestConstructor;
    RequestConstructor.prototype = RequestPrototype;
    $({
      global: true,
      forced: true
    }, {
      Request: RequestConstructor
    });
  }
}

module.exports = {
  URLSearchParams: URLSearchParamsConstructor,
  getState: getInternalParamsState
};

/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Dependencies
 */

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var _require = __webpack_require__(610),
    Client = _require.Client;

var _require2 = __webpack_require__(284),
    Mail = _require2.classes.Mail;
/**
 * Mail service class
 */


var MailService = /*#__PURE__*/function () {
  /**
   * Constructor
   */
  function MailService() {
    _classCallCheck(this, MailService);

    // Set client, initialize substitution wrappers and secret rules filter.
    this.setClient(new Client());
    this.setSubstitutionWrappers('{{', '}}');
    this.secretRules = [];
  }
  /**
   * Set client
   */


  _createClass(MailService, [{
    key: "setClient",
    value: function setClient(client) {
      this.client = client;
      return this;
    }
    /**
     * SendGrid API key passthrough for convenience.
     */

  }, {
    key: "setApiKey",
    value: function setApiKey(apiKey) {
      this.client.setApiKey(apiKey);
      return this;
    }
    /**
     * Twilio Email Auth passthrough for convenience.
     */

  }, {
    key: "setTwilioEmailAuth",
    value: function setTwilioEmailAuth(username, password) {
      this.client.setTwilioEmailAuth(username, password);
    }
    /**
     * Set client timeout
     */

  }, {
    key: "setTimeout",
    value: function setTimeout(timeout) {
      if (typeof timeout === 'undefined') {
        return;
      }

      this.client.setDefaultRequest('timeout', timeout);
    }
    /**
     * Set substitution wrappers
     */

  }, {
    key: "setSubstitutionWrappers",
    value: function setSubstitutionWrappers(left, right) {
      if (typeof left === 'undefined' || typeof right === 'undefined') {
        throw new Error('Must provide both left and right side wrappers');
      }

      if (!Array.isArray(this.substitutionWrappers)) {
        this.substitutionWrappers = [];
      }

      this.substitutionWrappers[0] = left;
      this.substitutionWrappers[1] = right;
      return this;
    }
    /**
     * Set secret rules for filtering the e-mail content
     */

  }, {
    key: "setSecretRules",
    value: function setSecretRules(rules) {
      if (!(rules instanceof Array)) {
        rules = [rules];
      }

      var tmpRules = rules.map(function (rule) {
        var ruleType = _typeof(rule);

        if (ruleType === 'string') {
          return {
            pattern: new RegExp(rule)
          };
        } else if (ruleType === 'object') {
          // normalize rule object
          if (rule instanceof RegExp) {
            rule = {
              pattern: rule
            };
          } else if (rule.hasOwnProperty('pattern') && typeof rule.pattern === 'string') {
            rule.pattern = new RegExp(rule.pattern);
          }

          try {
            // test if rule.pattern is a valid regex
            rule.pattern.test('');
            return rule;
          } catch (err) {// continue regardless of error
          }
        }
      });
      this.secretRules = tmpRules.filter(function (val) {
        return val;
      });
    }
    /**
     * Check if the e-mail is safe to be sent
     */

  }, {
    key: "filterSecrets",
    value: function filterSecrets(body) {
      if (_typeof(body) === 'object' && !body.hasOwnProperty('content')) {
        return;
      }

      var self = this;
      body.content.forEach(function (data) {
        self.secretRules.forEach(function (rule) {
          if (rule.hasOwnProperty('pattern') && !rule.pattern.test(data.value)) {
            return;
          }

          var message = "The pattern '".concat(rule.pattern, "'");

          if (rule.name) {
            message += "identified by '".concat(rule.name, "'");
          }

          message += ' was found in the Mail content!';
          throw new Error(message);
        });
      });
    }
    /**
     * Send email
     */

  }, {
    key: "send",
    value: function send(data) {
      var _this = this;

      var isMultiple = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var cb = arguments.length > 2 ? arguments[2] : undefined;

      //Callback as second parameter
      if (typeof isMultiple === 'function') {
        cb = isMultiple;
        isMultiple = false;
      } //Array? Send in parallel


      if (Array.isArray(data)) {
        //Create promise
        var promise = Promise.all(data.map(function (item) {
          return _this.send(item, isMultiple);
        })); //Execute callback if provided

        if (cb) {
          promise.then(function (result) {
            return cb(null, result);
          })["catch"](function (error) {
            return cb(error, null);
          });
        } //Return promise


        return promise;
      } //Send mail


      try {
        //Append multiple flag to data if not set
        if (typeof data.isMultiple === 'undefined') {
          data.isMultiple = isMultiple;
        } //Append global substitution wrappers if not set in data


        if (typeof data.substitutionWrappers === 'undefined') {
          data.substitutionWrappers = this.substitutionWrappers;
        } //Create Mail instance from data and get JSON body for request


        var mail = Mail.create(data);
        var body = mail.toJSON(); //Filters the Mail body to avoid sensitive content leakage

        this.filterSecrets(body); //Create request

        var request = {
          method: 'POST',
          url: '/v3/mail/send',
          headers: mail.headers,
          body: body
        }; //Send

        return this.client.request(request, cb);
      } catch (error) {
        //Pass to callback if provided
        if (cb) {
          // eslint-disable-next-line callback-return
          cb(error, null);
        } //Reject promise


        return Promise.reject(error);
      }
    }
    /**
     * Send multiple emails (shortcut)
     */

  }, {
    key: "sendMultiple",
    value: function sendMultiple(data, cb) {
      return this.send(data, true, cb);
    }
  }]);

  return MailService;
}(); //Export class


module.exports = MailService;

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var axios = __webpack_require__(170);

var pkg = __webpack_require__(637);

var _require = __webpack_require__(284),
    mergeData = _require.helpers.mergeData,
    _require$classes = _require.classes,
    Response = _require$classes.Response,
    ResponseError = _require$classes.ResponseError;

var API_KEY_PREFIX = 'SG.';
var SENDGRID_BASE_URL = 'https://api.sendgrid.com/';
var TWILIO_BASE_URL = 'https://email.twilio.com/';

var Client = /*#__PURE__*/function () {
  function Client() {
    _classCallCheck(this, Client);

    this.auth = '';
    this.impersonateSubuser = '';
    this.defaultHeaders = {
      Accept: 'application/json',
      'Content-Type': 'application/json',
      'User-Agent': 'sendgrid/' + pkg.version + ';nodejs'
    };
    this.defaultRequest = {
      baseUrl: SENDGRID_BASE_URL,
      url: '',
      method: 'GET',
      headers: {},
      maxContentLength: Infinity,
      // Don't limit the content length.
      maxBodyLength: Infinity
    };
  }

  _createClass(Client, [{
    key: "setApiKey",
    value: function setApiKey(apiKey) {
      this.auth = 'Bearer ' + apiKey;
      this.setDefaultRequest('baseUrl', SENDGRID_BASE_URL);

      if (!this.isValidApiKey(apiKey)) {
        console.warn("API key does not start with \"".concat(API_KEY_PREFIX, "\"."));
      }
    }
  }, {
    key: "setTwilioEmailAuth",
    value: function setTwilioEmailAuth(username, password) {
      var b64Auth = Buffer.from(username + ':' + password).toString('base64');
      this.auth = 'Basic ' + b64Auth;
      this.setDefaultRequest('baseUrl', TWILIO_BASE_URL);

      if (!this.isValidTwilioAuth(username, password)) {
        console.warn('Twilio Email credentials must be non-empty strings.');
      }
    }
  }, {
    key: "isValidApiKey",
    value: function isValidApiKey(apiKey) {
      return this.isString(apiKey) && apiKey.trim().startsWith(API_KEY_PREFIX);
    }
  }, {
    key: "isValidTwilioAuth",
    value: function isValidTwilioAuth(username, password) {
      return this.isString(username) && username && this.isString(password) && password;
    }
  }, {
    key: "isString",
    value: function isString(value) {
      return typeof value === 'string' || value instanceof String;
    }
  }, {
    key: "setImpersonateSubuser",
    value: function setImpersonateSubuser(subuser) {
      this.impersonateSubuser = subuser;
    }
  }, {
    key: "setDefaultHeader",
    value: function setDefaultHeader(key, value) {
      if (key !== null && _typeof(key) === 'object') {
        // key is an object
        Object.assign(this.defaultHeaders, key);
        return this;
      }

      this.defaultHeaders[key] = value;
      return this;
    }
  }, {
    key: "setDefaultRequest",
    value: function setDefaultRequest(key, value) {
      if (key !== null && _typeof(key) === 'object') {
        // key is an object
        Object.assign(this.defaultRequest, key);
        return this;
      }

      this.defaultRequest[key] = value;
      return this;
    }
  }, {
    key: "createHeaders",
    value: function createHeaders(data) {
      // Merge data with default headers.
      var headers = mergeData(this.defaultHeaders, data); // Add auth, but don't overwrite if header already set.

      if (typeof headers.Authorization === 'undefined' && this.auth) {
        headers.Authorization = this.auth;
      }

      if (this.impersonateSubuser) {
        headers['On-Behalf-Of'] = this.impersonateSubuser;
      }

      return headers;
    }
  }, {
    key: "createRequest",
    value: function createRequest(data) {
      var options = {
        url: data.uri || data.url,
        baseUrl: data.baseUrl,
        method: data.method,
        data: data.body,
        params: data.qs,
        headers: data.headers
      }; // Merge data with default request.

      options = mergeData(this.defaultRequest, options);
      options.headers = this.createHeaders(options.headers);
      options.baseURL = options.baseUrl;
      delete options.baseUrl;
      return options;
    }
  }, {
    key: "request",
    value: function request(data, cb) {
      data = this.createRequest(data);
      var promise = new Promise(function (resolve, reject) {
        axios(data).then(function (response) {
          return resolve([new Response(response.status, response.data, response.headers), response.data]);
        })["catch"](function (error) {
          if (error.response) {
            if (error.response.status >= 400) {
              return reject(new ResponseError(error.response));
            }
          }

          return reject(error);
        });
      }); // Throw an error in case a callback function was not passed.

      if (cb && typeof cb !== 'function') {
        throw new Error('Callback passed is not a function.');
      }

      if (cb) {
        return promise.then(function (result) {
          return cb(null, result);
        })["catch"](function (error) {
          return cb(error, null);
        });
      }

      return promise;
    }
  }]);

  return Client;
}();

module.exports = Client;

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);

    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    return fn.apply(thisArg, args);
  };
};

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(207);
/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */


module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;

  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError('Request failed with status code ' + response.status, response.config, null, response.request, response));
  }
};

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isAbsoluteURL = __webpack_require__(620);

var combineURLs = __webpack_require__(621);
/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */


module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }

  return requestedURL;
};

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */
function setup(env) {
  createDebug.debug = createDebug;
  createDebug["default"] = createDebug;
  createDebug.coerce = coerce;
  createDebug.disable = disable;
  createDebug.enable = enable;
  createDebug.enabled = enabled;
  createDebug.humanize = __webpack_require__(629);
  createDebug.destroy = destroy;
  Object.keys(env).forEach(function (key) {
    createDebug[key] = env[key];
  });
  /**
  * The currently active debug mode names, and names to skip.
  */

  createDebug.names = [];
  createDebug.skips = [];
  /**
  * Map of special "%n" handling functions, for the debug "format" argument.
  *
  * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
  */

  createDebug.formatters = {};
  /**
  * Selects a color for a debug namespace
  * @param {String} namespace The namespace string for the debug instance to be colored
  * @return {Number|String} An ANSI color code for the given namespace
  * @api private
  */

  function selectColor(namespace) {
    var hash = 0;

    for (var i = 0; i < namespace.length; i++) {
      hash = (hash << 5) - hash + namespace.charCodeAt(i);
      hash |= 0; // Convert to 32bit integer
    }

    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
  }

  createDebug.selectColor = selectColor;
  /**
  * Create a debugger with the given `namespace`.
  *
  * @param {String} namespace
  * @return {Function}
  * @api public
  */

  function createDebug(namespace) {
    var prevTime;
    var enableOverride = null;
    var namespacesCache;
    var enabledCache;

    function debug() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      // Disabled?
      if (!debug.enabled) {
        return;
      }

      var self = debug; // Set `diff` timestamp

      var curr = Number(new Date());
      var ms = curr - (prevTime || curr);
      self.diff = ms;
      self.prev = prevTime;
      self.curr = curr;
      prevTime = curr;
      args[0] = createDebug.coerce(args[0]);

      if (typeof args[0] !== 'string') {
        // Anything else let's inspect with %O
        args.unshift('%O');
      } // Apply any `formatters` transformations


      var index = 0;
      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {
        // If we encounter an escaped % then don't increase the array index
        if (match === '%%') {
          return '%';
        }

        index++;
        var formatter = createDebug.formatters[format];

        if (typeof formatter === 'function') {
          var val = args[index];
          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`

          args.splice(index, 1);
          index--;
        }

        return match;
      }); // Apply env-specific formatting (colors, etc.)

      createDebug.formatArgs.call(self, args);
      var logFn = self.log || createDebug.log;
      logFn.apply(self, args);
    }

    debug.namespace = namespace;
    debug.useColors = createDebug.useColors();
    debug.color = createDebug.selectColor(namespace);
    debug.extend = extend;
    debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.

    Object.defineProperty(debug, 'enabled', {
      enumerable: true,
      configurable: false,
      get: function get() {
        if (enableOverride !== null) {
          return enableOverride;
        }

        if (namespacesCache !== createDebug.namespaces) {
          namespacesCache = createDebug.namespaces;
          enabledCache = createDebug.enabled(namespace);
        }

        return enabledCache;
      },
      set: function set(v) {
        enableOverride = v;
      }
    }); // Env-specific initialization logic for debug instances

    if (typeof createDebug.init === 'function') {
      createDebug.init(debug);
    }

    return debug;
  }

  function extend(namespace, delimiter) {
    var newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
    newDebug.log = this.log;
    return newDebug;
  }
  /**
  * Enables a debug mode by namespaces. This can include modes
  * separated by a colon and wildcards.
  *
  * @param {String} namespaces
  * @api public
  */


  function enable(namespaces) {
    createDebug.save(namespaces);
    createDebug.namespaces = namespaces;
    createDebug.names = [];
    createDebug.skips = [];
    var i;
    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
    var len = split.length;

    for (i = 0; i < len; i++) {
      if (!split[i]) {
        // ignore empty strings
        continue;
      }

      namespaces = split[i].replace(/\*/g, '.*?');

      if (namespaces[0] === '-') {
        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
      } else {
        createDebug.names.push(new RegExp('^' + namespaces + '$'));
      }
    }
  }
  /**
  * Disable debug output.
  *
  * @return {String} namespaces
  * @api public
  */


  function disable() {
    var namespaces = [].concat(_toConsumableArray(createDebug.names.map(toNamespace)), _toConsumableArray(createDebug.skips.map(toNamespace).map(function (namespace) {
      return '-' + namespace;
    }))).join(',');
    createDebug.enable('');
    return namespaces;
  }
  /**
  * Returns true if the given mode name is enabled, false otherwise.
  *
  * @param {String} name
  * @return {Boolean}
  * @api public
  */


  function enabled(name) {
    if (name[name.length - 1] === '*') {
      return true;
    }

    var i;
    var len;

    for (i = 0, len = createDebug.skips.length; i < len; i++) {
      if (createDebug.skips[i].test(name)) {
        return false;
      }
    }

    for (i = 0, len = createDebug.names.length; i < len; i++) {
      if (createDebug.names[i].test(name)) {
        return true;
      }
    }

    return false;
  }
  /**
  * Convert regexp to namespace
  *
  * @param {RegExp} regxep
  * @return {String} namespace
  * @api private
  */


  function toNamespace(regexp) {
    return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\.\*\?$/, '*');
  }
  /**
  * Coerce `val`.
  *
  * @param {Mixed} val
  * @return {Mixed}
  * @api private
  */


  function coerce(val) {
    if (val instanceof Error) {
      return val.stack || val.message;
    }

    return val;
  }
  /**
  * XXX DO NOT USE. This is a temporary stub function.
  * XXX It WILL be removed in the next major release.
  */


  function destroy() {
    console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
  }

  createDebug.enable(createDebug.load());
  return createDebug;
}

module.exports = setup;

/***/ }),
/* 281 */
/***/ (function(module, exports) {

module.exports = require("tty");

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(31);
/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */


module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }

    return source;
  } // eslint-disable-next-line consistent-return


  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      return getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      return getMergedValue(undefined, config1[prop]);
    }
  } // eslint-disable-next-line consistent-return


  function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      return getMergedValue(undefined, config2[prop]);
    }
  } // eslint-disable-next-line consistent-return


  function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      return getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      return getMergedValue(undefined, config1[prop]);
    }
  } // eslint-disable-next-line consistent-return


  function mergeDirectKeys(prop) {
    if (prop in config2) {
      return getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      return getMergedValue(undefined, config1[prop]);
    }
  }

  var mergeMap = {
    'url': valueFromConfig2,
    'method': valueFromConfig2,
    'data': valueFromConfig2,
    'baseURL': defaultToConfig2,
    'transformRequest': defaultToConfig2,
    'transformResponse': defaultToConfig2,
    'paramsSerializer': defaultToConfig2,
    'timeout': defaultToConfig2,
    'timeoutMessage': defaultToConfig2,
    'withCredentials': defaultToConfig2,
    'adapter': defaultToConfig2,
    'responseType': defaultToConfig2,
    'xsrfCookieName': defaultToConfig2,
    'xsrfHeaderName': defaultToConfig2,
    'onUploadProgress': defaultToConfig2,
    'onDownloadProgress': defaultToConfig2,
    'decompress': defaultToConfig2,
    'maxContentLength': defaultToConfig2,
    'maxBodyLength': defaultToConfig2,
    'transport': defaultToConfig2,
    'httpAgent': defaultToConfig2,
    'httpsAgent': defaultToConfig2,
    'cancelToken': defaultToConfig2,
    'socketPath': defaultToConfig2,
    'responseEncoding': defaultToConfig2,
    'validateStatus': mergeDirectKeys
  };
  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {
    var merge = mergeMap[prop] || mergeDeepProperties;
    var configValue = merge(prop);
    utils.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
  });
  return config;
};

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Load support assets
 */

var classes = __webpack_require__(638);

var helpers = __webpack_require__(649);
/**
 * Export
 */


module.exports = {
  classes: classes,
  helpers: helpers
};

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Split name and email address from string
 */

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

module.exports = function splitNameEmail(str) {
  //If no email bracket present, return as is
  if (str.indexOf('<') === -1) {
    return ['', str];
  } //Split into name and email


  var _str$split = str.split('<'),
      _str$split2 = _slicedToArray(_str$split, 2),
      name = _str$split2[0],
      email = _str$split2[1]; //Trim and fix up


  name = name.trim();
  email = email.replace('>', '').trim(); //Return as array

  return [name, email];
};

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Dependencies
 */

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var EmailAddress = __webpack_require__(210);

var toCamelCase = __webpack_require__(123);

var toSnakeCase = __webpack_require__(164);

var deepClone = __webpack_require__(124);

var deepMerge = __webpack_require__(643);

var wrapSubstitutions = __webpack_require__(287);
/**
 * Personalization class
 */


var Personalization = /*#__PURE__*/function () {
  /**
   * Constructor
   */
  function Personalization(data) {
    _classCallCheck(this, Personalization);

    //Init array and object placeholders
    this.to = [];
    this.cc = [];
    this.bcc = [];
    this.headers = {};
    this.customArgs = {};
    this.substitutions = {};
    this.substitutionWrappers = ['{{', '}}'];
    this.dynamicTemplateData = {}; //Build from data if given

    if (data) {
      this.fromData(data);
    }
  }
  /**
   * From data
   */


  _createClass(Personalization, [{
    key: "fromData",
    value: function fromData(data) {
      //Expecting object
      if (_typeof(data) !== 'object') {
        throw new Error('Expecting object for Mail data');
      } //Convert to camel case to make it workable, making a copy to prevent
      //changes to the original objects


      data = deepClone(data);
      data = toCamelCase(data, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers']); //Extract properties from data

      var _data = data,
          to = _data.to,
          from = _data.from,
          cc = _data.cc,
          bcc = _data.bcc,
          subject = _data.subject,
          headers = _data.headers,
          customArgs = _data.customArgs,
          sendAt = _data.sendAt,
          substitutions = _data.substitutions,
          substitutionWrappers = _data.substitutionWrappers,
          dynamicTemplateData = _data.dynamicTemplateData; //Set data

      this.setTo(to);
      this.setFrom(from);
      this.setCc(cc);
      this.setBcc(bcc);
      this.setSubject(subject);
      this.setHeaders(headers);
      this.setSubstitutions(substitutions);
      this.setSubstitutionWrappers(substitutionWrappers);
      this.setCustomArgs(customArgs);
      this.setDynamicTemplateData(dynamicTemplateData);
      this.setSendAt(sendAt);
    }
    /**
     * Set subject
     */

  }, {
    key: "setSubject",
    value: function setSubject(subject) {
      if (typeof subject === 'undefined') {
        return;
      }

      if (typeof subject !== 'string') {
        throw new Error('String expected for `subject`');
      }

      this.subject = subject;
    }
    /**
     * Set send at
     */

  }, {
    key: "setSendAt",
    value: function setSendAt(sendAt) {
      if (typeof sendAt === 'undefined') {
        return;
      }

      if (!Number.isInteger(sendAt)) {
        throw new Error('Integer expected for `sendAt`');
      }

      this.sendAt = sendAt;
    }
    /**
     * Set to
     */

  }, {
    key: "setTo",
    value: function setTo(to) {
      if (typeof to === 'undefined') {
        return;
      }

      if (!Array.isArray(to)) {
        to = [to];
      }

      this.to = EmailAddress.create(to);
    }
    /**
     * Set from
     * */

  }, {
    key: "setFrom",
    value: function setFrom(from) {
      if (typeof from === 'undefined') {
        return;
      }

      this.from = EmailAddress.create(from);
    }
    /**
     * Add a single to
     */

  }, {
    key: "addTo",
    value: function addTo(to) {
      if (typeof to === 'undefined') {
        return;
      }

      this.to.push(EmailAddress.create(to));
    }
    /**
     * Set cc
     */

  }, {
    key: "setCc",
    value: function setCc(cc) {
      if (typeof cc === 'undefined') {
        return;
      }

      if (!Array.isArray(cc)) {
        cc = [cc];
      }

      this.cc = EmailAddress.create(cc);
    }
    /**
     * Add a single cc
     */

  }, {
    key: "addCc",
    value: function addCc(cc) {
      if (typeof cc === 'undefined') {
        return;
      }

      this.cc.push(EmailAddress.create(cc));
    }
    /**
     * Set bcc
     */

  }, {
    key: "setBcc",
    value: function setBcc(bcc) {
      if (typeof bcc === 'undefined') {
        return;
      }

      if (!Array.isArray(bcc)) {
        bcc = [bcc];
      }

      this.bcc = EmailAddress.create(bcc);
    }
    /**
     * Add a single bcc
     */

  }, {
    key: "addBcc",
    value: function addBcc(bcc) {
      if (typeof bcc === 'undefined') {
        return;
      }

      this.bcc.push(EmailAddress.create(bcc));
    }
    /**
     * Set headers
     */

  }, {
    key: "setHeaders",
    value: function setHeaders(headers) {
      if (typeof headers === 'undefined') {
        return;
      }

      if (_typeof(headers) !== 'object' || headers === null) {
        throw new Error('Object expected for `headers`');
      }

      this.headers = headers;
    }
    /**
     * Add a header
     */

  }, {
    key: "addHeader",
    value: function addHeader(key, value) {
      if (typeof key !== 'string') {
        throw new Error('String expected for header key');
      }

      if (typeof value !== 'string') {
        throw new Error('String expected for header value');
      }

      this.headers[key] = value;
    }
    /**
     * Set custom args
     */

  }, {
    key: "setCustomArgs",
    value: function setCustomArgs(customArgs) {
      if (typeof customArgs === 'undefined') {
        return;
      }

      if (_typeof(customArgs) !== 'object' || customArgs === null) {
        throw new Error('Object expected for `customArgs`');
      }

      this.customArgs = customArgs;
    }
    /**
     * Add a custom arg
     */

  }, {
    key: "addCustomArg",
    value: function addCustomArg(key, value) {
      if (typeof key !== 'string') {
        throw new Error('String expected for custom arg key');
      }

      if (typeof value !== 'string') {
        throw new Error('String expected for custom arg value');
      }

      this.customArgs[key] = value;
    }
    /**
     * Set substitutions
     */

  }, {
    key: "setSubstitutions",
    value: function setSubstitutions(substitutions) {
      if (typeof substitutions === 'undefined') {
        return;
      }

      if (_typeof(substitutions) !== 'object') {
        throw new Error('Object expected for `substitutions`');
      }

      this.substitutions = substitutions;
    }
    /**
     * Add a substitution
     */

  }, {
    key: "addSubstitution",
    value: function addSubstitution(key, value) {
      if (typeof key !== 'string') {
        throw new Error('String expected for substitution key');
      }

      if (typeof value !== 'string' && typeof value !== 'number') {
        throw new Error('String or Number expected for substitution value');
      }

      this.substitutions[key] = value;
    }
    /**
     * Reverse merge substitutions, preserving existing ones
     */

  }, {
    key: "reverseMergeSubstitutions",
    value: function reverseMergeSubstitutions(substitutions) {
      if (typeof substitutions === 'undefined' || substitutions === null) {
        return;
      }

      if (_typeof(substitutions) !== 'object') {
        throw new Error('Object expected for `substitutions` in reverseMergeSubstitutions');
      }

      this.substitutions = Object.assign({}, substitutions, this.substitutions);
    }
    /**
     * Set substitution wrappers
     */

  }, {
    key: "setSubstitutionWrappers",
    value: function setSubstitutionWrappers(wrappers) {
      if (typeof wrappers === 'undefined' || wrappers === null) {
        return;
      }

      if (!Array.isArray(wrappers) || wrappers.length !== 2) {
        throw new Error('Array expected with two elements for `substitutionWrappers`');
      }

      this.substitutionWrappers = wrappers;
    }
    /**
     * Reverse merge dynamic template data, preserving existing ones
     */

  }, {
    key: "deepMergeDynamicTemplateData",
    value: function deepMergeDynamicTemplateData(dynamicTemplateData) {
      if (typeof dynamicTemplateData === 'undefined' || dynamicTemplateData === null) {
        return;
      }

      if (_typeof(dynamicTemplateData) !== 'object') {
        throw new Error('Object expected for `dynamicTemplateData` in deepMergeDynamicTemplateData');
      }

      this.dynamicTemplateData = deepMerge(dynamicTemplateData, this.dynamicTemplateData);
    }
    /**
     * Set dynamic template data
     */

  }, {
    key: "setDynamicTemplateData",
    value: function setDynamicTemplateData(dynamicTemplateData) {
      if (typeof dynamicTemplateData === 'undefined') {
        return;
      }

      if (_typeof(dynamicTemplateData) !== 'object') {
        throw new Error('Object expected for `dynamicTemplateData`');
      }

      this.dynamicTemplateData = dynamicTemplateData;
    }
    /**
     * To JSON
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      //Get data from self
      var to = this.to,
          from = this.from,
          cc = this.cc,
          bcc = this.bcc,
          subject = this.subject,
          headers = this.headers,
          customArgs = this.customArgs,
          sendAt = this.sendAt,
          substitutions = this.substitutions,
          substitutionWrappers = this.substitutionWrappers,
          dynamicTemplateData = this.dynamicTemplateData; //Initialize with mandatory values

      var json = {
        to: to
      }; //Arrays

      if (Array.isArray(cc) && cc.length > 0) {
        json.cc = cc;
      }

      if (Array.isArray(bcc) && bcc.length > 0) {
        json.bcc = bcc;
      } //Objects


      if (Object.keys(headers).length > 0) {
        json.headers = headers;
      }

      if (substitutions && Object.keys(substitutions).length > 0) {
        var _substitutionWrappers = _slicedToArray(substitutionWrappers, 2),
            left = _substitutionWrappers[0],
            right = _substitutionWrappers[1];

        json.substitutions = wrapSubstitutions(substitutions, left, right);
      }

      if (Object.keys(customArgs).length > 0) {
        json.customArgs = customArgs;
      }

      if (dynamicTemplateData && Object.keys(dynamicTemplateData).length > 0) {
        json.dynamicTemplateData = dynamicTemplateData;
      } //Simple properties


      if (typeof subject !== 'undefined') {
        json.subject = subject;
      }

      if (typeof sendAt !== 'undefined') {
        json.sendAt = sendAt;
      }

      if (typeof from !== 'undefined') {
        json.from = from;
      } //Return as snake cased object


      return toSnakeCase(json, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers']);
    }
  }]);

  return Personalization;
}(); //Export class


module.exports = Personalization;

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Wrap substitutions
 */

module.exports = function wrap(substitutions) {
  var left = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '{{';
  var right = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '}}';

  //Process arrays
  if (Array.isArray(substitutions)) {
    return substitutions.map(function (subs) {
      return wrap(subs, left, right);
    });
  } //Initialize new wrapped object


  var wrapped = {}; //Map substitutions and ensure string for value

  for (var key in substitutions) {
    //istanbul ignore else
    if (substitutions.hasOwnProperty(key)) {
      wrapped[left + key + right] = String(substitutions[key]);
    }
  } //Return wrapped substitutions


  return wrapped;
};

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Helper to convert an array of objects to JSON
 */

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

module.exports = function arrayToJSON(arr) {
  return arr.map(function (item) {
    if (_typeof(item) === 'object' && item !== null && typeof item.toJSON === 'function') {
      return item.toJSON();
    }

    return item;
  });
};

/***/ }),
/* 289 */
/***/ (function(module, exports) {

module.exports = require("dns");

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* eslint quote-props: 0 */


var path = __webpack_require__(126);

var defaultMimeType = 'application/octet-stream';
var defaultExtension = 'bin';
var mimeTypes = new Map([['application/acad', 'dwg'], ['application/applixware', 'aw'], ['application/arj', 'arj'], ['application/atom+xml', 'xml'], ['application/atomcat+xml', 'atomcat'], ['application/atomsvc+xml', 'atomsvc'], ['application/base64', ['mm', 'mme']], ['application/binhex', 'hqx'], ['application/binhex4', 'hqx'], ['application/book', ['book', 'boo']], ['application/ccxml+xml,', 'ccxml'], ['application/cdf', 'cdf'], ['application/cdmi-capability', 'cdmia'], ['application/cdmi-container', 'cdmic'], ['application/cdmi-domain', 'cdmid'], ['application/cdmi-object', 'cdmio'], ['application/cdmi-queue', 'cdmiq'], ['application/clariscad', 'ccad'], ['application/commonground', 'dp'], ['application/cu-seeme', 'cu'], ['application/davmount+xml', 'davmount'], ['application/drafting', 'drw'], ['application/dsptype', 'tsp'], ['application/dssc+der', 'dssc'], ['application/dssc+xml', 'xdssc'], ['application/dxf', 'dxf'], ['application/ecmascript', ['js', 'es']], ['application/emma+xml', 'emma'], ['application/envoy', 'evy'], ['application/epub+zip', 'epub'], ['application/excel', ['xls', 'xl', 'xla', 'xlb', 'xlc', 'xld', 'xlk', 'xll', 'xlm', 'xlt', 'xlv', 'xlw']], ['application/exi', 'exi'], ['application/font-tdpfr', 'pfr'], ['application/fractals', 'fif'], ['application/freeloader', 'frl'], ['application/futuresplash', 'spl'], ['application/gnutar', 'tgz'], ['application/groupwise', 'vew'], ['application/hlp', 'hlp'], ['application/hta', 'hta'], ['application/hyperstudio', 'stk'], ['application/i-deas', 'unv'], ['application/iges', ['iges', 'igs']], ['application/inf', 'inf'], ['application/internet-property-stream', 'acx'], ['application/ipfix', 'ipfix'], ['application/java', 'class'], ['application/java-archive', 'jar'], ['application/java-byte-code', 'class'], ['application/java-serialized-object', 'ser'], ['application/java-vm', 'class'], ['application/javascript', 'js'], ['application/json', 'json'], ['application/lha', 'lha'], ['application/lzx', 'lzx'], ['application/mac-binary', 'bin'], ['application/mac-binhex', 'hqx'], ['application/mac-binhex40', 'hqx'], ['application/mac-compactpro', 'cpt'], ['application/macbinary', 'bin'], ['application/mads+xml', 'mads'], ['application/marc', 'mrc'], ['application/marcxml+xml', 'mrcx'], ['application/mathematica', 'ma'], ['application/mathml+xml', 'mathml'], ['application/mbedlet', 'mbd'], ['application/mbox', 'mbox'], ['application/mcad', 'mcd'], ['application/mediaservercontrol+xml', 'mscml'], ['application/metalink4+xml', 'meta4'], ['application/mets+xml', 'mets'], ['application/mime', 'aps'], ['application/mods+xml', 'mods'], ['application/mp21', 'm21'], ['application/mp4', 'mp4'], ['application/mspowerpoint', ['ppt', 'pot', 'pps', 'ppz']], ['application/msword', ['doc', 'dot', 'w6w', 'wiz', 'word']], ['application/mswrite', 'wri'], ['application/mxf', 'mxf'], ['application/netmc', 'mcp'], ['application/octet-stream', ['*']], ['application/oda', 'oda'], ['application/oebps-package+xml', 'opf'], ['application/ogg', 'ogx'], ['application/olescript', 'axs'], ['application/onenote', 'onetoc'], ['application/patch-ops-error+xml', 'xer'], ['application/pdf', 'pdf'], ['application/pgp-encrypted', 'asc'], ['application/pgp-signature', 'pgp'], ['application/pics-rules', 'prf'], ['application/pkcs-12', 'p12'], ['application/pkcs-crl', 'crl'], ['application/pkcs10', 'p10'], ['application/pkcs7-mime', ['p7c', 'p7m']], ['application/pkcs7-signature', 'p7s'], ['application/pkcs8', 'p8'], ['application/pkix-attr-cert', 'ac'], ['application/pkix-cert', ['cer', 'crt']], ['application/pkix-crl', 'crl'], ['application/pkix-pkipath', 'pkipath'], ['application/pkixcmp', 'pki'], ['application/plain', 'text'], ['application/pls+xml', 'pls'], ['application/postscript', ['ps', 'ai', 'eps']], ['application/powerpoint', 'ppt'], ['application/pro_eng', ['part', 'prt']], ['application/prs.cww', 'cww'], ['application/pskc+xml', 'pskcxml'], ['application/rdf+xml', 'rdf'], ['application/reginfo+xml', 'rif'], ['application/relax-ng-compact-syntax', 'rnc'], ['application/resource-lists+xml', 'rl'], ['application/resource-lists-diff+xml', 'rld'], ['application/ringing-tones', 'rng'], ['application/rls-services+xml', 'rs'], ['application/rsd+xml', 'rsd'], ['application/rss+xml', 'xml'], ['application/rtf', ['rtf', 'rtx']], ['application/sbml+xml', 'sbml'], ['application/scvp-cv-request', 'scq'], ['application/scvp-cv-response', 'scs'], ['application/scvp-vp-request', 'spq'], ['application/scvp-vp-response', 'spp'], ['application/sdp', 'sdp'], ['application/sea', 'sea'], ['application/set', 'set'], ['application/set-payment-initiation', 'setpay'], ['application/set-registration-initiation', 'setreg'], ['application/shf+xml', 'shf'], ['application/sla', 'stl'], ['application/smil', ['smi', 'smil']], ['application/smil+xml', 'smi'], ['application/solids', 'sol'], ['application/sounder', 'sdr'], ['application/sparql-query', 'rq'], ['application/sparql-results+xml', 'srx'], ['application/srgs', 'gram'], ['application/srgs+xml', 'grxml'], ['application/sru+xml', 'sru'], ['application/ssml+xml', 'ssml'], ['application/step', ['step', 'stp']], ['application/streamingmedia', 'ssm'], ['application/tei+xml', 'tei'], ['application/thraud+xml', 'tfi'], ['application/timestamped-data', 'tsd'], ['application/toolbook', 'tbk'], ['application/vda', 'vda'], ['application/vnd.3gpp.pic-bw-large', 'plb'], ['application/vnd.3gpp.pic-bw-small', 'psb'], ['application/vnd.3gpp.pic-bw-var', 'pvb'], ['application/vnd.3gpp2.tcap', 'tcap'], ['application/vnd.3m.post-it-notes', 'pwn'], ['application/vnd.accpac.simply.aso', 'aso'], ['application/vnd.accpac.simply.imp', 'imp'], ['application/vnd.acucobol', 'acu'], ['application/vnd.acucorp', 'atc'], ['application/vnd.adobe.air-application-installer-package+zip', 'air'], ['application/vnd.adobe.fxp', 'fxp'], ['application/vnd.adobe.xdp+xml', 'xdp'], ['application/vnd.adobe.xfdf', 'xfdf'], ['application/vnd.ahead.space', 'ahead'], ['application/vnd.airzip.filesecure.azf', 'azf'], ['application/vnd.airzip.filesecure.azs', 'azs'], ['application/vnd.amazon.ebook', 'azw'], ['application/vnd.americandynamics.acc', 'acc'], ['application/vnd.amiga.ami', 'ami'], ['application/vnd.android.package-archive', 'apk'], ['application/vnd.anser-web-certificate-issue-initiation', 'cii'], ['application/vnd.anser-web-funds-transfer-initiation', 'fti'], ['application/vnd.antix.game-component', 'atx'], ['application/vnd.apple.installer+xml', 'mpkg'], ['application/vnd.apple.mpegurl', 'm3u8'], ['application/vnd.aristanetworks.swi', 'swi'], ['application/vnd.audiograph', 'aep'], ['application/vnd.blueice.multipass', 'mpm'], ['application/vnd.bmi', 'bmi'], ['application/vnd.businessobjects', 'rep'], ['application/vnd.chemdraw+xml', 'cdxml'], ['application/vnd.chipnuts.karaoke-mmd', 'mmd'], ['application/vnd.cinderella', 'cdy'], ['application/vnd.claymore', 'cla'], ['application/vnd.cloanto.rp9', 'rp9'], ['application/vnd.clonk.c4group', 'c4g'], ['application/vnd.cluetrust.cartomobile-config', 'c11amc'], ['application/vnd.cluetrust.cartomobile-config-pkg', 'c11amz'], ['application/vnd.commonspace', 'csp'], ['application/vnd.contact.cmsg', 'cdbcmsg'], ['application/vnd.cosmocaller', 'cmc'], ['application/vnd.crick.clicker', 'clkx'], ['application/vnd.crick.clicker.keyboard', 'clkk'], ['application/vnd.crick.clicker.palette', 'clkp'], ['application/vnd.crick.clicker.template', 'clkt'], ['application/vnd.crick.clicker.wordbank', 'clkw'], ['application/vnd.criticaltools.wbs+xml', 'wbs'], ['application/vnd.ctc-posml', 'pml'], ['application/vnd.cups-ppd', 'ppd'], ['application/vnd.curl.car', 'car'], ['application/vnd.curl.pcurl', 'pcurl'], ['application/vnd.data-vision.rdz', 'rdz'], ['application/vnd.denovo.fcselayout-link', 'fe_launch'], ['application/vnd.dna', 'dna'], ['application/vnd.dolby.mlp', 'mlp'], ['application/vnd.dpgraph', 'dpg'], ['application/vnd.dreamfactory', 'dfac'], ['application/vnd.dvb.ait', 'ait'], ['application/vnd.dvb.service', 'svc'], ['application/vnd.dynageo', 'geo'], ['application/vnd.ecowin.chart', 'mag'], ['application/vnd.enliven', 'nml'], ['application/vnd.epson.esf', 'esf'], ['application/vnd.epson.msf', 'msf'], ['application/vnd.epson.quickanime', 'qam'], ['application/vnd.epson.salt', 'slt'], ['application/vnd.epson.ssf', 'ssf'], ['application/vnd.eszigno3+xml', 'es3'], ['application/vnd.ezpix-album', 'ez2'], ['application/vnd.ezpix-package', 'ez3'], ['application/vnd.fdf', 'fdf'], ['application/vnd.fdsn.seed', 'seed'], ['application/vnd.flographit', 'gph'], ['application/vnd.fluxtime.clip', 'ftc'], ['application/vnd.framemaker', 'fm'], ['application/vnd.frogans.fnc', 'fnc'], ['application/vnd.frogans.ltf', 'ltf'], ['application/vnd.fsc.weblaunch', 'fsc'], ['application/vnd.fujitsu.oasys', 'oas'], ['application/vnd.fujitsu.oasys2', 'oa2'], ['application/vnd.fujitsu.oasys3', 'oa3'], ['application/vnd.fujitsu.oasysgp', 'fg5'], ['application/vnd.fujitsu.oasysprs', 'bh2'], ['application/vnd.fujixerox.ddd', 'ddd'], ['application/vnd.fujixerox.docuworks', 'xdw'], ['application/vnd.fujixerox.docuworks.binder', 'xbd'], ['application/vnd.fuzzysheet', 'fzs'], ['application/vnd.genomatix.tuxedo', 'txd'], ['application/vnd.geogebra.file', 'ggb'], ['application/vnd.geogebra.tool', 'ggt'], ['application/vnd.geometry-explorer', 'gex'], ['application/vnd.geonext', 'gxt'], ['application/vnd.geoplan', 'g2w'], ['application/vnd.geospace', 'g3w'], ['application/vnd.gmx', 'gmx'], ['application/vnd.google-earth.kml+xml', 'kml'], ['application/vnd.google-earth.kmz', 'kmz'], ['application/vnd.grafeq', 'gqf'], ['application/vnd.groove-account', 'gac'], ['application/vnd.groove-help', 'ghf'], ['application/vnd.groove-identity-message', 'gim'], ['application/vnd.groove-injector', 'grv'], ['application/vnd.groove-tool-message', 'gtm'], ['application/vnd.groove-tool-template', 'tpl'], ['application/vnd.groove-vcard', 'vcg'], ['application/vnd.hal+xml', 'hal'], ['application/vnd.handheld-entertainment+xml', 'zmm'], ['application/vnd.hbci', 'hbci'], ['application/vnd.hhe.lesson-player', 'les'], ['application/vnd.hp-hpgl', ['hgl', 'hpg', 'hpgl']], ['application/vnd.hp-hpid', 'hpid'], ['application/vnd.hp-hps', 'hps'], ['application/vnd.hp-jlyt', 'jlt'], ['application/vnd.hp-pcl', 'pcl'], ['application/vnd.hp-pclxl', 'pclxl'], ['application/vnd.hydrostatix.sof-data', 'sfd-hdstx'], ['application/vnd.hzn-3d-crossword', 'x3d'], ['application/vnd.ibm.minipay', 'mpy'], ['application/vnd.ibm.modcap', 'afp'], ['application/vnd.ibm.rights-management', 'irm'], ['application/vnd.ibm.secure-container', 'sc'], ['application/vnd.iccprofile', 'icc'], ['application/vnd.igloader', 'igl'], ['application/vnd.immervision-ivp', 'ivp'], ['application/vnd.immervision-ivu', 'ivu'], ['application/vnd.insors.igm', 'igm'], ['application/vnd.intercon.formnet', 'xpw'], ['application/vnd.intergeo', 'i2g'], ['application/vnd.intu.qbo', 'qbo'], ['application/vnd.intu.qfx', 'qfx'], ['application/vnd.ipunplugged.rcprofile', 'rcprofile'], ['application/vnd.irepository.package+xml', 'irp'], ['application/vnd.is-xpr', 'xpr'], ['application/vnd.isac.fcs', 'fcs'], ['application/vnd.jam', 'jam'], ['application/vnd.jcp.javame.midlet-rms', 'rms'], ['application/vnd.jisp', 'jisp'], ['application/vnd.joost.joda-archive', 'joda'], ['application/vnd.kahootz', 'ktz'], ['application/vnd.kde.karbon', 'karbon'], ['application/vnd.kde.kchart', 'chrt'], ['application/vnd.kde.kformula', 'kfo'], ['application/vnd.kde.kivio', 'flw'], ['application/vnd.kde.kontour', 'kon'], ['application/vnd.kde.kpresenter', 'kpr'], ['application/vnd.kde.kspread', 'ksp'], ['application/vnd.kde.kword', 'kwd'], ['application/vnd.kenameaapp', 'htke'], ['application/vnd.kidspiration', 'kia'], ['application/vnd.kinar', 'kne'], ['application/vnd.koan', 'skp'], ['application/vnd.kodak-descriptor', 'sse'], ['application/vnd.las.las+xml', 'lasxml'], ['application/vnd.llamagraphics.life-balance.desktop', 'lbd'], ['application/vnd.llamagraphics.life-balance.exchange+xml', 'lbe'], ['application/vnd.lotus-1-2-3', '123'], ['application/vnd.lotus-approach', 'apr'], ['application/vnd.lotus-freelance', 'pre'], ['application/vnd.lotus-notes', 'nsf'], ['application/vnd.lotus-organizer', 'org'], ['application/vnd.lotus-screencam', 'scm'], ['application/vnd.lotus-wordpro', 'lwp'], ['application/vnd.macports.portpkg', 'portpkg'], ['application/vnd.mcd', 'mcd'], ['application/vnd.medcalcdata', 'mc1'], ['application/vnd.mediastation.cdkey', 'cdkey'], ['application/vnd.mfer', 'mwf'], ['application/vnd.mfmp', 'mfm'], ['application/vnd.micrografx.flo', 'flo'], ['application/vnd.micrografx.igx', 'igx'], ['application/vnd.mif', 'mif'], ['application/vnd.mobius.daf', 'daf'], ['application/vnd.mobius.dis', 'dis'], ['application/vnd.mobius.mbk', 'mbk'], ['application/vnd.mobius.mqy', 'mqy'], ['application/vnd.mobius.msl', 'msl'], ['application/vnd.mobius.plc', 'plc'], ['application/vnd.mobius.txf', 'txf'], ['application/vnd.mophun.application', 'mpn'], ['application/vnd.mophun.certificate', 'mpc'], ['application/vnd.mozilla.xul+xml', 'xul'], ['application/vnd.ms-artgalry', 'cil'], ['application/vnd.ms-cab-compressed', 'cab'], ['application/vnd.ms-excel', ['xls', 'xla', 'xlc', 'xlm', 'xlt', 'xlw', 'xlb', 'xll']], ['application/vnd.ms-excel.addin.macroenabled.12', 'xlam'], ['application/vnd.ms-excel.sheet.binary.macroenabled.12', 'xlsb'], ['application/vnd.ms-excel.sheet.macroenabled.12', 'xlsm'], ['application/vnd.ms-excel.template.macroenabled.12', 'xltm'], ['application/vnd.ms-fontobject', 'eot'], ['application/vnd.ms-htmlhelp', 'chm'], ['application/vnd.ms-ims', 'ims'], ['application/vnd.ms-lrm', 'lrm'], ['application/vnd.ms-officetheme', 'thmx'], ['application/vnd.ms-outlook', 'msg'], ['application/vnd.ms-pki.certstore', 'sst'], ['application/vnd.ms-pki.pko', 'pko'], ['application/vnd.ms-pki.seccat', 'cat'], ['application/vnd.ms-pki.stl', 'stl'], ['application/vnd.ms-pkicertstore', 'sst'], ['application/vnd.ms-pkiseccat', 'cat'], ['application/vnd.ms-pkistl', 'stl'], ['application/vnd.ms-powerpoint', ['ppt', 'pot', 'pps', 'ppa', 'pwz']], ['application/vnd.ms-powerpoint.addin.macroenabled.12', 'ppam'], ['application/vnd.ms-powerpoint.presentation.macroenabled.12', 'pptm'], ['application/vnd.ms-powerpoint.slide.macroenabled.12', 'sldm'], ['application/vnd.ms-powerpoint.slideshow.macroenabled.12', 'ppsm'], ['application/vnd.ms-powerpoint.template.macroenabled.12', 'potm'], ['application/vnd.ms-project', 'mpp'], ['application/vnd.ms-word.document.macroenabled.12', 'docm'], ['application/vnd.ms-word.template.macroenabled.12', 'dotm'], ['application/vnd.ms-works', ['wks', 'wcm', 'wdb', 'wps']], ['application/vnd.ms-wpl', 'wpl'], ['application/vnd.ms-xpsdocument', 'xps'], ['application/vnd.mseq', 'mseq'], ['application/vnd.musician', 'mus'], ['application/vnd.muvee.style', 'msty'], ['application/vnd.neurolanguage.nlu', 'nlu'], ['application/vnd.noblenet-directory', 'nnd'], ['application/vnd.noblenet-sealer', 'nns'], ['application/vnd.noblenet-web', 'nnw'], ['application/vnd.nokia.configuration-message', 'ncm'], ['application/vnd.nokia.n-gage.data', 'ngdat'], ['application/vnd.nokia.n-gage.symbian.install', 'n-gage'], ['application/vnd.nokia.radio-preset', 'rpst'], ['application/vnd.nokia.radio-presets', 'rpss'], ['application/vnd.nokia.ringing-tone', 'rng'], ['application/vnd.novadigm.edm', 'edm'], ['application/vnd.novadigm.edx', 'edx'], ['application/vnd.novadigm.ext', 'ext'], ['application/vnd.oasis.opendocument.chart', 'odc'], ['application/vnd.oasis.opendocument.chart-template', 'otc'], ['application/vnd.oasis.opendocument.database', 'odb'], ['application/vnd.oasis.opendocument.formula', 'odf'], ['application/vnd.oasis.opendocument.formula-template', 'odft'], ['application/vnd.oasis.opendocument.graphics', 'odg'], ['application/vnd.oasis.opendocument.graphics-template', 'otg'], ['application/vnd.oasis.opendocument.image', 'odi'], ['application/vnd.oasis.opendocument.image-template', 'oti'], ['application/vnd.oasis.opendocument.presentation', 'odp'], ['application/vnd.oasis.opendocument.presentation-template', 'otp'], ['application/vnd.oasis.opendocument.spreadsheet', 'ods'], ['application/vnd.oasis.opendocument.spreadsheet-template', 'ots'], ['application/vnd.oasis.opendocument.text', 'odt'], ['application/vnd.oasis.opendocument.text-master', 'odm'], ['application/vnd.oasis.opendocument.text-template', 'ott'], ['application/vnd.oasis.opendocument.text-web', 'oth'], ['application/vnd.olpc-sugar', 'xo'], ['application/vnd.oma.dd2+xml', 'dd2'], ['application/vnd.openofficeorg.extension', 'oxt'], ['application/vnd.openxmlformats-officedocument.presentationml.presentation', 'pptx'], ['application/vnd.openxmlformats-officedocument.presentationml.slide', 'sldx'], ['application/vnd.openxmlformats-officedocument.presentationml.slideshow', 'ppsx'], ['application/vnd.openxmlformats-officedocument.presentationml.template', 'potx'], ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'xlsx'], ['application/vnd.openxmlformats-officedocument.spreadsheetml.template', 'xltx'], ['application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'docx'], ['application/vnd.openxmlformats-officedocument.wordprocessingml.template', 'dotx'], ['application/vnd.osgeo.mapguide.package', 'mgp'], ['application/vnd.osgi.dp', 'dp'], ['application/vnd.palm', 'pdb'], ['application/vnd.pawaafile', 'paw'], ['application/vnd.pg.format', 'str'], ['application/vnd.pg.osasli', 'ei6'], ['application/vnd.picsel', 'efif'], ['application/vnd.pmi.widget', 'wg'], ['application/vnd.pocketlearn', 'plf'], ['application/vnd.powerbuilder6', 'pbd'], ['application/vnd.previewsystems.box', 'box'], ['application/vnd.proteus.magazine', 'mgz'], ['application/vnd.publishare-delta-tree', 'qps'], ['application/vnd.pvi.ptid1', 'ptid'], ['application/vnd.quark.quarkxpress', 'qxd'], ['application/vnd.realvnc.bed', 'bed'], ['application/vnd.recordare.musicxml', 'mxl'], ['application/vnd.recordare.musicxml+xml', 'musicxml'], ['application/vnd.rig.cryptonote', 'cryptonote'], ['application/vnd.rim.cod', 'cod'], ['application/vnd.rn-realmedia', 'rm'], ['application/vnd.rn-realplayer', 'rnx'], ['application/vnd.route66.link66+xml', 'link66'], ['application/vnd.sailingtracker.track', 'st'], ['application/vnd.seemail', 'see'], ['application/vnd.sema', 'sema'], ['application/vnd.semd', 'semd'], ['application/vnd.semf', 'semf'], ['application/vnd.shana.informed.formdata', 'ifm'], ['application/vnd.shana.informed.formtemplate', 'itp'], ['application/vnd.shana.informed.interchange', 'iif'], ['application/vnd.shana.informed.package', 'ipk'], ['application/vnd.simtech-mindmapper', 'twd'], ['application/vnd.smaf', 'mmf'], ['application/vnd.smart.teacher', 'teacher'], ['application/vnd.solent.sdkm+xml', 'sdkm'], ['application/vnd.spotfire.dxp', 'dxp'], ['application/vnd.spotfire.sfs', 'sfs'], ['application/vnd.stardivision.calc', 'sdc'], ['application/vnd.stardivision.draw', 'sda'], ['application/vnd.stardivision.impress', 'sdd'], ['application/vnd.stardivision.math', 'smf'], ['application/vnd.stardivision.writer', 'sdw'], ['application/vnd.stardivision.writer-global', 'sgl'], ['application/vnd.stepmania.stepchart', 'sm'], ['application/vnd.sun.xml.calc', 'sxc'], ['application/vnd.sun.xml.calc.template', 'stc'], ['application/vnd.sun.xml.draw', 'sxd'], ['application/vnd.sun.xml.draw.template', 'std'], ['application/vnd.sun.xml.impress', 'sxi'], ['application/vnd.sun.xml.impress.template', 'sti'], ['application/vnd.sun.xml.math', 'sxm'], ['application/vnd.sun.xml.writer', 'sxw'], ['application/vnd.sun.xml.writer.global', 'sxg'], ['application/vnd.sun.xml.writer.template', 'stw'], ['application/vnd.sus-calendar', 'sus'], ['application/vnd.svd', 'svd'], ['application/vnd.symbian.install', 'sis'], ['application/vnd.syncml+xml', 'xsm'], ['application/vnd.syncml.dm+wbxml', 'bdm'], ['application/vnd.syncml.dm+xml', 'xdm'], ['application/vnd.tao.intent-module-archive', 'tao'], ['application/vnd.tmobile-livetv', 'tmo'], ['application/vnd.trid.tpt', 'tpt'], ['application/vnd.triscape.mxs', 'mxs'], ['application/vnd.trueapp', 'tra'], ['application/vnd.ufdl', 'ufd'], ['application/vnd.uiq.theme', 'utz'], ['application/vnd.umajin', 'umj'], ['application/vnd.unity', 'unityweb'], ['application/vnd.uoml+xml', 'uoml'], ['application/vnd.vcx', 'vcx'], ['application/vnd.visio', 'vsd'], ['application/vnd.visionary', 'vis'], ['application/vnd.vsf', 'vsf'], ['application/vnd.wap.wbxml', 'wbxml'], ['application/vnd.wap.wmlc', 'wmlc'], ['application/vnd.wap.wmlscriptc', 'wmlsc'], ['application/vnd.webturbo', 'wtb'], ['application/vnd.wolfram.player', 'nbp'], ['application/vnd.wordperfect', 'wpd'], ['application/vnd.wqd', 'wqd'], ['application/vnd.wt.stf', 'stf'], ['application/vnd.xara', ['web', 'xar']], ['application/vnd.xfdl', 'xfdl'], ['application/vnd.yamaha.hv-dic', 'hvd'], ['application/vnd.yamaha.hv-script', 'hvs'], ['application/vnd.yamaha.hv-voice', 'hvp'], ['application/vnd.yamaha.openscoreformat', 'osf'], ['application/vnd.yamaha.openscoreformat.osfpvg+xml', 'osfpvg'], ['application/vnd.yamaha.smaf-audio', 'saf'], ['application/vnd.yamaha.smaf-phrase', 'spf'], ['application/vnd.yellowriver-custom-menu', 'cmp'], ['application/vnd.zul', 'zir'], ['application/vnd.zzazz.deck+xml', 'zaz'], ['application/vocaltec-media-desc', 'vmd'], ['application/vocaltec-media-file', 'vmf'], ['application/voicexml+xml', 'vxml'], ['application/widget', 'wgt'], ['application/winhlp', 'hlp'], ['application/wordperfect', ['wp', 'wp5', 'wp6', 'wpd']], ['application/wordperfect6.0', ['w60', 'wp5']], ['application/wordperfect6.1', 'w61'], ['application/wsdl+xml', 'wsdl'], ['application/wspolicy+xml', 'wspolicy'], ['application/x-123', 'wk1'], ['application/x-7z-compressed', '7z'], ['application/x-abiword', 'abw'], ['application/x-ace-compressed', 'ace'], ['application/x-aim', 'aim'], ['application/x-authorware-bin', 'aab'], ['application/x-authorware-map', 'aam'], ['application/x-authorware-seg', 'aas'], ['application/x-bcpio', 'bcpio'], ['application/x-binary', 'bin'], ['application/x-binhex40', 'hqx'], ['application/x-bittorrent', 'torrent'], ['application/x-bsh', ['bsh', 'sh', 'shar']], ['application/x-bytecode.elisp', 'elc'], ['applicaiton/x-bytecode.python', 'pyc'], ['application/x-bzip', 'bz'], ['application/x-bzip2', ['boz', 'bz2']], ['application/x-cdf', 'cdf'], ['application/x-cdlink', 'vcd'], ['application/x-chat', ['cha', 'chat']], ['application/x-chess-pgn', 'pgn'], ['application/x-cmu-raster', 'ras'], ['application/x-cocoa', 'cco'], ['application/x-compactpro', 'cpt'], ['application/x-compress', 'z'], ['application/x-compressed', ['tgz', 'gz', 'z', 'zip']], ['application/x-conference', 'nsc'], ['application/x-cpio', 'cpio'], ['application/x-cpt', 'cpt'], ['application/x-csh', 'csh'], ['application/x-debian-package', 'deb'], ['application/x-deepv', 'deepv'], ['application/x-director', ['dir', 'dcr', 'dxr']], ['application/x-doom', 'wad'], ['application/x-dtbncx+xml', 'ncx'], ['application/x-dtbook+xml', 'dtb'], ['application/x-dtbresource+xml', 'res'], ['application/x-dvi', 'dvi'], ['application/x-elc', 'elc'], ['application/x-envoy', ['env', 'evy']], ['application/x-esrehber', 'es'], ['application/x-excel', ['xls', 'xla', 'xlb', 'xlc', 'xld', 'xlk', 'xll', 'xlm', 'xlt', 'xlv', 'xlw']], ['application/x-font-bdf', 'bdf'], ['application/x-font-ghostscript', 'gsf'], ['application/x-font-linux-psf', 'psf'], ['application/x-font-otf', 'otf'], ['application/x-font-pcf', 'pcf'], ['application/x-font-snf', 'snf'], ['application/x-font-ttf', 'ttf'], ['application/x-font-type1', 'pfa'], ['application/x-font-woff', 'woff'], ['application/x-frame', 'mif'], ['application/x-freelance', 'pre'], ['application/x-futuresplash', 'spl'], ['application/x-gnumeric', 'gnumeric'], ['application/x-gsp', 'gsp'], ['application/x-gss', 'gss'], ['application/x-gtar', 'gtar'], ['application/x-gzip', ['gz', 'gzip']], ['application/x-hdf', 'hdf'], ['application/x-helpfile', ['help', 'hlp']], ['application/x-httpd-imap', 'imap'], ['application/x-ima', 'ima'], ['application/x-internet-signup', ['ins', 'isp']], ['application/x-internett-signup', 'ins'], ['application/x-inventor', 'iv'], ['application/x-ip2', 'ip'], ['application/x-iphone', 'iii'], ['application/x-java-class', 'class'], ['application/x-java-commerce', 'jcm'], ['application/x-java-jnlp-file', 'jnlp'], ['application/x-javascript', 'js'], ['application/x-koan', ['skd', 'skm', 'skp', 'skt']], ['application/x-ksh', 'ksh'], ['application/x-latex', ['latex', 'ltx']], ['application/x-lha', 'lha'], ['application/x-lisp', 'lsp'], ['application/x-livescreen', 'ivy'], ['application/x-lotus', 'wq1'], ['application/x-lotusscreencam', 'scm'], ['application/x-lzh', 'lzh'], ['application/x-lzx', 'lzx'], ['application/x-mac-binhex40', 'hqx'], ['application/x-macbinary', 'bin'], ['application/x-magic-cap-package-1.0', 'mc$'], ['application/x-mathcad', 'mcd'], ['application/x-meme', 'mm'], ['application/x-midi', ['mid', 'midi']], ['application/x-mif', 'mif'], ['application/x-mix-transfer', 'nix'], ['application/x-mobipocket-ebook', 'prc'], ['application/x-mplayer2', 'asx'], ['application/x-ms-application', 'application'], ['application/x-ms-wmd', 'wmd'], ['application/x-ms-wmz', 'wmz'], ['application/x-ms-xbap', 'xbap'], ['application/x-msaccess', 'mdb'], ['application/x-msbinder', 'obd'], ['application/x-mscardfile', 'crd'], ['application/x-msclip', 'clp'], ['application/x-msdownload', ['exe', 'dll']], ['application/x-msexcel', ['xls', 'xla', 'xlw']], ['application/x-msmediaview', ['mvb', 'm13', 'm14']], ['application/x-msmetafile', 'wmf'], ['application/x-msmoney', 'mny'], ['application/x-mspowerpoint', 'ppt'], ['application/x-mspublisher', 'pub'], ['application/x-msschedule', 'scd'], ['application/x-msterminal', 'trm'], ['application/x-mswrite', 'wri'], ['application/x-navi-animation', 'ani'], ['application/x-navidoc', 'nvd'], ['application/x-navimap', 'map'], ['application/x-navistyle', 'stl'], ['application/x-netcdf', ['cdf', 'nc']], ['application/x-newton-compatible-pkg', 'pkg'], ['application/x-nokia-9000-communicator-add-on-software', 'aos'], ['application/x-omc', 'omc'], ['application/x-omcdatamaker', 'omcd'], ['application/x-omcregerator', 'omcr'], ['application/x-pagemaker', ['pm4', 'pm5']], ['application/x-pcl', 'pcl'], ['application/x-perfmon', ['pma', 'pmc', 'pml', 'pmr', 'pmw']], ['application/x-pixclscript', 'plx'], ['application/x-pkcs10', 'p10'], ['application/x-pkcs12', ['p12', 'pfx']], ['application/x-pkcs7-certificates', ['p7b', 'spc']], ['application/x-pkcs7-certreqresp', 'p7r'], ['application/x-pkcs7-mime', ['p7m', 'p7c']], ['application/x-pkcs7-signature', ['p7s', 'p7a']], ['application/x-pointplus', 'css'], ['application/x-portable-anymap', 'pnm'], ['application/x-project', ['mpc', 'mpt', 'mpv', 'mpx']], ['application/x-qpro', 'wb1'], ['application/x-rar-compressed', 'rar'], ['application/x-rtf', 'rtf'], ['application/x-sdp', 'sdp'], ['application/x-sea', 'sea'], ['application/x-seelogo', 'sl'], ['application/x-sh', 'sh'], ['application/x-shar', ['shar', 'sh']], ['application/x-shockwave-flash', 'swf'], ['application/x-silverlight-app', 'xap'], ['application/x-sit', 'sit'], ['application/x-sprite', ['spr', 'sprite']], ['application/x-stuffit', 'sit'], ['application/x-stuffitx', 'sitx'], ['application/x-sv4cpio', 'sv4cpio'], ['application/x-sv4crc', 'sv4crc'], ['application/x-tar', 'tar'], ['application/x-tbook', ['sbk', 'tbk']], ['application/x-tcl', 'tcl'], ['application/x-tex', 'tex'], ['application/x-tex-tfm', 'tfm'], ['application/x-texinfo', ['texi', 'texinfo']], ['application/x-troff', ['roff', 't', 'tr']], ['application/x-troff-man', 'man'], ['application/x-troff-me', 'me'], ['application/x-troff-ms', 'ms'], ['application/x-troff-msvideo', 'avi'], ['application/x-ustar', 'ustar'], ['application/x-visio', ['vsd', 'vst', 'vsw']], ['application/x-vnd.audioexplosion.mzz', 'mzz'], ['application/x-vnd.ls-xpix', 'xpix'], ['application/x-vrml', 'vrml'], ['application/x-wais-source', ['src', 'wsrc']], ['application/x-winhelp', 'hlp'], ['application/x-wintalk', 'wtk'], ['application/x-world', ['wrl', 'svr']], ['application/x-wpwin', 'wpd'], ['application/x-wri', 'wri'], ['application/x-x509-ca-cert', ['cer', 'crt', 'der']], ['application/x-x509-user-cert', 'crt'], ['application/x-xfig', 'fig'], ['application/x-xpinstall', 'xpi'], ['application/x-zip-compressed', 'zip'], ['application/xcap-diff+xml', 'xdf'], ['application/xenc+xml', 'xenc'], ['application/xhtml+xml', 'xhtml'], ['application/xml', 'xml'], ['application/xml-dtd', 'dtd'], ['application/xop+xml', 'xop'], ['application/xslt+xml', 'xslt'], ['application/xspf+xml', 'xspf'], ['application/xv+xml', 'mxml'], ['application/yang', 'yang'], ['application/yin+xml', 'yin'], ['application/ynd.ms-pkipko', 'pko'], ['application/zip', 'zip'], ['audio/adpcm', 'adp'], ['audio/aiff', ['aiff', 'aif', 'aifc']], ['audio/basic', ['snd', 'au']], ['audio/it', 'it'], ['audio/make', ['funk', 'my', 'pfunk']], ['audio/make.my.funk', 'pfunk'], ['audio/mid', ['mid', 'rmi']], ['audio/midi', ['midi', 'kar', 'mid']], ['audio/mod', 'mod'], ['audio/mp4', 'mp4a'], ['audio/mpeg', ['mpga', 'mp3', 'm2a', 'mp2', 'mpa', 'mpg']], ['audio/mpeg3', 'mp3'], ['audio/nspaudio', ['la', 'lma']], ['audio/ogg', 'oga'], ['audio/s3m', 's3m'], ['audio/tsp-audio', 'tsi'], ['audio/tsplayer', 'tsp'], ['audio/vnd.dece.audio', 'uva'], ['audio/vnd.digital-winds', 'eol'], ['audio/vnd.dra', 'dra'], ['audio/vnd.dts', 'dts'], ['audio/vnd.dts.hd', 'dtshd'], ['audio/vnd.lucent.voice', 'lvp'], ['audio/vnd.ms-playready.media.pya', 'pya'], ['audio/vnd.nuera.ecelp4800', 'ecelp4800'], ['audio/vnd.nuera.ecelp7470', 'ecelp7470'], ['audio/vnd.nuera.ecelp9600', 'ecelp9600'], ['audio/vnd.qcelp', 'qcp'], ['audio/vnd.rip', 'rip'], ['audio/voc', 'voc'], ['audio/voxware', 'vox'], ['audio/wav', 'wav'], ['audio/webm', 'weba'], ['audio/x-aac', 'aac'], ['audio/x-adpcm', 'snd'], ['audio/x-aiff', ['aiff', 'aif', 'aifc']], ['audio/x-au', 'au'], ['audio/x-gsm', ['gsd', 'gsm']], ['audio/x-jam', 'jam'], ['audio/x-liveaudio', 'lam'], ['audio/x-mid', ['mid', 'midi']], ['audio/x-midi', ['midi', 'mid']], ['audio/x-mod', 'mod'], ['audio/x-mpeg', 'mp2'], ['audio/x-mpeg-3', 'mp3'], ['audio/x-mpegurl', 'm3u'], ['audio/x-mpequrl', 'm3u'], ['audio/x-ms-wax', 'wax'], ['audio/x-ms-wma', 'wma'], ['audio/x-nspaudio', ['la', 'lma']], ['audio/x-pn-realaudio', ['ra', 'ram', 'rm', 'rmm', 'rmp']], ['audio/x-pn-realaudio-plugin', ['ra', 'rmp', 'rpm']], ['audio/x-psid', 'sid'], ['audio/x-realaudio', 'ra'], ['audio/x-twinvq', 'vqf'], ['audio/x-twinvq-plugin', ['vqe', 'vql']], ['audio/x-vnd.audioexplosion.mjuicemediafile', 'mjf'], ['audio/x-voc', 'voc'], ['audio/x-wav', 'wav'], ['audio/xm', 'xm'], ['chemical/x-cdx', 'cdx'], ['chemical/x-cif', 'cif'], ['chemical/x-cmdf', 'cmdf'], ['chemical/x-cml', 'cml'], ['chemical/x-csml', 'csml'], ['chemical/x-pdb', ['pdb', 'xyz']], ['chemical/x-xyz', 'xyz'], ['drawing/x-dwf', 'dwf'], ['i-world/i-vrml', 'ivr'], ['image/bmp', ['bmp', 'bm']], ['image/cgm', 'cgm'], ['image/cis-cod', 'cod'], ['image/cmu-raster', ['ras', 'rast']], ['image/fif', 'fif'], ['image/florian', ['flo', 'turbot']], ['image/g3fax', 'g3'], ['image/gif', 'gif'], ['image/ief', ['ief', 'iefs']], ['image/jpeg', ['jpeg', 'jpe', 'jpg', 'jfif', 'jfif-tbnl']], ['image/jutvision', 'jut'], ['image/ktx', 'ktx'], ['image/naplps', ['nap', 'naplps']], ['image/pict', ['pic', 'pict']], ['image/pipeg', 'jfif'], ['image/pjpeg', ['jfif', 'jpe', 'jpeg', 'jpg']], ['image/png', ['png', 'x-png']], ['image/prs.btif', 'btif'], ['image/svg+xml', 'svg'], ['image/tiff', ['tif', 'tiff']], ['image/vasa', 'mcf'], ['image/vnd.adobe.photoshop', 'psd'], ['image/vnd.dece.graphic', 'uvi'], ['image/vnd.djvu', 'djvu'], ['image/vnd.dvb.subtitle', 'sub'], ['image/vnd.dwg', ['dwg', 'dxf', 'svf']], ['image/vnd.dxf', 'dxf'], ['image/vnd.fastbidsheet', 'fbs'], ['image/vnd.fpx', 'fpx'], ['image/vnd.fst', 'fst'], ['image/vnd.fujixerox.edmics-mmr', 'mmr'], ['image/vnd.fujixerox.edmics-rlc', 'rlc'], ['image/vnd.ms-modi', 'mdi'], ['image/vnd.net-fpx', ['fpx', 'npx']], ['image/vnd.rn-realflash', 'rf'], ['image/vnd.rn-realpix', 'rp'], ['image/vnd.wap.wbmp', 'wbmp'], ['image/vnd.xiff', 'xif'], ['image/webp', 'webp'], ['image/x-cmu-raster', 'ras'], ['image/x-cmx', 'cmx'], ['image/x-dwg', ['dwg', 'dxf', 'svf']], ['image/x-freehand', 'fh'], ['image/x-icon', 'ico'], ['image/x-jg', 'art'], ['image/x-jps', 'jps'], ['image/x-niff', ['niff', 'nif']], ['image/x-pcx', 'pcx'], ['image/x-pict', ['pct', 'pic']], ['image/x-portable-anymap', 'pnm'], ['image/x-portable-bitmap', 'pbm'], ['image/x-portable-graymap', 'pgm'], ['image/x-portable-greymap', 'pgm'], ['image/x-portable-pixmap', 'ppm'], ['image/x-quicktime', ['qif', 'qti', 'qtif']], ['image/x-rgb', 'rgb'], ['image/x-tiff', ['tif', 'tiff']], ['image/x-windows-bmp', 'bmp'], ['image/x-xbitmap', 'xbm'], ['image/x-xbm', 'xbm'], ['image/x-xpixmap', ['xpm', 'pm']], ['image/x-xwd', 'xwd'], ['image/x-xwindowdump', 'xwd'], ['image/xbm', 'xbm'], ['image/xpm', 'xpm'], ['message/rfc822', ['eml', 'mht', 'mhtml', 'nws', 'mime']], ['model/iges', ['iges', 'igs']], ['model/mesh', 'msh'], ['model/vnd.collada+xml', 'dae'], ['model/vnd.dwf', 'dwf'], ['model/vnd.gdl', 'gdl'], ['model/vnd.gtw', 'gtw'], ['model/vnd.mts', 'mts'], ['model/vnd.vtu', 'vtu'], ['model/vrml', ['vrml', 'wrl', 'wrz']], ['model/x-pov', 'pov'], ['multipart/x-gzip', 'gzip'], ['multipart/x-ustar', 'ustar'], ['multipart/x-zip', 'zip'], ['music/crescendo', ['mid', 'midi']], ['music/x-karaoke', 'kar'], ['paleovu/x-pv', 'pvu'], ['text/asp', 'asp'], ['text/calendar', 'ics'], ['text/css', 'css'], ['text/csv', 'csv'], ['text/ecmascript', 'js'], ['text/h323', '323'], ['text/html', ['html', 'htm', 'stm', 'acgi', 'htmls', 'htx', 'shtml']], ['text/iuls', 'uls'], ['text/javascript', 'js'], ['text/mcf', 'mcf'], ['text/n3', 'n3'], ['text/pascal', 'pas'], ['text/plain', ['txt', 'bas', 'c', 'h', 'c++', 'cc', 'com', 'conf', 'cxx', 'def', 'f', 'f90', 'for', 'g', 'hh', 'idc', 'jav', 'java', 'list', 'log', 'lst', 'm', 'mar', 'pl', 'sdml', 'text']], ['text/plain-bas', 'par'], ['text/prs.lines.tag', 'dsc'], ['text/richtext', ['rtx', 'rt', 'rtf']], ['text/scriplet', 'wsc'], ['text/scriptlet', 'sct'], ['text/sgml', ['sgm', 'sgml']], ['text/tab-separated-values', 'tsv'], ['text/troff', 't'], ['text/turtle', 'ttl'], ['text/uri-list', ['uni', 'unis', 'uri', 'uris']], ['text/vnd.abc', 'abc'], ['text/vnd.curl', 'curl'], ['text/vnd.curl.dcurl', 'dcurl'], ['text/vnd.curl.mcurl', 'mcurl'], ['text/vnd.curl.scurl', 'scurl'], ['text/vnd.fly', 'fly'], ['text/vnd.fmi.flexstor', 'flx'], ['text/vnd.graphviz', 'gv'], ['text/vnd.in3d.3dml', '3dml'], ['text/vnd.in3d.spot', 'spot'], ['text/vnd.rn-realtext', 'rt'], ['text/vnd.sun.j2me.app-descriptor', 'jad'], ['text/vnd.wap.wml', 'wml'], ['text/vnd.wap.wmlscript', 'wmls'], ['text/webviewhtml', 'htt'], ['text/x-asm', ['asm', 's']], ['text/x-audiosoft-intra', 'aip'], ['text/x-c', ['c', 'cc', 'cpp']], ['text/x-component', 'htc'], ['text/x-fortran', ['for', 'f', 'f77', 'f90']], ['text/x-h', ['h', 'hh']], ['text/x-java-source', ['java', 'jav']], ['text/x-java-source,java', 'java'], ['text/x-la-asf', 'lsx'], ['text/x-m', 'm'], ['text/x-pascal', 'p'], ['text/x-script', 'hlb'], ['text/x-script.csh', 'csh'], ['text/x-script.elisp', 'el'], ['text/x-script.guile', 'scm'], ['text/x-script.ksh', 'ksh'], ['text/x-script.lisp', 'lsp'], ['text/x-script.perl', 'pl'], ['text/x-script.perl-module', 'pm'], ['text/x-script.phyton', 'py'], ['text/x-script.rexx', 'rexx'], ['text/x-script.scheme', 'scm'], ['text/x-script.sh', 'sh'], ['text/x-script.tcl', 'tcl'], ['text/x-script.tcsh', 'tcsh'], ['text/x-script.zsh', 'zsh'], ['text/x-server-parsed-html', ['shtml', 'ssi']], ['text/x-setext', 'etx'], ['text/x-sgml', ['sgm', 'sgml']], ['text/x-speech', ['spc', 'talk']], ['text/x-uil', 'uil'], ['text/x-uuencode', ['uu', 'uue']], ['text/x-vcalendar', 'vcs'], ['text/x-vcard', 'vcf'], ['text/xml', 'xml'], ['video/3gpp', '3gp'], ['video/3gpp2', '3g2'], ['video/animaflex', 'afl'], ['video/avi', 'avi'], ['video/avs-video', 'avs'], ['video/dl', 'dl'], ['video/fli', 'fli'], ['video/gl', 'gl'], ['video/h261', 'h261'], ['video/h263', 'h263'], ['video/h264', 'h264'], ['video/jpeg', 'jpgv'], ['video/jpm', 'jpm'], ['video/mj2', 'mj2'], ['video/mp4', 'mp4'], ['video/mpeg', ['mpeg', 'mp2', 'mpa', 'mpe', 'mpg', 'mpv2', 'm1v', 'm2v', 'mp3']], ['video/msvideo', 'avi'], ['video/ogg', 'ogv'], ['video/quicktime', ['mov', 'qt', 'moov']], ['video/vdo', 'vdo'], ['video/vivo', ['viv', 'vivo']], ['video/vnd.dece.hd', 'uvh'], ['video/vnd.dece.mobile', 'uvm'], ['video/vnd.dece.pd', 'uvp'], ['video/vnd.dece.sd', 'uvs'], ['video/vnd.dece.video', 'uvv'], ['video/vnd.fvt', 'fvt'], ['video/vnd.mpegurl', 'mxu'], ['video/vnd.ms-playready.media.pyv', 'pyv'], ['video/vnd.rn-realvideo', 'rv'], ['video/vnd.uvvu.mp4', 'uvu'], ['video/vnd.vivo', ['viv', 'vivo']], ['video/vosaic', 'vos'], ['video/webm', 'webm'], ['video/x-amt-demorun', 'xdr'], ['video/x-amt-showrun', 'xsr'], ['video/x-atomic3d-feature', 'fmf'], ['video/x-dl', 'dl'], ['video/x-dv', ['dif', 'dv']], ['video/x-f4v', 'f4v'], ['video/x-fli', 'fli'], ['video/x-flv', 'flv'], ['video/x-gl', 'gl'], ['video/x-isvideo', 'isu'], ['video/x-la-asf', ['lsf', 'lsx']], ['video/x-m4v', 'm4v'], ['video/x-motion-jpeg', 'mjpg'], ['video/x-mpeg', ['mp3', 'mp2']], ['video/x-mpeq2a', 'mp2'], ['video/x-ms-asf', ['asf', 'asr', 'asx']], ['video/x-ms-asf-plugin', 'asx'], ['video/x-ms-wm', 'wm'], ['video/x-ms-wmv', 'wmv'], ['video/x-ms-wmx', 'wmx'], ['video/x-ms-wvx', 'wvx'], ['video/x-msvideo', 'avi'], ['video/x-qtc', 'qtc'], ['video/x-scm', 'scm'], ['video/x-sgi-movie', ['movie', 'mv']], ['windows/metafile', 'wmf'], ['www/mime', 'mime'], ['x-conference/x-cooltalk', 'ice'], ['x-music/x-midi', ['mid', 'midi']], ['x-world/x-3dmf', ['3dm', '3dmf', 'qd3', 'qd3d']], ['x-world/x-svr', 'svr'], ['x-world/x-vrml', ['flr', 'vrml', 'wrl', 'wrz', 'xaf', 'xof']], ['x-world/x-vrt', 'vrt'], ['xgl/drawing', 'xgz'], ['xgl/movie', 'xmz']]);
var extensions = new Map([['123', 'application/vnd.lotus-1-2-3'], ['323', 'text/h323'], ['*', 'application/octet-stream'], ['3dm', 'x-world/x-3dmf'], ['3dmf', 'x-world/x-3dmf'], ['3dml', 'text/vnd.in3d.3dml'], ['3g2', 'video/3gpp2'], ['3gp', 'video/3gpp'], ['7z', 'application/x-7z-compressed'], ['a', 'application/octet-stream'], ['aab', 'application/x-authorware-bin'], ['aac', 'audio/x-aac'], ['aam', 'application/x-authorware-map'], ['aas', 'application/x-authorware-seg'], ['abc', 'text/vnd.abc'], ['abw', 'application/x-abiword'], ['ac', 'application/pkix-attr-cert'], ['acc', 'application/vnd.americandynamics.acc'], ['ace', 'application/x-ace-compressed'], ['acgi', 'text/html'], ['acu', 'application/vnd.acucobol'], ['acx', 'application/internet-property-stream'], ['adp', 'audio/adpcm'], ['aep', 'application/vnd.audiograph'], ['afl', 'video/animaflex'], ['afp', 'application/vnd.ibm.modcap'], ['ahead', 'application/vnd.ahead.space'], ['ai', 'application/postscript'], ['aif', ['audio/aiff', 'audio/x-aiff']], ['aifc', ['audio/aiff', 'audio/x-aiff']], ['aiff', ['audio/aiff', 'audio/x-aiff']], ['aim', 'application/x-aim'], ['aip', 'text/x-audiosoft-intra'], ['air', 'application/vnd.adobe.air-application-installer-package+zip'], ['ait', 'application/vnd.dvb.ait'], ['ami', 'application/vnd.amiga.ami'], ['ani', 'application/x-navi-animation'], ['aos', 'application/x-nokia-9000-communicator-add-on-software'], ['apk', 'application/vnd.android.package-archive'], ['application', 'application/x-ms-application'], ['apr', 'application/vnd.lotus-approach'], ['aps', 'application/mime'], ['arc', 'application/octet-stream'], ['arj', ['application/arj', 'application/octet-stream']], ['art', 'image/x-jg'], ['asf', 'video/x-ms-asf'], ['asm', 'text/x-asm'], ['aso', 'application/vnd.accpac.simply.aso'], ['asp', 'text/asp'], ['asr', 'video/x-ms-asf'], ['asx', ['video/x-ms-asf', 'application/x-mplayer2', 'video/x-ms-asf-plugin']], ['atc', 'application/vnd.acucorp'], ['atomcat', 'application/atomcat+xml'], ['atomsvc', 'application/atomsvc+xml'], ['atx', 'application/vnd.antix.game-component'], ['au', ['audio/basic', 'audio/x-au']], ['avi', ['video/avi', 'video/msvideo', 'application/x-troff-msvideo', 'video/x-msvideo']], ['avs', 'video/avs-video'], ['aw', 'application/applixware'], ['axs', 'application/olescript'], ['azf', 'application/vnd.airzip.filesecure.azf'], ['azs', 'application/vnd.airzip.filesecure.azs'], ['azw', 'application/vnd.amazon.ebook'], ['bas', 'text/plain'], ['bcpio', 'application/x-bcpio'], ['bdf', 'application/x-font-bdf'], ['bdm', 'application/vnd.syncml.dm+wbxml'], ['bed', 'application/vnd.realvnc.bed'], ['bh2', 'application/vnd.fujitsu.oasysprs'], ['bin', ['application/octet-stream', 'application/mac-binary', 'application/macbinary', 'application/x-macbinary', 'application/x-binary']], ['bm', 'image/bmp'], ['bmi', 'application/vnd.bmi'], ['bmp', ['image/bmp', 'image/x-windows-bmp']], ['boo', 'application/book'], ['book', 'application/book'], ['box', 'application/vnd.previewsystems.box'], ['boz', 'application/x-bzip2'], ['bsh', 'application/x-bsh'], ['btif', 'image/prs.btif'], ['bz', 'application/x-bzip'], ['bz2', 'application/x-bzip2'], ['c', ['text/plain', 'text/x-c']], ['c++', 'text/plain'], ['c11amc', 'application/vnd.cluetrust.cartomobile-config'], ['c11amz', 'application/vnd.cluetrust.cartomobile-config-pkg'], ['c4g', 'application/vnd.clonk.c4group'], ['cab', 'application/vnd.ms-cab-compressed'], ['car', 'application/vnd.curl.car'], ['cat', ['application/vnd.ms-pkiseccat', 'application/vnd.ms-pki.seccat']], ['cc', ['text/plain', 'text/x-c']], ['ccad', 'application/clariscad'], ['cco', 'application/x-cocoa'], ['ccxml', 'application/ccxml+xml,'], ['cdbcmsg', 'application/vnd.contact.cmsg'], ['cdf', ['application/cdf', 'application/x-cdf', 'application/x-netcdf']], ['cdkey', 'application/vnd.mediastation.cdkey'], ['cdmia', 'application/cdmi-capability'], ['cdmic', 'application/cdmi-container'], ['cdmid', 'application/cdmi-domain'], ['cdmio', 'application/cdmi-object'], ['cdmiq', 'application/cdmi-queue'], ['cdx', 'chemical/x-cdx'], ['cdxml', 'application/vnd.chemdraw+xml'], ['cdy', 'application/vnd.cinderella'], ['cer', ['application/pkix-cert', 'application/x-x509-ca-cert']], ['cgm', 'image/cgm'], ['cha', 'application/x-chat'], ['chat', 'application/x-chat'], ['chm', 'application/vnd.ms-htmlhelp'], ['chrt', 'application/vnd.kde.kchart'], ['cif', 'chemical/x-cif'], ['cii', 'application/vnd.anser-web-certificate-issue-initiation'], ['cil', 'application/vnd.ms-artgalry'], ['cla', 'application/vnd.claymore'], ['class', ['application/octet-stream', 'application/java', 'application/java-byte-code', 'application/java-vm', 'application/x-java-class']], ['clkk', 'application/vnd.crick.clicker.keyboard'], ['clkp', 'application/vnd.crick.clicker.palette'], ['clkt', 'application/vnd.crick.clicker.template'], ['clkw', 'application/vnd.crick.clicker.wordbank'], ['clkx', 'application/vnd.crick.clicker'], ['clp', 'application/x-msclip'], ['cmc', 'application/vnd.cosmocaller'], ['cmdf', 'chemical/x-cmdf'], ['cml', 'chemical/x-cml'], ['cmp', 'application/vnd.yellowriver-custom-menu'], ['cmx', 'image/x-cmx'], ['cod', ['image/cis-cod', 'application/vnd.rim.cod']], ['com', ['application/octet-stream', 'text/plain']], ['conf', 'text/plain'], ['cpio', 'application/x-cpio'], ['cpp', 'text/x-c'], ['cpt', ['application/mac-compactpro', 'application/x-compactpro', 'application/x-cpt']], ['crd', 'application/x-mscardfile'], ['crl', ['application/pkix-crl', 'application/pkcs-crl']], ['crt', ['application/pkix-cert', 'application/x-x509-user-cert', 'application/x-x509-ca-cert']], ['cryptonote', 'application/vnd.rig.cryptonote'], ['csh', ['text/x-script.csh', 'application/x-csh']], ['csml', 'chemical/x-csml'], ['csp', 'application/vnd.commonspace'], ['css', ['text/css', 'application/x-pointplus']], ['csv', 'text/csv'], ['cu', 'application/cu-seeme'], ['curl', 'text/vnd.curl'], ['cww', 'application/prs.cww'], ['cxx', 'text/plain'], ['dae', 'model/vnd.collada+xml'], ['daf', 'application/vnd.mobius.daf'], ['davmount', 'application/davmount+xml'], ['dcr', 'application/x-director'], ['dcurl', 'text/vnd.curl.dcurl'], ['dd2', 'application/vnd.oma.dd2+xml'], ['ddd', 'application/vnd.fujixerox.ddd'], ['deb', 'application/x-debian-package'], ['deepv', 'application/x-deepv'], ['def', 'text/plain'], ['der', 'application/x-x509-ca-cert'], ['dfac', 'application/vnd.dreamfactory'], ['dif', 'video/x-dv'], ['dir', 'application/x-director'], ['dis', 'application/vnd.mobius.dis'], ['djvu', 'image/vnd.djvu'], ['dl', ['video/dl', 'video/x-dl']], ['dll', 'application/x-msdownload'], ['dms', 'application/octet-stream'], ['dna', 'application/vnd.dna'], ['doc', 'application/msword'], ['docm', 'application/vnd.ms-word.document.macroenabled.12'], ['docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'], ['dot', 'application/msword'], ['dotm', 'application/vnd.ms-word.template.macroenabled.12'], ['dotx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template'], ['dp', ['application/commonground', 'application/vnd.osgi.dp']], ['dpg', 'application/vnd.dpgraph'], ['dra', 'audio/vnd.dra'], ['drw', 'application/drafting'], ['dsc', 'text/prs.lines.tag'], ['dssc', 'application/dssc+der'], ['dtb', 'application/x-dtbook+xml'], ['dtd', 'application/xml-dtd'], ['dts', 'audio/vnd.dts'], ['dtshd', 'audio/vnd.dts.hd'], ['dump', 'application/octet-stream'], ['dv', 'video/x-dv'], ['dvi', 'application/x-dvi'], ['dwf', ['model/vnd.dwf', 'drawing/x-dwf']], ['dwg', ['application/acad', 'image/vnd.dwg', 'image/x-dwg']], ['dxf', ['application/dxf', 'image/vnd.dwg', 'image/vnd.dxf', 'image/x-dwg']], ['dxp', 'application/vnd.spotfire.dxp'], ['dxr', 'application/x-director'], ['ecelp4800', 'audio/vnd.nuera.ecelp4800'], ['ecelp7470', 'audio/vnd.nuera.ecelp7470'], ['ecelp9600', 'audio/vnd.nuera.ecelp9600'], ['edm', 'application/vnd.novadigm.edm'], ['edx', 'application/vnd.novadigm.edx'], ['efif', 'application/vnd.picsel'], ['ei6', 'application/vnd.pg.osasli'], ['el', 'text/x-script.elisp'], ['elc', ['application/x-elc', 'application/x-bytecode.elisp']], ['eml', 'message/rfc822'], ['emma', 'application/emma+xml'], ['env', 'application/x-envoy'], ['eol', 'audio/vnd.digital-winds'], ['eot', 'application/vnd.ms-fontobject'], ['eps', 'application/postscript'], ['epub', 'application/epub+zip'], ['es', ['application/ecmascript', 'application/x-esrehber']], ['es3', 'application/vnd.eszigno3+xml'], ['esf', 'application/vnd.epson.esf'], ['etx', 'text/x-setext'], ['evy', ['application/envoy', 'application/x-envoy']], ['exe', ['application/octet-stream', 'application/x-msdownload']], ['exi', 'application/exi'], ['ext', 'application/vnd.novadigm.ext'], ['ez2', 'application/vnd.ezpix-album'], ['ez3', 'application/vnd.ezpix-package'], ['f', ['text/plain', 'text/x-fortran']], ['f4v', 'video/x-f4v'], ['f77', 'text/x-fortran'], ['f90', ['text/plain', 'text/x-fortran']], ['fbs', 'image/vnd.fastbidsheet'], ['fcs', 'application/vnd.isac.fcs'], ['fdf', 'application/vnd.fdf'], ['fe_launch', 'application/vnd.denovo.fcselayout-link'], ['fg5', 'application/vnd.fujitsu.oasysgp'], ['fh', 'image/x-freehand'], ['fif', ['application/fractals', 'image/fif']], ['fig', 'application/x-xfig'], ['fli', ['video/fli', 'video/x-fli']], ['flo', ['image/florian', 'application/vnd.micrografx.flo']], ['flr', 'x-world/x-vrml'], ['flv', 'video/x-flv'], ['flw', 'application/vnd.kde.kivio'], ['flx', 'text/vnd.fmi.flexstor'], ['fly', 'text/vnd.fly'], ['fm', 'application/vnd.framemaker'], ['fmf', 'video/x-atomic3d-feature'], ['fnc', 'application/vnd.frogans.fnc'], ['for', ['text/plain', 'text/x-fortran']], ['fpx', ['image/vnd.fpx', 'image/vnd.net-fpx']], ['frl', 'application/freeloader'], ['fsc', 'application/vnd.fsc.weblaunch'], ['fst', 'image/vnd.fst'], ['ftc', 'application/vnd.fluxtime.clip'], ['fti', 'application/vnd.anser-web-funds-transfer-initiation'], ['funk', 'audio/make'], ['fvt', 'video/vnd.fvt'], ['fxp', 'application/vnd.adobe.fxp'], ['fzs', 'application/vnd.fuzzysheet'], ['g', 'text/plain'], ['g2w', 'application/vnd.geoplan'], ['g3', 'image/g3fax'], ['g3w', 'application/vnd.geospace'], ['gac', 'application/vnd.groove-account'], ['gdl', 'model/vnd.gdl'], ['geo', 'application/vnd.dynageo'], ['gex', 'application/vnd.geometry-explorer'], ['ggb', 'application/vnd.geogebra.file'], ['ggt', 'application/vnd.geogebra.tool'], ['ghf', 'application/vnd.groove-help'], ['gif', 'image/gif'], ['gim', 'application/vnd.groove-identity-message'], ['gl', ['video/gl', 'video/x-gl']], ['gmx', 'application/vnd.gmx'], ['gnumeric', 'application/x-gnumeric'], ['gph', 'application/vnd.flographit'], ['gqf', 'application/vnd.grafeq'], ['gram', 'application/srgs'], ['grv', 'application/vnd.groove-injector'], ['grxml', 'application/srgs+xml'], ['gsd', 'audio/x-gsm'], ['gsf', 'application/x-font-ghostscript'], ['gsm', 'audio/x-gsm'], ['gsp', 'application/x-gsp'], ['gss', 'application/x-gss'], ['gtar', 'application/x-gtar'], ['gtm', 'application/vnd.groove-tool-message'], ['gtw', 'model/vnd.gtw'], ['gv', 'text/vnd.graphviz'], ['gxt', 'application/vnd.geonext'], ['gz', ['application/x-gzip', 'application/x-compressed']], ['gzip', ['multipart/x-gzip', 'application/x-gzip']], ['h', ['text/plain', 'text/x-h']], ['h261', 'video/h261'], ['h263', 'video/h263'], ['h264', 'video/h264'], ['hal', 'application/vnd.hal+xml'], ['hbci', 'application/vnd.hbci'], ['hdf', 'application/x-hdf'], ['help', 'application/x-helpfile'], ['hgl', 'application/vnd.hp-hpgl'], ['hh', ['text/plain', 'text/x-h']], ['hlb', 'text/x-script'], ['hlp', ['application/winhlp', 'application/hlp', 'application/x-helpfile', 'application/x-winhelp']], ['hpg', 'application/vnd.hp-hpgl'], ['hpgl', 'application/vnd.hp-hpgl'], ['hpid', 'application/vnd.hp-hpid'], ['hps', 'application/vnd.hp-hps'], ['hqx', ['application/mac-binhex40', 'application/binhex', 'application/binhex4', 'application/mac-binhex', 'application/x-binhex40', 'application/x-mac-binhex40']], ['hta', 'application/hta'], ['htc', 'text/x-component'], ['htke', 'application/vnd.kenameaapp'], ['htm', 'text/html'], ['html', 'text/html'], ['htmls', 'text/html'], ['htt', 'text/webviewhtml'], ['htx', 'text/html'], ['hvd', 'application/vnd.yamaha.hv-dic'], ['hvp', 'application/vnd.yamaha.hv-voice'], ['hvs', 'application/vnd.yamaha.hv-script'], ['i2g', 'application/vnd.intergeo'], ['icc', 'application/vnd.iccprofile'], ['ice', 'x-conference/x-cooltalk'], ['ico', 'image/x-icon'], ['ics', 'text/calendar'], ['idc', 'text/plain'], ['ief', 'image/ief'], ['iefs', 'image/ief'], ['ifm', 'application/vnd.shana.informed.formdata'], ['iges', ['application/iges', 'model/iges']], ['igl', 'application/vnd.igloader'], ['igm', 'application/vnd.insors.igm'], ['igs', ['application/iges', 'model/iges']], ['igx', 'application/vnd.micrografx.igx'], ['iif', 'application/vnd.shana.informed.interchange'], ['iii', 'application/x-iphone'], ['ima', 'application/x-ima'], ['imap', 'application/x-httpd-imap'], ['imp', 'application/vnd.accpac.simply.imp'], ['ims', 'application/vnd.ms-ims'], ['inf', 'application/inf'], ['ins', ['application/x-internet-signup', 'application/x-internett-signup']], ['ip', 'application/x-ip2'], ['ipfix', 'application/ipfix'], ['ipk', 'application/vnd.shana.informed.package'], ['irm', 'application/vnd.ibm.rights-management'], ['irp', 'application/vnd.irepository.package+xml'], ['isp', 'application/x-internet-signup'], ['isu', 'video/x-isvideo'], ['it', 'audio/it'], ['itp', 'application/vnd.shana.informed.formtemplate'], ['iv', 'application/x-inventor'], ['ivp', 'application/vnd.immervision-ivp'], ['ivr', 'i-world/i-vrml'], ['ivu', 'application/vnd.immervision-ivu'], ['ivy', 'application/x-livescreen'], ['jad', 'text/vnd.sun.j2me.app-descriptor'], ['jam', ['application/vnd.jam', 'audio/x-jam']], ['jar', 'application/java-archive'], ['jav', ['text/plain', 'text/x-java-source']], ['java', ['text/plain', 'text/x-java-source,java', 'text/x-java-source']], ['jcm', 'application/x-java-commerce'], ['jfif', ['image/pipeg', 'image/jpeg', 'image/pjpeg']], ['jfif-tbnl', 'image/jpeg'], ['jisp', 'application/vnd.jisp'], ['jlt', 'application/vnd.hp-jlyt'], ['jnlp', 'application/x-java-jnlp-file'], ['joda', 'application/vnd.joost.joda-archive'], ['jpe', ['image/jpeg', 'image/pjpeg']], ['jpeg', ['image/jpeg', 'image/pjpeg']], ['jpg', ['image/jpeg', 'image/pjpeg']], ['jpgv', 'video/jpeg'], ['jpm', 'video/jpm'], ['jps', 'image/x-jps'], ['js', ['application/javascript', 'application/ecmascript', 'text/javascript', 'text/ecmascript', 'application/x-javascript']], ['json', 'application/json'], ['jut', 'image/jutvision'], ['kar', ['audio/midi', 'music/x-karaoke']], ['karbon', 'application/vnd.kde.karbon'], ['kfo', 'application/vnd.kde.kformula'], ['kia', 'application/vnd.kidspiration'], ['kml', 'application/vnd.google-earth.kml+xml'], ['kmz', 'application/vnd.google-earth.kmz'], ['kne', 'application/vnd.kinar'], ['kon', 'application/vnd.kde.kontour'], ['kpr', 'application/vnd.kde.kpresenter'], ['ksh', ['application/x-ksh', 'text/x-script.ksh']], ['ksp', 'application/vnd.kde.kspread'], ['ktx', 'image/ktx'], ['ktz', 'application/vnd.kahootz'], ['kwd', 'application/vnd.kde.kword'], ['la', ['audio/nspaudio', 'audio/x-nspaudio']], ['lam', 'audio/x-liveaudio'], ['lasxml', 'application/vnd.las.las+xml'], ['latex', 'application/x-latex'], ['lbd', 'application/vnd.llamagraphics.life-balance.desktop'], ['lbe', 'application/vnd.llamagraphics.life-balance.exchange+xml'], ['les', 'application/vnd.hhe.lesson-player'], ['lha', ['application/octet-stream', 'application/lha', 'application/x-lha']], ['lhx', 'application/octet-stream'], ['link66', 'application/vnd.route66.link66+xml'], ['list', 'text/plain'], ['lma', ['audio/nspaudio', 'audio/x-nspaudio']], ['log', 'text/plain'], ['lrm', 'application/vnd.ms-lrm'], ['lsf', 'video/x-la-asf'], ['lsp', ['application/x-lisp', 'text/x-script.lisp']], ['lst', 'text/plain'], ['lsx', ['video/x-la-asf', 'text/x-la-asf']], ['ltf', 'application/vnd.frogans.ltf'], ['ltx', 'application/x-latex'], ['lvp', 'audio/vnd.lucent.voice'], ['lwp', 'application/vnd.lotus-wordpro'], ['lzh', ['application/octet-stream', 'application/x-lzh']], ['lzx', ['application/lzx', 'application/octet-stream', 'application/x-lzx']], ['m', ['text/plain', 'text/x-m']], ['m13', 'application/x-msmediaview'], ['m14', 'application/x-msmediaview'], ['m1v', 'video/mpeg'], ['m21', 'application/mp21'], ['m2a', 'audio/mpeg'], ['m2v', 'video/mpeg'], ['m3u', ['audio/x-mpegurl', 'audio/x-mpequrl']], ['m3u8', 'application/vnd.apple.mpegurl'], ['m4v', 'video/x-m4v'], ['ma', 'application/mathematica'], ['mads', 'application/mads+xml'], ['mag', 'application/vnd.ecowin.chart'], ['man', 'application/x-troff-man'], ['map', 'application/x-navimap'], ['mar', 'text/plain'], ['mathml', 'application/mathml+xml'], ['mbd', 'application/mbedlet'], ['mbk', 'application/vnd.mobius.mbk'], ['mbox', 'application/mbox'], ['mc$', 'application/x-magic-cap-package-1.0'], ['mc1', 'application/vnd.medcalcdata'], ['mcd', ['application/mcad', 'application/vnd.mcd', 'application/x-mathcad']], ['mcf', ['image/vasa', 'text/mcf']], ['mcp', 'application/netmc'], ['mcurl', 'text/vnd.curl.mcurl'], ['mdb', 'application/x-msaccess'], ['mdi', 'image/vnd.ms-modi'], ['me', 'application/x-troff-me'], ['meta4', 'application/metalink4+xml'], ['mets', 'application/mets+xml'], ['mfm', 'application/vnd.mfmp'], ['mgp', 'application/vnd.osgeo.mapguide.package'], ['mgz', 'application/vnd.proteus.magazine'], ['mht', 'message/rfc822'], ['mhtml', 'message/rfc822'], ['mid', ['audio/mid', 'audio/midi', 'music/crescendo', 'x-music/x-midi', 'audio/x-midi', 'application/x-midi', 'audio/x-mid']], ['midi', ['audio/midi', 'music/crescendo', 'x-music/x-midi', 'audio/x-midi', 'application/x-midi', 'audio/x-mid']], ['mif', ['application/vnd.mif', 'application/x-mif', 'application/x-frame']], ['mime', ['message/rfc822', 'www/mime']], ['mj2', 'video/mj2'], ['mjf', 'audio/x-vnd.audioexplosion.mjuicemediafile'], ['mjpg', 'video/x-motion-jpeg'], ['mlp', 'application/vnd.dolby.mlp'], ['mm', ['application/base64', 'application/x-meme']], ['mmd', 'application/vnd.chipnuts.karaoke-mmd'], ['mme', 'application/base64'], ['mmf', 'application/vnd.smaf'], ['mmr', 'image/vnd.fujixerox.edmics-mmr'], ['mny', 'application/x-msmoney'], ['mod', ['audio/mod', 'audio/x-mod']], ['mods', 'application/mods+xml'], ['moov', 'video/quicktime'], ['mov', 'video/quicktime'], ['movie', 'video/x-sgi-movie'], ['mp2', ['video/mpeg', 'audio/mpeg', 'video/x-mpeg', 'audio/x-mpeg', 'video/x-mpeq2a']], ['mp3', ['audio/mpeg', 'audio/mpeg3', 'video/mpeg', 'audio/x-mpeg-3', 'video/x-mpeg']], ['mp4', ['video/mp4', 'application/mp4']], ['mp4a', 'audio/mp4'], ['mpa', ['video/mpeg', 'audio/mpeg']], ['mpc', ['application/vnd.mophun.certificate', 'application/x-project']], ['mpe', 'video/mpeg'], ['mpeg', 'video/mpeg'], ['mpg', ['video/mpeg', 'audio/mpeg']], ['mpga', 'audio/mpeg'], ['mpkg', 'application/vnd.apple.installer+xml'], ['mpm', 'application/vnd.blueice.multipass'], ['mpn', 'application/vnd.mophun.application'], ['mpp', 'application/vnd.ms-project'], ['mpt', 'application/x-project'], ['mpv', 'application/x-project'], ['mpv2', 'video/mpeg'], ['mpx', 'application/x-project'], ['mpy', 'application/vnd.ibm.minipay'], ['mqy', 'application/vnd.mobius.mqy'], ['mrc', 'application/marc'], ['mrcx', 'application/marcxml+xml'], ['ms', 'application/x-troff-ms'], ['mscml', 'application/mediaservercontrol+xml'], ['mseq', 'application/vnd.mseq'], ['msf', 'application/vnd.epson.msf'], ['msg', 'application/vnd.ms-outlook'], ['msh', 'model/mesh'], ['msl', 'application/vnd.mobius.msl'], ['msty', 'application/vnd.muvee.style'], ['mts', 'model/vnd.mts'], ['mus', 'application/vnd.musician'], ['musicxml', 'application/vnd.recordare.musicxml+xml'], ['mv', 'video/x-sgi-movie'], ['mvb', 'application/x-msmediaview'], ['mwf', 'application/vnd.mfer'], ['mxf', 'application/mxf'], ['mxl', 'application/vnd.recordare.musicxml'], ['mxml', 'application/xv+xml'], ['mxs', 'application/vnd.triscape.mxs'], ['mxu', 'video/vnd.mpegurl'], ['my', 'audio/make'], ['mzz', 'application/x-vnd.audioexplosion.mzz'], ['n-gage', 'application/vnd.nokia.n-gage.symbian.install'], ['n3', 'text/n3'], ['nap', 'image/naplps'], ['naplps', 'image/naplps'], ['nbp', 'application/vnd.wolfram.player'], ['nc', 'application/x-netcdf'], ['ncm', 'application/vnd.nokia.configuration-message'], ['ncx', 'application/x-dtbncx+xml'], ['ngdat', 'application/vnd.nokia.n-gage.data'], ['nif', 'image/x-niff'], ['niff', 'image/x-niff'], ['nix', 'application/x-mix-transfer'], ['nlu', 'application/vnd.neurolanguage.nlu'], ['nml', 'application/vnd.enliven'], ['nnd', 'application/vnd.noblenet-directory'], ['nns', 'application/vnd.noblenet-sealer'], ['nnw', 'application/vnd.noblenet-web'], ['npx', 'image/vnd.net-fpx'], ['nsc', 'application/x-conference'], ['nsf', 'application/vnd.lotus-notes'], ['nvd', 'application/x-navidoc'], ['nws', 'message/rfc822'], ['o', 'application/octet-stream'], ['oa2', 'application/vnd.fujitsu.oasys2'], ['oa3', 'application/vnd.fujitsu.oasys3'], ['oas', 'application/vnd.fujitsu.oasys'], ['obd', 'application/x-msbinder'], ['oda', 'application/oda'], ['odb', 'application/vnd.oasis.opendocument.database'], ['odc', 'application/vnd.oasis.opendocument.chart'], ['odf', 'application/vnd.oasis.opendocument.formula'], ['odft', 'application/vnd.oasis.opendocument.formula-template'], ['odg', 'application/vnd.oasis.opendocument.graphics'], ['odi', 'application/vnd.oasis.opendocument.image'], ['odm', 'application/vnd.oasis.opendocument.text-master'], ['odp', 'application/vnd.oasis.opendocument.presentation'], ['ods', 'application/vnd.oasis.opendocument.spreadsheet'], ['odt', 'application/vnd.oasis.opendocument.text'], ['oga', 'audio/ogg'], ['ogv', 'video/ogg'], ['ogx', 'application/ogg'], ['omc', 'application/x-omc'], ['omcd', 'application/x-omcdatamaker'], ['omcr', 'application/x-omcregerator'], ['onetoc', 'application/onenote'], ['opf', 'application/oebps-package+xml'], ['org', 'application/vnd.lotus-organizer'], ['osf', 'application/vnd.yamaha.openscoreformat'], ['osfpvg', 'application/vnd.yamaha.openscoreformat.osfpvg+xml'], ['otc', 'application/vnd.oasis.opendocument.chart-template'], ['otf', 'application/x-font-otf'], ['otg', 'application/vnd.oasis.opendocument.graphics-template'], ['oth', 'application/vnd.oasis.opendocument.text-web'], ['oti', 'application/vnd.oasis.opendocument.image-template'], ['otp', 'application/vnd.oasis.opendocument.presentation-template'], ['ots', 'application/vnd.oasis.opendocument.spreadsheet-template'], ['ott', 'application/vnd.oasis.opendocument.text-template'], ['oxt', 'application/vnd.openofficeorg.extension'], ['p', 'text/x-pascal'], ['p10', ['application/pkcs10', 'application/x-pkcs10']], ['p12', ['application/pkcs-12', 'application/x-pkcs12']], ['p7a', 'application/x-pkcs7-signature'], ['p7b', 'application/x-pkcs7-certificates'], ['p7c', ['application/pkcs7-mime', 'application/x-pkcs7-mime']], ['p7m', ['application/pkcs7-mime', 'application/x-pkcs7-mime']], ['p7r', 'application/x-pkcs7-certreqresp'], ['p7s', ['application/pkcs7-signature', 'application/x-pkcs7-signature']], ['p8', 'application/pkcs8'], ['par', 'text/plain-bas'], ['part', 'application/pro_eng'], ['pas', 'text/pascal'], ['paw', 'application/vnd.pawaafile'], ['pbd', 'application/vnd.powerbuilder6'], ['pbm', 'image/x-portable-bitmap'], ['pcf', 'application/x-font-pcf'], ['pcl', ['application/vnd.hp-pcl', 'application/x-pcl']], ['pclxl', 'application/vnd.hp-pclxl'], ['pct', 'image/x-pict'], ['pcurl', 'application/vnd.curl.pcurl'], ['pcx', 'image/x-pcx'], ['pdb', ['application/vnd.palm', 'chemical/x-pdb']], ['pdf', 'application/pdf'], ['pfa', 'application/x-font-type1'], ['pfr', 'application/font-tdpfr'], ['pfunk', ['audio/make', 'audio/make.my.funk']], ['pfx', 'application/x-pkcs12'], ['pgm', ['image/x-portable-graymap', 'image/x-portable-greymap']], ['pgn', 'application/x-chess-pgn'], ['pgp', 'application/pgp-signature'], ['pic', ['image/pict', 'image/x-pict']], ['pict', 'image/pict'], ['pkg', 'application/x-newton-compatible-pkg'], ['pki', 'application/pkixcmp'], ['pkipath', 'application/pkix-pkipath'], ['pko', ['application/ynd.ms-pkipko', 'application/vnd.ms-pki.pko']], ['pl', ['text/plain', 'text/x-script.perl']], ['plb', 'application/vnd.3gpp.pic-bw-large'], ['plc', 'application/vnd.mobius.plc'], ['plf', 'application/vnd.pocketlearn'], ['pls', 'application/pls+xml'], ['plx', 'application/x-pixclscript'], ['pm', ['text/x-script.perl-module', 'image/x-xpixmap']], ['pm4', 'application/x-pagemaker'], ['pm5', 'application/x-pagemaker'], ['pma', 'application/x-perfmon'], ['pmc', 'application/x-perfmon'], ['pml', ['application/vnd.ctc-posml', 'application/x-perfmon']], ['pmr', 'application/x-perfmon'], ['pmw', 'application/x-perfmon'], ['png', 'image/png'], ['pnm', ['application/x-portable-anymap', 'image/x-portable-anymap']], ['portpkg', 'application/vnd.macports.portpkg'], ['pot', ['application/vnd.ms-powerpoint', 'application/mspowerpoint']], ['potm', 'application/vnd.ms-powerpoint.template.macroenabled.12'], ['potx', 'application/vnd.openxmlformats-officedocument.presentationml.template'], ['pov', 'model/x-pov'], ['ppa', 'application/vnd.ms-powerpoint'], ['ppam', 'application/vnd.ms-powerpoint.addin.macroenabled.12'], ['ppd', 'application/vnd.cups-ppd'], ['ppm', 'image/x-portable-pixmap'], ['pps', ['application/vnd.ms-powerpoint', 'application/mspowerpoint']], ['ppsm', 'application/vnd.ms-powerpoint.slideshow.macroenabled.12'], ['ppsx', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow'], ['ppt', ['application/vnd.ms-powerpoint', 'application/mspowerpoint', 'application/powerpoint', 'application/x-mspowerpoint']], ['pptm', 'application/vnd.ms-powerpoint.presentation.macroenabled.12'], ['pptx', 'application/vnd.openxmlformats-officedocument.presentationml.presentation'], ['ppz', 'application/mspowerpoint'], ['prc', 'application/x-mobipocket-ebook'], ['pre', ['application/vnd.lotus-freelance', 'application/x-freelance']], ['prf', 'application/pics-rules'], ['prt', 'application/pro_eng'], ['ps', 'application/postscript'], ['psb', 'application/vnd.3gpp.pic-bw-small'], ['psd', ['application/octet-stream', 'image/vnd.adobe.photoshop']], ['psf', 'application/x-font-linux-psf'], ['pskcxml', 'application/pskc+xml'], ['ptid', 'application/vnd.pvi.ptid1'], ['pub', 'application/x-mspublisher'], ['pvb', 'application/vnd.3gpp.pic-bw-var'], ['pvu', 'paleovu/x-pv'], ['pwn', 'application/vnd.3m.post-it-notes'], ['pwz', 'application/vnd.ms-powerpoint'], ['py', 'text/x-script.phyton'], ['pya', 'audio/vnd.ms-playready.media.pya'], ['pyc', 'applicaiton/x-bytecode.python'], ['pyv', 'video/vnd.ms-playready.media.pyv'], ['qam', 'application/vnd.epson.quickanime'], ['qbo', 'application/vnd.intu.qbo'], ['qcp', 'audio/vnd.qcelp'], ['qd3', 'x-world/x-3dmf'], ['qd3d', 'x-world/x-3dmf'], ['qfx', 'application/vnd.intu.qfx'], ['qif', 'image/x-quicktime'], ['qps', 'application/vnd.publishare-delta-tree'], ['qt', 'video/quicktime'], ['qtc', 'video/x-qtc'], ['qti', 'image/x-quicktime'], ['qtif', 'image/x-quicktime'], ['qxd', 'application/vnd.quark.quarkxpress'], ['ra', ['audio/x-realaudio', 'audio/x-pn-realaudio', 'audio/x-pn-realaudio-plugin']], ['ram', 'audio/x-pn-realaudio'], ['rar', 'application/x-rar-compressed'], ['ras', ['image/cmu-raster', 'application/x-cmu-raster', 'image/x-cmu-raster']], ['rast', 'image/cmu-raster'], ['rcprofile', 'application/vnd.ipunplugged.rcprofile'], ['rdf', 'application/rdf+xml'], ['rdz', 'application/vnd.data-vision.rdz'], ['rep', 'application/vnd.businessobjects'], ['res', 'application/x-dtbresource+xml'], ['rexx', 'text/x-script.rexx'], ['rf', 'image/vnd.rn-realflash'], ['rgb', 'image/x-rgb'], ['rif', 'application/reginfo+xml'], ['rip', 'audio/vnd.rip'], ['rl', 'application/resource-lists+xml'], ['rlc', 'image/vnd.fujixerox.edmics-rlc'], ['rld', 'application/resource-lists-diff+xml'], ['rm', ['application/vnd.rn-realmedia', 'audio/x-pn-realaudio']], ['rmi', 'audio/mid'], ['rmm', 'audio/x-pn-realaudio'], ['rmp', ['audio/x-pn-realaudio-plugin', 'audio/x-pn-realaudio']], ['rms', 'application/vnd.jcp.javame.midlet-rms'], ['rnc', 'application/relax-ng-compact-syntax'], ['rng', ['application/ringing-tones', 'application/vnd.nokia.ringing-tone']], ['rnx', 'application/vnd.rn-realplayer'], ['roff', 'application/x-troff'], ['rp', 'image/vnd.rn-realpix'], ['rp9', 'application/vnd.cloanto.rp9'], ['rpm', 'audio/x-pn-realaudio-plugin'], ['rpss', 'application/vnd.nokia.radio-presets'], ['rpst', 'application/vnd.nokia.radio-preset'], ['rq', 'application/sparql-query'], ['rs', 'application/rls-services+xml'], ['rsd', 'application/rsd+xml'], ['rt', ['text/richtext', 'text/vnd.rn-realtext']], ['rtf', ['application/rtf', 'text/richtext', 'application/x-rtf']], ['rtx', ['text/richtext', 'application/rtf']], ['rv', 'video/vnd.rn-realvideo'], ['s', 'text/x-asm'], ['s3m', 'audio/s3m'], ['saf', 'application/vnd.yamaha.smaf-audio'], ['saveme', 'application/octet-stream'], ['sbk', 'application/x-tbook'], ['sbml', 'application/sbml+xml'], ['sc', 'application/vnd.ibm.secure-container'], ['scd', 'application/x-msschedule'], ['scm', ['application/vnd.lotus-screencam', 'video/x-scm', 'text/x-script.guile', 'application/x-lotusscreencam', 'text/x-script.scheme']], ['scq', 'application/scvp-cv-request'], ['scs', 'application/scvp-cv-response'], ['sct', 'text/scriptlet'], ['scurl', 'text/vnd.curl.scurl'], ['sda', 'application/vnd.stardivision.draw'], ['sdc', 'application/vnd.stardivision.calc'], ['sdd', 'application/vnd.stardivision.impress'], ['sdkm', 'application/vnd.solent.sdkm+xml'], ['sdml', 'text/plain'], ['sdp', ['application/sdp', 'application/x-sdp']], ['sdr', 'application/sounder'], ['sdw', 'application/vnd.stardivision.writer'], ['sea', ['application/sea', 'application/x-sea']], ['see', 'application/vnd.seemail'], ['seed', 'application/vnd.fdsn.seed'], ['sema', 'application/vnd.sema'], ['semd', 'application/vnd.semd'], ['semf', 'application/vnd.semf'], ['ser', 'application/java-serialized-object'], ['set', 'application/set'], ['setpay', 'application/set-payment-initiation'], ['setreg', 'application/set-registration-initiation'], ['sfd-hdstx', 'application/vnd.hydrostatix.sof-data'], ['sfs', 'application/vnd.spotfire.sfs'], ['sgl', 'application/vnd.stardivision.writer-global'], ['sgm', ['text/sgml', 'text/x-sgml']], ['sgml', ['text/sgml', 'text/x-sgml']], ['sh', ['application/x-shar', 'application/x-bsh', 'application/x-sh', 'text/x-script.sh']], ['shar', ['application/x-bsh', 'application/x-shar']], ['shf', 'application/shf+xml'], ['shtml', ['text/html', 'text/x-server-parsed-html']], ['sid', 'audio/x-psid'], ['sis', 'application/vnd.symbian.install'], ['sit', ['application/x-stuffit', 'application/x-sit']], ['sitx', 'application/x-stuffitx'], ['skd', 'application/x-koan'], ['skm', 'application/x-koan'], ['skp', ['application/vnd.koan', 'application/x-koan']], ['skt', 'application/x-koan'], ['sl', 'application/x-seelogo'], ['sldm', 'application/vnd.ms-powerpoint.slide.macroenabled.12'], ['sldx', 'application/vnd.openxmlformats-officedocument.presentationml.slide'], ['slt', 'application/vnd.epson.salt'], ['sm', 'application/vnd.stepmania.stepchart'], ['smf', 'application/vnd.stardivision.math'], ['smi', ['application/smil', 'application/smil+xml']], ['smil', 'application/smil'], ['snd', ['audio/basic', 'audio/x-adpcm']], ['snf', 'application/x-font-snf'], ['sol', 'application/solids'], ['spc', ['text/x-speech', 'application/x-pkcs7-certificates']], ['spf', 'application/vnd.yamaha.smaf-phrase'], ['spl', ['application/futuresplash', 'application/x-futuresplash']], ['spot', 'text/vnd.in3d.spot'], ['spp', 'application/scvp-vp-response'], ['spq', 'application/scvp-vp-request'], ['spr', 'application/x-sprite'], ['sprite', 'application/x-sprite'], ['src', 'application/x-wais-source'], ['sru', 'application/sru+xml'], ['srx', 'application/sparql-results+xml'], ['sse', 'application/vnd.kodak-descriptor'], ['ssf', 'application/vnd.epson.ssf'], ['ssi', 'text/x-server-parsed-html'], ['ssm', 'application/streamingmedia'], ['ssml', 'application/ssml+xml'], ['sst', ['application/vnd.ms-pkicertstore', 'application/vnd.ms-pki.certstore']], ['st', 'application/vnd.sailingtracker.track'], ['stc', 'application/vnd.sun.xml.calc.template'], ['std', 'application/vnd.sun.xml.draw.template'], ['step', 'application/step'], ['stf', 'application/vnd.wt.stf'], ['sti', 'application/vnd.sun.xml.impress.template'], ['stk', 'application/hyperstudio'], ['stl', ['application/vnd.ms-pkistl', 'application/sla', 'application/vnd.ms-pki.stl', 'application/x-navistyle']], ['stm', 'text/html'], ['stp', 'application/step'], ['str', 'application/vnd.pg.format'], ['stw', 'application/vnd.sun.xml.writer.template'], ['sub', 'image/vnd.dvb.subtitle'], ['sus', 'application/vnd.sus-calendar'], ['sv4cpio', 'application/x-sv4cpio'], ['sv4crc', 'application/x-sv4crc'], ['svc', 'application/vnd.dvb.service'], ['svd', 'application/vnd.svd'], ['svf', ['image/vnd.dwg', 'image/x-dwg']], ['svg', 'image/svg+xml'], ['svr', ['x-world/x-svr', 'application/x-world']], ['swf', 'application/x-shockwave-flash'], ['swi', 'application/vnd.aristanetworks.swi'], ['sxc', 'application/vnd.sun.xml.calc'], ['sxd', 'application/vnd.sun.xml.draw'], ['sxg', 'application/vnd.sun.xml.writer.global'], ['sxi', 'application/vnd.sun.xml.impress'], ['sxm', 'application/vnd.sun.xml.math'], ['sxw', 'application/vnd.sun.xml.writer'], ['t', ['text/troff', 'application/x-troff']], ['talk', 'text/x-speech'], ['tao', 'application/vnd.tao.intent-module-archive'], ['tar', 'application/x-tar'], ['tbk', ['application/toolbook', 'application/x-tbook']], ['tcap', 'application/vnd.3gpp2.tcap'], ['tcl', ['text/x-script.tcl', 'application/x-tcl']], ['tcsh', 'text/x-script.tcsh'], ['teacher', 'application/vnd.smart.teacher'], ['tei', 'application/tei+xml'], ['tex', 'application/x-tex'], ['texi', 'application/x-texinfo'], ['texinfo', 'application/x-texinfo'], ['text', ['application/plain', 'text/plain']], ['tfi', 'application/thraud+xml'], ['tfm', 'application/x-tex-tfm'], ['tgz', ['application/gnutar', 'application/x-compressed']], ['thmx', 'application/vnd.ms-officetheme'], ['tif', ['image/tiff', 'image/x-tiff']], ['tiff', ['image/tiff', 'image/x-tiff']], ['tmo', 'application/vnd.tmobile-livetv'], ['torrent', 'application/x-bittorrent'], ['tpl', 'application/vnd.groove-tool-template'], ['tpt', 'application/vnd.trid.tpt'], ['tr', 'application/x-troff'], ['tra', 'application/vnd.trueapp'], ['trm', 'application/x-msterminal'], ['tsd', 'application/timestamped-data'], ['tsi', 'audio/tsp-audio'], ['tsp', ['application/dsptype', 'audio/tsplayer']], ['tsv', 'text/tab-separated-values'], ['ttf', 'application/x-font-ttf'], ['ttl', 'text/turtle'], ['turbot', 'image/florian'], ['twd', 'application/vnd.simtech-mindmapper'], ['txd', 'application/vnd.genomatix.tuxedo'], ['txf', 'application/vnd.mobius.txf'], ['txt', 'text/plain'], ['ufd', 'application/vnd.ufdl'], ['uil', 'text/x-uil'], ['uls', 'text/iuls'], ['umj', 'application/vnd.umajin'], ['uni', 'text/uri-list'], ['unis', 'text/uri-list'], ['unityweb', 'application/vnd.unity'], ['unv', 'application/i-deas'], ['uoml', 'application/vnd.uoml+xml'], ['uri', 'text/uri-list'], ['uris', 'text/uri-list'], ['ustar', ['application/x-ustar', 'multipart/x-ustar']], ['utz', 'application/vnd.uiq.theme'], ['uu', ['application/octet-stream', 'text/x-uuencode']], ['uue', 'text/x-uuencode'], ['uva', 'audio/vnd.dece.audio'], ['uvh', 'video/vnd.dece.hd'], ['uvi', 'image/vnd.dece.graphic'], ['uvm', 'video/vnd.dece.mobile'], ['uvp', 'video/vnd.dece.pd'], ['uvs', 'video/vnd.dece.sd'], ['uvu', 'video/vnd.uvvu.mp4'], ['uvv', 'video/vnd.dece.video'], ['vcd', 'application/x-cdlink'], ['vcf', 'text/x-vcard'], ['vcg', 'application/vnd.groove-vcard'], ['vcs', 'text/x-vcalendar'], ['vcx', 'application/vnd.vcx'], ['vda', 'application/vda'], ['vdo', 'video/vdo'], ['vew', 'application/groupwise'], ['vis', 'application/vnd.visionary'], ['viv', ['video/vivo', 'video/vnd.vivo']], ['vivo', ['video/vivo', 'video/vnd.vivo']], ['vmd', 'application/vocaltec-media-desc'], ['vmf', 'application/vocaltec-media-file'], ['voc', ['audio/voc', 'audio/x-voc']], ['vos', 'video/vosaic'], ['vox', 'audio/voxware'], ['vqe', 'audio/x-twinvq-plugin'], ['vqf', 'audio/x-twinvq'], ['vql', 'audio/x-twinvq-plugin'], ['vrml', ['model/vrml', 'x-world/x-vrml', 'application/x-vrml']], ['vrt', 'x-world/x-vrt'], ['vsd', ['application/vnd.visio', 'application/x-visio']], ['vsf', 'application/vnd.vsf'], ['vst', 'application/x-visio'], ['vsw', 'application/x-visio'], ['vtu', 'model/vnd.vtu'], ['vxml', 'application/voicexml+xml'], ['w60', 'application/wordperfect6.0'], ['w61', 'application/wordperfect6.1'], ['w6w', 'application/msword'], ['wad', 'application/x-doom'], ['wav', ['audio/wav', 'audio/x-wav']], ['wax', 'audio/x-ms-wax'], ['wb1', 'application/x-qpro'], ['wbmp', 'image/vnd.wap.wbmp'], ['wbs', 'application/vnd.criticaltools.wbs+xml'], ['wbxml', 'application/vnd.wap.wbxml'], ['wcm', 'application/vnd.ms-works'], ['wdb', 'application/vnd.ms-works'], ['web', 'application/vnd.xara'], ['weba', 'audio/webm'], ['webm', 'video/webm'], ['webp', 'image/webp'], ['wg', 'application/vnd.pmi.widget'], ['wgt', 'application/widget'], ['wiz', 'application/msword'], ['wk1', 'application/x-123'], ['wks', 'application/vnd.ms-works'], ['wm', 'video/x-ms-wm'], ['wma', 'audio/x-ms-wma'], ['wmd', 'application/x-ms-wmd'], ['wmf', ['windows/metafile', 'application/x-msmetafile']], ['wml', 'text/vnd.wap.wml'], ['wmlc', 'application/vnd.wap.wmlc'], ['wmls', 'text/vnd.wap.wmlscript'], ['wmlsc', 'application/vnd.wap.wmlscriptc'], ['wmv', 'video/x-ms-wmv'], ['wmx', 'video/x-ms-wmx'], ['wmz', 'application/x-ms-wmz'], ['woff', 'application/x-font-woff'], ['word', 'application/msword'], ['wp', 'application/wordperfect'], ['wp5', ['application/wordperfect', 'application/wordperfect6.0']], ['wp6', 'application/wordperfect'], ['wpd', ['application/wordperfect', 'application/vnd.wordperfect', 'application/x-wpwin']], ['wpl', 'application/vnd.ms-wpl'], ['wps', 'application/vnd.ms-works'], ['wq1', 'application/x-lotus'], ['wqd', 'application/vnd.wqd'], ['wri', ['application/mswrite', 'application/x-wri', 'application/x-mswrite']], ['wrl', ['model/vrml', 'x-world/x-vrml', 'application/x-world']], ['wrz', ['model/vrml', 'x-world/x-vrml']], ['wsc', 'text/scriplet'], ['wsdl', 'application/wsdl+xml'], ['wspolicy', 'application/wspolicy+xml'], ['wsrc', 'application/x-wais-source'], ['wtb', 'application/vnd.webturbo'], ['wtk', 'application/x-wintalk'], ['wvx', 'video/x-ms-wvx'], ['x-png', 'image/png'], ['x3d', 'application/vnd.hzn-3d-crossword'], ['xaf', 'x-world/x-vrml'], ['xap', 'application/x-silverlight-app'], ['xar', 'application/vnd.xara'], ['xbap', 'application/x-ms-xbap'], ['xbd', 'application/vnd.fujixerox.docuworks.binder'], ['xbm', ['image/xbm', 'image/x-xbm', 'image/x-xbitmap']], ['xdf', 'application/xcap-diff+xml'], ['xdm', 'application/vnd.syncml.dm+xml'], ['xdp', 'application/vnd.adobe.xdp+xml'], ['xdr', 'video/x-amt-demorun'], ['xdssc', 'application/dssc+xml'], ['xdw', 'application/vnd.fujixerox.docuworks'], ['xenc', 'application/xenc+xml'], ['xer', 'application/patch-ops-error+xml'], ['xfdf', 'application/vnd.adobe.xfdf'], ['xfdl', 'application/vnd.xfdl'], ['xgz', 'xgl/drawing'], ['xhtml', 'application/xhtml+xml'], ['xif', 'image/vnd.xiff'], ['xl', 'application/excel'], ['xla', ['application/vnd.ms-excel', 'application/excel', 'application/x-msexcel', 'application/x-excel']], ['xlam', 'application/vnd.ms-excel.addin.macroenabled.12'], ['xlb', ['application/excel', 'application/vnd.ms-excel', 'application/x-excel']], ['xlc', ['application/vnd.ms-excel', 'application/excel', 'application/x-excel']], ['xld', ['application/excel', 'application/x-excel']], ['xlk', ['application/excel', 'application/x-excel']], ['xll', ['application/excel', 'application/vnd.ms-excel', 'application/x-excel']], ['xlm', ['application/vnd.ms-excel', 'application/excel', 'application/x-excel']], ['xls', ['application/vnd.ms-excel', 'application/excel', 'application/x-msexcel', 'application/x-excel']], ['xlsb', 'application/vnd.ms-excel.sheet.binary.macroenabled.12'], ['xlsm', 'application/vnd.ms-excel.sheet.macroenabled.12'], ['xlsx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'], ['xlt', ['application/vnd.ms-excel', 'application/excel', 'application/x-excel']], ['xltm', 'application/vnd.ms-excel.template.macroenabled.12'], ['xltx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template'], ['xlv', ['application/excel', 'application/x-excel']], ['xlw', ['application/vnd.ms-excel', 'application/excel', 'application/x-msexcel', 'application/x-excel']], ['xm', 'audio/xm'], ['xml', ['application/xml', 'text/xml', 'application/atom+xml', 'application/rss+xml']], ['xmz', 'xgl/movie'], ['xo', 'application/vnd.olpc-sugar'], ['xof', 'x-world/x-vrml'], ['xop', 'application/xop+xml'], ['xpi', 'application/x-xpinstall'], ['xpix', 'application/x-vnd.ls-xpix'], ['xpm', ['image/xpm', 'image/x-xpixmap']], ['xpr', 'application/vnd.is-xpr'], ['xps', 'application/vnd.ms-xpsdocument'], ['xpw', 'application/vnd.intercon.formnet'], ['xslt', 'application/xslt+xml'], ['xsm', 'application/vnd.syncml+xml'], ['xspf', 'application/xspf+xml'], ['xsr', 'video/x-amt-showrun'], ['xul', 'application/vnd.mozilla.xul+xml'], ['xwd', ['image/x-xwd', 'image/x-xwindowdump']], ['xyz', ['chemical/x-xyz', 'chemical/x-pdb']], ['yang', 'application/yang'], ['yin', 'application/yin+xml'], ['z', ['application/x-compressed', 'application/x-compress']], ['zaz', 'application/vnd.zzazz.deck+xml'], ['zip', ['application/zip', 'multipart/x-zip', 'application/x-zip-compressed', 'application/x-compressed']], ['zir', 'application/vnd.zul'], ['zmm', 'application/vnd.handheld-entertainment+xml'], ['zoo', 'application/octet-stream'], ['zsh', 'text/x-script.zsh']]);
module.exports = {
  detectMimeType: function detectMimeType(filename) {
    if (!filename) {
      return defaultMimeType;
    }

    var parsed = path.parse(filename);
    var extension = (parsed.ext.substr(1) || parsed.name || '').split('?').shift().trim().toLowerCase();
    var value = defaultMimeType;

    if (extensions.has(extension)) {
      value = extensions.get(extension);
    }

    if (Array.isArray(value)) {
      return value[0];
    }

    return value;
  },
  detectExtension: function detectExtension(mimeType) {
    if (!mimeType) {
      return defaultExtension;
    }

    var parts = (mimeType || '').toLowerCase().trim().split('/');
    var rootType = parts.shift().trim();
    var subType = parts.join('/').trim();

    if (mimeTypes.has(rootType + '/' + subType)) {
      var value = mimeTypes.get(rootType + '/' + subType);

      if (Array.isArray(value)) {
        return value[0];
      }

      return value;
    }

    switch (rootType) {
      case 'text':
        return 'txt';

      default:
        return 'bin';
    }
  }
};

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* eslint no-undefined: 0, prefer-spread: 0, no-control-regex: 0 */


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var crypto = __webpack_require__(68);

var os = __webpack_require__(163);

var fs = __webpack_require__(125);

var punycode = __webpack_require__(162);

var PassThrough = __webpack_require__(15).PassThrough;

var shared = __webpack_require__(44);

var mimeFuncs = __webpack_require__(167);

var qp = __webpack_require__(293);

var base64 = __webpack_require__(292);

var addressparser = __webpack_require__(654);

var fetch = __webpack_require__(165);

var LastNewline = __webpack_require__(655);

var LeWindows = __webpack_require__(294);

var LeUnix = __webpack_require__(656);
/**
 * Creates a new mime tree node. Assumes 'multipart/*' as the content type
 * if it is a branch, anything else counts as leaf. If rootNode is missing from
 * the options, assumes this is the root.
 *
 * @param {String} contentType Define the content type for the node. Can be left blank for attachments (derived from filename)
 * @param {Object} [options] optional options
 * @param {Object} [options.rootNode] root node for this tree
 * @param {Object} [options.parentNode] immediate parent for this node
 * @param {Object} [options.filename] filename for an attachment node
 * @param {String} [options.baseBoundary] shared part of the unique multipart boundary
 * @param {Boolean} [options.keepBcc] If true, do not exclude Bcc from the generated headers
 * @param {Function} [options.normalizeHeaderKey] method to normalize header keys for custom caseing
 * @param {String} [options.textEncoding] either 'Q' (the default) or 'B'
 */


var MimeNode = /*#__PURE__*/function () {
  function MimeNode(contentType, options) {
    _classCallCheck(this, MimeNode);

    this.nodeCounter = 0;
    options = options || {};
    /**
     * shared part of the unique multipart boundary
     */

    this.baseBoundary = options.baseBoundary || crypto.randomBytes(8).toString('hex');
    this.boundaryPrefix = options.boundaryPrefix || '--_NmP';
    this.disableFileAccess = !!options.disableFileAccess;
    this.disableUrlAccess = !!options.disableUrlAccess;
    this.normalizeHeaderKey = options.normalizeHeaderKey;
    /**
     * If date headers is missing and current node is the root, this value is used instead
     */

    this.date = new Date();
    /**
     * Root node for current mime tree
     */

    this.rootNode = options.rootNode || this;
    /**
     * If true include Bcc in generated headers (if available)
     */

    this.keepBcc = !!options.keepBcc;
    /**
     * If filename is specified but contentType is not (probably an attachment)
     * detect the content type from filename extension
     */

    if (options.filename) {
      /**
       * Filename for this node. Useful with attachments
       */
      this.filename = options.filename;

      if (!contentType) {
        contentType = mimeFuncs.detectMimeType(this.filename.split('.').pop());
      }
    }
    /**
     * Indicates which encoding should be used for header strings: "Q" or "B"
     */


    this.textEncoding = (options.textEncoding || '').toString().trim().charAt(0).toUpperCase();
    /**
     * Immediate parent for this node (or undefined if not set)
     */

    this.parentNode = options.parentNode;
    /**
     * Hostname for default message-id values
     */

    this.hostname = options.hostname;
    /**
     * If set to 'win' then uses \r\n, if 'linux' then \n. If not set (or `raw` is used) then newlines are kept as is.
     */

    this.newline = options.newline;
    /**
     * An array for possible child nodes
     */

    this.childNodes = [];
    /**
     * Used for generating unique boundaries (prepended to the shared base)
     */

    this._nodeId = ++this.rootNode.nodeCounter;
    /**
     * A list of header values for this node in the form of [{key:'', value:''}]
     */

    this._headers = [];
    /**
     * True if the content only uses ASCII printable characters
     * @type {Boolean}
     */

    this._isPlainText = false;
    /**
     * True if the content is plain text but has longer lines than allowed
     * @type {Boolean}
     */

    this._hasLongLines = false;
    /**
     * If set, use instead this value for envelopes instead of generating one
     * @type {Boolean}
     */

    this._envelope = false;
    /**
     * If set then use this value as the stream content instead of building it
     * @type {String|Buffer|Stream}
     */

    this._raw = false;
    /**
     * Additional transform streams that the message will be piped before
     * exposing by createReadStream
     * @type {Array}
     */

    this._transforms = [];
    /**
     * Additional process functions that the message will be piped through before
     * exposing by createReadStream. These functions are run after transforms
     * @type {Array}
     */

    this._processFuncs = [];
    /**
     * If content type is set (or derived from the filename) add it to headers
     */

    if (contentType) {
      this.setHeader('Content-Type', contentType);
    }
  } /////// PUBLIC METHODS

  /**
   * Creates and appends a child node.Arguments provided are passed to MimeNode constructor
   *
   * @param {String} [contentType] Optional content type
   * @param {Object} [options] Optional options object
   * @return {Object} Created node object
   */


  _createClass(MimeNode, [{
    key: "createChild",
    value: function createChild(contentType, options) {
      if (!options && _typeof(contentType) === 'object') {
        options = contentType;
        contentType = undefined;
      }

      var node = new MimeNode(contentType, options);
      this.appendChild(node);
      return node;
    }
    /**
     * Appends an existing node to the mime tree. Removes the node from an existing
     * tree if needed
     *
     * @param {Object} childNode node to be appended
     * @return {Object} Appended node object
     */

  }, {
    key: "appendChild",
    value: function appendChild(childNode) {
      if (childNode.rootNode !== this.rootNode) {
        childNode.rootNode = this.rootNode;
        childNode._nodeId = ++this.rootNode.nodeCounter;
      }

      childNode.parentNode = this;
      this.childNodes.push(childNode);
      return childNode;
    }
    /**
     * Replaces current node with another node
     *
     * @param {Object} node Replacement node
     * @return {Object} Replacement node
     */

  }, {
    key: "replace",
    value: function replace(node) {
      var _this = this;

      if (node === this) {
        return this;
      }

      this.parentNode.childNodes.forEach(function (childNode, i) {
        if (childNode === _this) {
          node.rootNode = _this.rootNode;
          node.parentNode = _this.parentNode;
          node._nodeId = _this._nodeId;
          _this.rootNode = _this;
          _this.parentNode = undefined;
          node.parentNode.childNodes[i] = node;
        }
      });
      return node;
    }
    /**
     * Removes current node from the mime tree
     *
     * @return {Object} removed node
     */

  }, {
    key: "remove",
    value: function remove() {
      if (!this.parentNode) {
        return this;
      }

      for (var i = this.parentNode.childNodes.length - 1; i >= 0; i--) {
        if (this.parentNode.childNodes[i] === this) {
          this.parentNode.childNodes.splice(i, 1);
          this.parentNode = undefined;
          this.rootNode = this;
          return this;
        }
      }
    }
    /**
     * Sets a header value. If the value for selected key exists, it is overwritten.
     * You can set multiple values as well by using [{key:'', value:''}] or
     * {key: 'value'} as the first argument.
     *
     * @param {String|Array|Object} key Header key or a list of key value pairs
     * @param {String} value Header value
     * @return {Object} current node
     */

  }, {
    key: "setHeader",
    value: function setHeader(key, value) {
      var _this2 = this;

      var added = false,
          headerValue; // Allow setting multiple headers at once

      if (!value && key && _typeof(key) === 'object') {
        // allow {key:'content-type', value: 'text/plain'}
        if (key.key && 'value' in key) {
          this.setHeader(key.key, key.value);
        } else if (Array.isArray(key)) {
          // allow [{key:'content-type', value: 'text/plain'}]
          key.forEach(function (i) {
            _this2.setHeader(i.key, i.value);
          });
        } else {
          // allow {'content-type': 'text/plain'}
          Object.keys(key).forEach(function (i) {
            _this2.setHeader(i, key[i]);
          });
        }

        return this;
      }

      key = this._normalizeHeaderKey(key);
      headerValue = {
        key: key,
        value: value
      }; // Check if the value exists and overwrite

      for (var i = 0, len = this._headers.length; i < len; i++) {
        if (this._headers[i].key === key) {
          if (!added) {
            // replace the first match
            this._headers[i] = headerValue;
            added = true;
          } else {
            // remove following matches
            this._headers.splice(i, 1);

            i--;
            len--;
          }
        }
      } // match not found, append the value


      if (!added) {
        this._headers.push(headerValue);
      }

      return this;
    }
    /**
     * Adds a header value. If the value for selected key exists, the value is appended
     * as a new field and old one is not touched.
     * You can set multiple values as well by using [{key:'', value:''}] or
     * {key: 'value'} as the first argument.
     *
     * @param {String|Array|Object} key Header key or a list of key value pairs
     * @param {String} value Header value
     * @return {Object} current node
     */

  }, {
    key: "addHeader",
    value: function addHeader(key, value) {
      var _this3 = this;

      // Allow setting multiple headers at once
      if (!value && key && _typeof(key) === 'object') {
        // allow {key:'content-type', value: 'text/plain'}
        if (key.key && key.value) {
          this.addHeader(key.key, key.value);
        } else if (Array.isArray(key)) {
          // allow [{key:'content-type', value: 'text/plain'}]
          key.forEach(function (i) {
            _this3.addHeader(i.key, i.value);
          });
        } else {
          // allow {'content-type': 'text/plain'}
          Object.keys(key).forEach(function (i) {
            _this3.addHeader(i, key[i]);
          });
        }

        return this;
      } else if (Array.isArray(value)) {
        value.forEach(function (val) {
          _this3.addHeader(key, val);
        });
        return this;
      }

      this._headers.push({
        key: this._normalizeHeaderKey(key),
        value: value
      });

      return this;
    }
    /**
     * Retrieves the first mathcing value of a selected key
     *
     * @param {String} key Key to search for
     * @retun {String} Value for the key
     */

  }, {
    key: "getHeader",
    value: function getHeader(key) {
      key = this._normalizeHeaderKey(key);

      for (var i = 0, len = this._headers.length; i < len; i++) {
        if (this._headers[i].key === key) {
          return this._headers[i].value;
        }
      }
    }
    /**
     * Sets body content for current node. If the value is a string, charset is added automatically
     * to Content-Type (if it is text/*). If the value is a Buffer, you need to specify
     * the charset yourself
     *
     * @param (String|Buffer) content Body content
     * @return {Object} current node
     */

  }, {
    key: "setContent",
    value: function setContent(content) {
      var _this4 = this;

      this.content = content;

      if (typeof this.content.pipe === 'function') {
        // pre-stream handler. might be triggered if a stream is set as content
        // and 'error' fires before anything is done with this stream
        this._contentErrorHandler = function (err) {
          _this4.content.removeListener('error', _this4._contentErrorHandler);

          _this4.content = err;
        };

        this.content.once('error', this._contentErrorHandler);
      } else if (typeof this.content === 'string') {
        this._isPlainText = mimeFuncs.isPlainText(this.content);

        if (this._isPlainText && mimeFuncs.hasLongerLines(this.content, 76)) {
          // If there are lines longer than 76 symbols/bytes do not use 7bit
          this._hasLongLines = true;
        }
      }

      return this;
    }
  }, {
    key: "build",
    value: function build(callback) {
      var promise;

      if (!callback) {
        promise = new Promise(function (resolve, reject) {
          callback = shared.callbackPromise(resolve, reject);
        });
      }

      var stream = this.createReadStream();
      var buf = [];
      var buflen = 0;
      var returned = false;
      stream.on('readable', function () {
        var chunk;

        while ((chunk = stream.read()) !== null) {
          buf.push(chunk);
          buflen += chunk.length;
        }
      });
      stream.once('error', function (err) {
        if (returned) {
          return;
        }

        returned = true;
        return callback(err);
      });
      stream.once('end', function (chunk) {
        if (returned) {
          return;
        }

        returned = true;

        if (chunk && chunk.length) {
          buf.push(chunk);
          buflen += chunk.length;
        }

        return callback(null, Buffer.concat(buf, buflen));
      });
      return promise;
    }
  }, {
    key: "getTransferEncoding",
    value: function getTransferEncoding() {
      var transferEncoding = false;
      var contentType = (this.getHeader('Content-Type') || '').toString().toLowerCase().trim();

      if (this.content) {
        transferEncoding = (this.getHeader('Content-Transfer-Encoding') || '').toString().toLowerCase().trim();

        if (!transferEncoding || !['base64', 'quoted-printable'].includes(transferEncoding)) {
          if (/^text\//i.test(contentType)) {
            // If there are no special symbols, no need to modify the text
            if (this._isPlainText && !this._hasLongLines) {
              transferEncoding = '7bit';
            } else if (typeof this.content === 'string' || this.content instanceof Buffer) {
              // detect preferred encoding for string value
              transferEncoding = this._getTextEncoding(this.content) === 'Q' ? 'quoted-printable' : 'base64';
            } else {
              // we can not check content for a stream, so either use preferred encoding or fallback to QP
              transferEncoding = this.textEncoding === 'B' ? 'base64' : 'quoted-printable';
            }
          } else if (!/^(multipart|message)\//i.test(contentType)) {
            transferEncoding = transferEncoding || 'base64';
          }
        }
      }

      return transferEncoding;
    }
    /**
     * Builds the header block for the mime node. Append \r\n\r\n before writing the content
     *
     * @returns {String} Headers
     */

  }, {
    key: "buildHeaders",
    value: function buildHeaders() {
      var _this5 = this;

      var transferEncoding = this.getTransferEncoding();
      var headers = [];

      if (transferEncoding) {
        this.setHeader('Content-Transfer-Encoding', transferEncoding);
      }

      if (this.filename && !this.getHeader('Content-Disposition')) {
        this.setHeader('Content-Disposition', 'attachment');
      } // Ensure mandatory header fields


      if (this.rootNode === this) {
        if (!this.getHeader('Date')) {
          this.setHeader('Date', this.date.toUTCString().replace(/GMT/, '+0000'));
        } // ensure that Message-Id is present


        this.messageId();

        if (!this.getHeader('MIME-Version')) {
          this.setHeader('MIME-Version', '1.0');
        }
      }

      this._headers.forEach(function (header) {
        var key = header.key;
        var value = header.value;
        var structured;
        var param;
        var options = {};
        var formattedHeaders = ['From', 'Sender', 'To', 'Cc', 'Bcc', 'Reply-To', 'Date', 'References'];

        if (value && _typeof(value) === 'object' && !formattedHeaders.includes(key)) {
          Object.keys(value).forEach(function (key) {
            if (key !== 'value') {
              options[key] = value[key];
            }
          });
          value = (value.value || '').toString();

          if (!value.trim()) {
            return;
          }
        }

        if (options.prepared) {
          // header value is
          if (options.foldLines) {
            headers.push(mimeFuncs.foldLines(key + ': ' + value));
          } else {
            headers.push(key + ': ' + value);
          }

          return;
        }

        switch (header.key) {
          case 'Content-Disposition':
            structured = mimeFuncs.parseHeaderValue(value);

            if (_this5.filename) {
              structured.params.filename = _this5.filename;
            }

            value = mimeFuncs.buildHeaderValue(structured);
            break;

          case 'Content-Type':
            structured = mimeFuncs.parseHeaderValue(value);

            _this5._handleContentType(structured);

            if (structured.value.match(/^text\/plain\b/) && typeof _this5.content === 'string' && /[\u0080-\uFFFF]/.test(_this5.content)) {
              structured.params.charset = 'utf-8';
            }

            value = mimeFuncs.buildHeaderValue(structured);

            if (_this5.filename) {
              // add support for non-compliant clients like QQ webmail
              // we can't build the value with buildHeaderValue as the value is non standard and
              // would be converted to parameter continuation encoding that we do not want
              param = _this5._encodeWords(_this5.filename);

              if (param !== _this5.filename || /[\s'"\\;:/=(),<>@[\]?]|^-/.test(param)) {
                // include value in quotes if needed
                param = '"' + param + '"';
              }

              value += '; name=' + param;
            }

            break;

          case 'Bcc':
            if (!_this5.keepBcc) {
              // skip BCC values
              return;
            }

            break;
        }

        value = _this5._encodeHeaderValue(key, value); // skip empty lines

        if (!(value || '').toString().trim()) {
          return;
        }

        if (typeof _this5.normalizeHeaderKey === 'function') {
          var normalized = _this5.normalizeHeaderKey(key, value);

          if (normalized && typeof normalized === 'string' && normalized.length) {
            key = normalized;
          }
        }

        headers.push(mimeFuncs.foldLines(key + ': ' + value, 76));
      });

      return headers.join('\r\n');
    }
    /**
     * Streams the rfc2822 message from the current node. If this is a root node,
     * mandatory header fields are set if missing (Date, Message-Id, MIME-Version)
     *
     * @return {String} Compiled message
     */

  }, {
    key: "createReadStream",
    value: function createReadStream(options) {
      options = options || {};
      var stream = new PassThrough(options);
      var outputStream = stream;
      var transform;
      this.stream(stream, options, function (err) {
        if (err) {
          outputStream.emit('error', err);
          return;
        }

        stream.end();
      });

      for (var i = 0, len = this._transforms.length; i < len; i++) {
        transform = typeof this._transforms[i] === 'function' ? this._transforms[i]() : this._transforms[i];
        outputStream.once('error', function (err) {
          transform.emit('error', err);
        });
        outputStream = outputStream.pipe(transform);
      } // ensure terminating newline after possible user transforms


      transform = new LastNewline();
      outputStream.once('error', function (err) {
        transform.emit('error', err);
      });
      outputStream = outputStream.pipe(transform); // dkim and stuff

      for (var _i = 0, _len = this._processFuncs.length; _i < _len; _i++) {
        transform = this._processFuncs[_i];
        outputStream = transform(outputStream);
      }

      if (this.newline) {
        var winbreak = ['win', 'windows', 'dos', '\r\n'].includes(this.newline.toString().toLowerCase());
        var newlineTransform = winbreak ? new LeWindows() : new LeUnix();

        var _stream = outputStream.pipe(newlineTransform);

        outputStream.on('error', function (err) {
          return _stream.emit('error', err);
        });
        return _stream;
      }

      return outputStream;
    }
    /**
     * Appends a transform stream object to the transforms list. Final output
     * is passed through this stream before exposing
     *
     * @param {Object} transform Read-Write stream
     */

  }, {
    key: "transform",
    value: function transform(_transform) {
      this._transforms.push(_transform);
    }
    /**
     * Appends a post process function. The functon is run after transforms and
     * uses the following syntax
     *
     *   processFunc(input) -> outputStream
     *
     * @param {Object} processFunc Read-Write stream
     */

  }, {
    key: "processFunc",
    value: function processFunc(_processFunc) {
      this._processFuncs.push(_processFunc);
    }
  }, {
    key: "stream",
    value: function stream(outputStream, options, done) {
      var _this6 = this;

      var transferEncoding = this.getTransferEncoding();
      var contentStream;
      var localStream; // protect actual callback against multiple triggering

      var returned = false;

      var callback = function callback(err) {
        if (returned) {
          return;
        }

        returned = true;
        done(err);
      }; // for multipart nodes, push child nodes
      // for content nodes end the stream


      var finalize = function finalize() {
        var childId = 0;

        var processChildNode = function processChildNode() {
          if (childId >= _this6.childNodes.length) {
            outputStream.write('\r\n--' + _this6.boundary + '--\r\n');
            return callback();
          }

          var child = _this6.childNodes[childId++];
          outputStream.write((childId > 1 ? '\r\n' : '') + '--' + _this6.boundary + '\r\n');
          child.stream(outputStream, options, function (err) {
            if (err) {
              return callback(err);
            }

            setImmediate(processChildNode);
          });
        };

        if (_this6.multipart) {
          setImmediate(processChildNode);
        } else {
          return callback();
        }
      }; // pushes node content


      var sendContent = function sendContent() {
        if (_this6.content) {
          if (Object.prototype.toString.call(_this6.content) === '[object Error]') {
            // content is already errored
            return callback(_this6.content);
          }

          if (typeof _this6.content.pipe === 'function') {
            _this6.content.removeListener('error', _this6._contentErrorHandler);

            _this6._contentErrorHandler = function (err) {
              return callback(err);
            };

            _this6.content.once('error', _this6._contentErrorHandler);
          }

          var createStream = function createStream() {
            if (['quoted-printable', 'base64'].includes(transferEncoding)) {
              contentStream = new (transferEncoding === 'base64' ? base64 : qp).Encoder(options);
              contentStream.pipe(outputStream, {
                end: false
              });
              contentStream.once('end', finalize);
              contentStream.once('error', function (err) {
                return callback(err);
              });
              localStream = _this6._getStream(_this6.content);
              localStream.pipe(contentStream);
            } else {
              // anything that is not QP or Base54 passes as-is
              localStream = _this6._getStream(_this6.content);
              localStream.pipe(outputStream, {
                end: false
              });
              localStream.once('end', finalize);
            }

            localStream.once('error', function (err) {
              return callback(err);
            });
          };

          if (_this6.content._resolve) {
            var chunks = [];
            var chunklen = 0;
            var _returned = false;

            var sourceStream = _this6._getStream(_this6.content);

            sourceStream.on('error', function (err) {
              if (_returned) {
                return;
              }

              _returned = true;
              callback(err);
            });
            sourceStream.on('readable', function () {
              var chunk;

              while ((chunk = sourceStream.read()) !== null) {
                chunks.push(chunk);
                chunklen += chunk.length;
              }
            });
            sourceStream.on('end', function () {
              if (_returned) {
                return;
              }

              _returned = true;
              _this6.content._resolve = false;
              _this6.content._resolvedValue = Buffer.concat(chunks, chunklen);
              setImmediate(createStream);
            });
          } else {
            setImmediate(createStream);
          }

          return;
        } else {
          return setImmediate(finalize);
        }
      };

      if (this._raw) {
        setImmediate(function () {
          if (Object.prototype.toString.call(_this6._raw) === '[object Error]') {
            // content is already errored
            return callback(_this6._raw);
          } // remove default error handler (if set)


          if (typeof _this6._raw.pipe === 'function') {
            _this6._raw.removeListener('error', _this6._contentErrorHandler);
          }

          var raw = _this6._getStream(_this6._raw);

          raw.pipe(outputStream, {
            end: false
          });
          raw.on('error', function (err) {
            return outputStream.emit('error', err);
          });
          raw.on('end', finalize);
        });
      } else {
        outputStream.write(this.buildHeaders() + '\r\n\r\n');
        setImmediate(sendContent);
      }
    }
    /**
     * Sets envelope to be used instead of the generated one
     *
     * @return {Object} SMTP envelope in the form of {from: 'from@example.com', to: ['to@example.com']}
     */

  }, {
    key: "setEnvelope",
    value: function setEnvelope(envelope) {
      var _this7 = this;

      var list;
      this._envelope = {
        from: false,
        to: []
      };

      if (envelope.from) {
        list = [];

        this._convertAddresses(this._parseAddresses(envelope.from), list);

        list = list.filter(function (address) {
          return address && address.address;
        });

        if (list.length && list[0]) {
          this._envelope.from = list[0].address;
        }
      }

      ['to', 'cc', 'bcc'].forEach(function (key) {
        if (envelope[key]) {
          _this7._convertAddresses(_this7._parseAddresses(envelope[key]), _this7._envelope.to);
        }
      });
      this._envelope.to = this._envelope.to.map(function (to) {
        return to.address;
      }).filter(function (address) {
        return address;
      });
      var standardFields = ['to', 'cc', 'bcc', 'from'];
      Object.keys(envelope).forEach(function (key) {
        if (!standardFields.includes(key)) {
          _this7._envelope[key] = envelope[key];
        }
      });
      return this;
    }
    /**
     * Generates and returns an object with parsed address fields
     *
     * @return {Object} Address object
     */

  }, {
    key: "getAddresses",
    value: function getAddresses() {
      var _this8 = this;

      var addresses = {};

      this._headers.forEach(function (header) {
        var key = header.key.toLowerCase();

        if (['from', 'sender', 'reply-to', 'to', 'cc', 'bcc'].includes(key)) {
          if (!Array.isArray(addresses[key])) {
            addresses[key] = [];
          }

          _this8._convertAddresses(_this8._parseAddresses(header.value), addresses[key]);
        }
      });

      return addresses;
    }
    /**
     * Generates and returns SMTP envelope with the sender address and a list of recipients addresses
     *
     * @return {Object} SMTP envelope in the form of {from: 'from@example.com', to: ['to@example.com']}
     */

  }, {
    key: "getEnvelope",
    value: function getEnvelope() {
      var _this9 = this;

      if (this._envelope) {
        return this._envelope;
      }

      var envelope = {
        from: false,
        to: []
      };

      this._headers.forEach(function (header) {
        var list = [];

        if (header.key === 'From' || !envelope.from && ['Reply-To', 'Sender'].includes(header.key)) {
          _this9._convertAddresses(_this9._parseAddresses(header.value), list);

          if (list.length && list[0]) {
            envelope.from = list[0].address;
          }
        } else if (['To', 'Cc', 'Bcc'].includes(header.key)) {
          _this9._convertAddresses(_this9._parseAddresses(header.value), envelope.to);
        }
      });

      envelope.to = envelope.to.map(function (to) {
        return to.address;
      });
      return envelope;
    }
    /**
     * Returns Message-Id value. If it does not exist, then creates one
     *
     * @return {String} Message-Id value
     */

  }, {
    key: "messageId",
    value: function messageId() {
      var messageId = this.getHeader('Message-ID'); // You really should define your own Message-Id field!

      if (!messageId) {
        messageId = this._generateMessageId();
        this.setHeader('Message-ID', messageId);
      }

      return messageId;
    }
    /**
     * Sets pregenerated content that will be used as the output of this node
     *
     * @param {String|Buffer|Stream} Raw MIME contents
     */

  }, {
    key: "setRaw",
    value: function setRaw(raw) {
      var _this10 = this;

      this._raw = raw;

      if (this._raw && typeof this._raw.pipe === 'function') {
        // pre-stream handler. might be triggered if a stream is set as content
        // and 'error' fires before anything is done with this stream
        this._contentErrorHandler = function (err) {
          _this10._raw.removeListener('error', _this10._contentErrorHandler);

          _this10._raw = err;
        };

        this._raw.once('error', this._contentErrorHandler);
      }

      return this;
    } /////// PRIVATE METHODS

    /**
     * Detects and returns handle to a stream related with the content.
     *
     * @param {Mixed} content Node content
     * @returns {Object} Stream object
     */

  }, {
    key: "_getStream",
    value: function _getStream(content) {
      var contentStream;

      if (content._resolvedValue) {
        // pass string or buffer content as a stream
        contentStream = new PassThrough();
        setImmediate(function () {
          return contentStream.end(content._resolvedValue);
        });
        return contentStream;
      } else if (typeof content.pipe === 'function') {
        // assume as stream
        return content;
      } else if (content && typeof content.path === 'string' && !content.href) {
        if (this.disableFileAccess) {
          contentStream = new PassThrough();
          setImmediate(function () {
            return contentStream.emit('error', new Error('File access rejected for ' + content.path));
          });
          return contentStream;
        } // read file


        return fs.createReadStream(content.path);
      } else if (content && typeof content.href === 'string') {
        if (this.disableUrlAccess) {
          contentStream = new PassThrough();
          setImmediate(function () {
            return contentStream.emit('error', new Error('Url access rejected for ' + content.href));
          });
          return contentStream;
        } // fetch URL


        return fetch(content.href, {
          headers: content.httpHeaders
        });
      } else {
        // pass string or buffer content as a stream
        contentStream = new PassThrough();
        setImmediate(function () {
          return contentStream.end(content || '');
        });
        return contentStream;
      }
    }
    /**
     * Parses addresses. Takes in a single address or an array or an
     * array of address arrays (eg. To: [[first group], [second group],...])
     *
     * @param {Mixed} addresses Addresses to be parsed
     * @return {Array} An array of address objects
     */

  }, {
    key: "_parseAddresses",
    value: function _parseAddresses(addresses) {
      var _this11 = this;

      return [].concat.apply([], [].concat(addresses).map(function (address) {
        // eslint-disable-line prefer-spread
        if (address && address.address) {
          address.address = _this11._normalizeAddress(address.address);
          address.name = address.name || '';
          return [address];
        }

        return addressparser(address);
      }));
    }
    /**
     * Normalizes a header key, uses Camel-Case form, except for uppercase MIME-
     *
     * @param {String} key Key to be normalized
     * @return {String} key in Camel-Case form
     */

  }, {
    key: "_normalizeHeaderKey",
    value: function _normalizeHeaderKey(key) {
      key = (key || '').toString() // no newlines in keys
      .replace(/\r?\n|\r/g, ' ').trim().toLowerCase() // use uppercase words, except MIME
      .replace(/^X-SMTPAPI$|^(MIME|DKIM|ARC|BIMI)\b|^[a-z]|-(SPF|FBL|ID|MD5)$|-[a-z]/gi, function (c) {
        return c.toUpperCase();
      }) // special case
      .replace(/^Content-Features$/i, 'Content-features');
      return key;
    }
    /**
     * Checks if the content type is multipart and defines boundary if needed.
     * Doesn't return anything, modifies object argument instead.
     *
     * @param {Object} structured Parsed header value for 'Content-Type' key
     */

  }, {
    key: "_handleContentType",
    value: function _handleContentType(structured) {
      this.contentType = structured.value.trim().toLowerCase();
      this.multipart = /^multipart\//i.test(this.contentType) ? this.contentType.substr(this.contentType.indexOf('/') + 1) : false;

      if (this.multipart) {
        this.boundary = structured.params.boundary = structured.params.boundary || this.boundary || this._generateBoundary();
      } else {
        this.boundary = false;
      }
    }
    /**
     * Generates a multipart boundary value
     *
     * @return {String} boundary value
     */

  }, {
    key: "_generateBoundary",
    value: function _generateBoundary() {
      return this.rootNode.boundaryPrefix + '-' + this.rootNode.baseBoundary + '-Part_' + this._nodeId;
    }
    /**
     * Encodes a header value for use in the generated rfc2822 email.
     *
     * @param {String} key Header key
     * @param {String} value Header value
     */

  }, {
    key: "_encodeHeaderValue",
    value: function _encodeHeaderValue(key, value) {
      key = this._normalizeHeaderKey(key);

      switch (key) {
        // Structured headers
        case 'From':
        case 'Sender':
        case 'To':
        case 'Cc':
        case 'Bcc':
        case 'Reply-To':
          return this._convertAddresses(this._parseAddresses(value));
        // values enclosed in <>

        case 'Message-ID':
        case 'In-Reply-To':
        case 'Content-Id':
          value = (value || '').toString().replace(/\r?\n|\r/g, ' ');

          if (value.charAt(0) !== '<') {
            value = '<' + value;
          }

          if (value.charAt(value.length - 1) !== '>') {
            value = value + '>';
          }

          return value;
        // space separated list of values enclosed in <>

        case 'References':
          value = [].concat.apply([], [].concat(value || '').map(function (elm) {
            // eslint-disable-line prefer-spread
            elm = (elm || '').toString().replace(/\r?\n|\r/g, ' ').trim();
            return elm.replace(/<[^>]*>/g, function (str) {
              return str.replace(/\s/g, '');
            }).split(/\s+/);
          })).map(function (elm) {
            if (elm.charAt(0) !== '<') {
              elm = '<' + elm;
            }

            if (elm.charAt(elm.length - 1) !== '>') {
              elm = elm + '>';
            }

            return elm;
          });
          return value.join(' ').trim();

        case 'Date':
          if (Object.prototype.toString.call(value) === '[object Date]') {
            return value.toUTCString().replace(/GMT/, '+0000');
          }

          value = (value || '').toString().replace(/\r?\n|\r/g, ' ');
          return this._encodeWords(value);

        case 'Content-Type':
        case 'Content-Disposition':
          // if it includes a filename then it is already encoded
          return (value || '').toString().replace(/\r?\n|\r/g, ' ');

        default:
          value = (value || '').toString().replace(/\r?\n|\r/g, ' '); // encodeWords only encodes if needed, otherwise the original string is returned

          return this._encodeWords(value);
      }
    }
    /**
     * Rebuilds address object using punycode and other adjustments
     *
     * @param {Array} addresses An array of address objects
     * @param {Array} [uniqueList] An array to be populated with addresses
     * @return {String} address string
     */

  }, {
    key: "_convertAddresses",
    value: function _convertAddresses(addresses, uniqueList) {
      var _this12 = this;

      var values = [];
      uniqueList = uniqueList || [];
      [].concat(addresses || []).forEach(function (address) {
        if (address.address) {
          address.address = _this12._normalizeAddress(address.address);

          if (!address.name) {
            values.push(address.address.indexOf(' ') >= 0 ? "<".concat(address.address, ">") : "".concat(address.address));
          } else if (address.name) {
            values.push("".concat(_this12._encodeAddressName(address.name), " <").concat(address.address, ">"));
          }

          if (address.address) {
            if (!uniqueList.filter(function (a) {
              return a.address === address.address;
            }).length) {
              uniqueList.push(address);
            }
          }
        } else if (address.group) {
          var groupListAddresses = (address.group.length ? _this12._convertAddresses(address.group, uniqueList) : '').trim();
          values.push("".concat(_this12._encodeAddressName(address.name), ":").concat(groupListAddresses, ";"));
        }
      });
      return values.join(', ');
    }
    /**
     * Normalizes an email address
     *
     * @param {Array} address An array of address objects
     * @return {String} address string
     */

  }, {
    key: "_normalizeAddress",
    value: function _normalizeAddress(address) {
      address = (address || '').toString().replace(/[\x00-\x1F<>]+/g, ' ') // remove unallowed characters
      .trim();
      var lastAt = address.lastIndexOf('@');

      if (lastAt < 0) {
        // Bare username
        return address;
      }

      var user = address.substr(0, lastAt);
      var domain = address.substr(lastAt + 1); // Usernames are not touched and are kept as is even if these include unicode
      // Domains are punycoded by default
      // 'jõgeva.ee' will be converted to 'xn--jgeva-dua.ee'
      // non-unicode domains are left as is

      var encodedDomain;

      try {
        encodedDomain = punycode.toASCII(domain.toLowerCase());
      } catch (err) {// keep as is?
      }

      if (user.indexOf(' ') >= 0) {
        if (user.charAt(0) !== '"') {
          user = '"' + user;
        }

        if (user.substr(-1) !== '"') {
          user = user + '"';
        }
      }

      return "".concat(user, "@").concat(encodedDomain);
    }
    /**
     * If needed, mime encodes the name part
     *
     * @param {String} name Name part of an address
     * @returns {String} Mime word encoded string if needed
     */

  }, {
    key: "_encodeAddressName",
    value: function _encodeAddressName(name) {
      if (!/^[\w ']*$/.test(name)) {
        if (/^[\x20-\x7e]*$/.test(name)) {
          return '"' + name.replace(/([\\"])/g, '\\$1') + '"';
        } else {
          return mimeFuncs.encodeWord(name, this._getTextEncoding(name), 52);
        }
      }

      return name;
    }
    /**
     * If needed, mime encodes the name part
     *
     * @param {String} name Name part of an address
     * @returns {String} Mime word encoded string if needed
     */

  }, {
    key: "_encodeWords",
    value: function _encodeWords(value) {
      // set encodeAll parameter to true even though it is against the recommendation of RFC2047,
      // by default only words that include non-ascii should be converted into encoded words
      // but some clients (eg. Zimbra) do not handle it properly and remove surrounding whitespace
      return mimeFuncs.encodeWords(value, this._getTextEncoding(value), 52, true);
    }
    /**
     * Detects best mime encoding for a text value
     *
     * @param {String} value Value to check for
     * @return {String} either 'Q' or 'B'
     */

  }, {
    key: "_getTextEncoding",
    value: function _getTextEncoding(value) {
      value = (value || '').toString();
      var encoding = this.textEncoding;
      var latinLen;
      var nonLatinLen;

      if (!encoding) {
        // count latin alphabet symbols and 8-bit range symbols + control symbols
        // if there are more latin characters, then use quoted-printable
        // encoding, otherwise use base64
        nonLatinLen = (value.match(/[\x00-\x08\x0B\x0C\x0E-\x1F\u0080-\uFFFF]/g) || []).length; // eslint-disable-line no-control-regex

        latinLen = (value.match(/[a-z]/gi) || []).length; // if there are more latin symbols than binary/unicode, then prefer Q, otherwise B

        encoding = nonLatinLen < latinLen ? 'Q' : 'B';
      }

      return encoding;
    }
    /**
     * Generates a message id
     *
     * @return {String} Random Message-ID value
     */

  }, {
    key: "_generateMessageId",
    value: function _generateMessageId() {
      return '<' + [2, 2, 2, 6].reduce( // crux to generate UUID-like random strings
      function (prev, len) {
        return prev + '-' + crypto.randomBytes(len).toString('hex');
      }, crypto.randomBytes(4).toString('hex')) + '@' + // try to use the domain of the FROM address or fallback to server hostname
      (this.getEnvelope().from || this.hostname || os.hostname() || 'localhost').split('@').pop() + '>';
    }
  }]);

  return MimeNode;
}();

module.exports = MimeNode;

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var Transform = __webpack_require__(15).Transform;
/**
 * Encodes a Buffer into a base64 encoded string
 *
 * @param {Buffer} buffer Buffer to convert
 * @returns {String} base64 encoded string
 */


function encode(buffer) {
  if (typeof buffer === 'string') {
    buffer = Buffer.from(buffer, 'utf-8');
  }

  return buffer.toString('base64');
}
/**
 * Adds soft line breaks to a base64 string
 *
 * @param {String} str base64 encoded string that might need line wrapping
 * @param {Number} [lineLength=76] Maximum allowed length for a line
 * @returns {String} Soft-wrapped base64 encoded string
 */


function wrap(str, lineLength) {
  str = (str || '').toString();
  lineLength = lineLength || 76;

  if (str.length <= lineLength) {
    return str;
  }

  var result = [];
  var pos = 0;
  var chunkLength = lineLength * 1024;

  while (pos < str.length) {
    var wrappedLines = str.substr(pos, chunkLength).replace(new RegExp('.{' + lineLength + '}', 'g'), '$&\r\n').trim();
    result.push(wrappedLines);
    pos += chunkLength;
  }

  return result.join('\r\n').trim();
}
/**
 * Creates a transform stream for encoding data to base64 encoding
 *
 * @constructor
 * @param {Object} options Stream options
 * @param {Number} [options.lineLength=76] Maximum lenght for lines, set to false to disable wrapping
 */


var Encoder = /*#__PURE__*/function (_Transform) {
  _inherits(Encoder, _Transform);

  var _super = _createSuper(Encoder);

  function Encoder(options) {
    var _this;

    _classCallCheck(this, Encoder);

    _this = _super.call(this); // init Transform

    _this.options = options || {};

    if (_this.options.lineLength !== false) {
      _this.options.lineLength = _this.options.lineLength || 76;
    }

    _this._curLine = '';
    _this._remainingBytes = false;
    _this.inputBytes = 0;
    _this.outputBytes = 0;
    return _this;
  }

  _createClass(Encoder, [{
    key: "_transform",
    value: function _transform(chunk, encoding, done) {
      if (encoding !== 'buffer') {
        chunk = Buffer.from(chunk, encoding);
      }

      if (!chunk || !chunk.length) {
        return setImmediate(done);
      }

      this.inputBytes += chunk.length;

      if (this._remainingBytes && this._remainingBytes.length) {
        chunk = Buffer.concat([this._remainingBytes, chunk], this._remainingBytes.length + chunk.length);
        this._remainingBytes = false;
      }

      if (chunk.length % 3) {
        this._remainingBytes = chunk.slice(chunk.length - chunk.length % 3);
        chunk = chunk.slice(0, chunk.length - chunk.length % 3);
      } else {
        this._remainingBytes = false;
      }

      var b64 = this._curLine + encode(chunk);

      if (this.options.lineLength) {
        b64 = wrap(b64, this.options.lineLength); // remove last line as it is still most probably incomplete

        var lastLF = b64.lastIndexOf('\n');

        if (lastLF < 0) {
          this._curLine = b64;
          b64 = '';
        } else if (lastLF === b64.length - 1) {
          this._curLine = '';
        } else {
          this._curLine = b64.substr(lastLF + 1);
          b64 = b64.substr(0, lastLF + 1);
        }
      }

      if (b64) {
        this.outputBytes += b64.length;
        this.push(Buffer.from(b64, 'ascii'));
      }

      setImmediate(done);
    }
  }, {
    key: "_flush",
    value: function _flush(done) {
      if (this._remainingBytes && this._remainingBytes.length) {
        this._curLine += encode(this._remainingBytes);
      }

      if (this._curLine) {
        this._curLine = wrap(this._curLine, this.options.lineLength);
        this.outputBytes += this._curLine.length;
        this.push(this._curLine, 'ascii');
        this._curLine = '';
      }

      done();
    }
  }]);

  return Encoder;
}(Transform); // expose to the world


module.exports = {
  encode: encode,
  wrap: wrap,
  Encoder: Encoder
};

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var Transform = __webpack_require__(15).Transform;
/**
 * Encodes a Buffer into a Quoted-Printable encoded string
 *
 * @param {Buffer} buffer Buffer to convert
 * @returns {String} Quoted-Printable encoded string
 */


function encode(buffer) {
  if (typeof buffer === 'string') {
    buffer = Buffer.from(buffer, 'utf-8');
  } // usable characters that do not need encoding


  var ranges = [// https://tools.ietf.org/html/rfc2045#section-6.7
  [0x09], // <TAB>
  [0x0a], // <LF>
  [0x0d], // <CR>
  [0x20, 0x3c], // <SP>!"#$%&'()*+,-./0123456789:;
  [0x3e, 0x7e] // >?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}
  ];
  var result = '';
  var ord;

  for (var i = 0, len = buffer.length; i < len; i++) {
    ord = buffer[i]; // if the char is in allowed range, then keep as is, unless it is a WS in the end of a line

    if (checkRanges(ord, ranges) && !((ord === 0x20 || ord === 0x09) && (i === len - 1 || buffer[i + 1] === 0x0a || buffer[i + 1] === 0x0d))) {
      result += String.fromCharCode(ord);
      continue;
    }

    result += '=' + (ord < 0x10 ? '0' : '') + ord.toString(16).toUpperCase();
  }

  return result;
}
/**
 * Adds soft line breaks to a Quoted-Printable string
 *
 * @param {String} str Quoted-Printable encoded string that might need line wrapping
 * @param {Number} [lineLength=76] Maximum allowed length for a line
 * @returns {String} Soft-wrapped Quoted-Printable encoded string
 */


function wrap(str, lineLength) {
  str = (str || '').toString();
  lineLength = lineLength || 76;

  if (str.length <= lineLength) {
    return str;
  }

  var pos = 0;
  var len = str.length;
  var match, code, line;
  var lineMargin = Math.floor(lineLength / 3);
  var result = ''; // insert soft linebreaks where needed

  while (pos < len) {
    line = str.substr(pos, lineLength);

    if (match = line.match(/\r\n/)) {
      line = line.substr(0, match.index + match[0].length);
      result += line;
      pos += line.length;
      continue;
    }

    if (line.substr(-1) === '\n') {
      // nothing to change here
      result += line;
      pos += line.length;
      continue;
    } else if (match = line.substr(-lineMargin).match(/\n.*?$/)) {
      // truncate to nearest line break
      line = line.substr(0, line.length - (match[0].length - 1));
      result += line;
      pos += line.length;
      continue;
    } else if (line.length > lineLength - lineMargin && (match = line.substr(-lineMargin).match(/[ \t.,!?][^ \t.,!?]*$/))) {
      // truncate to nearest space
      line = line.substr(0, line.length - (match[0].length - 1));
    } else if (line.match(/[=][\da-f]{0,2}$/i)) {
      // push incomplete encoding sequences to the next line
      if (match = line.match(/[=][\da-f]{0,1}$/i)) {
        line = line.substr(0, line.length - match[0].length);
      } // ensure that utf-8 sequences are not split


      while (line.length > 3 && line.length < len - pos && !line.match(/^(?:=[\da-f]{2}){1,4}$/i) && (match = line.match(/[=][\da-f]{2}$/gi))) {
        code = parseInt(match[0].substr(1, 2), 16);

        if (code < 128) {
          break;
        }

        line = line.substr(0, line.length - 3);

        if (code >= 0xc0) {
          break;
        }
      }
    }

    if (pos + line.length < len && line.substr(-1) !== '\n') {
      if (line.length === lineLength && line.match(/[=][\da-f]{2}$/i)) {
        line = line.substr(0, line.length - 3);
      } else if (line.length === lineLength) {
        line = line.substr(0, line.length - 1);
      }

      pos += line.length;
      line += '=\r\n';
    } else {
      pos += line.length;
    }

    result += line;
  }

  return result;
}
/**
 * Helper function to check if a number is inside provided ranges
 *
 * @param {Number} nr Number to check for
 * @param {Array} ranges An Array of allowed values
 * @returns {Boolean} True if the value was found inside allowed ranges, false otherwise
 */


function checkRanges(nr, ranges) {
  for (var i = ranges.length - 1; i >= 0; i--) {
    if (!ranges[i].length) {
      continue;
    }

    if (ranges[i].length === 1 && nr === ranges[i][0]) {
      return true;
    }

    if (ranges[i].length === 2 && nr >= ranges[i][0] && nr <= ranges[i][1]) {
      return true;
    }
  }

  return false;
}
/**
 * Creates a transform stream for encoding data to Quoted-Printable encoding
 *
 * @constructor
 * @param {Object} options Stream options
 * @param {Number} [options.lineLength=76] Maximum length for lines, set to false to disable wrapping
 */


var Encoder = /*#__PURE__*/function (_Transform) {
  _inherits(Encoder, _Transform);

  var _super = _createSuper(Encoder);

  function Encoder(options) {
    var _this;

    _classCallCheck(this, Encoder);

    _this = _super.call(this); // init Transform

    _this.options = options || {};

    if (_this.options.lineLength !== false) {
      _this.options.lineLength = _this.options.lineLength || 76;
    }

    _this._curLine = '';
    _this.inputBytes = 0;
    _this.outputBytes = 0;
    return _this;
  }

  _createClass(Encoder, [{
    key: "_transform",
    value: function _transform(chunk, encoding, done) {
      var _this2 = this;

      var qp;

      if (encoding !== 'buffer') {
        chunk = Buffer.from(chunk, encoding);
      }

      if (!chunk || !chunk.length) {
        return done();
      }

      this.inputBytes += chunk.length;

      if (this.options.lineLength) {
        qp = this._curLine + encode(chunk);
        qp = wrap(qp, this.options.lineLength);
        qp = qp.replace(/(^|\n)([^\n]*)$/, function (match, lineBreak, lastLine) {
          _this2._curLine = lastLine;
          return lineBreak;
        });

        if (qp) {
          this.outputBytes += qp.length;
          this.push(qp);
        }
      } else {
        qp = encode(chunk);
        this.outputBytes += qp.length;
        this.push(qp, 'ascii');
      }

      done();
    }
  }, {
    key: "_flush",
    value: function _flush(done) {
      if (this._curLine) {
        this.outputBytes += this._curLine.length;
        this.push(this._curLine, 'ascii');
      }

      done();
    }
  }]);

  return Encoder;
}(Transform); // expose to the world


module.exports = {
  encode: encode,
  wrap: wrap,
  Encoder: Encoder
};

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var stream = __webpack_require__(15);

var Transform = stream.Transform;
/**
 * Ensures that only <CR><LF> sequences are used for linebreaks
 *
 * @param {Object} options Stream options
 */

var LeWindows = /*#__PURE__*/function (_Transform) {
  _inherits(LeWindows, _Transform);

  var _super = _createSuper(LeWindows);

  function LeWindows(options) {
    var _this;

    _classCallCheck(this, LeWindows);

    _this = _super.call(this, options); // init Transform

    _this.options = options || {};
    _this.lastByte = false;
    return _this;
  }
  /**
   * Escapes dots
   */


  _createClass(LeWindows, [{
    key: "_transform",
    value: function _transform(chunk, encoding, done) {
      var buf;
      var lastPos = 0;

      for (var i = 0, len = chunk.length; i < len; i++) {
        if (chunk[i] === 0x0a) {
          // \n
          if (i && chunk[i - 1] !== 0x0d || !i && this.lastByte !== 0x0d) {
            if (i > lastPos) {
              buf = chunk.slice(lastPos, i);
              this.push(buf);
            }

            this.push(Buffer.from('\r\n'));
            lastPos = i + 1;
          }
        }
      }

      if (lastPos && lastPos < chunk.length) {
        buf = chunk.slice(lastPos);
        this.push(buf);
      } else if (!lastPos) {
        this.push(chunk);
      }

      this.lastByte = chunk[chunk.length - 1];
      done();
    }
  }]);

  return LeWindows;
}(Transform);

module.exports = LeWindows;

/***/ }),
/* 295 */
/***/ (function(module, exports) {

module.exports = require("tls");

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var Stream = __webpack_require__(15).Stream;

var fetch = __webpack_require__(165);

var crypto = __webpack_require__(68);

var shared = __webpack_require__(44);
/**
 * XOAUTH2 access_token generator for Gmail.
 * Create client ID for web applications in Google API console to use it.
 * See Offline Access for receiving the needed refreshToken for an user
 * https://developers.google.com/accounts/docs/OAuth2WebServer#offline
 *
 * Usage for generating access tokens with a custom method using provisionCallback:
 * provisionCallback(user, renew, callback)
 *   * user is the username to get the token for
 *   * renew is a boolean that if true indicates that existing token failed and needs to be renewed
 *   * callback is the callback to run with (error, accessToken [, expires])
 *     * accessToken is a string
 *     * expires is an optional expire time in milliseconds
 * If provisionCallback is used, then Nodemailer does not try to attempt generating the token by itself
 *
 * @constructor
 * @param {Object} options Client information for token generation
 * @param {String} options.user User e-mail address
 * @param {String} options.clientId Client ID value
 * @param {String} options.clientSecret Client secret value
 * @param {String} options.refreshToken Refresh token for an user
 * @param {String} options.accessUrl Endpoint for token generation, defaults to 'https://accounts.google.com/o/oauth2/token'
 * @param {String} options.accessToken An existing valid accessToken
 * @param {String} options.privateKey Private key for JSW
 * @param {Number} options.expires Optional Access Token expire time in ms
 * @param {Number} options.timeout Optional TTL for Access Token in seconds
 * @param {Function} options.provisionCallback Function to run when a new access token is required
 */


var XOAuth2 = /*#__PURE__*/function (_Stream) {
  _inherits(XOAuth2, _Stream);

  var _super = _createSuper(XOAuth2);

  function XOAuth2(options, logger) {
    var _this;

    _classCallCheck(this, XOAuth2);

    _this = _super.call(this);
    _this.options = options || {};

    if (options && options.serviceClient) {
      if (!options.privateKey || !options.user) {
        setImmediate(function () {
          return _this.emit('error', new Error('Options "privateKey" and "user" are required for service account!'));
        });
        return _possibleConstructorReturn(_this);
      }

      var serviceRequestTimeout = Math.min(Math.max(Number(_this.options.serviceRequestTimeout) || 0, 0), 3600);
      _this.options.serviceRequestTimeout = serviceRequestTimeout || 5 * 60;
    }

    _this.logger = shared.getLogger({
      logger: logger
    }, {
      component: _this.options.component || 'OAuth2'
    });
    _this.provisionCallback = typeof _this.options.provisionCallback === 'function' ? _this.options.provisionCallback : false;
    _this.options.accessUrl = _this.options.accessUrl || 'https://accounts.google.com/o/oauth2/token';
    _this.options.customHeaders = _this.options.customHeaders || {};
    _this.options.customParams = _this.options.customParams || {};
    _this.accessToken = _this.options.accessToken || false;

    if (_this.options.expires && Number(_this.options.expires)) {
      _this.expires = _this.options.expires;
    } else {
      var timeout = Math.max(Number(_this.options.timeout) || 0, 0);
      _this.expires = timeout && Date.now() + timeout * 1000 || 0;
    }

    return _this;
  }
  /**
   * Returns or generates (if previous has expired) a XOAuth2 token
   *
   * @param {Boolean} renew If false then use cached access token (if available)
   * @param {Function} callback Callback function with error object and token string
   */


  _createClass(XOAuth2, [{
    key: "getToken",
    value: function getToken(renew, callback) {
      var _this2 = this;

      if (!renew && this.accessToken && (!this.expires || this.expires > Date.now())) {
        return callback(null, this.accessToken);
      }

      var generateCallback = function generateCallback() {
        if (arguments.length <= 0 ? undefined : arguments[0]) {
          _this2.logger.error({
            err: arguments.length <= 0 ? undefined : arguments[0],
            tnx: 'OAUTH2',
            user: _this2.options.user,
            action: 'renew'
          }, 'Failed generating new Access Token for %s', _this2.options.user);
        } else {
          _this2.logger.info({
            tnx: 'OAUTH2',
            user: _this2.options.user,
            action: 'renew'
          }, 'Generated new Access Token for %s', _this2.options.user);
        }

        callback.apply(void 0, arguments);
      };

      if (this.provisionCallback) {
        this.provisionCallback(this.options.user, !!renew, function (err, accessToken, expires) {
          if (!err && accessToken) {
            _this2.accessToken = accessToken;
            _this2.expires = expires || 0;
          }

          generateCallback(err, accessToken);
        });
      } else {
        this.generateToken(generateCallback);
      }
    }
    /**
     * Updates token values
     *
     * @param {String} accessToken New access token
     * @param {Number} timeout Access token lifetime in seconds
     *
     * Emits 'token': { user: User email-address, accessToken: the new accessToken, timeout: TTL in seconds}
     */

  }, {
    key: "updateToken",
    value: function updateToken(accessToken, timeout) {
      this.accessToken = accessToken;
      timeout = Math.max(Number(timeout) || 0, 0);
      this.expires = timeout && Date.now() + timeout * 1000 || 0;
      this.emit('token', {
        user: this.options.user,
        accessToken: accessToken || '',
        expires: this.expires
      });
    }
    /**
     * Generates a new XOAuth2 token with the credentials provided at initialization
     *
     * @param {Function} callback Callback function with error object and token string
     */

  }, {
    key: "generateToken",
    value: function generateToken(callback) {
      var _this3 = this;

      var urlOptions;
      var loggedUrlOptions;

      if (this.options.serviceClient) {
        // service account - https://developers.google.com/identity/protocols/OAuth2ServiceAccount
        var iat = Math.floor(Date.now() / 1000); // unix time

        var tokenData = {
          iss: this.options.serviceClient,
          scope: this.options.scope || 'https://mail.google.com/',
          sub: this.options.user,
          aud: this.options.accessUrl,
          iat: iat,
          exp: iat + this.options.serviceRequestTimeout
        };
        var token;

        try {
          token = this.jwtSignRS256(tokenData);
        } catch (err) {
          return callback(new Error('Can\x27t generate token. Check your auth options'));
        }

        urlOptions = {
          grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',
          assertion: token
        };
        loggedUrlOptions = {
          grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',
          assertion: tokenData
        };
      } else {
        if (!this.options.refreshToken) {
          return callback(new Error('Can\x27t create new access token for user'));
        } // web app - https://developers.google.com/identity/protocols/OAuth2WebServer


        urlOptions = {
          client_id: this.options.clientId || '',
          client_secret: this.options.clientSecret || '',
          refresh_token: this.options.refreshToken,
          grant_type: 'refresh_token'
        };
        loggedUrlOptions = {
          client_id: this.options.clientId || '',
          client_secret: (this.options.clientSecret || '').substr(0, 6) + '...',
          refresh_token: (this.options.refreshToken || '').substr(0, 6) + '...',
          grant_type: 'refresh_token'
        };
      }

      Object.keys(this.options.customParams).forEach(function (key) {
        urlOptions[key] = _this3.options.customParams[key];
        loggedUrlOptions[key] = _this3.options.customParams[key];
      });
      this.logger.debug({
        tnx: 'OAUTH2',
        user: this.options.user,
        action: 'generate'
      }, 'Requesting token using: %s', JSON.stringify(loggedUrlOptions));
      this.postRequest(this.options.accessUrl, urlOptions, this.options, function (error, body) {
        var data;

        if (error) {
          return callback(error);
        }

        try {
          data = JSON.parse(body.toString());
        } catch (E) {
          return callback(E);
        }

        if (!data || _typeof(data) !== 'object') {
          _this3.logger.debug({
            tnx: 'OAUTH2',
            user: _this3.options.user,
            action: 'post'
          }, 'Response: %s', (body || '').toString());

          return callback(new Error('Invalid authentication response'));
        }

        var logData = {};
        Object.keys(data).forEach(function (key) {
          if (key !== 'access_token') {
            logData[key] = data[key];
          } else {
            logData[key] = (data[key] || '').toString().substr(0, 6) + '...';
          }
        });

        _this3.logger.debug({
          tnx: 'OAUTH2',
          user: _this3.options.user,
          action: 'post'
        }, 'Response: %s', JSON.stringify(logData));

        if (data.error) {
          // Error Response : https://tools.ietf.org/html/rfc6749#section-5.2
          var errorMessage = data.error;

          if (data.error_description) {
            errorMessage += ': ' + data.error_description;
          }

          if (data.error_uri) {
            errorMessage += ' (' + data.error_uri + ')';
          }

          return callback(new Error(errorMessage));
        }

        if (data.access_token) {
          _this3.updateToken(data.access_token, data.expires_in);

          return callback(null, _this3.accessToken);
        }

        return callback(new Error('No access token'));
      });
    }
    /**
     * Converts an access_token and user id into a base64 encoded XOAuth2 token
     *
     * @param {String} [accessToken] Access token string
     * @return {String} Base64 encoded token for IMAP or SMTP login
     */

  }, {
    key: "buildXOAuth2Token",
    value: function buildXOAuth2Token(accessToken) {
      var authData = ['user=' + (this.options.user || ''), 'auth=Bearer ' + (accessToken || this.accessToken), '', ''];
      return Buffer.from(authData.join('\x01'), 'utf-8').toString('base64');
    }
    /**
     * Custom POST request handler.
     * This is only needed to keep paths short in Windows – usually this module
     * is a dependency of a dependency and if it tries to require something
     * like the request module the paths get way too long to handle for Windows.
     * As we do only a simple POST request we do not actually require complicated
     * logic support (no redirects, no nothing) anyway.
     *
     * @param {String} url Url to POST to
     * @param {String|Buffer} payload Payload to POST
     * @param {Function} callback Callback function with (err, buff)
     */

  }, {
    key: "postRequest",
    value: function postRequest(url, payload, params, callback) {
      var returned = false;
      var chunks = [];
      var chunklen = 0;
      var req = fetch(url, {
        method: 'post',
        headers: params.customHeaders,
        body: payload,
        allowErrorResponse: true
      });
      req.on('readable', function () {
        var chunk;

        while ((chunk = req.read()) !== null) {
          chunks.push(chunk);
          chunklen += chunk.length;
        }
      });
      req.once('error', function (err) {
        if (returned) {
          return;
        }

        returned = true;
        return callback(err);
      });
      req.once('end', function () {
        if (returned) {
          return;
        }

        returned = true;
        return callback(null, Buffer.concat(chunks, chunklen));
      });
    }
    /**
     * Encodes a buffer or a string into Base64url format
     *
     * @param {Buffer|String} data The data to convert
     * @return {String} The encoded string
     */

  }, {
    key: "toBase64URL",
    value: function toBase64URL(data) {
      if (typeof data === 'string') {
        data = Buffer.from(data);
      }

      return data.toString('base64').replace(/[=]+/g, '') // remove '='s
      .replace(/\+/g, '-') // '+' → '-'
      .replace(/\//g, '_'); // '/' → '_'
    }
    /**
     * Creates a JSON Web Token signed with RS256 (SHA256 + RSA)
     *
     * @param {Object} payload The payload to include in the generated token
     * @return {String} The generated and signed token
     */

  }, {
    key: "jwtSignRS256",
    value: function jwtSignRS256(payload) {
      var _this4 = this;

      payload = ['{"alg":"RS256","typ":"JWT"}', JSON.stringify(payload)].map(function (val) {
        return _this4.toBase64URL(val);
      }).join('.');
      var signature = crypto.createSign('RSA-SHA256').update(payload).sign(this.options.privateKey);
      return payload + '.' + this.toBase64URL(signature);
    }
  }]);

  return XOAuth2;
}(Stream);

module.exports = XOAuth2;

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var services = __webpack_require__(666);

var normalized = {};
Object.keys(services).forEach(function (key) {
  var service = services[key];
  normalized[normalizeKey(key)] = normalizeService(service);
  [].concat(service.aliases || []).forEach(function (alias) {
    normalized[normalizeKey(alias)] = normalizeService(service);
  });
  [].concat(service.domains || []).forEach(function (domain) {
    normalized[normalizeKey(domain)] = normalizeService(service);
  });
});

function normalizeKey(key) {
  return key.replace(/[^a-zA-Z0-9.-]/g, '').toLowerCase();
}

function normalizeService(service) {
  var filter = ['domains', 'aliases'];
  var response = {};
  Object.keys(service).forEach(function (key) {
    if (filter.indexOf(key) < 0) {
      response[key] = service[key];
    }
  });
  return response;
}
/**
 * Resolves SMTP config for given key. Key can be a name (like 'Gmail'), alias (like 'Google Mail') or
 * an email address (like 'test@googlemail.com').
 *
 * @param {String} key [description]
 * @returns {Object} SMTP config or false if not found
 */


module.exports = function (key) {
  key = normalizeKey(key.split('@').pop());
  return normalized[key] || false;
};

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);

    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    return fn.apply(thisArg, args);
  };
};

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var utils = __webpack_require__(23);
/**
 * Convert a data object to FormData
 * @param {Object} obj
 * @param {?Object} [formData]
 * @returns {Object}
 **/


function toFormData(obj, formData) {
  // eslint-disable-next-line no-param-reassign
  formData = formData || new FormData();
  var stack = [];

  function convertValue(value) {
    if (value === null) return '';

    if (utils.isDate(value)) {
      return value.toISOString();
    }

    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {
      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);
    }

    return value;
  }

  function build(data, parentKey) {
    if (utils.isPlainObject(data) || utils.isArray(data)) {
      if (stack.indexOf(data) !== -1) {
        throw Error('Circular reference detected in ' + parentKey);
      }

      stack.push(data);
      utils.forEach(data, function each(value, key) {
        if (utils.isUndefined(value)) return;
        var fullKey = parentKey ? parentKey + '.' + key : key;
        var arr;

        if (value && !parentKey && _typeof(value) === 'object') {
          if (utils.endsWith(key, '{}')) {
            // eslint-disable-next-line no-param-reassign
            value = JSON.stringify(value);
          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {
            // eslint-disable-next-line func-names
            arr.forEach(function (el) {
              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));
            });
            return;
          }
        }

        build(value, fullKey);
      });
      stack.pop();
    } else {
      formData.append(parentKey, convertValue(data));
    }
  }

  build(obj);
  return formData;
}

module.exports = toFormData;

/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var AxiosError = __webpack_require__(83);
/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */


module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;

  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(new AxiosError('Request failed with status code ' + response.status, [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4], response.config, response.request, response));
  }
};

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

var async = __webpack_require__(302),
    abort = __webpack_require__(303); // API


module.exports = iterate;
/**
 * Iterates over each job object
 *
 * @param {array|object} list - array or object (named list) to iterate over
 * @param {function} iterator - iterator to run
 * @param {object} state - current job status
 * @param {function} callback - invoked when all elements processed
 */

function iterate(list, iterator, state, callback) {
  // store current index
  var key = state['keyedList'] ? state['keyedList'][state.index] : state.index;
  state.jobs[key] = runJob(iterator, key, list[key], function (error, output) {
    // don't repeat yourself
    // skip secondary callbacks
    if (!(key in state.jobs)) {
      return;
    } // clean up jobs


    delete state.jobs[key];

    if (error) {
      // don't process rest of the results
      // stop still active jobs
      // and reset the list
      abort(state);
    } else {
      state.results[key] = output;
    } // return salvaged results


    callback(error, state.results);
  });
}
/**
 * Runs iterator over provided job element
 *
 * @param   {function} iterator - iterator to invoke
 * @param   {string|number} key - key/index of the element in the list of jobs
 * @param   {mixed} item - job description
 * @param   {function} callback - invoked after iterator is done with the job
 * @returns {function|mixed} - job abort function or something else
 */


function runJob(iterator, key, item, callback) {
  var aborter; // allow shortcut if iterator expects only two arguments

  if (iterator.length == 2) {
    aborter = iterator(item, async(callback));
  } // otherwise go with full three arguments
  else {
    aborter = iterator(item, key, async(callback));
  }

  return aborter;
}

/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

var defer = __webpack_require__(697); // API


module.exports = async;
/**
 * Runs provided callback asynchronously
 * even if callback itself is not
 *
 * @param   {function} callback - callback to invoke
 * @returns {function} - augmented callback
 */

function async(callback) {
  var isAsync = false; // check if async happened

  defer(function () {
    isAsync = true;
  });
  return function async_callback(err, result) {
    if (isAsync) {
      callback(err, result);
    } else {
      defer(function nextTick_callback() {
        callback(err, result);
      });
    }
  };
}

/***/ }),
/* 303 */
/***/ (function(module, exports) {

// API
module.exports = abort;
/**
 * Aborts leftover active jobs
 *
 * @param {object} state - current state object
 */

function abort(state) {
  Object.keys(state.jobs).forEach(clean.bind(state)); // reset leftover jobs

  state.jobs = {};
}
/**
 * Cleans up leftover job by invoking abort function for the provided job id
 *
 * @this  state
 * @param {string|number} key - job id to abort
 */


function clean(key) {
  if (typeof this.jobs[key] == 'function') {
    this.jobs[key]();
  }
}

/***/ }),
/* 304 */
/***/ (function(module, exports) {

// API
module.exports = state;
/**
 * Creates initial state object
 * for iteration over list
 *
 * @param   {array|object} list - list to iterate over
 * @param   {function|null} sortMethod - function to use for keys sort,
 *                                     or `null` to keep them as is
 * @returns {object} - initial state object
 */

function state(list, sortMethod) {
  var isNamedList = !Array.isArray(list),
      initState = {
    index: 0,
    keyedList: isNamedList || sortMethod ? Object.keys(list) : null,
    jobs: {},
    results: isNamedList ? {} : [],
    size: isNamedList ? Object.keys(list).length : list.length
  };

  if (sortMethod) {
    // sort array keys based on it's values
    // sort object's keys just on own merit
    initState.keyedList.sort(isNamedList ? sortMethod : function (a, b) {
      return sortMethod(list[a], list[b]);
    });
  }

  return initState;
}

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

var abort = __webpack_require__(303),
    async = __webpack_require__(302); // API


module.exports = terminator;
/**
 * Terminates jobs in the attached state context
 *
 * @this  AsyncKitState#
 * @param {function} callback - final callback to invoke after termination
 */

function terminator(callback) {
  if (!Object.keys(this.jobs).length) {
    return;
  } // fast forward iteration index


  this.index = this.size; // abort jobs

  abort(this); // send back results we have so far

  async(callback)(null, this.results);
}

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

var iterate = __webpack_require__(301),
    initState = __webpack_require__(304),
    terminator = __webpack_require__(305); // Public API


module.exports = serialOrdered; // sorting helpers

module.exports.ascending = ascending;
module.exports.descending = descending;
/**
 * Runs iterator over provided sorted array elements in series
 *
 * @param   {array|object} list - array or object (named list) to iterate over
 * @param   {function} iterator - iterator to run
 * @param   {function} sortMethod - custom sort function
 * @param   {function} callback - invoked when all elements processed
 * @returns {function} - jobs terminator
 */

function serialOrdered(list, iterator, sortMethod, callback) {
  var state = initState(list, sortMethod);
  iterate(list, iterator, state, function iteratorHandler(error, result) {
    if (error) {
      callback(error, result);
      return;
    }

    state.index++; // are we there yet?

    if (state.index < (state['keyedList'] || list).length) {
      iterate(list, iterator, state, iteratorHandler);
      return;
    } // done here


    callback(null, state.results);
  });
  return terminator.bind(state, callback);
}
/*
 * -- Sort methods
 */

/**
 * sort helper to sort array elements in ascending order
 *
 * @param   {mixed} a - an item to compare
 * @param   {mixed} b - an item to compare
 * @returns {number} - comparison result
 */


function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : 0;
}
/**
 * sort helper to sort array elements in descending order
 *
 * @param   {mixed} a - an item to compare
 * @param   {mixed} b - an item to compare
 * @returns {number} - comparison result
 */


function descending(a, b) {
  return -1 * ascending(a, b);
}

/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(23);
/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */


module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }

    return source;
  } // eslint-disable-next-line consistent-return


  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      return getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      return getMergedValue(undefined, config1[prop]);
    }
  } // eslint-disable-next-line consistent-return


  function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      return getMergedValue(undefined, config2[prop]);
    }
  } // eslint-disable-next-line consistent-return


  function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      return getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      return getMergedValue(undefined, config1[prop]);
    }
  } // eslint-disable-next-line consistent-return


  function mergeDirectKeys(prop) {
    if (prop in config2) {
      return getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      return getMergedValue(undefined, config1[prop]);
    }
  }

  var mergeMap = {
    'url': valueFromConfig2,
    'method': valueFromConfig2,
    'data': valueFromConfig2,
    'baseURL': defaultToConfig2,
    'transformRequest': defaultToConfig2,
    'transformResponse': defaultToConfig2,
    'paramsSerializer': defaultToConfig2,
    'timeout': defaultToConfig2,
    'timeoutMessage': defaultToConfig2,
    'withCredentials': defaultToConfig2,
    'adapter': defaultToConfig2,
    'responseType': defaultToConfig2,
    'xsrfCookieName': defaultToConfig2,
    'xsrfHeaderName': defaultToConfig2,
    'onUploadProgress': defaultToConfig2,
    'onDownloadProgress': defaultToConfig2,
    'decompress': defaultToConfig2,
    'maxContentLength': defaultToConfig2,
    'maxBodyLength': defaultToConfig2,
    'beforeRedirect': defaultToConfig2,
    'transport': defaultToConfig2,
    'httpAgent': defaultToConfig2,
    'httpsAgent': defaultToConfig2,
    'cancelToken': defaultToConfig2,
    'socketPath': defaultToConfig2,
    'responseEncoding': defaultToConfig2,
    'validateStatus': mergeDirectKeys
  };
  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {
    var merge = mergeMap[prop] || mergeDeepProperties;
    var configValue = merge(prop);
    utils.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
  });
  return config;
};

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(168);

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var undefined;
var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError; // eslint-disable-next-line consistent-return

var getEvalledConstructor = function getEvalledConstructor(expressionSyntax) {
  try {
    return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
  } catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;

if ($gOPD) {
  try {
    $gOPD({}, '');
  } catch (e) {
    $gOPD = null; // this is IE 8, which has a broken gOPD
  }
}

var throwTypeError = function throwTypeError() {
  throw new $TypeError();
};

var ThrowTypeError = $gOPD ? function () {
  try {
    // eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
    arguments.callee; // IE 8 does not throw here

    return throwTypeError;
  } catch (calleeThrows) {
    try {
      // IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
      return $gOPD(arguments, 'callee').get;
    } catch (gOPDthrows) {
      return throwTypeError;
    }
  }
}() : throwTypeError;

var hasSymbols = __webpack_require__(711)();

var getProto = Object.getPrototypeOf || function (x) {
  return x.__proto__;
}; // eslint-disable-line no-proto


var needsEval = {};
var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);
var INTRINSICS = {
  '%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
  '%Array%': Array,
  '%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
  '%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
  '%AsyncFromSyncIteratorPrototype%': undefined,
  '%AsyncFunction%': needsEval,
  '%AsyncGenerator%': needsEval,
  '%AsyncGeneratorFunction%': needsEval,
  '%AsyncIteratorPrototype%': needsEval,
  '%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
  '%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
  '%Boolean%': Boolean,
  '%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
  '%Date%': Date,
  '%decodeURI%': decodeURI,
  '%decodeURIComponent%': decodeURIComponent,
  '%encodeURI%': encodeURI,
  '%encodeURIComponent%': encodeURIComponent,
  '%Error%': Error,
  '%eval%': eval,
  // eslint-disable-line no-eval
  '%EvalError%': EvalError,
  '%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
  '%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
  '%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
  '%Function%': $Function,
  '%GeneratorFunction%': needsEval,
  '%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
  '%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
  '%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
  '%isFinite%': isFinite,
  '%isNaN%': isNaN,
  '%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
  '%JSON%': (typeof JSON === "undefined" ? "undefined" : _typeof(JSON)) === 'object' ? JSON : undefined,
  '%Map%': typeof Map === 'undefined' ? undefined : Map,
  '%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
  '%Math%': Math,
  '%Number%': Number,
  '%Object%': Object,
  '%parseFloat%': parseFloat,
  '%parseInt%': parseInt,
  '%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
  '%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
  '%RangeError%': RangeError,
  '%ReferenceError%': ReferenceError,
  '%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
  '%RegExp%': RegExp,
  '%Set%': typeof Set === 'undefined' ? undefined : Set,
  '%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
  '%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
  '%String%': String,
  '%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
  '%Symbol%': hasSymbols ? Symbol : undefined,
  '%SyntaxError%': $SyntaxError,
  '%ThrowTypeError%': ThrowTypeError,
  '%TypedArray%': TypedArray,
  '%TypeError%': $TypeError,
  '%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
  '%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
  '%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
  '%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
  '%URIError%': URIError,
  '%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
  '%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
  '%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

var doEval = function doEval(name) {
  var value;

  if (name === '%AsyncFunction%') {
    value = getEvalledConstructor('async function () {}');
  } else if (name === '%GeneratorFunction%') {
    value = getEvalledConstructor('function* () {}');
  } else if (name === '%AsyncGeneratorFunction%') {
    value = getEvalledConstructor('async function* () {}');
  } else if (name === '%AsyncGenerator%') {
    var fn = doEval('%AsyncGeneratorFunction%');

    if (fn) {
      value = fn.prototype;
    }
  } else if (name === '%AsyncIteratorPrototype%') {
    var gen = doEval('%AsyncGenerator%');

    if (gen) {
      value = getProto(gen.prototype);
    }
  }

  INTRINSICS[name] = value;
  return value;
};

var LEGACY_ALIASES = {
  '%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
  '%ArrayPrototype%': ['Array', 'prototype'],
  '%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
  '%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
  '%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
  '%ArrayProto_values%': ['Array', 'prototype', 'values'],
  '%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
  '%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
  '%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
  '%BooleanPrototype%': ['Boolean', 'prototype'],
  '%DataViewPrototype%': ['DataView', 'prototype'],
  '%DatePrototype%': ['Date', 'prototype'],
  '%ErrorPrototype%': ['Error', 'prototype'],
  '%EvalErrorPrototype%': ['EvalError', 'prototype'],
  '%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
  '%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
  '%FunctionPrototype%': ['Function', 'prototype'],
  '%Generator%': ['GeneratorFunction', 'prototype'],
  '%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
  '%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
  '%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
  '%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
  '%JSONParse%': ['JSON', 'parse'],
  '%JSONStringify%': ['JSON', 'stringify'],
  '%MapPrototype%': ['Map', 'prototype'],
  '%NumberPrototype%': ['Number', 'prototype'],
  '%ObjectPrototype%': ['Object', 'prototype'],
  '%ObjProto_toString%': ['Object', 'prototype', 'toString'],
  '%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
  '%PromisePrototype%': ['Promise', 'prototype'],
  '%PromiseProto_then%': ['Promise', 'prototype', 'then'],
  '%Promise_all%': ['Promise', 'all'],
  '%Promise_reject%': ['Promise', 'reject'],
  '%Promise_resolve%': ['Promise', 'resolve'],
  '%RangeErrorPrototype%': ['RangeError', 'prototype'],
  '%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
  '%RegExpPrototype%': ['RegExp', 'prototype'],
  '%SetPrototype%': ['Set', 'prototype'],
  '%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
  '%StringPrototype%': ['String', 'prototype'],
  '%SymbolPrototype%': ['Symbol', 'prototype'],
  '%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
  '%TypedArrayPrototype%': ['TypedArray', 'prototype'],
  '%TypeErrorPrototype%': ['TypeError', 'prototype'],
  '%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
  '%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
  '%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
  '%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
  '%URIErrorPrototype%': ['URIError', 'prototype'],
  '%WeakMapPrototype%': ['WeakMap', 'prototype'],
  '%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = __webpack_require__(168);

var hasOwn = __webpack_require__(309);

var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);
var $exec = bind.call(Function.call, RegExp.prototype.exec);
/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */

var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g;
/** Used to match backslashes in property paths. */

var stringToPath = function stringToPath(string) {
  var first = $strSlice(string, 0, 1);
  var last = $strSlice(string, -1);

  if (first === '%' && last !== '%') {
    throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
  } else if (last === '%' && first !== '%') {
    throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
  }

  var result = [];
  $replace(string, rePropName, function (match, number, quote, subString) {
    result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
  });
  return result;
};
/* end adaptation */


var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
  var intrinsicName = name;
  var alias;

  if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
    alias = LEGACY_ALIASES[intrinsicName];
    intrinsicName = '%' + alias[0] + '%';
  }

  if (hasOwn(INTRINSICS, intrinsicName)) {
    var value = INTRINSICS[intrinsicName];

    if (value === needsEval) {
      value = doEval(intrinsicName);
    }

    if (typeof value === 'undefined' && !allowMissing) {
      throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
    }

    return {
      alias: alias,
      name: intrinsicName,
      value: value
    };
  }

  throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
  if (typeof name !== 'string' || name.length === 0) {
    throw new $TypeError('intrinsic name must be a non-empty string');
  }

  if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
    throw new $TypeError('"allowMissing" argument must be a boolean');
  }

  if ($exec(/^%?[^%]*%?$/, name) === null) {
    throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
  }

  var parts = stringToPath(name);
  var intrinsicBaseName = parts.length > 0 ? parts[0] : '';
  var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
  var intrinsicRealName = intrinsic.name;
  var value = intrinsic.value;
  var skipFurtherCaching = false;
  var alias = intrinsic.alias;

  if (alias) {
    intrinsicBaseName = alias[0];
    $spliceApply(parts, $concat([0, 1], alias));
  }

  for (var i = 1, isOwn = true; i < parts.length; i += 1) {
    var part = parts[i];
    var first = $strSlice(part, 0, 1);
    var last = $strSlice(part, -1);

    if ((first === '"' || first === "'" || first === '`' || last === '"' || last === "'" || last === '`') && first !== last) {
      throw new $SyntaxError('property names with quotes must have matching quotes');
    }

    if (part === 'constructor' || !isOwn) {
      skipFurtherCaching = true;
    }

    intrinsicBaseName += '.' + part;
    intrinsicRealName = '%' + intrinsicBaseName + '%';

    if (hasOwn(INTRINSICS, intrinsicRealName)) {
      value = INTRINSICS[intrinsicRealName];
    } else if (value != null) {
      if (!(part in value)) {
        if (!allowMissing) {
          throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
        }

        return void undefined;
      }

      if ($gOPD && i + 1 >= parts.length) {
        var desc = $gOPD(value, part);
        isOwn = !!desc; // By convention, when a data property is converted to an accessor
        // property to emulate a data property that does not suffer from
        // the override mistake, that accessor's getter is marked with
        // an `originalValue` property. Here, when we detect this, we
        // uphold the illusion by pretending to see that original data
        // property, i.e., returning the value rather than the getter
        // itself.

        if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
          value = desc.get;
        } else {
          value = value[part];
        }
      } else {
        isOwn = hasOwn(value, part);
        value = value[part];
      }

      if (isOwn && !skipFurtherCaching) {
        INTRINSICS[intrinsicRealName] = value;
      }
    }
  }

  return value;
};

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var formats = __webpack_require__(217);

var has = Object.prototype.hasOwnProperty;
var isArray = Array.isArray;

var hexTable = function () {
  var array = [];

  for (var i = 0; i < 256; ++i) {
    array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
  }

  return array;
}();

var compactQueue = function compactQueue(queue) {
  while (queue.length > 1) {
    var item = queue.pop();
    var obj = item.obj[item.prop];

    if (isArray(obj)) {
      var compacted = [];

      for (var j = 0; j < obj.length; ++j) {
        if (typeof obj[j] !== 'undefined') {
          compacted.push(obj[j]);
        }
      }

      item.obj[item.prop] = compacted;
    }
  }
};

var arrayToObject = function arrayToObject(source, options) {
  var obj = options && options.plainObjects ? Object.create(null) : {};

  for (var i = 0; i < source.length; ++i) {
    if (typeof source[i] !== 'undefined') {
      obj[i] = source[i];
    }
  }

  return obj;
};

var merge = function merge(target, source, options) {
  /* eslint no-param-reassign: 0 */
  if (!source) {
    return target;
  }

  if (_typeof(source) !== 'object') {
    if (isArray(target)) {
      target.push(source);
    } else if (target && _typeof(target) === 'object') {
      if (options && (options.plainObjects || options.allowPrototypes) || !has.call(Object.prototype, source)) {
        target[source] = true;
      }
    } else {
      return [target, source];
    }

    return target;
  }

  if (!target || _typeof(target) !== 'object') {
    return [target].concat(source);
  }

  var mergeTarget = target;

  if (isArray(target) && !isArray(source)) {
    mergeTarget = arrayToObject(target, options);
  }

  if (isArray(target) && isArray(source)) {
    source.forEach(function (item, i) {
      if (has.call(target, i)) {
        var targetItem = target[i];

        if (targetItem && _typeof(targetItem) === 'object' && item && _typeof(item) === 'object') {
          target[i] = merge(targetItem, item, options);
        } else {
          target.push(item);
        }
      } else {
        target[i] = item;
      }
    });
    return target;
  }

  return Object.keys(source).reduce(function (acc, key) {
    var value = source[key];

    if (has.call(acc, key)) {
      acc[key] = merge(acc[key], value, options);
    } else {
      acc[key] = value;
    }

    return acc;
  }, mergeTarget);
};

var assign = function assignSingleSource(target, source) {
  return Object.keys(source).reduce(function (acc, key) {
    acc[key] = source[key];
    return acc;
  }, target);
};

var decode = function decode(str, decoder, charset) {
  var strWithoutPlus = str.replace(/\+/g, ' ');

  if (charset === 'iso-8859-1') {
    // unescape never throws, no try...catch needed:
    return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
  } // utf-8


  try {
    return decodeURIComponent(strWithoutPlus);
  } catch (e) {
    return strWithoutPlus;
  }
};

var encode = function encode(str, defaultEncoder, charset, kind, format) {
  // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
  // It has been adapted here for stricter adherence to RFC 3986
  if (str.length === 0) {
    return str;
  }

  var string = str;

  if (_typeof(str) === 'symbol') {
    string = Symbol.prototype.toString.call(str);
  } else if (typeof str !== 'string') {
    string = String(str);
  }

  if (charset === 'iso-8859-1') {
    return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {
      return '%26%23' + parseInt($0.slice(2), 16) + '%3B';
    });
  }

  var out = '';

  for (var i = 0; i < string.length; ++i) {
    var c = string.charCodeAt(i);

    if (c === 0x2D // -
    || c === 0x2E // .
    || c === 0x5F // _
    || c === 0x7E // ~
    || c >= 0x30 && c <= 0x39 // 0-9
    || c >= 0x41 && c <= 0x5A // a-z
    || c >= 0x61 && c <= 0x7A // A-Z
    || format === formats.RFC1738 && (c === 0x28 || c === 0x29) // ( )
    ) {
      out += string.charAt(i);
      continue;
    }

    if (c < 0x80) {
      out = out + hexTable[c];
      continue;
    }

    if (c < 0x800) {
      out = out + (hexTable[0xC0 | c >> 6] + hexTable[0x80 | c & 0x3F]);
      continue;
    }

    if (c < 0xD800 || c >= 0xE000) {
      out = out + (hexTable[0xE0 | c >> 12] + hexTable[0x80 | c >> 6 & 0x3F] + hexTable[0x80 | c & 0x3F]);
      continue;
    }

    i += 1;
    c = 0x10000 + ((c & 0x3FF) << 10 | string.charCodeAt(i) & 0x3FF);
    /* eslint operator-linebreak: [2, "before"] */

    out += hexTable[0xF0 | c >> 18] + hexTable[0x80 | c >> 12 & 0x3F] + hexTable[0x80 | c >> 6 & 0x3F] + hexTable[0x80 | c & 0x3F];
  }

  return out;
};

var compact = function compact(value) {
  var queue = [{
    obj: {
      o: value
    },
    prop: 'o'
  }];
  var refs = [];

  for (var i = 0; i < queue.length; ++i) {
    var item = queue[i];
    var obj = item.obj[item.prop];
    var keys = Object.keys(obj);

    for (var j = 0; j < keys.length; ++j) {
      var key = keys[j];
      var val = obj[key];

      if (_typeof(val) === 'object' && val !== null && refs.indexOf(val) === -1) {
        queue.push({
          obj: obj,
          prop: key
        });
        refs.push(val);
      }
    }
  }

  compactQueue(queue);
  return value;
};

var isRegExp = function isRegExp(obj) {
  return Object.prototype.toString.call(obj) === '[object RegExp]';
};

var isBuffer = function isBuffer(obj) {
  if (!obj || _typeof(obj) !== 'object') {
    return false;
  }

  return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
};

var combine = function combine(a, b) {
  return [].concat(a, b);
};

var maybeMap = function maybeMap(val, fn) {
  if (isArray(val)) {
    var mapped = [];

    for (var i = 0; i < val.length; i += 1) {
      mapped.push(fn(val[i]));
    }

    return mapped;
  }

  return fn(val);
};

module.exports = {
  arrayToObject: arrayToObject,
  assign: assign,
  combine: combine,
  compact: compact,
  decode: decode,
  encode: encode,
  isBuffer: isBuffer,
  isRegExp: isRegExp,
  maybeMap: maybeMap,
  merge: merge
};

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = mixinStringifySafe;

var _jsonStringifySafe = _interopRequireDefault(__webpack_require__(721));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function mixinStringifySafe(data) {
  return Object.defineProperty(data, 'stringifySafe', {
    enumerable: false,
    configurable: false,
    writable: false,
    value: function value() {
      var serializer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      return (0, _jsonStringifySafe["default"])(this, serializer, indent, function (key, value) {
        return {
          sys: {
            type: 'Link',
            linkType: 'Entry',
            id: value.sys.id,
            circular: true
          }
        };
      });
    }
  });
}

/***/ }),
/* 313 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var fast_copy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(105);
function _typeof2(obj) { "@babel/helpers - typeof"; return _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof2(obj); }

var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
  return _typeof2(obj);
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
};

function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  } else {
    return Array.from(arr);
  }
}


var UNRESOLVED_LINK = {}; // unique object to avoid polyfill bloat using Symbol()

/**
 * isLink Function
 * Checks if the object has sys.type "Link"
 * @param object
 */

var isLink = function isLink(object) {
  return object && object.sys && object.sys.type === 'Link';
};
/**
 * Creates a string key for lookup in entityMap
 *
 * @param {*} sys
 * @param {String} sys.type
 * @param {String} sys.id
 * @return {String}
 */


var makeLookupKey = function makeLookupKey(sys) {
  return sys.type + '!' + sys.id;
};
/**
 * getLink Function
 *
 * @param response
 * @param link
 * @return {undefined}
 */


var getLink = function getLink(entityMap, link) {
  var _link$sys = link.sys,
      type = _link$sys.linkType,
      id = _link$sys.id;
  var lookupKey = makeLookupKey({
    type: type,
    id: id
  });
  return entityMap.get(lookupKey) || UNRESOLVED_LINK;
};
/**
 * cleanUpLinks Function
 * - Removes unresolvable links from Arrays and Objects
 *
 * @param {Object[]|Object} input
 */


var cleanUpLinks = function cleanUpLinks(input) {
  if (Array.isArray(input)) {
    return input.filter(function (val) {
      return val !== UNRESOLVED_LINK;
    });
  }

  for (var key in input) {
    if (input[key] === UNRESOLVED_LINK) {
      delete input[key];
    }
  }

  return input;
};
/**
 * walkMutate Function
 * @param input
 * @param predicate
 * @param mutator
 * @return {*}
 */


var walkMutate = function walkMutate(input, predicate, mutator, removeUnresolved) {
  if (predicate(input)) {
    return mutator(input);
  }

  if (input && (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object') {
    for (var key in input) {
      // eslint-disable-next-line no-prototype-builtins
      if (input.hasOwnProperty(key)) {
        input[key] = walkMutate(input[key], predicate, mutator, removeUnresolved);
      }
    }

    if (removeUnresolved) {
      input = cleanUpLinks(input);
    }
  }

  return input;
};

var normalizeLink = function normalizeLink(entityMap, link, removeUnresolved) {
  var resolvedLink = getLink(entityMap, link);

  if (resolvedLink === UNRESOLVED_LINK) {
    return removeUnresolved ? resolvedLink : link;
  }

  return resolvedLink;
};

var makeEntryObject = function makeEntryObject(item, itemEntryPoints) {
  if (!Array.isArray(itemEntryPoints)) {
    return item;
  }

  var entryPoints = Object.keys(item).filter(function (ownKey) {
    return itemEntryPoints.indexOf(ownKey) !== -1;
  });
  return entryPoints.reduce(function (entryObj, entryPoint) {
    entryObj[entryPoint] = item[entryPoint];
    return entryObj;
  }, {});
};
/**
 * resolveResponse Function
 * Resolves contentful response to normalized form.
 * @param {Object} response Contentful response
 * @param {{removeUnresolved: Boolean, itemEntryPoints: Array<String>}|{}} options
 * @param {Boolean} options.removeUnresolved - Remove unresolved links default:false
 * @param {Array<String>} options.itemEntryPoints - Resolve links only in those item properties
 * @return {Object}
 */


var resolveResponse = function resolveResponse(response, options) {
  options = options || {};

  if (!response.items) {
    return [];
  }

  var responseClone = Object(fast_copy__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(response);
  var allIncludes = Object.keys(responseClone.includes || {}).reduce(function (all, type) {
    return [].concat(_toConsumableArray(all), _toConsumableArray(response.includes[type]));
  }, []);
  var allEntries = [].concat(_toConsumableArray(responseClone.items), _toConsumableArray(allIncludes));
  var entityMap = new Map(allEntries.map(function (entity) {
    return [makeLookupKey(entity.sys), entity];
  }));
  allEntries.forEach(function (item) {
    var entryObject = makeEntryObject(item, options.itemEntryPoints);
    Object.assign(item, walkMutate(entryObject, isLink, function (link) {
      return normalizeLink(entityMap, link, options.removeUnresolved);
    }, options.removeUnresolved));
  });
  return responseClone.items;
};

/* harmony default export */ __webpack_exports__["default"] = (resolveResponse);

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);

    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    return fn.apply(thisArg, args);
  };
};

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(221);
/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */


module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;

  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError('Request failed with status code ' + response.status, response.config, null, response.request, response));
  }
};

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isAbsoluteURL = __webpack_require__(739);

var combineURLs = __webpack_require__(740);
/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */


module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }

  return requestedURL;
};

/***/ }),
/* 317 */
/***/ (function(module) {

module.exports = JSON.parse("{\"name\":\"axios\",\"version\":\"0.21.4\",\"description\":\"Promise based HTTP client for the browser and node.js\",\"main\":\"index.js\",\"scripts\":{\"test\":\"grunt test\",\"start\":\"node ./sandbox/server.js\",\"build\":\"NODE_ENV=production grunt build\",\"preversion\":\"npm test\",\"version\":\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\",\"postversion\":\"git push && git push --tags\",\"examples\":\"node ./examples/server.js\",\"coveralls\":\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\",\"fix\":\"eslint --fix lib/**/*.js\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/axios/axios.git\"},\"keywords\":[\"xhr\",\"http\",\"ajax\",\"promise\",\"node\"],\"author\":\"Matt Zabriskie\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/axios/axios/issues\"},\"homepage\":\"https://axios-http.com\",\"devDependencies\":{\"coveralls\":\"^3.0.0\",\"es6-promise\":\"^4.2.4\",\"grunt\":\"^1.3.0\",\"grunt-banner\":\"^0.6.0\",\"grunt-cli\":\"^1.2.0\",\"grunt-contrib-clean\":\"^1.1.0\",\"grunt-contrib-watch\":\"^1.0.0\",\"grunt-eslint\":\"^23.0.0\",\"grunt-karma\":\"^4.0.0\",\"grunt-mocha-test\":\"^0.13.3\",\"grunt-ts\":\"^6.0.0-beta.19\",\"grunt-webpack\":\"^4.0.2\",\"istanbul-instrumenter-loader\":\"^1.0.0\",\"jasmine-core\":\"^2.4.1\",\"karma\":\"^6.3.2\",\"karma-chrome-launcher\":\"^3.1.0\",\"karma-firefox-launcher\":\"^2.1.0\",\"karma-jasmine\":\"^1.1.1\",\"karma-jasmine-ajax\":\"^0.1.13\",\"karma-safari-launcher\":\"^1.0.0\",\"karma-sauce-launcher\":\"^4.3.6\",\"karma-sinon\":\"^1.0.5\",\"karma-sourcemap-loader\":\"^0.3.8\",\"karma-webpack\":\"^4.0.2\",\"load-grunt-tasks\":\"^3.5.2\",\"minimist\":\"^1.2.0\",\"mocha\":\"^8.2.1\",\"sinon\":\"^4.5.0\",\"terser-webpack-plugin\":\"^4.2.3\",\"typescript\":\"^4.0.5\",\"url-search-params\":\"^0.10.0\",\"webpack\":\"^4.44.2\",\"webpack-dev-server\":\"^3.11.0\"},\"browser\":{\"./lib/adapters/http.js\":\"./lib/adapters/xhr.js\"},\"jsdelivr\":\"dist/axios.min.js\",\"unpkg\":\"dist/axios.min.js\",\"typings\":\"./index.d.ts\",\"dependencies\":{\"follow-redirects\":\"^1.14.0\"},\"bundlesize\":[{\"path\":\"./dist/axios.min.js\",\"threshold\":\"5kB\"}]}");

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(36);
/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */


module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};
  var valueFromConfig2Keys = ['url', 'method', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];
  var defaultToConfig2Keys = ['baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer', 'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName', 'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress', 'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent', 'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'];
  var directMergeKeys = ['validateStatus'];

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }

    return source;
  }

  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  }

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    }
  });
  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);
  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });
  utils.forEach(directMergeKeys, function merge(prop) {
    if (prop in config2) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });
  var axiosKeys = valueFromConfig2Keys.concat(mergeDeepPropertiesKeys).concat(defaultToConfig2Keys).concat(directMergeKeys);
  var otherKeys = Object.keys(config1).concat(Object.keys(config2)).filter(function filterAxiosKeys(key) {
    return axiosKeys.indexOf(key) === -1;
  });
  utils.forEach(otherKeys, mergeDeepProperties);
  return config;
};

/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */

function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;
module.exports = Cancel;

/***/ }),
/* 321 */
/***/ (function(module, exports) {



/***/ }),
/* 322 */
/***/ (function(module, exports) {



/***/ }),
/* 323 */
/***/ (function(module, exports) {



/***/ }),
/* 324 */
/***/ (function(module, exports) {



/***/ }),
/* 325 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export StagingEnvironmentFactory */
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(171);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_Url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76);
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }



/**
 * Default StagingEnvironmentFactoryConfig values
 */

var DefaultStagingEnvironmentFactoryConfig = {
  baseUrl: 'https://virtual-staging.amplience.net'
};
/**
 * Amplience [Virtual Staging Environment](https://docs.amplience.net/virtualstaging/virtualstagingintro.html?h=vse) factory.
 *
 * This factory is intended to be used by end user applications to preview content for a given snapshotID or at a given timestamp.
 *
 * It works by passing the virtual staging environment domain and the snapshotID or timestamp to the virtual-staging API,
 * which will return a new domain that can be used in the ContentClient.
 *
 * Example:
 *
 * ```typescript
 * const factory = new StagingEnvironmentFactory('11122222gggg232gg32g32g.staging.bigcontent.io');
 * const stagingEnvironmentWithSnapshot = await factory.generateDomain({snapshotId: 'abcdef123456'});
 *
 * const client = new ContentClient({
 *   account: 'test',
 *   stagingEnvironment: stagingEnvironmentWithSnapshot
 * });
 *
 * ```
 *
 * You may override other settings when constructing the client but if no additional configuration is provided sensible defaults will be used.
 */

var StagingEnvironmentFactory = /*#__PURE__*/function () {
  /**
   * Creates a StagingEnvironmentFactory instance.
   * @param string stagingEnvironment
   * @param config Client configuration options
   */
  function StagingEnvironmentFactory(stagingEnvironment) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, StagingEnvironmentFactory);

    this.stagingEnvironment = stagingEnvironment;
    this.client = this.createClient(_objectSpread(_objectSpread({}, DefaultStagingEnvironmentFactoryConfig), config));
  }
  /**
   * Generates a new staging environment domain name using the snapshotId and/or timestamp thats supplied in the options argument
   * @param options
   */


  _createClass(StagingEnvironmentFactory, [{
    key: "generateDomain",
    value: function () {
      var _generateDomain = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(options) {
        var url, response;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.prev = 0;
                url = this.buildUrl(options);
                _context.next = 4;
                return this.client.get(url);

              case 4:
                response = _context.sent;
                return _context.abrupt("return", response.data);

              case 8:
                _context.prev = 8;
                _context.t0 = _context["catch"](0);
                throw new Error("An error occurred whilst attempting to generate a staging environment domain using options '".concat(JSON.stringify(options), "': ").concat(_context.t0.message));

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[0, 8]]);
      }));

      function generateDomain(_x) {
        return _generateDomain.apply(this, arguments);
      }

      return generateDomain;
    }()
    /**
     * Build the URL to invoke using the supplied GenerateDomainOptions
     * @param options GenerateDomainOptions
     */

  }, {
    key: "buildUrl",
    value: function buildUrl(options) {
      var queryParameters = Object.entries(options).map(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
            key = _ref2[0],
            value = _ref2[1];

        return [key, value.toString()];
      });
      var queryString = Object(_utils_Url__WEBPACK_IMPORTED_MODULE_1__[/* encodeQueryString */ "a"])(queryParameters);
      return "/domain/".concat(this.stagingEnvironment, "?").concat(queryString);
    }
    /**
     * Create network client to make requests to the vse service
     * @param config
     */

  }, {
    key: "createClient",
    value: function createClient(config) {
      var client = axios__WEBPACK_IMPORTED_MODULE_0___default.a.create({
        adapter: config.adaptor
      });
      client.defaults.baseURL = config.baseUrl;
      return client;
    }
  }]);

  return StagingEnvironmentFactory;
}();

/***/ }),
/* 326 */
/***/ (function(module, exports) {



/***/ }),
/* 327 */
/***/ (function(module, exports) {



/***/ }),
/* 328 */
/***/ (function(module, exports) {



/***/ }),
/* 329 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export ImageFormat */
/**
 * ImageFormat represents the set of image formats that media
 * can be converted into using Dynamic Imaging.
 */
var ImageFormat;

(function (ImageFormat) {
  /**
   * JPEG (jpg) image format.
   */
  ImageFormat["JPEG"] = "jpg";
  /**
   * Portable Network Graphics (png) image format.
   */

  ImageFormat["PNG"] = "png";
  /**
   * Graphics Interchange Format (gif) image format.
   */

  ImageFormat["GIF"] = "gif";
  /**
   * WebP (webp) image format.
   */

  ImageFormat["WEBP"] = "webp";
  /**
   * Bitmap (bmp) image format.
   */

  ImageFormat["BITMAP"] = "bmp";
})(ImageFormat || (ImageFormat = {}));

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MetadataReader = void 0;

var METADATA_KEY = __webpack_require__(24);

var MetadataReader = function () {
  function MetadataReader() {}

  MetadataReader.prototype.getConstructorMetadata = function (constructorFunc) {
    var compilerGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.PARAM_TYPES, constructorFunc);
    var userGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED, constructorFunc);
    return {
      compilerGeneratedMetadata: compilerGeneratedMetadata,
      userGeneratedMetadata: userGeneratedMetadata || {}
    };
  };

  MetadataReader.prototype.getPropertiesMetadata = function (constructorFunc) {
    var userGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED_PROP, constructorFunc) || [];
    return userGeneratedMetadata;
  };

  return MetadataReader;
}();

exports.MetadataReader = MetadataReader;

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isStackOverflowExeption = void 0;

var ERROR_MSGS = __webpack_require__(45);

function isStackOverflowExeption(error) {
  return error instanceof RangeError || error.message === ERROR_MSGS.STACK_OVERFLOW;
}

exports.isStackOverflowExeption = isStackOverflowExeption;

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.inject = exports.LazyServiceIdentifer = void 0;

var error_msgs_1 = __webpack_require__(45);

var METADATA_KEY = __webpack_require__(24);

var metadata_1 = __webpack_require__(50);

var decorator_utils_1 = __webpack_require__(74);

var LazyServiceIdentifer = function () {
  function LazyServiceIdentifer(cb) {
    this._cb = cb;
  }

  LazyServiceIdentifer.prototype.unwrap = function () {
    return this._cb();
  };

  return LazyServiceIdentifer;
}();

exports.LazyServiceIdentifer = LazyServiceIdentifer;

function inject(serviceIdentifier) {
  return function (target, targetKey, index) {
    if (serviceIdentifier === undefined) {
      throw new Error(error_msgs_1.UNDEFINED_INJECT_ANNOTATION(target.name));
    }

    var metadata = new metadata_1.Metadata(METADATA_KEY.INJECT_TAG, serviceIdentifier);

    if (typeof index === "number") {
      decorator_utils_1.tagParameter(target, targetKey, index, metadata);
    } else {
      decorator_utils_1.tagProperty(target, targetKey, metadata);
    }
  };
}

exports.inject = inject;

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Target = void 0;

var METADATA_KEY = __webpack_require__(24);

var id_1 = __webpack_require__(84);

var metadata_1 = __webpack_require__(50);

var queryable_string_1 = __webpack_require__(758);

var Target = function () {
  function Target(type, name, serviceIdentifier, namedOrTagged) {
    this.id = id_1.id();
    this.type = type;
    this.serviceIdentifier = serviceIdentifier;
    this.name = new queryable_string_1.QueryableString(name || "");
    this.metadata = new Array();
    var metadataItem = null;

    if (typeof namedOrTagged === "string") {
      metadataItem = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, namedOrTagged);
    } else if (namedOrTagged instanceof metadata_1.Metadata) {
      metadataItem = namedOrTagged;
    }

    if (metadataItem !== null) {
      this.metadata.push(metadataItem);
    }
  }

  Target.prototype.hasTag = function (key) {
    for (var _i = 0, _a = this.metadata; _i < _a.length; _i++) {
      var m = _a[_i];

      if (m.key === key) {
        return true;
      }
    }

    return false;
  };

  Target.prototype.isArray = function () {
    return this.hasTag(METADATA_KEY.MULTI_INJECT_TAG);
  };

  Target.prototype.matchesArray = function (name) {
    return this.matchesTag(METADATA_KEY.MULTI_INJECT_TAG)(name);
  };

  Target.prototype.isNamed = function () {
    return this.hasTag(METADATA_KEY.NAMED_TAG);
  };

  Target.prototype.isTagged = function () {
    return this.metadata.some(function (metadata) {
      return METADATA_KEY.NON_CUSTOM_TAG_KEYS.every(function (key) {
        return metadata.key !== key;
      });
    });
  };

  Target.prototype.isOptional = function () {
    return this.matchesTag(METADATA_KEY.OPTIONAL_TAG)(true);
  };

  Target.prototype.getNamedTag = function () {
    if (this.isNamed()) {
      return this.metadata.filter(function (m) {
        return m.key === METADATA_KEY.NAMED_TAG;
      })[0];
    }

    return null;
  };

  Target.prototype.getCustomTags = function () {
    if (this.isTagged()) {
      return this.metadata.filter(function (metadata) {
        return METADATA_KEY.NON_CUSTOM_TAG_KEYS.every(function (key) {
          return metadata.key !== key;
        });
      });
    } else {
      return null;
    }
  };

  Target.prototype.matchesNamedTag = function (name) {
    return this.matchesTag(METADATA_KEY.NAMED_TAG)(name);
  };

  Target.prototype.matchesTag = function (key) {
    var _this = this;

    return function (value) {
      for (var _i = 0, _a = _this.metadata; _i < _a.length; _i++) {
        var m = _a[_i];

        if (m.key === key && m.value === value) {
          return true;
        }
      }

      return false;
    };
  };

  return Target;
}();

exports.Target = Target;

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BindingWhenOnSyntax = void 0;

var binding_on_syntax_1 = __webpack_require__(222);

var binding_when_syntax_1 = __webpack_require__(223);

var BindingWhenOnSyntax = function () {
  function BindingWhenOnSyntax(binding) {
    this._binding = binding;
    this._bindingWhenSyntax = new binding_when_syntax_1.BindingWhenSyntax(this._binding);
    this._bindingOnSyntax = new binding_on_syntax_1.BindingOnSyntax(this._binding);
  }

  BindingWhenOnSyntax.prototype.when = function (constraint) {
    return this._bindingWhenSyntax.when(constraint);
  };

  BindingWhenOnSyntax.prototype.whenTargetNamed = function (name) {
    return this._bindingWhenSyntax.whenTargetNamed(name);
  };

  BindingWhenOnSyntax.prototype.whenTargetIsDefault = function () {
    return this._bindingWhenSyntax.whenTargetIsDefault();
  };

  BindingWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {
    return this._bindingWhenSyntax.whenTargetTagged(tag, value);
  };

  BindingWhenOnSyntax.prototype.whenInjectedInto = function (parent) {
    return this._bindingWhenSyntax.whenInjectedInto(parent);
  };

  BindingWhenOnSyntax.prototype.whenParentNamed = function (name) {
    return this._bindingWhenSyntax.whenParentNamed(name);
  };

  BindingWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {
    return this._bindingWhenSyntax.whenParentTagged(tag, value);
  };

  BindingWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
    return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);
  };

  BindingWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {
    return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);
  };

  BindingWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {
    return this._bindingWhenSyntax.whenAnyAncestorNamed(name);
  };

  BindingWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
    return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);
  };

  BindingWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {
    return this._bindingWhenSyntax.whenNoAncestorNamed(name);
  };

  BindingWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
    return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);
  };

  BindingWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
    return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);
  };

  BindingWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {
    return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);
  };

  BindingWhenOnSyntax.prototype.onActivation = function (handler) {
    return this._bindingOnSyntax.onActivation(handler);
  };

  return BindingWhenOnSyntax;
}();

exports.BindingWhenOnSyntax = BindingWhenOnSyntax;

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.typeConstraint = exports.namedConstraint = exports.taggedConstraint = exports.traverseAncerstors = void 0;

var METADATA_KEY = __webpack_require__(24);

var metadata_1 = __webpack_require__(50);

var traverseAncerstors = function traverseAncerstors(request, constraint) {
  var parent = request.parentRequest;

  if (parent !== null) {
    return constraint(parent) ? true : traverseAncerstors(parent, constraint);
  } else {
    return false;
  }
};

exports.traverseAncerstors = traverseAncerstors;

var taggedConstraint = function taggedConstraint(key) {
  return function (value) {
    var constraint = function constraint(request) {
      return request !== null && request.target !== null && request.target.matchesTag(key)(value);
    };

    constraint.metaData = new metadata_1.Metadata(key, value);
    return constraint;
  };
};

exports.taggedConstraint = taggedConstraint;
var namedConstraint = taggedConstraint(METADATA_KEY.NAMED_TAG);
exports.namedConstraint = namedConstraint;

var typeConstraint = function typeConstraint(type) {
  return function (request) {
    var binding = null;

    if (request !== null) {
      binding = request.bindings[0];

      if (typeof type === "string") {
        var serviceIdentifier = binding.serviceIdentifier;
        return serviceIdentifier === type;
      } else {
        var constructor = request.bindings[0].implementationType;
        return type === constructor;
      }
    }

    return false;
  };
};

exports.typeConstraint = typeConstraint;

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134

var _a;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.replaceCodePoint = exports.fromCodePoint = void 0;
var decodeMap = new Map([[0, 65533], // C1 Unicode control character reference replacements
[128, 8364], [130, 8218], [131, 402], [132, 8222], [133, 8230], [134, 8224], [135, 8225], [136, 710], [137, 8240], [138, 352], [139, 8249], [140, 338], [142, 381], [145, 8216], [146, 8217], [147, 8220], [148, 8221], [149, 8226], [150, 8211], [151, 8212], [152, 732], [153, 8482], [154, 353], [155, 8250], [156, 339], [158, 382], [159, 376]]);
/**
 * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.
 */

exports.fromCodePoint = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins
(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {
  var output = "";

  if (codePoint > 0xffff) {
    codePoint -= 0x10000;
    output += String.fromCharCode(codePoint >>> 10 & 0x3ff | 0xd800);
    codePoint = 0xdc00 | codePoint & 0x3ff;
  }

  output += String.fromCharCode(codePoint);
  return output;
};
/**
 * Replace the given code point with a replacement character if it is a
 * surrogate or is outside the valid range. Otherwise return the code
 * point unchanged.
 */

function replaceCodePoint(codePoint) {
  var _a;

  if (codePoint >= 0xd800 && codePoint <= 0xdfff || codePoint > 0x10ffff) {
    return 0xfffd;
  }

  return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;
}

exports.replaceCodePoint = replaceCodePoint;
/**
 * Replace the code point if relevant, then convert it to a string.
 *
 * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.
 * @param codePoint The code point to decode.
 * @returns The decoded code point.
 */

function decodeCodePoint(codePoint) {
  return (0, exports.fromCodePoint)(replaceCodePoint(codePoint));
}

exports["default"] = decodeCodePoint;

/***/ }),
/* 337 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/config/index.js
/**
 * Whether content client config is for Content Delivery v1
 * @param config
 * @hidden
 */
function isContentClientConfigV1(config) {
  return config.account !== undefined;
}
/**
 * Whether content client config is for Content Delivery v2
 * @param config
 * @hidden
 */

function isContentClientConfigV2(config) {
  return config.hubName !== undefined;
}
/**
 * Whether content client config is for Content Delivery v2 Fresh
 * @param config
 * @hidden
 */

function isContentClientConfigV2Fresh(config) {
  return isContentClientConfigV2(config) && config.apiKey !== undefined;
}
// EXTERNAL MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/utils/Url.js
var Url = __webpack_require__(76);

// EXTERNAL MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/rendering/model/RenderedContentItem.js
var RenderedContentItem = __webpack_require__(169);

// EXTERNAL MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/content/model/Edition.js
var Edition = __webpack_require__(99);

// EXTERNAL MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/content/model/ContentLifecycle.js
var ContentLifecycle = __webpack_require__(100);

// CONCATENATED MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/rendering/coordinators/RenderContentItem.js
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }





/**
 * @hidden
 */

var RenderContentItem_RenderContentItem = /*#__PURE__*/function () {
  function RenderContentItem(config, contentClient) {
    _classCallCheck(this, RenderContentItem);

    this.config = config;
    this.contentClient = contentClient;
  }

  _createClass(RenderContentItem, [{
    key: "renderContentItem",
    value: function renderContentItem(contentItemId, templateName, customParameters) {
      var _this = this;

      var queryParameters = this.getQueryParams(templateName, customParameters);
      var queryString = Object(Url["a" /* encodeQueryString */])(queryParameters);
      var path = "/v1/content/".concat(encodeURIComponent(this.config.account), "/content-item/").concat(encodeURIComponent(contentItemId));
      return this.contentClient.get("".concat(path, "?").concat(queryString)).then(function (response) {
        return _this.parseResponse(response);
      });
    }
  }, {
    key: "getQueryParams",
    value: function getQueryParams(templateName, customParameters) {
      var queryParameters = [['template', templateName]];

      if (customParameters) {
        for (var _i = 0, _Object$keys = Object.keys(customParameters); _i < _Object$keys.length; _i++) {
          var key = _Object$keys[_i];
          var value = customParameters[key];
          queryParameters.push(["crparam.".concat(key), value]);
        }
      }

      if (this.config.locale) {
        queryParameters.push(['locale', this.config.locale]);
      }

      return queryParameters;
    }
  }, {
    key: "parseResponse",
    value: function parseResponse(response) {
      var headers = response.headers;
      var result = new RenderedContentItem["a" /* RenderedContentItem */]();
      result.body = response.data;

      if (headers) {
        var editionId = headers['X-Amp-Edition-ID'];
        var editionStart = headers['X-Amp-Edition-Start-Time'];
        var editionEnd = headers['X-Amp-Edition-End-Time'];
        var lifecycleExpiryTime = headers['X-Amp-Lifecycle-Expiry-Time'];

        if (editionId) {
          result.edition = new Edition["a" /* Edition */]({
            id: editionId,
            start: editionStart,
            end: editionEnd
          });
        }

        if (lifecycleExpiryTime) {
          result.lifecycle = new ContentLifecycle["a" /* ContentLifecycle */]({
            expiryTime: lifecycleExpiryTime
          });
        }
      }

      return result;
    }
  }]);

  return RenderContentItem;
}();
// EXTERNAL MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/content/model/HttpError.js
var HttpError = __webpack_require__(57);

// CONCATENATED MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/content/coordinators/FilterByImpl.js
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function FilterByImpl_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function FilterByImpl_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function FilterByImpl_createClass(Constructor, protoProps, staticProps) { if (protoProps) FilterByImpl_defineProperties(Constructor.prototype, protoProps); if (staticProps) FilterByImpl_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }


var FilterByImpl_FilterByImpl = /*#__PURE__*/function () {
  function FilterByImpl(config, contentClient) {
    FilterByImpl_classCallCheck(this, FilterByImpl);

    this.config = config;
    this.contentClient = contentClient;
  }

  FilterByImpl_createClass(FilterByImpl, [{
    key: "fetch",
    value: function () {
      var _fetch = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(requestConfig) {
        var _this = this;

        var _requestConfig$parame, _this$config, _yield$this$contentCl, data, request;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.prev = 0;

                if (!((_requestConfig$parame = requestConfig.parameters) !== null && _requestConfig$parame !== void 0 && _requestConfig$parame.locale) && (_this$config = this.config) !== null && _this$config !== void 0 && _this$config.locale) {
                  requestConfig.parameters = Object.assign({}, _objectSpread(_objectSpread({}, requestConfig.parameters || {}), {}, {
                    locale: this.config.locale
                  }));
                }

                _context.next = 4;
                return this.contentClient.post('content/filter', requestConfig);

              case 4:
                _yield$this$contentCl = _context.sent;
                data = _yield$this$contentCl.data;

                if (data.page.nextCursor) {
                  request = Object.assign({}, _objectSpread(_objectSpread({}, requestConfig), {}, {
                    page: _objectSpread(_objectSpread({}, requestConfig.page || {}), {}, {
                      cursor: data.page.nextCursor
                    })
                  }));

                  data.page.next = function () {
                    return _this.fetch(request);
                  };
                }

                return _context.abrupt("return", data);

              case 10:
                _context.prev = 10;
                _context.t0 = _context["catch"](0);

                if (!_context.t0.response) {
                  _context.next = 14;
                  break;
                }

                throw new HttpError["a" /* HttpError */](_context.t0.response.status, _context.t0.response.data);

              case 14:
                throw _context.t0;

              case 15:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[0, 10]]);
      }));

      function fetch(_x) {
        return _fetch.apply(this, arguments);
      }

      return fetch;
    }()
  }]);

  return FilterByImpl;
}();
// CONCATENATED MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/content/coordinators/FilterBy.js
function FilterBy_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function FilterBy_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { FilterBy_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { FilterBy_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function FilterBy_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function FilterBy_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function FilterBy_createClass(Constructor, protoProps, staticProps) { if (protoProps) FilterBy_defineProperties(Constructor.prototype, protoProps); if (staticProps) FilterBy_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }


var FilterBy_FilterBy = /*#__PURE__*/function () {
  function FilterBy(config, contentClient) {
    FilterBy_classCallCheck(this, FilterBy);

    this.config = config;
    this.contentClient = contentClient;
    this.requestConfig = {
      filterBy: []
    };
    this.filterByService = new FilterByImpl_FilterByImpl(this.config, this.contentClient);
  }
  /**
   *  This function will help construct requests for filtering Content Items or Slots
   *
   * @param path - json path to the property you wish to filter by e.g `/_meta/schema`
   * @param value - value you want to return matches for
   *
   * @returns `FilterBy<Body>`
   */


  FilterBy_createClass(FilterBy, [{
    key: "filterBy",
    value: function filterBy(path, value) {
      this.requestConfig.filterBy.push({
        path: path,
        value: value
      });
      return this;
    }
    /**
     *
     *  equivalent to:
     *
     * ```ts
     *  client.filterBy('/_meta/schema', contentTypeUri)
     * ```
     *
     * @param contentTypeUri - Content Type Uri you want to filter
     *
     * @returns `FilterBy<Body>`
     */

  }, {
    key: "filterByContentType",
    value: function filterByContentType(value) {
      return this.filterBy(FilterBy.SCHEMA_PATH, value);
    }
    /**
     * Fetch content by parent id
     *
     * equivalent to:
     *
     * ```ts
     *  client.filterBy('/_meta/hierarchy/parentId', id)
     * ```
     *
     * @param id - ID of a Hierarchy Content Item
     *
     * @returns `FilterBy<Body>`
     */

  }, {
    key: "filterByParentId",
    value: function filterByParentId(value) {
      return this.filterBy(FilterBy.PARENT_PATH, value);
    }
    /**
     * Set sortable key based on schema [`trait:sortable`](https://amplience.com/docs/development/contentdelivery/filterandsort.html#sorttrait)
     *
     *
     * @param key - key you wish to sort by
     * @param order - order enum ASC, DESC
     *
     * @returns `FilterBy<Body>`
     */

  }, {
    key: "sortBy",
    value: function sortBy(key, order) {
      this.requestConfig.sortBy = {
        key: key,
        order: order
      };
      return this;
    }
  }, {
    key: "page",
    value: function page(size, cursor) {
      if (!this.requestConfig.page) {
        this.requestConfig.page = {};
      }

      if (arguments.length === 1 && typeof size === 'string') {
        this.requestConfig.page.cursor = size;
        return this;
      }

      if (typeof size === 'number') {
        this.requestConfig.page.size = size;
      }

      if (cursor) {
        this.requestConfig.page.cursor = cursor;
      }

      return this;
    }
    /**
     *
     * @param parameters - api options for response format
     *
     * @returns `FilterBy<Body>`
     */

  }, {
    key: "request",
    value: function () {
      var _request = FilterBy_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(parameters) {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (parameters) {
                  this.requestConfig.parameters = parameters;
                }

                return _context.abrupt("return", this.filterByService.fetch(this.requestConfig));

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function request(_x) {
        return _request.apply(this, arguments);
      }

      return request;
    }()
  }]);

  return FilterBy;
}();
FilterBy_FilterBy.SCHEMA_PATH = '/_meta/schema';
FilterBy_FilterBy.PARENT_PATH = '/_meta/hierarchy/parentId';
// CONCATENATED MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/utils/JsonWalker.js
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/**
 * @hidden
 */
function walkAndReplace(value, options) {
  var pointer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  if (options.beforeWalk) {
    value = options.beforeWalk(value, pointer);
  }

  if (Array.isArray(value)) {
    var newValue = [];

    for (var i = 0; i < value.length; i++) {
      var entryValue = value[i];
      entryValue = walkAndReplace(entryValue, options, pointer.concat("".concat(i)));
      newValue.push(entryValue);
    }

    value = newValue;
  } else if (_typeof(value) === 'object' && value !== null) {
    var _newValue = {};
    var keys = Object.keys(value);

    for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {
      var entryKey = _keys[_i];
      var _entryValue = value[entryKey];
      _entryValue = walkAndReplace(_entryValue, options, pointer.concat(entryKey));
      _newValue[entryKey] = _entryValue;
    }

    value = _newValue;
  }

  if (options.afterWalk) {
    value = options.afterWalk(value, pointer);
  }

  return value;
}
// EXTERNAL MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/content/model/ContentItem.js
var ContentItem = __webpack_require__(101);

// EXTERNAL MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/content/model/ContentNotFoundError.js
var ContentNotFoundError = __webpack_require__(85);

// CONCATENATED MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/content/coordinators/GetContentItemV1Impl.js
function GetContentItemV1Impl_typeof(obj) { "@babel/helpers - typeof"; return GetContentItemV1Impl_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, GetContentItemV1Impl_typeof(obj); }

function GetContentItemV1Impl_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function GetContentItemV1Impl_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { GetContentItemV1Impl_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { GetContentItemV1Impl_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function GetContentItemV1Impl_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function GetContentItemV1Impl_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function GetContentItemV1Impl_createClass(Constructor, protoProps, staticProps) { if (protoProps) GetContentItemV1Impl_defineProperties(Constructor.prototype, protoProps); if (staticProps) GetContentItemV1Impl_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }






/**
 * @hidden
 */

var LD_ID = '@id';
/**
 * @hidden
 */

var LD_TYPE = '@type';
/**
 * @hidden
 */

var LD_GRAPH = '@graph';
/**
 * @hidden
 */

var GetContentItemV1Impl_GetContentItemV1Impl = /*#__PURE__*/function () {
  function GetContentItemV1Impl(config, contentClient, mapper) {
    GetContentItemV1Impl_classCallCheck(this, GetContentItemV1Impl);

    this.config = config;
    this.contentClient = contentClient;
    this.mapper = mapper;
  }
  /**
   * @deprecated use getContentItemById
   */


  GetContentItemV1Impl_createClass(GetContentItemV1Impl, [{
    key: "getContentItem",
    value: function getContentItem(id) {
      return this.getContentItemById(id);
    }
  }, {
    key: "getContentItemById",
    value: function () {
      var _getContentItemById = GetContentItemV1Impl_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(id) {
        var url, response, contentItems, item;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                url = this.getUrl({
                  'sys.iri': "http://content.cms.amplience.com/".concat(id)
                });
                _context.prev = 1;
                _context.next = 4;
                return this.contentClient.get(url);

              case 4:
                response = _context.sent;
                contentItems = this.processResponse(response.data);

                if (!(contentItems.length === 0)) {
                  _context.next = 8;
                  break;
                }

                throw new ContentNotFoundError["a" /* ContentNotFoundError */](id);

              case 8:
                item = contentItems.find(function (x) {
                  return x._meta.deliveryId === id;
                });

                if (item) {
                  _context.next = 11;
                  break;
                }

                throw new ContentNotFoundError["a" /* ContentNotFoundError */](id);

              case 11:
                return _context.abrupt("return", this.hydrateContentItem(item));

              case 14:
                _context.prev = 14;
                _context.t0 = _context["catch"](1);

                if (!_context.t0.response) {
                  _context.next = 18;
                  break;
                }

                throw new HttpError["a" /* HttpError */](_context.t0.response.status, _context.t0.response.data);

              case 18:
                throw _context.t0;

              case 19:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[1, 14]]);
      }));

      function getContentItemById(_x) {
        return _getContentItemById.apply(this, arguments);
      }

      return getContentItemById;
    }()
  }, {
    key: "getUrl",
    value: function getUrl(query) {
      var args = [['query', JSON.stringify(query)], ['fullBodyObject', 'true'], ['scope', 'tree'], ['store', this.config.account]];

      if (this.config.locale) {
        args.push(['locale', this.config.locale]);
      }

      var queryString = Object(Url["a" /* encodeQueryString */])(args);
      return "/cms/content/query?".concat(queryString);
    }
    /**
     * Convert plain content JSON into ContentItem instamce
     * @param content
     */

  }, {
    key: "hydrateContentItem",
    value: function hydrateContentItem(content) {
      var contentItem = new ContentItem["a" /* ContentItem */]();
      contentItem.body = this.mapper.toMappedContent(content);
      return contentItem;
    }
    /**
     * Pre-processes the response to create a single content item object
     * with all linked content items inlined.
     * @param data Response from content query API
     */

  }, {
    key: "processResponse",
    value: function processResponse(data) {
      var _this = this;

      if (!data.result || !data[LD_GRAPH] || !Array.isArray(data.result)) {
        return [];
      } else {
        var graph = data[LD_GRAPH];
        var graphChildrenById = {};
        graph.forEach(function (child) {
          return graphChildrenById[child[LD_ID]] = child;
        });
        return data.result.map(function (result) {
          result = graphChildrenById[result[LD_ID]]; // inline linked items

          result = walkAndReplace(result, {
            beforeWalk: function beforeWalk(node) {
              if (GetContentItemV1Impl_typeof(node) === 'object' && node !== null) {
                if (node[LD_ID]) {
                  node = graphChildrenById[node[LD_ID]];
                }
              }

              return node;
            }
          }); // upgrade legacy content & remove json-ld

          result = walkAndReplace(result, {
            beforeWalk: function beforeWalk(node) {
              node = _this.upgradeLegacyContent(node);
              node = _this.injectMetaData(node);
              node = _this.removeJsonLD(node);
              return node;
            }
          });
          return result;
        });
      }
    }
    /**
     * Content produced by older versions do not include _meta.schema.
     * This function inserts those values to normalize the output
     */

  }, {
    key: "upgradeLegacyContent",
    value: function upgradeLegacyContent(node) {
      if (!node) {
        return node;
      }

      var type = node[LD_TYPE];
      var id = node[LD_ID];
      var isImage = id && id.indexOf('http://image.cms.amplience.com/') === 0;
      var isVideo = id && id.indexOf('http://video.cms.amplience.com/') === 0;

      if (type || isImage || isVideo) {
        if (!node._meta) {
          node._meta = {};
        }

        if (type) {
          if (!node._meta.schema) {
            node._meta.schema = type;
          }

          if (!node._meta.name && node._title) {
            node._meta.name = node._title;
          }
        } else if (isImage) {
          node._meta.schema = 'http://bigcontent.io/cms/schema/v1/core#/definitions/image-link';
        } else if (isVideo) {
          node._meta.schema = 'http://bigcontent.io/cms/schema/v1/core#/definitions/video-link';
        }
      }

      return node;
    }
    /**
     * Injects additional meta data which is lost by removing
     * the JSON-LD properties
     */

  }, {
    key: "injectMetaData",
    value: function injectMetaData(node) {
      if (node) {
        var id = node[LD_ID];

        if (id) {
          if (id.indexOf('http://content.cms.amplience.com/') === 0) {
            node._meta = node._meta || {};
            node._meta.deliveryId = id.slice(33);
          } else if (id.indexOf('http://image.cms.amplience.com/') === 0 || id.indexOf('http://video.cms.amplience.com/') === 0) {
            node.id = id.slice(31);
          }
        }
      }

      return node;
    }
    /**
     * JSON-LD keywords are just for delivery payload
     */

  }, {
    key: "removeJsonLD",
    value: function removeJsonLD(node) {
      if (node) {
        delete node[LD_TYPE];
        delete node[LD_ID];
      }

      return node;
    }
  }]);

  return GetContentItemV1Impl;
}();
// EXTERNAL MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/content/model/FragmentMeta.js
var FragmentMeta = __webpack_require__(33);

// EXTERNAL MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/content/model/ContentMeta.js
var ContentMeta = __webpack_require__(86);

// EXTERNAL MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/media/Image.js
var Image = __webpack_require__(129);

// EXTERNAL MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/media/Video.js
var Video = __webpack_require__(130);

// EXTERNAL MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/content/model/ContentReference.js
var ContentReference = __webpack_require__(131);

// CONCATENATED MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/content/mapper/ContentMapper.js
function ContentMapper_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function ContentMapper_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ContentMapper_ownKeys(Object(source), !0).forEach(function (key) { ContentMapper_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ContentMapper_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function ContentMapper_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ContentMapper_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function ContentMapper_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function ContentMapper_createClass(Constructor, protoProps, staticProps) { if (protoProps) ContentMapper_defineProperties(Constructor.prototype, protoProps); if (staticProps) ContentMapper_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }







/**
 * @hidden
 * ContentMapper provides functionality to convert simple JSON content into hydrated model classes
 * with helper functions. If a mapper is not defined for a schema it will remain as plain JSON.
 */

var ContentMapper_ContentMapper = /*#__PURE__*/function () {
  function ContentMapper(config) {
    ContentMapper_classCallCheck(this, ContentMapper);

    this.config = config;
    this.mappers = [];
    this.registerBuiltInMappers();
  }
  /**
   * Registers a custom model / fn to hydrate a specific schema
   * @param schema JSON schema ID or Regex that matches against the JSON schema ID
   * @param fn Model Class or Function that can convert the schema
   */


  ContentMapper_createClass(ContentMapper, [{
    key: "addSchema",
    value: function addSchema(schema, fn) {
      if (typeof schema === 'string') {
        this.addCustomMapper(function (fragment) {
          if (fragment._meta.schema === schema) {
            return fn(fragment);
          }
        });
      } else {
        this.addCustomMapper(function (fragment) {
          if (schema.test(fragment._meta.schema)) {
            return fn(fragment);
          }
        });
      }
    }
    /**
     * Registers a custom function to hydrate content fragments
     * @param fn Mapper function
     */

  }, {
    key: "addCustomMapper",
    value: function addCustomMapper(fn) {
      this.mappers.push(fn);
    }
    /**
     * Converts the provided content into hydrated model classes
     * @param content Content to convert
     */

  }, {
    key: "toMappedContent",
    value: function toMappedContent(content) {
      var _this = this;

      return walkAndReplace(content, {
        afterWalk: function afterWalk(node) {
          if (FragmentMeta["a" /* FragmentMeta */].isFragment(node)) {
            return _this.mapFragment(node);
          }

          return node;
        }
      });
    }
    /**
     * Converts a single fragment using the registered mappers
     * @param fragment Fragment to convert
     */

  }, {
    key: "mapFragment",
    value: function mapFragment(fragment) {
      var _iterator = _createForOfIteratorHelper(this.mappers),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var mapper = _step.value;
          var result = mapper(fragment);

          if (result) {
            return result;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return fragment;
    }
    /**
     * Registers built in mappers
     */

  }, {
    key: "registerBuiltInMappers",
    value: function registerBuiltInMappers() {
      this.addCustomMapper(this.convertContentReference.bind(this));
      this.addCustomMapper(this.convertContentMeta.bind(this));
      this.addCustomMapper(this.convertImage.bind(this));
      this.addCustomMapper(this.convertVideo.bind(this));
    }
    /**
     * Converts _meta inside Content Items into a ContentMeta instance
     * @param fragment
     */

  }, {
    key: "convertContentMeta",
    value: function convertContentMeta(fragment) {
      if (ContentMeta["a" /* ContentMeta */].isContentBody(fragment)) {
        return ContentMapper_objectSpread(ContentMapper_objectSpread({}, fragment), {}, {
          _meta: new ContentMeta["a" /* ContentMeta */](fragment._meta)
        });
      }
    }
    /**
     * Converts content-link into an Content reference class instance
     * @param fragment
     */

  }, {
    key: "convertContentReference",
    value: function convertContentReference(fragment) {
      if (ContentReference["a" /* ContentReference */].isContentReference(fragment)) {
        var result = new ContentReference["a" /* ContentReference */](fragment);
        return result;
      }
    }
    /**
     * Converts image-link into an Image class instance
     * @param fragment
     */

  }, {
    key: "convertImage",
    value: function convertImage(fragment) {
      if (Image["a" /* Image */].isImage(fragment)) {
        var result = new Image["a" /* Image */](fragment, this.config);
        return result;
      }
    }
    /**
     * Converts image-link into an Image class instance
     * @param fragment
     */

  }, {
    key: "convertVideo",
    value: function convertVideo(fragment) {
      if (Video["a" /* Video */].isVideo(fragment)) {
        var result = new Video["a" /* Video */](fragment, this.config);
        return result;
      }
    }
  }]);

  return ContentMapper;
}();
// CONCATENATED MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/content/coordinators/GetContentItemV2Impl.js
function GetContentItemV2Impl_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function GetContentItemV2Impl_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { GetContentItemV2Impl_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { GetContentItemV2Impl_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function GetContentItemV2Impl_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function GetContentItemV2Impl_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function GetContentItemV2Impl_createClass(Constructor, protoProps, staticProps) { if (protoProps) GetContentItemV2Impl_defineProperties(Constructor.prototype, protoProps); if (staticProps) GetContentItemV2Impl_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }





/**
 * @hidden
 */

var GetContentItemV2Impl_GetContentItemV2Impl = /*#__PURE__*/function () {
  function GetContentItemV2Impl(config, contentClient, mapper) {
    GetContentItemV2Impl_classCallCheck(this, GetContentItemV2Impl);

    this.config = config;
    this.contentClient = contentClient;
    this.mapper = mapper;
  }

  GetContentItemV2Impl_createClass(GetContentItemV2Impl, [{
    key: "getContentItemByKey",
    value: function getContentItemByKey(key) {
      return this.getContentItem('key', key);
    }
  }, {
    key: "getContentItemById",
    value: function () {
      var _getContentItemById = GetContentItemV2Impl_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(id) {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", this.getContentItem('id', id));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getContentItemById(_x) {
        return _getContentItemById.apply(this, arguments);
      }

      return getContentItemById;
    }()
  }, {
    key: "getContentItem",
    value: function () {
      var _getContentItem = GetContentItemV2Impl_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(requestType, value) {
        var args, url, response, contentItem;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                args = [['depth', 'all'], ['format', 'inlined']];

                if (this.config.locale) {
                  args.push(['locale', this.config.locale]);
                }

                url = "content/".concat(requestType, "/").concat(value, "?").concat(Object(Url["a" /* encodeQueryString */])(args));
                _context2.prev = 3;
                _context2.next = 6;
                return this.contentClient.get(url);

              case 6:
                response = _context2.sent;
                _context2.next = 18;
                break;

              case 9:
                _context2.prev = 9;
                _context2.t0 = _context2["catch"](3);

                if (!_context2.t0.response) {
                  _context2.next = 17;
                  break;
                }

                if (!(_context2.t0.response.status === 404)) {
                  _context2.next = 16;
                  break;
                }

                throw new ContentNotFoundError["a" /* ContentNotFoundError */](value);

              case 16:
                throw new HttpError["a" /* HttpError */](_context2.t0.response.status, _context2.t0.response.data);

              case 17:
                throw _context2.t0;

              case 18:
                contentItem = new ContentItem["a" /* ContentItem */]();
                contentItem.body = this.mapper.toMappedContent(response.data.content);
                return _context2.abrupt("return", contentItem);

              case 21:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[3, 9]]);
      }));

      function getContentItem(_x2, _x3) {
        return _getContentItem.apply(this, arguments);
      }

      return getContentItem;
    }()
  }]);

  return GetContentItemV2Impl;
}();
// CONCATENATED MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/content/coordinators/GetContentItemsV2Impl.js
function GetContentItemsV2Impl_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function GetContentItemsV2Impl_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? GetContentItemsV2Impl_ownKeys(Object(source), !0).forEach(function (key) { GetContentItemsV2Impl_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : GetContentItemsV2Impl_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function GetContentItemsV2Impl_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function GetContentItemsV2Impl_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { GetContentItemsV2Impl_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { GetContentItemsV2Impl_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function GetContentItemsV2Impl_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function GetContentItemsV2Impl_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function GetContentItemsV2Impl_createClass(Constructor, protoProps, staticProps) { if (protoProps) GetContentItemsV2Impl_defineProperties(Constructor.prototype, protoProps); if (staticProps) GetContentItemsV2Impl_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function GetContentItemsV2Impl_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


/**
 * Utility that maps an array of ids or keys into the expected format of a `content/fetch` request body
 * @param property id or key
 * @param values array of ids or keys
 * @hidden
 */

function mapToRequests(property, values) {
  if (!Array.isArray(values)) {
    throw new TypeError('Expecting an array');
  }

  return values.map(function (value) {
    return GetContentItemsV2Impl_defineProperty({}, property, String(value));
  });
}
/**
 * Wraps `content/fetch`
 * @hidden
 */


var GetContentItemsV2Impl_GetContentItemsV2Impl = /*#__PURE__*/function () {
  function GetContentItemsV2Impl(config, contentClient) {
    GetContentItemsV2Impl_classCallCheck(this, GetContentItemsV2Impl);

    this.config = config;
    this.contentClient = contentClient;
  }

  GetContentItemsV2Impl_createClass(GetContentItemsV2Impl, [{
    key: "getContentItemsByKey",
    value: function () {
      var _getContentItemsByKey = GetContentItemsV2Impl_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(keys) {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", this.getContentItems(mapToRequests('key', keys)));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getContentItemsByKey(_x) {
        return _getContentItemsByKey.apply(this, arguments);
      }

      return getContentItemsByKey;
    }()
  }, {
    key: "getContentItemsById",
    value: function () {
      var _getContentItemsById = GetContentItemsV2Impl_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(ids) {
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", this.getContentItems(mapToRequests('id', ids)));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function getContentItemsById(_x2) {
        return _getContentItemsById.apply(this, arguments);
      }

      return getContentItemsById;
    }()
  }, {
    key: "getContentItems",
    value: function () {
      var _getContentItems = GetContentItemsV2Impl_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(requests, parameters) {
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                return _context3.abrupt("return", this.fetchContentItems({
                  parameters: parameters,
                  requests: requests
                }));

              case 1:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function getContentItems(_x3, _x4) {
        return _getContentItems.apply(this, arguments);
      }

      return getContentItems;
    }()
  }, {
    key: "fetchContentItems",
    value: function () {
      var _fetchContentItems = GetContentItemsV2Impl_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref2) {
        var requests, parameters, defaultParameters, mergedParameters, _yield$this$contentCl, data;

        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                requests = _ref2.requests, parameters = _ref2.parameters;
                defaultParameters = {
                  depth: 'all',
                  format: 'inlined'
                };

                if (this.config.locale) {
                  defaultParameters.locale = this.config.locale;
                }

                mergedParameters = GetContentItemsV2Impl_objectSpread(GetContentItemsV2Impl_objectSpread({}, defaultParameters), parameters || {});
                _context4.prev = 4;
                _context4.next = 7;
                return this.contentClient.post('content/fetch', {
                  parameters: mergedParameters,
                  requests: requests
                });

              case 7:
                _yield$this$contentCl = _context4.sent;
                data = _yield$this$contentCl.data;
                return _context4.abrupt("return", data);

              case 12:
                _context4.prev = 12;
                _context4.t0 = _context4["catch"](4);

                if (!_context4.t0.response) {
                  _context4.next = 16;
                  break;
                }

                throw new HttpError["a" /* HttpError */](_context4.t0.response.status, _context4.t0.response.data);

              case 16:
                throw _context4.t0;

              case 17:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this, [[4, 12]]);
      }));

      function fetchContentItems(_x5) {
        return _fetchContentItems.apply(this, arguments);
      }

      return fetchContentItems;
    }()
  }]);

  return GetContentItemsV2Impl;
}();
// EXTERNAL MODULE: ./node_modules/is-retry-allowed/index.js
var is_retry_allowed = __webpack_require__(345);
var is_retry_allowed_default = /*#__PURE__*/__webpack_require__.n(is_retry_allowed);

// CONCATENATED MODULE: ./node_modules/axios-retry/lib/esm/index.js
function esm_typeof(obj) { "@babel/helpers - typeof"; return esm_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, esm_typeof(obj); }

function esm_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function esm_asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        esm_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        esm_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

function esm_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function esm_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      esm_ownKeys(Object(source), true).forEach(function (key) {
        esm_defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      esm_ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function esm_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}


var namespace = 'axios-retry';
/**
 * @param  {Error}  error
 * @return {boolean}
 */

function isNetworkError(error) {
  return !error.response && Boolean(error.code) && // Prevents retrying cancelled requests
  error.code !== 'ECONNABORTED' && // Prevents retrying timed out requests
  is_retry_allowed_default()(error); // Prevents retrying unsafe errors
}
var SAFE_HTTP_METHODS = ['get', 'head', 'options'];
var IDEMPOTENT_HTTP_METHODS = SAFE_HTTP_METHODS.concat(['put', 'delete']);
/**
 * @param  {Error}  error
 * @return {boolean}
 */

function isRetryableError(error) {
  return error.code !== 'ECONNABORTED' && (!error.response || error.response.status >= 500 && error.response.status <= 599);
}
/**
 * @param  {Error}  error
 * @return {boolean}
 */

function isSafeRequestError(error) {
  if (!error.config) {
    // Cannot determine if the request can be retried
    return false;
  }

  return isRetryableError(error) && SAFE_HTTP_METHODS.indexOf(error.config.method) !== -1;
}
/**
 * @param  {Error}  error
 * @return {boolean}
 */

function isIdempotentRequestError(error) {
  if (!error.config) {
    // Cannot determine if the request can be retried
    return false;
  }

  return isRetryableError(error) && IDEMPOTENT_HTTP_METHODS.indexOf(error.config.method) !== -1;
}
/**
 * @param  {Error}  error
 * @return {boolean}
 */

function isNetworkOrIdempotentRequestError(error) {
  return isNetworkError(error) || isIdempotentRequestError(error);
}
/**
 * @return {number} - delay in milliseconds, always 0
 */

function noDelay() {
  return 0;
}
/**
 * @param  {number} [retryNumber=0]
 * @return {number} - delay in milliseconds
 */


function exponentialDelay() {
  var retryNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var delay = Math.pow(2, retryNumber) * 100;
  var randomSum = delay * 0.2 * Math.random(); // 0-20% of the delay

  return delay + randomSum;
}
/**
 * Initializes and returns the retry state for the given request/config
 * @param  {AxiosRequestConfig} config
 * @return {Object}
 */

function getCurrentState(config) {
  var currentState = config[namespace] || {};
  currentState.retryCount = currentState.retryCount || 0;
  config[namespace] = currentState;
  return currentState;
}
/**
 * Returns the axios-retry options for the current request
 * @param  {AxiosRequestConfig} config
 * @param  {AxiosRetryConfig} defaultOptions
 * @return {AxiosRetryConfig}
 */


function getRequestOptions(config, defaultOptions) {
  return esm_objectSpread(esm_objectSpread({}, defaultOptions), config[namespace]);
}
/**
 * @param  {Axios} axios
 * @param  {AxiosRequestConfig} config
 */


function fixConfig(axios, config) {
  if (axios.defaults.agent === config.agent) {
    delete config.agent;
  }

  if (axios.defaults.httpAgent === config.httpAgent) {
    delete config.httpAgent;
  }

  if (axios.defaults.httpsAgent === config.httpsAgent) {
    delete config.httpsAgent;
  }
}
/**
 * Checks retryCondition if request can be retried. Handles it's retruning value or Promise.
 * @param  {number} retries
 * @param  {Function} retryCondition
 * @param  {Object} currentState
 * @param  {Error} error
 * @return {boolean}
 */


function shouldRetry(_x, _x2, _x3, _x4) {
  return _shouldRetry.apply(this, arguments);
}
/**
 * Adds response interceptors to an axios instance to retry requests failed due to network issues
 *
 * @example
 *
 * import axios from 'axios';
 *
 * axiosRetry(axios, { retries: 3 });
 *
 * axios.get('http://example.com/test') // The first request fails and the second returns 'ok'
 *   .then(result => {
 *     result.data; // 'ok'
 *   });
 *
 * // Exponential back-off retry delay between requests
 * axiosRetry(axios, { retryDelay : axiosRetry.exponentialDelay});
 *
 * // Custom retry delay
 * axiosRetry(axios, { retryDelay : (retryCount) => {
 *   return retryCount * 1000;
 * }});
 *
 * // Also works with custom axios instances
 * const client = axios.create({ baseURL: 'http://example.com' });
 * axiosRetry(client, { retries: 3 });
 *
 * client.get('/test') // The first request fails and the second returns 'ok'
 *   .then(result => {
 *     result.data; // 'ok'
 *   });
 *
 * // Allows request-specific configuration
 * client
 *   .get('/test', {
 *     'axios-retry': {
 *       retries: 0
 *     }
 *   })
 *   .catch(error => { // The first request fails
 *     error !== undefined
 *   });
 *
 * @param {Axios} axios An axios instance (the axios object or one created from axios.create)
 * @param {Object} [defaultOptions]
 * @param {number} [defaultOptions.retries=3] Number of retries
 * @param {boolean} [defaultOptions.shouldResetTimeout=false]
 *        Defines if the timeout should be reset between retries
 * @param {Function} [defaultOptions.retryCondition=isNetworkOrIdempotentRequestError]
 *        A function to determine if the error can be retried
 * @param {Function} [defaultOptions.retryDelay=noDelay]
 *        A function to determine the delay between retry requests
 * @param {Function} [defaultOptions.onRetry=()=>{}]
 *        A function to get notified when a retry occurs
 */


function _shouldRetry() {
  _shouldRetry = esm_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(retries, retryCondition, currentState, error) {
    var shouldRetryOrPromise, shouldRetryPromiseResult;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            shouldRetryOrPromise = currentState.retryCount < retries && retryCondition(error); // This could be a promise

            if (!(esm_typeof(shouldRetryOrPromise) === 'object')) {
              _context.next = 12;
              break;
            }

            _context.prev = 2;
            _context.next = 5;
            return shouldRetryOrPromise;

          case 5:
            shouldRetryPromiseResult = _context.sent;
            return _context.abrupt("return", shouldRetryPromiseResult !== false);

          case 9:
            _context.prev = 9;
            _context.t0 = _context["catch"](2);
            return _context.abrupt("return", false);

          case 12:
            return _context.abrupt("return", shouldRetryOrPromise);

          case 13:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[2, 9]]);
  }));
  return _shouldRetry.apply(this, arguments);
}

function axiosRetry(axios, defaultOptions) {
  axios.interceptors.request.use(function (config) {
    var currentState = getCurrentState(config);
    currentState.lastRequestTime = Date.now();
    return config;
  });
  axios.interceptors.response.use(null, /*#__PURE__*/function () {
    var _ref = esm_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(error) {
      var config, _getRequestOptions, _getRequestOptions$re, retries, _getRequestOptions$re2, retryCondition, _getRequestOptions$re3, retryDelay, _getRequestOptions$sh, shouldResetTimeout, _getRequestOptions$on, onRetry, currentState, delay, lastRequestDuration, timeout;

      return regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              config = error.config; // If we have no information to retry the request

              if (config) {
                _context2.next = 3;
                break;
              }

              return _context2.abrupt("return", Promise.reject(error));

            case 3:
              _getRequestOptions = getRequestOptions(config, defaultOptions), _getRequestOptions$re = _getRequestOptions.retries, retries = _getRequestOptions$re === void 0 ? 3 : _getRequestOptions$re, _getRequestOptions$re2 = _getRequestOptions.retryCondition, retryCondition = _getRequestOptions$re2 === void 0 ? isNetworkOrIdempotentRequestError : _getRequestOptions$re2, _getRequestOptions$re3 = _getRequestOptions.retryDelay, retryDelay = _getRequestOptions$re3 === void 0 ? noDelay : _getRequestOptions$re3, _getRequestOptions$sh = _getRequestOptions.shouldResetTimeout, shouldResetTimeout = _getRequestOptions$sh === void 0 ? false : _getRequestOptions$sh, _getRequestOptions$on = _getRequestOptions.onRetry, onRetry = _getRequestOptions$on === void 0 ? function () {} : _getRequestOptions$on;
              currentState = getCurrentState(config);
              _context2.next = 7;
              return shouldRetry(retries, retryCondition, currentState, error);

            case 7:
              if (!_context2.sent) {
                _context2.next = 20;
                break;
              }

              currentState.retryCount += 1;
              delay = retryDelay(currentState.retryCount, error); // Axios fails merging this configuration to the default configuration because it has an issue
              // with circular structures: https://github.com/mzabriskie/axios/issues/370

              fixConfig(axios, config);

              if (!(!shouldResetTimeout && config.timeout && currentState.lastRequestTime)) {
                _context2.next = 17;
                break;
              }

              lastRequestDuration = Date.now() - currentState.lastRequestTime;
              timeout = config.timeout - lastRequestDuration - delay;

              if (!(timeout <= 0)) {
                _context2.next = 16;
                break;
              }

              return _context2.abrupt("return", Promise.reject(error));

            case 16:
              config.timeout = timeout;

            case 17:
              config.transformRequest = [function (data) {
                return data;
              }];
              onRetry(currentState.retryCount, error, config);
              return _context2.abrupt("return", new Promise(function (resolve) {
                return setTimeout(function () {
                  return resolve(axios(config));
                }, delay);
              }));

            case 20:
              return _context2.abrupt("return", Promise.reject(error));

            case 21:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function (_x5) {
      return _ref.apply(this, arguments);
    };
  }());
} // Compatibility with CommonJS

axiosRetry.isNetworkError = isNetworkError;
axiosRetry.isSafeRequestError = isSafeRequestError;
axiosRetry.isIdempotentRequestError = isIdempotentRequestError;
axiosRetry.isNetworkOrIdempotentRequestError = isNetworkOrIdempotentRequestError;
axiosRetry.exponentialDelay = exponentialDelay;
axiosRetry.isRetryableError = isRetryableError;
// EXTERNAL MODULE: ./node_modules/dc-delivery-sdk-js/node_modules/axios/index.js
var axios = __webpack_require__(171);
var axios_default = /*#__PURE__*/__webpack_require__.n(axios);

// CONCATENATED MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/client/createBaseContentClient.js

/**
 * Create base network client to make requests to the content delivery service
 * @param config
 * @hidden
 */

function createBaseContentClient(config, defaultHost) {
  var client = axios_default.a.create({
    adapter: config.adaptor,
    timeout: config.timeout || 0
  });

  if (config.stagingEnvironment) {
    client.defaults.baseURL = "https://".concat(config.stagingEnvironment);
  } else {
    client.defaults.baseURL = config.baseUrl || defaultHost;
  }

  return client;
}
// CONCATENATED MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/client/createContentClientV2Fresh.js



var isThrottled = function isThrottled(error) {
  var _error$response;

  return (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 429;
};

var DEFAULT_RETRY_CONFIG = {
  retries: 3,
  retryDelay: axiosRetry.exponentialDelay,
  retryCondition: isThrottled
};
/**
 * Get retry config to be passed to axios-retry
 * @param retryConfig
 * @hidden
 */

function getRetryConfig(retryConfig) {
  var _retryConfig$retries, _retryConfig$retryDel, _retryConfig$retryCon;

  return {
    retries: (_retryConfig$retries = retryConfig === null || retryConfig === void 0 ? void 0 : retryConfig.retries) !== null && _retryConfig$retries !== void 0 ? _retryConfig$retries : DEFAULT_RETRY_CONFIG.retries,
    retryDelay: (_retryConfig$retryDel = retryConfig === null || retryConfig === void 0 ? void 0 : retryConfig.retryDelay) !== null && _retryConfig$retryDel !== void 0 ? _retryConfig$retryDel : DEFAULT_RETRY_CONFIG.retryDelay,
    retryCondition: (_retryConfig$retryCon = retryConfig === null || retryConfig === void 0 ? void 0 : retryConfig.retryCondition) !== null && _retryConfig$retryCon !== void 0 ? _retryConfig$retryCon : DEFAULT_RETRY_CONFIG.retryCondition
  };
}
/**
 * Create network client to make requests to the Fresh API service
 * @param config
 * @hidden
 */

function createContentClientV2Fresh(config, defaultHost) {
  var client = createBaseContentClient(config, defaultHost);
  client.defaults.headers.common['X-API-Key'] = config.apiKey;
  axiosRetry(client, getRetryConfig(config.retryConfig));
  return client;
}
// CONCATENATED MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/client/createContentClient.js



/**
 * Create network client to make requests to the content delivery service
 * @param config
 * @hidden
 */

function createContentClient(config) {
  if (isContentClientConfigV2Fresh(config)) {
    return createContentClientV2Fresh(config, "https://".concat(config.hubName, ".fresh.content.amplience.net"));
  }

  if (isContentClientConfigV2(config)) {
    return createBaseContentClient(config, "https://".concat(config.hubName, ".cdn.content.amplience.net"));
  }

  return createBaseContentClient(config, 'https://cdn.c1.amplience.net');
}
// CONCATENATED MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/content/model/NotSupportedError.js
function NotSupportedError_typeof(obj) { "@babel/helpers - typeof"; return NotSupportedError_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, NotSupportedError_typeof(obj); }

function NotSupportedError_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function NotSupportedError_createClass(Constructor, protoProps, staticProps) { if (protoProps) NotSupportedError_defineProperties(Constructor.prototype, protoProps); if (staticProps) NotSupportedError_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function NotSupportedError_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (NotSupportedError_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * @hidden
 */
var NotSupportedError = /*#__PURE__*/function (_Error) {
  _inherits(NotSupportedError, _Error);

  var _super = _createSuper(NotSupportedError);

  function NotSupportedError(property, method) {
    var _this;

    NotSupportedError_classCallCheck(this, NotSupportedError);

    _this = _super.call(this, "Not supported. You need to define \"".concat(property, "\" configuration property to use ").concat(method, "()"));
    _this.property = property;
    _this.method = method;
    _this.name = 'NOT_SUPPORTED';
    Object.setPrototypeOf(_assertThisInitialized(_this), (this instanceof NotSupportedError ? this.constructor : void 0).prototype);
    return _this;
  }

  return NotSupportedError_createClass(NotSupportedError);
}( /*#__PURE__*/_wrapNativeSuper(Error));
var NotSupportedV1Error = /*#__PURE__*/function (_NotSupportedError) {
  _inherits(NotSupportedV1Error, _NotSupportedError);

  var _super2 = _createSuper(NotSupportedV1Error);

  function NotSupportedV1Error(method) {
    var _this2;

    NotSupportedError_classCallCheck(this, NotSupportedV1Error);

    _this2 = _super2.call(this, 'account', method);
    _this2.method = method;
    _this2.name = 'NOT_SUPPORTED_V1';
    Object.setPrototypeOf(_assertThisInitialized(_this2), (this instanceof NotSupportedV1Error ? this.constructor : void 0).prototype);
    return _this2;
  }

  return NotSupportedError_createClass(NotSupportedV1Error);
}(NotSupportedError);
var NotSupportedV2Error = /*#__PURE__*/function (_NotSupportedError2) {
  _inherits(NotSupportedV2Error, _NotSupportedError2);

  var _super3 = _createSuper(NotSupportedV2Error);

  function NotSupportedV2Error(method) {
    var _this3;

    NotSupportedError_classCallCheck(this, NotSupportedV2Error);

    _this3 = _super3.call(this, 'hubName', method);
    _this3.method = method;
    _this3.name = 'NOT_SUPPORTED_V2';
    Object.setPrototypeOf(_assertThisInitialized(_this3), (this instanceof NotSupportedV2Error ? this.constructor : void 0).prototype);
    return _this3;
  }

  return NotSupportedError_createClass(NotSupportedV2Error);
}(NotSupportedError);
// CONCATENATED MODULE: ./node_modules/dc-delivery-sdk-js/build/module/lib/ContentClient.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ContentClient_ContentClient; });
function ContentClient_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function ContentClient_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function ContentClient_createClass(Constructor, protoProps, staticProps) { if (protoProps) ContentClient_defineProperties(Constructor.prototype, protoProps); if (staticProps) ContentClient_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }











/**
 * Amplience [Content Delivery API](https://docs.amplience.net/integration/deliveryapi.html?h=delivery) client.
 *
 * This client is intended to be used by end user applications to fetch content so that it can be displayed to users.
 *
 * You must provide some configuration options in order to create an instance of ContentClient.
 * Example:
 *
 * ```typescript
 * const client = new ContentClient({
 *    account: 'test'
 * });
 * ```
 *
 * You may override other settings when constructing the client but if no additional configuration is provided sensible defaults will be used.
 */

var ContentClient_ContentClient = /*#__PURE__*/function () {
  /**
   * Creates a Delivery API Client instance. You must provide a configuration object with the required details for the particular service you wish to fetch content from.
   * @param config Client configuration options
   */
  function ContentClient(config) {
    ContentClient_classCallCheck(this, ContentClient);

    this.config = config;

    if (!config) {
      throw new TypeError('Parameter "config" is required');
    }

    if (!config.account && !config.hubName) {
      throw new TypeError('Parameter "config" must contain a valid "account" name or "hubName" property');
    }

    if (config.stagingEnvironment && config.stagingEnvironment.indexOf('://') !== -1) {
      throw new TypeError('Parameter "stagingEnvironment" should be a hostname not a URL');
    }

    this.contentMapper = this.createContentMapper(config);
    this.contentClient = createContentClient(config);
  }
  /**
   * @deprecated use getContentItemById
   */


  ContentClient_createClass(ContentClient, [{
    key: "getContentItem",
    value: function getContentItem(contentItemId) {
      return this.getContentItemById(contentItemId);
    }
    /**
     * This function will load a Content Item or Slot by id and return a Promise of the result.
     * If the content is not found the promise will reject with an error.
     * If the content is found the promise will resolve with a parsed version of the content with all dependencies.
     *
     * The content body will match the format defined by your content type, however keep in mind that if you have evolved your content type some published content may still be in the older format.
     *
     * Some pre-processing is applied to the content body to make it easier to work with:
     *
     * * Linked content items are joined together into the root content item to create a single JSON document.
     * * Media references (images and videos) are replaced with wrapper objects [[Image]] and [[Video]] which provide helper functions.
     * * Content created using V1 of the CMS will be upgraded to the V2 format.
     *
     * You can convert the content back to plain JSON by calling the toJSON() function on the returned ContentItem.
     * @typeparam T The type of content returned. This is optional and by default the content returned is assumed to be “any”.
     * @param id Unique id of the Content Item or Slot to load
     */

  }, {
    key: "getContentItemById",
    value: function getContentItemById(id) {
      if (isContentClientConfigV2(this.config)) {
        return new GetContentItemV2Impl_GetContentItemV2Impl(this.config, this.contentClient, this.contentMapper).getContentItemById(id);
      }

      return new GetContentItemV1Impl_GetContentItemV1Impl(this.config, this.contentClient, this.contentMapper).getContentItemById(id);
    }
    /**
     * This function will load a Content Item or Slot by key and return a Promise of the result.
     * If the content is not found the promise will reject with an error.
     * If the content is found the promise will resolve with a parsed version of the content with all dependencies.
     *
     * A delivery key can be a simple string or a path such as "home-page/feature-banner". This makes it simpler to write your integration code and allows users more control over where items of content are delivered. You can add a delivery key to a slot in the Dynamic Content app or to a content item or slot using the Dynamic Content Management API.
     * Note that a delivery key may not start or end with "/" and must be between 1 and 150 characters. Delivery keys can contain the following alphanumeric characters: a to z, A to Z and 0 to 9. You can also include "-" and "_" and "/" as long as it is not included at the start or end of the key.
     *
     * The content body will match the format defined by your content type.
     *
     * Some pre-processing is applied to the content body to make it easier to work with:
     *
     * * Linked content items are joined together into the root content item to create a single JSON document.
     * * Media references (images and videos) are replaced with wrapper objects [[Image]] and [[Video]] which provide helper functions.
     * * Content created using V1 of the CMS will be upgraded to the V2 format.
     *
     * You can convert the content back to plain JSON by calling the toJSON() function on the returned ContentItem.
     * @typeparam T The type of content returned. This is optional and by default the content returned is assumed to be “any”.
     * @param id Unique id of the Content Item or Slot to load
     */

  }, {
    key: "getContentItemByKey",
    value: function getContentItemByKey(key) {
      if (!isContentClientConfigV2(this.config)) {
        throw new NotSupportedV2Error('getContentItemByKey');
      }

      return new GetContentItemV2Impl_GetContentItemV2Impl(this.config, this.contentClient, this.contentMapper).getContentItemByKey(key);
    }
    /**
     * This function will help construct requests for filtering Content Items or Slots
     *
     * @param filterBy - API options for `/content/filter` endpoint [docs](https://amplience.com/docs/development/contentdelivery/filterandsort.html)
     * @returns
     */

  }, {
    key: "filterContentItems",
    value: function filterContentItems(filterBy) {
      if (!isContentClientConfigV2(this.config)) {
        throw new NotSupportedV2Error('filterContentItems');
      }

      return new FilterByImpl_FilterByImpl(this.config, this.contentClient).fetch(filterBy);
    }
    /**
     *  This function will help construct requests for filtering Content Items or Slots
     *
     * @param path - json path to property you wish to filter by e.g `/_meta/schema`
     * @param value - value you want to return matches for
     *
     * @returns `FilterBy<Body>`
     */

  }, {
    key: "filterBy",
    value: function filterBy(path, value) {
      if (!isContentClientConfigV2(this.config)) {
        throw new NotSupportedV2Error('filterBy');
      }

      return new FilterBy_FilterBy(this.config, this.contentClient).filterBy(path, value);
    }
    /**
     *
     *  This function will help construct requests for filtering Content Items or Slots
     *
     *  equivalent to:
     *
     * ```ts
     *  client.filterBy('/_meta/schema', contentTypeUri)
     * ```
     *
     * @param contentTypeUri - Content Type Uri you want to filter
     *
     * @returns `FilterBy<Body>`
     */

  }, {
    key: "filterByContentType",
    value: function filterByContentType(contentTypeUri) {
      if (!isContentClientConfigV2(this.config)) {
        throw new NotSupportedV2Error('filterByContentType');
      }

      return new FilterBy_FilterBy(this.config, this.contentClient).filterByContentType(contentTypeUri);
    }
    /**
     *  This function will help construct requests for filtering Content Items or Slots
     *
     * equivalent to:
     *
     * ```ts
     *  client.filterBy('/_meta/hierarchy/parentId', id)
     * ```
     *
     * @param id - ID of a Hierarchy Content Item
     *
     * @returns `FilterBy<Body>`
     */

  }, {
    key: "filterByParentId",
    value: function filterByParentId(id) {
      if (!isContentClientConfigV2(this.config)) {
        throw new NotSupportedV2Error('filterByParentId');
      }

      return new FilterBy_FilterBy(this.config, this.contentClient).filterByParentId(id);
    }
    /**
     * This function will help construct requests for fetching multiple Content Items or Slots by delivery ID
     * and is equivalent to:
     *
     * ```ts
     *  client.fetchContentItems({
     *    parameters: {
     *      depth: 'all',
     *      format: 'inlined'
     *    },
     *    requests: [
     *      { id: '6cd4de36-591b-4ca2-874b-1dec7b681d7e' },
     *      { id: 'c6d9e038-591b-4ca2-874b-da354f5d6e61' },
     *    ],
     *  });
     * ```
     *
     * @param keys An array of Delivery keys of the content you wish to fetch
     * @typeparam Body The type of content returned. This is optional and by default the content returned is assumed to be “any”.
     * @returns `Promise<FetchResponse<Body>>`
     */

  }, {
    key: "getContentItemsById",
    value: function getContentItemsById(ids) {
      if (!isContentClientConfigV2(this.config)) {
        throw new NotSupportedV2Error('getContentItemsById');
      }

      return new GetContentItemsV2Impl_GetContentItemsV2Impl(this.config, this.contentClient).getContentItemsById(ids);
    }
    /**
     * This function will help construct requests for fetching multiple Content Items or Slots by delivery key
     * and is equivalent to:
     *
     * ```ts
     *  client.fetchContentItems({
     *    parameters: {
     *      depth: 'all',
     *      format: 'inlined'
     *    },
     *    requests: [
     *      { key: 'blog/article-1' },
     *      { key: 'blog/article-2' },
     *    ],
     *  });
     * ```
     *
     * @param keys An array of delivery IDs of the content you wish to fetch
     * @typeparam Body The type of content returned. This is optional and by default the content returned is assumed to be “any”.
     * @returns `Promise<FetchResponse<Body>>`
     */

  }, {
    key: "getContentItemsByKey",
    value: function getContentItemsByKey(keys) {
      if (!isContentClientConfigV2(this.config)) {
        throw new NotSupportedV2Error('getContentItemsByKey');
      }

      return new GetContentItemsV2Impl_GetContentItemsV2Impl(this.config, this.contentClient).getContentItemsByKey(keys);
    }
    /**
     * This function will help construct requests for fetching multiple Content Items or Slots by delivery key and/or id
     * and is equivalent to:
     *
     * ```ts
     *  client.fetchContentItems({
     *    parameters: {
     *      depth: 'all',
     *      format: 'inlined'
     *    },
     *    requests: [
     *      { id: '6cd4de36-591b-4ca2-874b-1dec7b681d7e' },
     *      { key: 'blog/article-1' },
     *    ],
     *  });
     * ```
     *
     * @param requests An array of delivery IDs of the content you wish to fetch
     * @param parameters Optional override of default parameters
     * @typeparam Body The type of content returned. This is optional and by default the content returned is assumed to be “any”.
     * @returns `Promise<FetchResponse<Body>>`
     */

  }, {
    key: "getContentItems",
    value: function getContentItems(requests, parameters) {
      if (!isContentClientConfigV2(this.config)) {
        throw new NotSupportedV2Error('getContentItems');
      }

      return new GetContentItemsV2Impl_GetContentItemsV2Impl(this.config, this.contentClient).getContentItems(requests, parameters);
    }
    /**
     * This function will help construct requests for fetching multiple Content Items or Slots by delivery key or ID. Wraps [`/content/fetch`](https://amplience.com/docs/api/dynamic-content/delivery/content-delivery-2/index.html#operation/multiGetContent) endpoint.
     * [Additional documentation](https://amplience.com/docs/development/contentdelivery/readme.html#multipleitems)
     *
     * @param body The request body. Can include per item parameters as well as global parameters
     * @typeparam Body The type of content returned. This is optional and by default the content returned is assumed to be “any”.
     * @returns `Promise<FetchResponse<Body>>`
     */

  }, {
    key: "fetchContentItems",
    value: function fetchContentItems(body) {
      if (!isContentClientConfigV2(this.config)) {
        throw new NotSupportedV2Error('fetchContentItems');
      }

      return new GetContentItemsV2Impl_GetContentItemsV2Impl(this.config, this.contentClient).fetchContentItems(body);
    }
    /**
     * Converts a Content Item or Slot into a custom format (e.g. HTML / XML) by applying a template server side.
     * @param contentItemId Unique id of the Content Item or Slot to convert using the rendering service
     * @param templateName Name of the template to render the content item or slot with. The template must be setup in your account
     * @param customParameters Custom parameters which will be sent to the rendering API and made avaliable to your template
     */

  }, {
    key: "renderContentItem",
    value: function renderContentItem(contentItemId, templateName, customParameters) {
      if (!isContentClientConfigV1(this.config)) {
        throw new NotSupportedV1Error('renderContentItem');
      }

      return new RenderContentItem_RenderContentItem(this.config, this.contentClient).renderContentItem(contentItemId, templateName, customParameters);
    }
    /**
     * Creates a parser which converts content JSON into classes and objects used by the SDK
     * @param config
     * @hidden
     */

  }, {
    key: "createContentMapper",
    value: function createContentMapper(config) {
      return new ContentMapper_ContentMapper(config);
    }
  }]);

  return ContentClient;
}();

/***/ }),
/* 338 */
/***/ (function(module, exports) {

module.exports = require("querystring");

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var mailer = __webpack_require__(609);

var MailService = __webpack_require__(275);

module.exports = mailer;
module.exports.MailService = MailService;

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var Mailer = __webpack_require__(651);

var shared = __webpack_require__(44);

var SMTPPool = __webpack_require__(663);

var SMTPTransport = __webpack_require__(667);

var SendmailTransport = __webpack_require__(668);

var StreamTransport = __webpack_require__(670);

var JSONTransport = __webpack_require__(671);

var SESTransport = __webpack_require__(672);

var fetch = __webpack_require__(165);

var packageData = __webpack_require__(55);

var ETHEREAL_API = (process.env.ETHEREAL_API || 'https://api.nodemailer.com').replace(/\/+$/, '');
var ETHEREAL_WEB = (process.env.ETHEREAL_WEB || 'https://ethereal.email').replace(/\/+$/, '');
var ETHEREAL_CACHE = ['true', 'yes', 'y', '1'].includes((process.env.ETHEREAL_CACHE || 'yes').toString().trim().toLowerCase());
var testAccount = false;

module.exports.createTransport = function (transporter, defaults) {
  var urlConfig;
  var options;
  var mailer;

  if ( // provided transporter is a configuration object, not transporter plugin
  _typeof(transporter) === 'object' && typeof transporter.send !== 'function' || // provided transporter looks like a connection url
  typeof transporter === 'string' && /^(smtps?|direct):/i.test(transporter)) {
    if (urlConfig = typeof transporter === 'string' ? transporter : transporter.url) {
      // parse a configuration URL into configuration options
      options = shared.parseConnectionUrl(urlConfig);
    } else {
      options = transporter;
    }

    if (options.pool) {
      transporter = new SMTPPool(options);
    } else if (options.sendmail) {
      transporter = new SendmailTransport(options);
    } else if (options.streamTransport) {
      transporter = new StreamTransport(options);
    } else if (options.jsonTransport) {
      transporter = new JSONTransport(options);
    } else if (options.SES) {
      transporter = new SESTransport(options);
    } else {
      transporter = new SMTPTransport(options);
    }
  }

  mailer = new Mailer(transporter, options, defaults);
  return mailer;
};

module.exports.createTestAccount = function (apiUrl, callback) {
  var promise;

  if (!callback && typeof apiUrl === 'function') {
    callback = apiUrl;
    apiUrl = false;
  }

  if (!callback) {
    promise = new Promise(function (resolve, reject) {
      callback = shared.callbackPromise(resolve, reject);
    });
  }

  if (ETHEREAL_CACHE && testAccount) {
    setImmediate(function () {
      return callback(null, testAccount);
    });
    return promise;
  }

  apiUrl = apiUrl || ETHEREAL_API;
  var chunks = [];
  var chunklen = 0;
  var req = fetch(apiUrl + '/user', {
    contentType: 'application/json',
    method: 'POST',
    body: Buffer.from(JSON.stringify({
      requestor: packageData.name,
      version: packageData.version
    }))
  });
  req.on('readable', function () {
    var chunk;

    while ((chunk = req.read()) !== null) {
      chunks.push(chunk);
      chunklen += chunk.length;
    }
  });
  req.once('error', function (err) {
    return callback(err);
  });
  req.once('end', function () {
    var res = Buffer.concat(chunks, chunklen);
    var data;
    var err;

    try {
      data = JSON.parse(res.toString());
    } catch (E) {
      err = E;
    }

    if (err) {
      return callback(err);
    }

    if (data.status !== 'success' || data.error) {
      return callback(new Error(data.error || 'Request failed'));
    }

    delete data.status;
    testAccount = data;
    callback(null, testAccount);
  });
  return promise;
};

module.exports.getTestMessageUrl = function (info) {
  if (!info || !info.response) {
    return false;
  }

  var infoProps = new Map();
  info.response.replace(/\[([^\]]+)\]$/, function (m, props) {
    props.replace(/\b([A-Z0-9]+)=([^\s]+)/g, function (m, key, value) {
      infoProps.set(key, value);
    });
  });

  if (infoProps.has('STATUS') && infoProps.has('MSGID')) {
    return (testAccount.web || ETHEREAL_WEB) + '/message/' + infoProps.get('MSGID');
  }

  return false;
};

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createClient = createClient;

var _axios = _interopRequireDefault(__webpack_require__(673));

var _contentfulSdkCore = __webpack_require__(56);

var _createContentfulApi = _interopRequireDefault(__webpack_require__(717));

var _createGlobalOptions = _interopRequireDefault(__webpack_require__(730));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
/**
 * Create a client instance
 * @func
 * @name createClient
 * @memberof contentful
 * @param {Object} params - Client initialization parameters
 * @prop {string} params.space - Space ID
 * @prop {string} params.accessToken - Contentful CDA Access Token
 * @prop {string} [params.environment="master"] - Contentful Environment ID
 * @prop {boolean=} params.insecure - Requests will be made over http instead of the default https (default: true)
 * @prop {string=} params.host - API host (default: cdn.contentful.com). Also usable with preview.contentful.com.
 * @prop {string=} params.basePath - Path appended to the host to support gateways/proxies with custom urls.
 * @prop {Object=} params.httpAgent - Optional Node.js HTTP agent for proxying (see <a href="https://nodejs.org/api/http.html#http_class_http_agent">Node.js docs</a> and <a href="https://www.npmjs.com/package/https-proxy-agent">https-proxy-agent</a>)
 * @prop {Object=} params.httpsAgent - Optional Node.js HTTP agent for proxying (see <a href="https://nodejs.org/api/http.html#http_class_http_agent">Node.js docs</a> and <a href="https://www.npmjs.com/package/https-proxy-agent">https-proxy-agent</a>)
 * @prop {Object=} params.proxy - Optional Axios proxy (see <a href="https://github.com/mzabriskie/axios#request-config"> axios docs </a>)
 * @prop {Object=} params.headers - Optional additional headers
 * @prop {function=} params.adapter - Optional axios request adapter (see <a href="https://github.com/mzabriskie/axios#request-config"> axios docs </a>)
 * @prop {boolean=?} params.resolveLinks - If we should resolve links between entries (default: true)
 * @prop {boolean=?} params.removeUnresolved - If we should remove links to entries which could not be resolved (default: false)
 * @prop {boolean=?} params.retryOnError - If we should retry on errors and 429 rate limit exceptions (default: true)
 * @prop {function=} params.logHandler - A log handler function to process given log messages & errors. Receives the log level (error, warning & info) and the actual log data (Error object or string). (The default can be found at: https://github.com/contentful/contentful-sdk-core/blob/master/src/create-http-client.ts)
 * @prop {string=?} params.application - Application name and version e.g myApp/version
 * @prop {string=?} params.integration - Integration name and version e.g react/version
 * @prop {number=} params.timeout in milliseconds - connection timeout (default:30000)
 * @prop {number=} params.retryLimit - Optional number of retries before failure. Default is 5
 * @returns {ContentfulClientAPI.ClientAPI}
 * @example
 * const contentful = require('contentful')
 * const client = contentful.createClient({
 *  accessToken: 'myAccessToken',
 *  space: 'mySpaceId'
 * })
 */


function createClient(params) {
  if (!params.accessToken) {
    throw new TypeError('Expected parameter accessToken');
  }

  if (!params.space) {
    throw new TypeError('Expected parameter space');
  }

  var defaultConfig = {
    resolveLinks: true,
    removeUnresolved: false,
    defaultHostname: 'cdn.contentful.com',
    environment: 'master'
  };

  var config = _objectSpread(_objectSpread({}, defaultConfig), params);

  var userAgentHeader = (0, _contentfulSdkCore.getUserAgentHeader)("contentful.js/".concat("9.2.5"), config.application, config.integration);
  config.headers = _objectSpread(_objectSpread({}, config.headers), {}, {
    'Content-Type': 'application/vnd.contentful.delivery.v1+json',
    'X-Contentful-User-Agent': userAgentHeader
  });
  var http = (0, _contentfulSdkCore.createHttpClient)(_axios["default"], config);
  var getGlobalOptions = (0, _createGlobalOptions["default"])({
    resolveLinks: config.resolveLinks,
    environment: config.environment,
    removeUnresolved: config.removeUnresolved,
    spaceBaseUrl: http.defaults.baseURL,
    environmentBaseUrl: "".concat(http.defaults.baseURL, "environments/").concat(config.environment)
  }); // Append environment to baseURL

  http.defaults.baseURL = getGlobalOptions().environmentBaseUrl;
  return (0, _createContentfulApi["default"])({
    http: http,
    getGlobalOptions: getGlobalOptions
  });
}

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var stringify = __webpack_require__(704);

var parse = __webpack_require__(716);

var formats = __webpack_require__(217);

module.exports = {
  formats: formats,
  parse: parse,
  stringify: stringify
};

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var AbortError = /*#__PURE__*/function (_Error) {
  _inherits(AbortError, _Error);

  var _super = _createSuper(AbortError);

  function AbortError() {
    var _this;

    _classCallCheck(this, AbortError);

    _this = _super.call(this, 'Throttled function aborted');
    _this.name = 'AbortError';
    return _this;
  }

  return _createClass(AbortError);
}( /*#__PURE__*/_wrapNativeSuper(Error));

var pThrottle = function pThrottle(_ref) {
  var limit = _ref.limit,
      interval = _ref.interval,
      strict = _ref.strict;

  if (!Number.isFinite(limit)) {
    throw new TypeError('Expected `limit` to be a finite number');
  }

  if (!Number.isFinite(interval)) {
    throw new TypeError('Expected `interval` to be a finite number');
  }

  var queue = new Map();
  var currentTick = 0;
  var activeCount = 0;

  function windowedDelay() {
    var now = Date.now();

    if (now - currentTick > interval) {
      activeCount = 1;
      currentTick = now;
      return 0;
    }

    if (activeCount < limit) {
      activeCount++;
    } else {
      currentTick += interval;
      activeCount = 1;
    }

    return currentTick - now;
  }

  var strictTicks = [];

  function strictDelay() {
    var now = Date.now();

    if (strictTicks.length < limit) {
      strictTicks.push(now);
      return 0;
    }

    var earliestTime = strictTicks.shift() + interval;

    if (now >= earliestTime) {
      strictTicks.push(now);
      return 0;
    }

    strictTicks.push(earliestTime);
    return earliestTime - now;
  }

  var getDelay = strict ? strictDelay : windowedDelay;
  return function (function_) {
    var throttled = function throttled() {
      var _this2 = this;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      if (!throttled.isEnabled) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
          return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  return _context.abrupt("return", function_.apply(_this2, args));

                case 1:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }))();
      }

      var timeout;
      return new Promise(function (resolve, reject) {
        var execute = function execute() {
          resolve(function_.apply(_this2, args));
          queue["delete"](timeout);
        };

        timeout = setTimeout(execute, getDelay());
        queue.set(timeout, reject);
      });
    };

    throttled.abort = function () {
      var _iterator = _createForOfIteratorHelper(queue.keys()),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var timeout = _step.value;
          clearTimeout(timeout);
          queue.get(timeout)(new AbortError());
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      queue.clear();
      strictTicks.splice(0, strictTicks.length);
    };

    throttled.isEnabled = true;
    return throttled;
  };
};

module.exports = pThrottle;
module.exports.AbortError = AbortError;

/***/ }),
/* 344 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _lib_ContentClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(337);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ContentClient", function() { return _lib_ContentClient__WEBPACK_IMPORTED_MODULE_0__["a"]; });

/* harmony import */ var _lib_ContentClientConfig__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(321);
/* harmony import */ var _lib_ContentClientConfig__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_lib_ContentClientConfig__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_config_CommonContentClientConfig__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(322);
/* harmony import */ var _lib_config_CommonContentClientConfig__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_lib_config_CommonContentClientConfig__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _lib_config_ContentClientConfigV1__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(323);
/* harmony import */ var _lib_config_ContentClientConfigV1__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_lib_config_ContentClientConfigV1__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _lib_config_ContentClientConfigV2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(324);
/* harmony import */ var _lib_config_ContentClientConfigV2__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_lib_config_ContentClientConfigV2__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _lib_staging_environment_StagingEnvironmentFactory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(325);
/* harmony import */ var _lib_staging_environment_StagingEnvironmentFactoryConfig__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(326);
/* harmony import */ var _lib_staging_environment_StagingEnvironmentFactoryConfig__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_lib_staging_environment_StagingEnvironmentFactoryConfig__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _lib_staging_environment_GenerateDomainOptions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(327);
/* harmony import */ var _lib_staging_environment_GenerateDomainOptions__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_lib_staging_environment_GenerateDomainOptions__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _lib_content_model_ContentBody__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(328);
/* harmony import */ var _lib_content_model_ContentBody__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_lib_content_model_ContentBody__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _lib_content_model_ContentItem__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(101);
/* harmony import */ var _lib_content_model_ContentLifecycle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(100);
/* harmony import */ var _lib_content_model_ContentReference__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(131);
/* harmony import */ var _lib_content_model_ContentMeta__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(86);
/* harmony import */ var _lib_content_model_ContentNotFoundError__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(85);
/* harmony import */ var _lib_content_model_Edition__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(99);
/* harmony import */ var _lib_content_model_FragmentMeta__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(33);
/* harmony import */ var _lib_content_model_HttpError__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(57);
/* harmony import */ var _lib_media_Media__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(102);
/* harmony import */ var _lib_media_MediaMeta__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(103);
/* harmony import */ var _lib_media_Image__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(129);
/* harmony import */ var _lib_media_ImageUrlBuilder__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(104);
/* harmony import */ var _lib_media_model_ImageFormat__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(329);
/* harmony import */ var _lib_media_Video__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(130);
/* harmony import */ var _lib_rendering_model_RenderedContentItem__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(169);

























/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var denyList = new Set(['ENOTFOUND', 'ENETUNREACH', // SSL errors from https://github.com/nodejs/node/blob/fc8e3e2cdc521978351de257030db0076d79e0ab/src/crypto/crypto_common.cc#L301-L328
'UNABLE_TO_GET_ISSUER_CERT', 'UNABLE_TO_GET_CRL', 'UNABLE_TO_DECRYPT_CERT_SIGNATURE', 'UNABLE_TO_DECRYPT_CRL_SIGNATURE', 'UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY', 'CERT_SIGNATURE_FAILURE', 'CRL_SIGNATURE_FAILURE', 'CERT_NOT_YET_VALID', 'CERT_HAS_EXPIRED', 'CRL_NOT_YET_VALID', 'CRL_HAS_EXPIRED', 'ERROR_IN_CERT_NOT_BEFORE_FIELD', 'ERROR_IN_CERT_NOT_AFTER_FIELD', 'ERROR_IN_CRL_LAST_UPDATE_FIELD', 'ERROR_IN_CRL_NEXT_UPDATE_FIELD', 'OUT_OF_MEM', 'DEPTH_ZERO_SELF_SIGNED_CERT', 'SELF_SIGNED_CERT_IN_CHAIN', 'UNABLE_TO_GET_ISSUER_CERT_LOCALLY', 'UNABLE_TO_VERIFY_LEAF_SIGNATURE', 'CERT_CHAIN_TOO_LONG', 'CERT_REVOKED', 'INVALID_CA', 'PATH_LENGTH_EXCEEDED', 'INVALID_PURPOSE', 'CERT_UNTRUSTED', 'CERT_REJECTED', 'HOSTNAME_MISMATCH']); // TODO: Use `error?.code` when targeting Node.js 14

module.exports = function (error) {
  return !denyList.has(error && error.code);
};

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function () {
  "use strict";

  var e = {
    971: function _(e, t) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      }), t["default"] = {
        protocol: "https",
        host: "cdn.contentstack.io",
        port: 443,
        version: "v3",
        urls: {
          sync: "/stacks/sync",
          content_types: "/content_types/",
          entries: "/entries/",
          assets: "/assets/",
          environments: "/environments/"
        },
        live_preview: {
          enable: !1,
          host: "api.contentstack.io"
        }
      };
    },
    900: function _(e, t, r) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      });
      var n,
          i = (n = r(128)) && n.__esModule ? n : {
        "default": n
      },
          o = {
        providers: function providers(e) {
          if (e) return i["default"];
          console.error("Kindly provide valid provider.");
        },
        policies: {
          IGNORE_CACHE: -1,
          ONLY_NETWORK: 0,
          CACHE_ELSE_NETWORK: 1,
          NETWORK_ELSE_CACHE: 2,
          CACHE_THEN_NETWORK: 3
        }
      };
      t["default"] = o;
    },
    128: function _(e, t, r) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      });

      var n = function (e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e) for (var r in e) {
          Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        }
        return t["default"] = e, t;
      }(r(821)),
          i = {};

      function o(e, t) {
        !t && e && e.length && e.push("");
        var r = void 0,
            i = n.getKeys(),
            o = n.getStorage();

        if (e && e.length) {
          r = e.join(".");

          for (var s = 0, u = i.length; s < u; s++) {
            i[s] && 0 === i[s].indexOf(r) && delete o[i[s]];
          }
        } else for (var a = 0, c = i.length; a < c; a++) {
          delete o[i[a]];
        }
      }

      i.get = function (e, t) {
        try {
          t(null, n.get(e));
        } catch (e) {
          t(e);
        }
      }, i.set = function (e, t, r) {
        try {
          e && t && n.set(e, t), r();
        } catch (e) {
          r(e);
        }
      }, i.clearByContentType = function () {
        try {
          if (2 === arguments.length || 3 === arguments.length) {
            var e = Array.prototype.slice.call(arguments),
                t = e.splice(-1, 1).pop(),
                r = [];
            r.push.apply(r, e), o(r), t();
          }
        } catch (e) {
          callback(e);
        }
      }, i.clearByQuery = function (e, t) {
        try {
          for (var r = n.getKeys(), i = n.getStorage(), o = 0, s = r.length; o < s; o++) {
            r[o] && ~r[o].indexOf(e) && delete i[r[o]];
          }

          t();
        } catch (e) {
          t(e);
        }
      }, i.clearAll = function (e) {
        try {
          o(), e();
        } catch (t) {
          e(t);
        }
      }, t["default"] = i;
    },
    821: function _(e, t, r) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      });
      var n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
        return _typeof(e);
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof(e);
      };
      t.get = function (e) {
        var t = o["default"].getItem(e);

        try {
          t = JSON.parse(t);
        } catch (e) {
          return t;
        }

        return t || null;
      }, t.set = function (e, t) {
        try {
          "object" === (void 0 === t ? "undefined" : n(t)) ? o["default"].setItem(e, JSON.stringify(t)) : o["default"].setItem(e, t);
        } catch (e) {}
      }, t.getStorage = function () {
        return o["default"] || null;
      }, t.getKeys = function () {
        return o["default"] ? Object.keys(o["default"]) : [];
      };
      var i,
          o = (i = r(895)) && i.__esModule ? i : {
        "default": i
      };
    },
    32: function _(e, t, r) {
      var n = function () {
        function e(e, t) {
          for (var r = 0; r < t.length; r++) {
            var n = t[r];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
          }
        }

        return function (t, r, n) {
          return r && e(t.prototype, r), n && e(t, n), t;
        };
      }(),
          i = u(r(533)),
          o = u(r(900)),
          s = u(r(764));

      function u(e) {
        return e && e.__esModule ? e : {
          "default": e
        };
      }

      var a = function () {
        function e() {
          !function (e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
          }(this, e), this.CachePolicy = o["default"].policies, this.Region = s["default"], this.Utils = r(464);
        }

        return n(e, [{
          key: "Stack",
          value: function value() {
            for (var e = arguments.length, t = Array(e), r = 0; r < e; r++) {
              t[r] = arguments[r];
            }

            return new (Function.prototype.bind.apply(i["default"], [null].concat(t)))();
          }
        }]), e;
      }();

      e.exports = new a();
    },
    764: function _(e, t) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      }), t["default"] = {
        EU: "eu",
        US: "us",
        AZURE_NA: "azure-na",
        AZURE_EU: "azure-eu"
      };
    },
    777: function _(e, t, r) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      });
      var n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
        return _typeof(e);
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof(e);
      };

      t["default"] = function (e, t) {
        var r = e.requestParams;
        return new Promise(function (i, o) {
          var s = void 0;
          return r.headers["Content-Type"] = "application/json; charset=UTF-8", r.headers["X-User-Agent"] = "contentstack-nodejs/" + u, r.body && "object" === n(r.body) && (delete r.body._method, "object" === n(r.body.query) && 0 === Object.keys(r.body.query).length && delete r.body.query, s = function e(t, r) {
            var i = [];
            if ("object" === (void 0 === t ? "undefined" : n(t)) && void 0 !== t.length) for (var o = 0, s = t.length; o < s; o++) {
              i.push(r + "[]=" + t[o]);
            } else for (var u in t) {
              var a = r ? r + "[" + u + "]" : u,
                  c = t[u];
              i.push(null !== c && "object" === (void 0 === c ? "undefined" : n(c)) && "query" !== u ? e(c, a) : a + "=" + encodeURIComponent("query" !== u ? c : JSON.stringify(c)));
            }
            return i.join("&");
          }(r.body)), a(e, s, t, i, o, t.retryDelay, t.retryLimit);
        });
      };

      var i,
          o = function (e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e) for (var r in e) {
          Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        }
        return t["default"] = e, t;
      }(r(540)),
          s = (i = r(289)) && i.__esModule ? i : {
        "default": i
      },
          u = "3.17.0";

      function a(e, t, r, n, i) {
        var u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 300,
            c = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 5,
            l = e.requestParams,
            f = l.url + "?" + t,
            h = l.headers,
            y = o.mergeDeep({
          method: "GET",
          headers: h,
          timeout: 3e4
        }, r);
        r.debug && r.logHandler("info", {
          url: f,
          option: y
        });
        var d = {
          url: f,
          option: y
        },
            p = e.plugins;
        if (p && void 0 !== p) for (var v = 0; v < p.length; v++) {
          "function" == typeof p[v].onRequest && (d = p[v].onRequest(e, d));
        }
        (0, s["default"])(d.url, d.option).then(function (o) {
          r.debug && r.logHandler("info", o);
          var s = o.json();
          if (o.ok && 200 === o.status) s.then(function (t) {
            for (var r = 0; r < p.length && "function" == typeof p[r].onResponse; r++) {
              t = p[r].onResponse(e, d, o, t);
            }

            n(t);
          });else {
            var l = o.status,
                f = o.statusText;
            s.then(function (s) {
              var h = {
                error_message: s.error_message,
                error_code: s.error_code,
                errors: s.errors,
                status: l,
                statusText: f
              };
              r.retryCondition && r.retryCondition(o) ? function (o) {
                if (0 === c) r.debug && r.logHandler("error", o), i(o);else {
                  var s = u;
                  c -= 1;
                  var l = r.retryLimit - c;
                  r.retryDelayOptions && (r.retryDelayOptions.base ? s = r.retryDelayOptions.base * l : r.retryDelayOptions.customBackoff && (s = r.retryDelayOptions.customBackoff(l, o))), function (e) {
                    return new Promise(function (t) {
                      setTimeout(t, e);
                    });
                  }(s).then(function () {
                    return a(e, t, r, n, i, u, c);
                  })["catch"](function () {
                    return a(e, t, r, n, i, u, c);
                  });
                }
              }(h) : (r.debug && r.logHandler("error", h), i(h));
            })["catch"](function () {
              r.debug && r.logHandler("error", {
                status: l,
                statusText: f
              }), i({
                status: l,
                statusText: f
              });
            });
          }
        })["catch"](function (e) {
          r.debug && r.logHandler("error", e), i(e);
        });
      }
    },
    540: function _(e, t, r) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      });

      var n = function n(e, t) {
        if (Array.isArray(e)) return e;
        if (Symbol.iterator in Object(e)) return function (e, t) {
          var r = [],
              n = !0,
              i = !1,
              o = void 0;

          try {
            for (var s, u = e[Symbol.iterator](); !(n = (s = u.next()).done) && (r.push(s.value), !t || r.length !== t); n = !0) {
              ;
            }
          } catch (e) {
            i = !0, o = e;
          } finally {
            try {
              !n && u["return"] && u["return"]();
            } finally {
              if (i) throw o;
            }
          }

          return r;
        }(e, t);
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      },
          i = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
        return _typeof(e);
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof(e);
      };

      t.transform = function (e) {
        return function () {
          switch (this._query[e] = this._query[e] || {}, arguments.length) {
            case 1:
              if (Array.isArray(arguments[0]) || "string" == typeof arguments[0]) {
                var t = this._query[e].BASE || [];
                return t = t.concat(arguments[0]), this._query[e].BASE = t, this;
              }

              console.error("Kindly provide valid parameters");
              break;

            case 2:
              if ("string" == typeof arguments[0] && (Array.isArray(arguments[1]) || "string" == typeof arguments[1])) {
                var r = this._query[e][arguments[0]] || [];
                return r = r.concat(arguments[1]), this._query[e][arguments[0]] = r, this;
              }

              console.error("Kindly provide valid parameters");
              break;

            default:
              console.error("Kindly provide valid parameters");
          }
        };
      }, t._type = function (e) {
        var t = void 0 === e ? "undefined" : i(e);
        return "object" === t && Array.isArray(e) && (t = "array"), t;
      }, t.mergeDeep = function (e, t) {
        var r = this;
        return function e(t, n) {
          for (var i in n) {
            "object" == r._type(n[i]) && r._type(t[i]) == r._type(n[i]) ? e(t[i], n[i]) : "array" == r._type(n[i]) && r._type(t[i]) == r._type(n[i]) ? t[i] = t[i].concat(n[i]) : t[i] = n[i];
          }
        }(e, t), e;
      }, t.merge = a, t.isBrowser = function () {
        return "undefined" != typeof window && "object" === ("undefined" == typeof process ? "undefined" : i(process)) && "browser" === process.title;
      }, t.parseQueryFromParams = c, t.getHash = l, t.generateHash = f, t.resultWrapper = h, t.spreadResult = y, t.sendRequest = function (e, t) {
        var r = e.environment_uid;
        r ? e._query.environment_uid = r : (e._query || (e._query = {}), e._query.environment = e.environment);
        var n = e,
            s = void 0 !== n.queryCachePolicy ? n.queryCachePolicy : n.cachePolicy,
            u = void 0 !== n.tojson && n.tojson,
            f = !!(n.entry_uid || n.singleEntry || n.asset_uid),
            p = l(c(n, f, u));

        if (e && e.requestParams && e.requestParams.body && e.requestParams.body.query) {
          var v = JSON.parse(JSON.stringify(e.requestParams.body.query));
          "object" !== (void 0 === v ? "undefined" : i(v)) && (v = JSON.parse(v)), delete e.requestParams.body.query, e.requestParams.body = a(e.requestParams.body, v), e.live_preview && !0 === e.live_preview.enable && e.live_preview.live_preview && "init" !== e.live_preview.live_preview && (e.live_preview.content_type_uid === e.content_type_uid ? (e.requestParams.body = a(e.requestParams.body, {
            live_preview: e.live_preview.live_preview || "init"
          }), s = 2, e.requestParams.body.environment && delete e.requestParams.body.environment, e.requestParams.headers.access_token && delete e.requestParams.headers.access_token, e.requestParams.headers.authorization = e.live_preview.management_token) : e.live_preview.live_preview && (s = 1));
        }

        var _ = function _() {
          return function (e, t) {
            return new Promise(function (r, n) {
              try {
                e && n(e), u || (t = h(t)), r(y(t));
              } catch (e) {
                n(e);
              }
            });
          };
        },
            g = function g(r, i, a) {
          r && (0, o["default"])(e, t).then(function (t) {
            try {
              n.entry_uid = n.asset_uid = n.tojson = n.queryCachePolicy = void 0;
              var r = {},
                  o = {};
              if (e.singleEntry) {
                if (e.singleEntry = !1, t.schema && (r.schema = t.schema), t.content_type && (r.content_type = t.content_type, delete r.schema), t.entries && t.entries.length) r.entry = t.entries[0];else {
                  if (!t.assets || !t.assets.length) return 2 === s && null !== n.provider ? void n.provider.get(p, _()) : a({
                    error_code: 141,
                    error_message: "The requested entry doesn't exist."
                  });
                  r.assets = t.assets[0];
                }
              } else t.items ? o = {
                items: t.items,
                pagination_token: t.pagination_token,
                sync_token: t.sync_token,
                total_count: t.total_count
              } : r = t;
              return -1 !== s && null !== n.provider ? (n.provider.set(p, r, function (e) {
                try {
                  return e && a(e), u || (r = h(r)), i(y(r));
                } catch (e) {
                  return a(e);
                }
              }), i(y(r))) : Object.keys(o).length ? i(o) : (u || (r = h(r)), i(y(r)));
            } catch (e) {
              return a({
                message: e.message
              });
            }
          }.bind(n))["catch"](function (e) {
            if (2 !== s || null === n.provider) return a(e);
            n.provider.get(p, _());
          });
        };

        switch (s) {
          case 1:
            return new Promise( /*#__PURE__*/function () {
              var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(r, i) {
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                  while (1) {
                    switch (_context3.prev = _context3.next) {
                      case 0:
                        if (!(null !== n.provider)) {
                          _context3.next = 5;
                          break;
                        }

                        _context3.next = 3;
                        return n.provider.get(p, /*#__PURE__*/function () {
                          var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(n, o) {
                            var s, a, c;
                            return regeneratorRuntime.wrap(function _callee2$(_context2) {
                              while (1) {
                                switch (_context2.prev = _context2.next) {
                                  case 0:
                                    _context2.prev = 0;

                                    if (!(n || !o)) {
                                      _context2.next = 5;
                                      break;
                                    }

                                    g(!0, r, i);
                                    _context2.next = 26;
                                    break;

                                  case 5:
                                    _context2.prev = 5;

                                    if (!(e._query && Array.isArray(e._query.include) && e._query.include.length > 0)) {
                                      _context2.next = 15;
                                      break;
                                    }

                                    s = (a = e._query.include, c = {}, a.forEach(function (e) {
                                      !function (e) {
                                        var t = (e = e.replace(/[\[]/gm, ".").replace(/[\]]/gm, "")).split("."),
                                            r = t.pop();
                                        t.reduce(function (e, t) {
                                          return e[t] = e[t] || {};
                                        }, c)[r] = {};
                                      }(e);
                                    }), c);

                                    if (!f) {
                                      _context2.next = 13;
                                      break;
                                    }

                                    _context2.next = 11;
                                    return d(s, o.entry, e, t);

                                  case 11:
                                    _context2.next = 15;
                                    break;

                                  case 13:
                                    _context2.next = 15;
                                    return Promise.all(o.entries.map( /*#__PURE__*/function () {
                                      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(r) {
                                        return regeneratorRuntime.wrap(function _callee$(_context) {
                                          while (1) {
                                            switch (_context.prev = _context.next) {
                                              case 0:
                                                _context.next = 2;
                                                return d(s, r, e, t);

                                              case 2:
                                              case "end":
                                                return _context.stop();
                                            }
                                          }
                                        }, _callee);
                                      }));

                                      return function (_x5) {
                                        return _ref3.apply(this, arguments);
                                      };
                                    }()));

                                  case 15:
                                    _context2.next = 19;
                                    break;

                                  case 17:
                                    _context2.prev = 17;
                                    _context2.t0 = _context2["catch"](5);

                                  case 19:
                                    _context2.prev = 19;
                                    return _context2.abrupt("return", (u || (o = h(o)), r(y(o))));

                                  case 23:
                                    _context2.prev = 23;
                                    _context2.t1 = _context2["catch"](19);
                                    return _context2.abrupt("return", i(_context2.t1));

                                  case 26:
                                    _context2.next = 31;
                                    break;

                                  case 28:
                                    _context2.prev = 28;
                                    _context2.t2 = _context2["catch"](0);
                                    return _context2.abrupt("return", i(_context2.t2));

                                  case 31:
                                  case "end":
                                    return _context2.stop();
                                }
                              }
                            }, _callee2, null, [[0, 28], [5, 17], [19, 23]]);
                          }));

                          return function (_x3, _x4) {
                            return _ref2.apply(this, arguments);
                          };
                        }());

                      case 3:
                        _context3.next = 6;
                        break;

                      case 5:
                        g(!0, r, i);

                      case 6:
                      case "end":
                        return _context3.stop();
                    }
                  }
                }, _callee3);
              }));

              return function (_x, _x2) {
                return _ref.apply(this, arguments);
              };
            }());

          case 2:
          case 0:
          case void 0:
          case -1:
            return new Promise(function (e, t) {
              g(!0, e, t);
            });
        }

        if (3 === s) return new Promise(function (e, t) {
          null !== n.provider && n.provider.get(p, function (r, n) {
            try {
              r || !n ? t(r) : (u || (n = h(n)), e(y(n)));
            } catch (e) {
              t(e);
            }
          });
        }).then(function () {
          return new Promise(function (e, t) {
            g(!0, e, t);
          });
        })["catch"](function (e) {
          return new Promise(function (e, t) {
            g(!0, e, t);
          });
        });
      };
      var o = u(r(777)),
          s = u(r(324));

      function u(e) {
        return e && e.__esModule ? e : {
          "default": e
        };
      }

      function a(e, t) {
        if (e && t) for (var r in t) {
          e[r] = t[r];
        }
        return e;
      }

      function c(e, t, r) {
        if (e && e.requestParams) {
          var n = a({}, e.requestParams.body && e.requestParams.body.query || {});
          return n.environment_uid && (delete n.environment_uid, n.environment = e.environment), n.environment = e.environment, {
            content_type_uid: e.content_type_uid,
            locale: n.locale || "en-us",
            query: n,
            entry_uid: e.entry_uid,
            asset_uid: e.asset_uid,
            single: t || "false",
            toJSON: r || "false",
            api_key: e.requestParams.headers ? e.requestParams.headers.api_key : ""
          };
        }
      }

      function l(e) {
        try {
          var t = f(JSON.stringify(e)),
              r = [];
          return r.push(e.content_type_uid), r.push(e.locale), e.entry_uid && r.push(e.entry_uid), e.asset_uid && r.push(e.asset_uid), r.push(t), r.join(".");
        } catch (e) {}
      }

      function f(e) {
        var t,
            r = 0,
            n = void 0;
        if (0 === e.length) return r;

        for (n = 0, t = e.length; n < t; n++) {
          r = (r << 5) - r + e.charCodeAt(n), r |= 0;
        }

        return r < -1 ? -1 * r : r;
      }

      function h(e) {
        if (e && void 0 !== e.entries) {
          if (e.entries && e.entries.length) for (var t = 0, r = e.entries.length; t < r; t++) {
            e.entries[t] = (0, s["default"])(e.entries[t]);
          } else e.entries = [];
        } else if (e && e.assets && void 0 !== e.assets) {
          if (e.assets && e.assets.length) for (var n = 0, i = e.assets.length; n < i; n++) {
            e.assets[n] = (0, s["default"])(e.assets[n]);
          } else e.assets = [];
        } else e && void 0 !== e.entry ? e.entry = (0, s["default"])(e.entry) : e && void 0 !== e.asset ? e.asset = (0, s["default"])(e.asset) : e && void 0 !== e.items && (e.items = (0, s["default"])(e.items).toJSON());
        return e;
      }

      function y(e) {
        var t = [];
        return e && Object.keys(e).length && (void 0 !== e.entries && (t.push(e.entries), e.content_type && (t.schema = e.content_type)), void 0 !== e.assets && t.push(e.assets), void 0 === e.content_type && void 0 === e.schema || t.push(e.content_type || e.schema), void 0 !== e.count && t.push(e.count), void 0 !== e.entry && (t = e.entry, e.schema && (t.schema = e.schema), e.content_type && (t.content_type = e.content_type)), void 0 !== e.asset && (t = e.asset), void 0 !== e.items && t.push(e)), t;
      }

      function d(_x6, _x7, _x8, _x9, _x10) {
        return _d.apply(this, arguments);
      }

      function _d() {
        _d = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(e, t, r, i, s) {
          var u, a, c, l;
          return regeneratorRuntime.wrap(function _callee6$(_context6) {
            while (1) {
              switch (_context6.prev = _context6.next) {
                case 0:
                  u = r.live_preview, a = r.requestParams, c = u.content_type_uid, l = u.management_token;
                  _context6.next = 3;
                  return function () {
                    var _e = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(t, s, f) {
                      var h, y, d, p, v, _;

                      return regeneratorRuntime.wrap(function _callee5$(_context5) {
                        while (1) {
                          switch (_context5.prev = _context5.next) {
                            case 0:
                              if (!(void 0 !== s)) {
                                _context5.next = 26;
                                break;
                              }

                              if (!Array.isArray(s)) {
                                _context5.next = 6;
                                break;
                              }

                              _context5.next = 4;
                              return Promise.all(s.map(function (r, n) {
                                return e(t, r, function (e) {
                                  s[n] = e;
                                });
                              }));

                            case 4:
                              _context5.next = 26;
                              break;

                            case 6:
                              if (!(s._content_type_uid === c)) {
                                _context5.next = 24;
                                break;
                              }

                              _context5.prev = 7;
                              r.requestParams = JSON.parse(JSON.stringify(a));

                              h = function (e) {
                                var t = [];
                                return function e(r, i) {
                                  0 === Object.keys(r).length ? t.push(i.substring(1)) : Object.entries(r).forEach(function (t) {
                                    var r = n(t, 2),
                                        o = r[0];
                                    e(r[1], [i, o].join("."));
                                  });
                                }(e, ""), t.filter(function (e) {
                                  return "" !== e;
                                });
                              }(t);

                              r.requestParams.body.include = h, r.requestParams.body.live_preview = u.live_preview, r.requestParams.body.content_type_uid = c;
                              y = u.host.match(/^((http[s]?):(\/\/)?)?(.+)$/), d = (y[1] || "https://") + y[4], p = s.uid, v = d + "/v3/content_types/" + s._content_type_uid + "/entries/" + p;
                              r.requestParams.url = v, r.requestParams.method = "GET", delete r.requestParams.headers.access_token, r.requestParams.headers.authorization = l;
                              _context5.next = 15;
                              return (0, o["default"])(r, i);

                            case 15:
                              _ = _context5.sent;
                              _.entry._content_type_uid = c, _.entry.uid = p, f(_.entry);
                              _context5.next = 22;
                              break;

                            case 19:
                              _context5.prev = 19;
                              _context5.t0 = _context5["catch"](7);
                              console.log("errror", _context5.t0);

                            case 22:
                              _context5.next = 26;
                              break;

                            case 24:
                              _context5.next = 26;
                              return Promise.all(Object.entries(t).map( /*#__PURE__*/function () {
                                var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(t) {
                                  var r, i, o;
                                  return regeneratorRuntime.wrap(function _callee4$(_context4) {
                                    while (1) {
                                      switch (_context4.prev = _context4.next) {
                                        case 0:
                                          r = n(t, 2), i = r[0], o = r[1];
                                          _context4.next = 3;
                                          return e(o, s[i], function () {});

                                        case 3:
                                        case "end":
                                          return _context4.stop();
                                      }
                                    }
                                  }, _callee4);
                                }));

                                return function (_x14) {
                                  return _ref4.apply(this, arguments);
                                };
                              }()));

                            case 26:
                            case "end":
                              return _context5.stop();
                          }
                        }
                      }, _callee5, null, [[7, 19]]);
                    }));

                    function e(_x11, _x12, _x13) {
                      return _e.apply(this, arguments);
                    }

                    return e;
                  }()(e, t, function () {});

                case 3:
                case "end":
                  return _context6.stop();
              }
            }
          }, _callee6);
        }));
        return _d.apply(this, arguments);
      }

      Promise.prototype.spread || (Promise.prototype.spread = function (e, t) {
        return t = t || function (e) {}, this.then(function (t) {
          return e.apply(e, t);
        })["catch"](function (e) {
          t(e);
        });
      });
    },
    173: function _(e, t, r) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      });

      var n = function () {
        function e(e, t) {
          for (var r = 0; r < t.length; r++) {
            var n = t[r];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
          }
        }

        return function (t, r, n) {
          return r && e(t.prototype, r), n && e(t, n), t;
        };
      }(),
          i = function (e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e) for (var r in e) {
          Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        }
        return t["default"] = e, t;
      }(r(540)),
          o = function () {
        function e() {
          return function (e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
          }(this, e), this._query = {}, this.only = i.transform("only"), this;
        }

        return n(e, [{
          key: "toJSON",
          value: function value() {
            return this.tojson = !0, this;
          }
        }, {
          key: "addParam",
          value: function value(e, t) {
            if (e && "string" == typeof e && t && "string" == typeof t) return this._query[e] = t, this;
            this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide a valid parameters.");
          }
        }, {
          key: "includeFallback",
          value: function value() {
            return this._query.include_fallback = !0, this;
          }
        }, {
          key: "includeMetadata",
          value: function value() {
            return this._query.include_metadata = !0, this;
          }
        }, {
          key: "fetch",
          value: function value(e) {
            if (this.asset_uid) {
              this.requestParams = {
                method: "POST",
                headers: this.headers,
                url: this.config.protocol + "://" + this.config.host + ":" + this.config.port + "/" + this.config.version + this.config.urls.assets + this.asset_uid,
                body: {
                  _method: "GET",
                  query: this._query
                }
              };
              var t = i.mergeDeep(this.fetchOptions, e);
              return i.sendRequest(i.mergeDeep({}, this), t);
            }

            e.debug && e.logHandler("error", "Kindly provide an asset uid. e.g. .Assets('asset_uid')");
          }
        }]), e;
      }();

      t["default"] = o;
    },
    304: function _(e, t, r) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      });

      var n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
        return _typeof(e);
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof(e);
      },
          i = function () {
        function e(e, t) {
          for (var r = 0; r < t.length; r++) {
            var n = t[r];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
          }
        }

        return function (t, r, n) {
          return r && e(t.prototype, r), n && e(t, n), t;
        };
      }(),
          o = function (e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e) for (var r in e) {
          Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        }
        return t["default"] = e, t;
      }(r(540)),
          s = function () {
        function e() {
          return function (e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
          }(this, e), this._query = {}, this.only = o.transform("only"), this.except = o.transform("except"), this;
        }

        return i(e, [{
          key: "setCacheProvider",
          value: function value(e) {
            return e && "object" === (void 0 === e ? "undefined" : n(e)) && (this.provider = e), this;
          }
        }, {
          key: "setCachePolicy",
          value: function value(e) {
            return "number" == typeof e && e >= -1 && e < 4 ? this._query ? this.queryCachePolicy = e : this.cachePolicy = e : this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide the valid policy"), this;
          }
        }, {
          key: "includeReference",
          value: function value() {
            for (var e = arguments.length, t = Array(e), r = 0; r < e; r++) {
              t[r] = arguments[r];
            }

            if (Array.isArray(t) || "string" == typeof t) {
              if (arguments.length) for (var n = 0; n < arguments.length; n++) {
                this._query.include = this._query.include || [], this._query.include = this._query.include.concat(arguments[n]);
              }
              return this;
            }

            this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Argument should be a String or an Array.");
          }
        }, {
          key: "language",
          value: function value(e) {
            if (e && "string" == typeof e) return this._query.locale = e, this;
            this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Argument should be a String.");
          }
        }, {
          key: "addQuery",
          value: function value(e, t) {
            if (e && t && "string" == typeof e) return this._query[e] = t, this;
            this.fetchOptions.debug && this.fetchOptions.logHandler("error", "First argument should be a String.");
          }
        }, {
          key: "includeEmbeddedItems",
          value: function value() {
            return this._query.include_embedded_items = ["BASE"], this;
          }
        }, {
          key: "includeSchema",
          value: function value() {
            return this._query.include_schema = !0, this;
          }
        }, {
          key: "includeReferenceContentTypeUID",
          value: function value() {
            return this._query.include_reference_content_type_uid = !0, this;
          }
        }, {
          key: "includeFallback",
          value: function value() {
            return this._query.include_fallback = !0, this;
          }
        }, {
          key: "includeBranch",
          value: function value() {
            return this._query.include_branch = !0, this;
          }
        }, {
          key: "includeMetadata",
          value: function value() {
            return this._query.include_metadata = !0, this;
          }
        }, {
          key: "includeContentType",
          value: function value() {
            return this._query.include_content_type = !0, this;
          }
        }, {
          key: "includeOwner",
          value: function value() {
            return this._query.include_owner = !0, this;
          }
        }, {
          key: "toJSON",
          value: function value() {
            return this.tojson = !0, this;
          }
        }, {
          key: "addParam",
          value: function value(e, t) {
            if (e && t && "string" == typeof e && "string" == typeof t) return this._query[e] = t, this;
            this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide valid parameters.");
          }
        }, {
          key: "fetch",
          value: function value(e) {
            var t = this.config.host + ":" + this.config.port;

            if (this.live_preview && !0 === this.live_preview.enable && this.live_preview.content_type_uid === this.content_type_uid && (t = this.live_preview.host), this.entry_uid) {
              this.requestParams = {
                method: "POST",
                headers: this.headers,
                url: this.config.protocol + "://" + t + "/" + this.config.version + this.config.urls.content_types + this.content_type_uid + this.config.urls.entries + this.entry_uid,
                body: {
                  _method: "GET",
                  query: this._query
                }
              };
              var r = o.mergeDeep(this.fetchOptions, e);
              return o.sendRequest(o.mergeDeep({}, this), r);
            }

            this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide an entry uid. e.g. .Entry('asset_uid')");
          }
        }]), e;
      }();

      t["default"] = s;
    },
    566: function _(e, t, r) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      });

      var n,
          i = function () {
        function e(e, t) {
          for (var r = 0; r < t.length; r++) {
            var n = t[r];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
          }
        }

        return function (t, r, n) {
          return r && e(t.prototype, r), n && e(t, n), t;
        };
      }(),
          o = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
        return _typeof(e);
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof(e);
      },
          s = function (e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e) for (var r in e) {
          Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        }
        return t["default"] = e, t;
      }(r(540)),
          u = (n = r(304)) && n.__esModule ? n : {
        "default": n
      },
          a = function a(e) {
        return function (t, r) {
          if (t && r && "string" == typeof t && void 0 !== r) return this._query.query[t] = this._query.query.file_size || {}, this._query.query[t][e] = r, this;
          this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide valid parameters.");
        };
      },
          c = function c(e) {
        var t = e ? "$in" : "$nin";
        return function (e, r) {
          if (e && r && "string" == typeof e && Array.isArray(r)) return this._query.query[e] = this._query.query[e] || {}, this._query.query[e][t] = this._query.query[e][t] || [], this._query.query[e][t] = this._query.query[e][t].concat(r), this;
          this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide valid parameters.");
        };
      },
          l = function l(e) {
        return function (t) {
          if (t && "string" == typeof t) return this._query.query[t] = this._query.query[t] || {}, this._query.query[t].$exists = e, this;
          this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide valid parameters.");
        };
      },
          f = function f(e) {
        return function () {
          for (var t = [], r = 0, n = arguments.length; r < n; r++) {
            arguments[r] instanceof d && arguments[r]._query.query ? t.push(arguments[r]._query.query) : "object" === o(arguments[r]) && t.push(arguments[r]);
          }

          return this._query.query[e] ? this._query.query[e] = this._query.query[e].concat(t) : this._query.query[e] = t, this;
        };
      },
          h = function h(e) {
        return function (t) {
          if (t && "string" == typeof t) return this._query[e] = t, this;
          this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Argument should be a string.");
        };
      },
          y = function y(e) {
        return function (t) {
          if ("number" == typeof t) return this._query[e] = t, this;
          this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Argument should be a number.");
        };
      },
          d = function (e) {
        function t() {
          !function (e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
          }(this, t);

          var e = function (e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != _typeof(t) && "function" != typeof t ? e : t;
          }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));

          return e._query = e._query || {}, e._query.query = e._query.query || {}, e.lessThan = a("$lt"), e.lessThanOrEqualTo = a("$lte"), e.greaterThan = a("$gt"), e.greaterThanOrEqualTo = a("$gte"), e.notEqualTo = a("$ne"), e.containedIn = c(!0), e.notContainedIn = c(!1), e.exists = l(!0), e.notExists = l(!1), e.ascending = h("asc"), e.descending = h("desc"), e.beforeUid = h("before_uid"), e.afterUid = h("after_uid"), e.skip = y("skip"), e.limit = y("limit"), e.or = f("$or"), e.and = f("$and"), e;
        }

        return function (e, t) {
          if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + _typeof(t));
          e.prototype = Object.create(t && t.prototype, {
            constructor: {
              value: e,
              enumerable: !1,
              writable: !0,
              configurable: !0
            }
          }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);
        }(t, e), i(t, [{
          key: "equalTo",
          value: function value(e, t) {
            if (e && "string" == typeof e) return this._query.query[e] = t, this;
            this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide valid parameters.");
          }
        }, {
          key: "where",
          value: function value(e, t) {
            if (e && "string" == typeof e) return this._query.query[e] = t, this;
            this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide valid parameters.");
          }
        }, {
          key: "count",
          value: function value() {
            var e = this.config.protocol + "://" + this.config.host + ":" + this.config.port + "/" + this.config.version,
                t = this.type && "asset" === this.type ? e + this.config.urls.assets : e + this.config.urls.content_types + this.content_type_uid + this.config.urls.entries;
            return this._query.count = !0, this.requestParams = {
              method: "POST",
              headers: this.headers,
              url: t,
              body: {
                _method: "GET",
                query: this._query
              }
            }, this;
          }
        }, {
          key: "query",
          value: function value(e) {
            if ("object" === (void 0 === e ? "undefined" : o(e))) return this._query.query = s.mergeDeep(this._query.query, e), this;
            this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide valid parameters");
          }
        }, {
          key: "referenceIn",
          value: function value(e, r) {
            var n = {};
            return r instanceof t && r._query.query ? n.$in_query = r._query.query : "object" === (void 0 === r ? "undefined" : o(r)) && (n.$in_query = r), this._query.query[e] ? this._query.query[e] = this._query.query[e].concat(n) : this._query.query[e] = n, this;
          }
        }, {
          key: "referenceNotIn",
          value: function value(e, r) {
            var n = {};
            return r instanceof t && r._query.query ? n.$nin_query = r._query.query : "object" === (void 0 === r ? "undefined" : o(r)) && (n.$nin_query = r), this._query.query[e] ? this._query.query[e] = this._query.query[e].concat(n) : this._query.query[e] = n, this;
          }
        }, {
          key: "tags",
          value: function value(e) {
            if (Array.isArray(e)) return this._query.tags = e, this;
            this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide valid parameters");
          }
        }, {
          key: "includeReferenceContentTypeUID",
          value: function value() {
            return this._query.include_reference_content_type_uid = !0, this;
          }
        }, {
          key: "includeCount",
          value: function value() {
            return this._query.include_count = !0, this;
          }
        }, {
          key: "addParam",
          value: function value(e, t) {
            if (e && t && "string" == typeof e && "string" == typeof t) return this._query[e] = t, this;
            this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide valid parameters.");
          }
        }, {
          key: "getQuery",
          value: function value() {
            return this._query.query || {};
          }
        }, {
          key: "regex",
          value: function value(e, t, r) {
            if (e && t && "string" == typeof e && "string" == typeof t) return this._query.query[e] = {
              $regex: t
            }, r && (this._query.query[e].$options = r), this;
            this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide valid parameters.");
          }
        }, {
          key: "search",
          value: function value(e) {
            if (e && "string" == typeof e) return this._query.typeahead = e, this;
            this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide valid parameters.");
          }
        }, {
          key: "find",
          value: function value(e) {
            var t = this.config.host + ":" + this.config.port;
            this.type && "asset" !== this.type && this.live_preview && !0 === this.live_preview.enable && this.live_preview.content_type_uid === this.content_type_uid && (t = this.live_preview.host);
            var r = this.config.protocol + "://" + t + "/" + this.config.version,
                n = this.type && "asset" === this.type ? r + this.config.urls.assets : r + this.config.urls.content_types + this.content_type_uid + this.config.urls.entries;
            this.requestParams = {
              method: "POST",
              headers: this.headers,
              url: n,
              body: {
                _method: "GET",
                query: this._query
              }
            };
            var i = s.mergeDeep(this.fetchOptions, e);
            return s.sendRequest(s.mergeDeep({}, this), i);
          }
        }, {
          key: "findOne",
          value: function value() {
            var e = this.config.protocol + "://" + this.config.host + ":" + this.config.port + "/" + this.config.version;
            this.type && "asset" !== this.type && this.live_preview && !0 === this.live_preview.enable && this.live_preview.content_type_uid === this.content_type_uid && (e = this.config.protocol + "://" + this.live_preview.host + "/" + this.config.version);
            var t = this.type && "asset" === this.type ? e + this.config.urls.assets : e + this.config.urls.content_types + this.content_type_uid + this.config.urls.entries;
            this.singleEntry = !0, this._query.limit = 1, this.requestParams = {
              method: "POST",
              headers: this.headers,
              url: t,
              body: {
                _method: "GET",
                query: this._query
              }
            };
            var r = s.mergeDeep({}, this.fetchOptions);
            return s.sendRequest(s.mergeDeep({}, this), r);
          }
        }]), t;
      }(u["default"]);

      t["default"] = d;
    },
    324: function _(e, t, r) {
      var n = function () {
        function e(e, t) {
          for (var r = 0; r < t.length; r++) {
            var n = t[r];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
          }
        }

        return function (t, r, n) {
          return r && e(t.prototype, r), n && e(t, n), t;
        };
      }(),
          i = function (e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e) for (var r in e) {
          Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        }
        return t["default"] = e, t;
      }(r(540)),
          o = function () {
        function e(t) {
          return function (e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
          }(this, e), t && (this.object = function () {
            return t;
          }), this;
        }

        return n(e, [{
          key: "toJSON",
          value: function value() {
            return this.object() ? i.mergeDeep(JSON.parse(JSON.stringify({})), this.object()) : null;
          }
        }, {
          key: "get",
          value: function value(e) {
            if (this.object() && e) return e.split(".").reduce(function (e, t) {
              return e[t];
            }, this.object());
          }
        }, {
          key: "getDownloadUrl",
          value: function value(e) {
            if (this.object()) {
              var t = this.object().url ? this.object().url : null;
              return t ? t + "?disposition=" + (e && "string" == typeof e ? e : "attachment") : null;
            }
          }
        }]), e;
      }();

      e.exports = function (e) {
        return new o(e);
      };
    },
    533: function _(e, t, r) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      });

      var n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
        return _typeof(e);
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof(e);
      },
          i = function () {
        function e(e, t) {
          for (var r = 0; r < t.length; r++) {
            var n = t[r];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
          }
        }

        return function (t, r, n) {
          return r && e(t.prototype, r), n && e(t, n), t;
        };
      }(),
          o = h(r(971)),
          s = function (e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e) for (var r in e) {
          Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        }
        return t["default"] = e, t;
      }(r(540)),
          u = h(r(304)),
          a = h(r(173)),
          c = h(r(566)),
          l = h(r(777)),
          f = h(r(900));

      function h(e) {
        return e && e.__esModule ? e : {
          "default": e
        };
      }

      var y = [408, 429],
          d = function () {
        function e() {
          var t = this;
          !function (e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
          }(this, e), this.fetchOptions = {
            retryLimit: 5,
            retryCondition: function retryCondition(e) {
              return !!y.includes(e.status);
            },
            debug: !1,
            logHandler: function logHandler(e, t) {
              "error" === e && t ? console.error("[error] " + t) : "warning" === e && t ? console.warn("[warning] " + t) : "info" === e && t && console.info("[info] " + t);
            }
          }, this.config = s.mergeDeep({}, o["default"]), this.plugins = [];

          for (var r = arguments.length, i = Array(r), u = 0; u < r; u++) {
            i[u] = arguments[u];
          }

          switch (i[0].region && void 0 !== i[0].region && "us" !== i[0].region && (this.config.host = i[0].region + "-cdn.contentstack.com"), i[0].fetchOptions && void 0 !== i[0].fetchOptions && (this.fetchOptions = s.mergeDeep(this.fetchOptions, i[0].fetchOptions)), i[0].plugins && void 0 !== i[0].plugins && i[0].plugins.forEach(function (e) {
            t.plugins.push(e);
          }), this.cachePolicy = f["default"].policies.IGNORE_CACHE, this.provider = f["default"].providers("localstorage"), i.length) {
            case 1:
              if ("object" === n(i[0]) && "string" == typeof i[0].api_key && "string" == typeof i[0].delivery_token && "string" == typeof i[0].environment) return this.headers = {
                api_key: i[0].api_key,
                access_token: i[0].delivery_token
              }, "object" == n(i[0].live_preview) && (this.live_preview = s.mergeDeep(this.config.live_preview, i[0].live_preview)), "string" == typeof i[0].branch && void 0 !== i[0].branch && (this.headers.branch = i[0].branch), this.environment = i[0].environment, this;
              this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide valid object parameters. The specified API Key, Delivery Token, or Environment Name is invalid.");

            case 3:
              if (this.fetchOptions.debug && this.fetchOptions.logHandler("warning", "WARNING! Obsolete function called. Function 'Contentstack.Stack(api_key, delivery_token, environment)' has been deprecated, please use 'Contentstack.Stack({api_key, delivery_token, environment, region, branch, fetchOptions})' function instead!"), "string" == typeof i[0] && "string" == typeof i[1] && "string" == typeof i[2]) return this.headers = {
                api_key: i[0],
                access_token: i[1]
              }, this.environment = i[2], this;
              this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide valid string parameters.");

            case 4:
              return this.fetchOptions.debug && this.fetchOptions.logHandler("warning", "WARNING! Obsolete function called. Function 'Contentstack.Stack(api_key, delivery_token, environment)' has been deprecated, please use 'Contentstack.Stack({api_key, delivery_token, environment, region, branch, fetchOptions})' function instead!"), "string" == typeof i[0] && "string" == typeof i[1] && "string" == typeof i[2] ? (this.headers = {
                api_key: i[0],
                access_token: i[1]
              }, this.environment = i[2]) : this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide valid string parameters."), i[3] && ("string" == typeof i[3] && void 0 !== i[3] && "us" !== i[3] ? this.config.host = i[3] + "-cdn.contentstack.com" : "object" === n(i[3]) && (this.fetchOptions = s.mergeDeep(this.fetchOptions, i[3]))), this;

            case 5:
              return this.fetchOptions.debug && this.fetchOptions.logHandler("warning", "WARNING! Obsolete function called. Function 'Contentstack.Stack(api_key, delivery_token, environment)' has been deprecated, please use 'Contentstack.Stack({api_key, delivery_token, environment, region, branch, fetchOptions})' function instead!"), "string" == typeof i[0] && "string" == typeof i[1] && "string" == typeof i[2] ? (this.headers = {
                api_key: i[0],
                access_token: i[1]
              }, this.environment = i[2]) : this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide valid string parameters."), i[3] && ("string" == typeof i[3] && void 0 !== i[3] && "us" !== i[3] ? this.config.host = i[3] + "-cdn.contentstack.com" : "object" === n(i[3]) && (this.fetchOptions = s.mergeDeep(this.fetchOptions, i[3]))), i[4] && "object" === n(i[4]) && (this.fetchOptions = s.mergeDeep(this.fetchOptions, i[4])), this;

            default:
              this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide valid parameters to initialize the Contentstack javascript-SDK Stack.");
          }
        }

        return i(e, [{
          key: "setPort",
          value: function value(e) {
            return "number" == typeof e && (this.config.port = e), this;
          }
        }, {
          key: "setProtocol",
          value: function value(e) {
            return "string" == typeof e && ~["https", "http"].indexOf(e) && (this.config.protocol = e), this;
          }
        }, {
          key: "setHost",
          value: function value(e) {
            return "string" == typeof e && e && (this.config.host = e), this;
          }
        }, {
          key: "setCachePolicy",
          value: function value(e) {
            return "number" == typeof e && e >= -1 && e < 4 ? this._query ? this.queryCachePolicy = e : this.cachePolicy = e : this.fetchOptions.debug && this.fetchOptions.logHandler("error", "Kindly provide the valid policy"), this;
          }
        }, {
          key: "livePreviewQuery",
          value: function value(e) {
            this.live_preview && (this.live_preview.live_preview = e.live_preview || "init", this.live_preview.content_type_uid = e.content_type_uid, this.live_preview.entry_uid = e.entry_uid);
          }
        }, {
          key: "setCacheProvider",
          value: function value(e) {
            return e && "object" === (void 0 === e ? "undefined" : n(e)) && (this.provider = e), this;
          }
        }, {
          key: "clearByQuery",
          value: function value() {
            if (this.provider && "function" == typeof this.provider.clearByQuery) return this.provider.clearByQuery.apply(this.provider, arguments);
          }
        }, {
          key: "clearByContentType",
          value: function value() {
            if (this.provider && "function" == typeof this.provider.clearByContentType) return this.provider.clearByContentType.apply(this.provider, arguments);
          }
        }, {
          key: "clearAll",
          value: function value() {
            if (this.provider && "function" == typeof this.provider.clearAll) return this.provider.clearAll.apply(this.provider, arguments);
          }
        }, {
          key: "getCacheProvider",
          value: function value() {
            return this.provider;
          }
        }, {
          key: "ContentType",
          value: function value(e) {
            return e && "string" == typeof e && (this.content_type_uid = e, this.type = "contentType"), this;
          }
        }, {
          key: "Entry",
          value: function value(e) {
            var t = new u["default"]();
            return e && "string" == typeof e && (t.entry_uid = e), s.merge(t, this);
          }
        }, {
          key: "fetch",
          value: function value(e) {
            this.requestParams = {
              method: "POST",
              headers: this.headers,
              plugins: this.plugins,
              url: this.config.protocol + "://" + this.config.host + ":" + this.config.port + "/" + this.config.version + this.config.urls.content_types + this.content_type_uid,
              body: {
                _method: "GET",
                environment: this.environment
              }
            };
            var t = s.mergeDeep(this.fetchOptions, e);
            return (0, l["default"])(this, t);
          }
        }, {
          key: "Assets",
          value: function value(e) {
            if (this.type = "asset", e && "string" == typeof e) {
              var t = new a["default"]();
              return t.asset_uid = e, s.merge(t, this);
            }

            return this;
          }
        }, {
          key: "Query",
          value: function value() {
            var e = new c["default"]();
            return s.merge(e, this);
          }
        }, {
          key: "getLastActivities",
          value: function value() {
            return this.requestParams = {
              method: "POST",
              headers: this.headers,
              url: this.config.protocol + "://" + this.config.host + ":" + this.config.port + "/" + this.config.version + this.config.urls.content_types,
              body: {
                _method: "GET",
                only_last_activity: !0,
                environment: this.environment
              }
            }, (0, l["default"])(this, this.fetchOptions);
          }
        }, {
          key: "getContentTypes",
          value: function value() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            if (this.requestParams = {
              method: "POST",
              headers: this.headers,
              url: this.config.protocol + "://" + this.config.host + ":" + this.config.port + "/" + this.config.version + this.config.urls.content_types,
              body: {
                _method: "GET",
                environment: this.environment
              }
            }, e) for (var t in e) {
              this.requestParams.body[t] = e[t];
            }
            return (0, l["default"])(this, this.fetchOptions);
          }
        }, {
          key: "sync",
          value: function value(e, t) {
            this._query = {}, this._query = s.mergeDeep(this._query, e), this.requestParams = {
              method: "POST",
              headers: this.headers,
              url: this.config.protocol + "://" + this.config.host + ":" + this.config.port + "/" + this.config.version + this.config.urls.sync,
              body: {
                _method: "GET",
                query: this._query
              }
            };
            var r = s.mergeDeep(this.fetchOptions, t);
            return s.sendRequest(s.mergeDeep({}, this), r);
          }
        }, {
          key: "imageTransform",
          value: function value(e, t) {
            if (e && "string" == typeof e && "object" === (void 0 === t ? "undefined" : n(t)) && void 0 === t.length) {
              var r = [];

              for (var i in t) {
                r.push(i + "=" + t[i]);
              }

              e += e.indexOf("?") <= -1 ? "?" + r.join("&") : "&" + r.join("&");
            }

            return e;
          }
        }]), e;
      }();

      t["default"] = d;
    },
    289: function _(e, t, r) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      });
      var n = o(r(858)),
          i = o(r(809));

      function o(e) {
        return e && e.__esModule ? e : {
          "default": e
        };
      }

      n["default"].polyfill(), t["default"] = i["default"];
    },
    895: function _(e, t, r) {
      Object.defineProperty(t, "__esModule", {
        value: !0
      });
      var n,
          i = (n = r(118)) && n.__esModule ? n : {
        "default": n
      };
      t["default"] = i["default"];
    },
    464: function _(e) {
      e.exports = __webpack_require__(748);
    },
    858: function _(e) {
      e.exports = __webpack_require__(749);
    },
    118: function _(e) {
      e.exports = __webpack_require__(750);
    },
    809: function _(e) {
      e.exports = __webpack_require__(27);
    }
  },
      t = {},
      r = function r(n) {
    var i = t[n];
    if (void 0 !== i) return i.exports;
    var o = t[n] = {
      exports: {}
    };
    return e[n](o, o.exports, r), o.exports;
  }(32);

  module.exports = r;
})();

/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(348);

__webpack_require__(350);

__webpack_require__(351);

__webpack_require__(352);

__webpack_require__(353);

__webpack_require__(354);

__webpack_require__(355);

__webpack_require__(356);

__webpack_require__(357);

__webpack_require__(358);

__webpack_require__(359);

__webpack_require__(360);

__webpack_require__(361);

__webpack_require__(362);

__webpack_require__(363);

__webpack_require__(364);

__webpack_require__(365);

__webpack_require__(366);

__webpack_require__(367);

__webpack_require__(368);

__webpack_require__(369);

__webpack_require__(370);

__webpack_require__(371);

__webpack_require__(372);

__webpack_require__(373);

__webpack_require__(374);

__webpack_require__(375);

__webpack_require__(376);

__webpack_require__(377);

__webpack_require__(378);

__webpack_require__(379);

__webpack_require__(381);

__webpack_require__(382);

__webpack_require__(383);

__webpack_require__(145);

__webpack_require__(384);

__webpack_require__(385);

__webpack_require__(386);

__webpack_require__(387);

__webpack_require__(388);

__webpack_require__(389);

__webpack_require__(390);

__webpack_require__(391);

__webpack_require__(392);

__webpack_require__(393);

__webpack_require__(394);

__webpack_require__(395);

__webpack_require__(396);

__webpack_require__(397);

__webpack_require__(398);

__webpack_require__(400);

__webpack_require__(401);

__webpack_require__(402);

__webpack_require__(403);

__webpack_require__(404);

__webpack_require__(405);

__webpack_require__(406);

__webpack_require__(407);

__webpack_require__(409);

__webpack_require__(410);

__webpack_require__(412);

__webpack_require__(413);

__webpack_require__(414);

__webpack_require__(415);

__webpack_require__(416);

__webpack_require__(417);

__webpack_require__(418);

__webpack_require__(419);

__webpack_require__(420);

__webpack_require__(421);

__webpack_require__(422);

__webpack_require__(423);

__webpack_require__(424);

__webpack_require__(425);

__webpack_require__(426);

__webpack_require__(427);

__webpack_require__(428);

__webpack_require__(430);

__webpack_require__(431);

__webpack_require__(432);

__webpack_require__(433);

__webpack_require__(434);

__webpack_require__(435);

__webpack_require__(436);

__webpack_require__(437);

__webpack_require__(438);

__webpack_require__(439);

__webpack_require__(440);

__webpack_require__(441);

__webpack_require__(442);

__webpack_require__(444);

__webpack_require__(445);

__webpack_require__(446);

__webpack_require__(447);

__webpack_require__(448);

__webpack_require__(449);

__webpack_require__(450);

__webpack_require__(451);

__webpack_require__(452);

__webpack_require__(453);

__webpack_require__(454);

__webpack_require__(455);

__webpack_require__(456);

__webpack_require__(457);

__webpack_require__(458);

__webpack_require__(459);

__webpack_require__(460);

__webpack_require__(461);

__webpack_require__(462);

__webpack_require__(463);

__webpack_require__(464);

__webpack_require__(465);

__webpack_require__(466);

__webpack_require__(467);

__webpack_require__(468);

__webpack_require__(469);

__webpack_require__(470);

__webpack_require__(471);

__webpack_require__(472);

__webpack_require__(473);

__webpack_require__(474);

__webpack_require__(475);

__webpack_require__(476);

__webpack_require__(477);

__webpack_require__(478);

__webpack_require__(480);

__webpack_require__(481);

__webpack_require__(482);

__webpack_require__(483);

__webpack_require__(488);

__webpack_require__(489);

__webpack_require__(490);

__webpack_require__(491);

__webpack_require__(492);

__webpack_require__(493);

__webpack_require__(494);

__webpack_require__(495);

__webpack_require__(496);

__webpack_require__(497);

__webpack_require__(498);

__webpack_require__(499);

__webpack_require__(500);

__webpack_require__(501);

__webpack_require__(502);

__webpack_require__(503);

__webpack_require__(504);

__webpack_require__(505);

__webpack_require__(506);

__webpack_require__(198);

__webpack_require__(507);

__webpack_require__(508);

__webpack_require__(509);

__webpack_require__(510);

__webpack_require__(511);

__webpack_require__(512);

__webpack_require__(513);

__webpack_require__(514);

__webpack_require__(515);

__webpack_require__(516);

__webpack_require__(264);

__webpack_require__(517);

__webpack_require__(518);

__webpack_require__(519);

__webpack_require__(520);

__webpack_require__(521);

__webpack_require__(522);

__webpack_require__(523);

__webpack_require__(524);

__webpack_require__(525);

__webpack_require__(526);

__webpack_require__(527);

__webpack_require__(528);

__webpack_require__(529);

__webpack_require__(530);

__webpack_require__(531);

__webpack_require__(532);

__webpack_require__(533);

__webpack_require__(534);

__webpack_require__(535);

__webpack_require__(536);

__webpack_require__(537);

__webpack_require__(538);

__webpack_require__(539);

__webpack_require__(540);

__webpack_require__(541);

__webpack_require__(542);

__webpack_require__(543);

__webpack_require__(544);

__webpack_require__(545);

__webpack_require__(547);

__webpack_require__(548);

__webpack_require__(549);

__webpack_require__(550);

__webpack_require__(551);

__webpack_require__(552);

__webpack_require__(553);

__webpack_require__(554);

__webpack_require__(555);

__webpack_require__(556);

__webpack_require__(557);

__webpack_require__(558);

__webpack_require__(559);

__webpack_require__(562);

__webpack_require__(563);

__webpack_require__(564);

__webpack_require__(565);

__webpack_require__(566);

__webpack_require__(567);

__webpack_require__(568);

__webpack_require__(569);

__webpack_require__(570);

__webpack_require__(571);

__webpack_require__(572);

__webpack_require__(573);

__webpack_require__(574);

__webpack_require__(575);

__webpack_require__(576);

__webpack_require__(577);

__webpack_require__(578);

__webpack_require__(579);

__webpack_require__(580);

__webpack_require__(581);

__webpack_require__(582);

__webpack_require__(583);

__webpack_require__(584);

__webpack_require__(585);

__webpack_require__(586);

__webpack_require__(587);

__webpack_require__(588);

__webpack_require__(590);

__webpack_require__(591);

__webpack_require__(592);

__webpack_require__(593);

__webpack_require__(594);

__webpack_require__(595);

__webpack_require__(596);

__webpack_require__(598);

__webpack_require__(274);

module.exports = __webpack_require__(234);

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var getBuiltIn = __webpack_require__(19);

var apply = __webpack_require__(40);

var call = __webpack_require__(13);

var uncurryThis = __webpack_require__(3);

var IS_PURE = __webpack_require__(25);

var DESCRIPTORS = __webpack_require__(6);

var NATIVE_SYMBOL = __webpack_require__(173);

var fails = __webpack_require__(4);

var hasOwn = __webpack_require__(14);

var isArray = __webpack_require__(77);

var isCallable = __webpack_require__(9);

var isObject = __webpack_require__(7);

var isPrototypeOf = __webpack_require__(38);

var isSymbol = __webpack_require__(87);

var anObject = __webpack_require__(5);

var toObject = __webpack_require__(16);

var toIndexedObject = __webpack_require__(34);

var toPropertyKey = __webpack_require__(70);

var $toString = __webpack_require__(10);

var createPropertyDescriptor = __webpack_require__(46);

var nativeObjectCreate = __webpack_require__(41);

var objectKeys = __webpack_require__(112);

var getOwnPropertyNamesModule = __webpack_require__(72);

var getOwnPropertyNamesExternal = __webpack_require__(180);

var getOwnPropertySymbolsModule = __webpack_require__(178);

var getOwnPropertyDescriptorModule = __webpack_require__(28);

var definePropertyModule = __webpack_require__(12);

var propertyIsEnumerableModule = __webpack_require__(135);

var arraySlice = __webpack_require__(78);

var redefine = __webpack_require__(18);

var shared = __webpack_require__(136);

var sharedKey = __webpack_require__(139);

var hiddenKeys = __webpack_require__(109);

var uid = __webpack_require__(88);

var wellKnownSymbol = __webpack_require__(8);

var wrappedWellKnownSymbolModule = __webpack_require__(233);

var defineWellKnownSymbol = __webpack_require__(35);

var setToStringTag = __webpack_require__(47);

var InternalStateModule = __webpack_require__(21);

var $forEach = __webpack_require__(26).forEach;

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);
var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];
var TypeError = global.TypeError;
var QObject = global.QObject;
var $stringify = getBuiltIn('JSON', 'stringify');
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var push = uncurryThis([].push);
var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');
var WellKnownSymbolsStore = shared('wks'); // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173

var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild; // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687

var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function get() {
      return nativeDefineProperty(this, 'a', {
        value: 7
      }).a;
    }
  })).a != 7;
}) ? function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty(O, P, Attributes);

  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function wrap(tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPropertyKey(P);
  anObject(Attributes);

  if (hasOwn(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!hasOwn(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (hasOwn(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, {
        enumerable: createPropertyDescriptor(0, false)
      });
    }

    return setSymbolDescriptor(O, key, Attributes);
  }

  return nativeDefineProperty(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPropertyKey(V);
  var enumerable = call(nativePropertyIsEnumerable, this, P);
  if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPropertyKey(P);
  if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);

  if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }

  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key)) push(result, key);
  });
  return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {
      push(result, AllSymbols[key]);
    }
  });
  return result;
}; // `Symbol` constructor
// https://tc39.es/ecma262/#sec-symbol-constructor


if (!NATIVE_SYMBOL) {
  $Symbol = function _Symbol() {
    if (isPrototypeOf(SymbolPrototype, this)) throw TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);
    var tag = uid(description);

    var setter = function setter(value) {
      if (this === ObjectPrototype) call(setter, ObjectPrototypeSymbols, value);
      if (hasOwn(this, HIDDEN) && hasOwn(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };

    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, {
      configurable: true,
      set: setter
    });
    return wrap(tag, description);
  };

  SymbolPrototype = $Symbol[PROTOTYPE];
  redefine(SymbolPrototype, 'toString', function toString() {
    return getInternalState(this).tag;
  });
  redefine($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });
  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty(SymbolPrototype, 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });

    if (!IS_PURE) {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, {
        unsafe: true
      });
    }
  }
}

$({
  global: true,
  wrap: true,
  forced: !NATIVE_SYMBOL,
  sham: !NATIVE_SYMBOL
}, {
  Symbol: $Symbol
});
$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol(name);
});
$({
  target: SYMBOL,
  stat: true,
  forced: !NATIVE_SYMBOL
}, {
  // `Symbol.for` method
  // https://tc39.es/ecma262/#sec-symbol.for
  'for': function _for(key) {
    var string = $toString(key);
    if (hasOwn(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = $Symbol(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  },
  // `Symbol.keyFor` method
  // https://tc39.es/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  },
  useSetter: function useSetter() {
    USE_SETTER = true;
  },
  useSimple: function useSimple() {
    USE_SETTER = false;
  }
});
$({
  target: 'Object',
  stat: true,
  forced: !NATIVE_SYMBOL,
  sham: !DESCRIPTORS
}, {
  // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.es/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});
$({
  target: 'Object',
  stat: true,
  forced: !NATIVE_SYMBOL
}, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.es/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
}); // Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443

$({
  target: 'Object',
  stat: true,
  forced: fails(function () {
    getOwnPropertySymbolsModule.f(1);
  })
}, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return getOwnPropertySymbolsModule.f(toObject(it));
  }
}); // `JSON.stringify` method behavior with symbols
// https://tc39.es/ecma262/#sec-json.stringify

if ($stringify) {
  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {
    var symbol = $Symbol(); // MS Edge converts symbol values to JSON as {}

    return $stringify([symbol]) != '[null]' // WebKit converts symbol values to JSON as null
    || $stringify({
      a: symbol
    }) != '{}' // V8 throws on boxed symbols
    || $stringify(Object(symbol)) != '{}';
  });
  $({
    target: 'JSON',
    stat: true,
    forced: FORCED_JSON_STRINGIFY
  }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    stringify: function stringify(it, replacer, space) {
      var args = arraySlice(arguments);
      var $replacer = replacer;
      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined

      if (!isArray(replacer)) replacer = function replacer(key, value) {
        if (isCallable($replacer)) value = call($replacer, this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return apply($stringify, null, args);
    }
  });
} // `Symbol.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive


if (!SymbolPrototype[TO_PRIMITIVE]) {
  var valueOf = SymbolPrototype.valueOf; // eslint-disable-next-line no-unused-vars -- required for .length

  redefine(SymbolPrototype, TO_PRIMITIVE, function (hint) {
    // TODO: improve hint logic
    return call(valueOf, this);
  });
} // `Symbol.prototype[@@toStringTag]` property
// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag


setToStringTag($Symbol, SYMBOL);
hiddenKeys[HIDDEN] = true;

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var isArray = __webpack_require__(77);

var isConstructor = __webpack_require__(90);

var isObject = __webpack_require__(7);

var wellKnownSymbol = __webpack_require__(8);

var SPECIES = wellKnownSymbol('species');
var Array = global.Array; // a part of `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate

module.exports = function (originalArray) {
  var C;

  if (isArray(originalArray)) {
    C = originalArray.constructor; // cross-realm fallback

    if (isConstructor(C) && (C === Array || isArray(C.prototype))) C = undefined;else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  }

  return C === undefined ? Array : C;
};

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// `Symbol.prototype.description` getter
// https://tc39.es/ecma262/#sec-symbol.prototype.description


var $ = __webpack_require__(0);

var DESCRIPTORS = __webpack_require__(6);

var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var hasOwn = __webpack_require__(14);

var isCallable = __webpack_require__(9);

var isPrototypeOf = __webpack_require__(38);

var toString = __webpack_require__(10);

var defineProperty = __webpack_require__(12).f;

var copyConstructorProperties = __webpack_require__(140);

var NativeSymbol = global.Symbol;
var SymbolPrototype = NativeSymbol && NativeSymbol.prototype;

if (DESCRIPTORS && isCallable(NativeSymbol) && (!('description' in SymbolPrototype) || // Safari 12 bug
NativeSymbol().description !== undefined)) {
  var EmptyStringDescriptionStore = {}; // wrap Symbol constructor for correct work with undefined description

  var SymbolWrapper = function _Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : toString(arguments[0]);
    var result = isPrototypeOf(SymbolPrototype, this) ? new NativeSymbol(description) // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
    : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };

  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  SymbolWrapper.prototype = SymbolPrototype;
  SymbolPrototype.constructor = SymbolWrapper;
  var NATIVE_SYMBOL = String(NativeSymbol('test')) == 'Symbol(test)';
  var symbolToString = uncurryThis(SymbolPrototype.toString);
  var symbolValueOf = uncurryThis(SymbolPrototype.valueOf);
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  var replace = uncurryThis(''.replace);
  var stringSlice = uncurryThis(''.slice);
  defineProperty(SymbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = symbolValueOf(this);
      var string = symbolToString(symbol);
      if (hasOwn(EmptyStringDescriptionStore, symbol)) return '';
      var desc = NATIVE_SYMBOL ? stringSlice(string, 7, -1) : replace(string, regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });
  $({
    global: true,
    forced: true
  }, {
    Symbol: SymbolWrapper
  });
}

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(35); // `Symbol.asyncIterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.asynciterator


defineWellKnownSymbol('asyncIterator');

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(35); // `Symbol.hasInstance` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.hasinstance


defineWellKnownSymbol('hasInstance');

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(35); // `Symbol.isConcatSpreadable` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.isconcatspreadable


defineWellKnownSymbol('isConcatSpreadable');

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(35); // `Symbol.iterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.iterator


defineWellKnownSymbol('iterator');

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(35); // `Symbol.match` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.match


defineWellKnownSymbol('match');

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(35); // `Symbol.matchAll` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.matchall


defineWellKnownSymbol('matchAll');

/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(35); // `Symbol.replace` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.replace


defineWellKnownSymbol('replace');

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(35); // `Symbol.search` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.search


defineWellKnownSymbol('search');

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(35); // `Symbol.species` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.species


defineWellKnownSymbol('species');

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(35); // `Symbol.split` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.split


defineWellKnownSymbol('split');

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(35); // `Symbol.toPrimitive` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.toprimitive


defineWellKnownSymbol('toPrimitive');

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(35); // `Symbol.toStringTag` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.tostringtag


defineWellKnownSymbol('toStringTag');

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(35); // `Symbol.unscopables` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.unscopables


defineWellKnownSymbol('unscopables');

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable no-unused-vars -- required for functions `.length` */
var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var apply = __webpack_require__(40);

var wrapErrorConstructorWithCause = __webpack_require__(235);

var WEB_ASSEMBLY = 'WebAssembly';
var WebAssembly = global[WEB_ASSEMBLY];
var FORCED = Error('e', {
  cause: 7
}).cause !== 7;

var exportGlobalErrorCauseWrapper = function exportGlobalErrorCauseWrapper(ERROR_NAME, wrapper) {
  var O = {};
  O[ERROR_NAME] = wrapErrorConstructorWithCause(ERROR_NAME, wrapper, FORCED);
  $({
    global: true,
    forced: FORCED
  }, O);
};

var exportWebAssemblyErrorCauseWrapper = function exportWebAssemblyErrorCauseWrapper(ERROR_NAME, wrapper) {
  if (WebAssembly && WebAssembly[ERROR_NAME]) {
    var O = {};
    O[ERROR_NAME] = wrapErrorConstructorWithCause(WEB_ASSEMBLY + '.' + ERROR_NAME, wrapper, FORCED);
    $({
      target: WEB_ASSEMBLY,
      stat: true,
      forced: FORCED
    }, O);
  }
}; // https://github.com/tc39/proposal-error-cause


exportGlobalErrorCauseWrapper('Error', function (init) {
  return function Error(message) {
    return apply(init, this, arguments);
  };
});
exportGlobalErrorCauseWrapper('EvalError', function (init) {
  return function EvalError(message) {
    return apply(init, this, arguments);
  };
});
exportGlobalErrorCauseWrapper('RangeError', function (init) {
  return function RangeError(message) {
    return apply(init, this, arguments);
  };
});
exportGlobalErrorCauseWrapper('ReferenceError', function (init) {
  return function ReferenceError(message) {
    return apply(init, this, arguments);
  };
});
exportGlobalErrorCauseWrapper('SyntaxError', function (init) {
  return function SyntaxError(message) {
    return apply(init, this, arguments);
  };
});
exportGlobalErrorCauseWrapper('TypeError', function (init) {
  return function TypeError(message) {
    return apply(init, this, arguments);
  };
});
exportGlobalErrorCauseWrapper('URIError', function (init) {
  return function URIError(message) {
    return apply(init, this, arguments);
  };
});
exportWebAssemblyErrorCauseWrapper('CompileError', function (init) {
  return function CompileError(message) {
    return apply(init, this, arguments);
  };
});
exportWebAssemblyErrorCauseWrapper('LinkError', function (init) {
  return function LinkError(message) {
    return apply(init, this, arguments);
  };
});
exportWebAssemblyErrorCauseWrapper('RuntimeError', function (init) {
  return function RuntimeError(message) {
    return apply(init, this, arguments);
  };
});

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__(18);

var errorToString = __webpack_require__(238);

var ErrorPrototype = Error.prototype; // `Error.prototype.toString` method fix
// https://tc39.es/ecma262/#sec-error.prototype.tostring

if (ErrorPrototype.toString !== errorToString) {
  redefine(ErrorPrototype, 'toString', errorToString);
}

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var isPrototypeOf = __webpack_require__(38);

var getPrototypeOf = __webpack_require__(48);

var setPrototypeOf = __webpack_require__(53);

var copyConstructorProperties = __webpack_require__(140);

var create = __webpack_require__(41);

var createNonEnumerableProperty = __webpack_require__(30);

var createPropertyDescriptor = __webpack_require__(46);

var clearErrorStack = __webpack_require__(142);

var installErrorCause = __webpack_require__(237);

var iterate = __webpack_require__(62);

var normalizeStringArgument = __webpack_require__(115);

var wellKnownSymbol = __webpack_require__(8);

var ERROR_STACK_INSTALLABLE = __webpack_require__(181);

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var Error = global.Error;
var push = [].push;

var $AggregateError = function AggregateError(errors, message
/* , options */
) {
  var options = arguments.length > 2 ? arguments[2] : undefined;
  var isInstance = isPrototypeOf(AggregateErrorPrototype, this);
  var that;

  if (setPrototypeOf) {
    that = setPrototypeOf(new Error(), isInstance ? getPrototypeOf(this) : AggregateErrorPrototype);
  } else {
    that = isInstance ? this : create(AggregateErrorPrototype);
    createNonEnumerableProperty(that, TO_STRING_TAG, 'Error');
  }

  if (message !== undefined) createNonEnumerableProperty(that, 'message', normalizeStringArgument(message));
  if (ERROR_STACK_INSTALLABLE) createNonEnumerableProperty(that, 'stack', clearErrorStack(that.stack, 1));
  installErrorCause(that, options);
  var errorsArray = [];
  iterate(errors, push, {
    that: errorsArray
  });
  createNonEnumerableProperty(that, 'errors', errorsArray);
  return that;
};

if (setPrototypeOf) setPrototypeOf($AggregateError, Error);else copyConstructorProperties($AggregateError, Error, {
  name: true
});
var AggregateErrorPrototype = $AggregateError.prototype = create(Error.prototype, {
  constructor: createPropertyDescriptor(1, $AggregateError),
  message: createPropertyDescriptor(1, ''),
  name: createPropertyDescriptor(1, 'AggregateError')
}); // `AggregateError` constructor
// https://tc39.es/ecma262/#sec-aggregate-error-constructor

$({
  global: true
}, {
  AggregateError: $AggregateError
});

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var getBuiltIn = __webpack_require__(19);

var apply = __webpack_require__(40);

var fails = __webpack_require__(4);

var wrapErrorConstructorWithCause = __webpack_require__(235);

var AGGREGATE_ERROR = 'AggregateError';
var $AggregateError = getBuiltIn(AGGREGATE_ERROR);
var FORCED = !fails(function () {
  return $AggregateError([1]).errors[0] !== 1;
}) && fails(function () {
  return $AggregateError([1], AGGREGATE_ERROR, {
    cause: 7
  }).cause !== 7;
}); // https://github.com/tc39/proposal-error-cause

$({
  global: true,
  forced: FORCED
}, {
  AggregateError: wrapErrorConstructorWithCause(AGGREGATE_ERROR, function (init) {
    // eslint-disable-next-line no-unused-vars -- required for functions `.length`
    return function AggregateError(errors, message) {
      return apply(init, this, arguments);
    };
  }, FORCED, true)
});

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var toObject = __webpack_require__(16);

var lengthOfArrayLike = __webpack_require__(17);

var toIntegerOrInfinity = __webpack_require__(22);

var addToUnscopables = __webpack_require__(63); // `Array.prototype.at` method
// https://github.com/tc39/proposal-relative-indexing-method


$({
  target: 'Array',
  proto: true
}, {
  at: function at(index) {
    var O = toObject(this);
    var len = lengthOfArrayLike(O);
    var relativeIndex = toIntegerOrInfinity(index);
    var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;
    return k < 0 || k >= len ? undefined : O[k];
  }
});
addToUnscopables('at');

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var fails = __webpack_require__(4);

var isArray = __webpack_require__(77);

var isObject = __webpack_require__(7);

var toObject = __webpack_require__(16);

var lengthOfArrayLike = __webpack_require__(17);

var createProperty = __webpack_require__(61);

var arraySpeciesCreate = __webpack_require__(114);

var arrayMethodHasSpeciesSupport = __webpack_require__(118);

var wellKnownSymbol = __webpack_require__(8);

var V8_VERSION = __webpack_require__(71);

var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';
var TypeError = global.TypeError; // We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679

var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});
var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

var isConcatSpreadable = function isConcatSpreadable(O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT; // `Array.prototype.concat` method
// https://tc39.es/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species

$({
  target: 'Array',
  proto: true,
  forced: FORCED
}, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  concat: function concat(arg) {
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;

    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];

      if (isConcatSpreadable(E)) {
        len = lengthOfArrayLike(E);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);

        for (k = 0; k < len; k++, n++) {
          if (k in E) createProperty(A, n, E[k]);
        }
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }

    A.length = n;
    return A;
  }
});

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var copyWithin = __webpack_require__(240);

var addToUnscopables = __webpack_require__(63); // `Array.prototype.copyWithin` method
// https://tc39.es/ecma262/#sec-array.prototype.copywithin


$({
  target: 'Array',
  proto: true
}, {
  copyWithin: copyWithin
}); // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables

addToUnscopables('copyWithin');

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var $every = __webpack_require__(26).every;

var arrayMethodIsStrict = __webpack_require__(64);

var STRICT_METHOD = arrayMethodIsStrict('every'); // `Array.prototype.every` method
// https://tc39.es/ecma262/#sec-array.prototype.every

$({
  target: 'Array',
  proto: true,
  forced: !STRICT_METHOD
}, {
  every: function every(callbackfn
  /* , thisArg */
  ) {
    return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var fill = __webpack_require__(184);

var addToUnscopables = __webpack_require__(63); // `Array.prototype.fill` method
// https://tc39.es/ecma262/#sec-array.prototype.fill


$({
  target: 'Array',
  proto: true
}, {
  fill: fill
}); // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables

addToUnscopables('fill');

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var $filter = __webpack_require__(26).filter;

var arrayMethodHasSpeciesSupport = __webpack_require__(118);

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter'); // `Array.prototype.filter` method
// https://tc39.es/ecma262/#sec-array.prototype.filter
// with adding support of @@species

$({
  target: 'Array',
  proto: true,
  forced: !HAS_SPECIES_SUPPORT
}, {
  filter: function filter(callbackfn
  /* , thisArg */
  ) {
    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var $find = __webpack_require__(26).find;

var addToUnscopables = __webpack_require__(63);

var FIND = 'find';
var SKIPS_HOLES = true; // Shouldn't skip holes

if (FIND in []) Array(1)[FIND](function () {
  SKIPS_HOLES = false;
}); // `Array.prototype.find` method
// https://tc39.es/ecma262/#sec-array.prototype.find

$({
  target: 'Array',
  proto: true,
  forced: SKIPS_HOLES
}, {
  find: function find(callbackfn
  /* , that = undefined */
  ) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
}); // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables

addToUnscopables(FIND);

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var $findIndex = __webpack_require__(26).findIndex;

var addToUnscopables = __webpack_require__(63);

var FIND_INDEX = 'findIndex';
var SKIPS_HOLES = true; // Shouldn't skip holes

if (FIND_INDEX in []) Array(1)[FIND_INDEX](function () {
  SKIPS_HOLES = false;
}); // `Array.prototype.findIndex` method
// https://tc39.es/ecma262/#sec-array.prototype.findindex

$({
  target: 'Array',
  proto: true,
  forced: SKIPS_HOLES
}, {
  findIndex: function findIndex(callbackfn
  /* , that = undefined */
  ) {
    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
}); // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables

addToUnscopables(FIND_INDEX);

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var flattenIntoArray = __webpack_require__(241);

var toObject = __webpack_require__(16);

var lengthOfArrayLike = __webpack_require__(17);

var toIntegerOrInfinity = __webpack_require__(22);

var arraySpeciesCreate = __webpack_require__(114); // `Array.prototype.flat` method
// https://tc39.es/ecma262/#sec-array.prototype.flat


$({
  target: 'Array',
  proto: true
}, {
  flat: function
    /* depthArg = 1 */
  flat() {
    var depthArg = arguments.length ? arguments[0] : undefined;
    var O = toObject(this);
    var sourceLen = lengthOfArrayLike(O);
    var A = arraySpeciesCreate(O, 0);
    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toIntegerOrInfinity(depthArg));
    return A;
  }
});

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var flattenIntoArray = __webpack_require__(241);

var aCallable = __webpack_require__(29);

var toObject = __webpack_require__(16);

var lengthOfArrayLike = __webpack_require__(17);

var arraySpeciesCreate = __webpack_require__(114); // `Array.prototype.flatMap` method
// https://tc39.es/ecma262/#sec-array.prototype.flatmap


$({
  target: 'Array',
  proto: true
}, {
  flatMap: function flatMap(callbackfn
  /* , thisArg */
  ) {
    var O = toObject(this);
    var sourceLen = lengthOfArrayLike(O);
    var A;
    aCallable(callbackfn);
    A = arraySpeciesCreate(O, 0);
    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    return A;
  }
});

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var forEach = __webpack_require__(242); // `Array.prototype.forEach` method
// https://tc39.es/ecma262/#sec-array.prototype.foreach
// eslint-disable-next-line es/no-array-prototype-foreach -- safe


$({
  target: 'Array',
  proto: true,
  forced: [].forEach != forEach
}, {
  forEach: forEach
});

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var from = __webpack_require__(243);

var checkCorrectnessOfIteration = __webpack_require__(144);

var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
  // eslint-disable-next-line es/no-array-from -- required for testing
  Array.from(iterable);
}); // `Array.from` method
// https://tc39.es/ecma262/#sec-array.from

$({
  target: 'Array',
  stat: true,
  forced: INCORRECT_ITERATION
}, {
  from: from
});

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(5);

var iteratorClose = __webpack_require__(239); // call something on iterator step with safe closing on error


module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  } catch (error) {
    iteratorClose(iterator, 'throw', error);
  }
};

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var $includes = __webpack_require__(110).includes;

var addToUnscopables = __webpack_require__(63); // `Array.prototype.includes` method
// https://tc39.es/ecma262/#sec-array.prototype.includes


$({
  target: 'Array',
  proto: true
}, {
  includes: function includes(el
  /* , fromIndex = 0 */
  ) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
}); // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables

addToUnscopables('includes');

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-array-prototype-indexof -- required for testing */

var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var $IndexOf = __webpack_require__(110).indexOf;

var arrayMethodIsStrict = __webpack_require__(64);

var un$IndexOf = uncurryThis([].indexOf);
var NEGATIVE_ZERO = !!un$IndexOf && 1 / un$IndexOf([1], 1, -0) < 0;
var STRICT_METHOD = arrayMethodIsStrict('indexOf'); // `Array.prototype.indexOf` method
// https://tc39.es/ecma262/#sec-array.prototype.indexof

$({
  target: 'Array',
  proto: true,
  forced: NEGATIVE_ZERO || !STRICT_METHOD
}, {
  indexOf: function indexOf(searchElement
  /* , fromIndex = 0 */
  ) {
    var fromIndex = arguments.length > 1 ? arguments[1] : undefined;
    return NEGATIVE_ZERO // convert -0 to +0
    ? un$IndexOf(this, searchElement, fromIndex) || 0 : $IndexOf(this, searchElement, fromIndex);
  }
});

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var isArray = __webpack_require__(77); // `Array.isArray` method
// https://tc39.es/ecma262/#sec-array.isarray


$({
  target: 'Array',
  stat: true
}, {
  isArray: isArray
});

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var IndexedObject = __webpack_require__(107);

var toIndexedObject = __webpack_require__(34);

var arrayMethodIsStrict = __webpack_require__(64);

var un$Join = uncurryThis([].join);
var ES3_STRINGS = IndexedObject != Object;
var STRICT_METHOD = arrayMethodIsStrict('join', ','); // `Array.prototype.join` method
// https://tc39.es/ecma262/#sec-array.prototype.join

$({
  target: 'Array',
  proto: true,
  forced: ES3_STRINGS || !STRICT_METHOD
}, {
  join: function join(separator) {
    return un$Join(toIndexedObject(this), separator === undefined ? ',' : separator);
  }
});

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var lastIndexOf = __webpack_require__(245); // `Array.prototype.lastIndexOf` method
// https://tc39.es/ecma262/#sec-array.prototype.lastindexof
// eslint-disable-next-line es/no-array-prototype-lastindexof -- required for testing


$({
  target: 'Array',
  proto: true,
  forced: lastIndexOf !== [].lastIndexOf
}, {
  lastIndexOf: lastIndexOf
});

/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var $map = __webpack_require__(26).map;

var arrayMethodHasSpeciesSupport = __webpack_require__(118);

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map'); // `Array.prototype.map` method
// https://tc39.es/ecma262/#sec-array.prototype.map
// with adding support of @@species

$({
  target: 'Array',
  proto: true,
  forced: !HAS_SPECIES_SUPPORT
}, {
  map: function map(callbackfn
  /* , thisArg */
  ) {
    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var fails = __webpack_require__(4);

var isConstructor = __webpack_require__(90);

var createProperty = __webpack_require__(61);

var Array = global.Array;
var ISNT_GENERIC = fails(function () {
  function F() {
    /* empty */
  }

  return !(Array.of.call(F) instanceof F);
}); // `Array.of` method
// https://tc39.es/ecma262/#sec-array.of
// WebKit Array.of isn't generic

$({
  target: 'Array',
  stat: true,
  forced: ISNT_GENERIC
}, {
  of: function
    /* ...args */
  of() {
    var index = 0;
    var argumentsLength = arguments.length;
    var result = new (isConstructor(this) ? this : Array)(argumentsLength);

    while (argumentsLength > index) {
      createProperty(result, index, arguments[index++]);
    }

    result.length = argumentsLength;
    return result;
  }
});

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var $reduce = __webpack_require__(146).left;

var arrayMethodIsStrict = __webpack_require__(64);

var CHROME_VERSION = __webpack_require__(71);

var IS_NODE = __webpack_require__(79);

var STRICT_METHOD = arrayMethodIsStrict('reduce'); // Chrome 80-82 has a critical bug
// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982

var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83; // `Array.prototype.reduce` method
// https://tc39.es/ecma262/#sec-array.prototype.reduce

$({
  target: 'Array',
  proto: true,
  forced: !STRICT_METHOD || CHROME_BUG
}, {
  reduce: function reduce(callbackfn
  /* , initialValue */
  ) {
    var length = arguments.length;
    return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var $reduceRight = __webpack_require__(146).right;

var arrayMethodIsStrict = __webpack_require__(64);

var CHROME_VERSION = __webpack_require__(71);

var IS_NODE = __webpack_require__(79);

var STRICT_METHOD = arrayMethodIsStrict('reduceRight'); // Chrome 80-82 has a critical bug
// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982

var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83; // `Array.prototype.reduceRight` method
// https://tc39.es/ecma262/#sec-array.prototype.reduceright

$({
  target: 'Array',
  proto: true,
  forced: !STRICT_METHOD || CHROME_BUG
}, {
  reduceRight: function reduceRight(callbackfn
  /* , initialValue */
  ) {
    return $reduceRight(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var isArray = __webpack_require__(77);

var un$Reverse = uncurryThis([].reverse);
var test = [1, 2]; // `Array.prototype.reverse` method
// https://tc39.es/ecma262/#sec-array.prototype.reverse
// fix for Safari 12.0 bug
// https://bugs.webkit.org/show_bug.cgi?id=188794

$({
  target: 'Array',
  proto: true,
  forced: String(test) === String(test.reverse())
}, {
  reverse: function reverse() {
    // eslint-disable-next-line no-self-assign -- dirty hack
    if (isArray(this)) this.length = this.length;
    return un$Reverse(this);
  }
});

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var isArray = __webpack_require__(77);

var isConstructor = __webpack_require__(90);

var isObject = __webpack_require__(7);

var toAbsoluteIndex = __webpack_require__(60);

var lengthOfArrayLike = __webpack_require__(17);

var toIndexedObject = __webpack_require__(34);

var createProperty = __webpack_require__(61);

var wellKnownSymbol = __webpack_require__(8);

var arrayMethodHasSpeciesSupport = __webpack_require__(118);

var un$Slice = __webpack_require__(78);

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');
var SPECIES = wellKnownSymbol('species');
var Array = global.Array;
var max = Math.max; // `Array.prototype.slice` method
// https://tc39.es/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects

$({
  target: 'Array',
  proto: true,
  forced: !HAS_SPECIES_SUPPORT
}, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = lengthOfArrayLike(O);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length); // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible

    var Constructor, result, n;

    if (isArray(O)) {
      Constructor = O.constructor; // cross-realm fallback

      if (isConstructor(Constructor) && (Constructor === Array || isArray(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES];
        if (Constructor === null) Constructor = undefined;
      }

      if (Constructor === Array || Constructor === undefined) {
        return un$Slice(O, k, fin);
      }
    }

    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));

    for (n = 0; k < fin; k++, n++) {
      if (k in O) createProperty(result, n, O[k]);
    }

    result.length = n;
    return result;
  }
});

/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var $some = __webpack_require__(26).some;

var arrayMethodIsStrict = __webpack_require__(64);

var STRICT_METHOD = arrayMethodIsStrict('some'); // `Array.prototype.some` method
// https://tc39.es/ecma262/#sec-array.prototype.some

$({
  target: 'Array',
  proto: true,
  forced: !STRICT_METHOD
}, {
  some: function some(callbackfn
  /* , thisArg */
  ) {
    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var aCallable = __webpack_require__(29);

var toObject = __webpack_require__(16);

var lengthOfArrayLike = __webpack_require__(17);

var toString = __webpack_require__(10);

var fails = __webpack_require__(4);

var internalSort = __webpack_require__(187);

var arrayMethodIsStrict = __webpack_require__(64);

var FF = __webpack_require__(246);

var IE_OR_EDGE = __webpack_require__(247);

var V8 = __webpack_require__(71);

var WEBKIT = __webpack_require__(188);

var test = [];
var un$Sort = uncurryThis(test.sort);
var push = uncurryThis(test.push); // IE8-

var FAILS_ON_UNDEFINED = fails(function () {
  test.sort(undefined);
}); // V8 bug

var FAILS_ON_NULL = fails(function () {
  test.sort(null);
}); // Old WebKit

var STRICT_METHOD = arrayMethodIsStrict('sort');
var STABLE_SORT = !fails(function () {
  // feature detection can be too slow, so check engines versions
  if (V8) return V8 < 70;
  if (FF && FF > 3) return;
  if (IE_OR_EDGE) return true;
  if (WEBKIT) return WEBKIT < 603;
  var result = '';
  var code, chr, value, index; // generate an array with more 512 elements (Chakra and old V8 fails only in this case)

  for (code = 65; code < 76; code++) {
    chr = String.fromCharCode(code);

    switch (code) {
      case 66:
      case 69:
      case 70:
      case 72:
        value = 3;
        break;

      case 68:
      case 71:
        value = 4;
        break;

      default:
        value = 2;
    }

    for (index = 0; index < 47; index++) {
      test.push({
        k: chr + index,
        v: value
      });
    }
  }

  test.sort(function (a, b) {
    return b.v - a.v;
  });

  for (index = 0; index < test.length; index++) {
    chr = test[index].k.charAt(0);
    if (result.charAt(result.length - 1) !== chr) result += chr;
  }

  return result !== 'DGBEFHACIJK';
});
var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;

var getSortCompare = function getSortCompare(comparefn) {
  return function (x, y) {
    if (y === undefined) return -1;
    if (x === undefined) return 1;
    if (comparefn !== undefined) return +comparefn(x, y) || 0;
    return toString(x) > toString(y) ? 1 : -1;
  };
}; // `Array.prototype.sort` method
// https://tc39.es/ecma262/#sec-array.prototype.sort


$({
  target: 'Array',
  proto: true,
  forced: FORCED
}, {
  sort: function sort(comparefn) {
    if (comparefn !== undefined) aCallable(comparefn);
    var array = toObject(this);
    if (STABLE_SORT) return comparefn === undefined ? un$Sort(array) : un$Sort(array, comparefn);
    var items = [];
    var arrayLength = lengthOfArrayLike(array);
    var itemsLength, index;

    for (index = 0; index < arrayLength; index++) {
      if (index in array) push(items, array[index]);
    }

    internalSort(items, getSortCompare(comparefn));
    itemsLength = items.length;
    index = 0;

    while (index < itemsLength) {
      array[index] = items[index++];
    }

    while (index < arrayLength) {
      delete array[index++];
    }

    return array;
  }
});

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

var setSpecies = __webpack_require__(92); // `Array[@@species]` getter
// https://tc39.es/ecma262/#sec-get-array-@@species


setSpecies('Array');

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var toAbsoluteIndex = __webpack_require__(60);

var toIntegerOrInfinity = __webpack_require__(22);

var lengthOfArrayLike = __webpack_require__(17);

var toObject = __webpack_require__(16);

var arraySpeciesCreate = __webpack_require__(114);

var createProperty = __webpack_require__(61);

var arrayMethodHasSpeciesSupport = __webpack_require__(118);

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');
var TypeError = global.TypeError;
var max = Math.max;
var min = Math.min;
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded'; // `Array.prototype.splice` method
// https://tc39.es/ecma262/#sec-array.prototype.splice
// with adding support of @@species

$({
  target: 'Array',
  proto: true,
  forced: !HAS_SPECIES_SUPPORT
}, {
  splice: function splice(start, deleteCount
  /* , ...items */
  ) {
    var O = toObject(this);
    var len = lengthOfArrayLike(O);
    var actualStart = toAbsoluteIndex(start, len);
    var argumentsLength = arguments.length;
    var insertCount, actualDeleteCount, A, k, from, to;

    if (argumentsLength === 0) {
      insertCount = actualDeleteCount = 0;
    } else if (argumentsLength === 1) {
      insertCount = 0;
      actualDeleteCount = len - actualStart;
    } else {
      insertCount = argumentsLength - 2;
      actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);
    }

    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {
      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);
    }

    A = arraySpeciesCreate(O, actualDeleteCount);

    for (k = 0; k < actualDeleteCount; k++) {
      from = actualStart + k;
      if (from in O) createProperty(A, k, O[from]);
    }

    A.length = actualDeleteCount;

    if (insertCount < actualDeleteCount) {
      for (k = actualStart; k < len - actualDeleteCount; k++) {
        from = k + actualDeleteCount;
        to = k + insertCount;
        if (from in O) O[to] = O[from];else delete O[to];
      }

      for (k = len; k > len - actualDeleteCount + insertCount; k--) {
        delete O[k - 1];
      }
    } else if (insertCount > actualDeleteCount) {
      for (k = len - actualDeleteCount; k > actualStart; k--) {
        from = k + actualDeleteCount - 1;
        to = k + insertCount - 1;
        if (from in O) O[to] = O[from];else delete O[to];
      }
    }

    for (k = 0; k < insertCount; k++) {
      O[k + actualStart] = arguments[k + 2];
    }

    O.length = len - actualDeleteCount + insertCount;
    return A;
  }
});

/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

// this method was added to unscopables after implementation
// in popular engines, so it's moved to a separate module
var addToUnscopables = __webpack_require__(63); // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables


addToUnscopables('flat');

/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

// this method was added to unscopables after implementation
// in popular engines, so it's moved to a separate module
var addToUnscopables = __webpack_require__(63); // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables


addToUnscopables('flatMap');

/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var arrayBufferModule = __webpack_require__(147);

var setSpecies = __webpack_require__(92);

var ARRAY_BUFFER = 'ArrayBuffer';
var ArrayBuffer = arrayBufferModule[ARRAY_BUFFER];
var NativeArrayBuffer = global[ARRAY_BUFFER]; // `ArrayBuffer` constructor
// https://tc39.es/ecma262/#sec-arraybuffer-constructor

$({
  global: true,
  forced: NativeArrayBuffer !== ArrayBuffer
}, {
  ArrayBuffer: ArrayBuffer
});
setSpecies(ARRAY_BUFFER);

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

// IEEE754 conversions based on https://github.com/feross/ieee754
var global = __webpack_require__(2);

var Array = global.Array;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;

var pack = function pack(number, mantissaLength, bytes) {
  var buffer = Array(bytes);
  var exponentLength = bytes * 8 - mantissaLength - 1;
  var eMax = (1 << exponentLength) - 1;
  var eBias = eMax >> 1;
  var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;
  var index = 0;
  var exponent, mantissa, c;
  number = abs(number); // eslint-disable-next-line no-self-compare -- NaN check

  if (number != number || number === Infinity) {
    // eslint-disable-next-line no-self-compare -- NaN check
    mantissa = number != number ? 1 : 0;
    exponent = eMax;
  } else {
    exponent = floor(log(number) / LN2);
    c = pow(2, -exponent);

    if (number * c < 1) {
      exponent--;
      c *= 2;
    }

    if (exponent + eBias >= 1) {
      number += rt / c;
    } else {
      number += rt * pow(2, 1 - eBias);
    }

    if (number * c >= 2) {
      exponent++;
      c /= 2;
    }

    if (exponent + eBias >= eMax) {
      mantissa = 0;
      exponent = eMax;
    } else if (exponent + eBias >= 1) {
      mantissa = (number * c - 1) * pow(2, mantissaLength);
      exponent = exponent + eBias;
    } else {
      mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);
      exponent = 0;
    }
  }

  while (mantissaLength >= 8) {
    buffer[index++] = mantissa & 255;
    mantissa /= 256;
    mantissaLength -= 8;
  }

  exponent = exponent << mantissaLength | mantissa;
  exponentLength += mantissaLength;

  while (exponentLength > 0) {
    buffer[index++] = exponent & 255;
    exponent /= 256;
    exponentLength -= 8;
  }

  buffer[--index] |= sign * 128;
  return buffer;
};

var unpack = function unpack(buffer, mantissaLength) {
  var bytes = buffer.length;
  var exponentLength = bytes * 8 - mantissaLength - 1;
  var eMax = (1 << exponentLength) - 1;
  var eBias = eMax >> 1;
  var nBits = exponentLength - 7;
  var index = bytes - 1;
  var sign = buffer[index--];
  var exponent = sign & 127;
  var mantissa;
  sign >>= 7;

  while (nBits > 0) {
    exponent = exponent * 256 + buffer[index--];
    nBits -= 8;
  }

  mantissa = exponent & (1 << -nBits) - 1;
  exponent >>= -nBits;
  nBits += mantissaLength;

  while (nBits > 0) {
    mantissa = mantissa * 256 + buffer[index--];
    nBits -= 8;
  }

  if (exponent === 0) {
    exponent = 1 - eBias;
  } else if (exponent === eMax) {
    return mantissa ? NaN : sign ? -Infinity : Infinity;
  } else {
    mantissa = mantissa + pow(2, mantissaLength);
    exponent = exponent - eBias;
  }

  return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);
};

module.exports = {
  pack: pack,
  unpack: unpack
};

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var ArrayBufferViewCore = __webpack_require__(11);

var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS; // `ArrayBuffer.isView` method
// https://tc39.es/ecma262/#sec-arraybuffer.isview

$({
  target: 'ArrayBuffer',
  stat: true,
  forced: !NATIVE_ARRAY_BUFFER_VIEWS
}, {
  isView: ArrayBufferViewCore.isView
});

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var fails = __webpack_require__(4);

var ArrayBufferModule = __webpack_require__(147);

var anObject = __webpack_require__(5);

var toAbsoluteIndex = __webpack_require__(60);

var toLength = __webpack_require__(39);

var speciesConstructor = __webpack_require__(94);

var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
var DataView = ArrayBufferModule.DataView;
var DataViewPrototype = DataView.prototype;
var un$ArrayBufferSlice = uncurryThis(ArrayBuffer.prototype.slice);
var getUint8 = uncurryThis(DataViewPrototype.getUint8);
var setUint8 = uncurryThis(DataViewPrototype.setUint8);
var INCORRECT_SLICE = fails(function () {
  return !new ArrayBuffer(2).slice(1, undefined).byteLength;
}); // `ArrayBuffer.prototype.slice` method
// https://tc39.es/ecma262/#sec-arraybuffer.prototype.slice

$({
  target: 'ArrayBuffer',
  proto: true,
  unsafe: true,
  forced: INCORRECT_SLICE
}, {
  slice: function slice(start, end) {
    if (un$ArrayBufferSlice && end === undefined) {
      return un$ArrayBufferSlice(anObject(this), start); // FF fix
    }

    var length = anObject(this).byteLength;
    var first = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    var result = new (speciesConstructor(this, ArrayBuffer))(toLength(fin - first));
    var viewSource = new DataView(this);
    var viewTarget = new DataView(result);
    var index = 0;

    while (first < fin) {
      setUint8(viewTarget, index++, getUint8(viewSource, first++));
    }

    return result;
  }
});

/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var ArrayBufferModule = __webpack_require__(147);

var NATIVE_ARRAY_BUFFER = __webpack_require__(189); // `DataView` constructor
// https://tc39.es/ecma262/#sec-dataview-constructor


$({
  global: true,
  forced: !NATIVE_ARRAY_BUFFER
}, {
  DataView: ArrayBufferModule.DataView
});

/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var fails = __webpack_require__(4);

var FORCED = fails(function () {
  return new Date(16e11).getYear() !== 120;
});
var getFullYear = uncurryThis(Date.prototype.getFullYear); // `Date.prototype.getYear` method
// https://tc39.es/ecma262/#sec-date.prototype.getyear

$({
  target: 'Date',
  proto: true,
  forced: FORCED
}, {
  getYear: function getYear() {
    return getFullYear(this) - 1900;
  }
});

/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var Date = global.Date;
var getTime = uncurryThis(Date.prototype.getTime); // `Date.now` method
// https://tc39.es/ecma262/#sec-date.now

$({
  target: 'Date',
  stat: true
}, {
  now: function now() {
    return getTime(new Date());
  }
});

/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var toIntegerOrInfinity = __webpack_require__(22);

var DatePrototype = Date.prototype;
var getTime = uncurryThis(DatePrototype.getTime);
var setFullYear = uncurryThis(DatePrototype.setFullYear); // `Date.prototype.setYear` method
// https://tc39.es/ecma262/#sec-date.prototype.setyear

$({
  target: 'Date',
  proto: true
}, {
  setYear: function setYear(year) {
    // validate
    getTime(this);
    var yi = toIntegerOrInfinity(year);
    var yyyy = 0 <= yi && yi <= 99 ? yi + 1900 : yi;
    return setFullYear(this, yyyy);
  }
});

/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0); // `Date.prototype.toGMTString` method
// https://tc39.es/ecma262/#sec-date.prototype.togmtstring


$({
  target: 'Date',
  proto: true
}, {
  toGMTString: Date.prototype.toUTCString
});

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var toISOString = __webpack_require__(408); // `Date.prototype.toISOString` method
// https://tc39.es/ecma262/#sec-date.prototype.toisostring
// PhantomJS / old WebKit has a broken implementations


$({
  target: 'Date',
  proto: true,
  forced: Date.prototype.toISOString !== toISOString
}, {
  toISOString: toISOString
});

/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var fails = __webpack_require__(4);

var padStart = __webpack_require__(191).start;

var RangeError = global.RangeError;
var abs = Math.abs;
var DatePrototype = Date.prototype;
var n$DateToISOString = DatePrototype.toISOString;
var getTime = uncurryThis(DatePrototype.getTime);
var getUTCDate = uncurryThis(DatePrototype.getUTCDate);
var getUTCFullYear = uncurryThis(DatePrototype.getUTCFullYear);
var getUTCHours = uncurryThis(DatePrototype.getUTCHours);
var getUTCMilliseconds = uncurryThis(DatePrototype.getUTCMilliseconds);
var getUTCMinutes = uncurryThis(DatePrototype.getUTCMinutes);
var getUTCMonth = uncurryThis(DatePrototype.getUTCMonth);
var getUTCSeconds = uncurryThis(DatePrototype.getUTCSeconds); // `Date.prototype.toISOString` method implementation
// https://tc39.es/ecma262/#sec-date.prototype.toisostring
// PhantomJS / old WebKit fails here:

module.exports = fails(function () {
  return n$DateToISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';
}) || !fails(function () {
  n$DateToISOString.call(new Date(NaN));
}) ? function toISOString() {
  if (!isFinite(getTime(this))) throw RangeError('Invalid time value');
  var date = this;
  var year = getUTCFullYear(date);
  var milliseconds = getUTCMilliseconds(date);
  var sign = year < 0 ? '-' : year > 9999 ? '+' : '';
  return sign + padStart(abs(year), sign ? 6 : 4, 0) + '-' + padStart(getUTCMonth(date) + 1, 2, 0) + '-' + padStart(getUTCDate(date), 2, 0) + 'T' + padStart(getUTCHours(date), 2, 0) + ':' + padStart(getUTCMinutes(date), 2, 0) + ':' + padStart(getUTCSeconds(date), 2, 0) + '.' + padStart(milliseconds, 3, 0) + 'Z';
} : n$DateToISOString;

/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var fails = __webpack_require__(4);

var toObject = __webpack_require__(16);

var toPrimitive = __webpack_require__(172);

var FORCED = fails(function () {
  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({
    toISOString: function toISOString() {
      return 1;
    }
  }) !== 1;
}); // `Date.prototype.toJSON` method
// https://tc39.es/ecma262/#sec-date.prototype.tojson

$({
  target: 'Date',
  proto: true,
  forced: FORCED
}, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  toJSON: function toJSON(key) {
    var O = toObject(this);
    var pv = toPrimitive(O, 'number');
    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
  }
});

/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

var hasOwn = __webpack_require__(14);

var redefine = __webpack_require__(18);

var dateToPrimitive = __webpack_require__(411);

var wellKnownSymbol = __webpack_require__(8);

var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var DatePrototype = Date.prototype; // `Date.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive

if (!hasOwn(DatePrototype, TO_PRIMITIVE)) {
  redefine(DatePrototype, TO_PRIMITIVE, dateToPrimitive);
}

/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(2);

var anObject = __webpack_require__(5);

var ordinaryToPrimitive = __webpack_require__(228);

var TypeError = global.TypeError; // `Date.prototype[@@toPrimitive](hint)` method implementation
// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive

module.exports = function (hint) {
  anObject(this);
  if (hint === 'string' || hint === 'default') hint = 'string';else if (hint !== 'number') throw TypeError('Incorrect hint');
  return ordinaryToPrimitive(this, hint);
};

/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

var uncurryThis = __webpack_require__(3);

var redefine = __webpack_require__(18);

var DatePrototype = Date.prototype;
var INVALID_DATE = 'Invalid Date';
var TO_STRING = 'toString';
var un$DateToString = uncurryThis(DatePrototype[TO_STRING]);
var getTime = uncurryThis(DatePrototype.getTime); // `Date.prototype.toString` method
// https://tc39.es/ecma262/#sec-date.prototype.tostring

if (String(new Date(NaN)) != INVALID_DATE) {
  redefine(DatePrototype, TO_STRING, function toString() {
    var value = getTime(this); // eslint-disable-next-line no-self-compare -- NaN check

    return value === value ? un$DateToString(this) : INVALID_DATE;
  });
}

/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var toString = __webpack_require__(10);

var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var exec = uncurryThis(/./.exec);
var numberToString = uncurryThis(1.0.toString);
var toUpperCase = uncurryThis(''.toUpperCase);
var raw = /[\w*+\-./@]/;

var hex = function hex(code, length) {
  var result = numberToString(code, 16);

  while (result.length < length) {
    result = '0' + result;
  }

  return result;
}; // `escape` method
// https://tc39.es/ecma262/#sec-escape-string


$({
  global: true
}, {
  escape: function escape(string) {
    var str = toString(string);
    var result = '';
    var length = str.length;
    var index = 0;
    var chr, code;

    while (index < length) {
      chr = charAt(str, index++);

      if (exec(raw, chr)) {
        result += chr;
      } else {
        code = charCodeAt(chr, 0);

        if (code < 256) {
          result += '%' + hex(code, 2);
        } else {
          result += '%u' + toUpperCase(hex(code, 4));
        }
      }
    }

    return result;
  }
});

/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var bind = __webpack_require__(249); // `Function.prototype.bind` method
// https://tc39.es/ecma262/#sec-function.prototype.bind


$({
  target: 'Function',
  proto: true
}, {
  bind: bind
});

/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isCallable = __webpack_require__(9);

var isObject = __webpack_require__(7);

var definePropertyModule = __webpack_require__(12);

var getPrototypeOf = __webpack_require__(48);

var wellKnownSymbol = __webpack_require__(8);

var HAS_INSTANCE = wellKnownSymbol('hasInstance');
var FunctionPrototype = Function.prototype; // `Function.prototype[@@hasInstance]` method
// https://tc39.es/ecma262/#sec-function.prototype-@@hasinstance

if (!(HAS_INSTANCE in FunctionPrototype)) {
  definePropertyModule.f(FunctionPrototype, HAS_INSTANCE, {
    value: function value(O) {
      if (!isCallable(this) || !isObject(O)) return false;
      var P = this.prototype;
      if (!isObject(P)) return O instanceof this; // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:

      while (O = getPrototypeOf(O)) {
        if (P === O) return true;
      }

      return false;
    }
  });
}

/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(6);

var FUNCTION_NAME_EXISTS = __webpack_require__(89).EXISTS;

var uncurryThis = __webpack_require__(3);

var defineProperty = __webpack_require__(12).f;

var FunctionPrototype = Function.prototype;
var functionToString = uncurryThis(FunctionPrototype.toString);
var nameRE = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/;
var regExpExec = uncurryThis(nameRE.exec);
var NAME = 'name'; // Function instances `.name` property
// https://tc39.es/ecma262/#sec-function-instances-name

if (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {
  defineProperty(FunctionPrototype, NAME, {
    configurable: true,
    get: function get() {
      try {
        return regExpExec(nameRE, functionToString(this))[1];
      } catch (error) {
        return '';
      }
    }
  });
}

/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var global = __webpack_require__(2); // `globalThis` object
// https://tc39.es/ecma262/#sec-globalthis


$({
  global: true
}, {
  globalThis: global
});

/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var getBuiltIn = __webpack_require__(19);

var apply = __webpack_require__(40);

var uncurryThis = __webpack_require__(3);

var fails = __webpack_require__(4);

var Array = global.Array;
var $stringify = getBuiltIn('JSON', 'stringify');
var exec = uncurryThis(/./.exec);
var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var replace = uncurryThis(''.replace);
var numberToString = uncurryThis(1.0.toString);
var tester = /[\uD800-\uDFFF]/g;
var low = /^[\uD800-\uDBFF]$/;
var hi = /^[\uDC00-\uDFFF]$/;

var fix = function fix(match, offset, string) {
  var prev = charAt(string, offset - 1);
  var next = charAt(string, offset + 1);

  if (exec(low, match) && !exec(hi, next) || exec(hi, match) && !exec(low, prev)) {
    return "\\u" + numberToString(charCodeAt(match, 0), 16);
  }

  return match;
};

var FORCED = fails(function () {
  return $stringify("\uDF06\uD834") !== "\"\\udf06\\ud834\"" || $stringify("\uDEAD") !== "\"\\udead\"";
});

if ($stringify) {
  // `JSON.stringify` method
  // https://tc39.es/ecma262/#sec-json.stringify
  // https://github.com/tc39/proposal-well-formed-stringify
  $({
    target: 'JSON',
    stat: true,
    forced: FORCED
  }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    stringify: function stringify(it, replacer, space) {
      for (var i = 0, l = arguments.length, args = Array(l); i < l; i++) {
        args[i] = arguments[i];
      }

      var result = apply($stringify, null, args);
      return typeof result == 'string' ? replace(result, tester, fix) : result;
    }
  });
}

/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var setToStringTag = __webpack_require__(47); // JSON[@@toStringTag] property
// https://tc39.es/ecma262/#sec-json-@@tostringtag


setToStringTag(global.JSON, 'JSON', true);

/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var collection = __webpack_require__(149);

var collectionStrong = __webpack_require__(250); // `Map` constructor
// https://tc39.es/ecma262/#sec-map-objects


collection('Map', function (init) {
  return function Map() {
    return init(this, arguments.length ? arguments[0] : undefined);
  };
}, collectionStrong);

/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var log1p = __webpack_require__(251); // eslint-disable-next-line es/no-math-acosh -- required for testing


var $acosh = Math.acosh;
var log = Math.log;
var sqrt = Math.sqrt;
var LN2 = Math.LN2;
var FORCED = !$acosh // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
|| Math.floor($acosh(Number.MAX_VALUE)) != 710 // Tor Browser bug: Math.acosh(Infinity) -> NaN
|| $acosh(Infinity) != Infinity; // `Math.acosh` method
// https://tc39.es/ecma262/#sec-math.acosh

$({
  target: 'Math',
  stat: true,
  forced: FORCED
}, {
  acosh: function acosh(x) {
    return (x = +x) < 1 ? NaN : x > 94906265.62425156 ? log(x) + LN2 : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
  }
});

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0); // eslint-disable-next-line es/no-math-asinh -- required for testing


var $asinh = Math.asinh;
var log = Math.log;
var sqrt = Math.sqrt;

function asinh(x) {
  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : log(x + sqrt(x * x + 1));
} // `Math.asinh` method
// https://tc39.es/ecma262/#sec-math.asinh
// Tor Browser bug: Math.asinh(0) -> -0


$({
  target: 'Math',
  stat: true,
  forced: !($asinh && 1 / $asinh(0) > 0)
}, {
  asinh: asinh
});

/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0); // eslint-disable-next-line es/no-math-atanh -- required for testing


var $atanh = Math.atanh;
var log = Math.log; // `Math.atanh` method
// https://tc39.es/ecma262/#sec-math.atanh
// Tor Browser bug: Math.atanh(-0) -> 0

$({
  target: 'Math',
  stat: true,
  forced: !($atanh && 1 / $atanh(-0) < 0)
}, {
  atanh: function atanh(x) {
    return (x = +x) == 0 ? x : log((1 + x) / (1 - x)) / 2;
  }
});

/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var sign = __webpack_require__(193);

var abs = Math.abs;
var pow = Math.pow; // `Math.cbrt` method
// https://tc39.es/ecma262/#sec-math.cbrt

$({
  target: 'Math',
  stat: true
}, {
  cbrt: function cbrt(x) {
    return sign(x = +x) * pow(abs(x), 1 / 3);
  }
});

/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var floor = Math.floor;
var log = Math.log;
var LOG2E = Math.LOG2E; // `Math.clz32` method
// https://tc39.es/ecma262/#sec-math.clz32

$({
  target: 'Math',
  stat: true
}, {
  clz32: function clz32(x) {
    return (x >>>= 0) ? 31 - floor(log(x + 0.5) * LOG2E) : 32;
  }
});

/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var expm1 = __webpack_require__(151); // eslint-disable-next-line es/no-math-cosh -- required for testing


var $cosh = Math.cosh;
var abs = Math.abs;
var E = Math.E; // `Math.cosh` method
// https://tc39.es/ecma262/#sec-math.cosh

$({
  target: 'Math',
  stat: true,
  forced: !$cosh || $cosh(710) === Infinity
}, {
  cosh: function cosh(x) {
    var t = expm1(abs(x) - 1) + 1;
    return (t + 1 / (t * E * E)) * (E / 2);
  }
});

/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var expm1 = __webpack_require__(151); // `Math.expm1` method
// https://tc39.es/ecma262/#sec-math.expm1
// eslint-disable-next-line es/no-math-expm1 -- required for testing


$({
  target: 'Math',
  stat: true,
  forced: expm1 != Math.expm1
}, {
  expm1: expm1
});

/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var fround = __webpack_require__(429); // `Math.fround` method
// https://tc39.es/ecma262/#sec-math.fround


$({
  target: 'Math',
  stat: true
}, {
  fround: fround
});

/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

var sign = __webpack_require__(193);

var abs = Math.abs;
var pow = Math.pow;
var EPSILON = pow(2, -52);
var EPSILON32 = pow(2, -23);
var MAX32 = pow(2, 127) * (2 - EPSILON32);
var MIN32 = pow(2, -126);

var roundTiesToEven = function roundTiesToEven(n) {
  return n + 1 / EPSILON - 1 / EPSILON;
}; // `Math.fround` method implementation
// https://tc39.es/ecma262/#sec-math.fround
// eslint-disable-next-line es/no-math-fround -- safe


module.exports = Math.fround || function fround(x) {
  var $abs = abs(x);
  var $sign = sign(x);
  var a, result;
  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
  a = (1 + EPSILON32 / EPSILON) * $abs;
  result = a - (a - $abs); // eslint-disable-next-line no-self-compare -- NaN check

  if (result > MAX32 || result != result) return $sign * Infinity;
  return $sign * result;
};

/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0); // eslint-disable-next-line es/no-math-hypot -- required for testing


var $hypot = Math.hypot;
var abs = Math.abs;
var sqrt = Math.sqrt; // Chrome 77 bug
// https://bugs.chromium.org/p/v8/issues/detail?id=9546

var BUGGY = !!$hypot && $hypot(Infinity, NaN) !== Infinity; // `Math.hypot` method
// https://tc39.es/ecma262/#sec-math.hypot

$({
  target: 'Math',
  stat: true,
  forced: BUGGY
}, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  hypot: function hypot(value1, value2) {
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;

    while (i < aLen) {
      arg = abs(arguments[i++]);

      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }

    return larg === Infinity ? Infinity : larg * sqrt(sum);
  }
});

/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var fails = __webpack_require__(4); // eslint-disable-next-line es/no-math-imul -- required for testing


var $imul = Math.imul;
var FORCED = fails(function () {
  return $imul(0xFFFFFFFF, 5) != -5 || $imul.length != 2;
}); // `Math.imul` method
// https://tc39.es/ecma262/#sec-math.imul
// some WebKit versions fails with big numbers, some has wrong arity

$({
  target: 'Math',
  stat: true,
  forced: FORCED
}, {
  imul: function imul(x, y) {
    var UINT16 = 0xFFFF;
    var xn = +x;
    var yn = +y;
    var xl = UINT16 & xn;
    var yl = UINT16 & yn;
    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
  }
});

/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var log10 = __webpack_require__(252); // `Math.log10` method
// https://tc39.es/ecma262/#sec-math.log10


$({
  target: 'Math',
  stat: true
}, {
  log10: log10
});

/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var log1p = __webpack_require__(251); // `Math.log1p` method
// https://tc39.es/ecma262/#sec-math.log1p


$({
  target: 'Math',
  stat: true
}, {
  log1p: log1p
});

/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var log = Math.log;
var LN2 = Math.LN2; // `Math.log2` method
// https://tc39.es/ecma262/#sec-math.log2

$({
  target: 'Math',
  stat: true
}, {
  log2: function log2(x) {
    return log(x) / LN2;
  }
});

/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var sign = __webpack_require__(193); // `Math.sign` method
// https://tc39.es/ecma262/#sec-math.sign


$({
  target: 'Math',
  stat: true
}, {
  sign: sign
});

/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var fails = __webpack_require__(4);

var expm1 = __webpack_require__(151);

var abs = Math.abs;
var exp = Math.exp;
var E = Math.E;
var FORCED = fails(function () {
  // eslint-disable-next-line es/no-math-sinh -- required for testing
  return Math.sinh(-2e-17) != -2e-17;
}); // `Math.sinh` method
// https://tc39.es/ecma262/#sec-math.sinh
// V8 near Chromium 38 has a problem with very small numbers

$({
  target: 'Math',
  stat: true,
  forced: FORCED
}, {
  sinh: function sinh(x) {
    return abs(x = +x) < 1 ? (expm1(x) - expm1(-x)) / 2 : (exp(x - 1) - exp(-x - 1)) * (E / 2);
  }
});

/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var expm1 = __webpack_require__(151);

var exp = Math.exp; // `Math.tanh` method
// https://tc39.es/ecma262/#sec-math.tanh

$({
  target: 'Math',
  stat: true
}, {
  tanh: function tanh(x) {
    var a = expm1(x = +x);
    var b = expm1(-x);
    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
  }
});

/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

var setToStringTag = __webpack_require__(47); // Math[@@toStringTag] property
// https://tc39.es/ecma262/#sec-math-@@tostringtag


setToStringTag(Math, 'Math', true);

/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var ceil = Math.ceil;
var floor = Math.floor; // `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc

$({
  target: 'Math',
  stat: true
}, {
  trunc: function trunc(it) {
    return (it > 0 ? floor : ceil)(it);
  }
});

/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var DESCRIPTORS = __webpack_require__(6);

var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var isForced = __webpack_require__(111);

var redefine = __webpack_require__(18);

var hasOwn = __webpack_require__(14);

var inheritIfRequired = __webpack_require__(91);

var isPrototypeOf = __webpack_require__(38);

var isSymbol = __webpack_require__(87);

var toPrimitive = __webpack_require__(172);

var fails = __webpack_require__(4);

var getOwnPropertyNames = __webpack_require__(72).f;

var getOwnPropertyDescriptor = __webpack_require__(28).f;

var defineProperty = __webpack_require__(12).f;

var thisNumberValue = __webpack_require__(152);

var trim = __webpack_require__(95).trim;

var NUMBER = 'Number';
var NativeNumber = global[NUMBER];
var NumberPrototype = NativeNumber.prototype;
var TypeError = global.TypeError;
var arraySlice = uncurryThis(''.slice);
var charCodeAt = uncurryThis(''.charCodeAt); // `ToNumeric` abstract operation
// https://tc39.es/ecma262/#sec-tonumeric

var toNumeric = function toNumeric(value) {
  var primValue = toPrimitive(value, 'number');
  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);
}; // `ToNumber` abstract operation
// https://tc39.es/ecma262/#sec-tonumber


var toNumber = function toNumber(argument) {
  var it = toPrimitive(argument, 'number');
  var first, third, radix, maxCode, digits, length, index, code;
  if (isSymbol(it)) throw TypeError('Cannot convert a Symbol value to a number');

  if (typeof it == 'string' && it.length > 2) {
    it = trim(it);
    first = charCodeAt(it, 0);

    if (first === 43 || first === 45) {
      third = charCodeAt(it, 2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (charCodeAt(it, 1)) {
        case 66:
        case 98:
          radix = 2;
          maxCode = 49;
          break;
        // fast equal of /^0b[01]+$/i

        case 79:
        case 111:
          radix = 8;
          maxCode = 55;
          break;
        // fast equal of /^0o[0-7]+$/i

        default:
          return +it;
      }

      digits = arraySlice(it, 2);
      length = digits.length;

      for (index = 0; index < length; index++) {
        code = charCodeAt(digits, index); // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols

        if (code < 48 || code > maxCode) return NaN;
      }

      return parseInt(digits, radix);
    }
  }

  return +it;
}; // `Number` constructor
// https://tc39.es/ecma262/#sec-number-constructor


if (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {
  var NumberWrapper = function Number(value) {
    var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));
    var dummy = this; // check on 1..constructor(foo) case

    return isPrototypeOf(NumberPrototype, dummy) && fails(function () {
      thisNumberValue(dummy);
    }) ? inheritIfRequired(Object(n), dummy, NumberWrapper) : n;
  };

  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : ( // ES3:
  'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' + // ES2015 (in case, if modules with ES2015 Number statics required before):
  'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' + // ESNext
  'fromString,range').split(','), j = 0, key; keys.length > j; j++) {
    if (hasOwn(NativeNumber, key = keys[j]) && !hasOwn(NumberWrapper, key)) {
      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));
    }
  }

  NumberWrapper.prototype = NumberPrototype;
  NumberPrototype.constructor = NumberWrapper;
  redefine(global, NUMBER, NumberWrapper);
}

/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0); // `Number.EPSILON` constant
// https://tc39.es/ecma262/#sec-number.epsilon


$({
  target: 'Number',
  stat: true
}, {
  EPSILON: Math.pow(2, -52)
});

/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var numberIsFinite = __webpack_require__(443); // `Number.isFinite` method
// https://tc39.es/ecma262/#sec-number.isfinite


$({
  target: 'Number',
  stat: true
}, {
  isFinite: numberIsFinite
});

/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var globalIsFinite = global.isFinite; // `Number.isFinite` method
// https://tc39.es/ecma262/#sec-number.isfinite
// eslint-disable-next-line es/no-number-isfinite -- safe

module.exports = Number.isFinite || function isFinite(it) {
  return typeof it == 'number' && globalIsFinite(it);
};

/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var isIntegralNumber = __webpack_require__(194); // `Number.isInteger` method
// https://tc39.es/ecma262/#sec-number.isinteger


$({
  target: 'Number',
  stat: true
}, {
  isInteger: isIntegralNumber
});

/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0); // `Number.isNaN` method
// https://tc39.es/ecma262/#sec-number.isnan


$({
  target: 'Number',
  stat: true
}, {
  isNaN: function isNaN(number) {
    // eslint-disable-next-line no-self-compare -- NaN check
    return number != number;
  }
});

/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var isIntegralNumber = __webpack_require__(194);

var abs = Math.abs; // `Number.isSafeInteger` method
// https://tc39.es/ecma262/#sec-number.issafeinteger

$({
  target: 'Number',
  stat: true
}, {
  isSafeInteger: function isSafeInteger(number) {
    return isIntegralNumber(number) && abs(number) <= 0x1FFFFFFFFFFFFF;
  }
});

/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0); // `Number.MAX_SAFE_INTEGER` constant
// https://tc39.es/ecma262/#sec-number.max_safe_integer


$({
  target: 'Number',
  stat: true
}, {
  MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF
});

/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0); // `Number.MIN_SAFE_INTEGER` constant
// https://tc39.es/ecma262/#sec-number.min_safe_integer


$({
  target: 'Number',
  stat: true
}, {
  MIN_SAFE_INTEGER: -0x1FFFFFFFFFFFFF
});

/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var parseFloat = __webpack_require__(253); // `Number.parseFloat` method
// https://tc39.es/ecma262/#sec-number.parseFloat
// eslint-disable-next-line es/no-number-parsefloat -- required for testing


$({
  target: 'Number',
  stat: true,
  forced: Number.parseFloat != parseFloat
}, {
  parseFloat: parseFloat
});

/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var parseInt = __webpack_require__(254); // `Number.parseInt` method
// https://tc39.es/ecma262/#sec-number.parseint
// eslint-disable-next-line es/no-number-parseint -- required for testing


$({
  target: 'Number',
  stat: true,
  forced: Number.parseInt != parseInt
}, {
  parseInt: parseInt
});

/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var toIntegerOrInfinity = __webpack_require__(22);

var thisNumberValue = __webpack_require__(152);

var $repeat = __webpack_require__(148);

var log10 = __webpack_require__(252);

var fails = __webpack_require__(4);

var RangeError = global.RangeError;
var String = global.String;
var isFinite = global.isFinite;
var abs = Math.abs;
var floor = Math.floor;
var pow = Math.pow;
var round = Math.round;
var un$ToExponential = uncurryThis(1.0.toExponential);
var repeat = uncurryThis($repeat);
var stringSlice = uncurryThis(''.slice); // Edge 17-

var ROUNDS_PROPERLY = un$ToExponential(-6.9e-11, 4) === '-6.9000e-11' // IE11- && Edge 14-
&& un$ToExponential(1.255, 2) === '1.25e+0' // FF86-, V8 ~ Chrome 49-50
&& un$ToExponential(12345, 3) === '1.235e+4' // FF86-, V8 ~ Chrome 49-50
&& un$ToExponential(25, 0) === '3e+1'; // IE8-

var THROWS_ON_INFINITY_FRACTION = fails(function () {
  un$ToExponential(1, Infinity);
}) && fails(function () {
  un$ToExponential(1, -Infinity);
}); // Safari <11 && FF <50

var PROPER_NON_FINITE_THIS_CHECK = !fails(function () {
  un$ToExponential(Infinity, Infinity);
}) && !fails(function () {
  un$ToExponential(NaN, Infinity);
});
var FORCED = !ROUNDS_PROPERLY || !THROWS_ON_INFINITY_FRACTION || !PROPER_NON_FINITE_THIS_CHECK; // `Number.prototype.toExponential` method
// https://tc39.es/ecma262/#sec-number.prototype.toexponential

$({
  target: 'Number',
  proto: true,
  forced: FORCED
}, {
  toExponential: function toExponential(fractionDigits) {
    var x = thisNumberValue(this);
    if (fractionDigits === undefined) return un$ToExponential(x);
    var f = toIntegerOrInfinity(fractionDigits);
    if (!isFinite(x)) return String(x); // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation

    if (f < 0 || f > 20) throw RangeError('Incorrect fraction digits');
    if (ROUNDS_PROPERLY) return un$ToExponential(x, f);
    var s = '';
    var m = '';
    var e = 0;
    var c = '';
    var d = '';

    if (x < 0) {
      s = '-';
      x = -x;
    }

    if (x === 0) {
      e = 0;
      m = repeat('0', f + 1);
    } else {
      // this block is based on https://gist.github.com/SheetJSDev/1100ad56b9f856c95299ed0e068eea08
      // TODO: improve accuracy with big fraction digits
      var l = log10(x);
      e = floor(l);
      var n = 0;
      var w = pow(10, e - f);
      n = round(x / w);

      if (2 * x >= (2 * n + 1) * w) {
        n += 1;
      }

      if (n >= pow(10, f + 1)) {
        n /= 10;
        e += 1;
      }

      m = String(n);
    }

    if (f !== 0) {
      m = stringSlice(m, 0, 1) + '.' + stringSlice(m, 1);
    }

    if (e === 0) {
      c = '+';
      d = '0';
    } else {
      c = e > 0 ? '+' : '-';
      d = String(abs(e));
    }

    m += 'e' + c + d;
    return s + m;
  }
});

/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var toIntegerOrInfinity = __webpack_require__(22);

var thisNumberValue = __webpack_require__(152);

var $repeat = __webpack_require__(148);

var fails = __webpack_require__(4);

var RangeError = global.RangeError;
var String = global.String;
var floor = Math.floor;
var repeat = uncurryThis($repeat);
var stringSlice = uncurryThis(''.slice);
var un$ToFixed = uncurryThis(1.0.toFixed);

var pow = function pow(x, n, acc) {
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};

var log = function log(x) {
  var n = 0;
  var x2 = x;

  while (x2 >= 4096) {
    n += 12;
    x2 /= 4096;
  }

  while (x2 >= 2) {
    n += 1;
    x2 /= 2;
  }

  return n;
};

var multiply = function multiply(data, n, c) {
  var index = -1;
  var c2 = c;

  while (++index < 6) {
    c2 += n * data[index];
    data[index] = c2 % 1e7;
    c2 = floor(c2 / 1e7);
  }
};

var divide = function divide(data, n) {
  var index = 6;
  var c = 0;

  while (--index >= 0) {
    c += data[index];
    data[index] = floor(c / n);
    c = c % n * 1e7;
  }
};

var dataToString = function dataToString(data) {
  var index = 6;
  var s = '';

  while (--index >= 0) {
    if (s !== '' || index === 0 || data[index] !== 0) {
      var t = String(data[index]);
      s = s === '' ? t : s + repeat('0', 7 - t.length) + t;
    }
  }

  return s;
};

var FORCED = fails(function () {
  return un$ToFixed(0.00008, 3) !== '0.000' || un$ToFixed(0.9, 0) !== '1' || un$ToFixed(1.255, 2) !== '1.25' || un$ToFixed(1000000000000000128.0, 0) !== '1000000000000000128';
}) || !fails(function () {
  // V8 ~ Android 4.3-
  un$ToFixed({});
}); // `Number.prototype.toFixed` method
// https://tc39.es/ecma262/#sec-number.prototype.tofixed

$({
  target: 'Number',
  proto: true,
  forced: FORCED
}, {
  toFixed: function toFixed(fractionDigits) {
    var number = thisNumberValue(this);
    var fractDigits = toIntegerOrInfinity(fractionDigits);
    var data = [0, 0, 0, 0, 0, 0];
    var sign = '';
    var result = '0';
    var e, z, j, k; // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation

    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits'); // eslint-disable-next-line no-self-compare -- NaN check

    if (number != number) return 'NaN';
    if (number <= -1e21 || number >= 1e21) return String(number);

    if (number < 0) {
      sign = '-';
      number = -number;
    }

    if (number > 1e-21) {
      e = log(number * pow(2, 69, 1)) - 69;
      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;

      if (e > 0) {
        multiply(data, 0, z);
        j = fractDigits;

        while (j >= 7) {
          multiply(data, 1e7, 0);
          j -= 7;
        }

        multiply(data, pow(10, j, 1), 0);
        j = e - 1;

        while (j >= 23) {
          divide(data, 1 << 23);
          j -= 23;
        }

        divide(data, 1 << j);
        multiply(data, 1, 1);
        divide(data, 2);
        result = dataToString(data);
      } else {
        multiply(data, 0, z);
        multiply(data, 1 << -e, 0);
        result = dataToString(data) + repeat('0', fractDigits);
      }
    }

    if (fractDigits > 0) {
      k = result.length;
      result = sign + (k <= fractDigits ? '0.' + repeat('0', fractDigits - k) + result : stringSlice(result, 0, k - fractDigits) + '.' + stringSlice(result, k - fractDigits));
    } else {
      result = sign + result;
    }

    return result;
  }
});

/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var fails = __webpack_require__(4);

var thisNumberValue = __webpack_require__(152);

var un$ToPrecision = uncurryThis(1.0.toPrecision);
var FORCED = fails(function () {
  // IE7-
  return un$ToPrecision(1, undefined) !== '1';
}) || !fails(function () {
  // V8 ~ Android 4.3-
  un$ToPrecision({});
}); // `Number.prototype.toPrecision` method
// https://tc39.es/ecma262/#sec-number.prototype.toprecision

$({
  target: 'Number',
  proto: true,
  forced: FORCED
}, {
  toPrecision: function toPrecision(precision) {
    return precision === undefined ? un$ToPrecision(thisNumberValue(this)) : un$ToPrecision(thisNumberValue(this), precision);
  }
});

/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var assign = __webpack_require__(255); // `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing


$({
  target: 'Object',
  stat: true,
  forced: Object.assign !== assign
}, {
  assign: assign
});

/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var DESCRIPTORS = __webpack_require__(6);

var create = __webpack_require__(41); // `Object.create` method
// https://tc39.es/ecma262/#sec-object.create


$({
  target: 'Object',
  stat: true,
  sham: !DESCRIPTORS
}, {
  create: create
});

/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var DESCRIPTORS = __webpack_require__(6);

var FORCED = __webpack_require__(154);

var aCallable = __webpack_require__(29);

var toObject = __webpack_require__(16);

var definePropertyModule = __webpack_require__(12); // `Object.prototype.__defineGetter__` method
// https://tc39.es/ecma262/#sec-object.prototype.__defineGetter__


if (DESCRIPTORS) {
  $({
    target: 'Object',
    proto: true,
    forced: FORCED
  }, {
    __defineGetter__: function __defineGetter__(P, getter) {
      definePropertyModule.f(toObject(this), P, {
        get: aCallable(getter),
        enumerable: true,
        configurable: true
      });
    }
  });
}

/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var DESCRIPTORS = __webpack_require__(6);

var defineProperties = __webpack_require__(141); // `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties


$({
  target: 'Object',
  stat: true,
  forced: !DESCRIPTORS,
  sham: !DESCRIPTORS
}, {
  defineProperties: defineProperties
});

/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var DESCRIPTORS = __webpack_require__(6);

var objectDefinePropertyModile = __webpack_require__(12); // `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty


$({
  target: 'Object',
  stat: true,
  forced: !DESCRIPTORS,
  sham: !DESCRIPTORS
}, {
  defineProperty: objectDefinePropertyModile.f
});

/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var DESCRIPTORS = __webpack_require__(6);

var FORCED = __webpack_require__(154);

var aCallable = __webpack_require__(29);

var toObject = __webpack_require__(16);

var definePropertyModule = __webpack_require__(12); // `Object.prototype.__defineSetter__` method
// https://tc39.es/ecma262/#sec-object.prototype.__defineSetter__


if (DESCRIPTORS) {
  $({
    target: 'Object',
    proto: true,
    forced: FORCED
  }, {
    __defineSetter__: function __defineSetter__(P, setter) {
      definePropertyModule.f(toObject(this), P, {
        set: aCallable(setter),
        enumerable: true,
        configurable: true
      });
    }
  });
}

/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var $entries = __webpack_require__(256).entries; // `Object.entries` method
// https://tc39.es/ecma262/#sec-object.entries


$({
  target: 'Object',
  stat: true
}, {
  entries: function entries(O) {
    return $entries(O);
  }
});

/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var FREEZING = __webpack_require__(119);

var fails = __webpack_require__(4);

var isObject = __webpack_require__(7);

var onFreeze = __webpack_require__(80).onFreeze; // eslint-disable-next-line es/no-object-freeze -- safe


var $freeze = Object.freeze;
var FAILS_ON_PRIMITIVES = fails(function () {
  $freeze(1);
}); // `Object.freeze` method
// https://tc39.es/ecma262/#sec-object.freeze

$({
  target: 'Object',
  stat: true,
  forced: FAILS_ON_PRIMITIVES,
  sham: !FREEZING
}, {
  freeze: function freeze(it) {
    return $freeze && isObject(it) ? $freeze(onFreeze(it)) : it;
  }
});

/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var iterate = __webpack_require__(62);

var createProperty = __webpack_require__(61); // `Object.fromEntries` method
// https://github.com/tc39/proposal-object-from-entries


$({
  target: 'Object',
  stat: true
}, {
  fromEntries: function fromEntries(iterable) {
    var obj = {};
    iterate(iterable, function (k, v) {
      createProperty(obj, k, v);
    }, {
      AS_ENTRIES: true
    });
    return obj;
  }
});

/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var fails = __webpack_require__(4);

var toIndexedObject = __webpack_require__(34);

var nativeGetOwnPropertyDescriptor = __webpack_require__(28).f;

var DESCRIPTORS = __webpack_require__(6);

var FAILS_ON_PRIMITIVES = fails(function () {
  nativeGetOwnPropertyDescriptor(1);
});
var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES; // `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor

$({
  target: 'Object',
  stat: true,
  forced: FORCED,
  sham: !DESCRIPTORS
}, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
  }
});

/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var DESCRIPTORS = __webpack_require__(6);

var ownKeys = __webpack_require__(176);

var toIndexedObject = __webpack_require__(34);

var getOwnPropertyDescriptorModule = __webpack_require__(28);

var createProperty = __webpack_require__(61); // `Object.getOwnPropertyDescriptors` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors


$({
  target: 'Object',
  stat: true,
  sham: !DESCRIPTORS
}, {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIndexedObject(object);
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
    var keys = ownKeys(O);
    var result = {};
    var index = 0;
    var key, descriptor;

    while (keys.length > index) {
      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
      if (descriptor !== undefined) createProperty(result, key, descriptor);
    }

    return result;
  }
});

/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var fails = __webpack_require__(4);

var getOwnPropertyNames = __webpack_require__(180).f; // eslint-disable-next-line es/no-object-getownpropertynames -- required for testing


var FAILS_ON_PRIMITIVES = fails(function () {
  return !Object.getOwnPropertyNames(1);
}); // `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames

$({
  target: 'Object',
  stat: true,
  forced: FAILS_ON_PRIMITIVES
}, {
  getOwnPropertyNames: getOwnPropertyNames
});

/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var fails = __webpack_require__(4);

var toObject = __webpack_require__(16);

var nativeGetPrototypeOf = __webpack_require__(48);

var CORRECT_PROTOTYPE_GETTER = __webpack_require__(182);

var FAILS_ON_PRIMITIVES = fails(function () {
  nativeGetPrototypeOf(1);
}); // `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof

$({
  target: 'Object',
  stat: true,
  forced: FAILS_ON_PRIMITIVES,
  sham: !CORRECT_PROTOTYPE_GETTER
}, {
  getPrototypeOf: function getPrototypeOf(it) {
    return nativeGetPrototypeOf(toObject(it));
  }
});

/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var hasOwn = __webpack_require__(14); // `Object.hasOwn` method
// https://github.com/tc39/proposal-accessible-object-hasownproperty


$({
  target: 'Object',
  stat: true
}, {
  hasOwn: hasOwn
});

/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var is = __webpack_require__(257); // `Object.is` method
// https://tc39.es/ecma262/#sec-object.is


$({
  target: 'Object',
  stat: true
}, {
  is: is
});

/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var $isExtensible = __webpack_require__(150); // `Object.isExtensible` method
// https://tc39.es/ecma262/#sec-object.isextensible
// eslint-disable-next-line es/no-object-isextensible -- safe


$({
  target: 'Object',
  stat: true,
  forced: Object.isExtensible !== $isExtensible
}, {
  isExtensible: $isExtensible
});

/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var fails = __webpack_require__(4);

var isObject = __webpack_require__(7);

var classof = __webpack_require__(37);

var ARRAY_BUFFER_NON_EXTENSIBLE = __webpack_require__(192); // eslint-disable-next-line es/no-object-isfrozen -- safe


var $isFrozen = Object.isFrozen;
var FAILS_ON_PRIMITIVES = fails(function () {
  $isFrozen(1);
}); // `Object.isFrozen` method
// https://tc39.es/ecma262/#sec-object.isfrozen

$({
  target: 'Object',
  stat: true,
  forced: FAILS_ON_PRIMITIVES || ARRAY_BUFFER_NON_EXTENSIBLE
}, {
  isFrozen: function isFrozen(it) {
    if (!isObject(it)) return true;
    if (ARRAY_BUFFER_NON_EXTENSIBLE && classof(it) == 'ArrayBuffer') return true;
    return $isFrozen ? $isFrozen(it) : false;
  }
});

/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var fails = __webpack_require__(4);

var isObject = __webpack_require__(7);

var classof = __webpack_require__(37);

var ARRAY_BUFFER_NON_EXTENSIBLE = __webpack_require__(192); // eslint-disable-next-line es/no-object-issealed -- safe


var $isSealed = Object.isSealed;
var FAILS_ON_PRIMITIVES = fails(function () {
  $isSealed(1);
}); // `Object.isSealed` method
// https://tc39.es/ecma262/#sec-object.issealed

$({
  target: 'Object',
  stat: true,
  forced: FAILS_ON_PRIMITIVES || ARRAY_BUFFER_NON_EXTENSIBLE
}, {
  isSealed: function isSealed(it) {
    if (!isObject(it)) return true;
    if (ARRAY_BUFFER_NON_EXTENSIBLE && classof(it) == 'ArrayBuffer') return true;
    return $isSealed ? $isSealed(it) : false;
  }
});

/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var toObject = __webpack_require__(16);

var nativeKeys = __webpack_require__(112);

var fails = __webpack_require__(4);

var FAILS_ON_PRIMITIVES = fails(function () {
  nativeKeys(1);
}); // `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys

$({
  target: 'Object',
  stat: true,
  forced: FAILS_ON_PRIMITIVES
}, {
  keys: function keys(it) {
    return nativeKeys(toObject(it));
  }
});

/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var DESCRIPTORS = __webpack_require__(6);

var FORCED = __webpack_require__(154);

var toObject = __webpack_require__(16);

var toPropertyKey = __webpack_require__(70);

var getPrototypeOf = __webpack_require__(48);

var getOwnPropertyDescriptor = __webpack_require__(28).f; // `Object.prototype.__lookupGetter__` method
// https://tc39.es/ecma262/#sec-object.prototype.__lookupGetter__


if (DESCRIPTORS) {
  $({
    target: 'Object',
    proto: true,
    forced: FORCED
  }, {
    __lookupGetter__: function __lookupGetter__(P) {
      var O = toObject(this);
      var key = toPropertyKey(P);
      var desc;

      do {
        if (desc = getOwnPropertyDescriptor(O, key)) return desc.get;
      } while (O = getPrototypeOf(O));
    }
  });
}

/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var DESCRIPTORS = __webpack_require__(6);

var FORCED = __webpack_require__(154);

var toObject = __webpack_require__(16);

var toPropertyKey = __webpack_require__(70);

var getPrototypeOf = __webpack_require__(48);

var getOwnPropertyDescriptor = __webpack_require__(28).f; // `Object.prototype.__lookupSetter__` method
// https://tc39.es/ecma262/#sec-object.prototype.__lookupSetter__


if (DESCRIPTORS) {
  $({
    target: 'Object',
    proto: true,
    forced: FORCED
  }, {
    __lookupSetter__: function __lookupSetter__(P) {
      var O = toObject(this);
      var key = toPropertyKey(P);
      var desc;

      do {
        if (desc = getOwnPropertyDescriptor(O, key)) return desc.set;
      } while (O = getPrototypeOf(O));
    }
  });
}

/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var isObject = __webpack_require__(7);

var onFreeze = __webpack_require__(80).onFreeze;

var FREEZING = __webpack_require__(119);

var fails = __webpack_require__(4); // eslint-disable-next-line es/no-object-preventextensions -- safe


var $preventExtensions = Object.preventExtensions;
var FAILS_ON_PRIMITIVES = fails(function () {
  $preventExtensions(1);
}); // `Object.preventExtensions` method
// https://tc39.es/ecma262/#sec-object.preventextensions

$({
  target: 'Object',
  stat: true,
  forced: FAILS_ON_PRIMITIVES,
  sham: !FREEZING
}, {
  preventExtensions: function preventExtensions(it) {
    return $preventExtensions && isObject(it) ? $preventExtensions(onFreeze(it)) : it;
  }
});

/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var isObject = __webpack_require__(7);

var onFreeze = __webpack_require__(80).onFreeze;

var FREEZING = __webpack_require__(119);

var fails = __webpack_require__(4); // eslint-disable-next-line es/no-object-seal -- safe


var $seal = Object.seal;
var FAILS_ON_PRIMITIVES = fails(function () {
  $seal(1);
}); // `Object.seal` method
// https://tc39.es/ecma262/#sec-object.seal

$({
  target: 'Object',
  stat: true,
  forced: FAILS_ON_PRIMITIVES,
  sham: !FREEZING
}, {
  seal: function seal(it) {
    return $seal && isObject(it) ? $seal(onFreeze(it)) : it;
  }
});

/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var setPrototypeOf = __webpack_require__(53); // `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof


$({
  target: 'Object',
  stat: true
}, {
  setPrototypeOf: setPrototypeOf
});

/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__(179);

var redefine = __webpack_require__(18);

var toString = __webpack_require__(479); // `Object.prototype.toString` method
// https://tc39.es/ecma262/#sec-object.prototype.tostring


if (!TO_STRING_TAG_SUPPORT) {
  redefine(Object.prototype, 'toString', toString, {
    unsafe: true
  });
}

/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var TO_STRING_TAG_SUPPORT = __webpack_require__(179);

var classof = __webpack_require__(73); // `Object.prototype.toString` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.tostring


module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};

/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var $values = __webpack_require__(256).values; // `Object.values` method
// https://tc39.es/ecma262/#sec-object.values


$({
  target: 'Object',
  stat: true
}, {
  values: function values(O) {
    return $values(O);
  }
});

/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var $parseFloat = __webpack_require__(253); // `parseFloat` method
// https://tc39.es/ecma262/#sec-parsefloat-string


$({
  global: true,
  forced: parseFloat != $parseFloat
}, {
  parseFloat: $parseFloat
});

/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var $parseInt = __webpack_require__(254); // `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix


$({
  global: true,
  forced: parseInt != $parseInt
}, {
  parseInt: $parseInt
});

/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var IS_PURE = __webpack_require__(25);

var global = __webpack_require__(2);

var getBuiltIn = __webpack_require__(19);

var call = __webpack_require__(13);

var NativePromise = __webpack_require__(258);

var redefine = __webpack_require__(18);

var redefineAll = __webpack_require__(93);

var setPrototypeOf = __webpack_require__(53);

var setToStringTag = __webpack_require__(47);

var setSpecies = __webpack_require__(92);

var aCallable = __webpack_require__(29);

var isCallable = __webpack_require__(9);

var isObject = __webpack_require__(7);

var anInstance = __webpack_require__(54);

var inspectSource = __webpack_require__(138);

var iterate = __webpack_require__(62);

var checkCorrectnessOfIteration = __webpack_require__(144);

var speciesConstructor = __webpack_require__(94);

var task = __webpack_require__(195).set;

var microtask = __webpack_require__(260);

var promiseResolve = __webpack_require__(261);

var hostReportErrors = __webpack_require__(486);

var newPromiseCapabilityModule = __webpack_require__(155);

var perform = __webpack_require__(196);

var InternalStateModule = __webpack_require__(21);

var isForced = __webpack_require__(111);

var wellKnownSymbol = __webpack_require__(8);

var IS_BROWSER = __webpack_require__(487);

var IS_NODE = __webpack_require__(79);

var V8_VERSION = __webpack_require__(71);

var SPECIES = wellKnownSymbol('species');
var PROMISE = 'Promise';
var getInternalState = InternalStateModule.getterFor(PROMISE);
var setInternalState = InternalStateModule.set;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var NativePromisePrototype = NativePromise && NativePromise.prototype;
var PromiseConstructor = NativePromise;
var PromisePrototype = NativePromisePrototype;
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;
var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var NATIVE_REJECTION_EVENT = isCallable(global.PromiseRejectionEvent);
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;
var SUBCLASSING = false;
var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;
var FORCED = isForced(PROMISE, function () {
  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(PromiseConstructor);
  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(PromiseConstructor); // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
  // We can't detect it synchronously, so just check versions

  if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true; // We need Promise#finally in the pure version for preventing prototype pollution

  if (IS_PURE && !PromisePrototype['finally']) return true; // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679

  if (V8_VERSION >= 51 && /native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) return false; // Detect correctness of subclassing with @@species support

  var promise = new PromiseConstructor(function (resolve) {
    resolve(1);
  });

  var FakePromise = function FakePromise(exec) {
    exec(function () {
      /* empty */
    }, function () {
      /* empty */
    });
  };

  var constructor = promise.constructor = {};
  constructor[SPECIES] = FakePromise;
  SUBCLASSING = promise.then(function () {
    /* empty */
  }) instanceof FakePromise;
  if (!SUBCLASSING) return true; // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test

  return !GLOBAL_CORE_JS_PROMISE && IS_BROWSER && !NATIVE_REJECTION_EVENT;
});
var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {
  PromiseConstructor.all(iterable)['catch'](function () {
    /* empty */
  });
}); // helpers

var isThenable = function isThenable(it) {
  var then;
  return isObject(it) && isCallable(then = it.then) ? then : false;
};

var notify = function notify(state, isReject) {
  if (state.notified) return;
  state.notified = true;
  var chain = state.reactions;
  microtask(function () {
    var value = state.value;
    var ok = state.state == FULFILLED;
    var index = 0; // variable length - can't use forEach

    while (chain.length > index) {
      var reaction = chain[index++];
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;

      try {
        if (handler) {
          if (!ok) {
            if (state.rejection === UNHANDLED) onHandleUnhandled(state);
            state.rejection = HANDLED;
          }

          if (handler === true) result = value;else {
            if (domain) domain.enter();
            result = handler(value); // can throw

            if (domain) {
              domain.exit();
              exited = true;
            }
          }

          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            call(then, result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (error) {
        if (domain && !exited) domain.exit();
        reject(error);
      }
    }

    state.reactions = [];
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(state);
  });
};

var dispatchEvent = function dispatchEvent(name, promise, reason) {
  var event, handler;

  if (DISPATCH_EVENT) {
    event = document.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global.dispatchEvent(event);
  } else event = {
    promise: promise,
    reason: reason
  };

  if (!NATIVE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function onUnhandled(state) {
  call(task, global, function () {
    var promise = state.facade;
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;

    if (IS_UNHANDLED) {
      result = perform(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      }); // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should

      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function isUnhandled(state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function onHandleUnhandled(state) {
  call(task, global, function () {
    var promise = state.facade;

    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind = function bind(fn, state, unwrap) {
  return function (value) {
    fn(state, value, unwrap);
  };
};

var internalReject = function internalReject(state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(state, true);
};

var internalResolve = function internalResolve(state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;

  try {
    if (state.facade === value) throw TypeError("Promise can't be resolved itself");
    var then = isThenable(value);

    if (then) {
      microtask(function () {
        var wrapper = {
          done: false
        };

        try {
          call(then, value, bind(internalResolve, wrapper, state), bind(internalReject, wrapper, state));
        } catch (error) {
          internalReject(wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(state, false);
    }
  } catch (error) {
    internalReject({
      done: false
    }, error, state);
  }
}; // constructor polyfill


if (FORCED) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromisePrototype);
    aCallable(executor);
    call(Internal, this);
    var state = getInternalState(this);

    try {
      executor(bind(internalResolve, state), bind(internalReject, state));
    } catch (error) {
      internalReject(state, error);
    }
  };

  PromisePrototype = PromiseConstructor.prototype; // eslint-disable-next-line no-unused-vars -- required for `.length`

  Internal = function Promise(executor) {
    setInternalState(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: [],
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };

  Internal.prototype = redefineAll(PromisePrototype, {
    // `Promise.prototype.then` method
    // https://tc39.es/ecma262/#sec-promise.prototype.then
    then: function then(onFulfilled, onRejected) {
      var state = getInternalPromiseState(this);
      var reactions = state.reactions;
      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
      reaction.ok = isCallable(onFulfilled) ? onFulfilled : true;
      reaction.fail = isCallable(onRejected) && onRejected;
      reaction.domain = IS_NODE ? process.domain : undefined;
      state.parent = true;
      reactions[reactions.length] = reaction;
      if (state.state != PENDING) notify(state, false);
      return reaction.promise;
    },
    // `Promise.prototype.catch` method
    // https://tc39.es/ecma262/#sec-promise.prototype.catch
    'catch': function _catch(onRejected) {
      return this.then(undefined, onRejected);
    }
  });

  OwnPromiseCapability = function OwnPromiseCapability() {
    var promise = new Internal();
    var state = getInternalState(promise);
    this.promise = promise;
    this.resolve = bind(internalResolve, state);
    this.reject = bind(internalReject, state);
  };

  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {
    return C === PromiseConstructor || C === PromiseWrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);
  };

  if (!IS_PURE && isCallable(NativePromise) && NativePromisePrototype !== Object.prototype) {
    nativeThen = NativePromisePrototype.then;

    if (!SUBCLASSING) {
      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
      redefine(NativePromisePrototype, 'then', function then(onFulfilled, onRejected) {
        var that = this;
        return new PromiseConstructor(function (resolve, reject) {
          call(nativeThen, that, resolve, reject);
        }).then(onFulfilled, onRejected); // https://github.com/zloirock/core-js/issues/640
      }, {
        unsafe: true
      }); // makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`

      redefine(NativePromisePrototype, 'catch', PromisePrototype['catch'], {
        unsafe: true
      });
    } // make `.constructor === Promise` work for native promise-based APIs


    try {
      delete NativePromisePrototype.constructor;
    } catch (error) {
      /* empty */
    } // make `instanceof Promise` work for native promise-based APIs


    if (setPrototypeOf) {
      setPrototypeOf(NativePromisePrototype, PromisePrototype);
    }
  }
}

$({
  global: true,
  wrap: true,
  forced: FORCED
}, {
  Promise: PromiseConstructor
});
setToStringTag(PromiseConstructor, PROMISE, false, true);
setSpecies(PROMISE);
PromiseWrapper = getBuiltIn(PROMISE); // statics

$({
  target: PROMISE,
  stat: true,
  forced: FORCED
}, {
  // `Promise.reject` method
  // https://tc39.es/ecma262/#sec-promise.reject
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    call(capability.reject, undefined, r);
    return capability.promise;
  }
});
$({
  target: PROMISE,
  stat: true,
  forced: IS_PURE || FORCED
}, {
  // `Promise.resolve` method
  // https://tc39.es/ecma262/#sec-promise.resolve
  resolve: function resolve(x) {
    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
  }
});
$({
  target: PROMISE,
  stat: true,
  forced: INCORRECT_ITERATION
}, {
  // `Promise.all` method
  // https://tc39.es/ecma262/#sec-promise.all
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aCallable(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        remaining++;
        call($promiseResolve, C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  },
  // `Promise.race` method
  // https://tc39.es/ecma262/#sec-promise.race
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aCallable(C.resolve);
      iterate(iterable, function (promise) {
        call($promiseResolve, C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

var userAgent = __webpack_require__(58);

var global = __webpack_require__(2);

module.exports = /ipad|iphone|ipod/i.test(userAgent) && global.Pebble !== undefined;

/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

var userAgent = __webpack_require__(58);

module.exports = /web0s(?!.*chrome)/i.test(userAgent);

/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

module.exports = function (a, b) {
  var console = global.console;

  if (console && console.error) {
    arguments.length == 1 ? console.error(a) : console.error(a, b);
  }
};

/***/ }),
/* 487 */
/***/ (function(module, exports) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

module.exports = (typeof window === "undefined" ? "undefined" : _typeof(window)) == 'object';

/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var call = __webpack_require__(13);

var aCallable = __webpack_require__(29);

var newPromiseCapabilityModule = __webpack_require__(155);

var perform = __webpack_require__(196);

var iterate = __webpack_require__(62); // `Promise.allSettled` method
// https://tc39.es/ecma262/#sec-promise.allsettled


$({
  target: 'Promise',
  stat: true
}, {
  allSettled: function allSettled(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var promiseResolve = aCallable(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        remaining++;
        call(promiseResolve, C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = {
            status: 'fulfilled',
            value: value
          };
          --remaining || resolve(values);
        }, function (error) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = {
            status: 'rejected',
            reason: error
          };
          --remaining || resolve(values);
        });
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var aCallable = __webpack_require__(29);

var getBuiltIn = __webpack_require__(19);

var call = __webpack_require__(13);

var newPromiseCapabilityModule = __webpack_require__(155);

var perform = __webpack_require__(196);

var iterate = __webpack_require__(62);

var PROMISE_ANY_ERROR = 'No one promise resolved'; // `Promise.any` method
// https://tc39.es/ecma262/#sec-promise.any

$({
  target: 'Promise',
  stat: true
}, {
  any: function any(iterable) {
    var C = this;
    var AggregateError = getBuiltIn('AggregateError');
    var capability = newPromiseCapabilityModule.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var promiseResolve = aCallable(C.resolve);
      var errors = [];
      var counter = 0;
      var remaining = 1;
      var alreadyResolved = false;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyRejected = false;
        remaining++;
        call(promiseResolve, C, promise).then(function (value) {
          if (alreadyRejected || alreadyResolved) return;
          alreadyResolved = true;
          resolve(value);
        }, function (error) {
          if (alreadyRejected || alreadyResolved) return;
          alreadyRejected = true;
          errors[index] = error;
          --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));
        });
      });
      --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var IS_PURE = __webpack_require__(25);

var NativePromise = __webpack_require__(258);

var fails = __webpack_require__(4);

var getBuiltIn = __webpack_require__(19);

var isCallable = __webpack_require__(9);

var speciesConstructor = __webpack_require__(94);

var promiseResolve = __webpack_require__(261);

var redefine = __webpack_require__(18); // Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829


var NON_GENERIC = !!NativePromise && fails(function () {
  NativePromise.prototype['finally'].call({
    then: function then() {
      /* empty */
    }
  }, function () {
    /* empty */
  });
}); // `Promise.prototype.finally` method
// https://tc39.es/ecma262/#sec-promise.prototype.finally

$({
  target: 'Promise',
  proto: true,
  real: true,
  forced: NON_GENERIC
}, {
  'finally': function _finally(onFinally) {
    var C = speciesConstructor(this, getBuiltIn('Promise'));
    var isFunction = isCallable(onFinally);
    return this.then(isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () {
        return x;
      });
    } : onFinally, isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () {
        throw e;
      });
    } : onFinally);
  }
}); // makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`

if (!IS_PURE && isCallable(NativePromise)) {
  var method = getBuiltIn('Promise').prototype['finally'];

  if (NativePromise.prototype['finally'] !== method) {
    redefine(NativePromise.prototype, 'finally', method, {
      unsafe: true
    });
  }
}

/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var functionApply = __webpack_require__(40);

var aCallable = __webpack_require__(29);

var anObject = __webpack_require__(5);

var fails = __webpack_require__(4); // MS Edge argumentsList argument is optional


var OPTIONAL_ARGUMENTS_LIST = !fails(function () {
  // eslint-disable-next-line es/no-reflect -- required for testing
  Reflect.apply(function () {
    /* empty */
  });
}); // `Reflect.apply` method
// https://tc39.es/ecma262/#sec-reflect.apply

$({
  target: 'Reflect',
  stat: true,
  forced: OPTIONAL_ARGUMENTS_LIST
}, {
  apply: function apply(target, thisArgument, argumentsList) {
    return functionApply(aCallable(target), thisArgument, anObject(argumentsList));
  }
});

/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var getBuiltIn = __webpack_require__(19);

var apply = __webpack_require__(40);

var bind = __webpack_require__(249);

var aConstructor = __webpack_require__(190);

var anObject = __webpack_require__(5);

var isObject = __webpack_require__(7);

var create = __webpack_require__(41);

var fails = __webpack_require__(4);

var nativeConstruct = getBuiltIn('Reflect', 'construct');
var ObjectPrototype = Object.prototype;
var push = [].push; // `Reflect.construct` method
// https://tc39.es/ecma262/#sec-reflect.construct
// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it

var NEW_TARGET_BUG = fails(function () {
  function F() {
    /* empty */
  }

  return !(nativeConstruct(function () {
    /* empty */
  }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  nativeConstruct(function () {
    /* empty */
  });
});
var FORCED = NEW_TARGET_BUG || ARGS_BUG;
$({
  target: 'Reflect',
  stat: true,
  forced: FORCED,
  sham: FORCED
}, {
  construct: function construct(Target, args
  /* , newTarget */
  ) {
    aConstructor(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aConstructor(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);

    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0:
          return new Target();

        case 1:
          return new Target(args[0]);

        case 2:
          return new Target(args[0], args[1]);

        case 3:
          return new Target(args[0], args[1], args[2]);

        case 4:
          return new Target(args[0], args[1], args[2], args[3]);
      } // w/o altered newTarget, lot of arguments case


      var $args = [null];
      apply(push, $args, args);
      return new (apply(bind, Target, $args))();
    } // with altered newTarget, not support built-in constructors


    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : ObjectPrototype);
    var result = apply(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});

/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var DESCRIPTORS = __webpack_require__(6);

var anObject = __webpack_require__(5);

var toPropertyKey = __webpack_require__(70);

var definePropertyModule = __webpack_require__(12);

var fails = __webpack_require__(4); // MS Edge has broken Reflect.defineProperty - throwing instead of returning false


var ERROR_INSTEAD_OF_FALSE = fails(function () {
  // eslint-disable-next-line es/no-reflect -- required for testing
  Reflect.defineProperty(definePropertyModule.f({}, 1, {
    value: 1
  }), 1, {
    value: 2
  });
}); // `Reflect.defineProperty` method
// https://tc39.es/ecma262/#sec-reflect.defineproperty

$({
  target: 'Reflect',
  stat: true,
  forced: ERROR_INSTEAD_OF_FALSE,
  sham: !DESCRIPTORS
}, {
  defineProperty: function defineProperty(target, propertyKey, attributes) {
    anObject(target);
    var key = toPropertyKey(propertyKey);
    anObject(attributes);

    try {
      definePropertyModule.f(target, key, attributes);
      return true;
    } catch (error) {
      return false;
    }
  }
});

/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var anObject = __webpack_require__(5);

var getOwnPropertyDescriptor = __webpack_require__(28).f; // `Reflect.deleteProperty` method
// https://tc39.es/ecma262/#sec-reflect.deleteproperty


$({
  target: 'Reflect',
  stat: true
}, {
  deleteProperty: function deleteProperty(target, propertyKey) {
    var descriptor = getOwnPropertyDescriptor(anObject(target), propertyKey);
    return descriptor && !descriptor.configurable ? false : delete target[propertyKey];
  }
});

/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var call = __webpack_require__(13);

var isObject = __webpack_require__(7);

var anObject = __webpack_require__(5);

var isDataDescriptor = __webpack_require__(262);

var getOwnPropertyDescriptorModule = __webpack_require__(28);

var getPrototypeOf = __webpack_require__(48); // `Reflect.get` method
// https://tc39.es/ecma262/#sec-reflect.get


function get(target, propertyKey
/* , receiver */
) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var descriptor, prototype;
  if (anObject(target) === receiver) return target[propertyKey];
  descriptor = getOwnPropertyDescriptorModule.f(target, propertyKey);
  if (descriptor) return isDataDescriptor(descriptor) ? descriptor.value : descriptor.get === undefined ? undefined : call(descriptor.get, receiver);
  if (isObject(prototype = getPrototypeOf(target))) return get(prototype, propertyKey, receiver);
}

$({
  target: 'Reflect',
  stat: true
}, {
  get: get
});

/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var DESCRIPTORS = __webpack_require__(6);

var anObject = __webpack_require__(5);

var getOwnPropertyDescriptorModule = __webpack_require__(28); // `Reflect.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-reflect.getownpropertydescriptor


$({
  target: 'Reflect',
  stat: true,
  sham: !DESCRIPTORS
}, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
    return getOwnPropertyDescriptorModule.f(anObject(target), propertyKey);
  }
});

/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var anObject = __webpack_require__(5);

var objectGetPrototypeOf = __webpack_require__(48);

var CORRECT_PROTOTYPE_GETTER = __webpack_require__(182); // `Reflect.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-reflect.getprototypeof


$({
  target: 'Reflect',
  stat: true,
  sham: !CORRECT_PROTOTYPE_GETTER
}, {
  getPrototypeOf: function getPrototypeOf(target) {
    return objectGetPrototypeOf(anObject(target));
  }
});

/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0); // `Reflect.has` method
// https://tc39.es/ecma262/#sec-reflect.has


$({
  target: 'Reflect',
  stat: true
}, {
  has: function has(target, propertyKey) {
    return propertyKey in target;
  }
});

/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var anObject = __webpack_require__(5);

var $isExtensible = __webpack_require__(150); // `Reflect.isExtensible` method
// https://tc39.es/ecma262/#sec-reflect.isextensible


$({
  target: 'Reflect',
  stat: true
}, {
  isExtensible: function isExtensible(target) {
    anObject(target);
    return $isExtensible(target);
  }
});

/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var ownKeys = __webpack_require__(176); // `Reflect.ownKeys` method
// https://tc39.es/ecma262/#sec-reflect.ownkeys


$({
  target: 'Reflect',
  stat: true
}, {
  ownKeys: ownKeys
});

/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var getBuiltIn = __webpack_require__(19);

var anObject = __webpack_require__(5);

var FREEZING = __webpack_require__(119); // `Reflect.preventExtensions` method
// https://tc39.es/ecma262/#sec-reflect.preventextensions


$({
  target: 'Reflect',
  stat: true,
  sham: !FREEZING
}, {
  preventExtensions: function preventExtensions(target) {
    anObject(target);

    try {
      var objectPreventExtensions = getBuiltIn('Object', 'preventExtensions');
      if (objectPreventExtensions) objectPreventExtensions(target);
      return true;
    } catch (error) {
      return false;
    }
  }
});

/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var call = __webpack_require__(13);

var anObject = __webpack_require__(5);

var isObject = __webpack_require__(7);

var isDataDescriptor = __webpack_require__(262);

var fails = __webpack_require__(4);

var definePropertyModule = __webpack_require__(12);

var getOwnPropertyDescriptorModule = __webpack_require__(28);

var getPrototypeOf = __webpack_require__(48);

var createPropertyDescriptor = __webpack_require__(46); // `Reflect.set` method
// https://tc39.es/ecma262/#sec-reflect.set


function set(target, propertyKey, V
/* , receiver */
) {
  var receiver = arguments.length < 4 ? target : arguments[3];
  var ownDescriptor = getOwnPropertyDescriptorModule.f(anObject(target), propertyKey);
  var existingDescriptor, prototype, setter;

  if (!ownDescriptor) {
    if (isObject(prototype = getPrototypeOf(target))) {
      return set(prototype, propertyKey, V, receiver);
    }

    ownDescriptor = createPropertyDescriptor(0);
  }

  if (isDataDescriptor(ownDescriptor)) {
    if (ownDescriptor.writable === false || !isObject(receiver)) return false;

    if (existingDescriptor = getOwnPropertyDescriptorModule.f(receiver, propertyKey)) {
      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
      existingDescriptor.value = V;
      definePropertyModule.f(receiver, propertyKey, existingDescriptor);
    } else definePropertyModule.f(receiver, propertyKey, createPropertyDescriptor(0, V));
  } else {
    setter = ownDescriptor.set;
    if (setter === undefined) return false;
    call(setter, receiver, V);
  }

  return true;
} // MS Edge 17-18 Reflect.set allows setting the property to object
// with non-writable property on the prototype


var MS_EDGE_BUG = fails(function () {
  var Constructor = function Constructor() {
    /* empty */
  };

  var object = definePropertyModule.f(new Constructor(), 'a', {
    configurable: true
  }); // eslint-disable-next-line es/no-reflect -- required for testing

  return Reflect.set(Constructor.prototype, 'a', 1, object) !== false;
});
$({
  target: 'Reflect',
  stat: true,
  forced: MS_EDGE_BUG
}, {
  set: set
});

/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var anObject = __webpack_require__(5);

var aPossiblePrototype = __webpack_require__(236);

var objectSetPrototypeOf = __webpack_require__(53); // `Reflect.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-reflect.setprototypeof


if (objectSetPrototypeOf) $({
  target: 'Reflect',
  stat: true
}, {
  setPrototypeOf: function setPrototypeOf(target, proto) {
    anObject(target);
    aPossiblePrototype(proto);

    try {
      objectSetPrototypeOf(target, proto);
      return true;
    } catch (error) {
      return false;
    }
  }
});

/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var setToStringTag = __webpack_require__(47);

$({
  global: true
}, {
  Reflect: {}
}); // Reflect[@@toStringTag] property
// https://tc39.es/ecma262/#sec-reflect-@@tostringtag

setToStringTag(global.Reflect, 'Reflect', true);

/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(6);

var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var isForced = __webpack_require__(111);

var inheritIfRequired = __webpack_require__(91);

var createNonEnumerableProperty = __webpack_require__(30);

var defineProperty = __webpack_require__(12).f;

var getOwnPropertyNames = __webpack_require__(72).f;

var isPrototypeOf = __webpack_require__(38);

var isRegExp = __webpack_require__(120);

var toString = __webpack_require__(10);

var regExpFlags = __webpack_require__(81);

var stickyHelpers = __webpack_require__(156);

var redefine = __webpack_require__(18);

var fails = __webpack_require__(4);

var hasOwn = __webpack_require__(14);

var enforceInternalState = __webpack_require__(21).enforce;

var setSpecies = __webpack_require__(92);

var wellKnownSymbol = __webpack_require__(8);

var UNSUPPORTED_DOT_ALL = __webpack_require__(197);

var UNSUPPORTED_NCG = __webpack_require__(263);

var MATCH = wellKnownSymbol('match');
var NativeRegExp = global.RegExp;
var RegExpPrototype = NativeRegExp.prototype;
var SyntaxError = global.SyntaxError;
var getFlags = uncurryThis(regExpFlags);
var exec = uncurryThis(RegExpPrototype.exec);
var charAt = uncurryThis(''.charAt);
var replace = uncurryThis(''.replace);
var stringIndexOf = uncurryThis(''.indexOf);
var stringSlice = uncurryThis(''.slice); // TODO: Use only propper RegExpIdentifierName

var IS_NCG = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/;
var re1 = /a/g;
var re2 = /a/g; // "new" should create a new object, old webkit bug

var CORRECT_NEW = new NativeRegExp(re1) !== re1;
var MISSED_STICKY = stickyHelpers.MISSED_STICKY;
var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;
var BASE_FORCED = DESCRIPTORS && (!CORRECT_NEW || MISSED_STICKY || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG || fails(function () {
  re2[MATCH] = false; // RegExp constructor can alter flags and IsRegExp works correct with @@match

  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';
}));

var handleDotAll = function handleDotAll(string) {
  var length = string.length;
  var index = 0;
  var result = '';
  var brackets = false;
  var chr;

  for (; index <= length; index++) {
    chr = charAt(string, index);

    if (chr === '\\') {
      result += chr + charAt(string, ++index);
      continue;
    }

    if (!brackets && chr === '.') {
      result += '[\\s\\S]';
    } else {
      if (chr === '[') {
        brackets = true;
      } else if (chr === ']') {
        brackets = false;
      }

      result += chr;
    }
  }

  return result;
};

var handleNCG = function handleNCG(string) {
  var length = string.length;
  var index = 0;
  var result = '';
  var named = [];
  var names = {};
  var brackets = false;
  var ncg = false;
  var groupid = 0;
  var groupname = '';
  var chr;

  for (; index <= length; index++) {
    chr = charAt(string, index);

    if (chr === '\\') {
      chr = chr + charAt(string, ++index);
    } else if (chr === ']') {
      brackets = false;
    } else if (!brackets) switch (true) {
      case chr === '[':
        brackets = true;
        break;

      case chr === '(':
        if (exec(IS_NCG, stringSlice(string, index + 1))) {
          index += 2;
          ncg = true;
        }

        result += chr;
        groupid++;
        continue;

      case chr === '>' && ncg:
        if (groupname === '' || hasOwn(names, groupname)) {
          throw new SyntaxError('Invalid capture group name');
        }

        names[groupname] = true;
        named[named.length] = [groupname, groupid];
        ncg = false;
        groupname = '';
        continue;
    }

    if (ncg) groupname += chr;else result += chr;
  }

  return [result, named];
}; // `RegExp` constructor
// https://tc39.es/ecma262/#sec-regexp-constructor


if (isForced('RegExp', BASE_FORCED)) {
  var RegExpWrapper = function RegExp(pattern, flags) {
    var thisIsRegExp = isPrototypeOf(RegExpPrototype, this);
    var patternIsRegExp = isRegExp(pattern);
    var flagsAreUndefined = flags === undefined;
    var groups = [];
    var rawPattern = pattern;
    var rawFlags, dotAll, sticky, handled, result, state;

    if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {
      return pattern;
    }

    if (patternIsRegExp || isPrototypeOf(RegExpPrototype, pattern)) {
      pattern = pattern.source;
      if (flagsAreUndefined) flags = 'flags' in rawPattern ? rawPattern.flags : getFlags(rawPattern);
    }

    pattern = pattern === undefined ? '' : toString(pattern);
    flags = flags === undefined ? '' : toString(flags);
    rawPattern = pattern;

    if (UNSUPPORTED_DOT_ALL && 'dotAll' in re1) {
      dotAll = !!flags && stringIndexOf(flags, 's') > -1;
      if (dotAll) flags = replace(flags, /s/g, '');
    }

    rawFlags = flags;

    if (MISSED_STICKY && 'sticky' in re1) {
      sticky = !!flags && stringIndexOf(flags, 'y') > -1;
      if (sticky && UNSUPPORTED_Y) flags = replace(flags, /y/g, '');
    }

    if (UNSUPPORTED_NCG) {
      handled = handleNCG(pattern);
      pattern = handled[0];
      groups = handled[1];
    }

    result = inheritIfRequired(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);

    if (dotAll || sticky || groups.length) {
      state = enforceInternalState(result);

      if (dotAll) {
        state.dotAll = true;
        state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);
      }

      if (sticky) state.sticky = true;
      if (groups.length) state.groups = groups;
    }

    if (pattern !== rawPattern) try {
      // fails in old engines, but we have no alternatives for unsupported regex syntax
      createNonEnumerableProperty(result, 'source', rawPattern === '' ? '(?:)' : rawPattern);
    } catch (error) {
      /* empty */
    }
    return result;
  };

  var proxy = function proxy(key) {
    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {
      configurable: true,
      get: function get() {
        return NativeRegExp[key];
      },
      set: function set(it) {
        NativeRegExp[key] = it;
      }
    });
  };

  for (var keys = getOwnPropertyNames(NativeRegExp), index = 0; keys.length > index;) {
    proxy(keys[index++]);
  }

  RegExpPrototype.constructor = RegExpWrapper;
  RegExpWrapper.prototype = RegExpPrototype;
  redefine(global, 'RegExp', RegExpWrapper);
} // https://tc39.es/ecma262/#sec-get-regexp-@@species


setSpecies('RegExp');

/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var DESCRIPTORS = __webpack_require__(6);

var UNSUPPORTED_DOT_ALL = __webpack_require__(197);

var classof = __webpack_require__(37);

var defineProperty = __webpack_require__(12).f;

var getInternalState = __webpack_require__(21).get;

var RegExpPrototype = RegExp.prototype;
var TypeError = global.TypeError; // `RegExp.prototype.dotAll` getter
// https://tc39.es/ecma262/#sec-get-regexp.prototype.dotall

if (DESCRIPTORS && UNSUPPORTED_DOT_ALL) {
  defineProperty(RegExpPrototype, 'dotAll', {
    configurable: true,
    get: function get() {
      if (this === RegExpPrototype) return undefined; // We can't use InternalStateModule.getterFor because
      // we don't add metadata for regexps created by a literal.

      if (classof(this) === 'RegExp') {
        return !!getInternalState(this).dotAll;
      }

      throw TypeError('Incompatible receiver, RegExp required');
    }
  });
}

/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(6);

var objectDefinePropertyModule = __webpack_require__(12);

var regExpFlags = __webpack_require__(81);

var fails = __webpack_require__(4);

var RegExpPrototype = RegExp.prototype;
var FORCED = DESCRIPTORS && fails(function () {
  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
  return Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call({
    dotAll: true,
    sticky: true
  }) !== 'sy';
}); // `RegExp.prototype.flags` getter
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags

if (FORCED) objectDefinePropertyModule.f(RegExpPrototype, 'flags', {
  configurable: true,
  get: regExpFlags
});

/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var DESCRIPTORS = __webpack_require__(6);

var MISSED_STICKY = __webpack_require__(156).MISSED_STICKY;

var classof = __webpack_require__(37);

var defineProperty = __webpack_require__(12).f;

var getInternalState = __webpack_require__(21).get;

var RegExpPrototype = RegExp.prototype;
var TypeError = global.TypeError; // `RegExp.prototype.sticky` getter
// https://tc39.es/ecma262/#sec-get-regexp.prototype.sticky

if (DESCRIPTORS && MISSED_STICKY) {
  defineProperty(RegExpPrototype, 'sticky', {
    configurable: true,
    get: function get() {
      if (this === RegExpPrototype) return undefined; // We can't use InternalStateModule.getterFor because
      // we don't add metadata for regexps created by a literal.

      if (classof(this) === 'RegExp') {
        return !!getInternalState(this).sticky;
      }

      throw TypeError('Incompatible receiver, RegExp required');
    }
  });
}

/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // TODO: Remove from `core-js@4` since it's moved to entry points

__webpack_require__(198);

var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var call = __webpack_require__(13);

var uncurryThis = __webpack_require__(3);

var isCallable = __webpack_require__(9);

var isObject = __webpack_require__(7);

var DELEGATES_TO_EXEC = function () {
  var execCalled = false;
  var re = /[ac]/;

  re.exec = function () {
    execCalled = true;
    return /./.exec.apply(this, arguments);
  };

  return re.test('abc') === true && execCalled;
}();

var Error = global.Error;
var un$Test = uncurryThis(/./.test); // `RegExp.prototype.test` method
// https://tc39.es/ecma262/#sec-regexp.prototype.test

$({
  target: 'RegExp',
  proto: true,
  forced: !DELEGATES_TO_EXEC
}, {
  test: function test(str) {
    var exec = this.exec;
    if (!isCallable(exec)) return un$Test(this, str);
    var result = call(exec, this, str);

    if (result !== null && !isObject(result)) {
      throw new Error('RegExp exec method returned something other than an Object or null');
    }

    return !!result;
  }
});

/***/ }),
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var uncurryThis = __webpack_require__(3);

var PROPER_FUNCTION_NAME = __webpack_require__(89).PROPER;

var redefine = __webpack_require__(18);

var anObject = __webpack_require__(5);

var isPrototypeOf = __webpack_require__(38);

var $toString = __webpack_require__(10);

var fails = __webpack_require__(4);

var regExpFlags = __webpack_require__(81);

var TO_STRING = 'toString';
var RegExpPrototype = RegExp.prototype;
var n$ToString = RegExpPrototype[TO_STRING];
var getFlags = uncurryThis(regExpFlags);
var NOT_GENERIC = fails(function () {
  return n$ToString.call({
    source: 'a',
    flags: 'b'
  }) != '/a/b';
}); // FF44- RegExp#toString has a wrong name

var INCORRECT_NAME = PROPER_FUNCTION_NAME && n$ToString.name != TO_STRING; // `RegExp.prototype.toString` method
// https://tc39.es/ecma262/#sec-regexp.prototype.tostring

if (NOT_GENERIC || INCORRECT_NAME) {
  redefine(RegExp.prototype, TO_STRING, function toString() {
    var R = anObject(this);
    var p = $toString(R.source);
    var rf = R.flags;
    var f = $toString(rf === undefined && isPrototypeOf(RegExpPrototype, R) && !('flags' in RegExpPrototype) ? getFlags(R) : rf);
    return '/' + p + '/' + f;
  }, {
    unsafe: true
  });
}

/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var collection = __webpack_require__(149);

var collectionStrong = __webpack_require__(250); // `Set` constructor
// https://tc39.es/ecma262/#sec-set-objects


collection('Set', function (init) {
  return function Set() {
    return init(this, arguments.length ? arguments[0] : undefined);
  };
}, collectionStrong);

/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var requireObjectCoercible = __webpack_require__(20);

var toIntegerOrInfinity = __webpack_require__(22);

var toString = __webpack_require__(10);

var fails = __webpack_require__(4);

var charAt = uncurryThis(''.charAt);
var FORCED = fails(function () {
  return '𠮷'.at(-2) !== "\uD842";
}); // `String.prototype.at` method
// https://github.com/tc39/proposal-relative-indexing-method

$({
  target: 'String',
  proto: true,
  forced: FORCED
}, {
  at: function at(index) {
    var S = toString(requireObjectCoercible(this));
    var len = S.length;
    var relativeIndex = toIntegerOrInfinity(index);
    var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;
    return k < 0 || k >= len ? undefined : charAt(S, k);
  }
});

/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var codeAt = __webpack_require__(158).codeAt; // `String.prototype.codePointAt` method
// https://tc39.es/ecma262/#sec-string.prototype.codepointat


$({
  target: 'String',
  proto: true
}, {
  codePointAt: function codePointAt(pos) {
    return codeAt(this, pos);
  }
});

/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var getOwnPropertyDescriptor = __webpack_require__(28).f;

var toLength = __webpack_require__(39);

var toString = __webpack_require__(10);

var notARegExp = __webpack_require__(199);

var requireObjectCoercible = __webpack_require__(20);

var correctIsRegExpLogic = __webpack_require__(200);

var IS_PURE = __webpack_require__(25); // eslint-disable-next-line es/no-string-prototype-endswith -- safe


var un$EndsWith = uncurryThis(''.endsWith);
var slice = uncurryThis(''.slice);
var min = Math.min;
var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith'); // https://github.com/zloirock/core-js/pull/702

var MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {
  var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');
  return descriptor && !descriptor.writable;
}(); // `String.prototype.endsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.endswith

$({
  target: 'String',
  proto: true,
  forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC
}, {
  endsWith: function endsWith(searchString
  /* , endPosition = @length */
  ) {
    var that = toString(requireObjectCoercible(this));
    notARegExp(searchString);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = that.length;
    var end = endPosition === undefined ? len : min(toLength(endPosition), len);
    var search = toString(searchString);
    return un$EndsWith ? un$EndsWith(that, search, end) : slice(that, end - search.length, end) === search;
  }
});

/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var toAbsoluteIndex = __webpack_require__(60);

var RangeError = global.RangeError;
var fromCharCode = String.fromCharCode; // eslint-disable-next-line es/no-string-fromcodepoint -- required for testing

var $fromCodePoint = String.fromCodePoint;
var join = uncurryThis([].join); // length should be 1, old FF problem

var INCORRECT_LENGTH = !!$fromCodePoint && $fromCodePoint.length != 1; // `String.fromCodePoint` method
// https://tc39.es/ecma262/#sec-string.fromcodepoint

$({
  target: 'String',
  stat: true,
  forced: INCORRECT_LENGTH
}, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  fromCodePoint: function fromCodePoint(x) {
    var elements = [];
    var length = arguments.length;
    var i = 0;
    var code;

    while (length > i) {
      code = +arguments[i++];
      if (toAbsoluteIndex(code, 0x10FFFF) !== code) throw RangeError(code + ' is not a valid code point');
      elements[i] = code < 0x10000 ? fromCharCode(code) : fromCharCode(((code -= 0x10000) >> 10) + 0xD800, code % 0x400 + 0xDC00);
    }

    return join(elements, '');
  }
});

/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var notARegExp = __webpack_require__(199);

var requireObjectCoercible = __webpack_require__(20);

var toString = __webpack_require__(10);

var correctIsRegExpLogic = __webpack_require__(200);

var stringIndexOf = uncurryThis(''.indexOf); // `String.prototype.includes` method
// https://tc39.es/ecma262/#sec-string.prototype.includes

$({
  target: 'String',
  proto: true,
  forced: !correctIsRegExpLogic('includes')
}, {
  includes: function includes(searchString
  /* , position = 0 */
  ) {
    return !!~stringIndexOf(toString(requireObjectCoercible(this)), toString(notARegExp(searchString)), arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var call = __webpack_require__(13);

var fixRegExpWellKnownSymbolLogic = __webpack_require__(159);

var anObject = __webpack_require__(5);

var toLength = __webpack_require__(39);

var toString = __webpack_require__(10);

var requireObjectCoercible = __webpack_require__(20);

var getMethod = __webpack_require__(59);

var advanceStringIndex = __webpack_require__(160);

var regExpExec = __webpack_require__(121); // @@match logic


fixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {
  return [// `String.prototype.match` method
  // https://tc39.es/ecma262/#sec-string.prototype.match
  function match(regexp) {
    var O = requireObjectCoercible(this);
    var matcher = regexp == undefined ? undefined : getMethod(regexp, MATCH);
    return matcher ? call(matcher, regexp, O) : new RegExp(regexp)[MATCH](toString(O));
  }, // `RegExp.prototype[@@match]` method
  // https://tc39.es/ecma262/#sec-regexp.prototype-@@match
  function (string) {
    var rx = anObject(this);
    var S = toString(string);
    var res = maybeCallNative(nativeMatch, rx, S);
    if (res.done) return res.value;
    if (!rx.global) return regExpExec(rx, S);
    var fullUnicode = rx.unicode;
    rx.lastIndex = 0;
    var A = [];
    var n = 0;
    var result;

    while ((result = regExpExec(rx, S)) !== null) {
      var matchStr = toString(result[0]);
      A[n] = matchStr;
      if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      n++;
    }

    return n === 0 ? null : A;
  }];
});

/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-string-prototype-matchall -- safe */

var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var call = __webpack_require__(13);

var uncurryThis = __webpack_require__(3);

var createIteratorConstructor = __webpack_require__(186);

var requireObjectCoercible = __webpack_require__(20);

var toLength = __webpack_require__(39);

var toString = __webpack_require__(10);

var anObject = __webpack_require__(5);

var classof = __webpack_require__(37);

var isPrototypeOf = __webpack_require__(38);

var isRegExp = __webpack_require__(120);

var regExpFlags = __webpack_require__(81);

var getMethod = __webpack_require__(59);

var redefine = __webpack_require__(18);

var fails = __webpack_require__(4);

var wellKnownSymbol = __webpack_require__(8);

var speciesConstructor = __webpack_require__(94);

var advanceStringIndex = __webpack_require__(160);

var regExpExec = __webpack_require__(121);

var InternalStateModule = __webpack_require__(21);

var IS_PURE = __webpack_require__(25);

var MATCH_ALL = wellKnownSymbol('matchAll');
var REGEXP_STRING = 'RegExp String';
var REGEXP_STRING_ITERATOR = REGEXP_STRING + ' Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(REGEXP_STRING_ITERATOR);
var RegExpPrototype = RegExp.prototype;
var TypeError = global.TypeError;
var getFlags = uncurryThis(regExpFlags);
var stringIndexOf = uncurryThis(''.indexOf);
var un$MatchAll = uncurryThis(''.matchAll);
var WORKS_WITH_NON_GLOBAL_REGEX = !!un$MatchAll && !fails(function () {
  un$MatchAll('a', /./);
});
var $RegExpStringIterator = createIteratorConstructor(function RegExpStringIterator(regexp, string, $global, fullUnicode) {
  setInternalState(this, {
    type: REGEXP_STRING_ITERATOR,
    regexp: regexp,
    string: string,
    global: $global,
    unicode: fullUnicode,
    done: false
  });
}, REGEXP_STRING, function next() {
  var state = getInternalState(this);
  if (state.done) return {
    value: undefined,
    done: true
  };
  var R = state.regexp;
  var S = state.string;
  var match = regExpExec(R, S);
  if (match === null) return {
    value: undefined,
    done: state.done = true
  };

  if (state.global) {
    if (toString(match[0]) === '') R.lastIndex = advanceStringIndex(S, toLength(R.lastIndex), state.unicode);
    return {
      value: match,
      done: false
    };
  }

  state.done = true;
  return {
    value: match,
    done: false
  };
});

var $matchAll = function $matchAll(string) {
  var R = anObject(this);
  var S = toString(string);
  var C, flagsValue, flags, matcher, $global, fullUnicode;
  C = speciesConstructor(R, RegExp);
  flagsValue = R.flags;

  if (flagsValue === undefined && isPrototypeOf(RegExpPrototype, R) && !('flags' in RegExpPrototype)) {
    flagsValue = getFlags(R);
  }

  flags = flagsValue === undefined ? '' : toString(flagsValue);
  matcher = new C(C === RegExp ? R.source : R, flags);
  $global = !!~stringIndexOf(flags, 'g');
  fullUnicode = !!~stringIndexOf(flags, 'u');
  matcher.lastIndex = toLength(R.lastIndex);
  return new $RegExpStringIterator(matcher, S, $global, fullUnicode);
}; // `String.prototype.matchAll` method
// https://tc39.es/ecma262/#sec-string.prototype.matchall


$({
  target: 'String',
  proto: true,
  forced: WORKS_WITH_NON_GLOBAL_REGEX
}, {
  matchAll: function matchAll(regexp) {
    var O = requireObjectCoercible(this);
    var flags, S, matcher, rx;

    if (regexp != null) {
      if (isRegExp(regexp)) {
        flags = toString(requireObjectCoercible('flags' in RegExpPrototype ? regexp.flags : getFlags(regexp)));
        if (!~stringIndexOf(flags, 'g')) throw TypeError('`.matchAll` does not allow non-global regexes');
      }

      if (WORKS_WITH_NON_GLOBAL_REGEX) return un$MatchAll(O, regexp);
      matcher = getMethod(regexp, MATCH_ALL);
      if (matcher === undefined && IS_PURE && classof(regexp) == 'RegExp') matcher = $matchAll;
      if (matcher) return call(matcher, regexp, O);
    } else if (WORKS_WITH_NON_GLOBAL_REGEX) return un$MatchAll(O, regexp);

    S = toString(O);
    rx = new RegExp(regexp, 'g');
    return IS_PURE ? call($matchAll, rx, S) : rx[MATCH_ALL](S);
  }
});
IS_PURE || MATCH_ALL in RegExpPrototype || redefine(RegExpPrototype, MATCH_ALL, $matchAll);

/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var $padEnd = __webpack_require__(191).end;

var WEBKIT_BUG = __webpack_require__(265); // `String.prototype.padEnd` method
// https://tc39.es/ecma262/#sec-string.prototype.padend


$({
  target: 'String',
  proto: true,
  forced: WEBKIT_BUG
}, {
  padEnd: function padEnd(maxLength
  /* , fillString = ' ' */
  ) {
    return $padEnd(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var $padStart = __webpack_require__(191).start;

var WEBKIT_BUG = __webpack_require__(265); // `String.prototype.padStart` method
// https://tc39.es/ecma262/#sec-string.prototype.padstart


$({
  target: 'String',
  proto: true,
  forced: WEBKIT_BUG
}, {
  padStart: function padStart(maxLength
  /* , fillString = ' ' */
  ) {
    return $padStart(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var toIndexedObject = __webpack_require__(34);

var toObject = __webpack_require__(16);

var toString = __webpack_require__(10);

var lengthOfArrayLike = __webpack_require__(17);

var push = uncurryThis([].push);
var join = uncurryThis([].join); // `String.raw` method
// https://tc39.es/ecma262/#sec-string.raw

$({
  target: 'String',
  stat: true
}, {
  raw: function raw(template) {
    var rawTemplate = toIndexedObject(toObject(template).raw);
    var literalSegments = lengthOfArrayLike(rawTemplate);
    var argumentsLength = arguments.length;
    var elements = [];
    var i = 0;

    while (literalSegments > i) {
      push(elements, toString(rawTemplate[i++]));
      if (i === literalSegments) return join(elements, '');
      if (i < argumentsLength) push(elements, toString(arguments[i]));
    }
  }
});

/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var repeat = __webpack_require__(148); // `String.prototype.repeat` method
// https://tc39.es/ecma262/#sec-string.prototype.repeat


$({
  target: 'String',
  proto: true
}, {
  repeat: repeat
});

/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var apply = __webpack_require__(40);

var call = __webpack_require__(13);

var uncurryThis = __webpack_require__(3);

var fixRegExpWellKnownSymbolLogic = __webpack_require__(159);

var fails = __webpack_require__(4);

var anObject = __webpack_require__(5);

var isCallable = __webpack_require__(9);

var toIntegerOrInfinity = __webpack_require__(22);

var toLength = __webpack_require__(39);

var toString = __webpack_require__(10);

var requireObjectCoercible = __webpack_require__(20);

var advanceStringIndex = __webpack_require__(160);

var getMethod = __webpack_require__(59);

var getSubstitution = __webpack_require__(266);

var regExpExec = __webpack_require__(121);

var wellKnownSymbol = __webpack_require__(8);

var REPLACE = wellKnownSymbol('replace');
var max = Math.max;
var min = Math.min;
var concat = uncurryThis([].concat);
var push = uncurryThis([].push);
var stringIndexOf = uncurryThis(''.indexOf);
var stringSlice = uncurryThis(''.slice);

var maybeToString = function maybeToString(it) {
  return it === undefined ? it : String(it);
}; // IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0


var REPLACE_KEEPS_$0 = function () {
  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
  return 'a'.replace(/./, '$0') === '$0';
}(); // Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string


var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = function () {
  if (/./[REPLACE]) {
    return /./[REPLACE]('a', '$0') === '';
  }

  return false;
}();

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  var re = /./;

  re.exec = function () {
    var result = [];
    result.groups = {
      a: '7'
    };
    return result;
  }; // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive


  return ''.replace(re, '$<a>') !== '7';
}); // @@replace logic

fixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';
  return [// `String.prototype.replace` method
  // https://tc39.es/ecma262/#sec-string.prototype.replace
  function replace(searchValue, replaceValue) {
    var O = requireObjectCoercible(this);
    var replacer = searchValue == undefined ? undefined : getMethod(searchValue, REPLACE);
    return replacer ? call(replacer, searchValue, O, replaceValue) : call(nativeReplace, toString(O), searchValue, replaceValue);
  }, // `RegExp.prototype[@@replace]` method
  // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
  function (string, replaceValue) {
    var rx = anObject(this);
    var S = toString(string);

    if (typeof replaceValue == 'string' && stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 && stringIndexOf(replaceValue, '$<') === -1) {
      var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
      if (res.done) return res.value;
    }

    var functionalReplace = isCallable(replaceValue);
    if (!functionalReplace) replaceValue = toString(replaceValue);
    var global = rx.global;

    if (global) {
      var fullUnicode = rx.unicode;
      rx.lastIndex = 0;
    }

    var results = [];

    while (true) {
      var result = regExpExec(rx, S);
      if (result === null) break;
      push(results, result);
      if (!global) break;
      var matchStr = toString(result[0]);
      if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
    }

    var accumulatedResult = '';
    var nextSourcePosition = 0;

    for (var i = 0; i < results.length; i++) {
      result = results[i];
      var matched = toString(result[0]);
      var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);
      var captures = []; // NOTE: This is equivalent to
      //   captures = result.slice(1).map(maybeToString)
      // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
      // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
      // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.

      for (var j = 1; j < result.length; j++) {
        push(captures, maybeToString(result[j]));
      }

      var namedCaptures = result.groups;

      if (functionalReplace) {
        var replacerArgs = concat([matched], captures, position, S);
        if (namedCaptures !== undefined) push(replacerArgs, namedCaptures);
        var replacement = toString(apply(replaceValue, undefined, replacerArgs));
      } else {
        replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
      }

      if (position >= nextSourcePosition) {
        accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;
        nextSourcePosition = position + matched.length;
      }
    }

    return accumulatedResult + stringSlice(S, nextSourcePosition);
  }];
}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);

/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var call = __webpack_require__(13);

var uncurryThis = __webpack_require__(3);

var requireObjectCoercible = __webpack_require__(20);

var isCallable = __webpack_require__(9);

var isRegExp = __webpack_require__(120);

var toString = __webpack_require__(10);

var getMethod = __webpack_require__(59);

var regExpFlags = __webpack_require__(81);

var getSubstitution = __webpack_require__(266);

var wellKnownSymbol = __webpack_require__(8);

var IS_PURE = __webpack_require__(25);

var REPLACE = wellKnownSymbol('replace');
var RegExpPrototype = RegExp.prototype;
var TypeError = global.TypeError;
var getFlags = uncurryThis(regExpFlags);
var indexOf = uncurryThis(''.indexOf);
var replace = uncurryThis(''.replace);
var stringSlice = uncurryThis(''.slice);
var max = Math.max;

var stringIndexOf = function stringIndexOf(string, searchValue, fromIndex) {
  if (fromIndex > string.length) return -1;
  if (searchValue === '') return fromIndex;
  return indexOf(string, searchValue, fromIndex);
}; // `String.prototype.replaceAll` method
// https://tc39.es/ecma262/#sec-string.prototype.replaceall


$({
  target: 'String',
  proto: true
}, {
  replaceAll: function replaceAll(searchValue, replaceValue) {
    var O = requireObjectCoercible(this);
    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;
    var position = 0;
    var endOfLastMatch = 0;
    var result = '';

    if (searchValue != null) {
      IS_REG_EXP = isRegExp(searchValue);

      if (IS_REG_EXP) {
        flags = toString(requireObjectCoercible('flags' in RegExpPrototype ? searchValue.flags : getFlags(searchValue)));
        if (!~indexOf(flags, 'g')) throw TypeError('`.replaceAll` does not allow non-global regexes');
      }

      replacer = getMethod(searchValue, REPLACE);

      if (replacer) {
        return call(replacer, searchValue, O, replaceValue);
      } else if (IS_PURE && IS_REG_EXP) {
        return replace(toString(O), searchValue, replaceValue);
      }
    }

    string = toString(O);
    searchString = toString(searchValue);
    functionalReplace = isCallable(replaceValue);
    if (!functionalReplace) replaceValue = toString(replaceValue);
    searchLength = searchString.length;
    advanceBy = max(1, searchLength);
    position = stringIndexOf(string, searchString, 0);

    while (position !== -1) {
      replacement = functionalReplace ? toString(replaceValue(searchString, position, string)) : getSubstitution(searchString, string, position, [], undefined, replaceValue);
      result += stringSlice(string, endOfLastMatch, position) + replacement;
      endOfLastMatch = position + searchLength;
      position = stringIndexOf(string, searchString, position + advanceBy);
    }

    if (endOfLastMatch < string.length) {
      result += stringSlice(string, endOfLastMatch);
    }

    return result;
  }
});

/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var call = __webpack_require__(13);

var fixRegExpWellKnownSymbolLogic = __webpack_require__(159);

var anObject = __webpack_require__(5);

var requireObjectCoercible = __webpack_require__(20);

var sameValue = __webpack_require__(257);

var toString = __webpack_require__(10);

var getMethod = __webpack_require__(59);

var regExpExec = __webpack_require__(121); // @@search logic


fixRegExpWellKnownSymbolLogic('search', function (SEARCH, nativeSearch, maybeCallNative) {
  return [// `String.prototype.search` method
  // https://tc39.es/ecma262/#sec-string.prototype.search
  function search(regexp) {
    var O = requireObjectCoercible(this);
    var searcher = regexp == undefined ? undefined : getMethod(regexp, SEARCH);
    return searcher ? call(searcher, regexp, O) : new RegExp(regexp)[SEARCH](toString(O));
  }, // `RegExp.prototype[@@search]` method
  // https://tc39.es/ecma262/#sec-regexp.prototype-@@search
  function (string) {
    var rx = anObject(this);
    var S = toString(string);
    var res = maybeCallNative(nativeSearch, rx, S);
    if (res.done) return res.value;
    var previousLastIndex = rx.lastIndex;
    if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
    var result = regExpExec(rx, S);
    if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
    return result === null ? -1 : result.index;
  }];
});

/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var apply = __webpack_require__(40);

var call = __webpack_require__(13);

var uncurryThis = __webpack_require__(3);

var fixRegExpWellKnownSymbolLogic = __webpack_require__(159);

var isRegExp = __webpack_require__(120);

var anObject = __webpack_require__(5);

var requireObjectCoercible = __webpack_require__(20);

var speciesConstructor = __webpack_require__(94);

var advanceStringIndex = __webpack_require__(160);

var toLength = __webpack_require__(39);

var toString = __webpack_require__(10);

var getMethod = __webpack_require__(59);

var arraySlice = __webpack_require__(113);

var callRegExpExec = __webpack_require__(121);

var regexpExec = __webpack_require__(157);

var stickyHelpers = __webpack_require__(156);

var fails = __webpack_require__(4);

var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;
var MAX_UINT32 = 0xFFFFFFFF;
var min = Math.min;
var $push = [].push;
var exec = uncurryThis(/./.exec);
var push = uncurryThis($push);
var stringSlice = uncurryThis(''.slice); // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
// Weex JS has frozen built-in prototypes, so use try / catch wrapper

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {
  // eslint-disable-next-line regexp/no-empty-group -- required for testing
  var re = /(?:)/;
  var originalExec = re.exec;

  re.exec = function () {
    return originalExec.apply(this, arguments);
  };

  var result = 'ab'.split(re);
  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
}); // @@split logic

fixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {
  var internalSplit;

  if ('abbc'.split(/(b)*/)[1] == 'c' || // eslint-disable-next-line regexp/no-empty-group -- required for testing
  'test'.split(/(?:)/, -1).length != 4 || 'ab'.split(/(?:ab)*/).length != 2 || '.'.split(/(.?)(.?)/).length != 4 || // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing
  '.'.split(/()()/).length > 1 || ''.split(/.?/).length) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function internalSplit(separator, limit) {
      var string = toString(requireObjectCoercible(this));
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (separator === undefined) return [string]; // If `separator` is not a regex, use native split

      if (!isRegExp(separator)) {
        return call(nativeSplit, string, separator, lim);
      }

      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.unicode ? 'u' : '') + (separator.sticky ? 'y' : '');
      var lastLastIndex = 0; // Make `global` and avoid `lastIndex` issues by working with a copy

      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;

      while (match = call(regexpExec, separatorCopy, string)) {
        lastIndex = separatorCopy.lastIndex;

        if (lastIndex > lastLastIndex) {
          push(output, stringSlice(string, lastLastIndex, match.index));
          if (match.length > 1 && match.index < string.length) apply($push, output, arraySlice(match, 1));
          lastLength = match[0].length;
          lastLastIndex = lastIndex;
          if (output.length >= lim) break;
        }

        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop
      }

      if (lastLastIndex === string.length) {
        if (lastLength || !exec(separatorCopy, '')) push(output, '');
      } else push(output, stringSlice(string, lastLastIndex));

      return output.length > lim ? arraySlice(output, 0, lim) : output;
    }; // Chakra, V8

  } else if ('0'.split(undefined, 0).length) {
    internalSplit = function internalSplit(separator, limit) {
      return separator === undefined && limit === 0 ? [] : call(nativeSplit, this, separator, limit);
    };
  } else internalSplit = nativeSplit;

  return [// `String.prototype.split` method
  // https://tc39.es/ecma262/#sec-string.prototype.split
  function split(separator, limit) {
    var O = requireObjectCoercible(this);
    var splitter = separator == undefined ? undefined : getMethod(separator, SPLIT);
    return splitter ? call(splitter, separator, O, limit) : call(internalSplit, toString(O), separator, limit);
  }, // `RegExp.prototype[@@split]` method
  // https://tc39.es/ecma262/#sec-regexp.prototype-@@split
  //
  // NOTE: This cannot be properly polyfilled in engines that don't support
  // the 'y' flag.
  function (string, limit) {
    var rx = anObject(this);
    var S = toString(string);
    var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);
    if (res.done) return res.value;
    var C = speciesConstructor(rx, RegExp);
    var unicodeMatching = rx.unicode;
    var flags = (rx.ignoreCase ? 'i' : '') + (rx.multiline ? 'm' : '') + (rx.unicode ? 'u' : '') + (UNSUPPORTED_Y ? 'g' : 'y'); // ^(? + rx + ) is needed, in combination with some S slicing, to
    // simulate the 'y' flag.

    var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);
    var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
    if (lim === 0) return [];
    if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
    var p = 0;
    var q = 0;
    var A = [];

    while (q < S.length) {
      splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;
      var z = callRegExpExec(splitter, UNSUPPORTED_Y ? stringSlice(S, q) : S);
      var e;

      if (z === null || (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p) {
        q = advanceStringIndex(S, q, unicodeMatching);
      } else {
        push(A, stringSlice(S, p, q));
        if (A.length === lim) return A;

        for (var i = 1; i <= z.length - 1; i++) {
          push(A, z[i]);
          if (A.length === lim) return A;
        }

        q = p = e;
      }
    }

    push(A, stringSlice(S, p));
    return A;
  }];
}, !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);

/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var getOwnPropertyDescriptor = __webpack_require__(28).f;

var toLength = __webpack_require__(39);

var toString = __webpack_require__(10);

var notARegExp = __webpack_require__(199);

var requireObjectCoercible = __webpack_require__(20);

var correctIsRegExpLogic = __webpack_require__(200);

var IS_PURE = __webpack_require__(25); // eslint-disable-next-line es/no-string-prototype-startswith -- safe


var un$StartsWith = uncurryThis(''.startsWith);
var stringSlice = uncurryThis(''.slice);
var min = Math.min;
var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith'); // https://github.com/zloirock/core-js/pull/702

var MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {
  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');
  return descriptor && !descriptor.writable;
}(); // `String.prototype.startsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.startswith

$({
  target: 'String',
  proto: true,
  forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC
}, {
  startsWith: function startsWith(searchString
  /* , position = 0 */
  ) {
    var that = toString(requireObjectCoercible(this));
    notARegExp(searchString);
    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = toString(searchString);
    return un$StartsWith ? un$StartsWith(that, search, index) : stringSlice(that, index, index + search.length) === search;
  }
});

/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var requireObjectCoercible = __webpack_require__(20);

var toIntegerOrInfinity = __webpack_require__(22);

var toString = __webpack_require__(10);

var stringSlice = uncurryThis(''.slice);
var max = Math.max;
var min = Math.min; // eslint-disable-next-line unicorn/prefer-string-slice -- required for testing

var FORCED = !''.substr || 'ab'.substr(-1) !== 'b'; // `String.prototype.substr` method
// https://tc39.es/ecma262/#sec-string.prototype.substr

$({
  target: 'String',
  proto: true,
  forced: FORCED
}, {
  substr: function substr(start, length) {
    var that = toString(requireObjectCoercible(this));
    var size = that.length;
    var intStart = toIntegerOrInfinity(start);
    var intLength, intEnd;
    if (intStart === Infinity) intStart = 0;
    if (intStart < 0) intStart = max(size + intStart, 0);
    intLength = length === undefined ? size : toIntegerOrInfinity(length);
    if (intLength <= 0 || intLength === Infinity) return '';
    intEnd = min(intStart + intLength, size);
    return intStart >= intEnd ? '' : stringSlice(that, intStart, intEnd);
  }
});

/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var $trim = __webpack_require__(95).trim;

var forcedStringTrimMethod = __webpack_require__(201); // `String.prototype.trim` method
// https://tc39.es/ecma262/#sec-string.prototype.trim


$({
  target: 'String',
  proto: true,
  forced: forcedStringTrimMethod('trim')
}, {
  trim: function trim() {
    return $trim(this);
  }
});

/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var $trimEnd = __webpack_require__(95).end;

var forcedStringTrimMethod = __webpack_require__(201);

var FORCED = forcedStringTrimMethod('trimEnd');
var trimEnd = FORCED ? function trimEnd() {
  return $trimEnd(this); // eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe
} : ''.trimEnd; // `String.prototype.{ trimEnd, trimRight }` methods
// https://tc39.es/ecma262/#sec-string.prototype.trimend
// https://tc39.es/ecma262/#String.prototype.trimright

$({
  target: 'String',
  proto: true,
  name: 'trimEnd',
  forced: FORCED
}, {
  trimEnd: trimEnd,
  trimRight: trimEnd
});

/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var $trimStart = __webpack_require__(95).start;

var forcedStringTrimMethod = __webpack_require__(201);

var FORCED = forcedStringTrimMethod('trimStart');
var trimStart = FORCED ? function trimStart() {
  return $trimStart(this); // eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe
} : ''.trimStart; // `String.prototype.{ trimStart, trimLeft }` methods
// https://tc39.es/ecma262/#sec-string.prototype.trimstart
// https://tc39.es/ecma262/#String.prototype.trimleft

$({
  target: 'String',
  proto: true,
  name: 'trimStart',
  forced: FORCED
}, {
  trimStart: trimStart,
  trimLeft: trimStart
});

/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var createHTML = __webpack_require__(42);

var forcedStringHTMLMethod = __webpack_require__(43); // `String.prototype.anchor` method
// https://tc39.es/ecma262/#sec-string.prototype.anchor


$({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod('anchor')
}, {
  anchor: function anchor(name) {
    return createHTML(this, 'a', 'name', name);
  }
});

/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var createHTML = __webpack_require__(42);

var forcedStringHTMLMethod = __webpack_require__(43); // `String.prototype.big` method
// https://tc39.es/ecma262/#sec-string.prototype.big


$({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod('big')
}, {
  big: function big() {
    return createHTML(this, 'big', '', '');
  }
});

/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var createHTML = __webpack_require__(42);

var forcedStringHTMLMethod = __webpack_require__(43); // `String.prototype.blink` method
// https://tc39.es/ecma262/#sec-string.prototype.blink


$({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod('blink')
}, {
  blink: function blink() {
    return createHTML(this, 'blink', '', '');
  }
});

/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var createHTML = __webpack_require__(42);

var forcedStringHTMLMethod = __webpack_require__(43); // `String.prototype.bold` method
// https://tc39.es/ecma262/#sec-string.prototype.bold


$({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod('bold')
}, {
  bold: function bold() {
    return createHTML(this, 'b', '', '');
  }
});

/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var createHTML = __webpack_require__(42);

var forcedStringHTMLMethod = __webpack_require__(43); // `String.prototype.fixed` method
// https://tc39.es/ecma262/#sec-string.prototype.fixed


$({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod('fixed')
}, {
  fixed: function fixed() {
    return createHTML(this, 'tt', '', '');
  }
});

/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var createHTML = __webpack_require__(42);

var forcedStringHTMLMethod = __webpack_require__(43); // `String.prototype.fontcolor` method
// https://tc39.es/ecma262/#sec-string.prototype.fontcolor


$({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod('fontcolor')
}, {
  fontcolor: function fontcolor(color) {
    return createHTML(this, 'font', 'color', color);
  }
});

/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var createHTML = __webpack_require__(42);

var forcedStringHTMLMethod = __webpack_require__(43); // `String.prototype.fontsize` method
// https://tc39.es/ecma262/#sec-string.prototype.fontsize


$({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod('fontsize')
}, {
  fontsize: function fontsize(size) {
    return createHTML(this, 'font', 'size', size);
  }
});

/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var createHTML = __webpack_require__(42);

var forcedStringHTMLMethod = __webpack_require__(43); // `String.prototype.italics` method
// https://tc39.es/ecma262/#sec-string.prototype.italics


$({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod('italics')
}, {
  italics: function italics() {
    return createHTML(this, 'i', '', '');
  }
});

/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var createHTML = __webpack_require__(42);

var forcedStringHTMLMethod = __webpack_require__(43); // `String.prototype.link` method
// https://tc39.es/ecma262/#sec-string.prototype.link


$({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod('link')
}, {
  link: function link(url) {
    return createHTML(this, 'a', 'href', url);
  }
});

/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var createHTML = __webpack_require__(42);

var forcedStringHTMLMethod = __webpack_require__(43); // `String.prototype.small` method
// https://tc39.es/ecma262/#sec-string.prototype.small


$({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod('small')
}, {
  small: function small() {
    return createHTML(this, 'small', '', '');
  }
});

/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var createHTML = __webpack_require__(42);

var forcedStringHTMLMethod = __webpack_require__(43); // `String.prototype.strike` method
// https://tc39.es/ecma262/#sec-string.prototype.strike


$({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod('strike')
}, {
  strike: function strike() {
    return createHTML(this, 'strike', '', '');
  }
});

/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var createHTML = __webpack_require__(42);

var forcedStringHTMLMethod = __webpack_require__(43); // `String.prototype.sub` method
// https://tc39.es/ecma262/#sec-string.prototype.sub


$({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod('sub')
}, {
  sub: function sub() {
    return createHTML(this, 'sub', '', '');
  }
});

/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var createHTML = __webpack_require__(42);

var forcedStringHTMLMethod = __webpack_require__(43); // `String.prototype.sup` method
// https://tc39.es/ecma262/#sec-string.prototype.sup


$({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod('sup')
}, {
  sup: function sup() {
    return createHTML(this, 'sup', '', '');
  }
});

/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(65); // `Float32Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects


createTypedArrayConstructor('Float32', function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var toIntegerOrInfinity = __webpack_require__(22);

var RangeError = global.RangeError;

module.exports = function (it) {
  var result = toIntegerOrInfinity(it);
  if (result < 0) throw RangeError("The argument can't be less than 0");
  return result;
};

/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(65); // `Float64Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects


createTypedArrayConstructor('Float64', function (init) {
  return function Float64Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(65); // `Int8Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects


createTypedArrayConstructor('Int8', function (init) {
  return function Int8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(65); // `Int16Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects


createTypedArrayConstructor('Int16', function (init) {
  return function Int16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(65); // `Int32Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects


createTypedArrayConstructor('Int32', function (init) {
  return function Int32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(65); // `Uint8Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects


createTypedArrayConstructor('Uint8', function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(65); // `Uint8ClampedArray` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects


createTypedArrayConstructor('Uint8', function (init) {
  return function Uint8ClampedArray(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
}, true);

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(65); // `Uint16Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects


createTypedArrayConstructor('Uint16', function (init) {
  return function Uint16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(65); // `Uint32Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects


createTypedArrayConstructor('Uint32', function (init) {
  return function Uint32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var lengthOfArrayLike = __webpack_require__(17);

var toIntegerOrInfinity = __webpack_require__(22);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.at` method
// https://github.com/tc39/proposal-relative-indexing-method

exportTypedArrayMethod('at', function at(index) {
  var O = aTypedArray(this);
  var len = lengthOfArrayLike(O);
  var relativeIndex = toIntegerOrInfinity(index);
  var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;
  return k < 0 || k >= len ? undefined : O[k];
});

/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var uncurryThis = __webpack_require__(3);

var ArrayBufferViewCore = __webpack_require__(11);

var $ArrayCopyWithin = __webpack_require__(240);

var u$ArrayCopyWithin = uncurryThis($ArrayCopyWithin);
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.copyWithin` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.copywithin

exportTypedArrayMethod('copyWithin', function copyWithin(target, start
/* , end */
) {
  return u$ArrayCopyWithin(aTypedArray(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
});

/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var $every = __webpack_require__(26).every;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.every` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.every

exportTypedArrayMethod('every', function every(callbackfn
/* , thisArg */
) {
  return $every(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});

/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var call = __webpack_require__(13);

var $fill = __webpack_require__(184);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.fill` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.fill

exportTypedArrayMethod('fill', function fill(value
/* , start, end */
) {
  var length = arguments.length;
  return call($fill, aTypedArray(this), value, length > 1 ? arguments[1] : undefined, length > 2 ? arguments[2] : undefined);
});

/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var $filter = __webpack_require__(26).filter;

var fromSpeciesAndList = __webpack_require__(560);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.filter` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.filter

exportTypedArrayMethod('filter', function filter(callbackfn
/* , thisArg */
) {
  var list = $filter(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  return fromSpeciesAndList(this, list);
});

/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

var arrayFromConstructorAndList = __webpack_require__(561);

var typedArraySpeciesConstructor = __webpack_require__(161);

module.exports = function (instance, list) {
  return arrayFromConstructorAndList(typedArraySpeciesConstructor(instance), list);
};

/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

var lengthOfArrayLike = __webpack_require__(17);

module.exports = function (Constructor, list) {
  var index = 0;
  var length = lengthOfArrayLike(list);
  var result = new Constructor(length);

  while (length > index) {
    result[index] = list[index++];
  }

  return result;
};

/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var $find = __webpack_require__(26).find;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.find` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.find

exportTypedArrayMethod('find', function find(predicate
/* , thisArg */
) {
  return $find(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
});

/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var $findIndex = __webpack_require__(26).findIndex;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.findIndex` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.findindex

exportTypedArrayMethod('findIndex', function findIndex(predicate
/* , thisArg */
) {
  return $findIndex(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
});

/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var $forEach = __webpack_require__(26).forEach;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.forEach` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.foreach

exportTypedArrayMethod('forEach', function forEach(callbackfn
/* , thisArg */
) {
  $forEach(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});

/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(202);

var exportTypedArrayStaticMethod = __webpack_require__(11).exportTypedArrayStaticMethod;

var typedArrayFrom = __webpack_require__(268); // `%TypedArray%.from` method
// https://tc39.es/ecma262/#sec-%typedarray%.from


exportTypedArrayStaticMethod('from', typedArrayFrom, TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS);

/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var $includes = __webpack_require__(110).includes;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.includes` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.includes

exportTypedArrayMethod('includes', function includes(searchElement
/* , fromIndex */
) {
  return $includes(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
});

/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var $indexOf = __webpack_require__(110).indexOf;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.indexOf` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.indexof

exportTypedArrayMethod('indexOf', function indexOf(searchElement
/* , fromIndex */
) {
  return $indexOf(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
});

/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(2);

var fails = __webpack_require__(4);

var uncurryThis = __webpack_require__(3);

var ArrayBufferViewCore = __webpack_require__(11);

var ArrayIterators = __webpack_require__(145);

var wellKnownSymbol = __webpack_require__(8);

var ITERATOR = wellKnownSymbol('iterator');
var Uint8Array = global.Uint8Array;
var arrayValues = uncurryThis(ArrayIterators.values);
var arrayKeys = uncurryThis(ArrayIterators.keys);
var arrayEntries = uncurryThis(ArrayIterators.entries);
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var TypedArrayPrototype = Uint8Array && Uint8Array.prototype;
var GENERIC = !fails(function () {
  TypedArrayPrototype[ITERATOR].call([1]);
});
var ITERATOR_IS_VALUES = !!TypedArrayPrototype && TypedArrayPrototype.values && TypedArrayPrototype[ITERATOR] === TypedArrayPrototype.values && TypedArrayPrototype.values.name === 'values';

var typedArrayValues = function values() {
  return arrayValues(aTypedArray(this));
}; // `%TypedArray%.prototype.entries` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.entries


exportTypedArrayMethod('entries', function entries() {
  return arrayEntries(aTypedArray(this));
}, GENERIC); // `%TypedArray%.prototype.keys` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.keys

exportTypedArrayMethod('keys', function keys() {
  return arrayKeys(aTypedArray(this));
}, GENERIC); // `%TypedArray%.prototype.values` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.values

exportTypedArrayMethod('values', typedArrayValues, GENERIC || !ITERATOR_IS_VALUES, {
  name: 'values'
}); // `%TypedArray%.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype-@@iterator

exportTypedArrayMethod(ITERATOR, typedArrayValues, GENERIC || !ITERATOR_IS_VALUES, {
  name: 'values'
});

/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var uncurryThis = __webpack_require__(3);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var $join = uncurryThis([].join); // `%TypedArray%.prototype.join` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.join

exportTypedArrayMethod('join', function join(separator) {
  return $join(aTypedArray(this), separator);
});

/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var apply = __webpack_require__(40);

var $lastIndexOf = __webpack_require__(245);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.lastIndexOf` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.lastindexof

exportTypedArrayMethod('lastIndexOf', function lastIndexOf(searchElement
/* , fromIndex */
) {
  var length = arguments.length;
  return apply($lastIndexOf, aTypedArray(this), length > 1 ? [searchElement, arguments[1]] : [searchElement]);
});

/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var $map = __webpack_require__(26).map;

var typedArraySpeciesConstructor = __webpack_require__(161);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.map` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.map

exportTypedArrayMethod('map', function map(mapfn
/* , thisArg */
) {
  return $map(aTypedArray(this), mapfn, arguments.length > 1 ? arguments[1] : undefined, function (O, length) {
    return new (typedArraySpeciesConstructor(O))(length);
  });
});

/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(202);

var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
var exportTypedArrayStaticMethod = ArrayBufferViewCore.exportTypedArrayStaticMethod; // `%TypedArray%.of` method
// https://tc39.es/ecma262/#sec-%typedarray%.of

exportTypedArrayStaticMethod('of', function
  /* ...items */
of() {
  var index = 0;
  var length = arguments.length;
  var result = new (aTypedArrayConstructor(this))(length);

  while (length > index) {
    result[index] = arguments[index++];
  }

  return result;
}, TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS);

/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var $reduce = __webpack_require__(146).left;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.reduce` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduce

exportTypedArrayMethod('reduce', function reduce(callbackfn
/* , initialValue */
) {
  var length = arguments.length;
  return $reduce(aTypedArray(this), callbackfn, length, length > 1 ? arguments[1] : undefined);
});

/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var $reduceRight = __webpack_require__(146).right;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.reduceRicht` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduceright

exportTypedArrayMethod('reduceRight', function reduceRight(callbackfn
/* , initialValue */
) {
  var length = arguments.length;
  return $reduceRight(aTypedArray(this), callbackfn, length, length > 1 ? arguments[1] : undefined);
});

/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var floor = Math.floor; // `%TypedArray%.prototype.reverse` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reverse

exportTypedArrayMethod('reverse', function reverse() {
  var that = this;
  var length = aTypedArray(that).length;
  var middle = floor(length / 2);
  var index = 0;
  var value;

  while (index < middle) {
    value = that[index];
    that[index++] = that[--length];
    that[length] = value;
  }

  return that;
});

/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(2);

var ArrayBufferViewCore = __webpack_require__(11);

var lengthOfArrayLike = __webpack_require__(17);

var toOffset = __webpack_require__(267);

var toObject = __webpack_require__(16);

var fails = __webpack_require__(4);

var RangeError = global.RangeError;
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var FORCED = fails(function () {
  // eslint-disable-next-line es/no-typed-arrays -- required for testing
  new Int8Array(1).set({});
}); // `%TypedArray%.prototype.set` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.set

exportTypedArrayMethod('set', function set(arrayLike
/* , offset */
) {
  aTypedArray(this);
  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);
  var length = this.length;
  var src = toObject(arrayLike);
  var len = lengthOfArrayLike(src);
  var index = 0;
  if (len + offset > length) throw RangeError('Wrong length');

  while (index < len) {
    this[offset + index] = src[index++];
  }
}, FORCED);

/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var typedArraySpeciesConstructor = __webpack_require__(161);

var fails = __webpack_require__(4);

var arraySlice = __webpack_require__(78);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var FORCED = fails(function () {
  // eslint-disable-next-line es/no-typed-arrays -- required for testing
  new Int8Array(1).slice();
}); // `%TypedArray%.prototype.slice` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice

exportTypedArrayMethod('slice', function slice(start, end) {
  var list = arraySlice(aTypedArray(this), start, end);
  var C = typedArraySpeciesConstructor(this);
  var index = 0;
  var length = list.length;
  var result = new C(length);

  while (length > index) {
    result[index] = list[index++];
  }

  return result;
}, FORCED);

/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var $some = __webpack_require__(26).some;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.some` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.some

exportTypedArrayMethod('some', function some(callbackfn
/* , thisArg */
) {
  return $some(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});

/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var fails = __webpack_require__(4);

var aCallable = __webpack_require__(29);

var internalSort = __webpack_require__(187);

var ArrayBufferViewCore = __webpack_require__(11);

var FF = __webpack_require__(246);

var IE_OR_EDGE = __webpack_require__(247);

var V8 = __webpack_require__(71);

var WEBKIT = __webpack_require__(188);

var Array = global.Array;
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var Uint16Array = global.Uint16Array;
var un$Sort = Uint16Array && uncurryThis(Uint16Array.prototype.sort); // WebKit

var ACCEPT_INCORRECT_ARGUMENTS = !!un$Sort && !(fails(function () {
  un$Sort(new Uint16Array(2), null);
}) && fails(function () {
  un$Sort(new Uint16Array(2), {});
}));
var STABLE_SORT = !!un$Sort && !fails(function () {
  // feature detection can be too slow, so check engines versions
  if (V8) return V8 < 74;
  if (FF) return FF < 67;
  if (IE_OR_EDGE) return true;
  if (WEBKIT) return WEBKIT < 602;
  var array = new Uint16Array(516);
  var expected = Array(516);
  var index, mod;

  for (index = 0; index < 516; index++) {
    mod = index % 4;
    array[index] = 515 - index;
    expected[index] = index - 2 * mod + 3;
  }

  un$Sort(array, function (a, b) {
    return (a / 4 | 0) - (b / 4 | 0);
  });

  for (index = 0; index < 516; index++) {
    if (array[index] !== expected[index]) return true;
  }
});

var getSortCompare = function getSortCompare(comparefn) {
  return function (x, y) {
    if (comparefn !== undefined) return +comparefn(x, y) || 0; // eslint-disable-next-line no-self-compare -- NaN check

    if (y !== y) return -1; // eslint-disable-next-line no-self-compare -- NaN check

    if (x !== x) return 1;
    if (x === 0 && y === 0) return 1 / x > 0 && 1 / y < 0 ? 1 : -1;
    return x > y;
  };
}; // `%TypedArray%.prototype.sort` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort


exportTypedArrayMethod('sort', function sort(comparefn) {
  if (comparefn !== undefined) aCallable(comparefn);
  if (STABLE_SORT) return un$Sort(this, comparefn);
  return internalSort(aTypedArray(this), getSortCompare(comparefn));
}, !STABLE_SORT || ACCEPT_INCORRECT_ARGUMENTS);

/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ArrayBufferViewCore = __webpack_require__(11);

var toLength = __webpack_require__(39);

var toAbsoluteIndex = __webpack_require__(60);

var typedArraySpeciesConstructor = __webpack_require__(161);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod; // `%TypedArray%.prototype.subarray` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.subarray

exportTypedArrayMethod('subarray', function subarray(begin, end) {
  var O = aTypedArray(this);
  var length = O.length;
  var beginIndex = toAbsoluteIndex(begin, length);
  var C = typedArraySpeciesConstructor(O);
  return new C(O.buffer, O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT, toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - beginIndex));
});

/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(2);

var apply = __webpack_require__(40);

var ArrayBufferViewCore = __webpack_require__(11);

var fails = __webpack_require__(4);

var arraySlice = __webpack_require__(78);

var Int8Array = global.Int8Array;
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var $toLocaleString = [].toLocaleString; // iOS Safari 6.x fails here

var TO_LOCALE_STRING_BUG = !!Int8Array && fails(function () {
  $toLocaleString.call(new Int8Array(1));
});
var FORCED = fails(function () {
  return [1, 2].toLocaleString() != new Int8Array([1, 2]).toLocaleString();
}) || !fails(function () {
  Int8Array.prototype.toLocaleString.call([1, 2]);
}); // `%TypedArray%.prototype.toLocaleString` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tolocalestring

exportTypedArrayMethod('toLocaleString', function toLocaleString() {
  return apply($toLocaleString, TO_LOCALE_STRING_BUG ? arraySlice(aTypedArray(this)) : aTypedArray(this), arraySlice(arguments));
}, FORCED);

/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var exportTypedArrayMethod = __webpack_require__(11).exportTypedArrayMethod;

var fails = __webpack_require__(4);

var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var Uint8Array = global.Uint8Array;
var Uint8ArrayPrototype = Uint8Array && Uint8Array.prototype || {};
var arrayToString = [].toString;
var join = uncurryThis([].join);

if (fails(function () {
  arrayToString.call({});
})) {
  arrayToString = function toString() {
    return join(this);
  };
}

var IS_NOT_ARRAY_METHOD = Uint8ArrayPrototype.toString != arrayToString; // `%TypedArray%.prototype.toString` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tostring

exportTypedArrayMethod('toString', arrayToString, IS_NOT_ARRAY_METHOD);

/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var uncurryThis = __webpack_require__(3);

var toString = __webpack_require__(10);

var fromCharCode = String.fromCharCode;
var charAt = uncurryThis(''.charAt);
var exec = uncurryThis(/./.exec);
var stringSlice = uncurryThis(''.slice);
var hex2 = /^[\da-f]{2}$/i;
var hex4 = /^[\da-f]{4}$/i; // `unescape` method
// https://tc39.es/ecma262/#sec-unescape-string

$({
  global: true
}, {
  unescape: function unescape(string) {
    var str = toString(string);
    var result = '';
    var length = str.length;
    var index = 0;
    var chr, part;

    while (index < length) {
      chr = charAt(str, index++);

      if (chr === '%') {
        if (charAt(str, index) === 'u') {
          part = stringSlice(str, index + 1, index + 5);

          if (exec(hex4, part)) {
            result += fromCharCode(parseInt(part, 16));
            index += 5;
            continue;
          }
        } else {
          part = stringSlice(str, index, index + 2);

          if (exec(hex2, part)) {
            result += fromCharCode(parseInt(part, 16));
            index += 2;
            continue;
          }
        }
      }

      result += chr;
    }

    return result;
  }
});

/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var redefineAll = __webpack_require__(93);

var InternalMetadataModule = __webpack_require__(80);

var collection = __webpack_require__(149);

var collectionWeak = __webpack_require__(269);

var isObject = __webpack_require__(7);

var isExtensible = __webpack_require__(150);

var enforceIternalState = __webpack_require__(21).enforce;

var NATIVE_WEAK_MAP = __webpack_require__(230);

var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
var InternalWeakMap;

var wrapper = function wrapper(init) {
  return function WeakMap() {
    return init(this, arguments.length ? arguments[0] : undefined);
  };
}; // `WeakMap` constructor
// https://tc39.es/ecma262/#sec-weakmap-constructor


var $WeakMap = collection('WeakMap', wrapper, collectionWeak); // IE11 WeakMap frozen keys fix
// We can't use feature detection because it crash some old IE builds
// https://github.com/zloirock/core-js/issues/485

if (NATIVE_WEAK_MAP && IS_IE11) {
  InternalWeakMap = collectionWeak.getConstructor(wrapper, 'WeakMap', true);
  InternalMetadataModule.enable();
  var WeakMapPrototype = $WeakMap.prototype;
  var nativeDelete = uncurryThis(WeakMapPrototype['delete']);
  var nativeHas = uncurryThis(WeakMapPrototype.has);
  var nativeGet = uncurryThis(WeakMapPrototype.get);
  var nativeSet = uncurryThis(WeakMapPrototype.set);
  redefineAll(WeakMapPrototype, {
    'delete': function _delete(key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceIternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeDelete(this, key) || state.frozen['delete'](key);
      }

      return nativeDelete(this, key);
    },
    has: function has(key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceIternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas(this, key) || state.frozen.has(key);
      }

      return nativeHas(this, key);
    },
    get: function get(key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceIternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas(this, key) ? nativeGet(this, key) : state.frozen.get(key);
      }

      return nativeGet(this, key);
    },
    set: function set(key, value) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceIternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        nativeHas(this, key) ? nativeSet(this, key, value) : state.frozen.set(key, value);
      } else nativeSet(this, key, value);

      return this;
    }
  });
}

/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var collection = __webpack_require__(149);

var collectionWeak = __webpack_require__(269); // `WeakSet` constructor
// https://tc39.es/ecma262/#sec-weakset-constructor


collection('WeakSet', function (init) {
  return function WeakSet() {
    return init(this, arguments.length ? arguments[0] : undefined);
  };
}, collectionWeak);

/***/ }),
/* 586 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var DOMIterables = __webpack_require__(270);

var DOMTokenListPrototype = __webpack_require__(271);

var forEach = __webpack_require__(242);

var createNonEnumerableProperty = __webpack_require__(30);

var handlePrototype = function handlePrototype(CollectionPrototype) {
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
  } catch (error) {
    CollectionPrototype.forEach = forEach;
  }
};

for (var COLLECTION_NAME in DOMIterables) {
  if (DOMIterables[COLLECTION_NAME]) {
    handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);
  }
}

handlePrototype(DOMTokenListPrototype);

/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);

var DOMIterables = __webpack_require__(270);

var DOMTokenListPrototype = __webpack_require__(271);

var ArrayIteratorMethods = __webpack_require__(145);

var createNonEnumerableProperty = __webpack_require__(30);

var wellKnownSymbol = __webpack_require__(8);

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

var handlePrototype = function handlePrototype(CollectionPrototype, COLLECTION_NAME) {
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }

    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }

    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
};

for (var COLLECTION_NAME in DOMIterables) {
  handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype, COLLECTION_NAME);
}

handlePrototype(DOMTokenListPrototype, 'DOMTokenList');

/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var tryNodeRequire = __webpack_require__(589);

var getBuiltIn = __webpack_require__(19);

var fails = __webpack_require__(4);

var create = __webpack_require__(41);

var createPropertyDescriptor = __webpack_require__(46);

var defineProperty = __webpack_require__(12).f;

var defineProperties = __webpack_require__(141);

var redefine = __webpack_require__(18);

var hasOwn = __webpack_require__(14);

var anInstance = __webpack_require__(54);

var anObject = __webpack_require__(5);

var errorToString = __webpack_require__(238);

var normalizeStringArgument = __webpack_require__(115);

var DOMExceptionConstants = __webpack_require__(272);

var clearErrorStack = __webpack_require__(142);

var InternalStateModule = __webpack_require__(21);

var DESCRIPTORS = __webpack_require__(6);

var IS_PURE = __webpack_require__(25);

var DOM_EXCEPTION = 'DOMException';
var DATA_CLONE_ERR = 'DATA_CLONE_ERR';
var Error = getBuiltIn('Error'); // NodeJS < 17.0 does not expose `DOMException` to global

var NativeDOMException = getBuiltIn(DOM_EXCEPTION) || function () {
  try {
    // NodeJS < 15.0 does not expose `MessageChannel` to global
    var MessageChannel = getBuiltIn('MessageChannel') || tryNodeRequire('worker_threads').MessageChannel; // eslint-disable-next-line es/no-weak-map, unicorn/require-post-message-target-origin -- safe

    new MessageChannel().port1.postMessage(new WeakMap());
  } catch (error) {
    if (error.name == DATA_CLONE_ERR && error.code == 25) return error.constructor;
  }
}();

var NativeDOMExceptionPrototype = NativeDOMException && NativeDOMException.prototype;
var ErrorPrototype = Error.prototype;
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(DOM_EXCEPTION);
var HAS_STACK = ('stack' in Error(DOM_EXCEPTION));

var codeFor = function codeFor(name) {
  return hasOwn(DOMExceptionConstants, name) && DOMExceptionConstants[name].m ? DOMExceptionConstants[name].c : 0;
};

var $DOMException = function DOMException() {
  anInstance(this, DOMExceptionPrototype);
  var argumentsLength = arguments.length;
  var message = normalizeStringArgument(argumentsLength < 1 ? undefined : arguments[0]);
  var name = normalizeStringArgument(argumentsLength < 2 ? undefined : arguments[1], 'Error');
  var code = codeFor(name);
  setInternalState(this, {
    type: DOM_EXCEPTION,
    name: name,
    message: message,
    code: code
  });

  if (!DESCRIPTORS) {
    this.name = name;
    this.message = message;
    this.code = code;
  }

  if (HAS_STACK) {
    var error = Error(message);
    error.name = DOM_EXCEPTION;
    defineProperty(this, 'stack', createPropertyDescriptor(1, clearErrorStack(error.stack, 1)));
  }
};

var DOMExceptionPrototype = $DOMException.prototype = create(ErrorPrototype);

var createGetterDescriptor = function createGetterDescriptor(get) {
  return {
    enumerable: true,
    configurable: true,
    get: get
  };
};

var getterFor = function getterFor(key) {
  return createGetterDescriptor(function () {
    return getInternalState(this)[key];
  });
};

if (DESCRIPTORS) defineProperties(DOMExceptionPrototype, {
  name: getterFor('name'),
  message: getterFor('message'),
  code: getterFor('code')
});
defineProperty(DOMExceptionPrototype, 'constructor', createPropertyDescriptor(1, $DOMException)); // FF36- DOMException is a function, but can't be constructed

var INCORRECT_CONSTRUCTOR = fails(function () {
  return !(new NativeDOMException() instanceof Error);
}); // Safari 10.1 / Chrome 32- / IE8- DOMException.prototype.toString bugs

var INCORRECT_TO_STRING = INCORRECT_CONSTRUCTOR || fails(function () {
  return ErrorPrototype.toString !== errorToString || String(new NativeDOMException(1, 2)) !== '2: 1';
}); // Deno 1.6.3- DOMException.prototype.code just missed

var INCORRECT_CODE = INCORRECT_CONSTRUCTOR || fails(function () {
  return new NativeDOMException(1, 'DataCloneError').code !== 25;
}); // Deno 1.6.3- DOMException constants just missed

var MISSED_CONSTANTS = INCORRECT_CONSTRUCTOR || NativeDOMException[DATA_CLONE_ERR] !== 25 || NativeDOMExceptionPrototype[DATA_CLONE_ERR] !== 25;
var FORCED_CONSTRUCTOR = IS_PURE ? INCORRECT_TO_STRING || INCORRECT_CODE || MISSED_CONSTANTS : INCORRECT_CONSTRUCTOR; // `DOMException` constructor
// https://webidl.spec.whatwg.org/#idl-DOMException

$({
  global: true,
  forced: FORCED_CONSTRUCTOR
}, {
  DOMException: FORCED_CONSTRUCTOR ? $DOMException : NativeDOMException
});
var PolyfilledDOMException = getBuiltIn(DOM_EXCEPTION);
var PolyfilledDOMExceptionPrototype = PolyfilledDOMException.prototype;

if (INCORRECT_TO_STRING && (IS_PURE || NativeDOMException === PolyfilledDOMException)) {
  redefine(PolyfilledDOMExceptionPrototype, 'toString', errorToString);
}

if (INCORRECT_CODE && DESCRIPTORS && NativeDOMException === PolyfilledDOMException) {
  defineProperty(PolyfilledDOMExceptionPrototype, 'code', createGetterDescriptor(function () {
    return codeFor(anObject(this).name);
  }));
}

for (var key in DOMExceptionConstants) {
  if (hasOwn(DOMExceptionConstants, key)) {
    var constant = DOMExceptionConstants[key];
    var constantName = constant.s;
    var descriptor = createPropertyDescriptor(6, constant.c);

    if (!hasOwn(PolyfilledDOMException, constantName)) {
      defineProperty(PolyfilledDOMException, constantName, descriptor);
    }

    if (!hasOwn(PolyfilledDOMExceptionPrototype, constantName)) {
      defineProperty(PolyfilledDOMExceptionPrototype, constantName, descriptor);
    }
  }
}

/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

var IS_NODE = __webpack_require__(79);

module.exports = function (name) {
  try {
    // eslint-disable-next-line no-new-func -- safe
    if (IS_NODE) return Function('return require("' + name + '")')();
  } catch (error) {
    /* empty */
  }
};

/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var getBuiltIn = __webpack_require__(19);

var createPropertyDescriptor = __webpack_require__(46);

var defineProperty = __webpack_require__(12).f;

var hasOwn = __webpack_require__(14);

var anInstance = __webpack_require__(54);

var inheritIfRequired = __webpack_require__(91);

var normalizeStringArgument = __webpack_require__(115);

var DOMExceptionConstants = __webpack_require__(272);

var clearErrorStack = __webpack_require__(142);

var IS_PURE = __webpack_require__(25);

var DOM_EXCEPTION = 'DOMException';
var Error = getBuiltIn('Error');
var NativeDOMException = getBuiltIn(DOM_EXCEPTION);

var $DOMException = function DOMException() {
  anInstance(this, DOMExceptionPrototype);
  var argumentsLength = arguments.length;
  var message = normalizeStringArgument(argumentsLength < 1 ? undefined : arguments[0]);
  var name = normalizeStringArgument(argumentsLength < 2 ? undefined : arguments[1], 'Error');
  var that = new NativeDOMException(message, name);
  var error = Error(message);
  error.name = DOM_EXCEPTION;
  defineProperty(that, 'stack', createPropertyDescriptor(1, clearErrorStack(error.stack, 1)));
  inheritIfRequired(that, this, $DOMException);
  return that;
};

var DOMExceptionPrototype = $DOMException.prototype = NativeDOMException.prototype;
var ERROR_HAS_STACK = ('stack' in Error(DOM_EXCEPTION));
var DOM_EXCEPTION_HAS_STACK = ('stack' in new NativeDOMException(1, 2));
var FORCED_CONSTRUCTOR = ERROR_HAS_STACK && !DOM_EXCEPTION_HAS_STACK; // `DOMException` constructor patch for `.stack` where it's required
// https://webidl.spec.whatwg.org/#es-DOMException-specialness

$({
  global: true,
  forced: IS_PURE || FORCED_CONSTRUCTOR
}, {
  // TODO: fix export logic
  DOMException: FORCED_CONSTRUCTOR ? $DOMException : NativeDOMException
});
var PolyfilledDOMException = getBuiltIn(DOM_EXCEPTION);
var PolyfilledDOMExceptionPrototype = PolyfilledDOMException.prototype;

if (PolyfilledDOMExceptionPrototype.constructor !== PolyfilledDOMException) {
  if (!IS_PURE) {
    defineProperty(PolyfilledDOMExceptionPrototype, 'constructor', createPropertyDescriptor(1, PolyfilledDOMException));
  }

  for (var key in DOMExceptionConstants) {
    if (hasOwn(DOMExceptionConstants, key)) {
      var constant = DOMExceptionConstants[key];
      var constantName = constant.s;

      if (!hasOwn(PolyfilledDOMException, constantName)) {
        defineProperty(PolyfilledDOMException, constantName, createPropertyDescriptor(6, constant.c));
      }
    }
  }
}

/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(19);

var setToStringTag = __webpack_require__(47);

var DOM_EXCEPTION = 'DOMException';
setToStringTag(getBuiltIn(DOM_EXCEPTION), DOM_EXCEPTION);

/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var task = __webpack_require__(195);

var FORCED = !global.setImmediate || !global.clearImmediate; // http://w3c.github.io/setImmediate/

$({
  global: true,
  bind: true,
  enumerable: true,
  forced: FORCED
}, {
  // `setImmediate` method
  // http://w3c.github.io/setImmediate/#si-setImmediate
  setImmediate: task.set,
  // `clearImmediate` method
  // http://w3c.github.io/setImmediate/#si-clearImmediate
  clearImmediate: task.clear
});

/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var microtask = __webpack_require__(260);

var IS_NODE = __webpack_require__(79);

var process = global.process; // `queueMicrotask` method
// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-queuemicrotask

$({
  global: true,
  enumerable: true,
  noTargetGet: true
}, {
  queueMicrotask: function queueMicrotask(fn) {
    var domain = IS_NODE && process.domain;
    microtask(domain ? domain.bind(fn) : fn);
  }
});

/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var IS_PURE = __webpack_require__(25);

var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var getBuiltin = __webpack_require__(19);

var uncurryThis = __webpack_require__(3);

var fails = __webpack_require__(4);

var uid = __webpack_require__(88);

var isCallable = __webpack_require__(9);

var isConstructor = __webpack_require__(90);

var isObject = __webpack_require__(7);

var isSymbol = __webpack_require__(87);

var iterate = __webpack_require__(62);

var anObject = __webpack_require__(5);

var classof = __webpack_require__(73);

var hasOwn = __webpack_require__(14);

var createProperty = __webpack_require__(61);

var createNonEnumerableProperty = __webpack_require__(30);

var lengthOfArrayLike = __webpack_require__(17);

var regExpFlags = __webpack_require__(81);

var ERROR_STACK_INSTALLABLE = __webpack_require__(181);

var Object = global.Object;
var Date = global.Date;
var Error = global.Error;
var EvalError = global.EvalError;
var RangeError = global.RangeError;
var ReferenceError = global.ReferenceError;
var SyntaxError = global.SyntaxError;
var TypeError = global.TypeError;
var URIError = global.URIError;
var PerformanceMark = global.PerformanceMark;
var WebAssembly = global.WebAssembly;
var CompileError = WebAssembly && WebAssembly.CompileError || Error;
var LinkError = WebAssembly && WebAssembly.LinkError || Error;
var RuntimeError = WebAssembly && WebAssembly.RuntimeError || Error;
var DOMException = getBuiltin('DOMException');
var Set = getBuiltin('Set');
var Map = getBuiltin('Map');
var MapPrototype = Map.prototype;
var mapHas = uncurryThis(MapPrototype.has);
var mapGet = uncurryThis(MapPrototype.get);
var mapSet = uncurryThis(MapPrototype.set);
var setAdd = uncurryThis(Set.prototype.add);
var objectKeys = getBuiltin('Object', 'keys');
var push = uncurryThis([].push);
var bolleanValueOf = uncurryThis(true.valueOf);
var numberValueOf = uncurryThis(1.0.valueOf);
var stringValueOf = uncurryThis(''.valueOf);
var getFlags = uncurryThis(regExpFlags);
var getTime = uncurryThis(Date.prototype.getTime);
var PERFORMANCE_MARK = uid('structuredClone');
var DATA_CLONE_ERROR = 'DataCloneError';
var TRANSFERRING = 'Transferring';

var checkBasicSemantic = function checkBasicSemantic(structuredCloneImplementation) {
  return !fails(function () {
    var set1 = new global.Set([7]);
    var set2 = structuredCloneImplementation(set1);
    var number = structuredCloneImplementation(Object(7));
    return set2 == set1 || !set2.has(7) || _typeof(number) != 'object' || number != 7;
  }) && structuredCloneImplementation;
}; // https://github.com/whatwg/html/pull/5749


var checkNewErrorsSemantic = function checkNewErrorsSemantic(structuredCloneImplementation) {
  return !fails(function () {
    var test = structuredCloneImplementation(new global.AggregateError([1], PERFORMANCE_MARK, {
      cause: 3
    }));
    return test.name != 'AggregateError' || test.errors[0] != 1 || test.message != PERFORMANCE_MARK || test.cause != 3;
  }) && structuredCloneImplementation;
}; // FF94+, Safari TP134+, Chrome Canary 98+, NodeJS 17.0+, Deno 1.13+
// current FF and Safari implementations can't clone errors
// https://bugzilla.mozilla.org/show_bug.cgi?id=1556604
// no one of current implementations supports new (html/5749) error cloning semantic


var nativeStructuredClone = global.structuredClone;
var FORCED_REPLACEMENT = IS_PURE || !checkNewErrorsSemantic(nativeStructuredClone); // Chrome 82+, Safari 14.1+, Deno 1.11+
// Chrome 78-81 implementation swaps `.name` and `.message` of cloned `DOMException`
// Safari 14.1 implementation doesn't clone some `RegExp` flags, so requires a workaround
// current Safari implementation can't clone errors
// Deno 1.2-1.10 implementations too naive
// NodeJS 16.0+ does not have `PerformanceMark` constructor, structured cloning implementation
//   from `performance.mark` is too naive and can't clone, for example, `RegExp` or some boxed primitives
//   https://github.com/nodejs/node/issues/40840
// no one of current implementations supports new (html/5749) error cloning semantic

var structuredCloneFromMark = !nativeStructuredClone && checkBasicSemantic(function (value) {
  return new PerformanceMark(PERFORMANCE_MARK, {
    detail: value
  }).detail;
});
var nativeRestrictedStructuredClone = checkBasicSemantic(nativeStructuredClone) || structuredCloneFromMark;

var throwUncloneable = function throwUncloneable(type) {
  throw new DOMException('Uncloneable type: ' + type, DATA_CLONE_ERROR);
};

var throwUnpolyfillable = function throwUnpolyfillable(type, kind) {
  throw new DOMException((kind || 'Cloning') + ' of ' + type + ' cannot be properly polyfilled in this engine', DATA_CLONE_ERROR);
};

var structuredCloneInternal = function structuredCloneInternal(value, map) {
  if (isSymbol(value)) throwUncloneable('Symbol');
  if (!isObject(value)) return value; // effectively preserves circular references

  if (map) {
    if (mapHas(map, value)) return mapGet(map, value);
  } else map = new Map();

  var type = classof(value);
  var deep = false;
  var C, name, cloned, dataTransfer, i, length, keys, key, source, target;

  switch (type) {
    case 'Array':
      cloned = [];
      deep = true;
      break;

    case 'Object':
      cloned = {};
      deep = true;
      break;

    case 'Map':
      cloned = new Map();
      deep = true;
      break;

    case 'Set':
      cloned = new Set();
      deep = true;
      break;

    case 'RegExp':
      // in this block because of a Safari 14.1 bug
      // old FF does not clone regexes passed to the constructor, so get the source and flags directly
      cloned = new RegExp(value.source, 'flags' in value ? value.flags : getFlags(value));
      break;

    case 'Error':
      name = value.name;

      switch (name) {
        case 'AggregateError':
          cloned = getBuiltin('AggregateError')([]);
          break;

        case 'EvalError':
          cloned = EvalError();
          break;

        case 'RangeError':
          cloned = RangeError();
          break;

        case 'ReferenceError':
          cloned = ReferenceError();
          break;

        case 'SyntaxError':
          cloned = SyntaxError();
          break;

        case 'TypeError':
          cloned = TypeError();
          break;

        case 'URIError':
          cloned = URIError();
          break;

        case 'CompileError':
          cloned = CompileError();
          break;

        case 'LinkError':
          cloned = LinkError();
          break;

        case 'RuntimeError':
          cloned = RuntimeError();
          break;

        default:
          cloned = Error();
      }

      deep = true;
      break;

    case 'DOMException':
      cloned = new DOMException(value.message, value.name);
      deep = true;
      break;

    case 'DataView':
    case 'Int8Array':
    case 'Uint8Array':
    case 'Uint8ClampedArray':
    case 'Int16Array':
    case 'Uint16Array':
    case 'Int32Array':
    case 'Uint32Array':
    case 'Float32Array':
    case 'Float64Array':
    case 'BigInt64Array':
    case 'BigUint64Array':
      C = global[type]; // in some old engines like Safari 9, typeof C is 'object'
      // on Uint8ClampedArray or some other constructors

      if (!isObject(C)) throwUnpolyfillable(type);
      cloned = new C( // this is safe, since arraybuffer cannot have circular references
      structuredCloneInternal(value.buffer, map), value.byteOffset, type === 'DataView' ? value.byteLength : value.length);
      break;

    case 'DOMQuad':
      try {
        cloned = new DOMQuad(structuredCloneInternal(value.p1, map), structuredCloneInternal(value.p2, map), structuredCloneInternal(value.p3, map), structuredCloneInternal(value.p4, map));
      } catch (error) {
        if (nativeRestrictedStructuredClone) {
          cloned = nativeRestrictedStructuredClone(value);
        } else throwUnpolyfillable(type);
      }

      break;

    case 'FileList':
      C = global.DataTransfer;

      if (isConstructor(C)) {
        dataTransfer = new C();

        for (i = 0, length = lengthOfArrayLike(value); i < length; i++) {
          dataTransfer.items.add(structuredCloneInternal(value[i], map));
        }

        cloned = dataTransfer.files;
      } else if (nativeRestrictedStructuredClone) {
        cloned = nativeRestrictedStructuredClone(value);
      } else throwUnpolyfillable(type);

      break;

    case 'ImageData':
      // Safari 9 ImageData is a constructor, but typeof ImageData is 'object'
      try {
        cloned = new ImageData(structuredCloneInternal(value.data, map), value.width, value.height, {
          colorSpace: value.colorSpace
        });
      } catch (error) {
        if (nativeRestrictedStructuredClone) {
          cloned = nativeRestrictedStructuredClone(value);
        } else throwUnpolyfillable(type);
      }

      break;

    default:
      if (nativeRestrictedStructuredClone) {
        cloned = nativeRestrictedStructuredClone(value);
      } else switch (type) {
        case 'BigInt':
          // can be a 3rd party polyfill
          cloned = Object(value.valueOf());
          break;

        case 'Boolean':
          cloned = Object(bolleanValueOf(value));
          break;

        case 'Number':
          cloned = Object(numberValueOf(value));
          break;

        case 'String':
          cloned = Object(stringValueOf(value));
          break;

        case 'Date':
          cloned = new Date(getTime(value));
          break;

        case 'ArrayBuffer':
          C = global.DataView; // `ArrayBuffer#slice` is not available in IE10
          // `ArrayBuffer#slice` and `DataView` are not available in old FF

          if (!C && typeof value.slice != 'function') throwUnpolyfillable(type); // detached buffers throws in `DataView` and `.slice`

          try {
            if (typeof value.slice == 'function') {
              cloned = value.slice(0);
            } else {
              length = value.byteLength;
              cloned = new ArrayBuffer(length);
              source = new C(value);
              target = new C(cloned);

              for (i = 0; i < length; i++) {
                target.setUint8(i, source.getUint8(i));
              }
            }
          } catch (error) {
            throw new DOMException('ArrayBuffer is deatched', DATA_CLONE_ERROR);
          }

          break;

        case 'SharedArrayBuffer':
          // SharedArrayBuffer should use shared memory, we can't polyfill it, so return the original
          cloned = value;
          break;

        case 'Blob':
          try {
            cloned = value.slice(0, value.size, value.type);
          } catch (error) {
            throwUnpolyfillable(type);
          }

          break;

        case 'DOMPoint':
        case 'DOMPointReadOnly':
          C = global[type];

          try {
            cloned = C.fromPoint ? C.fromPoint(value) : new C(value.x, value.y, value.z, value.w);
          } catch (error) {
            throwUnpolyfillable(type);
          }

          break;

        case 'DOMRect':
        case 'DOMRectReadOnly':
          C = global[type];

          try {
            cloned = C.fromRect ? C.fromRect(value) : new C(value.x, value.y, value.width, value.height);
          } catch (error) {
            throwUnpolyfillable(type);
          }

          break;

        case 'DOMMatrix':
        case 'DOMMatrixReadOnly':
          C = global[type];

          try {
            cloned = C.fromMatrix ? C.fromMatrix(value) : new C(value);
          } catch (error) {
            throwUnpolyfillable(type);
          }

          break;

        case 'AudioData':
        case 'VideoFrame':
          if (!isCallable(value.clone)) throwUnpolyfillable(type);

          try {
            cloned = value.clone();
          } catch (error) {
            throwUncloneable(type);
          }

          break;

        case 'File':
          try {
            cloned = new File([value], value.name, value);
          } catch (error) {
            throwUnpolyfillable(type);
          }

          break;

        case 'CryptoKey':
        case 'GPUCompilationMessage':
        case 'GPUCompilationInfo':
        case 'ImageBitmap':
        case 'RTCCertificate':
        case 'WebAssembly.Module':
          throwUnpolyfillable(type);
        // break omitted

        default:
          throwUncloneable(type);
      }

  }

  mapSet(map, value, cloned);
  if (deep) switch (type) {
    case 'Array':
    case 'Object':
      keys = objectKeys(value);

      for (i = 0, length = lengthOfArrayLike(keys); i < length; i++) {
        key = keys[i];
        createProperty(cloned, key, structuredCloneInternal(value[key], map));
      }

      break;

    case 'Map':
      value.forEach(function (v, k) {
        mapSet(cloned, structuredCloneInternal(k, map), structuredCloneInternal(v, map));
      });
      break;

    case 'Set':
      value.forEach(function (v) {
        setAdd(cloned, structuredCloneInternal(v, map));
      });
      break;

    case 'Error':
      createNonEnumerableProperty(cloned, 'message', structuredCloneInternal(value.message, map));

      if (hasOwn(value, 'cause')) {
        createNonEnumerableProperty(cloned, 'cause', structuredCloneInternal(value.cause, map));
      }

      if (name == 'AggregateError') {
        cloned.errors = structuredCloneInternal(value.errors, map);
      }

    // break omitted

    case 'DOMException':
      if (ERROR_STACK_INSTALLABLE) {
        createNonEnumerableProperty(cloned, 'stack', structuredCloneInternal(value.stack, map));
      }

  }
  return cloned;
};

var PROPER_TRANSFER = nativeStructuredClone && !fails(function () {
  var buffer = new ArrayBuffer(8);
  var clone = nativeStructuredClone(buffer, {
    transfer: [buffer]
  });
  return buffer.byteLength != 0 || clone.byteLength != 8;
});

var tryToTransfer = function tryToTransfer(rawTransfer, map) {
  if (!isObject(rawTransfer)) throw TypeError('Transfer option cannot be converted to a sequence');
  var transfer = [];
  iterate(rawTransfer, function (value) {
    push(transfer, anObject(value));
  });
  var i = 0;
  var length = lengthOfArrayLike(transfer);
  var value, type, C, transferredArray, transferred, canvas, context;

  if (PROPER_TRANSFER) {
    transferredArray = nativeStructuredClone(transfer, {
      transfer: transfer
    });

    while (i < length) {
      mapSet(map, transfer[i], transferredArray[i++]);
    }
  } else while (i < length) {
    value = transfer[i++];
    if (mapHas(map, value)) throw new DOMException('Duplicate transferable', DATA_CLONE_ERROR);
    type = classof(value);

    switch (type) {
      case 'ImageBitmap':
        C = global.OffscreenCanvas;
        if (!isConstructor(C)) throwUnpolyfillable(type, TRANSFERRING);

        try {
          canvas = new C(value.width, value.height);
          context = canvas.getContext('bitmaprenderer');
          context.transferFromImageBitmap(value);
          transferred = canvas.transferToImageBitmap();
        } catch (error) {
          /* empty */
        }

        break;

      case 'AudioData':
      case 'VideoFrame':
        if (!isCallable(value.clone) || !isCallable(value.close)) throwUnpolyfillable(type, TRANSFERRING);

        try {
          transferred = value.clone();
          value.close();
        } catch (error) {
          /* empty */
        }

        break;

      case 'ArrayBuffer':
      case 'MessagePort':
      case 'OffscreenCanvas':
      case 'ReadableStream':
      case 'TransformStream':
      case 'WritableStream':
        throwUnpolyfillable(type, TRANSFERRING);
    }

    if (transferred === undefined) throw new DOMException('This object cannot be transferred: ' + type, DATA_CLONE_ERROR);
    mapSet(map, value, transferred);
  }
};

$({
  global: true,
  enumerable: true,
  sham: !PROPER_TRANSFER,
  forced: FORCED_REPLACEMENT
}, {
  structuredClone: function structuredClone(value
  /* , { transfer } */
  ) {
    var options = arguments.length > 1 ? anObject(arguments[1]) : undefined;
    var transfer = options ? options.transfer : undefined;
    var map;

    if (transfer !== undefined) {
      map = new Map();
      tryToTransfer(transfer, map);
    }

    return structuredCloneInternal(value, map);
  }
});

/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(0);

var global = __webpack_require__(2);

var apply = __webpack_require__(40);

var isCallable = __webpack_require__(9);

var userAgent = __webpack_require__(58);

var arraySlice = __webpack_require__(78);

var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check

var Function = global.Function;

var wrap = function wrap(scheduler) {
  return function (handler, timeout
  /* , ...arguments */
  ) {
    var boundArgs = arguments.length > 2;
    var args = boundArgs ? arraySlice(arguments, 2) : undefined;
    return scheduler(boundArgs ? function () {
      apply(isCallable(handler) ? handler : Function(handler), this, args);
    } : handler, timeout);
  };
}; // ie9- setTimeout & setInterval additional parameters fix
// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers


$({
  global: true,
  bind: true,
  forced: MSIE
}, {
  // `setTimeout` method
  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout
  setTimeout: wrap(global.setTimeout),
  // `setInterval` method
  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval
  setInterval: wrap(global.setInterval)
});

/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

__webpack_require__(264);

var $ = __webpack_require__(0);

var DESCRIPTORS = __webpack_require__(6);

var USE_NATIVE_URL = __webpack_require__(273);

var global = __webpack_require__(2);

var bind = __webpack_require__(52);

var uncurryThis = __webpack_require__(3);

var defineProperties = __webpack_require__(141);

var redefine = __webpack_require__(18);

var anInstance = __webpack_require__(54);

var hasOwn = __webpack_require__(14);

var assign = __webpack_require__(255);

var arrayFrom = __webpack_require__(243);

var arraySlice = __webpack_require__(113);

var codeAt = __webpack_require__(158).codeAt;

var toASCII = __webpack_require__(597);

var $toString = __webpack_require__(10);

var setToStringTag = __webpack_require__(47);

var URLSearchParamsModule = __webpack_require__(274);

var InternalStateModule = __webpack_require__(21);

var setInternalState = InternalStateModule.set;
var getInternalURLState = InternalStateModule.getterFor('URL');
var URLSearchParams = URLSearchParamsModule.URLSearchParams;
var getInternalSearchParamsState = URLSearchParamsModule.getState;
var NativeURL = global.URL;
var TypeError = global.TypeError;
var parseInt = global.parseInt;
var floor = Math.floor;
var pow = Math.pow;
var charAt = uncurryThis(''.charAt);
var exec = uncurryThis(/./.exec);
var join = uncurryThis([].join);
var numberToString = uncurryThis(1.0.toString);
var pop = uncurryThis([].pop);
var push = uncurryThis([].push);
var replace = uncurryThis(''.replace);
var shift = uncurryThis([].shift);
var split = uncurryThis(''.split);
var stringSlice = uncurryThis(''.slice);
var toLowerCase = uncurryThis(''.toLowerCase);
var unshift = uncurryThis([].unshift);
var INVALID_AUTHORITY = 'Invalid authority';
var INVALID_SCHEME = 'Invalid scheme';
var INVALID_HOST = 'Invalid host';
var INVALID_PORT = 'Invalid port';
var ALPHA = /[a-z]/i; // eslint-disable-next-line regexp/no-obscure-range -- safe

var ALPHANUMERIC = /[\d+-.a-z]/i;
var DIGIT = /\d/;
var HEX_START = /^0x/i;
var OCT = /^[0-7]+$/;
var DEC = /^\d+$/;
var HEX = /^[\da-f]+$/i;
/* eslint-disable regexp/no-control-character -- safe */

var FORBIDDEN_HOST_CODE_POINT = /[\0\t\n\r #%/:<>?@[\\\]^|]/;
var FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\0\t\n\r #/:<>?@[\\\]^|]/;
var LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\u0000-\u0020]+|[\u0000-\u0020]+$/g;
var TAB_AND_NEW_LINE = /[\t\n\r]/g;
/* eslint-enable regexp/no-control-character -- safe */

var EOF; // https://url.spec.whatwg.org/#ipv4-number-parser

var parseIPv4 = function parseIPv4(input) {
  var parts = split(input, '.');
  var partsLength, numbers, index, part, radix, number, ipv4;

  if (parts.length && parts[parts.length - 1] == '') {
    parts.length--;
  }

  partsLength = parts.length;
  if (partsLength > 4) return input;
  numbers = [];

  for (index = 0; index < partsLength; index++) {
    part = parts[index];
    if (part == '') return input;
    radix = 10;

    if (part.length > 1 && charAt(part, 0) == '0') {
      radix = exec(HEX_START, part) ? 16 : 8;
      part = stringSlice(part, radix == 8 ? 1 : 2);
    }

    if (part === '') {
      number = 0;
    } else {
      if (!exec(radix == 10 ? DEC : radix == 8 ? OCT : HEX, part)) return input;
      number = parseInt(part, radix);
    }

    push(numbers, number);
  }

  for (index = 0; index < partsLength; index++) {
    number = numbers[index];

    if (index == partsLength - 1) {
      if (number >= pow(256, 5 - partsLength)) return null;
    } else if (number > 255) return null;
  }

  ipv4 = pop(numbers);

  for (index = 0; index < numbers.length; index++) {
    ipv4 += numbers[index] * pow(256, 3 - index);
  }

  return ipv4;
}; // https://url.spec.whatwg.org/#concept-ipv6-parser
// eslint-disable-next-line max-statements -- TODO


var parseIPv6 = function parseIPv6(input) {
  var address = [0, 0, 0, 0, 0, 0, 0, 0];
  var pieceIndex = 0;
  var compress = null;
  var pointer = 0;
  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;

  var chr = function chr() {
    return charAt(input, pointer);
  };

  if (chr() == ':') {
    if (charAt(input, 1) != ':') return;
    pointer += 2;
    pieceIndex++;
    compress = pieceIndex;
  }

  while (chr()) {
    if (pieceIndex == 8) return;

    if (chr() == ':') {
      if (compress !== null) return;
      pointer++;
      pieceIndex++;
      compress = pieceIndex;
      continue;
    }

    value = length = 0;

    while (length < 4 && exec(HEX, chr())) {
      value = value * 16 + parseInt(chr(), 16);
      pointer++;
      length++;
    }

    if (chr() == '.') {
      if (length == 0) return;
      pointer -= length;
      if (pieceIndex > 6) return;
      numbersSeen = 0;

      while (chr()) {
        ipv4Piece = null;

        if (numbersSeen > 0) {
          if (chr() == '.' && numbersSeen < 4) pointer++;else return;
        }

        if (!exec(DIGIT, chr())) return;

        while (exec(DIGIT, chr())) {
          number = parseInt(chr(), 10);
          if (ipv4Piece === null) ipv4Piece = number;else if (ipv4Piece == 0) return;else ipv4Piece = ipv4Piece * 10 + number;
          if (ipv4Piece > 255) return;
          pointer++;
        }

        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;
        numbersSeen++;
        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;
      }

      if (numbersSeen != 4) return;
      break;
    } else if (chr() == ':') {
      pointer++;
      if (!chr()) return;
    } else if (chr()) return;

    address[pieceIndex++] = value;
  }

  if (compress !== null) {
    swaps = pieceIndex - compress;
    pieceIndex = 7;

    while (pieceIndex != 0 && swaps > 0) {
      swap = address[pieceIndex];
      address[pieceIndex--] = address[compress + swaps - 1];
      address[compress + --swaps] = swap;
    }
  } else if (pieceIndex != 8) return;

  return address;
};

var findLongestZeroSequence = function findLongestZeroSequence(ipv6) {
  var maxIndex = null;
  var maxLength = 1;
  var currStart = null;
  var currLength = 0;
  var index = 0;

  for (; index < 8; index++) {
    if (ipv6[index] !== 0) {
      if (currLength > maxLength) {
        maxIndex = currStart;
        maxLength = currLength;
      }

      currStart = null;
      currLength = 0;
    } else {
      if (currStart === null) currStart = index;
      ++currLength;
    }
  }

  if (currLength > maxLength) {
    maxIndex = currStart;
    maxLength = currLength;
  }

  return maxIndex;
}; // https://url.spec.whatwg.org/#host-serializing


var serializeHost = function serializeHost(host) {
  var result, index, compress, ignore0; // ipv4

  if (typeof host == 'number') {
    result = [];

    for (index = 0; index < 4; index++) {
      unshift(result, host % 256);
      host = floor(host / 256);
    }

    return join(result, '.'); // ipv6
  } else if (_typeof(host) == 'object') {
    result = '';
    compress = findLongestZeroSequence(host);

    for (index = 0; index < 8; index++) {
      if (ignore0 && host[index] === 0) continue;
      if (ignore0) ignore0 = false;

      if (compress === index) {
        result += index ? ':' : '::';
        ignore0 = true;
      } else {
        result += numberToString(host[index], 16);
        if (index < 7) result += ':';
      }
    }

    return '[' + result + ']';
  }

  return host;
};

var C0ControlPercentEncodeSet = {};
var fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {
  ' ': 1,
  '"': 1,
  '<': 1,
  '>': 1,
  '`': 1
});
var pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {
  '#': 1,
  '?': 1,
  '{': 1,
  '}': 1
});
var userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {
  '/': 1,
  ':': 1,
  ';': 1,
  '=': 1,
  '@': 1,
  '[': 1,
  '\\': 1,
  ']': 1,
  '^': 1,
  '|': 1
});

var percentEncode = function percentEncode(chr, set) {
  var code = codeAt(chr, 0);
  return code > 0x20 && code < 0x7F && !hasOwn(set, chr) ? chr : encodeURIComponent(chr);
}; // https://url.spec.whatwg.org/#special-scheme


var specialSchemes = {
  ftp: 21,
  file: null,
  http: 80,
  https: 443,
  ws: 80,
  wss: 443
}; // https://url.spec.whatwg.org/#windows-drive-letter

var isWindowsDriveLetter = function isWindowsDriveLetter(string, normalized) {
  var second;
  return string.length == 2 && exec(ALPHA, charAt(string, 0)) && ((second = charAt(string, 1)) == ':' || !normalized && second == '|');
}; // https://url.spec.whatwg.org/#start-with-a-windows-drive-letter


var startsWithWindowsDriveLetter = function startsWithWindowsDriveLetter(string) {
  var third;
  return string.length > 1 && isWindowsDriveLetter(stringSlice(string, 0, 2)) && (string.length == 2 || (third = charAt(string, 2)) === '/' || third === '\\' || third === '?' || third === '#');
}; // https://url.spec.whatwg.org/#single-dot-path-segment


var isSingleDot = function isSingleDot(segment) {
  return segment === '.' || toLowerCase(segment) === '%2e';
}; // https://url.spec.whatwg.org/#double-dot-path-segment


var isDoubleDot = function isDoubleDot(segment) {
  segment = toLowerCase(segment);
  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';
}; // States:


var SCHEME_START = {};
var SCHEME = {};
var NO_SCHEME = {};
var SPECIAL_RELATIVE_OR_AUTHORITY = {};
var PATH_OR_AUTHORITY = {};
var RELATIVE = {};
var RELATIVE_SLASH = {};
var SPECIAL_AUTHORITY_SLASHES = {};
var SPECIAL_AUTHORITY_IGNORE_SLASHES = {};
var AUTHORITY = {};
var HOST = {};
var HOSTNAME = {};
var PORT = {};
var FILE = {};
var FILE_SLASH = {};
var FILE_HOST = {};
var PATH_START = {};
var PATH = {};
var CANNOT_BE_A_BASE_URL_PATH = {};
var QUERY = {};
var FRAGMENT = {};

var URLState = function URLState(url, isBase, base) {
  var urlString = $toString(url);
  var baseState, failure, searchParams;

  if (isBase) {
    failure = this.parse(urlString);
    if (failure) throw TypeError(failure);
    this.searchParams = null;
  } else {
    if (base !== undefined) baseState = new URLState(base, true);
    failure = this.parse(urlString, null, baseState);
    if (failure) throw TypeError(failure);
    searchParams = getInternalSearchParamsState(new URLSearchParams());
    searchParams.bindURL(this);
    this.searchParams = searchParams;
  }
};

URLState.prototype = {
  type: 'URL',
  // https://url.spec.whatwg.org/#url-parsing
  // eslint-disable-next-line max-statements -- TODO
  parse: function parse(input, stateOverride, base) {
    var url = this;
    var state = stateOverride || SCHEME_START;
    var pointer = 0;
    var buffer = '';
    var seenAt = false;
    var seenBracket = false;
    var seenPasswordToken = false;
    var codePoints, chr, bufferCodePoints, failure;
    input = $toString(input);

    if (!stateOverride) {
      url.scheme = '';
      url.username = '';
      url.password = '';
      url.host = null;
      url.port = null;
      url.path = [];
      url.query = null;
      url.fragment = null;
      url.cannotBeABaseURL = false;
      input = replace(input, LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');
    }

    input = replace(input, TAB_AND_NEW_LINE, '');
    codePoints = arrayFrom(input);

    while (pointer <= codePoints.length) {
      chr = codePoints[pointer];

      switch (state) {
        case SCHEME_START:
          if (chr && exec(ALPHA, chr)) {
            buffer += toLowerCase(chr);
            state = SCHEME;
          } else if (!stateOverride) {
            state = NO_SCHEME;
            continue;
          } else return INVALID_SCHEME;

          break;

        case SCHEME:
          if (chr && (exec(ALPHANUMERIC, chr) || chr == '+' || chr == '-' || chr == '.')) {
            buffer += toLowerCase(chr);
          } else if (chr == ':') {
            if (stateOverride && (url.isSpecial() != hasOwn(specialSchemes, buffer) || buffer == 'file' && (url.includesCredentials() || url.port !== null) || url.scheme == 'file' && !url.host)) return;
            url.scheme = buffer;

            if (stateOverride) {
              if (url.isSpecial() && specialSchemes[url.scheme] == url.port) url.port = null;
              return;
            }

            buffer = '';

            if (url.scheme == 'file') {
              state = FILE;
            } else if (url.isSpecial() && base && base.scheme == url.scheme) {
              state = SPECIAL_RELATIVE_OR_AUTHORITY;
            } else if (url.isSpecial()) {
              state = SPECIAL_AUTHORITY_SLASHES;
            } else if (codePoints[pointer + 1] == '/') {
              state = PATH_OR_AUTHORITY;
              pointer++;
            } else {
              url.cannotBeABaseURL = true;
              push(url.path, '');
              state = CANNOT_BE_A_BASE_URL_PATH;
            }
          } else if (!stateOverride) {
            buffer = '';
            state = NO_SCHEME;
            pointer = 0;
            continue;
          } else return INVALID_SCHEME;

          break;

        case NO_SCHEME:
          if (!base || base.cannotBeABaseURL && chr != '#') return INVALID_SCHEME;

          if (base.cannotBeABaseURL && chr == '#') {
            url.scheme = base.scheme;
            url.path = arraySlice(base.path);
            url.query = base.query;
            url.fragment = '';
            url.cannotBeABaseURL = true;
            state = FRAGMENT;
            break;
          }

          state = base.scheme == 'file' ? FILE : RELATIVE;
          continue;

        case SPECIAL_RELATIVE_OR_AUTHORITY:
          if (chr == '/' && codePoints[pointer + 1] == '/') {
            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
            pointer++;
          } else {
            state = RELATIVE;
            continue;
          }

          break;

        case PATH_OR_AUTHORITY:
          if (chr == '/') {
            state = AUTHORITY;
            break;
          } else {
            state = PATH;
            continue;
          }

        case RELATIVE:
          url.scheme = base.scheme;

          if (chr == EOF) {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySlice(base.path);
            url.query = base.query;
          } else if (chr == '/' || chr == '\\' && url.isSpecial()) {
            state = RELATIVE_SLASH;
          } else if (chr == '?') {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySlice(base.path);
            url.query = '';
            state = QUERY;
          } else if (chr == '#') {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySlice(base.path);
            url.query = base.query;
            url.fragment = '';
            state = FRAGMENT;
          } else {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySlice(base.path);
            url.path.length--;
            state = PATH;
            continue;
          }

          break;

        case RELATIVE_SLASH:
          if (url.isSpecial() && (chr == '/' || chr == '\\')) {
            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
          } else if (chr == '/') {
            state = AUTHORITY;
          } else {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            state = PATH;
            continue;
          }

          break;

        case SPECIAL_AUTHORITY_SLASHES:
          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
          if (chr != '/' || charAt(buffer, pointer + 1) != '/') continue;
          pointer++;
          break;

        case SPECIAL_AUTHORITY_IGNORE_SLASHES:
          if (chr != '/' && chr != '\\') {
            state = AUTHORITY;
            continue;
          }

          break;

        case AUTHORITY:
          if (chr == '@') {
            if (seenAt) buffer = '%40' + buffer;
            seenAt = true;
            bufferCodePoints = arrayFrom(buffer);

            for (var i = 0; i < bufferCodePoints.length; i++) {
              var codePoint = bufferCodePoints[i];

              if (codePoint == ':' && !seenPasswordToken) {
                seenPasswordToken = true;
                continue;
              }

              var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);
              if (seenPasswordToken) url.password += encodedCodePoints;else url.username += encodedCodePoints;
            }

            buffer = '';
          } else if (chr == EOF || chr == '/' || chr == '?' || chr == '#' || chr == '\\' && url.isSpecial()) {
            if (seenAt && buffer == '') return INVALID_AUTHORITY;
            pointer -= arrayFrom(buffer).length + 1;
            buffer = '';
            state = HOST;
          } else buffer += chr;

          break;

        case HOST:
        case HOSTNAME:
          if (stateOverride && url.scheme == 'file') {
            state = FILE_HOST;
            continue;
          } else if (chr == ':' && !seenBracket) {
            if (buffer == '') return INVALID_HOST;
            failure = url.parseHost(buffer);
            if (failure) return failure;
            buffer = '';
            state = PORT;
            if (stateOverride == HOSTNAME) return;
          } else if (chr == EOF || chr == '/' || chr == '?' || chr == '#' || chr == '\\' && url.isSpecial()) {
            if (url.isSpecial() && buffer == '') return INVALID_HOST;
            if (stateOverride && buffer == '' && (url.includesCredentials() || url.port !== null)) return;
            failure = url.parseHost(buffer);
            if (failure) return failure;
            buffer = '';
            state = PATH_START;
            if (stateOverride) return;
            continue;
          } else {
            if (chr == '[') seenBracket = true;else if (chr == ']') seenBracket = false;
            buffer += chr;
          }

          break;

        case PORT:
          if (exec(DIGIT, chr)) {
            buffer += chr;
          } else if (chr == EOF || chr == '/' || chr == '?' || chr == '#' || chr == '\\' && url.isSpecial() || stateOverride) {
            if (buffer != '') {
              var port = parseInt(buffer, 10);
              if (port > 0xFFFF) return INVALID_PORT;
              url.port = url.isSpecial() && port === specialSchemes[url.scheme] ? null : port;
              buffer = '';
            }

            if (stateOverride) return;
            state = PATH_START;
            continue;
          } else return INVALID_PORT;

          break;

        case FILE:
          url.scheme = 'file';
          if (chr == '/' || chr == '\\') state = FILE_SLASH;else if (base && base.scheme == 'file') {
            if (chr == EOF) {
              url.host = base.host;
              url.path = arraySlice(base.path);
              url.query = base.query;
            } else if (chr == '?') {
              url.host = base.host;
              url.path = arraySlice(base.path);
              url.query = '';
              state = QUERY;
            } else if (chr == '#') {
              url.host = base.host;
              url.path = arraySlice(base.path);
              url.query = base.query;
              url.fragment = '';
              state = FRAGMENT;
            } else {
              if (!startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {
                url.host = base.host;
                url.path = arraySlice(base.path);
                url.shortenPath();
              }

              state = PATH;
              continue;
            }
          } else {
            state = PATH;
            continue;
          }
          break;

        case FILE_SLASH:
          if (chr == '/' || chr == '\\') {
            state = FILE_HOST;
            break;
          }

          if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {
            if (isWindowsDriveLetter(base.path[0], true)) push(url.path, base.path[0]);else url.host = base.host;
          }

          state = PATH;
          continue;

        case FILE_HOST:
          if (chr == EOF || chr == '/' || chr == '\\' || chr == '?' || chr == '#') {
            if (!stateOverride && isWindowsDriveLetter(buffer)) {
              state = PATH;
            } else if (buffer == '') {
              url.host = '';
              if (stateOverride) return;
              state = PATH_START;
            } else {
              failure = url.parseHost(buffer);
              if (failure) return failure;
              if (url.host == 'localhost') url.host = '';
              if (stateOverride) return;
              buffer = '';
              state = PATH_START;
            }

            continue;
          } else buffer += chr;

          break;

        case PATH_START:
          if (url.isSpecial()) {
            state = PATH;
            if (chr != '/' && chr != '\\') continue;
          } else if (!stateOverride && chr == '?') {
            url.query = '';
            state = QUERY;
          } else if (!stateOverride && chr == '#') {
            url.fragment = '';
            state = FRAGMENT;
          } else if (chr != EOF) {
            state = PATH;
            if (chr != '/') continue;
          }

          break;

        case PATH:
          if (chr == EOF || chr == '/' || chr == '\\' && url.isSpecial() || !stateOverride && (chr == '?' || chr == '#')) {
            if (isDoubleDot(buffer)) {
              url.shortenPath();

              if (chr != '/' && !(chr == '\\' && url.isSpecial())) {
                push(url.path, '');
              }
            } else if (isSingleDot(buffer)) {
              if (chr != '/' && !(chr == '\\' && url.isSpecial())) {
                push(url.path, '');
              }
            } else {
              if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {
                if (url.host) url.host = '';
                buffer = charAt(buffer, 0) + ':'; // normalize windows drive letter
              }

              push(url.path, buffer);
            }

            buffer = '';

            if (url.scheme == 'file' && (chr == EOF || chr == '?' || chr == '#')) {
              while (url.path.length > 1 && url.path[0] === '') {
                shift(url.path);
              }
            }

            if (chr == '?') {
              url.query = '';
              state = QUERY;
            } else if (chr == '#') {
              url.fragment = '';
              state = FRAGMENT;
            }
          } else {
            buffer += percentEncode(chr, pathPercentEncodeSet);
          }

          break;

        case CANNOT_BE_A_BASE_URL_PATH:
          if (chr == '?') {
            url.query = '';
            state = QUERY;
          } else if (chr == '#') {
            url.fragment = '';
            state = FRAGMENT;
          } else if (chr != EOF) {
            url.path[0] += percentEncode(chr, C0ControlPercentEncodeSet);
          }

          break;

        case QUERY:
          if (!stateOverride && chr == '#') {
            url.fragment = '';
            state = FRAGMENT;
          } else if (chr != EOF) {
            if (chr == "'" && url.isSpecial()) url.query += '%27';else if (chr == '#') url.query += '%23';else url.query += percentEncode(chr, C0ControlPercentEncodeSet);
          }

          break;

        case FRAGMENT:
          if (chr != EOF) url.fragment += percentEncode(chr, fragmentPercentEncodeSet);
          break;
      }

      pointer++;
    }
  },
  // https://url.spec.whatwg.org/#host-parsing
  parseHost: function parseHost(input) {
    var result, codePoints, index;

    if (charAt(input, 0) == '[') {
      if (charAt(input, input.length - 1) != ']') return INVALID_HOST;
      result = parseIPv6(stringSlice(input, 1, -1));
      if (!result) return INVALID_HOST;
      this.host = result; // opaque host
    } else if (!this.isSpecial()) {
      if (exec(FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT, input)) return INVALID_HOST;
      result = '';
      codePoints = arrayFrom(input);

      for (index = 0; index < codePoints.length; index++) {
        result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);
      }

      this.host = result;
    } else {
      input = toASCII(input);
      if (exec(FORBIDDEN_HOST_CODE_POINT, input)) return INVALID_HOST;
      result = parseIPv4(input);
      if (result === null) return INVALID_HOST;
      this.host = result;
    }
  },
  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port
  cannotHaveUsernamePasswordPort: function cannotHaveUsernamePasswordPort() {
    return !this.host || this.cannotBeABaseURL || this.scheme == 'file';
  },
  // https://url.spec.whatwg.org/#include-credentials
  includesCredentials: function includesCredentials() {
    return this.username != '' || this.password != '';
  },
  // https://url.spec.whatwg.org/#is-special
  isSpecial: function isSpecial() {
    return hasOwn(specialSchemes, this.scheme);
  },
  // https://url.spec.whatwg.org/#shorten-a-urls-path
  shortenPath: function shortenPath() {
    var path = this.path;
    var pathSize = path.length;

    if (pathSize && (this.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {
      path.length--;
    }
  },
  // https://url.spec.whatwg.org/#concept-url-serializer
  serialize: function serialize() {
    var url = this;
    var scheme = url.scheme;
    var username = url.username;
    var password = url.password;
    var host = url.host;
    var port = url.port;
    var path = url.path;
    var query = url.query;
    var fragment = url.fragment;
    var output = scheme + ':';

    if (host !== null) {
      output += '//';

      if (url.includesCredentials()) {
        output += username + (password ? ':' + password : '') + '@';
      }

      output += serializeHost(host);
      if (port !== null) output += ':' + port;
    } else if (scheme == 'file') output += '//';

    output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';
    if (query !== null) output += '?' + query;
    if (fragment !== null) output += '#' + fragment;
    return output;
  },
  // https://url.spec.whatwg.org/#dom-url-href
  setHref: function setHref(href) {
    var failure = this.parse(href);
    if (failure) throw TypeError(failure);
    this.searchParams.update();
  },
  // https://url.spec.whatwg.org/#dom-url-origin
  getOrigin: function getOrigin() {
    var scheme = this.scheme;
    var port = this.port;
    if (scheme == 'blob') try {
      return new URLConstructor(scheme.path[0]).origin;
    } catch (error) {
      return 'null';
    }
    if (scheme == 'file' || !this.isSpecial()) return 'null';
    return scheme + '://' + serializeHost(this.host) + (port !== null ? ':' + port : '');
  },
  // https://url.spec.whatwg.org/#dom-url-protocol
  getProtocol: function getProtocol() {
    return this.scheme + ':';
  },
  setProtocol: function setProtocol(protocol) {
    this.parse($toString(protocol) + ':', SCHEME_START);
  },
  // https://url.spec.whatwg.org/#dom-url-username
  getUsername: function getUsername() {
    return this.username;
  },
  setUsername: function setUsername(username) {
    var codePoints = arrayFrom($toString(username));
    if (this.cannotHaveUsernamePasswordPort()) return;
    this.username = '';

    for (var i = 0; i < codePoints.length; i++) {
      this.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);
    }
  },
  // https://url.spec.whatwg.org/#dom-url-password
  getPassword: function getPassword() {
    return this.password;
  },
  setPassword: function setPassword(password) {
    var codePoints = arrayFrom($toString(password));
    if (this.cannotHaveUsernamePasswordPort()) return;
    this.password = '';

    for (var i = 0; i < codePoints.length; i++) {
      this.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);
    }
  },
  // https://url.spec.whatwg.org/#dom-url-host
  getHost: function getHost() {
    var host = this.host;
    var port = this.port;
    return host === null ? '' : port === null ? serializeHost(host) : serializeHost(host) + ':' + port;
  },
  setHost: function setHost(host) {
    if (this.cannotBeABaseURL) return;
    this.parse(host, HOST);
  },
  // https://url.spec.whatwg.org/#dom-url-hostname
  getHostname: function getHostname() {
    var host = this.host;
    return host === null ? '' : serializeHost(host);
  },
  setHostname: function setHostname(hostname) {
    if (this.cannotBeABaseURL) return;
    this.parse(hostname, HOSTNAME);
  },
  // https://url.spec.whatwg.org/#dom-url-port
  getPort: function getPort() {
    var port = this.port;
    return port === null ? '' : $toString(port);
  },
  setPort: function setPort(port) {
    if (this.cannotHaveUsernamePasswordPort()) return;
    port = $toString(port);
    if (port == '') this.port = null;else this.parse(port, PORT);
  },
  // https://url.spec.whatwg.org/#dom-url-pathname
  getPathname: function getPathname() {
    var path = this.path;
    return this.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';
  },
  setPathname: function setPathname(pathname) {
    if (this.cannotBeABaseURL) return;
    this.path = [];
    this.parse(pathname, PATH_START);
  },
  // https://url.spec.whatwg.org/#dom-url-search
  getSearch: function getSearch() {
    var query = this.query;
    return query ? '?' + query : '';
  },
  setSearch: function setSearch(search) {
    search = $toString(search);

    if (search == '') {
      this.query = null;
    } else {
      if ('?' == charAt(search, 0)) search = stringSlice(search, 1);
      this.query = '';
      this.parse(search, QUERY);
    }

    this.searchParams.update();
  },
  // https://url.spec.whatwg.org/#dom-url-searchparams
  getSearchParams: function getSearchParams() {
    return this.searchParams.facade;
  },
  // https://url.spec.whatwg.org/#dom-url-hash
  getHash: function getHash() {
    var fragment = this.fragment;
    return fragment ? '#' + fragment : '';
  },
  setHash: function setHash(hash) {
    hash = $toString(hash);

    if (hash == '') {
      this.fragment = null;
      return;
    }

    if ('#' == charAt(hash, 0)) hash = stringSlice(hash, 1);
    this.fragment = '';
    this.parse(hash, FRAGMENT);
  },
  update: function update() {
    this.query = this.searchParams.serialize() || null;
  }
}; // `URL` constructor
// https://url.spec.whatwg.org/#url-class

var URLConstructor = function URL(url
/* , base */
) {
  var that = anInstance(this, URLPrototype);
  var base = arguments.length > 1 ? arguments[1] : undefined;
  var state = setInternalState(that, new URLState(url, false, base));

  if (!DESCRIPTORS) {
    that.href = state.serialize();
    that.origin = state.getOrigin();
    that.protocol = state.getProtocol();
    that.username = state.getUsername();
    that.password = state.getPassword();
    that.host = state.getHost();
    that.hostname = state.getHostname();
    that.port = state.getPort();
    that.pathname = state.getPathname();
    that.search = state.getSearch();
    that.searchParams = state.getSearchParams();
    that.hash = state.getHash();
  }
};

var URLPrototype = URLConstructor.prototype;

var accessorDescriptor = function accessorDescriptor(getter, setter) {
  return {
    get: function get() {
      return getInternalURLState(this)[getter]();
    },
    set: setter && function (value) {
      return getInternalURLState(this)[setter](value);
    },
    configurable: true,
    enumerable: true
  };
};

if (DESCRIPTORS) {
  defineProperties(URLPrototype, {
    // `URL.prototype.href` accessors pair
    // https://url.spec.whatwg.org/#dom-url-href
    href: accessorDescriptor('serialize', 'setHref'),
    // `URL.prototype.origin` getter
    // https://url.spec.whatwg.org/#dom-url-origin
    origin: accessorDescriptor('getOrigin'),
    // `URL.prototype.protocol` accessors pair
    // https://url.spec.whatwg.org/#dom-url-protocol
    protocol: accessorDescriptor('getProtocol', 'setProtocol'),
    // `URL.prototype.username` accessors pair
    // https://url.spec.whatwg.org/#dom-url-username
    username: accessorDescriptor('getUsername', 'setUsername'),
    // `URL.prototype.password` accessors pair
    // https://url.spec.whatwg.org/#dom-url-password
    password: accessorDescriptor('getPassword', 'setPassword'),
    // `URL.prototype.host` accessors pair
    // https://url.spec.whatwg.org/#dom-url-host
    host: accessorDescriptor('getHost', 'setHost'),
    // `URL.prototype.hostname` accessors pair
    // https://url.spec.whatwg.org/#dom-url-hostname
    hostname: accessorDescriptor('getHostname', 'setHostname'),
    // `URL.prototype.port` accessors pair
    // https://url.spec.whatwg.org/#dom-url-port
    port: accessorDescriptor('getPort', 'setPort'),
    // `URL.prototype.pathname` accessors pair
    // https://url.spec.whatwg.org/#dom-url-pathname
    pathname: accessorDescriptor('getPathname', 'setPathname'),
    // `URL.prototype.search` accessors pair
    // https://url.spec.whatwg.org/#dom-url-search
    search: accessorDescriptor('getSearch', 'setSearch'),
    // `URL.prototype.searchParams` getter
    // https://url.spec.whatwg.org/#dom-url-searchparams
    searchParams: accessorDescriptor('getSearchParams'),
    // `URL.prototype.hash` accessors pair
    // https://url.spec.whatwg.org/#dom-url-hash
    hash: accessorDescriptor('getHash', 'setHash')
  });
} // `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson


redefine(URLPrototype, 'toJSON', function toJSON() {
  return getInternalURLState(this).serialize();
}, {
  enumerable: true
}); // `URL.prototype.toString` method
// https://url.spec.whatwg.org/#URL-stringification-behavior

redefine(URLPrototype, 'toString', function toString() {
  return getInternalURLState(this).serialize();
}, {
  enumerable: true
});

if (NativeURL) {
  var nativeCreateObjectURL = NativeURL.createObjectURL;
  var nativeRevokeObjectURL = NativeURL.revokeObjectURL; // `URL.createObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL

  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', bind(nativeCreateObjectURL, NativeURL)); // `URL.revokeObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL

  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', bind(nativeRevokeObjectURL, NativeURL));
}

setToStringTag(URLConstructor, 'URL');
$({
  global: true,
  forced: !USE_NATIVE_URL,
  sham: !DESCRIPTORS
}, {
  URL: URLConstructor
});

/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js

var global = __webpack_require__(2);

var uncurryThis = __webpack_require__(3);

var maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1

var base = 36;
var tMin = 1;
var tMax = 26;
var skew = 38;
var damp = 700;
var initialBias = 72;
var initialN = 128; // 0x80

var delimiter = '-'; // '\x2D'

var regexNonASCII = /[^\0-\u007E]/; // non-ASCII chars

var regexSeparators = /[.\u3002\uFF0E\uFF61]/g; // RFC 3490 separators

var OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';
var baseMinusTMin = base - tMin;
var RangeError = global.RangeError;
var exec = uncurryThis(regexSeparators.exec);
var floor = Math.floor;
var fromCharCode = String.fromCharCode;
var charCodeAt = uncurryThis(''.charCodeAt);
var join = uncurryThis([].join);
var push = uncurryThis([].push);
var replace = uncurryThis(''.replace);
var split = uncurryThis(''.split);
var toLowerCase = uncurryThis(''.toLowerCase);
/**
 * Creates an array containing the numeric code points of each Unicode
 * character in the string. While JavaScript uses UCS-2 internally,
 * this function will convert a pair of surrogate halves (each of which
 * UCS-2 exposes as separate characters) into a single code point,
 * matching UTF-16.
 */

var ucs2decode = function ucs2decode(string) {
  var output = [];
  var counter = 0;
  var length = string.length;

  while (counter < length) {
    var value = charCodeAt(string, counter++);

    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
      // It's a high surrogate, and there is a next character.
      var extra = charCodeAt(string, counter++);

      if ((extra & 0xFC00) == 0xDC00) {
        // Low surrogate.
        push(output, ((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
      } else {
        // It's an unmatched surrogate; only append this code unit, in case the
        // next code unit is the high surrogate of a surrogate pair.
        push(output, value);
        counter--;
      }
    } else {
      push(output, value);
    }
  }

  return output;
};
/**
 * Converts a digit/integer into a basic code point.
 */


var digitToBasic = function digitToBasic(digit) {
  //  0..25 map to ASCII a..z or A..Z
  // 26..35 map to ASCII 0..9
  return digit + 22 + 75 * (digit < 26);
};
/**
 * Bias adaptation function as per section 3.4 of RFC 3492.
 * https://tools.ietf.org/html/rfc3492#section-3.4
 */


var adapt = function adapt(delta, numPoints, firstTime) {
  var k = 0;
  delta = firstTime ? floor(delta / damp) : delta >> 1;
  delta += floor(delta / numPoints);

  while (delta > baseMinusTMin * tMax >> 1) {
    delta = floor(delta / baseMinusTMin);
    k += base;
  }

  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
};
/**
 * Converts a string of Unicode symbols (e.g. a domain name label) to a
 * Punycode string of ASCII-only symbols.
 */


var encode = function encode(input) {
  var output = []; // Convert the input in UCS-2 to an array of Unicode code points.

  input = ucs2decode(input); // Cache the length.

  var inputLength = input.length; // Initialize the state.

  var n = initialN;
  var delta = 0;
  var bias = initialBias;
  var i, currentValue; // Handle the basic code points.

  for (i = 0; i < input.length; i++) {
    currentValue = input[i];

    if (currentValue < 0x80) {
      push(output, fromCharCode(currentValue));
    }
  }

  var basicLength = output.length; // number of basic code points.

  var handledCPCount = basicLength; // number of code points that have been handled;
  // Finish the basic string with a delimiter unless it's empty.

  if (basicLength) {
    push(output, delimiter);
  } // Main encoding loop:


  while (handledCPCount < inputLength) {
    // All non-basic code points < n have been handled already. Find the next larger one:
    var m = maxInt;

    for (i = 0; i < input.length; i++) {
      currentValue = input[i];

      if (currentValue >= n && currentValue < m) {
        m = currentValue;
      }
    } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.


    var handledCPCountPlusOne = handledCPCount + 1;

    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
      throw RangeError(OVERFLOW_ERROR);
    }

    delta += (m - n) * handledCPCountPlusOne;
    n = m;

    for (i = 0; i < input.length; i++) {
      currentValue = input[i];

      if (currentValue < n && ++delta > maxInt) {
        throw RangeError(OVERFLOW_ERROR);
      }

      if (currentValue == n) {
        // Represent delta as a generalized variable-length integer.
        var q = delta;
        var k = base;

        while (true) {
          var t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
          if (q < t) break;
          var qMinusT = q - t;
          var baseMinusT = base - t;
          push(output, fromCharCode(digitToBasic(t + qMinusT % baseMinusT)));
          q = floor(qMinusT / baseMinusT);
          k += base;
        }

        push(output, fromCharCode(digitToBasic(q)));
        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
        delta = 0;
        handledCPCount++;
      }
    }

    delta++;
    n++;
  }

  return join(output, '');
};

module.exports = function (input) {
  var encoded = [];
  var labels = split(replace(toLowerCase(input), regexSeparators, "."), '.');
  var i, label;

  for (i = 0; i < labels.length; i++) {
    label = labels[i];
    push(encoded, exec(regexNonASCII, label) ? 'xn--' + encode(label) : label);
  }

  return join(encoded, '.');
};

/***/ }),
/* 598 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var $ = __webpack_require__(0);

var call = __webpack_require__(13); // `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson


$({
  target: 'URL',
  proto: true,
  enumerable: true
}, {
  toJSON: function toJSON() {
    return call(URL.prototype.toString, this);
  }
});

/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var runtime = function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.

  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }

  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function define(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.

    generator._invoke = makeInvokeMethod(innerFn, self, context);
    return generator;
  }

  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.

  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed"; // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.

  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.

  function Generator() {}

  function GeneratorFunction() {}

  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.


  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });
  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = GeneratorFunctionPrototype;
  define(Gp, "constructor", GeneratorFunctionPrototype);
  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"); // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.

  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      define(prototype, method, function (arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
    // do is to check its .name property.
    (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  exports.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }

    genFun.prototype = Object.create(Gp);
    return genFun;
  }; // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.


  exports.awrap = function (arg) {
    return {
      __await: arg
    };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);

      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;

        if (value && _typeof(value) === "object" && hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function (unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function (error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise = // If enqueue has been called before, then we want to wait until
      // all previous Promises have been resolved before calling invoke,
      // so that results are always delivered in the correct order. If
      // enqueue has not been called before, then it is important to
      // call invoke immediately, without waiting on a callback to fire,
      // so that the async generator function has the opportunity to do
      // any necessary setup in a predictable way. This predictability
      // is why the Promise constructor synchronously invokes its
      // executor callback, and why async functions synchronously
      // execute code before the first await. Since we implement simple
      // async functions in terms of async generators, it is especially
      // important to get this right, even though it requires care.
      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
      // invocations of the iterator.
      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    } // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).


    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  });
  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.

  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
    : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;
    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        } // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume


        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;

        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);

          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;
        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);
        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;
        var record = tryCatch(innerFn, self, context);

        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };
        } else if (record.type === "throw") {
          state = GenStateCompleted; // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.

          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  } // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.


  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];

    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError("The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (!info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).

      context.next = delegate.nextLoc; // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.

      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }
    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    } // The delegate iterator is finished, so forget it and continue with
    // the outer generator.


    context.delegate = null;
    return ContinueSentinel;
  } // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.


  defineIteratorMethods(Gp);
  define(Gp, toStringTagSymbol, "Generator"); // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.

  define(Gp, iteratorSymbol, function () {
    return this;
  });
  define(Gp, "toString", function () {
    return "[object Generator]";
  });

  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{
      tryLoc: "root"
    }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function (object) {
    var keys = [];

    for (var key in object) {
      keys.push(key);
    }

    keys.reverse(); // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.

    return function next() {
      while (keys.length) {
        var key = keys.pop();

        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      } // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.


      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];

      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;
          return next;
        };

        return next.next = next;
      }
    } // Return an iterator with no values.


    return {
      next: doneResult
    };
  }

  exports.values = values;

  function doneResult() {
    return {
      value: undefined,
      done: true
    };
  }

  Context.prototype = {
    constructor: Context,
    reset: function reset(skipTempReset) {
      this.prev = 0;
      this.next = 0; // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.

      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;
      this.method = "next";
      this.arg = undefined;
      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },
    stop: function stop() {
      this.done = true;
      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;

      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;

      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },
    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },
    complete: function complete(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;

          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }

          return thrown;
        }
      } // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.


      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  }; // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.

  return exports;
}( // If this script is executing as a CommonJS module, use module.exports
// as the regeneratorRuntime namespace. Otherwise create a new empty
// object. Either way, the resulting object will be used to initialize
// the regeneratorRuntime variable at the top of this file.
( false ? undefined : _typeof(module)) === "object" ? module.exports : {});

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, in modern engines
  // we can explicitly access globalThis. In older engines we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  if ((typeof globalThis === "undefined" ? "undefined" : _typeof(globalThis)) === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(600)(module)))

/***/ }),
/* 600 */
/***/ (function(module, exports) {

module.exports = function (module) {
  if (!module.webpackPolyfill) {
    module.deprecate = function () {};

    module.paths = []; // module.parent = undefined by default

    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function get() {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function get() {
        return module.i;
      }
    });
    module.webpackPolyfill = 1;
  }

  return module;
};

/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var conversions = __webpack_require__(602);

var utils = __webpack_require__(603);

var Impl = __webpack_require__(604);

var impl = utils.implSymbol;

function URL(url) {
  if (!this || this[impl] || !(this instanceof URL)) {
    throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");
  }

  if (arguments.length < 1) {
    throw new TypeError("Failed to construct 'URL': 1 argument required, but only " + arguments.length + " present.");
  }

  var args = [];

  for (var i = 0; i < arguments.length && i < 2; ++i) {
    args[i] = arguments[i];
  }

  args[0] = conversions["USVString"](args[0]);

  if (args[1] !== undefined) {
    args[1] = conversions["USVString"](args[1]);
  }

  module.exports.setup(this, args);
}

URL.prototype.toJSON = function toJSON() {
  if (!this || !module.exports.is(this)) {
    throw new TypeError("Illegal invocation");
  }

  var args = [];

  for (var i = 0; i < arguments.length && i < 0; ++i) {
    args[i] = arguments[i];
  }

  return this[impl].toJSON.apply(this[impl], args);
};

Object.defineProperty(URL.prototype, "href", {
  get: function get() {
    return this[impl].href;
  },
  set: function set(V) {
    V = conversions["USVString"](V);
    this[impl].href = V;
  },
  enumerable: true,
  configurable: true
});

URL.prototype.toString = function () {
  if (!this || !module.exports.is(this)) {
    throw new TypeError("Illegal invocation");
  }

  return this.href;
};

Object.defineProperty(URL.prototype, "origin", {
  get: function get() {
    return this[impl].origin;
  },
  enumerable: true,
  configurable: true
});
Object.defineProperty(URL.prototype, "protocol", {
  get: function get() {
    return this[impl].protocol;
  },
  set: function set(V) {
    V = conversions["USVString"](V);
    this[impl].protocol = V;
  },
  enumerable: true,
  configurable: true
});
Object.defineProperty(URL.prototype, "username", {
  get: function get() {
    return this[impl].username;
  },
  set: function set(V) {
    V = conversions["USVString"](V);
    this[impl].username = V;
  },
  enumerable: true,
  configurable: true
});
Object.defineProperty(URL.prototype, "password", {
  get: function get() {
    return this[impl].password;
  },
  set: function set(V) {
    V = conversions["USVString"](V);
    this[impl].password = V;
  },
  enumerable: true,
  configurable: true
});
Object.defineProperty(URL.prototype, "host", {
  get: function get() {
    return this[impl].host;
  },
  set: function set(V) {
    V = conversions["USVString"](V);
    this[impl].host = V;
  },
  enumerable: true,
  configurable: true
});
Object.defineProperty(URL.prototype, "hostname", {
  get: function get() {
    return this[impl].hostname;
  },
  set: function set(V) {
    V = conversions["USVString"](V);
    this[impl].hostname = V;
  },
  enumerable: true,
  configurable: true
});
Object.defineProperty(URL.prototype, "port", {
  get: function get() {
    return this[impl].port;
  },
  set: function set(V) {
    V = conversions["USVString"](V);
    this[impl].port = V;
  },
  enumerable: true,
  configurable: true
});
Object.defineProperty(URL.prototype, "pathname", {
  get: function get() {
    return this[impl].pathname;
  },
  set: function set(V) {
    V = conversions["USVString"](V);
    this[impl].pathname = V;
  },
  enumerable: true,
  configurable: true
});
Object.defineProperty(URL.prototype, "search", {
  get: function get() {
    return this[impl].search;
  },
  set: function set(V) {
    V = conversions["USVString"](V);
    this[impl].search = V;
  },
  enumerable: true,
  configurable: true
});
Object.defineProperty(URL.prototype, "hash", {
  get: function get() {
    return this[impl].hash;
  },
  set: function set(V) {
    V = conversions["USVString"](V);
    this[impl].hash = V;
  },
  enumerable: true,
  configurable: true
});
module.exports = {
  is: function is(obj) {
    return !!obj && obj[impl] instanceof Impl.implementation;
  },
  create: function create(constructorArgs, privateData) {
    var obj = Object.create(URL.prototype);
    this.setup(obj, constructorArgs, privateData);
    return obj;
  },
  setup: function setup(obj, constructorArgs, privateData) {
    if (!privateData) privateData = {};
    privateData.wrapper = obj;
    obj[impl] = new Impl.implementation(constructorArgs, privateData);
    obj[impl][utils.wrapperSymbol] = obj;
  },
  "interface": URL,
  expose: {
    Window: {
      URL: URL
    },
    Worker: {
      URL: URL
    }
  }
};

/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var conversions = {};
module.exports = conversions;

function sign(x) {
  return x < 0 ? -1 : 1;
}

function evenRound(x) {
  // Round x to the nearest integer, choosing the even integer if it lies halfway between two.
  if (x % 1 === 0.5 && (x & 1) === 0) {
    // [even number].5; round down (i.e. floor)
    return Math.floor(x);
  } else {
    return Math.round(x);
  }
}

function createNumberConversion(bitLength, typeOpts) {
  if (!typeOpts.unsigned) {
    --bitLength;
  }

  var lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);
  var upperBound = Math.pow(2, bitLength) - 1;
  var moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);
  var moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);
  return function (V, opts) {
    if (!opts) opts = {};
    var x = +V;

    if (opts.enforceRange) {
      if (!Number.isFinite(x)) {
        throw new TypeError("Argument is not a finite number");
      }

      x = sign(x) * Math.floor(Math.abs(x));

      if (x < lowerBound || x > upperBound) {
        throw new TypeError("Argument is not in byte range");
      }

      return x;
    }

    if (!isNaN(x) && opts.clamp) {
      x = evenRound(x);
      if (x < lowerBound) x = lowerBound;
      if (x > upperBound) x = upperBound;
      return x;
    }

    if (!Number.isFinite(x) || x === 0) {
      return 0;
    }

    x = sign(x) * Math.floor(Math.abs(x));
    x = x % moduloVal;

    if (!typeOpts.unsigned && x >= moduloBound) {
      return x - moduloVal;
    } else if (typeOpts.unsigned) {
      if (x < 0) {
        x += moduloVal;
      } else if (x === -0) {
        // don't return negative zero
        return 0;
      }
    }

    return x;
  };
}

conversions["void"] = function () {
  return undefined;
};

conversions["boolean"] = function (val) {
  return !!val;
};

conversions["byte"] = createNumberConversion(8, {
  unsigned: false
});
conversions["octet"] = createNumberConversion(8, {
  unsigned: true
});
conversions["short"] = createNumberConversion(16, {
  unsigned: false
});
conversions["unsigned short"] = createNumberConversion(16, {
  unsigned: true
});
conversions["long"] = createNumberConversion(32, {
  unsigned: false
});
conversions["unsigned long"] = createNumberConversion(32, {
  unsigned: true
});
conversions["long long"] = createNumberConversion(32, {
  unsigned: false,
  moduloBitLength: 64
});
conversions["unsigned long long"] = createNumberConversion(32, {
  unsigned: true,
  moduloBitLength: 64
});

conversions["double"] = function (V) {
  var x = +V;

  if (!Number.isFinite(x)) {
    throw new TypeError("Argument is not a finite floating-point value");
  }

  return x;
};

conversions["unrestricted double"] = function (V) {
  var x = +V;

  if (isNaN(x)) {
    throw new TypeError("Argument is NaN");
  }

  return x;
}; // not quite valid, but good enough for JS


conversions["float"] = conversions["double"];
conversions["unrestricted float"] = conversions["unrestricted double"];

conversions["DOMString"] = function (V, opts) {
  if (!opts) opts = {};

  if (opts.treatNullAsEmptyString && V === null) {
    return "";
  }

  return String(V);
};

conversions["ByteString"] = function (V, opts) {
  var x = String(V);
  var c = undefined;

  for (var i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {
    if (c > 255) {
      throw new TypeError("Argument is not a valid bytestring");
    }
  }

  return x;
};

conversions["USVString"] = function (V) {
  var S = String(V);
  var n = S.length;
  var U = [];

  for (var i = 0; i < n; ++i) {
    var c = S.charCodeAt(i);

    if (c < 0xD800 || c > 0xDFFF) {
      U.push(String.fromCodePoint(c));
    } else if (0xDC00 <= c && c <= 0xDFFF) {
      U.push(String.fromCodePoint(0xFFFD));
    } else {
      if (i === n - 1) {
        U.push(String.fromCodePoint(0xFFFD));
      } else {
        var d = S.charCodeAt(i + 1);

        if (0xDC00 <= d && d <= 0xDFFF) {
          var a = c & 0x3FF;
          var b = d & 0x3FF;
          U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));
          ++i;
        } else {
          U.push(String.fromCodePoint(0xFFFD));
        }
      }
    }
  }

  return U.join('');
};

conversions["Date"] = function (V, opts) {
  if (!(V instanceof Date)) {
    throw new TypeError("Argument is not a Date object");
  }

  if (isNaN(V)) {
    return undefined;
  }

  return V;
};

conversions["RegExp"] = function (V, opts) {
  if (!(V instanceof RegExp)) {
    V = new RegExp(V);
  }

  return V;
};

/***/ }),
/* 603 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports.mixin = function mixin(target, source) {
  var keys = Object.getOwnPropertyNames(source);

  for (var i = 0; i < keys.length; ++i) {
    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));
  }
};

module.exports.wrapperSymbol = Symbol("wrapper");
module.exports.implSymbol = Symbol("impl");

module.exports.wrapperForImpl = function (impl) {
  return impl[module.exports.wrapperSymbol];
};

module.exports.implForWrapper = function (wrapper) {
  return wrapper[module.exports.implSymbol];
};

/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var usm = __webpack_require__(66);

exports.implementation = /*#__PURE__*/function () {
  function URLImpl(constructorArgs) {
    _classCallCheck(this, URLImpl);

    var url = constructorArgs[0];
    var base = constructorArgs[1];
    var parsedBase = null;

    if (base !== undefined) {
      parsedBase = usm.basicURLParse(base);

      if (parsedBase === "failure") {
        throw new TypeError("Invalid base URL");
      }
    }

    var parsedURL = usm.basicURLParse(url, {
      baseURL: parsedBase
    });

    if (parsedURL === "failure") {
      throw new TypeError("Invalid URL");
    }

    this._url = parsedURL; // TODO: query stuff
  }

  _createClass(URLImpl, [{
    key: "href",
    get: function get() {
      return usm.serializeURL(this._url);
    },
    set: function set(v) {
      var parsedURL = usm.basicURLParse(v);

      if (parsedURL === "failure") {
        throw new TypeError("Invalid URL");
      }

      this._url = parsedURL;
    }
  }, {
    key: "origin",
    get: function get() {
      return usm.serializeURLOrigin(this._url);
    }
  }, {
    key: "protocol",
    get: function get() {
      return this._url.scheme + ":";
    },
    set: function set(v) {
      usm.basicURLParse(v + ":", {
        url: this._url,
        stateOverride: "scheme start"
      });
    }
  }, {
    key: "username",
    get: function get() {
      return this._url.username;
    },
    set: function set(v) {
      if (usm.cannotHaveAUsernamePasswordPort(this._url)) {
        return;
      }

      usm.setTheUsername(this._url, v);
    }
  }, {
    key: "password",
    get: function get() {
      return this._url.password;
    },
    set: function set(v) {
      if (usm.cannotHaveAUsernamePasswordPort(this._url)) {
        return;
      }

      usm.setThePassword(this._url, v);
    }
  }, {
    key: "host",
    get: function get() {
      var url = this._url;

      if (url.host === null) {
        return "";
      }

      if (url.port === null) {
        return usm.serializeHost(url.host);
      }

      return usm.serializeHost(url.host) + ":" + usm.serializeInteger(url.port);
    },
    set: function set(v) {
      if (this._url.cannotBeABaseURL) {
        return;
      }

      usm.basicURLParse(v, {
        url: this._url,
        stateOverride: "host"
      });
    }
  }, {
    key: "hostname",
    get: function get() {
      if (this._url.host === null) {
        return "";
      }

      return usm.serializeHost(this._url.host);
    },
    set: function set(v) {
      if (this._url.cannotBeABaseURL) {
        return;
      }

      usm.basicURLParse(v, {
        url: this._url,
        stateOverride: "hostname"
      });
    }
  }, {
    key: "port",
    get: function get() {
      if (this._url.port === null) {
        return "";
      }

      return usm.serializeInteger(this._url.port);
    },
    set: function set(v) {
      if (usm.cannotHaveAUsernamePasswordPort(this._url)) {
        return;
      }

      if (v === "") {
        this._url.port = null;
      } else {
        usm.basicURLParse(v, {
          url: this._url,
          stateOverride: "port"
        });
      }
    }
  }, {
    key: "pathname",
    get: function get() {
      if (this._url.cannotBeABaseURL) {
        return this._url.path[0];
      }

      if (this._url.path.length === 0) {
        return "";
      }

      return "/" + this._url.path.join("/");
    },
    set: function set(v) {
      if (this._url.cannotBeABaseURL) {
        return;
      }

      this._url.path = [];
      usm.basicURLParse(v, {
        url: this._url,
        stateOverride: "path start"
      });
    }
  }, {
    key: "search",
    get: function get() {
      if (this._url.query === null || this._url.query === "") {
        return "";
      }

      return "?" + this._url.query;
    },
    set: function set(v) {
      // TODO: query stuff
      var url = this._url;

      if (v === "") {
        url.query = null;
        return;
      }

      var input = v[0] === "?" ? v.substring(1) : v;
      url.query = "";
      usm.basicURLParse(input, {
        url: url,
        stateOverride: "query"
      });
    }
  }, {
    key: "hash",
    get: function get() {
      if (this._url.fragment === null || this._url.fragment === "") {
        return "";
      }

      return "#" + this._url.fragment;
    },
    set: function set(v) {
      if (v === "") {
        this._url.fragment = null;
        return;
      }

      var input = v[0] === "#" ? v.substring(1) : v;
      this._url.fragment = "";
      usm.basicURLParse(input, {
        url: this._url,
        stateOverride: "fragment"
      });
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.href;
    }
  }]);

  return URLImpl;
}();

/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var punycode = __webpack_require__(162);

var mappingTable = __webpack_require__(606);

var PROCESSING_OPTIONS = {
  TRANSITIONAL: 0,
  NONTRANSITIONAL: 1
};

function normalize(str) {
  // fix bug in v8
  return str.split("\0").map(function (s) {
    return s.normalize('NFC');
  }).join("\0");
}

function findStatus(val) {
  var start = 0;
  var end = mappingTable.length - 1;

  while (start <= end) {
    var mid = Math.floor((start + end) / 2);
    var target = mappingTable[mid];

    if (target[0][0] <= val && target[0][1] >= val) {
      return target;
    } else if (target[0][0] > val) {
      end = mid - 1;
    } else {
      start = mid + 1;
    }
  }

  return null;
}

var regexAstralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;

function countSymbols(string) {
  return string // replace every surrogate pair with a BMP symbol
  .replace(regexAstralSymbols, '_') // then get the length
  .length;
}

function mapChars(domain_name, useSTD3, processing_option) {
  var hasError = false;
  var processed = "";
  var len = countSymbols(domain_name);

  for (var i = 0; i < len; ++i) {
    var codePoint = domain_name.codePointAt(i);
    var status = findStatus(codePoint);

    switch (status[1]) {
      case "disallowed":
        hasError = true;
        processed += String.fromCodePoint(codePoint);
        break;

      case "ignored":
        break;

      case "mapped":
        processed += String.fromCodePoint.apply(String, status[2]);
        break;

      case "deviation":
        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {
          processed += String.fromCodePoint.apply(String, status[2]);
        } else {
          processed += String.fromCodePoint(codePoint);
        }

        break;

      case "valid":
        processed += String.fromCodePoint(codePoint);
        break;

      case "disallowed_STD3_mapped":
        if (useSTD3) {
          hasError = true;
          processed += String.fromCodePoint(codePoint);
        } else {
          processed += String.fromCodePoint.apply(String, status[2]);
        }

        break;

      case "disallowed_STD3_valid":
        if (useSTD3) {
          hasError = true;
        }

        processed += String.fromCodePoint(codePoint);
        break;
    }
  }

  return {
    string: processed,
    error: hasError
  };
}

var combiningMarksRegex = /[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;

function validateLabel(label, processing_option) {
  if (label.substr(0, 4) === "xn--") {
    label = punycode.toUnicode(label);
    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;
  }

  var error = false;

  if (normalize(label) !== label || label[3] === "-" && label[4] === "-" || label[0] === "-" || label[label.length - 1] === "-" || label.indexOf(".") !== -1 || label.search(combiningMarksRegex) === 0) {
    error = true;
  }

  var len = countSymbols(label);

  for (var i = 0; i < len; ++i) {
    var status = findStatus(label.codePointAt(i));

    if (processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== "valid" || processing === PROCESSING_OPTIONS.NONTRANSITIONAL && status[1] !== "valid" && status[1] !== "deviation") {
      error = true;
      break;
    }
  }

  return {
    label: label,
    error: error
  };
}

function processing(domain_name, useSTD3, processing_option) {
  var result = mapChars(domain_name, useSTD3, processing_option);
  result.string = normalize(result.string);
  var labels = result.string.split(".");

  for (var i = 0; i < labels.length; ++i) {
    try {
      var validation = validateLabel(labels[i]);
      labels[i] = validation.label;
      result.error = result.error || validation.error;
    } catch (e) {
      result.error = true;
    }
  }

  return {
    string: labels.join("."),
    error: result.error
  };
}

module.exports.toASCII = function (domain_name, useSTD3, processing_option, verifyDnsLength) {
  var result = processing(domain_name, useSTD3, processing_option);
  var labels = result.string.split(".");
  labels = labels.map(function (l) {
    try {
      return punycode.toASCII(l);
    } catch (e) {
      result.error = true;
      return l;
    }
  });

  if (verifyDnsLength) {
    var total = labels.slice(0, labels.length - 1).join(".").length;

    if (total.length > 253 || total.length === 0) {
      result.error = true;
    }

    for (var i = 0; i < labels.length; ++i) {
      if (labels.length > 63 || labels.length === 0) {
        result.error = true;
        break;
      }
    }
  }

  if (result.error) return null;
  return labels.join(".");
};

module.exports.toUnicode = function (domain_name, useSTD3) {
  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);
  return {
    domain: result.string,
    error: result.error
  };
};

module.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;

/***/ }),
/* 606 */
/***/ (function(module) {

module.exports = JSON.parse("[[[0,44],\"disallowed_STD3_valid\"],[[45,46],\"valid\"],[[47,47],\"disallowed_STD3_valid\"],[[48,57],\"valid\"],[[58,64],\"disallowed_STD3_valid\"],[[65,65],\"mapped\",[97]],[[66,66],\"mapped\",[98]],[[67,67],\"mapped\",[99]],[[68,68],\"mapped\",[100]],[[69,69],\"mapped\",[101]],[[70,70],\"mapped\",[102]],[[71,71],\"mapped\",[103]],[[72,72],\"mapped\",[104]],[[73,73],\"mapped\",[105]],[[74,74],\"mapped\",[106]],[[75,75],\"mapped\",[107]],[[76,76],\"mapped\",[108]],[[77,77],\"mapped\",[109]],[[78,78],\"mapped\",[110]],[[79,79],\"mapped\",[111]],[[80,80],\"mapped\",[112]],[[81,81],\"mapped\",[113]],[[82,82],\"mapped\",[114]],[[83,83],\"mapped\",[115]],[[84,84],\"mapped\",[116]],[[85,85],\"mapped\",[117]],[[86,86],\"mapped\",[118]],[[87,87],\"mapped\",[119]],[[88,88],\"mapped\",[120]],[[89,89],\"mapped\",[121]],[[90,90],\"mapped\",[122]],[[91,96],\"disallowed_STD3_valid\"],[[97,122],\"valid\"],[[123,127],\"disallowed_STD3_valid\"],[[128,159],\"disallowed\"],[[160,160],\"disallowed_STD3_mapped\",[32]],[[161,167],\"valid\",[],\"NV8\"],[[168,168],\"disallowed_STD3_mapped\",[32,776]],[[169,169],\"valid\",[],\"NV8\"],[[170,170],\"mapped\",[97]],[[171,172],\"valid\",[],\"NV8\"],[[173,173],\"ignored\"],[[174,174],\"valid\",[],\"NV8\"],[[175,175],\"disallowed_STD3_mapped\",[32,772]],[[176,177],\"valid\",[],\"NV8\"],[[178,178],\"mapped\",[50]],[[179,179],\"mapped\",[51]],[[180,180],\"disallowed_STD3_mapped\",[32,769]],[[181,181],\"mapped\",[956]],[[182,182],\"valid\",[],\"NV8\"],[[183,183],\"valid\"],[[184,184],\"disallowed_STD3_mapped\",[32,807]],[[185,185],\"mapped\",[49]],[[186,186],\"mapped\",[111]],[[187,187],\"valid\",[],\"NV8\"],[[188,188],\"mapped\",[49,8260,52]],[[189,189],\"mapped\",[49,8260,50]],[[190,190],\"mapped\",[51,8260,52]],[[191,191],\"valid\",[],\"NV8\"],[[192,192],\"mapped\",[224]],[[193,193],\"mapped\",[225]],[[194,194],\"mapped\",[226]],[[195,195],\"mapped\",[227]],[[196,196],\"mapped\",[228]],[[197,197],\"mapped\",[229]],[[198,198],\"mapped\",[230]],[[199,199],\"mapped\",[231]],[[200,200],\"mapped\",[232]],[[201,201],\"mapped\",[233]],[[202,202],\"mapped\",[234]],[[203,203],\"mapped\",[235]],[[204,204],\"mapped\",[236]],[[205,205],\"mapped\",[237]],[[206,206],\"mapped\",[238]],[[207,207],\"mapped\",[239]],[[208,208],\"mapped\",[240]],[[209,209],\"mapped\",[241]],[[210,210],\"mapped\",[242]],[[211,211],\"mapped\",[243]],[[212,212],\"mapped\",[244]],[[213,213],\"mapped\",[245]],[[214,214],\"mapped\",[246]],[[215,215],\"valid\",[],\"NV8\"],[[216,216],\"mapped\",[248]],[[217,217],\"mapped\",[249]],[[218,218],\"mapped\",[250]],[[219,219],\"mapped\",[251]],[[220,220],\"mapped\",[252]],[[221,221],\"mapped\",[253]],[[222,222],\"mapped\",[254]],[[223,223],\"deviation\",[115,115]],[[224,246],\"valid\"],[[247,247],\"valid\",[],\"NV8\"],[[248,255],\"valid\"],[[256,256],\"mapped\",[257]],[[257,257],\"valid\"],[[258,258],\"mapped\",[259]],[[259,259],\"valid\"],[[260,260],\"mapped\",[261]],[[261,261],\"valid\"],[[262,262],\"mapped\",[263]],[[263,263],\"valid\"],[[264,264],\"mapped\",[265]],[[265,265],\"valid\"],[[266,266],\"mapped\",[267]],[[267,267],\"valid\"],[[268,268],\"mapped\",[269]],[[269,269],\"valid\"],[[270,270],\"mapped\",[271]],[[271,271],\"valid\"],[[272,272],\"mapped\",[273]],[[273,273],\"valid\"],[[274,274],\"mapped\",[275]],[[275,275],\"valid\"],[[276,276],\"mapped\",[277]],[[277,277],\"valid\"],[[278,278],\"mapped\",[279]],[[279,279],\"valid\"],[[280,280],\"mapped\",[281]],[[281,281],\"valid\"],[[282,282],\"mapped\",[283]],[[283,283],\"valid\"],[[284,284],\"mapped\",[285]],[[285,285],\"valid\"],[[286,286],\"mapped\",[287]],[[287,287],\"valid\"],[[288,288],\"mapped\",[289]],[[289,289],\"valid\"],[[290,290],\"mapped\",[291]],[[291,291],\"valid\"],[[292,292],\"mapped\",[293]],[[293,293],\"valid\"],[[294,294],\"mapped\",[295]],[[295,295],\"valid\"],[[296,296],\"mapped\",[297]],[[297,297],\"valid\"],[[298,298],\"mapped\",[299]],[[299,299],\"valid\"],[[300,300],\"mapped\",[301]],[[301,301],\"valid\"],[[302,302],\"mapped\",[303]],[[303,303],\"valid\"],[[304,304],\"mapped\",[105,775]],[[305,305],\"valid\"],[[306,307],\"mapped\",[105,106]],[[308,308],\"mapped\",[309]],[[309,309],\"valid\"],[[310,310],\"mapped\",[311]],[[311,312],\"valid\"],[[313,313],\"mapped\",[314]],[[314,314],\"valid\"],[[315,315],\"mapped\",[316]],[[316,316],\"valid\"],[[317,317],\"mapped\",[318]],[[318,318],\"valid\"],[[319,320],\"mapped\",[108,183]],[[321,321],\"mapped\",[322]],[[322,322],\"valid\"],[[323,323],\"mapped\",[324]],[[324,324],\"valid\"],[[325,325],\"mapped\",[326]],[[326,326],\"valid\"],[[327,327],\"mapped\",[328]],[[328,328],\"valid\"],[[329,329],\"mapped\",[700,110]],[[330,330],\"mapped\",[331]],[[331,331],\"valid\"],[[332,332],\"mapped\",[333]],[[333,333],\"valid\"],[[334,334],\"mapped\",[335]],[[335,335],\"valid\"],[[336,336],\"mapped\",[337]],[[337,337],\"valid\"],[[338,338],\"mapped\",[339]],[[339,339],\"valid\"],[[340,340],\"mapped\",[341]],[[341,341],\"valid\"],[[342,342],\"mapped\",[343]],[[343,343],\"valid\"],[[344,344],\"mapped\",[345]],[[345,345],\"valid\"],[[346,346],\"mapped\",[347]],[[347,347],\"valid\"],[[348,348],\"mapped\",[349]],[[349,349],\"valid\"],[[350,350],\"mapped\",[351]],[[351,351],\"valid\"],[[352,352],\"mapped\",[353]],[[353,353],\"valid\"],[[354,354],\"mapped\",[355]],[[355,355],\"valid\"],[[356,356],\"mapped\",[357]],[[357,357],\"valid\"],[[358,358],\"mapped\",[359]],[[359,359],\"valid\"],[[360,360],\"mapped\",[361]],[[361,361],\"valid\"],[[362,362],\"mapped\",[363]],[[363,363],\"valid\"],[[364,364],\"mapped\",[365]],[[365,365],\"valid\"],[[366,366],\"mapped\",[367]],[[367,367],\"valid\"],[[368,368],\"mapped\",[369]],[[369,369],\"valid\"],[[370,370],\"mapped\",[371]],[[371,371],\"valid\"],[[372,372],\"mapped\",[373]],[[373,373],\"valid\"],[[374,374],\"mapped\",[375]],[[375,375],\"valid\"],[[376,376],\"mapped\",[255]],[[377,377],\"mapped\",[378]],[[378,378],\"valid\"],[[379,379],\"mapped\",[380]],[[380,380],\"valid\"],[[381,381],\"mapped\",[382]],[[382,382],\"valid\"],[[383,383],\"mapped\",[115]],[[384,384],\"valid\"],[[385,385],\"mapped\",[595]],[[386,386],\"mapped\",[387]],[[387,387],\"valid\"],[[388,388],\"mapped\",[389]],[[389,389],\"valid\"],[[390,390],\"mapped\",[596]],[[391,391],\"mapped\",[392]],[[392,392],\"valid\"],[[393,393],\"mapped\",[598]],[[394,394],\"mapped\",[599]],[[395,395],\"mapped\",[396]],[[396,397],\"valid\"],[[398,398],\"mapped\",[477]],[[399,399],\"mapped\",[601]],[[400,400],\"mapped\",[603]],[[401,401],\"mapped\",[402]],[[402,402],\"valid\"],[[403,403],\"mapped\",[608]],[[404,404],\"mapped\",[611]],[[405,405],\"valid\"],[[406,406],\"mapped\",[617]],[[407,407],\"mapped\",[616]],[[408,408],\"mapped\",[409]],[[409,411],\"valid\"],[[412,412],\"mapped\",[623]],[[413,413],\"mapped\",[626]],[[414,414],\"valid\"],[[415,415],\"mapped\",[629]],[[416,416],\"mapped\",[417]],[[417,417],\"valid\"],[[418,418],\"mapped\",[419]],[[419,419],\"valid\"],[[420,420],\"mapped\",[421]],[[421,421],\"valid\"],[[422,422],\"mapped\",[640]],[[423,423],\"mapped\",[424]],[[424,424],\"valid\"],[[425,425],\"mapped\",[643]],[[426,427],\"valid\"],[[428,428],\"mapped\",[429]],[[429,429],\"valid\"],[[430,430],\"mapped\",[648]],[[431,431],\"mapped\",[432]],[[432,432],\"valid\"],[[433,433],\"mapped\",[650]],[[434,434],\"mapped\",[651]],[[435,435],\"mapped\",[436]],[[436,436],\"valid\"],[[437,437],\"mapped\",[438]],[[438,438],\"valid\"],[[439,439],\"mapped\",[658]],[[440,440],\"mapped\",[441]],[[441,443],\"valid\"],[[444,444],\"mapped\",[445]],[[445,451],\"valid\"],[[452,454],\"mapped\",[100,382]],[[455,457],\"mapped\",[108,106]],[[458,460],\"mapped\",[110,106]],[[461,461],\"mapped\",[462]],[[462,462],\"valid\"],[[463,463],\"mapped\",[464]],[[464,464],\"valid\"],[[465,465],\"mapped\",[466]],[[466,466],\"valid\"],[[467,467],\"mapped\",[468]],[[468,468],\"valid\"],[[469,469],\"mapped\",[470]],[[470,470],\"valid\"],[[471,471],\"mapped\",[472]],[[472,472],\"valid\"],[[473,473],\"mapped\",[474]],[[474,474],\"valid\"],[[475,475],\"mapped\",[476]],[[476,477],\"valid\"],[[478,478],\"mapped\",[479]],[[479,479],\"valid\"],[[480,480],\"mapped\",[481]],[[481,481],\"valid\"],[[482,482],\"mapped\",[483]],[[483,483],\"valid\"],[[484,484],\"mapped\",[485]],[[485,485],\"valid\"],[[486,486],\"mapped\",[487]],[[487,487],\"valid\"],[[488,488],\"mapped\",[489]],[[489,489],\"valid\"],[[490,490],\"mapped\",[491]],[[491,491],\"valid\"],[[492,492],\"mapped\",[493]],[[493,493],\"valid\"],[[494,494],\"mapped\",[495]],[[495,496],\"valid\"],[[497,499],\"mapped\",[100,122]],[[500,500],\"mapped\",[501]],[[501,501],\"valid\"],[[502,502],\"mapped\",[405]],[[503,503],\"mapped\",[447]],[[504,504],\"mapped\",[505]],[[505,505],\"valid\"],[[506,506],\"mapped\",[507]],[[507,507],\"valid\"],[[508,508],\"mapped\",[509]],[[509,509],\"valid\"],[[510,510],\"mapped\",[511]],[[511,511],\"valid\"],[[512,512],\"mapped\",[513]],[[513,513],\"valid\"],[[514,514],\"mapped\",[515]],[[515,515],\"valid\"],[[516,516],\"mapped\",[517]],[[517,517],\"valid\"],[[518,518],\"mapped\",[519]],[[519,519],\"valid\"],[[520,520],\"mapped\",[521]],[[521,521],\"valid\"],[[522,522],\"mapped\",[523]],[[523,523],\"valid\"],[[524,524],\"mapped\",[525]],[[525,525],\"valid\"],[[526,526],\"mapped\",[527]],[[527,527],\"valid\"],[[528,528],\"mapped\",[529]],[[529,529],\"valid\"],[[530,530],\"mapped\",[531]],[[531,531],\"valid\"],[[532,532],\"mapped\",[533]],[[533,533],\"valid\"],[[534,534],\"mapped\",[535]],[[535,535],\"valid\"],[[536,536],\"mapped\",[537]],[[537,537],\"valid\"],[[538,538],\"mapped\",[539]],[[539,539],\"valid\"],[[540,540],\"mapped\",[541]],[[541,541],\"valid\"],[[542,542],\"mapped\",[543]],[[543,543],\"valid\"],[[544,544],\"mapped\",[414]],[[545,545],\"valid\"],[[546,546],\"mapped\",[547]],[[547,547],\"valid\"],[[548,548],\"mapped\",[549]],[[549,549],\"valid\"],[[550,550],\"mapped\",[551]],[[551,551],\"valid\"],[[552,552],\"mapped\",[553]],[[553,553],\"valid\"],[[554,554],\"mapped\",[555]],[[555,555],\"valid\"],[[556,556],\"mapped\",[557]],[[557,557],\"valid\"],[[558,558],\"mapped\",[559]],[[559,559],\"valid\"],[[560,560],\"mapped\",[561]],[[561,561],\"valid\"],[[562,562],\"mapped\",[563]],[[563,563],\"valid\"],[[564,566],\"valid\"],[[567,569],\"valid\"],[[570,570],\"mapped\",[11365]],[[571,571],\"mapped\",[572]],[[572,572],\"valid\"],[[573,573],\"mapped\",[410]],[[574,574],\"mapped\",[11366]],[[575,576],\"valid\"],[[577,577],\"mapped\",[578]],[[578,578],\"valid\"],[[579,579],\"mapped\",[384]],[[580,580],\"mapped\",[649]],[[581,581],\"mapped\",[652]],[[582,582],\"mapped\",[583]],[[583,583],\"valid\"],[[584,584],\"mapped\",[585]],[[585,585],\"valid\"],[[586,586],\"mapped\",[587]],[[587,587],\"valid\"],[[588,588],\"mapped\",[589]],[[589,589],\"valid\"],[[590,590],\"mapped\",[591]],[[591,591],\"valid\"],[[592,680],\"valid\"],[[681,685],\"valid\"],[[686,687],\"valid\"],[[688,688],\"mapped\",[104]],[[689,689],\"mapped\",[614]],[[690,690],\"mapped\",[106]],[[691,691],\"mapped\",[114]],[[692,692],\"mapped\",[633]],[[693,693],\"mapped\",[635]],[[694,694],\"mapped\",[641]],[[695,695],\"mapped\",[119]],[[696,696],\"mapped\",[121]],[[697,705],\"valid\"],[[706,709],\"valid\",[],\"NV8\"],[[710,721],\"valid\"],[[722,727],\"valid\",[],\"NV8\"],[[728,728],\"disallowed_STD3_mapped\",[32,774]],[[729,729],\"disallowed_STD3_mapped\",[32,775]],[[730,730],\"disallowed_STD3_mapped\",[32,778]],[[731,731],\"disallowed_STD3_mapped\",[32,808]],[[732,732],\"disallowed_STD3_mapped\",[32,771]],[[733,733],\"disallowed_STD3_mapped\",[32,779]],[[734,734],\"valid\",[],\"NV8\"],[[735,735],\"valid\",[],\"NV8\"],[[736,736],\"mapped\",[611]],[[737,737],\"mapped\",[108]],[[738,738],\"mapped\",[115]],[[739,739],\"mapped\",[120]],[[740,740],\"mapped\",[661]],[[741,745],\"valid\",[],\"NV8\"],[[746,747],\"valid\",[],\"NV8\"],[[748,748],\"valid\"],[[749,749],\"valid\",[],\"NV8\"],[[750,750],\"valid\"],[[751,767],\"valid\",[],\"NV8\"],[[768,831],\"valid\"],[[832,832],\"mapped\",[768]],[[833,833],\"mapped\",[769]],[[834,834],\"valid\"],[[835,835],\"mapped\",[787]],[[836,836],\"mapped\",[776,769]],[[837,837],\"mapped\",[953]],[[838,846],\"valid\"],[[847,847],\"ignored\"],[[848,855],\"valid\"],[[856,860],\"valid\"],[[861,863],\"valid\"],[[864,865],\"valid\"],[[866,866],\"valid\"],[[867,879],\"valid\"],[[880,880],\"mapped\",[881]],[[881,881],\"valid\"],[[882,882],\"mapped\",[883]],[[883,883],\"valid\"],[[884,884],\"mapped\",[697]],[[885,885],\"valid\"],[[886,886],\"mapped\",[887]],[[887,887],\"valid\"],[[888,889],\"disallowed\"],[[890,890],\"disallowed_STD3_mapped\",[32,953]],[[891,893],\"valid\"],[[894,894],\"disallowed_STD3_mapped\",[59]],[[895,895],\"mapped\",[1011]],[[896,899],\"disallowed\"],[[900,900],\"disallowed_STD3_mapped\",[32,769]],[[901,901],\"disallowed_STD3_mapped\",[32,776,769]],[[902,902],\"mapped\",[940]],[[903,903],\"mapped\",[183]],[[904,904],\"mapped\",[941]],[[905,905],\"mapped\",[942]],[[906,906],\"mapped\",[943]],[[907,907],\"disallowed\"],[[908,908],\"mapped\",[972]],[[909,909],\"disallowed\"],[[910,910],\"mapped\",[973]],[[911,911],\"mapped\",[974]],[[912,912],\"valid\"],[[913,913],\"mapped\",[945]],[[914,914],\"mapped\",[946]],[[915,915],\"mapped\",[947]],[[916,916],\"mapped\",[948]],[[917,917],\"mapped\",[949]],[[918,918],\"mapped\",[950]],[[919,919],\"mapped\",[951]],[[920,920],\"mapped\",[952]],[[921,921],\"mapped\",[953]],[[922,922],\"mapped\",[954]],[[923,923],\"mapped\",[955]],[[924,924],\"mapped\",[956]],[[925,925],\"mapped\",[957]],[[926,926],\"mapped\",[958]],[[927,927],\"mapped\",[959]],[[928,928],\"mapped\",[960]],[[929,929],\"mapped\",[961]],[[930,930],\"disallowed\"],[[931,931],\"mapped\",[963]],[[932,932],\"mapped\",[964]],[[933,933],\"mapped\",[965]],[[934,934],\"mapped\",[966]],[[935,935],\"mapped\",[967]],[[936,936],\"mapped\",[968]],[[937,937],\"mapped\",[969]],[[938,938],\"mapped\",[970]],[[939,939],\"mapped\",[971]],[[940,961],\"valid\"],[[962,962],\"deviation\",[963]],[[963,974],\"valid\"],[[975,975],\"mapped\",[983]],[[976,976],\"mapped\",[946]],[[977,977],\"mapped\",[952]],[[978,978],\"mapped\",[965]],[[979,979],\"mapped\",[973]],[[980,980],\"mapped\",[971]],[[981,981],\"mapped\",[966]],[[982,982],\"mapped\",[960]],[[983,983],\"valid\"],[[984,984],\"mapped\",[985]],[[985,985],\"valid\"],[[986,986],\"mapped\",[987]],[[987,987],\"valid\"],[[988,988],\"mapped\",[989]],[[989,989],\"valid\"],[[990,990],\"mapped\",[991]],[[991,991],\"valid\"],[[992,992],\"mapped\",[993]],[[993,993],\"valid\"],[[994,994],\"mapped\",[995]],[[995,995],\"valid\"],[[996,996],\"mapped\",[997]],[[997,997],\"valid\"],[[998,998],\"mapped\",[999]],[[999,999],\"valid\"],[[1000,1000],\"mapped\",[1001]],[[1001,1001],\"valid\"],[[1002,1002],\"mapped\",[1003]],[[1003,1003],\"valid\"],[[1004,1004],\"mapped\",[1005]],[[1005,1005],\"valid\"],[[1006,1006],\"mapped\",[1007]],[[1007,1007],\"valid\"],[[1008,1008],\"mapped\",[954]],[[1009,1009],\"mapped\",[961]],[[1010,1010],\"mapped\",[963]],[[1011,1011],\"valid\"],[[1012,1012],\"mapped\",[952]],[[1013,1013],\"mapped\",[949]],[[1014,1014],\"valid\",[],\"NV8\"],[[1015,1015],\"mapped\",[1016]],[[1016,1016],\"valid\"],[[1017,1017],\"mapped\",[963]],[[1018,1018],\"mapped\",[1019]],[[1019,1019],\"valid\"],[[1020,1020],\"valid\"],[[1021,1021],\"mapped\",[891]],[[1022,1022],\"mapped\",[892]],[[1023,1023],\"mapped\",[893]],[[1024,1024],\"mapped\",[1104]],[[1025,1025],\"mapped\",[1105]],[[1026,1026],\"mapped\",[1106]],[[1027,1027],\"mapped\",[1107]],[[1028,1028],\"mapped\",[1108]],[[1029,1029],\"mapped\",[1109]],[[1030,1030],\"mapped\",[1110]],[[1031,1031],\"mapped\",[1111]],[[1032,1032],\"mapped\",[1112]],[[1033,1033],\"mapped\",[1113]],[[1034,1034],\"mapped\",[1114]],[[1035,1035],\"mapped\",[1115]],[[1036,1036],\"mapped\",[1116]],[[1037,1037],\"mapped\",[1117]],[[1038,1038],\"mapped\",[1118]],[[1039,1039],\"mapped\",[1119]],[[1040,1040],\"mapped\",[1072]],[[1041,1041],\"mapped\",[1073]],[[1042,1042],\"mapped\",[1074]],[[1043,1043],\"mapped\",[1075]],[[1044,1044],\"mapped\",[1076]],[[1045,1045],\"mapped\",[1077]],[[1046,1046],\"mapped\",[1078]],[[1047,1047],\"mapped\",[1079]],[[1048,1048],\"mapped\",[1080]],[[1049,1049],\"mapped\",[1081]],[[1050,1050],\"mapped\",[1082]],[[1051,1051],\"mapped\",[1083]],[[1052,1052],\"mapped\",[1084]],[[1053,1053],\"mapped\",[1085]],[[1054,1054],\"mapped\",[1086]],[[1055,1055],\"mapped\",[1087]],[[1056,1056],\"mapped\",[1088]],[[1057,1057],\"mapped\",[1089]],[[1058,1058],\"mapped\",[1090]],[[1059,1059],\"mapped\",[1091]],[[1060,1060],\"mapped\",[1092]],[[1061,1061],\"mapped\",[1093]],[[1062,1062],\"mapped\",[1094]],[[1063,1063],\"mapped\",[1095]],[[1064,1064],\"mapped\",[1096]],[[1065,1065],\"mapped\",[1097]],[[1066,1066],\"mapped\",[1098]],[[1067,1067],\"mapped\",[1099]],[[1068,1068],\"mapped\",[1100]],[[1069,1069],\"mapped\",[1101]],[[1070,1070],\"mapped\",[1102]],[[1071,1071],\"mapped\",[1103]],[[1072,1103],\"valid\"],[[1104,1104],\"valid\"],[[1105,1116],\"valid\"],[[1117,1117],\"valid\"],[[1118,1119],\"valid\"],[[1120,1120],\"mapped\",[1121]],[[1121,1121],\"valid\"],[[1122,1122],\"mapped\",[1123]],[[1123,1123],\"valid\"],[[1124,1124],\"mapped\",[1125]],[[1125,1125],\"valid\"],[[1126,1126],\"mapped\",[1127]],[[1127,1127],\"valid\"],[[1128,1128],\"mapped\",[1129]],[[1129,1129],\"valid\"],[[1130,1130],\"mapped\",[1131]],[[1131,1131],\"valid\"],[[1132,1132],\"mapped\",[1133]],[[1133,1133],\"valid\"],[[1134,1134],\"mapped\",[1135]],[[1135,1135],\"valid\"],[[1136,1136],\"mapped\",[1137]],[[1137,1137],\"valid\"],[[1138,1138],\"mapped\",[1139]],[[1139,1139],\"valid\"],[[1140,1140],\"mapped\",[1141]],[[1141,1141],\"valid\"],[[1142,1142],\"mapped\",[1143]],[[1143,1143],\"valid\"],[[1144,1144],\"mapped\",[1145]],[[1145,1145],\"valid\"],[[1146,1146],\"mapped\",[1147]],[[1147,1147],\"valid\"],[[1148,1148],\"mapped\",[1149]],[[1149,1149],\"valid\"],[[1150,1150],\"mapped\",[1151]],[[1151,1151],\"valid\"],[[1152,1152],\"mapped\",[1153]],[[1153,1153],\"valid\"],[[1154,1154],\"valid\",[],\"NV8\"],[[1155,1158],\"valid\"],[[1159,1159],\"valid\"],[[1160,1161],\"valid\",[],\"NV8\"],[[1162,1162],\"mapped\",[1163]],[[1163,1163],\"valid\"],[[1164,1164],\"mapped\",[1165]],[[1165,1165],\"valid\"],[[1166,1166],\"mapped\",[1167]],[[1167,1167],\"valid\"],[[1168,1168],\"mapped\",[1169]],[[1169,1169],\"valid\"],[[1170,1170],\"mapped\",[1171]],[[1171,1171],\"valid\"],[[1172,1172],\"mapped\",[1173]],[[1173,1173],\"valid\"],[[1174,1174],\"mapped\",[1175]],[[1175,1175],\"valid\"],[[1176,1176],\"mapped\",[1177]],[[1177,1177],\"valid\"],[[1178,1178],\"mapped\",[1179]],[[1179,1179],\"valid\"],[[1180,1180],\"mapped\",[1181]],[[1181,1181],\"valid\"],[[1182,1182],\"mapped\",[1183]],[[1183,1183],\"valid\"],[[1184,1184],\"mapped\",[1185]],[[1185,1185],\"valid\"],[[1186,1186],\"mapped\",[1187]],[[1187,1187],\"valid\"],[[1188,1188],\"mapped\",[1189]],[[1189,1189],\"valid\"],[[1190,1190],\"mapped\",[1191]],[[1191,1191],\"valid\"],[[1192,1192],\"mapped\",[1193]],[[1193,1193],\"valid\"],[[1194,1194],\"mapped\",[1195]],[[1195,1195],\"valid\"],[[1196,1196],\"mapped\",[1197]],[[1197,1197],\"valid\"],[[1198,1198],\"mapped\",[1199]],[[1199,1199],\"valid\"],[[1200,1200],\"mapped\",[1201]],[[1201,1201],\"valid\"],[[1202,1202],\"mapped\",[1203]],[[1203,1203],\"valid\"],[[1204,1204],\"mapped\",[1205]],[[1205,1205],\"valid\"],[[1206,1206],\"mapped\",[1207]],[[1207,1207],\"valid\"],[[1208,1208],\"mapped\",[1209]],[[1209,1209],\"valid\"],[[1210,1210],\"mapped\",[1211]],[[1211,1211],\"valid\"],[[1212,1212],\"mapped\",[1213]],[[1213,1213],\"valid\"],[[1214,1214],\"mapped\",[1215]],[[1215,1215],\"valid\"],[[1216,1216],\"disallowed\"],[[1217,1217],\"mapped\",[1218]],[[1218,1218],\"valid\"],[[1219,1219],\"mapped\",[1220]],[[1220,1220],\"valid\"],[[1221,1221],\"mapped\",[1222]],[[1222,1222],\"valid\"],[[1223,1223],\"mapped\",[1224]],[[1224,1224],\"valid\"],[[1225,1225],\"mapped\",[1226]],[[1226,1226],\"valid\"],[[1227,1227],\"mapped\",[1228]],[[1228,1228],\"valid\"],[[1229,1229],\"mapped\",[1230]],[[1230,1230],\"valid\"],[[1231,1231],\"valid\"],[[1232,1232],\"mapped\",[1233]],[[1233,1233],\"valid\"],[[1234,1234],\"mapped\",[1235]],[[1235,1235],\"valid\"],[[1236,1236],\"mapped\",[1237]],[[1237,1237],\"valid\"],[[1238,1238],\"mapped\",[1239]],[[1239,1239],\"valid\"],[[1240,1240],\"mapped\",[1241]],[[1241,1241],\"valid\"],[[1242,1242],\"mapped\",[1243]],[[1243,1243],\"valid\"],[[1244,1244],\"mapped\",[1245]],[[1245,1245],\"valid\"],[[1246,1246],\"mapped\",[1247]],[[1247,1247],\"valid\"],[[1248,1248],\"mapped\",[1249]],[[1249,1249],\"valid\"],[[1250,1250],\"mapped\",[1251]],[[1251,1251],\"valid\"],[[1252,1252],\"mapped\",[1253]],[[1253,1253],\"valid\"],[[1254,1254],\"mapped\",[1255]],[[1255,1255],\"valid\"],[[1256,1256],\"mapped\",[1257]],[[1257,1257],\"valid\"],[[1258,1258],\"mapped\",[1259]],[[1259,1259],\"valid\"],[[1260,1260],\"mapped\",[1261]],[[1261,1261],\"valid\"],[[1262,1262],\"mapped\",[1263]],[[1263,1263],\"valid\"],[[1264,1264],\"mapped\",[1265]],[[1265,1265],\"valid\"],[[1266,1266],\"mapped\",[1267]],[[1267,1267],\"valid\"],[[1268,1268],\"mapped\",[1269]],[[1269,1269],\"valid\"],[[1270,1270],\"mapped\",[1271]],[[1271,1271],\"valid\"],[[1272,1272],\"mapped\",[1273]],[[1273,1273],\"valid\"],[[1274,1274],\"mapped\",[1275]],[[1275,1275],\"valid\"],[[1276,1276],\"mapped\",[1277]],[[1277,1277],\"valid\"],[[1278,1278],\"mapped\",[1279]],[[1279,1279],\"valid\"],[[1280,1280],\"mapped\",[1281]],[[1281,1281],\"valid\"],[[1282,1282],\"mapped\",[1283]],[[1283,1283],\"valid\"],[[1284,1284],\"mapped\",[1285]],[[1285,1285],\"valid\"],[[1286,1286],\"mapped\",[1287]],[[1287,1287],\"valid\"],[[1288,1288],\"mapped\",[1289]],[[1289,1289],\"valid\"],[[1290,1290],\"mapped\",[1291]],[[1291,1291],\"valid\"],[[1292,1292],\"mapped\",[1293]],[[1293,1293],\"valid\"],[[1294,1294],\"mapped\",[1295]],[[1295,1295],\"valid\"],[[1296,1296],\"mapped\",[1297]],[[1297,1297],\"valid\"],[[1298,1298],\"mapped\",[1299]],[[1299,1299],\"valid\"],[[1300,1300],\"mapped\",[1301]],[[1301,1301],\"valid\"],[[1302,1302],\"mapped\",[1303]],[[1303,1303],\"valid\"],[[1304,1304],\"mapped\",[1305]],[[1305,1305],\"valid\"],[[1306,1306],\"mapped\",[1307]],[[1307,1307],\"valid\"],[[1308,1308],\"mapped\",[1309]],[[1309,1309],\"valid\"],[[1310,1310],\"mapped\",[1311]],[[1311,1311],\"valid\"],[[1312,1312],\"mapped\",[1313]],[[1313,1313],\"valid\"],[[1314,1314],\"mapped\",[1315]],[[1315,1315],\"valid\"],[[1316,1316],\"mapped\",[1317]],[[1317,1317],\"valid\"],[[1318,1318],\"mapped\",[1319]],[[1319,1319],\"valid\"],[[1320,1320],\"mapped\",[1321]],[[1321,1321],\"valid\"],[[1322,1322],\"mapped\",[1323]],[[1323,1323],\"valid\"],[[1324,1324],\"mapped\",[1325]],[[1325,1325],\"valid\"],[[1326,1326],\"mapped\",[1327]],[[1327,1327],\"valid\"],[[1328,1328],\"disallowed\"],[[1329,1329],\"mapped\",[1377]],[[1330,1330],\"mapped\",[1378]],[[1331,1331],\"mapped\",[1379]],[[1332,1332],\"mapped\",[1380]],[[1333,1333],\"mapped\",[1381]],[[1334,1334],\"mapped\",[1382]],[[1335,1335],\"mapped\",[1383]],[[1336,1336],\"mapped\",[1384]],[[1337,1337],\"mapped\",[1385]],[[1338,1338],\"mapped\",[1386]],[[1339,1339],\"mapped\",[1387]],[[1340,1340],\"mapped\",[1388]],[[1341,1341],\"mapped\",[1389]],[[1342,1342],\"mapped\",[1390]],[[1343,1343],\"mapped\",[1391]],[[1344,1344],\"mapped\",[1392]],[[1345,1345],\"mapped\",[1393]],[[1346,1346],\"mapped\",[1394]],[[1347,1347],\"mapped\",[1395]],[[1348,1348],\"mapped\",[1396]],[[1349,1349],\"mapped\",[1397]],[[1350,1350],\"mapped\",[1398]],[[1351,1351],\"mapped\",[1399]],[[1352,1352],\"mapped\",[1400]],[[1353,1353],\"mapped\",[1401]],[[1354,1354],\"mapped\",[1402]],[[1355,1355],\"mapped\",[1403]],[[1356,1356],\"mapped\",[1404]],[[1357,1357],\"mapped\",[1405]],[[1358,1358],\"mapped\",[1406]],[[1359,1359],\"mapped\",[1407]],[[1360,1360],\"mapped\",[1408]],[[1361,1361],\"mapped\",[1409]],[[1362,1362],\"mapped\",[1410]],[[1363,1363],\"mapped\",[1411]],[[1364,1364],\"mapped\",[1412]],[[1365,1365],\"mapped\",[1413]],[[1366,1366],\"mapped\",[1414]],[[1367,1368],\"disallowed\"],[[1369,1369],\"valid\"],[[1370,1375],\"valid\",[],\"NV8\"],[[1376,1376],\"disallowed\"],[[1377,1414],\"valid\"],[[1415,1415],\"mapped\",[1381,1410]],[[1416,1416],\"disallowed\"],[[1417,1417],\"valid\",[],\"NV8\"],[[1418,1418],\"valid\",[],\"NV8\"],[[1419,1420],\"disallowed\"],[[1421,1422],\"valid\",[],\"NV8\"],[[1423,1423],\"valid\",[],\"NV8\"],[[1424,1424],\"disallowed\"],[[1425,1441],\"valid\"],[[1442,1442],\"valid\"],[[1443,1455],\"valid\"],[[1456,1465],\"valid\"],[[1466,1466],\"valid\"],[[1467,1469],\"valid\"],[[1470,1470],\"valid\",[],\"NV8\"],[[1471,1471],\"valid\"],[[1472,1472],\"valid\",[],\"NV8\"],[[1473,1474],\"valid\"],[[1475,1475],\"valid\",[],\"NV8\"],[[1476,1476],\"valid\"],[[1477,1477],\"valid\"],[[1478,1478],\"valid\",[],\"NV8\"],[[1479,1479],\"valid\"],[[1480,1487],\"disallowed\"],[[1488,1514],\"valid\"],[[1515,1519],\"disallowed\"],[[1520,1524],\"valid\"],[[1525,1535],\"disallowed\"],[[1536,1539],\"disallowed\"],[[1540,1540],\"disallowed\"],[[1541,1541],\"disallowed\"],[[1542,1546],\"valid\",[],\"NV8\"],[[1547,1547],\"valid\",[],\"NV8\"],[[1548,1548],\"valid\",[],\"NV8\"],[[1549,1551],\"valid\",[],\"NV8\"],[[1552,1557],\"valid\"],[[1558,1562],\"valid\"],[[1563,1563],\"valid\",[],\"NV8\"],[[1564,1564],\"disallowed\"],[[1565,1565],\"disallowed\"],[[1566,1566],\"valid\",[],\"NV8\"],[[1567,1567],\"valid\",[],\"NV8\"],[[1568,1568],\"valid\"],[[1569,1594],\"valid\"],[[1595,1599],\"valid\"],[[1600,1600],\"valid\",[],\"NV8\"],[[1601,1618],\"valid\"],[[1619,1621],\"valid\"],[[1622,1624],\"valid\"],[[1625,1630],\"valid\"],[[1631,1631],\"valid\"],[[1632,1641],\"valid\"],[[1642,1645],\"valid\",[],\"NV8\"],[[1646,1647],\"valid\"],[[1648,1652],\"valid\"],[[1653,1653],\"mapped\",[1575,1652]],[[1654,1654],\"mapped\",[1608,1652]],[[1655,1655],\"mapped\",[1735,1652]],[[1656,1656],\"mapped\",[1610,1652]],[[1657,1719],\"valid\"],[[1720,1721],\"valid\"],[[1722,1726],\"valid\"],[[1727,1727],\"valid\"],[[1728,1742],\"valid\"],[[1743,1743],\"valid\"],[[1744,1747],\"valid\"],[[1748,1748],\"valid\",[],\"NV8\"],[[1749,1756],\"valid\"],[[1757,1757],\"disallowed\"],[[1758,1758],\"valid\",[],\"NV8\"],[[1759,1768],\"valid\"],[[1769,1769],\"valid\",[],\"NV8\"],[[1770,1773],\"valid\"],[[1774,1775],\"valid\"],[[1776,1785],\"valid\"],[[1786,1790],\"valid\"],[[1791,1791],\"valid\"],[[1792,1805],\"valid\",[],\"NV8\"],[[1806,1806],\"disallowed\"],[[1807,1807],\"disallowed\"],[[1808,1836],\"valid\"],[[1837,1839],\"valid\"],[[1840,1866],\"valid\"],[[1867,1868],\"disallowed\"],[[1869,1871],\"valid\"],[[1872,1901],\"valid\"],[[1902,1919],\"valid\"],[[1920,1968],\"valid\"],[[1969,1969],\"valid\"],[[1970,1983],\"disallowed\"],[[1984,2037],\"valid\"],[[2038,2042],\"valid\",[],\"NV8\"],[[2043,2047],\"disallowed\"],[[2048,2093],\"valid\"],[[2094,2095],\"disallowed\"],[[2096,2110],\"valid\",[],\"NV8\"],[[2111,2111],\"disallowed\"],[[2112,2139],\"valid\"],[[2140,2141],\"disallowed\"],[[2142,2142],\"valid\",[],\"NV8\"],[[2143,2207],\"disallowed\"],[[2208,2208],\"valid\"],[[2209,2209],\"valid\"],[[2210,2220],\"valid\"],[[2221,2226],\"valid\"],[[2227,2228],\"valid\"],[[2229,2274],\"disallowed\"],[[2275,2275],\"valid\"],[[2276,2302],\"valid\"],[[2303,2303],\"valid\"],[[2304,2304],\"valid\"],[[2305,2307],\"valid\"],[[2308,2308],\"valid\"],[[2309,2361],\"valid\"],[[2362,2363],\"valid\"],[[2364,2381],\"valid\"],[[2382,2382],\"valid\"],[[2383,2383],\"valid\"],[[2384,2388],\"valid\"],[[2389,2389],\"valid\"],[[2390,2391],\"valid\"],[[2392,2392],\"mapped\",[2325,2364]],[[2393,2393],\"mapped\",[2326,2364]],[[2394,2394],\"mapped\",[2327,2364]],[[2395,2395],\"mapped\",[2332,2364]],[[2396,2396],\"mapped\",[2337,2364]],[[2397,2397],\"mapped\",[2338,2364]],[[2398,2398],\"mapped\",[2347,2364]],[[2399,2399],\"mapped\",[2351,2364]],[[2400,2403],\"valid\"],[[2404,2405],\"valid\",[],\"NV8\"],[[2406,2415],\"valid\"],[[2416,2416],\"valid\",[],\"NV8\"],[[2417,2418],\"valid\"],[[2419,2423],\"valid\"],[[2424,2424],\"valid\"],[[2425,2426],\"valid\"],[[2427,2428],\"valid\"],[[2429,2429],\"valid\"],[[2430,2431],\"valid\"],[[2432,2432],\"valid\"],[[2433,2435],\"valid\"],[[2436,2436],\"disallowed\"],[[2437,2444],\"valid\"],[[2445,2446],\"disallowed\"],[[2447,2448],\"valid\"],[[2449,2450],\"disallowed\"],[[2451,2472],\"valid\"],[[2473,2473],\"disallowed\"],[[2474,2480],\"valid\"],[[2481,2481],\"disallowed\"],[[2482,2482],\"valid\"],[[2483,2485],\"disallowed\"],[[2486,2489],\"valid\"],[[2490,2491],\"disallowed\"],[[2492,2492],\"valid\"],[[2493,2493],\"valid\"],[[2494,2500],\"valid\"],[[2501,2502],\"disallowed\"],[[2503,2504],\"valid\"],[[2505,2506],\"disallowed\"],[[2507,2509],\"valid\"],[[2510,2510],\"valid\"],[[2511,2518],\"disallowed\"],[[2519,2519],\"valid\"],[[2520,2523],\"disallowed\"],[[2524,2524],\"mapped\",[2465,2492]],[[2525,2525],\"mapped\",[2466,2492]],[[2526,2526],\"disallowed\"],[[2527,2527],\"mapped\",[2479,2492]],[[2528,2531],\"valid\"],[[2532,2533],\"disallowed\"],[[2534,2545],\"valid\"],[[2546,2554],\"valid\",[],\"NV8\"],[[2555,2555],\"valid\",[],\"NV8\"],[[2556,2560],\"disallowed\"],[[2561,2561],\"valid\"],[[2562,2562],\"valid\"],[[2563,2563],\"valid\"],[[2564,2564],\"disallowed\"],[[2565,2570],\"valid\"],[[2571,2574],\"disallowed\"],[[2575,2576],\"valid\"],[[2577,2578],\"disallowed\"],[[2579,2600],\"valid\"],[[2601,2601],\"disallowed\"],[[2602,2608],\"valid\"],[[2609,2609],\"disallowed\"],[[2610,2610],\"valid\"],[[2611,2611],\"mapped\",[2610,2620]],[[2612,2612],\"disallowed\"],[[2613,2613],\"valid\"],[[2614,2614],\"mapped\",[2616,2620]],[[2615,2615],\"disallowed\"],[[2616,2617],\"valid\"],[[2618,2619],\"disallowed\"],[[2620,2620],\"valid\"],[[2621,2621],\"disallowed\"],[[2622,2626],\"valid\"],[[2627,2630],\"disallowed\"],[[2631,2632],\"valid\"],[[2633,2634],\"disallowed\"],[[2635,2637],\"valid\"],[[2638,2640],\"disallowed\"],[[2641,2641],\"valid\"],[[2642,2648],\"disallowed\"],[[2649,2649],\"mapped\",[2582,2620]],[[2650,2650],\"mapped\",[2583,2620]],[[2651,2651],\"mapped\",[2588,2620]],[[2652,2652],\"valid\"],[[2653,2653],\"disallowed\"],[[2654,2654],\"mapped\",[2603,2620]],[[2655,2661],\"disallowed\"],[[2662,2676],\"valid\"],[[2677,2677],\"valid\"],[[2678,2688],\"disallowed\"],[[2689,2691],\"valid\"],[[2692,2692],\"disallowed\"],[[2693,2699],\"valid\"],[[2700,2700],\"valid\"],[[2701,2701],\"valid\"],[[2702,2702],\"disallowed\"],[[2703,2705],\"valid\"],[[2706,2706],\"disallowed\"],[[2707,2728],\"valid\"],[[2729,2729],\"disallowed\"],[[2730,2736],\"valid\"],[[2737,2737],\"disallowed\"],[[2738,2739],\"valid\"],[[2740,2740],\"disallowed\"],[[2741,2745],\"valid\"],[[2746,2747],\"disallowed\"],[[2748,2757],\"valid\"],[[2758,2758],\"disallowed\"],[[2759,2761],\"valid\"],[[2762,2762],\"disallowed\"],[[2763,2765],\"valid\"],[[2766,2767],\"disallowed\"],[[2768,2768],\"valid\"],[[2769,2783],\"disallowed\"],[[2784,2784],\"valid\"],[[2785,2787],\"valid\"],[[2788,2789],\"disallowed\"],[[2790,2799],\"valid\"],[[2800,2800],\"valid\",[],\"NV8\"],[[2801,2801],\"valid\",[],\"NV8\"],[[2802,2808],\"disallowed\"],[[2809,2809],\"valid\"],[[2810,2816],\"disallowed\"],[[2817,2819],\"valid\"],[[2820,2820],\"disallowed\"],[[2821,2828],\"valid\"],[[2829,2830],\"disallowed\"],[[2831,2832],\"valid\"],[[2833,2834],\"disallowed\"],[[2835,2856],\"valid\"],[[2857,2857],\"disallowed\"],[[2858,2864],\"valid\"],[[2865,2865],\"disallowed\"],[[2866,2867],\"valid\"],[[2868,2868],\"disallowed\"],[[2869,2869],\"valid\"],[[2870,2873],\"valid\"],[[2874,2875],\"disallowed\"],[[2876,2883],\"valid\"],[[2884,2884],\"valid\"],[[2885,2886],\"disallowed\"],[[2887,2888],\"valid\"],[[2889,2890],\"disallowed\"],[[2891,2893],\"valid\"],[[2894,2901],\"disallowed\"],[[2902,2903],\"valid\"],[[2904,2907],\"disallowed\"],[[2908,2908],\"mapped\",[2849,2876]],[[2909,2909],\"mapped\",[2850,2876]],[[2910,2910],\"disallowed\"],[[2911,2913],\"valid\"],[[2914,2915],\"valid\"],[[2916,2917],\"disallowed\"],[[2918,2927],\"valid\"],[[2928,2928],\"valid\",[],\"NV8\"],[[2929,2929],\"valid\"],[[2930,2935],\"valid\",[],\"NV8\"],[[2936,2945],\"disallowed\"],[[2946,2947],\"valid\"],[[2948,2948],\"disallowed\"],[[2949,2954],\"valid\"],[[2955,2957],\"disallowed\"],[[2958,2960],\"valid\"],[[2961,2961],\"disallowed\"],[[2962,2965],\"valid\"],[[2966,2968],\"disallowed\"],[[2969,2970],\"valid\"],[[2971,2971],\"disallowed\"],[[2972,2972],\"valid\"],[[2973,2973],\"disallowed\"],[[2974,2975],\"valid\"],[[2976,2978],\"disallowed\"],[[2979,2980],\"valid\"],[[2981,2983],\"disallowed\"],[[2984,2986],\"valid\"],[[2987,2989],\"disallowed\"],[[2990,2997],\"valid\"],[[2998,2998],\"valid\"],[[2999,3001],\"valid\"],[[3002,3005],\"disallowed\"],[[3006,3010],\"valid\"],[[3011,3013],\"disallowed\"],[[3014,3016],\"valid\"],[[3017,3017],\"disallowed\"],[[3018,3021],\"valid\"],[[3022,3023],\"disallowed\"],[[3024,3024],\"valid\"],[[3025,3030],\"disallowed\"],[[3031,3031],\"valid\"],[[3032,3045],\"disallowed\"],[[3046,3046],\"valid\"],[[3047,3055],\"valid\"],[[3056,3058],\"valid\",[],\"NV8\"],[[3059,3066],\"valid\",[],\"NV8\"],[[3067,3071],\"disallowed\"],[[3072,3072],\"valid\"],[[3073,3075],\"valid\"],[[3076,3076],\"disallowed\"],[[3077,3084],\"valid\"],[[3085,3085],\"disallowed\"],[[3086,3088],\"valid\"],[[3089,3089],\"disallowed\"],[[3090,3112],\"valid\"],[[3113,3113],\"disallowed\"],[[3114,3123],\"valid\"],[[3124,3124],\"valid\"],[[3125,3129],\"valid\"],[[3130,3132],\"disallowed\"],[[3133,3133],\"valid\"],[[3134,3140],\"valid\"],[[3141,3141],\"disallowed\"],[[3142,3144],\"valid\"],[[3145,3145],\"disallowed\"],[[3146,3149],\"valid\"],[[3150,3156],\"disallowed\"],[[3157,3158],\"valid\"],[[3159,3159],\"disallowed\"],[[3160,3161],\"valid\"],[[3162,3162],\"valid\"],[[3163,3167],\"disallowed\"],[[3168,3169],\"valid\"],[[3170,3171],\"valid\"],[[3172,3173],\"disallowed\"],[[3174,3183],\"valid\"],[[3184,3191],\"disallowed\"],[[3192,3199],\"valid\",[],\"NV8\"],[[3200,3200],\"disallowed\"],[[3201,3201],\"valid\"],[[3202,3203],\"valid\"],[[3204,3204],\"disallowed\"],[[3205,3212],\"valid\"],[[3213,3213],\"disallowed\"],[[3214,3216],\"valid\"],[[3217,3217],\"disallowed\"],[[3218,3240],\"valid\"],[[3241,3241],\"disallowed\"],[[3242,3251],\"valid\"],[[3252,3252],\"disallowed\"],[[3253,3257],\"valid\"],[[3258,3259],\"disallowed\"],[[3260,3261],\"valid\"],[[3262,3268],\"valid\"],[[3269,3269],\"disallowed\"],[[3270,3272],\"valid\"],[[3273,3273],\"disallowed\"],[[3274,3277],\"valid\"],[[3278,3284],\"disallowed\"],[[3285,3286],\"valid\"],[[3287,3293],\"disallowed\"],[[3294,3294],\"valid\"],[[3295,3295],\"disallowed\"],[[3296,3297],\"valid\"],[[3298,3299],\"valid\"],[[3300,3301],\"disallowed\"],[[3302,3311],\"valid\"],[[3312,3312],\"disallowed\"],[[3313,3314],\"valid\"],[[3315,3328],\"disallowed\"],[[3329,3329],\"valid\"],[[3330,3331],\"valid\"],[[3332,3332],\"disallowed\"],[[3333,3340],\"valid\"],[[3341,3341],\"disallowed\"],[[3342,3344],\"valid\"],[[3345,3345],\"disallowed\"],[[3346,3368],\"valid\"],[[3369,3369],\"valid\"],[[3370,3385],\"valid\"],[[3386,3386],\"valid\"],[[3387,3388],\"disallowed\"],[[3389,3389],\"valid\"],[[3390,3395],\"valid\"],[[3396,3396],\"valid\"],[[3397,3397],\"disallowed\"],[[3398,3400],\"valid\"],[[3401,3401],\"disallowed\"],[[3402,3405],\"valid\"],[[3406,3406],\"valid\"],[[3407,3414],\"disallowed\"],[[3415,3415],\"valid\"],[[3416,3422],\"disallowed\"],[[3423,3423],\"valid\"],[[3424,3425],\"valid\"],[[3426,3427],\"valid\"],[[3428,3429],\"disallowed\"],[[3430,3439],\"valid\"],[[3440,3445],\"valid\",[],\"NV8\"],[[3446,3448],\"disallowed\"],[[3449,3449],\"valid\",[],\"NV8\"],[[3450,3455],\"valid\"],[[3456,3457],\"disallowed\"],[[3458,3459],\"valid\"],[[3460,3460],\"disallowed\"],[[3461,3478],\"valid\"],[[3479,3481],\"disallowed\"],[[3482,3505],\"valid\"],[[3506,3506],\"disallowed\"],[[3507,3515],\"valid\"],[[3516,3516],\"disallowed\"],[[3517,3517],\"valid\"],[[3518,3519],\"disallowed\"],[[3520,3526],\"valid\"],[[3527,3529],\"disallowed\"],[[3530,3530],\"valid\"],[[3531,3534],\"disallowed\"],[[3535,3540],\"valid\"],[[3541,3541],\"disallowed\"],[[3542,3542],\"valid\"],[[3543,3543],\"disallowed\"],[[3544,3551],\"valid\"],[[3552,3557],\"disallowed\"],[[3558,3567],\"valid\"],[[3568,3569],\"disallowed\"],[[3570,3571],\"valid\"],[[3572,3572],\"valid\",[],\"NV8\"],[[3573,3584],\"disallowed\"],[[3585,3634],\"valid\"],[[3635,3635],\"mapped\",[3661,3634]],[[3636,3642],\"valid\"],[[3643,3646],\"disallowed\"],[[3647,3647],\"valid\",[],\"NV8\"],[[3648,3662],\"valid\"],[[3663,3663],\"valid\",[],\"NV8\"],[[3664,3673],\"valid\"],[[3674,3675],\"valid\",[],\"NV8\"],[[3676,3712],\"disallowed\"],[[3713,3714],\"valid\"],[[3715,3715],\"disallowed\"],[[3716,3716],\"valid\"],[[3717,3718],\"disallowed\"],[[3719,3720],\"valid\"],[[3721,3721],\"disallowed\"],[[3722,3722],\"valid\"],[[3723,3724],\"disallowed\"],[[3725,3725],\"valid\"],[[3726,3731],\"disallowed\"],[[3732,3735],\"valid\"],[[3736,3736],\"disallowed\"],[[3737,3743],\"valid\"],[[3744,3744],\"disallowed\"],[[3745,3747],\"valid\"],[[3748,3748],\"disallowed\"],[[3749,3749],\"valid\"],[[3750,3750],\"disallowed\"],[[3751,3751],\"valid\"],[[3752,3753],\"disallowed\"],[[3754,3755],\"valid\"],[[3756,3756],\"disallowed\"],[[3757,3762],\"valid\"],[[3763,3763],\"mapped\",[3789,3762]],[[3764,3769],\"valid\"],[[3770,3770],\"disallowed\"],[[3771,3773],\"valid\"],[[3774,3775],\"disallowed\"],[[3776,3780],\"valid\"],[[3781,3781],\"disallowed\"],[[3782,3782],\"valid\"],[[3783,3783],\"disallowed\"],[[3784,3789],\"valid\"],[[3790,3791],\"disallowed\"],[[3792,3801],\"valid\"],[[3802,3803],\"disallowed\"],[[3804,3804],\"mapped\",[3755,3737]],[[3805,3805],\"mapped\",[3755,3745]],[[3806,3807],\"valid\"],[[3808,3839],\"disallowed\"],[[3840,3840],\"valid\"],[[3841,3850],\"valid\",[],\"NV8\"],[[3851,3851],\"valid\"],[[3852,3852],\"mapped\",[3851]],[[3853,3863],\"valid\",[],\"NV8\"],[[3864,3865],\"valid\"],[[3866,3871],\"valid\",[],\"NV8\"],[[3872,3881],\"valid\"],[[3882,3892],\"valid\",[],\"NV8\"],[[3893,3893],\"valid\"],[[3894,3894],\"valid\",[],\"NV8\"],[[3895,3895],\"valid\"],[[3896,3896],\"valid\",[],\"NV8\"],[[3897,3897],\"valid\"],[[3898,3901],\"valid\",[],\"NV8\"],[[3902,3906],\"valid\"],[[3907,3907],\"mapped\",[3906,4023]],[[3908,3911],\"valid\"],[[3912,3912],\"disallowed\"],[[3913,3916],\"valid\"],[[3917,3917],\"mapped\",[3916,4023]],[[3918,3921],\"valid\"],[[3922,3922],\"mapped\",[3921,4023]],[[3923,3926],\"valid\"],[[3927,3927],\"mapped\",[3926,4023]],[[3928,3931],\"valid\"],[[3932,3932],\"mapped\",[3931,4023]],[[3933,3944],\"valid\"],[[3945,3945],\"mapped\",[3904,4021]],[[3946,3946],\"valid\"],[[3947,3948],\"valid\"],[[3949,3952],\"disallowed\"],[[3953,3954],\"valid\"],[[3955,3955],\"mapped\",[3953,3954]],[[3956,3956],\"valid\"],[[3957,3957],\"mapped\",[3953,3956]],[[3958,3958],\"mapped\",[4018,3968]],[[3959,3959],\"mapped\",[4018,3953,3968]],[[3960,3960],\"mapped\",[4019,3968]],[[3961,3961],\"mapped\",[4019,3953,3968]],[[3962,3968],\"valid\"],[[3969,3969],\"mapped\",[3953,3968]],[[3970,3972],\"valid\"],[[3973,3973],\"valid\",[],\"NV8\"],[[3974,3979],\"valid\"],[[3980,3983],\"valid\"],[[3984,3986],\"valid\"],[[3987,3987],\"mapped\",[3986,4023]],[[3988,3989],\"valid\"],[[3990,3990],\"valid\"],[[3991,3991],\"valid\"],[[3992,3992],\"disallowed\"],[[3993,3996],\"valid\"],[[3997,3997],\"mapped\",[3996,4023]],[[3998,4001],\"valid\"],[[4002,4002],\"mapped\",[4001,4023]],[[4003,4006],\"valid\"],[[4007,4007],\"mapped\",[4006,4023]],[[4008,4011],\"valid\"],[[4012,4012],\"mapped\",[4011,4023]],[[4013,4013],\"valid\"],[[4014,4016],\"valid\"],[[4017,4023],\"valid\"],[[4024,4024],\"valid\"],[[4025,4025],\"mapped\",[3984,4021]],[[4026,4028],\"valid\"],[[4029,4029],\"disallowed\"],[[4030,4037],\"valid\",[],\"NV8\"],[[4038,4038],\"valid\"],[[4039,4044],\"valid\",[],\"NV8\"],[[4045,4045],\"disallowed\"],[[4046,4046],\"valid\",[],\"NV8\"],[[4047,4047],\"valid\",[],\"NV8\"],[[4048,4049],\"valid\",[],\"NV8\"],[[4050,4052],\"valid\",[],\"NV8\"],[[4053,4056],\"valid\",[],\"NV8\"],[[4057,4058],\"valid\",[],\"NV8\"],[[4059,4095],\"disallowed\"],[[4096,4129],\"valid\"],[[4130,4130],\"valid\"],[[4131,4135],\"valid\"],[[4136,4136],\"valid\"],[[4137,4138],\"valid\"],[[4139,4139],\"valid\"],[[4140,4146],\"valid\"],[[4147,4149],\"valid\"],[[4150,4153],\"valid\"],[[4154,4159],\"valid\"],[[4160,4169],\"valid\"],[[4170,4175],\"valid\",[],\"NV8\"],[[4176,4185],\"valid\"],[[4186,4249],\"valid\"],[[4250,4253],\"valid\"],[[4254,4255],\"valid\",[],\"NV8\"],[[4256,4293],\"disallowed\"],[[4294,4294],\"disallowed\"],[[4295,4295],\"mapped\",[11559]],[[4296,4300],\"disallowed\"],[[4301,4301],\"mapped\",[11565]],[[4302,4303],\"disallowed\"],[[4304,4342],\"valid\"],[[4343,4344],\"valid\"],[[4345,4346],\"valid\"],[[4347,4347],\"valid\",[],\"NV8\"],[[4348,4348],\"mapped\",[4316]],[[4349,4351],\"valid\"],[[4352,4441],\"valid\",[],\"NV8\"],[[4442,4446],\"valid\",[],\"NV8\"],[[4447,4448],\"disallowed\"],[[4449,4514],\"valid\",[],\"NV8\"],[[4515,4519],\"valid\",[],\"NV8\"],[[4520,4601],\"valid\",[],\"NV8\"],[[4602,4607],\"valid\",[],\"NV8\"],[[4608,4614],\"valid\"],[[4615,4615],\"valid\"],[[4616,4678],\"valid\"],[[4679,4679],\"valid\"],[[4680,4680],\"valid\"],[[4681,4681],\"disallowed\"],[[4682,4685],\"valid\"],[[4686,4687],\"disallowed\"],[[4688,4694],\"valid\"],[[4695,4695],\"disallowed\"],[[4696,4696],\"valid\"],[[4697,4697],\"disallowed\"],[[4698,4701],\"valid\"],[[4702,4703],\"disallowed\"],[[4704,4742],\"valid\"],[[4743,4743],\"valid\"],[[4744,4744],\"valid\"],[[4745,4745],\"disallowed\"],[[4746,4749],\"valid\"],[[4750,4751],\"disallowed\"],[[4752,4782],\"valid\"],[[4783,4783],\"valid\"],[[4784,4784],\"valid\"],[[4785,4785],\"disallowed\"],[[4786,4789],\"valid\"],[[4790,4791],\"disallowed\"],[[4792,4798],\"valid\"],[[4799,4799],\"disallowed\"],[[4800,4800],\"valid\"],[[4801,4801],\"disallowed\"],[[4802,4805],\"valid\"],[[4806,4807],\"disallowed\"],[[4808,4814],\"valid\"],[[4815,4815],\"valid\"],[[4816,4822],\"valid\"],[[4823,4823],\"disallowed\"],[[4824,4846],\"valid\"],[[4847,4847],\"valid\"],[[4848,4878],\"valid\"],[[4879,4879],\"valid\"],[[4880,4880],\"valid\"],[[4881,4881],\"disallowed\"],[[4882,4885],\"valid\"],[[4886,4887],\"disallowed\"],[[4888,4894],\"valid\"],[[4895,4895],\"valid\"],[[4896,4934],\"valid\"],[[4935,4935],\"valid\"],[[4936,4954],\"valid\"],[[4955,4956],\"disallowed\"],[[4957,4958],\"valid\"],[[4959,4959],\"valid\"],[[4960,4960],\"valid\",[],\"NV8\"],[[4961,4988],\"valid\",[],\"NV8\"],[[4989,4991],\"disallowed\"],[[4992,5007],\"valid\"],[[5008,5017],\"valid\",[],\"NV8\"],[[5018,5023],\"disallowed\"],[[5024,5108],\"valid\"],[[5109,5109],\"valid\"],[[5110,5111],\"disallowed\"],[[5112,5112],\"mapped\",[5104]],[[5113,5113],\"mapped\",[5105]],[[5114,5114],\"mapped\",[5106]],[[5115,5115],\"mapped\",[5107]],[[5116,5116],\"mapped\",[5108]],[[5117,5117],\"mapped\",[5109]],[[5118,5119],\"disallowed\"],[[5120,5120],\"valid\",[],\"NV8\"],[[5121,5740],\"valid\"],[[5741,5742],\"valid\",[],\"NV8\"],[[5743,5750],\"valid\"],[[5751,5759],\"valid\"],[[5760,5760],\"disallowed\"],[[5761,5786],\"valid\"],[[5787,5788],\"valid\",[],\"NV8\"],[[5789,5791],\"disallowed\"],[[5792,5866],\"valid\"],[[5867,5872],\"valid\",[],\"NV8\"],[[5873,5880],\"valid\"],[[5881,5887],\"disallowed\"],[[5888,5900],\"valid\"],[[5901,5901],\"disallowed\"],[[5902,5908],\"valid\"],[[5909,5919],\"disallowed\"],[[5920,5940],\"valid\"],[[5941,5942],\"valid\",[],\"NV8\"],[[5943,5951],\"disallowed\"],[[5952,5971],\"valid\"],[[5972,5983],\"disallowed\"],[[5984,5996],\"valid\"],[[5997,5997],\"disallowed\"],[[5998,6000],\"valid\"],[[6001,6001],\"disallowed\"],[[6002,6003],\"valid\"],[[6004,6015],\"disallowed\"],[[6016,6067],\"valid\"],[[6068,6069],\"disallowed\"],[[6070,6099],\"valid\"],[[6100,6102],\"valid\",[],\"NV8\"],[[6103,6103],\"valid\"],[[6104,6107],\"valid\",[],\"NV8\"],[[6108,6108],\"valid\"],[[6109,6109],\"valid\"],[[6110,6111],\"disallowed\"],[[6112,6121],\"valid\"],[[6122,6127],\"disallowed\"],[[6128,6137],\"valid\",[],\"NV8\"],[[6138,6143],\"disallowed\"],[[6144,6149],\"valid\",[],\"NV8\"],[[6150,6150],\"disallowed\"],[[6151,6154],\"valid\",[],\"NV8\"],[[6155,6157],\"ignored\"],[[6158,6158],\"disallowed\"],[[6159,6159],\"disallowed\"],[[6160,6169],\"valid\"],[[6170,6175],\"disallowed\"],[[6176,6263],\"valid\"],[[6264,6271],\"disallowed\"],[[6272,6313],\"valid\"],[[6314,6314],\"valid\"],[[6315,6319],\"disallowed\"],[[6320,6389],\"valid\"],[[6390,6399],\"disallowed\"],[[6400,6428],\"valid\"],[[6429,6430],\"valid\"],[[6431,6431],\"disallowed\"],[[6432,6443],\"valid\"],[[6444,6447],\"disallowed\"],[[6448,6459],\"valid\"],[[6460,6463],\"disallowed\"],[[6464,6464],\"valid\",[],\"NV8\"],[[6465,6467],\"disallowed\"],[[6468,6469],\"valid\",[],\"NV8\"],[[6470,6509],\"valid\"],[[6510,6511],\"disallowed\"],[[6512,6516],\"valid\"],[[6517,6527],\"disallowed\"],[[6528,6569],\"valid\"],[[6570,6571],\"valid\"],[[6572,6575],\"disallowed\"],[[6576,6601],\"valid\"],[[6602,6607],\"disallowed\"],[[6608,6617],\"valid\"],[[6618,6618],\"valid\",[],\"XV8\"],[[6619,6621],\"disallowed\"],[[6622,6623],\"valid\",[],\"NV8\"],[[6624,6655],\"valid\",[],\"NV8\"],[[6656,6683],\"valid\"],[[6684,6685],\"disallowed\"],[[6686,6687],\"valid\",[],\"NV8\"],[[6688,6750],\"valid\"],[[6751,6751],\"disallowed\"],[[6752,6780],\"valid\"],[[6781,6782],\"disallowed\"],[[6783,6793],\"valid\"],[[6794,6799],\"disallowed\"],[[6800,6809],\"valid\"],[[6810,6815],\"disallowed\"],[[6816,6822],\"valid\",[],\"NV8\"],[[6823,6823],\"valid\"],[[6824,6829],\"valid\",[],\"NV8\"],[[6830,6831],\"disallowed\"],[[6832,6845],\"valid\"],[[6846,6846],\"valid\",[],\"NV8\"],[[6847,6911],\"disallowed\"],[[6912,6987],\"valid\"],[[6988,6991],\"disallowed\"],[[6992,7001],\"valid\"],[[7002,7018],\"valid\",[],\"NV8\"],[[7019,7027],\"valid\"],[[7028,7036],\"valid\",[],\"NV8\"],[[7037,7039],\"disallowed\"],[[7040,7082],\"valid\"],[[7083,7085],\"valid\"],[[7086,7097],\"valid\"],[[7098,7103],\"valid\"],[[7104,7155],\"valid\"],[[7156,7163],\"disallowed\"],[[7164,7167],\"valid\",[],\"NV8\"],[[7168,7223],\"valid\"],[[7224,7226],\"disallowed\"],[[7227,7231],\"valid\",[],\"NV8\"],[[7232,7241],\"valid\"],[[7242,7244],\"disallowed\"],[[7245,7293],\"valid\"],[[7294,7295],\"valid\",[],\"NV8\"],[[7296,7359],\"disallowed\"],[[7360,7367],\"valid\",[],\"NV8\"],[[7368,7375],\"disallowed\"],[[7376,7378],\"valid\"],[[7379,7379],\"valid\",[],\"NV8\"],[[7380,7410],\"valid\"],[[7411,7414],\"valid\"],[[7415,7415],\"disallowed\"],[[7416,7417],\"valid\"],[[7418,7423],\"disallowed\"],[[7424,7467],\"valid\"],[[7468,7468],\"mapped\",[97]],[[7469,7469],\"mapped\",[230]],[[7470,7470],\"mapped\",[98]],[[7471,7471],\"valid\"],[[7472,7472],\"mapped\",[100]],[[7473,7473],\"mapped\",[101]],[[7474,7474],\"mapped\",[477]],[[7475,7475],\"mapped\",[103]],[[7476,7476],\"mapped\",[104]],[[7477,7477],\"mapped\",[105]],[[7478,7478],\"mapped\",[106]],[[7479,7479],\"mapped\",[107]],[[7480,7480],\"mapped\",[108]],[[7481,7481],\"mapped\",[109]],[[7482,7482],\"mapped\",[110]],[[7483,7483],\"valid\"],[[7484,7484],\"mapped\",[111]],[[7485,7485],\"mapped\",[547]],[[7486,7486],\"mapped\",[112]],[[7487,7487],\"mapped\",[114]],[[7488,7488],\"mapped\",[116]],[[7489,7489],\"mapped\",[117]],[[7490,7490],\"mapped\",[119]],[[7491,7491],\"mapped\",[97]],[[7492,7492],\"mapped\",[592]],[[7493,7493],\"mapped\",[593]],[[7494,7494],\"mapped\",[7426]],[[7495,7495],\"mapped\",[98]],[[7496,7496],\"mapped\",[100]],[[7497,7497],\"mapped\",[101]],[[7498,7498],\"mapped\",[601]],[[7499,7499],\"mapped\",[603]],[[7500,7500],\"mapped\",[604]],[[7501,7501],\"mapped\",[103]],[[7502,7502],\"valid\"],[[7503,7503],\"mapped\",[107]],[[7504,7504],\"mapped\",[109]],[[7505,7505],\"mapped\",[331]],[[7506,7506],\"mapped\",[111]],[[7507,7507],\"mapped\",[596]],[[7508,7508],\"mapped\",[7446]],[[7509,7509],\"mapped\",[7447]],[[7510,7510],\"mapped\",[112]],[[7511,7511],\"mapped\",[116]],[[7512,7512],\"mapped\",[117]],[[7513,7513],\"mapped\",[7453]],[[7514,7514],\"mapped\",[623]],[[7515,7515],\"mapped\",[118]],[[7516,7516],\"mapped\",[7461]],[[7517,7517],\"mapped\",[946]],[[7518,7518],\"mapped\",[947]],[[7519,7519],\"mapped\",[948]],[[7520,7520],\"mapped\",[966]],[[7521,7521],\"mapped\",[967]],[[7522,7522],\"mapped\",[105]],[[7523,7523],\"mapped\",[114]],[[7524,7524],\"mapped\",[117]],[[7525,7525],\"mapped\",[118]],[[7526,7526],\"mapped\",[946]],[[7527,7527],\"mapped\",[947]],[[7528,7528],\"mapped\",[961]],[[7529,7529],\"mapped\",[966]],[[7530,7530],\"mapped\",[967]],[[7531,7531],\"valid\"],[[7532,7543],\"valid\"],[[7544,7544],\"mapped\",[1085]],[[7545,7578],\"valid\"],[[7579,7579],\"mapped\",[594]],[[7580,7580],\"mapped\",[99]],[[7581,7581],\"mapped\",[597]],[[7582,7582],\"mapped\",[240]],[[7583,7583],\"mapped\",[604]],[[7584,7584],\"mapped\",[102]],[[7585,7585],\"mapped\",[607]],[[7586,7586],\"mapped\",[609]],[[7587,7587],\"mapped\",[613]],[[7588,7588],\"mapped\",[616]],[[7589,7589],\"mapped\",[617]],[[7590,7590],\"mapped\",[618]],[[7591,7591],\"mapped\",[7547]],[[7592,7592],\"mapped\",[669]],[[7593,7593],\"mapped\",[621]],[[7594,7594],\"mapped\",[7557]],[[7595,7595],\"mapped\",[671]],[[7596,7596],\"mapped\",[625]],[[7597,7597],\"mapped\",[624]],[[7598,7598],\"mapped\",[626]],[[7599,7599],\"mapped\",[627]],[[7600,7600],\"mapped\",[628]],[[7601,7601],\"mapped\",[629]],[[7602,7602],\"mapped\",[632]],[[7603,7603],\"mapped\",[642]],[[7604,7604],\"mapped\",[643]],[[7605,7605],\"mapped\",[427]],[[7606,7606],\"mapped\",[649]],[[7607,7607],\"mapped\",[650]],[[7608,7608],\"mapped\",[7452]],[[7609,7609],\"mapped\",[651]],[[7610,7610],\"mapped\",[652]],[[7611,7611],\"mapped\",[122]],[[7612,7612],\"mapped\",[656]],[[7613,7613],\"mapped\",[657]],[[7614,7614],\"mapped\",[658]],[[7615,7615],\"mapped\",[952]],[[7616,7619],\"valid\"],[[7620,7626],\"valid\"],[[7627,7654],\"valid\"],[[7655,7669],\"valid\"],[[7670,7675],\"disallowed\"],[[7676,7676],\"valid\"],[[7677,7677],\"valid\"],[[7678,7679],\"valid\"],[[7680,7680],\"mapped\",[7681]],[[7681,7681],\"valid\"],[[7682,7682],\"mapped\",[7683]],[[7683,7683],\"valid\"],[[7684,7684],\"mapped\",[7685]],[[7685,7685],\"valid\"],[[7686,7686],\"mapped\",[7687]],[[7687,7687],\"valid\"],[[7688,7688],\"mapped\",[7689]],[[7689,7689],\"valid\"],[[7690,7690],\"mapped\",[7691]],[[7691,7691],\"valid\"],[[7692,7692],\"mapped\",[7693]],[[7693,7693],\"valid\"],[[7694,7694],\"mapped\",[7695]],[[7695,7695],\"valid\"],[[7696,7696],\"mapped\",[7697]],[[7697,7697],\"valid\"],[[7698,7698],\"mapped\",[7699]],[[7699,7699],\"valid\"],[[7700,7700],\"mapped\",[7701]],[[7701,7701],\"valid\"],[[7702,7702],\"mapped\",[7703]],[[7703,7703],\"valid\"],[[7704,7704],\"mapped\",[7705]],[[7705,7705],\"valid\"],[[7706,7706],\"mapped\",[7707]],[[7707,7707],\"valid\"],[[7708,7708],\"mapped\",[7709]],[[7709,7709],\"valid\"],[[7710,7710],\"mapped\",[7711]],[[7711,7711],\"valid\"],[[7712,7712],\"mapped\",[7713]],[[7713,7713],\"valid\"],[[7714,7714],\"mapped\",[7715]],[[7715,7715],\"valid\"],[[7716,7716],\"mapped\",[7717]],[[7717,7717],\"valid\"],[[7718,7718],\"mapped\",[7719]],[[7719,7719],\"valid\"],[[7720,7720],\"mapped\",[7721]],[[7721,7721],\"valid\"],[[7722,7722],\"mapped\",[7723]],[[7723,7723],\"valid\"],[[7724,7724],\"mapped\",[7725]],[[7725,7725],\"valid\"],[[7726,7726],\"mapped\",[7727]],[[7727,7727],\"valid\"],[[7728,7728],\"mapped\",[7729]],[[7729,7729],\"valid\"],[[7730,7730],\"mapped\",[7731]],[[7731,7731],\"valid\"],[[7732,7732],\"mapped\",[7733]],[[7733,7733],\"valid\"],[[7734,7734],\"mapped\",[7735]],[[7735,7735],\"valid\"],[[7736,7736],\"mapped\",[7737]],[[7737,7737],\"valid\"],[[7738,7738],\"mapped\",[7739]],[[7739,7739],\"valid\"],[[7740,7740],\"mapped\",[7741]],[[7741,7741],\"valid\"],[[7742,7742],\"mapped\",[7743]],[[7743,7743],\"valid\"],[[7744,7744],\"mapped\",[7745]],[[7745,7745],\"valid\"],[[7746,7746],\"mapped\",[7747]],[[7747,7747],\"valid\"],[[7748,7748],\"mapped\",[7749]],[[7749,7749],\"valid\"],[[7750,7750],\"mapped\",[7751]],[[7751,7751],\"valid\"],[[7752,7752],\"mapped\",[7753]],[[7753,7753],\"valid\"],[[7754,7754],\"mapped\",[7755]],[[7755,7755],\"valid\"],[[7756,7756],\"mapped\",[7757]],[[7757,7757],\"valid\"],[[7758,7758],\"mapped\",[7759]],[[7759,7759],\"valid\"],[[7760,7760],\"mapped\",[7761]],[[7761,7761],\"valid\"],[[7762,7762],\"mapped\",[7763]],[[7763,7763],\"valid\"],[[7764,7764],\"mapped\",[7765]],[[7765,7765],\"valid\"],[[7766,7766],\"mapped\",[7767]],[[7767,7767],\"valid\"],[[7768,7768],\"mapped\",[7769]],[[7769,7769],\"valid\"],[[7770,7770],\"mapped\",[7771]],[[7771,7771],\"valid\"],[[7772,7772],\"mapped\",[7773]],[[7773,7773],\"valid\"],[[7774,7774],\"mapped\",[7775]],[[7775,7775],\"valid\"],[[7776,7776],\"mapped\",[7777]],[[7777,7777],\"valid\"],[[7778,7778],\"mapped\",[7779]],[[7779,7779],\"valid\"],[[7780,7780],\"mapped\",[7781]],[[7781,7781],\"valid\"],[[7782,7782],\"mapped\",[7783]],[[7783,7783],\"valid\"],[[7784,7784],\"mapped\",[7785]],[[7785,7785],\"valid\"],[[7786,7786],\"mapped\",[7787]],[[7787,7787],\"valid\"],[[7788,7788],\"mapped\",[7789]],[[7789,7789],\"valid\"],[[7790,7790],\"mapped\",[7791]],[[7791,7791],\"valid\"],[[7792,7792],\"mapped\",[7793]],[[7793,7793],\"valid\"],[[7794,7794],\"mapped\",[7795]],[[7795,7795],\"valid\"],[[7796,7796],\"mapped\",[7797]],[[7797,7797],\"valid\"],[[7798,7798],\"mapped\",[7799]],[[7799,7799],\"valid\"],[[7800,7800],\"mapped\",[7801]],[[7801,7801],\"valid\"],[[7802,7802],\"mapped\",[7803]],[[7803,7803],\"valid\"],[[7804,7804],\"mapped\",[7805]],[[7805,7805],\"valid\"],[[7806,7806],\"mapped\",[7807]],[[7807,7807],\"valid\"],[[7808,7808],\"mapped\",[7809]],[[7809,7809],\"valid\"],[[7810,7810],\"mapped\",[7811]],[[7811,7811],\"valid\"],[[7812,7812],\"mapped\",[7813]],[[7813,7813],\"valid\"],[[7814,7814],\"mapped\",[7815]],[[7815,7815],\"valid\"],[[7816,7816],\"mapped\",[7817]],[[7817,7817],\"valid\"],[[7818,7818],\"mapped\",[7819]],[[7819,7819],\"valid\"],[[7820,7820],\"mapped\",[7821]],[[7821,7821],\"valid\"],[[7822,7822],\"mapped\",[7823]],[[7823,7823],\"valid\"],[[7824,7824],\"mapped\",[7825]],[[7825,7825],\"valid\"],[[7826,7826],\"mapped\",[7827]],[[7827,7827],\"valid\"],[[7828,7828],\"mapped\",[7829]],[[7829,7833],\"valid\"],[[7834,7834],\"mapped\",[97,702]],[[7835,7835],\"mapped\",[7777]],[[7836,7837],\"valid\"],[[7838,7838],\"mapped\",[115,115]],[[7839,7839],\"valid\"],[[7840,7840],\"mapped\",[7841]],[[7841,7841],\"valid\"],[[7842,7842],\"mapped\",[7843]],[[7843,7843],\"valid\"],[[7844,7844],\"mapped\",[7845]],[[7845,7845],\"valid\"],[[7846,7846],\"mapped\",[7847]],[[7847,7847],\"valid\"],[[7848,7848],\"mapped\",[7849]],[[7849,7849],\"valid\"],[[7850,7850],\"mapped\",[7851]],[[7851,7851],\"valid\"],[[7852,7852],\"mapped\",[7853]],[[7853,7853],\"valid\"],[[7854,7854],\"mapped\",[7855]],[[7855,7855],\"valid\"],[[7856,7856],\"mapped\",[7857]],[[7857,7857],\"valid\"],[[7858,7858],\"mapped\",[7859]],[[7859,7859],\"valid\"],[[7860,7860],\"mapped\",[7861]],[[7861,7861],\"valid\"],[[7862,7862],\"mapped\",[7863]],[[7863,7863],\"valid\"],[[7864,7864],\"mapped\",[7865]],[[7865,7865],\"valid\"],[[7866,7866],\"mapped\",[7867]],[[7867,7867],\"valid\"],[[7868,7868],\"mapped\",[7869]],[[7869,7869],\"valid\"],[[7870,7870],\"mapped\",[7871]],[[7871,7871],\"valid\"],[[7872,7872],\"mapped\",[7873]],[[7873,7873],\"valid\"],[[7874,7874],\"mapped\",[7875]],[[7875,7875],\"valid\"],[[7876,7876],\"mapped\",[7877]],[[7877,7877],\"valid\"],[[7878,7878],\"mapped\",[7879]],[[7879,7879],\"valid\"],[[7880,7880],\"mapped\",[7881]],[[7881,7881],\"valid\"],[[7882,7882],\"mapped\",[7883]],[[7883,7883],\"valid\"],[[7884,7884],\"mapped\",[7885]],[[7885,7885],\"valid\"],[[7886,7886],\"mapped\",[7887]],[[7887,7887],\"valid\"],[[7888,7888],\"mapped\",[7889]],[[7889,7889],\"valid\"],[[7890,7890],\"mapped\",[7891]],[[7891,7891],\"valid\"],[[7892,7892],\"mapped\",[7893]],[[7893,7893],\"valid\"],[[7894,7894],\"mapped\",[7895]],[[7895,7895],\"valid\"],[[7896,7896],\"mapped\",[7897]],[[7897,7897],\"valid\"],[[7898,7898],\"mapped\",[7899]],[[7899,7899],\"valid\"],[[7900,7900],\"mapped\",[7901]],[[7901,7901],\"valid\"],[[7902,7902],\"mapped\",[7903]],[[7903,7903],\"valid\"],[[7904,7904],\"mapped\",[7905]],[[7905,7905],\"valid\"],[[7906,7906],\"mapped\",[7907]],[[7907,7907],\"valid\"],[[7908,7908],\"mapped\",[7909]],[[7909,7909],\"valid\"],[[7910,7910],\"mapped\",[7911]],[[7911,7911],\"valid\"],[[7912,7912],\"mapped\",[7913]],[[7913,7913],\"valid\"],[[7914,7914],\"mapped\",[7915]],[[7915,7915],\"valid\"],[[7916,7916],\"mapped\",[7917]],[[7917,7917],\"valid\"],[[7918,7918],\"mapped\",[7919]],[[7919,7919],\"valid\"],[[7920,7920],\"mapped\",[7921]],[[7921,7921],\"valid\"],[[7922,7922],\"mapped\",[7923]],[[7923,7923],\"valid\"],[[7924,7924],\"mapped\",[7925]],[[7925,7925],\"valid\"],[[7926,7926],\"mapped\",[7927]],[[7927,7927],\"valid\"],[[7928,7928],\"mapped\",[7929]],[[7929,7929],\"valid\"],[[7930,7930],\"mapped\",[7931]],[[7931,7931],\"valid\"],[[7932,7932],\"mapped\",[7933]],[[7933,7933],\"valid\"],[[7934,7934],\"mapped\",[7935]],[[7935,7935],\"valid\"],[[7936,7943],\"valid\"],[[7944,7944],\"mapped\",[7936]],[[7945,7945],\"mapped\",[7937]],[[7946,7946],\"mapped\",[7938]],[[7947,7947],\"mapped\",[7939]],[[7948,7948],\"mapped\",[7940]],[[7949,7949],\"mapped\",[7941]],[[7950,7950],\"mapped\",[7942]],[[7951,7951],\"mapped\",[7943]],[[7952,7957],\"valid\"],[[7958,7959],\"disallowed\"],[[7960,7960],\"mapped\",[7952]],[[7961,7961],\"mapped\",[7953]],[[7962,7962],\"mapped\",[7954]],[[7963,7963],\"mapped\",[7955]],[[7964,7964],\"mapped\",[7956]],[[7965,7965],\"mapped\",[7957]],[[7966,7967],\"disallowed\"],[[7968,7975],\"valid\"],[[7976,7976],\"mapped\",[7968]],[[7977,7977],\"mapped\",[7969]],[[7978,7978],\"mapped\",[7970]],[[7979,7979],\"mapped\",[7971]],[[7980,7980],\"mapped\",[7972]],[[7981,7981],\"mapped\",[7973]],[[7982,7982],\"mapped\",[7974]],[[7983,7983],\"mapped\",[7975]],[[7984,7991],\"valid\"],[[7992,7992],\"mapped\",[7984]],[[7993,7993],\"mapped\",[7985]],[[7994,7994],\"mapped\",[7986]],[[7995,7995],\"mapped\",[7987]],[[7996,7996],\"mapped\",[7988]],[[7997,7997],\"mapped\",[7989]],[[7998,7998],\"mapped\",[7990]],[[7999,7999],\"mapped\",[7991]],[[8000,8005],\"valid\"],[[8006,8007],\"disallowed\"],[[8008,8008],\"mapped\",[8000]],[[8009,8009],\"mapped\",[8001]],[[8010,8010],\"mapped\",[8002]],[[8011,8011],\"mapped\",[8003]],[[8012,8012],\"mapped\",[8004]],[[8013,8013],\"mapped\",[8005]],[[8014,8015],\"disallowed\"],[[8016,8023],\"valid\"],[[8024,8024],\"disallowed\"],[[8025,8025],\"mapped\",[8017]],[[8026,8026],\"disallowed\"],[[8027,8027],\"mapped\",[8019]],[[8028,8028],\"disallowed\"],[[8029,8029],\"mapped\",[8021]],[[8030,8030],\"disallowed\"],[[8031,8031],\"mapped\",[8023]],[[8032,8039],\"valid\"],[[8040,8040],\"mapped\",[8032]],[[8041,8041],\"mapped\",[8033]],[[8042,8042],\"mapped\",[8034]],[[8043,8043],\"mapped\",[8035]],[[8044,8044],\"mapped\",[8036]],[[8045,8045],\"mapped\",[8037]],[[8046,8046],\"mapped\",[8038]],[[8047,8047],\"mapped\",[8039]],[[8048,8048],\"valid\"],[[8049,8049],\"mapped\",[940]],[[8050,8050],\"valid\"],[[8051,8051],\"mapped\",[941]],[[8052,8052],\"valid\"],[[8053,8053],\"mapped\",[942]],[[8054,8054],\"valid\"],[[8055,8055],\"mapped\",[943]],[[8056,8056],\"valid\"],[[8057,8057],\"mapped\",[972]],[[8058,8058],\"valid\"],[[8059,8059],\"mapped\",[973]],[[8060,8060],\"valid\"],[[8061,8061],\"mapped\",[974]],[[8062,8063],\"disallowed\"],[[8064,8064],\"mapped\",[7936,953]],[[8065,8065],\"mapped\",[7937,953]],[[8066,8066],\"mapped\",[7938,953]],[[8067,8067],\"mapped\",[7939,953]],[[8068,8068],\"mapped\",[7940,953]],[[8069,8069],\"mapped\",[7941,953]],[[8070,8070],\"mapped\",[7942,953]],[[8071,8071],\"mapped\",[7943,953]],[[8072,8072],\"mapped\",[7936,953]],[[8073,8073],\"mapped\",[7937,953]],[[8074,8074],\"mapped\",[7938,953]],[[8075,8075],\"mapped\",[7939,953]],[[8076,8076],\"mapped\",[7940,953]],[[8077,8077],\"mapped\",[7941,953]],[[8078,8078],\"mapped\",[7942,953]],[[8079,8079],\"mapped\",[7943,953]],[[8080,8080],\"mapped\",[7968,953]],[[8081,8081],\"mapped\",[7969,953]],[[8082,8082],\"mapped\",[7970,953]],[[8083,8083],\"mapped\",[7971,953]],[[8084,8084],\"mapped\",[7972,953]],[[8085,8085],\"mapped\",[7973,953]],[[8086,8086],\"mapped\",[7974,953]],[[8087,8087],\"mapped\",[7975,953]],[[8088,8088],\"mapped\",[7968,953]],[[8089,8089],\"mapped\",[7969,953]],[[8090,8090],\"mapped\",[7970,953]],[[8091,8091],\"mapped\",[7971,953]],[[8092,8092],\"mapped\",[7972,953]],[[8093,8093],\"mapped\",[7973,953]],[[8094,8094],\"mapped\",[7974,953]],[[8095,8095],\"mapped\",[7975,953]],[[8096,8096],\"mapped\",[8032,953]],[[8097,8097],\"mapped\",[8033,953]],[[8098,8098],\"mapped\",[8034,953]],[[8099,8099],\"mapped\",[8035,953]],[[8100,8100],\"mapped\",[8036,953]],[[8101,8101],\"mapped\",[8037,953]],[[8102,8102],\"mapped\",[8038,953]],[[8103,8103],\"mapped\",[8039,953]],[[8104,8104],\"mapped\",[8032,953]],[[8105,8105],\"mapped\",[8033,953]],[[8106,8106],\"mapped\",[8034,953]],[[8107,8107],\"mapped\",[8035,953]],[[8108,8108],\"mapped\",[8036,953]],[[8109,8109],\"mapped\",[8037,953]],[[8110,8110],\"mapped\",[8038,953]],[[8111,8111],\"mapped\",[8039,953]],[[8112,8113],\"valid\"],[[8114,8114],\"mapped\",[8048,953]],[[8115,8115],\"mapped\",[945,953]],[[8116,8116],\"mapped\",[940,953]],[[8117,8117],\"disallowed\"],[[8118,8118],\"valid\"],[[8119,8119],\"mapped\",[8118,953]],[[8120,8120],\"mapped\",[8112]],[[8121,8121],\"mapped\",[8113]],[[8122,8122],\"mapped\",[8048]],[[8123,8123],\"mapped\",[940]],[[8124,8124],\"mapped\",[945,953]],[[8125,8125],\"disallowed_STD3_mapped\",[32,787]],[[8126,8126],\"mapped\",[953]],[[8127,8127],\"disallowed_STD3_mapped\",[32,787]],[[8128,8128],\"disallowed_STD3_mapped\",[32,834]],[[8129,8129],\"disallowed_STD3_mapped\",[32,776,834]],[[8130,8130],\"mapped\",[8052,953]],[[8131,8131],\"mapped\",[951,953]],[[8132,8132],\"mapped\",[942,953]],[[8133,8133],\"disallowed\"],[[8134,8134],\"valid\"],[[8135,8135],\"mapped\",[8134,953]],[[8136,8136],\"mapped\",[8050]],[[8137,8137],\"mapped\",[941]],[[8138,8138],\"mapped\",[8052]],[[8139,8139],\"mapped\",[942]],[[8140,8140],\"mapped\",[951,953]],[[8141,8141],\"disallowed_STD3_mapped\",[32,787,768]],[[8142,8142],\"disallowed_STD3_mapped\",[32,787,769]],[[8143,8143],\"disallowed_STD3_mapped\",[32,787,834]],[[8144,8146],\"valid\"],[[8147,8147],\"mapped\",[912]],[[8148,8149],\"disallowed\"],[[8150,8151],\"valid\"],[[8152,8152],\"mapped\",[8144]],[[8153,8153],\"mapped\",[8145]],[[8154,8154],\"mapped\",[8054]],[[8155,8155],\"mapped\",[943]],[[8156,8156],\"disallowed\"],[[8157,8157],\"disallowed_STD3_mapped\",[32,788,768]],[[8158,8158],\"disallowed_STD3_mapped\",[32,788,769]],[[8159,8159],\"disallowed_STD3_mapped\",[32,788,834]],[[8160,8162],\"valid\"],[[8163,8163],\"mapped\",[944]],[[8164,8167],\"valid\"],[[8168,8168],\"mapped\",[8160]],[[8169,8169],\"mapped\",[8161]],[[8170,8170],\"mapped\",[8058]],[[8171,8171],\"mapped\",[973]],[[8172,8172],\"mapped\",[8165]],[[8173,8173],\"disallowed_STD3_mapped\",[32,776,768]],[[8174,8174],\"disallowed_STD3_mapped\",[32,776,769]],[[8175,8175],\"disallowed_STD3_mapped\",[96]],[[8176,8177],\"disallowed\"],[[8178,8178],\"mapped\",[8060,953]],[[8179,8179],\"mapped\",[969,953]],[[8180,8180],\"mapped\",[974,953]],[[8181,8181],\"disallowed\"],[[8182,8182],\"valid\"],[[8183,8183],\"mapped\",[8182,953]],[[8184,8184],\"mapped\",[8056]],[[8185,8185],\"mapped\",[972]],[[8186,8186],\"mapped\",[8060]],[[8187,8187],\"mapped\",[974]],[[8188,8188],\"mapped\",[969,953]],[[8189,8189],\"disallowed_STD3_mapped\",[32,769]],[[8190,8190],\"disallowed_STD3_mapped\",[32,788]],[[8191,8191],\"disallowed\"],[[8192,8202],\"disallowed_STD3_mapped\",[32]],[[8203,8203],\"ignored\"],[[8204,8205],\"deviation\",[]],[[8206,8207],\"disallowed\"],[[8208,8208],\"valid\",[],\"NV8\"],[[8209,8209],\"mapped\",[8208]],[[8210,8214],\"valid\",[],\"NV8\"],[[8215,8215],\"disallowed_STD3_mapped\",[32,819]],[[8216,8227],\"valid\",[],\"NV8\"],[[8228,8230],\"disallowed\"],[[8231,8231],\"valid\",[],\"NV8\"],[[8232,8238],\"disallowed\"],[[8239,8239],\"disallowed_STD3_mapped\",[32]],[[8240,8242],\"valid\",[],\"NV8\"],[[8243,8243],\"mapped\",[8242,8242]],[[8244,8244],\"mapped\",[8242,8242,8242]],[[8245,8245],\"valid\",[],\"NV8\"],[[8246,8246],\"mapped\",[8245,8245]],[[8247,8247],\"mapped\",[8245,8245,8245]],[[8248,8251],\"valid\",[],\"NV8\"],[[8252,8252],\"disallowed_STD3_mapped\",[33,33]],[[8253,8253],\"valid\",[],\"NV8\"],[[8254,8254],\"disallowed_STD3_mapped\",[32,773]],[[8255,8262],\"valid\",[],\"NV8\"],[[8263,8263],\"disallowed_STD3_mapped\",[63,63]],[[8264,8264],\"disallowed_STD3_mapped\",[63,33]],[[8265,8265],\"disallowed_STD3_mapped\",[33,63]],[[8266,8269],\"valid\",[],\"NV8\"],[[8270,8274],\"valid\",[],\"NV8\"],[[8275,8276],\"valid\",[],\"NV8\"],[[8277,8278],\"valid\",[],\"NV8\"],[[8279,8279],\"mapped\",[8242,8242,8242,8242]],[[8280,8286],\"valid\",[],\"NV8\"],[[8287,8287],\"disallowed_STD3_mapped\",[32]],[[8288,8288],\"ignored\"],[[8289,8291],\"disallowed\"],[[8292,8292],\"ignored\"],[[8293,8293],\"disallowed\"],[[8294,8297],\"disallowed\"],[[8298,8303],\"disallowed\"],[[8304,8304],\"mapped\",[48]],[[8305,8305],\"mapped\",[105]],[[8306,8307],\"disallowed\"],[[8308,8308],\"mapped\",[52]],[[8309,8309],\"mapped\",[53]],[[8310,8310],\"mapped\",[54]],[[8311,8311],\"mapped\",[55]],[[8312,8312],\"mapped\",[56]],[[8313,8313],\"mapped\",[57]],[[8314,8314],\"disallowed_STD3_mapped\",[43]],[[8315,8315],\"mapped\",[8722]],[[8316,8316],\"disallowed_STD3_mapped\",[61]],[[8317,8317],\"disallowed_STD3_mapped\",[40]],[[8318,8318],\"disallowed_STD3_mapped\",[41]],[[8319,8319],\"mapped\",[110]],[[8320,8320],\"mapped\",[48]],[[8321,8321],\"mapped\",[49]],[[8322,8322],\"mapped\",[50]],[[8323,8323],\"mapped\",[51]],[[8324,8324],\"mapped\",[52]],[[8325,8325],\"mapped\",[53]],[[8326,8326],\"mapped\",[54]],[[8327,8327],\"mapped\",[55]],[[8328,8328],\"mapped\",[56]],[[8329,8329],\"mapped\",[57]],[[8330,8330],\"disallowed_STD3_mapped\",[43]],[[8331,8331],\"mapped\",[8722]],[[8332,8332],\"disallowed_STD3_mapped\",[61]],[[8333,8333],\"disallowed_STD3_mapped\",[40]],[[8334,8334],\"disallowed_STD3_mapped\",[41]],[[8335,8335],\"disallowed\"],[[8336,8336],\"mapped\",[97]],[[8337,8337],\"mapped\",[101]],[[8338,8338],\"mapped\",[111]],[[8339,8339],\"mapped\",[120]],[[8340,8340],\"mapped\",[601]],[[8341,8341],\"mapped\",[104]],[[8342,8342],\"mapped\",[107]],[[8343,8343],\"mapped\",[108]],[[8344,8344],\"mapped\",[109]],[[8345,8345],\"mapped\",[110]],[[8346,8346],\"mapped\",[112]],[[8347,8347],\"mapped\",[115]],[[8348,8348],\"mapped\",[116]],[[8349,8351],\"disallowed\"],[[8352,8359],\"valid\",[],\"NV8\"],[[8360,8360],\"mapped\",[114,115]],[[8361,8362],\"valid\",[],\"NV8\"],[[8363,8363],\"valid\",[],\"NV8\"],[[8364,8364],\"valid\",[],\"NV8\"],[[8365,8367],\"valid\",[],\"NV8\"],[[8368,8369],\"valid\",[],\"NV8\"],[[8370,8373],\"valid\",[],\"NV8\"],[[8374,8376],\"valid\",[],\"NV8\"],[[8377,8377],\"valid\",[],\"NV8\"],[[8378,8378],\"valid\",[],\"NV8\"],[[8379,8381],\"valid\",[],\"NV8\"],[[8382,8382],\"valid\",[],\"NV8\"],[[8383,8399],\"disallowed\"],[[8400,8417],\"valid\",[],\"NV8\"],[[8418,8419],\"valid\",[],\"NV8\"],[[8420,8426],\"valid\",[],\"NV8\"],[[8427,8427],\"valid\",[],\"NV8\"],[[8428,8431],\"valid\",[],\"NV8\"],[[8432,8432],\"valid\",[],\"NV8\"],[[8433,8447],\"disallowed\"],[[8448,8448],\"disallowed_STD3_mapped\",[97,47,99]],[[8449,8449],\"disallowed_STD3_mapped\",[97,47,115]],[[8450,8450],\"mapped\",[99]],[[8451,8451],\"mapped\",[176,99]],[[8452,8452],\"valid\",[],\"NV8\"],[[8453,8453],\"disallowed_STD3_mapped\",[99,47,111]],[[8454,8454],\"disallowed_STD3_mapped\",[99,47,117]],[[8455,8455],\"mapped\",[603]],[[8456,8456],\"valid\",[],\"NV8\"],[[8457,8457],\"mapped\",[176,102]],[[8458,8458],\"mapped\",[103]],[[8459,8462],\"mapped\",[104]],[[8463,8463],\"mapped\",[295]],[[8464,8465],\"mapped\",[105]],[[8466,8467],\"mapped\",[108]],[[8468,8468],\"valid\",[],\"NV8\"],[[8469,8469],\"mapped\",[110]],[[8470,8470],\"mapped\",[110,111]],[[8471,8472],\"valid\",[],\"NV8\"],[[8473,8473],\"mapped\",[112]],[[8474,8474],\"mapped\",[113]],[[8475,8477],\"mapped\",[114]],[[8478,8479],\"valid\",[],\"NV8\"],[[8480,8480],\"mapped\",[115,109]],[[8481,8481],\"mapped\",[116,101,108]],[[8482,8482],\"mapped\",[116,109]],[[8483,8483],\"valid\",[],\"NV8\"],[[8484,8484],\"mapped\",[122]],[[8485,8485],\"valid\",[],\"NV8\"],[[8486,8486],\"mapped\",[969]],[[8487,8487],\"valid\",[],\"NV8\"],[[8488,8488],\"mapped\",[122]],[[8489,8489],\"valid\",[],\"NV8\"],[[8490,8490],\"mapped\",[107]],[[8491,8491],\"mapped\",[229]],[[8492,8492],\"mapped\",[98]],[[8493,8493],\"mapped\",[99]],[[8494,8494],\"valid\",[],\"NV8\"],[[8495,8496],\"mapped\",[101]],[[8497,8497],\"mapped\",[102]],[[8498,8498],\"disallowed\"],[[8499,8499],\"mapped\",[109]],[[8500,8500],\"mapped\",[111]],[[8501,8501],\"mapped\",[1488]],[[8502,8502],\"mapped\",[1489]],[[8503,8503],\"mapped\",[1490]],[[8504,8504],\"mapped\",[1491]],[[8505,8505],\"mapped\",[105]],[[8506,8506],\"valid\",[],\"NV8\"],[[8507,8507],\"mapped\",[102,97,120]],[[8508,8508],\"mapped\",[960]],[[8509,8510],\"mapped\",[947]],[[8511,8511],\"mapped\",[960]],[[8512,8512],\"mapped\",[8721]],[[8513,8516],\"valid\",[],\"NV8\"],[[8517,8518],\"mapped\",[100]],[[8519,8519],\"mapped\",[101]],[[8520,8520],\"mapped\",[105]],[[8521,8521],\"mapped\",[106]],[[8522,8523],\"valid\",[],\"NV8\"],[[8524,8524],\"valid\",[],\"NV8\"],[[8525,8525],\"valid\",[],\"NV8\"],[[8526,8526],\"valid\"],[[8527,8527],\"valid\",[],\"NV8\"],[[8528,8528],\"mapped\",[49,8260,55]],[[8529,8529],\"mapped\",[49,8260,57]],[[8530,8530],\"mapped\",[49,8260,49,48]],[[8531,8531],\"mapped\",[49,8260,51]],[[8532,8532],\"mapped\",[50,8260,51]],[[8533,8533],\"mapped\",[49,8260,53]],[[8534,8534],\"mapped\",[50,8260,53]],[[8535,8535],\"mapped\",[51,8260,53]],[[8536,8536],\"mapped\",[52,8260,53]],[[8537,8537],\"mapped\",[49,8260,54]],[[8538,8538],\"mapped\",[53,8260,54]],[[8539,8539],\"mapped\",[49,8260,56]],[[8540,8540],\"mapped\",[51,8260,56]],[[8541,8541],\"mapped\",[53,8260,56]],[[8542,8542],\"mapped\",[55,8260,56]],[[8543,8543],\"mapped\",[49,8260]],[[8544,8544],\"mapped\",[105]],[[8545,8545],\"mapped\",[105,105]],[[8546,8546],\"mapped\",[105,105,105]],[[8547,8547],\"mapped\",[105,118]],[[8548,8548],\"mapped\",[118]],[[8549,8549],\"mapped\",[118,105]],[[8550,8550],\"mapped\",[118,105,105]],[[8551,8551],\"mapped\",[118,105,105,105]],[[8552,8552],\"mapped\",[105,120]],[[8553,8553],\"mapped\",[120]],[[8554,8554],\"mapped\",[120,105]],[[8555,8555],\"mapped\",[120,105,105]],[[8556,8556],\"mapped\",[108]],[[8557,8557],\"mapped\",[99]],[[8558,8558],\"mapped\",[100]],[[8559,8559],\"mapped\",[109]],[[8560,8560],\"mapped\",[105]],[[8561,8561],\"mapped\",[105,105]],[[8562,8562],\"mapped\",[105,105,105]],[[8563,8563],\"mapped\",[105,118]],[[8564,8564],\"mapped\",[118]],[[8565,8565],\"mapped\",[118,105]],[[8566,8566],\"mapped\",[118,105,105]],[[8567,8567],\"mapped\",[118,105,105,105]],[[8568,8568],\"mapped\",[105,120]],[[8569,8569],\"mapped\",[120]],[[8570,8570],\"mapped\",[120,105]],[[8571,8571],\"mapped\",[120,105,105]],[[8572,8572],\"mapped\",[108]],[[8573,8573],\"mapped\",[99]],[[8574,8574],\"mapped\",[100]],[[8575,8575],\"mapped\",[109]],[[8576,8578],\"valid\",[],\"NV8\"],[[8579,8579],\"disallowed\"],[[8580,8580],\"valid\"],[[8581,8584],\"valid\",[],\"NV8\"],[[8585,8585],\"mapped\",[48,8260,51]],[[8586,8587],\"valid\",[],\"NV8\"],[[8588,8591],\"disallowed\"],[[8592,8682],\"valid\",[],\"NV8\"],[[8683,8691],\"valid\",[],\"NV8\"],[[8692,8703],\"valid\",[],\"NV8\"],[[8704,8747],\"valid\",[],\"NV8\"],[[8748,8748],\"mapped\",[8747,8747]],[[8749,8749],\"mapped\",[8747,8747,8747]],[[8750,8750],\"valid\",[],\"NV8\"],[[8751,8751],\"mapped\",[8750,8750]],[[8752,8752],\"mapped\",[8750,8750,8750]],[[8753,8799],\"valid\",[],\"NV8\"],[[8800,8800],\"disallowed_STD3_valid\"],[[8801,8813],\"valid\",[],\"NV8\"],[[8814,8815],\"disallowed_STD3_valid\"],[[8816,8945],\"valid\",[],\"NV8\"],[[8946,8959],\"valid\",[],\"NV8\"],[[8960,8960],\"valid\",[],\"NV8\"],[[8961,8961],\"valid\",[],\"NV8\"],[[8962,9000],\"valid\",[],\"NV8\"],[[9001,9001],\"mapped\",[12296]],[[9002,9002],\"mapped\",[12297]],[[9003,9082],\"valid\",[],\"NV8\"],[[9083,9083],\"valid\",[],\"NV8\"],[[9084,9084],\"valid\",[],\"NV8\"],[[9085,9114],\"valid\",[],\"NV8\"],[[9115,9166],\"valid\",[],\"NV8\"],[[9167,9168],\"valid\",[],\"NV8\"],[[9169,9179],\"valid\",[],\"NV8\"],[[9180,9191],\"valid\",[],\"NV8\"],[[9192,9192],\"valid\",[],\"NV8\"],[[9193,9203],\"valid\",[],\"NV8\"],[[9204,9210],\"valid\",[],\"NV8\"],[[9211,9215],\"disallowed\"],[[9216,9252],\"valid\",[],\"NV8\"],[[9253,9254],\"valid\",[],\"NV8\"],[[9255,9279],\"disallowed\"],[[9280,9290],\"valid\",[],\"NV8\"],[[9291,9311],\"disallowed\"],[[9312,9312],\"mapped\",[49]],[[9313,9313],\"mapped\",[50]],[[9314,9314],\"mapped\",[51]],[[9315,9315],\"mapped\",[52]],[[9316,9316],\"mapped\",[53]],[[9317,9317],\"mapped\",[54]],[[9318,9318],\"mapped\",[55]],[[9319,9319],\"mapped\",[56]],[[9320,9320],\"mapped\",[57]],[[9321,9321],\"mapped\",[49,48]],[[9322,9322],\"mapped\",[49,49]],[[9323,9323],\"mapped\",[49,50]],[[9324,9324],\"mapped\",[49,51]],[[9325,9325],\"mapped\",[49,52]],[[9326,9326],\"mapped\",[49,53]],[[9327,9327],\"mapped\",[49,54]],[[9328,9328],\"mapped\",[49,55]],[[9329,9329],\"mapped\",[49,56]],[[9330,9330],\"mapped\",[49,57]],[[9331,9331],\"mapped\",[50,48]],[[9332,9332],\"disallowed_STD3_mapped\",[40,49,41]],[[9333,9333],\"disallowed_STD3_mapped\",[40,50,41]],[[9334,9334],\"disallowed_STD3_mapped\",[40,51,41]],[[9335,9335],\"disallowed_STD3_mapped\",[40,52,41]],[[9336,9336],\"disallowed_STD3_mapped\",[40,53,41]],[[9337,9337],\"disallowed_STD3_mapped\",[40,54,41]],[[9338,9338],\"disallowed_STD3_mapped\",[40,55,41]],[[9339,9339],\"disallowed_STD3_mapped\",[40,56,41]],[[9340,9340],\"disallowed_STD3_mapped\",[40,57,41]],[[9341,9341],\"disallowed_STD3_mapped\",[40,49,48,41]],[[9342,9342],\"disallowed_STD3_mapped\",[40,49,49,41]],[[9343,9343],\"disallowed_STD3_mapped\",[40,49,50,41]],[[9344,9344],\"disallowed_STD3_mapped\",[40,49,51,41]],[[9345,9345],\"disallowed_STD3_mapped\",[40,49,52,41]],[[9346,9346],\"disallowed_STD3_mapped\",[40,49,53,41]],[[9347,9347],\"disallowed_STD3_mapped\",[40,49,54,41]],[[9348,9348],\"disallowed_STD3_mapped\",[40,49,55,41]],[[9349,9349],\"disallowed_STD3_mapped\",[40,49,56,41]],[[9350,9350],\"disallowed_STD3_mapped\",[40,49,57,41]],[[9351,9351],\"disallowed_STD3_mapped\",[40,50,48,41]],[[9352,9371],\"disallowed\"],[[9372,9372],\"disallowed_STD3_mapped\",[40,97,41]],[[9373,9373],\"disallowed_STD3_mapped\",[40,98,41]],[[9374,9374],\"disallowed_STD3_mapped\",[40,99,41]],[[9375,9375],\"disallowed_STD3_mapped\",[40,100,41]],[[9376,9376],\"disallowed_STD3_mapped\",[40,101,41]],[[9377,9377],\"disallowed_STD3_mapped\",[40,102,41]],[[9378,9378],\"disallowed_STD3_mapped\",[40,103,41]],[[9379,9379],\"disallowed_STD3_mapped\",[40,104,41]],[[9380,9380],\"disallowed_STD3_mapped\",[40,105,41]],[[9381,9381],\"disallowed_STD3_mapped\",[40,106,41]],[[9382,9382],\"disallowed_STD3_mapped\",[40,107,41]],[[9383,9383],\"disallowed_STD3_mapped\",[40,108,41]],[[9384,9384],\"disallowed_STD3_mapped\",[40,109,41]],[[9385,9385],\"disallowed_STD3_mapped\",[40,110,41]],[[9386,9386],\"disallowed_STD3_mapped\",[40,111,41]],[[9387,9387],\"disallowed_STD3_mapped\",[40,112,41]],[[9388,9388],\"disallowed_STD3_mapped\",[40,113,41]],[[9389,9389],\"disallowed_STD3_mapped\",[40,114,41]],[[9390,9390],\"disallowed_STD3_mapped\",[40,115,41]],[[9391,9391],\"disallowed_STD3_mapped\",[40,116,41]],[[9392,9392],\"disallowed_STD3_mapped\",[40,117,41]],[[9393,9393],\"disallowed_STD3_mapped\",[40,118,41]],[[9394,9394],\"disallowed_STD3_mapped\",[40,119,41]],[[9395,9395],\"disallowed_STD3_mapped\",[40,120,41]],[[9396,9396],\"disallowed_STD3_mapped\",[40,121,41]],[[9397,9397],\"disallowed_STD3_mapped\",[40,122,41]],[[9398,9398],\"mapped\",[97]],[[9399,9399],\"mapped\",[98]],[[9400,9400],\"mapped\",[99]],[[9401,9401],\"mapped\",[100]],[[9402,9402],\"mapped\",[101]],[[9403,9403],\"mapped\",[102]],[[9404,9404],\"mapped\",[103]],[[9405,9405],\"mapped\",[104]],[[9406,9406],\"mapped\",[105]],[[9407,9407],\"mapped\",[106]],[[9408,9408],\"mapped\",[107]],[[9409,9409],\"mapped\",[108]],[[9410,9410],\"mapped\",[109]],[[9411,9411],\"mapped\",[110]],[[9412,9412],\"mapped\",[111]],[[9413,9413],\"mapped\",[112]],[[9414,9414],\"mapped\",[113]],[[9415,9415],\"mapped\",[114]],[[9416,9416],\"mapped\",[115]],[[9417,9417],\"mapped\",[116]],[[9418,9418],\"mapped\",[117]],[[9419,9419],\"mapped\",[118]],[[9420,9420],\"mapped\",[119]],[[9421,9421],\"mapped\",[120]],[[9422,9422],\"mapped\",[121]],[[9423,9423],\"mapped\",[122]],[[9424,9424],\"mapped\",[97]],[[9425,9425],\"mapped\",[98]],[[9426,9426],\"mapped\",[99]],[[9427,9427],\"mapped\",[100]],[[9428,9428],\"mapped\",[101]],[[9429,9429],\"mapped\",[102]],[[9430,9430],\"mapped\",[103]],[[9431,9431],\"mapped\",[104]],[[9432,9432],\"mapped\",[105]],[[9433,9433],\"mapped\",[106]],[[9434,9434],\"mapped\",[107]],[[9435,9435],\"mapped\",[108]],[[9436,9436],\"mapped\",[109]],[[9437,9437],\"mapped\",[110]],[[9438,9438],\"mapped\",[111]],[[9439,9439],\"mapped\",[112]],[[9440,9440],\"mapped\",[113]],[[9441,9441],\"mapped\",[114]],[[9442,9442],\"mapped\",[115]],[[9443,9443],\"mapped\",[116]],[[9444,9444],\"mapped\",[117]],[[9445,9445],\"mapped\",[118]],[[9446,9446],\"mapped\",[119]],[[9447,9447],\"mapped\",[120]],[[9448,9448],\"mapped\",[121]],[[9449,9449],\"mapped\",[122]],[[9450,9450],\"mapped\",[48]],[[9451,9470],\"valid\",[],\"NV8\"],[[9471,9471],\"valid\",[],\"NV8\"],[[9472,9621],\"valid\",[],\"NV8\"],[[9622,9631],\"valid\",[],\"NV8\"],[[9632,9711],\"valid\",[],\"NV8\"],[[9712,9719],\"valid\",[],\"NV8\"],[[9720,9727],\"valid\",[],\"NV8\"],[[9728,9747],\"valid\",[],\"NV8\"],[[9748,9749],\"valid\",[],\"NV8\"],[[9750,9751],\"valid\",[],\"NV8\"],[[9752,9752],\"valid\",[],\"NV8\"],[[9753,9753],\"valid\",[],\"NV8\"],[[9754,9839],\"valid\",[],\"NV8\"],[[9840,9841],\"valid\",[],\"NV8\"],[[9842,9853],\"valid\",[],\"NV8\"],[[9854,9855],\"valid\",[],\"NV8\"],[[9856,9865],\"valid\",[],\"NV8\"],[[9866,9873],\"valid\",[],\"NV8\"],[[9874,9884],\"valid\",[],\"NV8\"],[[9885,9885],\"valid\",[],\"NV8\"],[[9886,9887],\"valid\",[],\"NV8\"],[[9888,9889],\"valid\",[],\"NV8\"],[[9890,9905],\"valid\",[],\"NV8\"],[[9906,9906],\"valid\",[],\"NV8\"],[[9907,9916],\"valid\",[],\"NV8\"],[[9917,9919],\"valid\",[],\"NV8\"],[[9920,9923],\"valid\",[],\"NV8\"],[[9924,9933],\"valid\",[],\"NV8\"],[[9934,9934],\"valid\",[],\"NV8\"],[[9935,9953],\"valid\",[],\"NV8\"],[[9954,9954],\"valid\",[],\"NV8\"],[[9955,9955],\"valid\",[],\"NV8\"],[[9956,9959],\"valid\",[],\"NV8\"],[[9960,9983],\"valid\",[],\"NV8\"],[[9984,9984],\"valid\",[],\"NV8\"],[[9985,9988],\"valid\",[],\"NV8\"],[[9989,9989],\"valid\",[],\"NV8\"],[[9990,9993],\"valid\",[],\"NV8\"],[[9994,9995],\"valid\",[],\"NV8\"],[[9996,10023],\"valid\",[],\"NV8\"],[[10024,10024],\"valid\",[],\"NV8\"],[[10025,10059],\"valid\",[],\"NV8\"],[[10060,10060],\"valid\",[],\"NV8\"],[[10061,10061],\"valid\",[],\"NV8\"],[[10062,10062],\"valid\",[],\"NV8\"],[[10063,10066],\"valid\",[],\"NV8\"],[[10067,10069],\"valid\",[],\"NV8\"],[[10070,10070],\"valid\",[],\"NV8\"],[[10071,10071],\"valid\",[],\"NV8\"],[[10072,10078],\"valid\",[],\"NV8\"],[[10079,10080],\"valid\",[],\"NV8\"],[[10081,10087],\"valid\",[],\"NV8\"],[[10088,10101],\"valid\",[],\"NV8\"],[[10102,10132],\"valid\",[],\"NV8\"],[[10133,10135],\"valid\",[],\"NV8\"],[[10136,10159],\"valid\",[],\"NV8\"],[[10160,10160],\"valid\",[],\"NV8\"],[[10161,10174],\"valid\",[],\"NV8\"],[[10175,10175],\"valid\",[],\"NV8\"],[[10176,10182],\"valid\",[],\"NV8\"],[[10183,10186],\"valid\",[],\"NV8\"],[[10187,10187],\"valid\",[],\"NV8\"],[[10188,10188],\"valid\",[],\"NV8\"],[[10189,10189],\"valid\",[],\"NV8\"],[[10190,10191],\"valid\",[],\"NV8\"],[[10192,10219],\"valid\",[],\"NV8\"],[[10220,10223],\"valid\",[],\"NV8\"],[[10224,10239],\"valid\",[],\"NV8\"],[[10240,10495],\"valid\",[],\"NV8\"],[[10496,10763],\"valid\",[],\"NV8\"],[[10764,10764],\"mapped\",[8747,8747,8747,8747]],[[10765,10867],\"valid\",[],\"NV8\"],[[10868,10868],\"disallowed_STD3_mapped\",[58,58,61]],[[10869,10869],\"disallowed_STD3_mapped\",[61,61]],[[10870,10870],\"disallowed_STD3_mapped\",[61,61,61]],[[10871,10971],\"valid\",[],\"NV8\"],[[10972,10972],\"mapped\",[10973,824]],[[10973,11007],\"valid\",[],\"NV8\"],[[11008,11021],\"valid\",[],\"NV8\"],[[11022,11027],\"valid\",[],\"NV8\"],[[11028,11034],\"valid\",[],\"NV8\"],[[11035,11039],\"valid\",[],\"NV8\"],[[11040,11043],\"valid\",[],\"NV8\"],[[11044,11084],\"valid\",[],\"NV8\"],[[11085,11087],\"valid\",[],\"NV8\"],[[11088,11092],\"valid\",[],\"NV8\"],[[11093,11097],\"valid\",[],\"NV8\"],[[11098,11123],\"valid\",[],\"NV8\"],[[11124,11125],\"disallowed\"],[[11126,11157],\"valid\",[],\"NV8\"],[[11158,11159],\"disallowed\"],[[11160,11193],\"valid\",[],\"NV8\"],[[11194,11196],\"disallowed\"],[[11197,11208],\"valid\",[],\"NV8\"],[[11209,11209],\"disallowed\"],[[11210,11217],\"valid\",[],\"NV8\"],[[11218,11243],\"disallowed\"],[[11244,11247],\"valid\",[],\"NV8\"],[[11248,11263],\"disallowed\"],[[11264,11264],\"mapped\",[11312]],[[11265,11265],\"mapped\",[11313]],[[11266,11266],\"mapped\",[11314]],[[11267,11267],\"mapped\",[11315]],[[11268,11268],\"mapped\",[11316]],[[11269,11269],\"mapped\",[11317]],[[11270,11270],\"mapped\",[11318]],[[11271,11271],\"mapped\",[11319]],[[11272,11272],\"mapped\",[11320]],[[11273,11273],\"mapped\",[11321]],[[11274,11274],\"mapped\",[11322]],[[11275,11275],\"mapped\",[11323]],[[11276,11276],\"mapped\",[11324]],[[11277,11277],\"mapped\",[11325]],[[11278,11278],\"mapped\",[11326]],[[11279,11279],\"mapped\",[11327]],[[11280,11280],\"mapped\",[11328]],[[11281,11281],\"mapped\",[11329]],[[11282,11282],\"mapped\",[11330]],[[11283,11283],\"mapped\",[11331]],[[11284,11284],\"mapped\",[11332]],[[11285,11285],\"mapped\",[11333]],[[11286,11286],\"mapped\",[11334]],[[11287,11287],\"mapped\",[11335]],[[11288,11288],\"mapped\",[11336]],[[11289,11289],\"mapped\",[11337]],[[11290,11290],\"mapped\",[11338]],[[11291,11291],\"mapped\",[11339]],[[11292,11292],\"mapped\",[11340]],[[11293,11293],\"mapped\",[11341]],[[11294,11294],\"mapped\",[11342]],[[11295,11295],\"mapped\",[11343]],[[11296,11296],\"mapped\",[11344]],[[11297,11297],\"mapped\",[11345]],[[11298,11298],\"mapped\",[11346]],[[11299,11299],\"mapped\",[11347]],[[11300,11300],\"mapped\",[11348]],[[11301,11301],\"mapped\",[11349]],[[11302,11302],\"mapped\",[11350]],[[11303,11303],\"mapped\",[11351]],[[11304,11304],\"mapped\",[11352]],[[11305,11305],\"mapped\",[11353]],[[11306,11306],\"mapped\",[11354]],[[11307,11307],\"mapped\",[11355]],[[11308,11308],\"mapped\",[11356]],[[11309,11309],\"mapped\",[11357]],[[11310,11310],\"mapped\",[11358]],[[11311,11311],\"disallowed\"],[[11312,11358],\"valid\"],[[11359,11359],\"disallowed\"],[[11360,11360],\"mapped\",[11361]],[[11361,11361],\"valid\"],[[11362,11362],\"mapped\",[619]],[[11363,11363],\"mapped\",[7549]],[[11364,11364],\"mapped\",[637]],[[11365,11366],\"valid\"],[[11367,11367],\"mapped\",[11368]],[[11368,11368],\"valid\"],[[11369,11369],\"mapped\",[11370]],[[11370,11370],\"valid\"],[[11371,11371],\"mapped\",[11372]],[[11372,11372],\"valid\"],[[11373,11373],\"mapped\",[593]],[[11374,11374],\"mapped\",[625]],[[11375,11375],\"mapped\",[592]],[[11376,11376],\"mapped\",[594]],[[11377,11377],\"valid\"],[[11378,11378],\"mapped\",[11379]],[[11379,11379],\"valid\"],[[11380,11380],\"valid\"],[[11381,11381],\"mapped\",[11382]],[[11382,11383],\"valid\"],[[11384,11387],\"valid\"],[[11388,11388],\"mapped\",[106]],[[11389,11389],\"mapped\",[118]],[[11390,11390],\"mapped\",[575]],[[11391,11391],\"mapped\",[576]],[[11392,11392],\"mapped\",[11393]],[[11393,11393],\"valid\"],[[11394,11394],\"mapped\",[11395]],[[11395,11395],\"valid\"],[[11396,11396],\"mapped\",[11397]],[[11397,11397],\"valid\"],[[11398,11398],\"mapped\",[11399]],[[11399,11399],\"valid\"],[[11400,11400],\"mapped\",[11401]],[[11401,11401],\"valid\"],[[11402,11402],\"mapped\",[11403]],[[11403,11403],\"valid\"],[[11404,11404],\"mapped\",[11405]],[[11405,11405],\"valid\"],[[11406,11406],\"mapped\",[11407]],[[11407,11407],\"valid\"],[[11408,11408],\"mapped\",[11409]],[[11409,11409],\"valid\"],[[11410,11410],\"mapped\",[11411]],[[11411,11411],\"valid\"],[[11412,11412],\"mapped\",[11413]],[[11413,11413],\"valid\"],[[11414,11414],\"mapped\",[11415]],[[11415,11415],\"valid\"],[[11416,11416],\"mapped\",[11417]],[[11417,11417],\"valid\"],[[11418,11418],\"mapped\",[11419]],[[11419,11419],\"valid\"],[[11420,11420],\"mapped\",[11421]],[[11421,11421],\"valid\"],[[11422,11422],\"mapped\",[11423]],[[11423,11423],\"valid\"],[[11424,11424],\"mapped\",[11425]],[[11425,11425],\"valid\"],[[11426,11426],\"mapped\",[11427]],[[11427,11427],\"valid\"],[[11428,11428],\"mapped\",[11429]],[[11429,11429],\"valid\"],[[11430,11430],\"mapped\",[11431]],[[11431,11431],\"valid\"],[[11432,11432],\"mapped\",[11433]],[[11433,11433],\"valid\"],[[11434,11434],\"mapped\",[11435]],[[11435,11435],\"valid\"],[[11436,11436],\"mapped\",[11437]],[[11437,11437],\"valid\"],[[11438,11438],\"mapped\",[11439]],[[11439,11439],\"valid\"],[[11440,11440],\"mapped\",[11441]],[[11441,11441],\"valid\"],[[11442,11442],\"mapped\",[11443]],[[11443,11443],\"valid\"],[[11444,11444],\"mapped\",[11445]],[[11445,11445],\"valid\"],[[11446,11446],\"mapped\",[11447]],[[11447,11447],\"valid\"],[[11448,11448],\"mapped\",[11449]],[[11449,11449],\"valid\"],[[11450,11450],\"mapped\",[11451]],[[11451,11451],\"valid\"],[[11452,11452],\"mapped\",[11453]],[[11453,11453],\"valid\"],[[11454,11454],\"mapped\",[11455]],[[11455,11455],\"valid\"],[[11456,11456],\"mapped\",[11457]],[[11457,11457],\"valid\"],[[11458,11458],\"mapped\",[11459]],[[11459,11459],\"valid\"],[[11460,11460],\"mapped\",[11461]],[[11461,11461],\"valid\"],[[11462,11462],\"mapped\",[11463]],[[11463,11463],\"valid\"],[[11464,11464],\"mapped\",[11465]],[[11465,11465],\"valid\"],[[11466,11466],\"mapped\",[11467]],[[11467,11467],\"valid\"],[[11468,11468],\"mapped\",[11469]],[[11469,11469],\"valid\"],[[11470,11470],\"mapped\",[11471]],[[11471,11471],\"valid\"],[[11472,11472],\"mapped\",[11473]],[[11473,11473],\"valid\"],[[11474,11474],\"mapped\",[11475]],[[11475,11475],\"valid\"],[[11476,11476],\"mapped\",[11477]],[[11477,11477],\"valid\"],[[11478,11478],\"mapped\",[11479]],[[11479,11479],\"valid\"],[[11480,11480],\"mapped\",[11481]],[[11481,11481],\"valid\"],[[11482,11482],\"mapped\",[11483]],[[11483,11483],\"valid\"],[[11484,11484],\"mapped\",[11485]],[[11485,11485],\"valid\"],[[11486,11486],\"mapped\",[11487]],[[11487,11487],\"valid\"],[[11488,11488],\"mapped\",[11489]],[[11489,11489],\"valid\"],[[11490,11490],\"mapped\",[11491]],[[11491,11492],\"valid\"],[[11493,11498],\"valid\",[],\"NV8\"],[[11499,11499],\"mapped\",[11500]],[[11500,11500],\"valid\"],[[11501,11501],\"mapped\",[11502]],[[11502,11505],\"valid\"],[[11506,11506],\"mapped\",[11507]],[[11507,11507],\"valid\"],[[11508,11512],\"disallowed\"],[[11513,11519],\"valid\",[],\"NV8\"],[[11520,11557],\"valid\"],[[11558,11558],\"disallowed\"],[[11559,11559],\"valid\"],[[11560,11564],\"disallowed\"],[[11565,11565],\"valid\"],[[11566,11567],\"disallowed\"],[[11568,11621],\"valid\"],[[11622,11623],\"valid\"],[[11624,11630],\"disallowed\"],[[11631,11631],\"mapped\",[11617]],[[11632,11632],\"valid\",[],\"NV8\"],[[11633,11646],\"disallowed\"],[[11647,11647],\"valid\"],[[11648,11670],\"valid\"],[[11671,11679],\"disallowed\"],[[11680,11686],\"valid\"],[[11687,11687],\"disallowed\"],[[11688,11694],\"valid\"],[[11695,11695],\"disallowed\"],[[11696,11702],\"valid\"],[[11703,11703],\"disallowed\"],[[11704,11710],\"valid\"],[[11711,11711],\"disallowed\"],[[11712,11718],\"valid\"],[[11719,11719],\"disallowed\"],[[11720,11726],\"valid\"],[[11727,11727],\"disallowed\"],[[11728,11734],\"valid\"],[[11735,11735],\"disallowed\"],[[11736,11742],\"valid\"],[[11743,11743],\"disallowed\"],[[11744,11775],\"valid\"],[[11776,11799],\"valid\",[],\"NV8\"],[[11800,11803],\"valid\",[],\"NV8\"],[[11804,11805],\"valid\",[],\"NV8\"],[[11806,11822],\"valid\",[],\"NV8\"],[[11823,11823],\"valid\"],[[11824,11824],\"valid\",[],\"NV8\"],[[11825,11825],\"valid\",[],\"NV8\"],[[11826,11835],\"valid\",[],\"NV8\"],[[11836,11842],\"valid\",[],\"NV8\"],[[11843,11903],\"disallowed\"],[[11904,11929],\"valid\",[],\"NV8\"],[[11930,11930],\"disallowed\"],[[11931,11934],\"valid\",[],\"NV8\"],[[11935,11935],\"mapped\",[27597]],[[11936,12018],\"valid\",[],\"NV8\"],[[12019,12019],\"mapped\",[40863]],[[12020,12031],\"disallowed\"],[[12032,12032],\"mapped\",[19968]],[[12033,12033],\"mapped\",[20008]],[[12034,12034],\"mapped\",[20022]],[[12035,12035],\"mapped\",[20031]],[[12036,12036],\"mapped\",[20057]],[[12037,12037],\"mapped\",[20101]],[[12038,12038],\"mapped\",[20108]],[[12039,12039],\"mapped\",[20128]],[[12040,12040],\"mapped\",[20154]],[[12041,12041],\"mapped\",[20799]],[[12042,12042],\"mapped\",[20837]],[[12043,12043],\"mapped\",[20843]],[[12044,12044],\"mapped\",[20866]],[[12045,12045],\"mapped\",[20886]],[[12046,12046],\"mapped\",[20907]],[[12047,12047],\"mapped\",[20960]],[[12048,12048],\"mapped\",[20981]],[[12049,12049],\"mapped\",[20992]],[[12050,12050],\"mapped\",[21147]],[[12051,12051],\"mapped\",[21241]],[[12052,12052],\"mapped\",[21269]],[[12053,12053],\"mapped\",[21274]],[[12054,12054],\"mapped\",[21304]],[[12055,12055],\"mapped\",[21313]],[[12056,12056],\"mapped\",[21340]],[[12057,12057],\"mapped\",[21353]],[[12058,12058],\"mapped\",[21378]],[[12059,12059],\"mapped\",[21430]],[[12060,12060],\"mapped\",[21448]],[[12061,12061],\"mapped\",[21475]],[[12062,12062],\"mapped\",[22231]],[[12063,12063],\"mapped\",[22303]],[[12064,12064],\"mapped\",[22763]],[[12065,12065],\"mapped\",[22786]],[[12066,12066],\"mapped\",[22794]],[[12067,12067],\"mapped\",[22805]],[[12068,12068],\"mapped\",[22823]],[[12069,12069],\"mapped\",[22899]],[[12070,12070],\"mapped\",[23376]],[[12071,12071],\"mapped\",[23424]],[[12072,12072],\"mapped\",[23544]],[[12073,12073],\"mapped\",[23567]],[[12074,12074],\"mapped\",[23586]],[[12075,12075],\"mapped\",[23608]],[[12076,12076],\"mapped\",[23662]],[[12077,12077],\"mapped\",[23665]],[[12078,12078],\"mapped\",[24027]],[[12079,12079],\"mapped\",[24037]],[[12080,12080],\"mapped\",[24049]],[[12081,12081],\"mapped\",[24062]],[[12082,12082],\"mapped\",[24178]],[[12083,12083],\"mapped\",[24186]],[[12084,12084],\"mapped\",[24191]],[[12085,12085],\"mapped\",[24308]],[[12086,12086],\"mapped\",[24318]],[[12087,12087],\"mapped\",[24331]],[[12088,12088],\"mapped\",[24339]],[[12089,12089],\"mapped\",[24400]],[[12090,12090],\"mapped\",[24417]],[[12091,12091],\"mapped\",[24435]],[[12092,12092],\"mapped\",[24515]],[[12093,12093],\"mapped\",[25096]],[[12094,12094],\"mapped\",[25142]],[[12095,12095],\"mapped\",[25163]],[[12096,12096],\"mapped\",[25903]],[[12097,12097],\"mapped\",[25908]],[[12098,12098],\"mapped\",[25991]],[[12099,12099],\"mapped\",[26007]],[[12100,12100],\"mapped\",[26020]],[[12101,12101],\"mapped\",[26041]],[[12102,12102],\"mapped\",[26080]],[[12103,12103],\"mapped\",[26085]],[[12104,12104],\"mapped\",[26352]],[[12105,12105],\"mapped\",[26376]],[[12106,12106],\"mapped\",[26408]],[[12107,12107],\"mapped\",[27424]],[[12108,12108],\"mapped\",[27490]],[[12109,12109],\"mapped\",[27513]],[[12110,12110],\"mapped\",[27571]],[[12111,12111],\"mapped\",[27595]],[[12112,12112],\"mapped\",[27604]],[[12113,12113],\"mapped\",[27611]],[[12114,12114],\"mapped\",[27663]],[[12115,12115],\"mapped\",[27668]],[[12116,12116],\"mapped\",[27700]],[[12117,12117],\"mapped\",[28779]],[[12118,12118],\"mapped\",[29226]],[[12119,12119],\"mapped\",[29238]],[[12120,12120],\"mapped\",[29243]],[[12121,12121],\"mapped\",[29247]],[[12122,12122],\"mapped\",[29255]],[[12123,12123],\"mapped\",[29273]],[[12124,12124],\"mapped\",[29275]],[[12125,12125],\"mapped\",[29356]],[[12126,12126],\"mapped\",[29572]],[[12127,12127],\"mapped\",[29577]],[[12128,12128],\"mapped\",[29916]],[[12129,12129],\"mapped\",[29926]],[[12130,12130],\"mapped\",[29976]],[[12131,12131],\"mapped\",[29983]],[[12132,12132],\"mapped\",[29992]],[[12133,12133],\"mapped\",[30000]],[[12134,12134],\"mapped\",[30091]],[[12135,12135],\"mapped\",[30098]],[[12136,12136],\"mapped\",[30326]],[[12137,12137],\"mapped\",[30333]],[[12138,12138],\"mapped\",[30382]],[[12139,12139],\"mapped\",[30399]],[[12140,12140],\"mapped\",[30446]],[[12141,12141],\"mapped\",[30683]],[[12142,12142],\"mapped\",[30690]],[[12143,12143],\"mapped\",[30707]],[[12144,12144],\"mapped\",[31034]],[[12145,12145],\"mapped\",[31160]],[[12146,12146],\"mapped\",[31166]],[[12147,12147],\"mapped\",[31348]],[[12148,12148],\"mapped\",[31435]],[[12149,12149],\"mapped\",[31481]],[[12150,12150],\"mapped\",[31859]],[[12151,12151],\"mapped\",[31992]],[[12152,12152],\"mapped\",[32566]],[[12153,12153],\"mapped\",[32593]],[[12154,12154],\"mapped\",[32650]],[[12155,12155],\"mapped\",[32701]],[[12156,12156],\"mapped\",[32769]],[[12157,12157],\"mapped\",[32780]],[[12158,12158],\"mapped\",[32786]],[[12159,12159],\"mapped\",[32819]],[[12160,12160],\"mapped\",[32895]],[[12161,12161],\"mapped\",[32905]],[[12162,12162],\"mapped\",[33251]],[[12163,12163],\"mapped\",[33258]],[[12164,12164],\"mapped\",[33267]],[[12165,12165],\"mapped\",[33276]],[[12166,12166],\"mapped\",[33292]],[[12167,12167],\"mapped\",[33307]],[[12168,12168],\"mapped\",[33311]],[[12169,12169],\"mapped\",[33390]],[[12170,12170],\"mapped\",[33394]],[[12171,12171],\"mapped\",[33400]],[[12172,12172],\"mapped\",[34381]],[[12173,12173],\"mapped\",[34411]],[[12174,12174],\"mapped\",[34880]],[[12175,12175],\"mapped\",[34892]],[[12176,12176],\"mapped\",[34915]],[[12177,12177],\"mapped\",[35198]],[[12178,12178],\"mapped\",[35211]],[[12179,12179],\"mapped\",[35282]],[[12180,12180],\"mapped\",[35328]],[[12181,12181],\"mapped\",[35895]],[[12182,12182],\"mapped\",[35910]],[[12183,12183],\"mapped\",[35925]],[[12184,12184],\"mapped\",[35960]],[[12185,12185],\"mapped\",[35997]],[[12186,12186],\"mapped\",[36196]],[[12187,12187],\"mapped\",[36208]],[[12188,12188],\"mapped\",[36275]],[[12189,12189],\"mapped\",[36523]],[[12190,12190],\"mapped\",[36554]],[[12191,12191],\"mapped\",[36763]],[[12192,12192],\"mapped\",[36784]],[[12193,12193],\"mapped\",[36789]],[[12194,12194],\"mapped\",[37009]],[[12195,12195],\"mapped\",[37193]],[[12196,12196],\"mapped\",[37318]],[[12197,12197],\"mapped\",[37324]],[[12198,12198],\"mapped\",[37329]],[[12199,12199],\"mapped\",[38263]],[[12200,12200],\"mapped\",[38272]],[[12201,12201],\"mapped\",[38428]],[[12202,12202],\"mapped\",[38582]],[[12203,12203],\"mapped\",[38585]],[[12204,12204],\"mapped\",[38632]],[[12205,12205],\"mapped\",[38737]],[[12206,12206],\"mapped\",[38750]],[[12207,12207],\"mapped\",[38754]],[[12208,12208],\"mapped\",[38761]],[[12209,12209],\"mapped\",[38859]],[[12210,12210],\"mapped\",[38893]],[[12211,12211],\"mapped\",[38899]],[[12212,12212],\"mapped\",[38913]],[[12213,12213],\"mapped\",[39080]],[[12214,12214],\"mapped\",[39131]],[[12215,12215],\"mapped\",[39135]],[[12216,12216],\"mapped\",[39318]],[[12217,12217],\"mapped\",[39321]],[[12218,12218],\"mapped\",[39340]],[[12219,12219],\"mapped\",[39592]],[[12220,12220],\"mapped\",[39640]],[[12221,12221],\"mapped\",[39647]],[[12222,12222],\"mapped\",[39717]],[[12223,12223],\"mapped\",[39727]],[[12224,12224],\"mapped\",[39730]],[[12225,12225],\"mapped\",[39740]],[[12226,12226],\"mapped\",[39770]],[[12227,12227],\"mapped\",[40165]],[[12228,12228],\"mapped\",[40565]],[[12229,12229],\"mapped\",[40575]],[[12230,12230],\"mapped\",[40613]],[[12231,12231],\"mapped\",[40635]],[[12232,12232],\"mapped\",[40643]],[[12233,12233],\"mapped\",[40653]],[[12234,12234],\"mapped\",[40657]],[[12235,12235],\"mapped\",[40697]],[[12236,12236],\"mapped\",[40701]],[[12237,12237],\"mapped\",[40718]],[[12238,12238],\"mapped\",[40723]],[[12239,12239],\"mapped\",[40736]],[[12240,12240],\"mapped\",[40763]],[[12241,12241],\"mapped\",[40778]],[[12242,12242],\"mapped\",[40786]],[[12243,12243],\"mapped\",[40845]],[[12244,12244],\"mapped\",[40860]],[[12245,12245],\"mapped\",[40864]],[[12246,12271],\"disallowed\"],[[12272,12283],\"disallowed\"],[[12284,12287],\"disallowed\"],[[12288,12288],\"disallowed_STD3_mapped\",[32]],[[12289,12289],\"valid\",[],\"NV8\"],[[12290,12290],\"mapped\",[46]],[[12291,12292],\"valid\",[],\"NV8\"],[[12293,12295],\"valid\"],[[12296,12329],\"valid\",[],\"NV8\"],[[12330,12333],\"valid\"],[[12334,12341],\"valid\",[],\"NV8\"],[[12342,12342],\"mapped\",[12306]],[[12343,12343],\"valid\",[],\"NV8\"],[[12344,12344],\"mapped\",[21313]],[[12345,12345],\"mapped\",[21316]],[[12346,12346],\"mapped\",[21317]],[[12347,12347],\"valid\",[],\"NV8\"],[[12348,12348],\"valid\"],[[12349,12349],\"valid\",[],\"NV8\"],[[12350,12350],\"valid\",[],\"NV8\"],[[12351,12351],\"valid\",[],\"NV8\"],[[12352,12352],\"disallowed\"],[[12353,12436],\"valid\"],[[12437,12438],\"valid\"],[[12439,12440],\"disallowed\"],[[12441,12442],\"valid\"],[[12443,12443],\"disallowed_STD3_mapped\",[32,12441]],[[12444,12444],\"disallowed_STD3_mapped\",[32,12442]],[[12445,12446],\"valid\"],[[12447,12447],\"mapped\",[12424,12426]],[[12448,12448],\"valid\",[],\"NV8\"],[[12449,12542],\"valid\"],[[12543,12543],\"mapped\",[12467,12488]],[[12544,12548],\"disallowed\"],[[12549,12588],\"valid\"],[[12589,12589],\"valid\"],[[12590,12592],\"disallowed\"],[[12593,12593],\"mapped\",[4352]],[[12594,12594],\"mapped\",[4353]],[[12595,12595],\"mapped\",[4522]],[[12596,12596],\"mapped\",[4354]],[[12597,12597],\"mapped\",[4524]],[[12598,12598],\"mapped\",[4525]],[[12599,12599],\"mapped\",[4355]],[[12600,12600],\"mapped\",[4356]],[[12601,12601],\"mapped\",[4357]],[[12602,12602],\"mapped\",[4528]],[[12603,12603],\"mapped\",[4529]],[[12604,12604],\"mapped\",[4530]],[[12605,12605],\"mapped\",[4531]],[[12606,12606],\"mapped\",[4532]],[[12607,12607],\"mapped\",[4533]],[[12608,12608],\"mapped\",[4378]],[[12609,12609],\"mapped\",[4358]],[[12610,12610],\"mapped\",[4359]],[[12611,12611],\"mapped\",[4360]],[[12612,12612],\"mapped\",[4385]],[[12613,12613],\"mapped\",[4361]],[[12614,12614],\"mapped\",[4362]],[[12615,12615],\"mapped\",[4363]],[[12616,12616],\"mapped\",[4364]],[[12617,12617],\"mapped\",[4365]],[[12618,12618],\"mapped\",[4366]],[[12619,12619],\"mapped\",[4367]],[[12620,12620],\"mapped\",[4368]],[[12621,12621],\"mapped\",[4369]],[[12622,12622],\"mapped\",[4370]],[[12623,12623],\"mapped\",[4449]],[[12624,12624],\"mapped\",[4450]],[[12625,12625],\"mapped\",[4451]],[[12626,12626],\"mapped\",[4452]],[[12627,12627],\"mapped\",[4453]],[[12628,12628],\"mapped\",[4454]],[[12629,12629],\"mapped\",[4455]],[[12630,12630],\"mapped\",[4456]],[[12631,12631],\"mapped\",[4457]],[[12632,12632],\"mapped\",[4458]],[[12633,12633],\"mapped\",[4459]],[[12634,12634],\"mapped\",[4460]],[[12635,12635],\"mapped\",[4461]],[[12636,12636],\"mapped\",[4462]],[[12637,12637],\"mapped\",[4463]],[[12638,12638],\"mapped\",[4464]],[[12639,12639],\"mapped\",[4465]],[[12640,12640],\"mapped\",[4466]],[[12641,12641],\"mapped\",[4467]],[[12642,12642],\"mapped\",[4468]],[[12643,12643],\"mapped\",[4469]],[[12644,12644],\"disallowed\"],[[12645,12645],\"mapped\",[4372]],[[12646,12646],\"mapped\",[4373]],[[12647,12647],\"mapped\",[4551]],[[12648,12648],\"mapped\",[4552]],[[12649,12649],\"mapped\",[4556]],[[12650,12650],\"mapped\",[4558]],[[12651,12651],\"mapped\",[4563]],[[12652,12652],\"mapped\",[4567]],[[12653,12653],\"mapped\",[4569]],[[12654,12654],\"mapped\",[4380]],[[12655,12655],\"mapped\",[4573]],[[12656,12656],\"mapped\",[4575]],[[12657,12657],\"mapped\",[4381]],[[12658,12658],\"mapped\",[4382]],[[12659,12659],\"mapped\",[4384]],[[12660,12660],\"mapped\",[4386]],[[12661,12661],\"mapped\",[4387]],[[12662,12662],\"mapped\",[4391]],[[12663,12663],\"mapped\",[4393]],[[12664,12664],\"mapped\",[4395]],[[12665,12665],\"mapped\",[4396]],[[12666,12666],\"mapped\",[4397]],[[12667,12667],\"mapped\",[4398]],[[12668,12668],\"mapped\",[4399]],[[12669,12669],\"mapped\",[4402]],[[12670,12670],\"mapped\",[4406]],[[12671,12671],\"mapped\",[4416]],[[12672,12672],\"mapped\",[4423]],[[12673,12673],\"mapped\",[4428]],[[12674,12674],\"mapped\",[4593]],[[12675,12675],\"mapped\",[4594]],[[12676,12676],\"mapped\",[4439]],[[12677,12677],\"mapped\",[4440]],[[12678,12678],\"mapped\",[4441]],[[12679,12679],\"mapped\",[4484]],[[12680,12680],\"mapped\",[4485]],[[12681,12681],\"mapped\",[4488]],[[12682,12682],\"mapped\",[4497]],[[12683,12683],\"mapped\",[4498]],[[12684,12684],\"mapped\",[4500]],[[12685,12685],\"mapped\",[4510]],[[12686,12686],\"mapped\",[4513]],[[12687,12687],\"disallowed\"],[[12688,12689],\"valid\",[],\"NV8\"],[[12690,12690],\"mapped\",[19968]],[[12691,12691],\"mapped\",[20108]],[[12692,12692],\"mapped\",[19977]],[[12693,12693],\"mapped\",[22235]],[[12694,12694],\"mapped\",[19978]],[[12695,12695],\"mapped\",[20013]],[[12696,12696],\"mapped\",[19979]],[[12697,12697],\"mapped\",[30002]],[[12698,12698],\"mapped\",[20057]],[[12699,12699],\"mapped\",[19993]],[[12700,12700],\"mapped\",[19969]],[[12701,12701],\"mapped\",[22825]],[[12702,12702],\"mapped\",[22320]],[[12703,12703],\"mapped\",[20154]],[[12704,12727],\"valid\"],[[12728,12730],\"valid\"],[[12731,12735],\"disallowed\"],[[12736,12751],\"valid\",[],\"NV8\"],[[12752,12771],\"valid\",[],\"NV8\"],[[12772,12783],\"disallowed\"],[[12784,12799],\"valid\"],[[12800,12800],\"disallowed_STD3_mapped\",[40,4352,41]],[[12801,12801],\"disallowed_STD3_mapped\",[40,4354,41]],[[12802,12802],\"disallowed_STD3_mapped\",[40,4355,41]],[[12803,12803],\"disallowed_STD3_mapped\",[40,4357,41]],[[12804,12804],\"disallowed_STD3_mapped\",[40,4358,41]],[[12805,12805],\"disallowed_STD3_mapped\",[40,4359,41]],[[12806,12806],\"disallowed_STD3_mapped\",[40,4361,41]],[[12807,12807],\"disallowed_STD3_mapped\",[40,4363,41]],[[12808,12808],\"disallowed_STD3_mapped\",[40,4364,41]],[[12809,12809],\"disallowed_STD3_mapped\",[40,4366,41]],[[12810,12810],\"disallowed_STD3_mapped\",[40,4367,41]],[[12811,12811],\"disallowed_STD3_mapped\",[40,4368,41]],[[12812,12812],\"disallowed_STD3_mapped\",[40,4369,41]],[[12813,12813],\"disallowed_STD3_mapped\",[40,4370,41]],[[12814,12814],\"disallowed_STD3_mapped\",[40,44032,41]],[[12815,12815],\"disallowed_STD3_mapped\",[40,45208,41]],[[12816,12816],\"disallowed_STD3_mapped\",[40,45796,41]],[[12817,12817],\"disallowed_STD3_mapped\",[40,46972,41]],[[12818,12818],\"disallowed_STD3_mapped\",[40,47560,41]],[[12819,12819],\"disallowed_STD3_mapped\",[40,48148,41]],[[12820,12820],\"disallowed_STD3_mapped\",[40,49324,41]],[[12821,12821],\"disallowed_STD3_mapped\",[40,50500,41]],[[12822,12822],\"disallowed_STD3_mapped\",[40,51088,41]],[[12823,12823],\"disallowed_STD3_mapped\",[40,52264,41]],[[12824,12824],\"disallowed_STD3_mapped\",[40,52852,41]],[[12825,12825],\"disallowed_STD3_mapped\",[40,53440,41]],[[12826,12826],\"disallowed_STD3_mapped\",[40,54028,41]],[[12827,12827],\"disallowed_STD3_mapped\",[40,54616,41]],[[12828,12828],\"disallowed_STD3_mapped\",[40,51452,41]],[[12829,12829],\"disallowed_STD3_mapped\",[40,50724,51204,41]],[[12830,12830],\"disallowed_STD3_mapped\",[40,50724,54980,41]],[[12831,12831],\"disallowed\"],[[12832,12832],\"disallowed_STD3_mapped\",[40,19968,41]],[[12833,12833],\"disallowed_STD3_mapped\",[40,20108,41]],[[12834,12834],\"disallowed_STD3_mapped\",[40,19977,41]],[[12835,12835],\"disallowed_STD3_mapped\",[40,22235,41]],[[12836,12836],\"disallowed_STD3_mapped\",[40,20116,41]],[[12837,12837],\"disallowed_STD3_mapped\",[40,20845,41]],[[12838,12838],\"disallowed_STD3_mapped\",[40,19971,41]],[[12839,12839],\"disallowed_STD3_mapped\",[40,20843,41]],[[12840,12840],\"disallowed_STD3_mapped\",[40,20061,41]],[[12841,12841],\"disallowed_STD3_mapped\",[40,21313,41]],[[12842,12842],\"disallowed_STD3_mapped\",[40,26376,41]],[[12843,12843],\"disallowed_STD3_mapped\",[40,28779,41]],[[12844,12844],\"disallowed_STD3_mapped\",[40,27700,41]],[[12845,12845],\"disallowed_STD3_mapped\",[40,26408,41]],[[12846,12846],\"disallowed_STD3_mapped\",[40,37329,41]],[[12847,12847],\"disallowed_STD3_mapped\",[40,22303,41]],[[12848,12848],\"disallowed_STD3_mapped\",[40,26085,41]],[[12849,12849],\"disallowed_STD3_mapped\",[40,26666,41]],[[12850,12850],\"disallowed_STD3_mapped\",[40,26377,41]],[[12851,12851],\"disallowed_STD3_mapped\",[40,31038,41]],[[12852,12852],\"disallowed_STD3_mapped\",[40,21517,41]],[[12853,12853],\"disallowed_STD3_mapped\",[40,29305,41]],[[12854,12854],\"disallowed_STD3_mapped\",[40,36001,41]],[[12855,12855],\"disallowed_STD3_mapped\",[40,31069,41]],[[12856,12856],\"disallowed_STD3_mapped\",[40,21172,41]],[[12857,12857],\"disallowed_STD3_mapped\",[40,20195,41]],[[12858,12858],\"disallowed_STD3_mapped\",[40,21628,41]],[[12859,12859],\"disallowed_STD3_mapped\",[40,23398,41]],[[12860,12860],\"disallowed_STD3_mapped\",[40,30435,41]],[[12861,12861],\"disallowed_STD3_mapped\",[40,20225,41]],[[12862,12862],\"disallowed_STD3_mapped\",[40,36039,41]],[[12863,12863],\"disallowed_STD3_mapped\",[40,21332,41]],[[12864,12864],\"disallowed_STD3_mapped\",[40,31085,41]],[[12865,12865],\"disallowed_STD3_mapped\",[40,20241,41]],[[12866,12866],\"disallowed_STD3_mapped\",[40,33258,41]],[[12867,12867],\"disallowed_STD3_mapped\",[40,33267,41]],[[12868,12868],\"mapped\",[21839]],[[12869,12869],\"mapped\",[24188]],[[12870,12870],\"mapped\",[25991]],[[12871,12871],\"mapped\",[31631]],[[12872,12879],\"valid\",[],\"NV8\"],[[12880,12880],\"mapped\",[112,116,101]],[[12881,12881],\"mapped\",[50,49]],[[12882,12882],\"mapped\",[50,50]],[[12883,12883],\"mapped\",[50,51]],[[12884,12884],\"mapped\",[50,52]],[[12885,12885],\"mapped\",[50,53]],[[12886,12886],\"mapped\",[50,54]],[[12887,12887],\"mapped\",[50,55]],[[12888,12888],\"mapped\",[50,56]],[[12889,12889],\"mapped\",[50,57]],[[12890,12890],\"mapped\",[51,48]],[[12891,12891],\"mapped\",[51,49]],[[12892,12892],\"mapped\",[51,50]],[[12893,12893],\"mapped\",[51,51]],[[12894,12894],\"mapped\",[51,52]],[[12895,12895],\"mapped\",[51,53]],[[12896,12896],\"mapped\",[4352]],[[12897,12897],\"mapped\",[4354]],[[12898,12898],\"mapped\",[4355]],[[12899,12899],\"mapped\",[4357]],[[12900,12900],\"mapped\",[4358]],[[12901,12901],\"mapped\",[4359]],[[12902,12902],\"mapped\",[4361]],[[12903,12903],\"mapped\",[4363]],[[12904,12904],\"mapped\",[4364]],[[12905,12905],\"mapped\",[4366]],[[12906,12906],\"mapped\",[4367]],[[12907,12907],\"mapped\",[4368]],[[12908,12908],\"mapped\",[4369]],[[12909,12909],\"mapped\",[4370]],[[12910,12910],\"mapped\",[44032]],[[12911,12911],\"mapped\",[45208]],[[12912,12912],\"mapped\",[45796]],[[12913,12913],\"mapped\",[46972]],[[12914,12914],\"mapped\",[47560]],[[12915,12915],\"mapped\",[48148]],[[12916,12916],\"mapped\",[49324]],[[12917,12917],\"mapped\",[50500]],[[12918,12918],\"mapped\",[51088]],[[12919,12919],\"mapped\",[52264]],[[12920,12920],\"mapped\",[52852]],[[12921,12921],\"mapped\",[53440]],[[12922,12922],\"mapped\",[54028]],[[12923,12923],\"mapped\",[54616]],[[12924,12924],\"mapped\",[52280,44256]],[[12925,12925],\"mapped\",[51452,51032]],[[12926,12926],\"mapped\",[50864]],[[12927,12927],\"valid\",[],\"NV8\"],[[12928,12928],\"mapped\",[19968]],[[12929,12929],\"mapped\",[20108]],[[12930,12930],\"mapped\",[19977]],[[12931,12931],\"mapped\",[22235]],[[12932,12932],\"mapped\",[20116]],[[12933,12933],\"mapped\",[20845]],[[12934,12934],\"mapped\",[19971]],[[12935,12935],\"mapped\",[20843]],[[12936,12936],\"mapped\",[20061]],[[12937,12937],\"mapped\",[21313]],[[12938,12938],\"mapped\",[26376]],[[12939,12939],\"mapped\",[28779]],[[12940,12940],\"mapped\",[27700]],[[12941,12941],\"mapped\",[26408]],[[12942,12942],\"mapped\",[37329]],[[12943,12943],\"mapped\",[22303]],[[12944,12944],\"mapped\",[26085]],[[12945,12945],\"mapped\",[26666]],[[12946,12946],\"mapped\",[26377]],[[12947,12947],\"mapped\",[31038]],[[12948,12948],\"mapped\",[21517]],[[12949,12949],\"mapped\",[29305]],[[12950,12950],\"mapped\",[36001]],[[12951,12951],\"mapped\",[31069]],[[12952,12952],\"mapped\",[21172]],[[12953,12953],\"mapped\",[31192]],[[12954,12954],\"mapped\",[30007]],[[12955,12955],\"mapped\",[22899]],[[12956,12956],\"mapped\",[36969]],[[12957,12957],\"mapped\",[20778]],[[12958,12958],\"mapped\",[21360]],[[12959,12959],\"mapped\",[27880]],[[12960,12960],\"mapped\",[38917]],[[12961,12961],\"mapped\",[20241]],[[12962,12962],\"mapped\",[20889]],[[12963,12963],\"mapped\",[27491]],[[12964,12964],\"mapped\",[19978]],[[12965,12965],\"mapped\",[20013]],[[12966,12966],\"mapped\",[19979]],[[12967,12967],\"mapped\",[24038]],[[12968,12968],\"mapped\",[21491]],[[12969,12969],\"mapped\",[21307]],[[12970,12970],\"mapped\",[23447]],[[12971,12971],\"mapped\",[23398]],[[12972,12972],\"mapped\",[30435]],[[12973,12973],\"mapped\",[20225]],[[12974,12974],\"mapped\",[36039]],[[12975,12975],\"mapped\",[21332]],[[12976,12976],\"mapped\",[22812]],[[12977,12977],\"mapped\",[51,54]],[[12978,12978],\"mapped\",[51,55]],[[12979,12979],\"mapped\",[51,56]],[[12980,12980],\"mapped\",[51,57]],[[12981,12981],\"mapped\",[52,48]],[[12982,12982],\"mapped\",[52,49]],[[12983,12983],\"mapped\",[52,50]],[[12984,12984],\"mapped\",[52,51]],[[12985,12985],\"mapped\",[52,52]],[[12986,12986],\"mapped\",[52,53]],[[12987,12987],\"mapped\",[52,54]],[[12988,12988],\"mapped\",[52,55]],[[12989,12989],\"mapped\",[52,56]],[[12990,12990],\"mapped\",[52,57]],[[12991,12991],\"mapped\",[53,48]],[[12992,12992],\"mapped\",[49,26376]],[[12993,12993],\"mapped\",[50,26376]],[[12994,12994],\"mapped\",[51,26376]],[[12995,12995],\"mapped\",[52,26376]],[[12996,12996],\"mapped\",[53,26376]],[[12997,12997],\"mapped\",[54,26376]],[[12998,12998],\"mapped\",[55,26376]],[[12999,12999],\"mapped\",[56,26376]],[[13000,13000],\"mapped\",[57,26376]],[[13001,13001],\"mapped\",[49,48,26376]],[[13002,13002],\"mapped\",[49,49,26376]],[[13003,13003],\"mapped\",[49,50,26376]],[[13004,13004],\"mapped\",[104,103]],[[13005,13005],\"mapped\",[101,114,103]],[[13006,13006],\"mapped\",[101,118]],[[13007,13007],\"mapped\",[108,116,100]],[[13008,13008],\"mapped\",[12450]],[[13009,13009],\"mapped\",[12452]],[[13010,13010],\"mapped\",[12454]],[[13011,13011],\"mapped\",[12456]],[[13012,13012],\"mapped\",[12458]],[[13013,13013],\"mapped\",[12459]],[[13014,13014],\"mapped\",[12461]],[[13015,13015],\"mapped\",[12463]],[[13016,13016],\"mapped\",[12465]],[[13017,13017],\"mapped\",[12467]],[[13018,13018],\"mapped\",[12469]],[[13019,13019],\"mapped\",[12471]],[[13020,13020],\"mapped\",[12473]],[[13021,13021],\"mapped\",[12475]],[[13022,13022],\"mapped\",[12477]],[[13023,13023],\"mapped\",[12479]],[[13024,13024],\"mapped\",[12481]],[[13025,13025],\"mapped\",[12484]],[[13026,13026],\"mapped\",[12486]],[[13027,13027],\"mapped\",[12488]],[[13028,13028],\"mapped\",[12490]],[[13029,13029],\"mapped\",[12491]],[[13030,13030],\"mapped\",[12492]],[[13031,13031],\"mapped\",[12493]],[[13032,13032],\"mapped\",[12494]],[[13033,13033],\"mapped\",[12495]],[[13034,13034],\"mapped\",[12498]],[[13035,13035],\"mapped\",[12501]],[[13036,13036],\"mapped\",[12504]],[[13037,13037],\"mapped\",[12507]],[[13038,13038],\"mapped\",[12510]],[[13039,13039],\"mapped\",[12511]],[[13040,13040],\"mapped\",[12512]],[[13041,13041],\"mapped\",[12513]],[[13042,13042],\"mapped\",[12514]],[[13043,13043],\"mapped\",[12516]],[[13044,13044],\"mapped\",[12518]],[[13045,13045],\"mapped\",[12520]],[[13046,13046],\"mapped\",[12521]],[[13047,13047],\"mapped\",[12522]],[[13048,13048],\"mapped\",[12523]],[[13049,13049],\"mapped\",[12524]],[[13050,13050],\"mapped\",[12525]],[[13051,13051],\"mapped\",[12527]],[[13052,13052],\"mapped\",[12528]],[[13053,13053],\"mapped\",[12529]],[[13054,13054],\"mapped\",[12530]],[[13055,13055],\"disallowed\"],[[13056,13056],\"mapped\",[12450,12497,12540,12488]],[[13057,13057],\"mapped\",[12450,12523,12501,12449]],[[13058,13058],\"mapped\",[12450,12531,12506,12450]],[[13059,13059],\"mapped\",[12450,12540,12523]],[[13060,13060],\"mapped\",[12452,12491,12531,12464]],[[13061,13061],\"mapped\",[12452,12531,12481]],[[13062,13062],\"mapped\",[12454,12457,12531]],[[13063,13063],\"mapped\",[12456,12473,12463,12540,12489]],[[13064,13064],\"mapped\",[12456,12540,12459,12540]],[[13065,13065],\"mapped\",[12458,12531,12473]],[[13066,13066],\"mapped\",[12458,12540,12512]],[[13067,13067],\"mapped\",[12459,12452,12522]],[[13068,13068],\"mapped\",[12459,12521,12483,12488]],[[13069,13069],\"mapped\",[12459,12525,12522,12540]],[[13070,13070],\"mapped\",[12460,12525,12531]],[[13071,13071],\"mapped\",[12460,12531,12510]],[[13072,13072],\"mapped\",[12462,12460]],[[13073,13073],\"mapped\",[12462,12491,12540]],[[13074,13074],\"mapped\",[12461,12517,12522,12540]],[[13075,13075],\"mapped\",[12462,12523,12480,12540]],[[13076,13076],\"mapped\",[12461,12525]],[[13077,13077],\"mapped\",[12461,12525,12464,12521,12512]],[[13078,13078],\"mapped\",[12461,12525,12513,12540,12488,12523]],[[13079,13079],\"mapped\",[12461,12525,12527,12483,12488]],[[13080,13080],\"mapped\",[12464,12521,12512]],[[13081,13081],\"mapped\",[12464,12521,12512,12488,12531]],[[13082,13082],\"mapped\",[12463,12523,12476,12452,12525]],[[13083,13083],\"mapped\",[12463,12525,12540,12493]],[[13084,13084],\"mapped\",[12465,12540,12473]],[[13085,13085],\"mapped\",[12467,12523,12490]],[[13086,13086],\"mapped\",[12467,12540,12509]],[[13087,13087],\"mapped\",[12469,12452,12463,12523]],[[13088,13088],\"mapped\",[12469,12531,12481,12540,12512]],[[13089,13089],\"mapped\",[12471,12522,12531,12464]],[[13090,13090],\"mapped\",[12475,12531,12481]],[[13091,13091],\"mapped\",[12475,12531,12488]],[[13092,13092],\"mapped\",[12480,12540,12473]],[[13093,13093],\"mapped\",[12487,12471]],[[13094,13094],\"mapped\",[12489,12523]],[[13095,13095],\"mapped\",[12488,12531]],[[13096,13096],\"mapped\",[12490,12494]],[[13097,13097],\"mapped\",[12494,12483,12488]],[[13098,13098],\"mapped\",[12495,12452,12484]],[[13099,13099],\"mapped\",[12497,12540,12475,12531,12488]],[[13100,13100],\"mapped\",[12497,12540,12484]],[[13101,13101],\"mapped\",[12496,12540,12524,12523]],[[13102,13102],\"mapped\",[12500,12450,12473,12488,12523]],[[13103,13103],\"mapped\",[12500,12463,12523]],[[13104,13104],\"mapped\",[12500,12467]],[[13105,13105],\"mapped\",[12499,12523]],[[13106,13106],\"mapped\",[12501,12449,12521,12483,12489]],[[13107,13107],\"mapped\",[12501,12451,12540,12488]],[[13108,13108],\"mapped\",[12502,12483,12471,12455,12523]],[[13109,13109],\"mapped\",[12501,12521,12531]],[[13110,13110],\"mapped\",[12504,12463,12479,12540,12523]],[[13111,13111],\"mapped\",[12506,12477]],[[13112,13112],\"mapped\",[12506,12491,12498]],[[13113,13113],\"mapped\",[12504,12523,12484]],[[13114,13114],\"mapped\",[12506,12531,12473]],[[13115,13115],\"mapped\",[12506,12540,12472]],[[13116,13116],\"mapped\",[12505,12540,12479]],[[13117,13117],\"mapped\",[12509,12452,12531,12488]],[[13118,13118],\"mapped\",[12508,12523,12488]],[[13119,13119],\"mapped\",[12507,12531]],[[13120,13120],\"mapped\",[12509,12531,12489]],[[13121,13121],\"mapped\",[12507,12540,12523]],[[13122,13122],\"mapped\",[12507,12540,12531]],[[13123,13123],\"mapped\",[12510,12452,12463,12525]],[[13124,13124],\"mapped\",[12510,12452,12523]],[[13125,13125],\"mapped\",[12510,12483,12495]],[[13126,13126],\"mapped\",[12510,12523,12463]],[[13127,13127],\"mapped\",[12510,12531,12471,12519,12531]],[[13128,13128],\"mapped\",[12511,12463,12525,12531]],[[13129,13129],\"mapped\",[12511,12522]],[[13130,13130],\"mapped\",[12511,12522,12496,12540,12523]],[[13131,13131],\"mapped\",[12513,12460]],[[13132,13132],\"mapped\",[12513,12460,12488,12531]],[[13133,13133],\"mapped\",[12513,12540,12488,12523]],[[13134,13134],\"mapped\",[12516,12540,12489]],[[13135,13135],\"mapped\",[12516,12540,12523]],[[13136,13136],\"mapped\",[12518,12450,12531]],[[13137,13137],\"mapped\",[12522,12483,12488,12523]],[[13138,13138],\"mapped\",[12522,12521]],[[13139,13139],\"mapped\",[12523,12500,12540]],[[13140,13140],\"mapped\",[12523,12540,12502,12523]],[[13141,13141],\"mapped\",[12524,12512]],[[13142,13142],\"mapped\",[12524,12531,12488,12466,12531]],[[13143,13143],\"mapped\",[12527,12483,12488]],[[13144,13144],\"mapped\",[48,28857]],[[13145,13145],\"mapped\",[49,28857]],[[13146,13146],\"mapped\",[50,28857]],[[13147,13147],\"mapped\",[51,28857]],[[13148,13148],\"mapped\",[52,28857]],[[13149,13149],\"mapped\",[53,28857]],[[13150,13150],\"mapped\",[54,28857]],[[13151,13151],\"mapped\",[55,28857]],[[13152,13152],\"mapped\",[56,28857]],[[13153,13153],\"mapped\",[57,28857]],[[13154,13154],\"mapped\",[49,48,28857]],[[13155,13155],\"mapped\",[49,49,28857]],[[13156,13156],\"mapped\",[49,50,28857]],[[13157,13157],\"mapped\",[49,51,28857]],[[13158,13158],\"mapped\",[49,52,28857]],[[13159,13159],\"mapped\",[49,53,28857]],[[13160,13160],\"mapped\",[49,54,28857]],[[13161,13161],\"mapped\",[49,55,28857]],[[13162,13162],\"mapped\",[49,56,28857]],[[13163,13163],\"mapped\",[49,57,28857]],[[13164,13164],\"mapped\",[50,48,28857]],[[13165,13165],\"mapped\",[50,49,28857]],[[13166,13166],\"mapped\",[50,50,28857]],[[13167,13167],\"mapped\",[50,51,28857]],[[13168,13168],\"mapped\",[50,52,28857]],[[13169,13169],\"mapped\",[104,112,97]],[[13170,13170],\"mapped\",[100,97]],[[13171,13171],\"mapped\",[97,117]],[[13172,13172],\"mapped\",[98,97,114]],[[13173,13173],\"mapped\",[111,118]],[[13174,13174],\"mapped\",[112,99]],[[13175,13175],\"mapped\",[100,109]],[[13176,13176],\"mapped\",[100,109,50]],[[13177,13177],\"mapped\",[100,109,51]],[[13178,13178],\"mapped\",[105,117]],[[13179,13179],\"mapped\",[24179,25104]],[[13180,13180],\"mapped\",[26157,21644]],[[13181,13181],\"mapped\",[22823,27491]],[[13182,13182],\"mapped\",[26126,27835]],[[13183,13183],\"mapped\",[26666,24335,20250,31038]],[[13184,13184],\"mapped\",[112,97]],[[13185,13185],\"mapped\",[110,97]],[[13186,13186],\"mapped\",[956,97]],[[13187,13187],\"mapped\",[109,97]],[[13188,13188],\"mapped\",[107,97]],[[13189,13189],\"mapped\",[107,98]],[[13190,13190],\"mapped\",[109,98]],[[13191,13191],\"mapped\",[103,98]],[[13192,13192],\"mapped\",[99,97,108]],[[13193,13193],\"mapped\",[107,99,97,108]],[[13194,13194],\"mapped\",[112,102]],[[13195,13195],\"mapped\",[110,102]],[[13196,13196],\"mapped\",[956,102]],[[13197,13197],\"mapped\",[956,103]],[[13198,13198],\"mapped\",[109,103]],[[13199,13199],\"mapped\",[107,103]],[[13200,13200],\"mapped\",[104,122]],[[13201,13201],\"mapped\",[107,104,122]],[[13202,13202],\"mapped\",[109,104,122]],[[13203,13203],\"mapped\",[103,104,122]],[[13204,13204],\"mapped\",[116,104,122]],[[13205,13205],\"mapped\",[956,108]],[[13206,13206],\"mapped\",[109,108]],[[13207,13207],\"mapped\",[100,108]],[[13208,13208],\"mapped\",[107,108]],[[13209,13209],\"mapped\",[102,109]],[[13210,13210],\"mapped\",[110,109]],[[13211,13211],\"mapped\",[956,109]],[[13212,13212],\"mapped\",[109,109]],[[13213,13213],\"mapped\",[99,109]],[[13214,13214],\"mapped\",[107,109]],[[13215,13215],\"mapped\",[109,109,50]],[[13216,13216],\"mapped\",[99,109,50]],[[13217,13217],\"mapped\",[109,50]],[[13218,13218],\"mapped\",[107,109,50]],[[13219,13219],\"mapped\",[109,109,51]],[[13220,13220],\"mapped\",[99,109,51]],[[13221,13221],\"mapped\",[109,51]],[[13222,13222],\"mapped\",[107,109,51]],[[13223,13223],\"mapped\",[109,8725,115]],[[13224,13224],\"mapped\",[109,8725,115,50]],[[13225,13225],\"mapped\",[112,97]],[[13226,13226],\"mapped\",[107,112,97]],[[13227,13227],\"mapped\",[109,112,97]],[[13228,13228],\"mapped\",[103,112,97]],[[13229,13229],\"mapped\",[114,97,100]],[[13230,13230],\"mapped\",[114,97,100,8725,115]],[[13231,13231],\"mapped\",[114,97,100,8725,115,50]],[[13232,13232],\"mapped\",[112,115]],[[13233,13233],\"mapped\",[110,115]],[[13234,13234],\"mapped\",[956,115]],[[13235,13235],\"mapped\",[109,115]],[[13236,13236],\"mapped\",[112,118]],[[13237,13237],\"mapped\",[110,118]],[[13238,13238],\"mapped\",[956,118]],[[13239,13239],\"mapped\",[109,118]],[[13240,13240],\"mapped\",[107,118]],[[13241,13241],\"mapped\",[109,118]],[[13242,13242],\"mapped\",[112,119]],[[13243,13243],\"mapped\",[110,119]],[[13244,13244],\"mapped\",[956,119]],[[13245,13245],\"mapped\",[109,119]],[[13246,13246],\"mapped\",[107,119]],[[13247,13247],\"mapped\",[109,119]],[[13248,13248],\"mapped\",[107,969]],[[13249,13249],\"mapped\",[109,969]],[[13250,13250],\"disallowed\"],[[13251,13251],\"mapped\",[98,113]],[[13252,13252],\"mapped\",[99,99]],[[13253,13253],\"mapped\",[99,100]],[[13254,13254],\"mapped\",[99,8725,107,103]],[[13255,13255],\"disallowed\"],[[13256,13256],\"mapped\",[100,98]],[[13257,13257],\"mapped\",[103,121]],[[13258,13258],\"mapped\",[104,97]],[[13259,13259],\"mapped\",[104,112]],[[13260,13260],\"mapped\",[105,110]],[[13261,13261],\"mapped\",[107,107]],[[13262,13262],\"mapped\",[107,109]],[[13263,13263],\"mapped\",[107,116]],[[13264,13264],\"mapped\",[108,109]],[[13265,13265],\"mapped\",[108,110]],[[13266,13266],\"mapped\",[108,111,103]],[[13267,13267],\"mapped\",[108,120]],[[13268,13268],\"mapped\",[109,98]],[[13269,13269],\"mapped\",[109,105,108]],[[13270,13270],\"mapped\",[109,111,108]],[[13271,13271],\"mapped\",[112,104]],[[13272,13272],\"disallowed\"],[[13273,13273],\"mapped\",[112,112,109]],[[13274,13274],\"mapped\",[112,114]],[[13275,13275],\"mapped\",[115,114]],[[13276,13276],\"mapped\",[115,118]],[[13277,13277],\"mapped\",[119,98]],[[13278,13278],\"mapped\",[118,8725,109]],[[13279,13279],\"mapped\",[97,8725,109]],[[13280,13280],\"mapped\",[49,26085]],[[13281,13281],\"mapped\",[50,26085]],[[13282,13282],\"mapped\",[51,26085]],[[13283,13283],\"mapped\",[52,26085]],[[13284,13284],\"mapped\",[53,26085]],[[13285,13285],\"mapped\",[54,26085]],[[13286,13286],\"mapped\",[55,26085]],[[13287,13287],\"mapped\",[56,26085]],[[13288,13288],\"mapped\",[57,26085]],[[13289,13289],\"mapped\",[49,48,26085]],[[13290,13290],\"mapped\",[49,49,26085]],[[13291,13291],\"mapped\",[49,50,26085]],[[13292,13292],\"mapped\",[49,51,26085]],[[13293,13293],\"mapped\",[49,52,26085]],[[13294,13294],\"mapped\",[49,53,26085]],[[13295,13295],\"mapped\",[49,54,26085]],[[13296,13296],\"mapped\",[49,55,26085]],[[13297,13297],\"mapped\",[49,56,26085]],[[13298,13298],\"mapped\",[49,57,26085]],[[13299,13299],\"mapped\",[50,48,26085]],[[13300,13300],\"mapped\",[50,49,26085]],[[13301,13301],\"mapped\",[50,50,26085]],[[13302,13302],\"mapped\",[50,51,26085]],[[13303,13303],\"mapped\",[50,52,26085]],[[13304,13304],\"mapped\",[50,53,26085]],[[13305,13305],\"mapped\",[50,54,26085]],[[13306,13306],\"mapped\",[50,55,26085]],[[13307,13307],\"mapped\",[50,56,26085]],[[13308,13308],\"mapped\",[50,57,26085]],[[13309,13309],\"mapped\",[51,48,26085]],[[13310,13310],\"mapped\",[51,49,26085]],[[13311,13311],\"mapped\",[103,97,108]],[[13312,19893],\"valid\"],[[19894,19903],\"disallowed\"],[[19904,19967],\"valid\",[],\"NV8\"],[[19968,40869],\"valid\"],[[40870,40891],\"valid\"],[[40892,40899],\"valid\"],[[40900,40907],\"valid\"],[[40908,40908],\"valid\"],[[40909,40917],\"valid\"],[[40918,40959],\"disallowed\"],[[40960,42124],\"valid\"],[[42125,42127],\"disallowed\"],[[42128,42145],\"valid\",[],\"NV8\"],[[42146,42147],\"valid\",[],\"NV8\"],[[42148,42163],\"valid\",[],\"NV8\"],[[42164,42164],\"valid\",[],\"NV8\"],[[42165,42176],\"valid\",[],\"NV8\"],[[42177,42177],\"valid\",[],\"NV8\"],[[42178,42180],\"valid\",[],\"NV8\"],[[42181,42181],\"valid\",[],\"NV8\"],[[42182,42182],\"valid\",[],\"NV8\"],[[42183,42191],\"disallowed\"],[[42192,42237],\"valid\"],[[42238,42239],\"valid\",[],\"NV8\"],[[42240,42508],\"valid\"],[[42509,42511],\"valid\",[],\"NV8\"],[[42512,42539],\"valid\"],[[42540,42559],\"disallowed\"],[[42560,42560],\"mapped\",[42561]],[[42561,42561],\"valid\"],[[42562,42562],\"mapped\",[42563]],[[42563,42563],\"valid\"],[[42564,42564],\"mapped\",[42565]],[[42565,42565],\"valid\"],[[42566,42566],\"mapped\",[42567]],[[42567,42567],\"valid\"],[[42568,42568],\"mapped\",[42569]],[[42569,42569],\"valid\"],[[42570,42570],\"mapped\",[42571]],[[42571,42571],\"valid\"],[[42572,42572],\"mapped\",[42573]],[[42573,42573],\"valid\"],[[42574,42574],\"mapped\",[42575]],[[42575,42575],\"valid\"],[[42576,42576],\"mapped\",[42577]],[[42577,42577],\"valid\"],[[42578,42578],\"mapped\",[42579]],[[42579,42579],\"valid\"],[[42580,42580],\"mapped\",[42581]],[[42581,42581],\"valid\"],[[42582,42582],\"mapped\",[42583]],[[42583,42583],\"valid\"],[[42584,42584],\"mapped\",[42585]],[[42585,42585],\"valid\"],[[42586,42586],\"mapped\",[42587]],[[42587,42587],\"valid\"],[[42588,42588],\"mapped\",[42589]],[[42589,42589],\"valid\"],[[42590,42590],\"mapped\",[42591]],[[42591,42591],\"valid\"],[[42592,42592],\"mapped\",[42593]],[[42593,42593],\"valid\"],[[42594,42594],\"mapped\",[42595]],[[42595,42595],\"valid\"],[[42596,42596],\"mapped\",[42597]],[[42597,42597],\"valid\"],[[42598,42598],\"mapped\",[42599]],[[42599,42599],\"valid\"],[[42600,42600],\"mapped\",[42601]],[[42601,42601],\"valid\"],[[42602,42602],\"mapped\",[42603]],[[42603,42603],\"valid\"],[[42604,42604],\"mapped\",[42605]],[[42605,42607],\"valid\"],[[42608,42611],\"valid\",[],\"NV8\"],[[42612,42619],\"valid\"],[[42620,42621],\"valid\"],[[42622,42622],\"valid\",[],\"NV8\"],[[42623,42623],\"valid\"],[[42624,42624],\"mapped\",[42625]],[[42625,42625],\"valid\"],[[42626,42626],\"mapped\",[42627]],[[42627,42627],\"valid\"],[[42628,42628],\"mapped\",[42629]],[[42629,42629],\"valid\"],[[42630,42630],\"mapped\",[42631]],[[42631,42631],\"valid\"],[[42632,42632],\"mapped\",[42633]],[[42633,42633],\"valid\"],[[42634,42634],\"mapped\",[42635]],[[42635,42635],\"valid\"],[[42636,42636],\"mapped\",[42637]],[[42637,42637],\"valid\"],[[42638,42638],\"mapped\",[42639]],[[42639,42639],\"valid\"],[[42640,42640],\"mapped\",[42641]],[[42641,42641],\"valid\"],[[42642,42642],\"mapped\",[42643]],[[42643,42643],\"valid\"],[[42644,42644],\"mapped\",[42645]],[[42645,42645],\"valid\"],[[42646,42646],\"mapped\",[42647]],[[42647,42647],\"valid\"],[[42648,42648],\"mapped\",[42649]],[[42649,42649],\"valid\"],[[42650,42650],\"mapped\",[42651]],[[42651,42651],\"valid\"],[[42652,42652],\"mapped\",[1098]],[[42653,42653],\"mapped\",[1100]],[[42654,42654],\"valid\"],[[42655,42655],\"valid\"],[[42656,42725],\"valid\"],[[42726,42735],\"valid\",[],\"NV8\"],[[42736,42737],\"valid\"],[[42738,42743],\"valid\",[],\"NV8\"],[[42744,42751],\"disallowed\"],[[42752,42774],\"valid\",[],\"NV8\"],[[42775,42778],\"valid\"],[[42779,42783],\"valid\"],[[42784,42785],\"valid\",[],\"NV8\"],[[42786,42786],\"mapped\",[42787]],[[42787,42787],\"valid\"],[[42788,42788],\"mapped\",[42789]],[[42789,42789],\"valid\"],[[42790,42790],\"mapped\",[42791]],[[42791,42791],\"valid\"],[[42792,42792],\"mapped\",[42793]],[[42793,42793],\"valid\"],[[42794,42794],\"mapped\",[42795]],[[42795,42795],\"valid\"],[[42796,42796],\"mapped\",[42797]],[[42797,42797],\"valid\"],[[42798,42798],\"mapped\",[42799]],[[42799,42801],\"valid\"],[[42802,42802],\"mapped\",[42803]],[[42803,42803],\"valid\"],[[42804,42804],\"mapped\",[42805]],[[42805,42805],\"valid\"],[[42806,42806],\"mapped\",[42807]],[[42807,42807],\"valid\"],[[42808,42808],\"mapped\",[42809]],[[42809,42809],\"valid\"],[[42810,42810],\"mapped\",[42811]],[[42811,42811],\"valid\"],[[42812,42812],\"mapped\",[42813]],[[42813,42813],\"valid\"],[[42814,42814],\"mapped\",[42815]],[[42815,42815],\"valid\"],[[42816,42816],\"mapped\",[42817]],[[42817,42817],\"valid\"],[[42818,42818],\"mapped\",[42819]],[[42819,42819],\"valid\"],[[42820,42820],\"mapped\",[42821]],[[42821,42821],\"valid\"],[[42822,42822],\"mapped\",[42823]],[[42823,42823],\"valid\"],[[42824,42824],\"mapped\",[42825]],[[42825,42825],\"valid\"],[[42826,42826],\"mapped\",[42827]],[[42827,42827],\"valid\"],[[42828,42828],\"mapped\",[42829]],[[42829,42829],\"valid\"],[[42830,42830],\"mapped\",[42831]],[[42831,42831],\"valid\"],[[42832,42832],\"mapped\",[42833]],[[42833,42833],\"valid\"],[[42834,42834],\"mapped\",[42835]],[[42835,42835],\"valid\"],[[42836,42836],\"mapped\",[42837]],[[42837,42837],\"valid\"],[[42838,42838],\"mapped\",[42839]],[[42839,42839],\"valid\"],[[42840,42840],\"mapped\",[42841]],[[42841,42841],\"valid\"],[[42842,42842],\"mapped\",[42843]],[[42843,42843],\"valid\"],[[42844,42844],\"mapped\",[42845]],[[42845,42845],\"valid\"],[[42846,42846],\"mapped\",[42847]],[[42847,42847],\"valid\"],[[42848,42848],\"mapped\",[42849]],[[42849,42849],\"valid\"],[[42850,42850],\"mapped\",[42851]],[[42851,42851],\"valid\"],[[42852,42852],\"mapped\",[42853]],[[42853,42853],\"valid\"],[[42854,42854],\"mapped\",[42855]],[[42855,42855],\"valid\"],[[42856,42856],\"mapped\",[42857]],[[42857,42857],\"valid\"],[[42858,42858],\"mapped\",[42859]],[[42859,42859],\"valid\"],[[42860,42860],\"mapped\",[42861]],[[42861,42861],\"valid\"],[[42862,42862],\"mapped\",[42863]],[[42863,42863],\"valid\"],[[42864,42864],\"mapped\",[42863]],[[42865,42872],\"valid\"],[[42873,42873],\"mapped\",[42874]],[[42874,42874],\"valid\"],[[42875,42875],\"mapped\",[42876]],[[42876,42876],\"valid\"],[[42877,42877],\"mapped\",[7545]],[[42878,42878],\"mapped\",[42879]],[[42879,42879],\"valid\"],[[42880,42880],\"mapped\",[42881]],[[42881,42881],\"valid\"],[[42882,42882],\"mapped\",[42883]],[[42883,42883],\"valid\"],[[42884,42884],\"mapped\",[42885]],[[42885,42885],\"valid\"],[[42886,42886],\"mapped\",[42887]],[[42887,42888],\"valid\"],[[42889,42890],\"valid\",[],\"NV8\"],[[42891,42891],\"mapped\",[42892]],[[42892,42892],\"valid\"],[[42893,42893],\"mapped\",[613]],[[42894,42894],\"valid\"],[[42895,42895],\"valid\"],[[42896,42896],\"mapped\",[42897]],[[42897,42897],\"valid\"],[[42898,42898],\"mapped\",[42899]],[[42899,42899],\"valid\"],[[42900,42901],\"valid\"],[[42902,42902],\"mapped\",[42903]],[[42903,42903],\"valid\"],[[42904,42904],\"mapped\",[42905]],[[42905,42905],\"valid\"],[[42906,42906],\"mapped\",[42907]],[[42907,42907],\"valid\"],[[42908,42908],\"mapped\",[42909]],[[42909,42909],\"valid\"],[[42910,42910],\"mapped\",[42911]],[[42911,42911],\"valid\"],[[42912,42912],\"mapped\",[42913]],[[42913,42913],\"valid\"],[[42914,42914],\"mapped\",[42915]],[[42915,42915],\"valid\"],[[42916,42916],\"mapped\",[42917]],[[42917,42917],\"valid\"],[[42918,42918],\"mapped\",[42919]],[[42919,42919],\"valid\"],[[42920,42920],\"mapped\",[42921]],[[42921,42921],\"valid\"],[[42922,42922],\"mapped\",[614]],[[42923,42923],\"mapped\",[604]],[[42924,42924],\"mapped\",[609]],[[42925,42925],\"mapped\",[620]],[[42926,42927],\"disallowed\"],[[42928,42928],\"mapped\",[670]],[[42929,42929],\"mapped\",[647]],[[42930,42930],\"mapped\",[669]],[[42931,42931],\"mapped\",[43859]],[[42932,42932],\"mapped\",[42933]],[[42933,42933],\"valid\"],[[42934,42934],\"mapped\",[42935]],[[42935,42935],\"valid\"],[[42936,42998],\"disallowed\"],[[42999,42999],\"valid\"],[[43000,43000],\"mapped\",[295]],[[43001,43001],\"mapped\",[339]],[[43002,43002],\"valid\"],[[43003,43007],\"valid\"],[[43008,43047],\"valid\"],[[43048,43051],\"valid\",[],\"NV8\"],[[43052,43055],\"disallowed\"],[[43056,43065],\"valid\",[],\"NV8\"],[[43066,43071],\"disallowed\"],[[43072,43123],\"valid\"],[[43124,43127],\"valid\",[],\"NV8\"],[[43128,43135],\"disallowed\"],[[43136,43204],\"valid\"],[[43205,43213],\"disallowed\"],[[43214,43215],\"valid\",[],\"NV8\"],[[43216,43225],\"valid\"],[[43226,43231],\"disallowed\"],[[43232,43255],\"valid\"],[[43256,43258],\"valid\",[],\"NV8\"],[[43259,43259],\"valid\"],[[43260,43260],\"valid\",[],\"NV8\"],[[43261,43261],\"valid\"],[[43262,43263],\"disallowed\"],[[43264,43309],\"valid\"],[[43310,43311],\"valid\",[],\"NV8\"],[[43312,43347],\"valid\"],[[43348,43358],\"disallowed\"],[[43359,43359],\"valid\",[],\"NV8\"],[[43360,43388],\"valid\",[],\"NV8\"],[[43389,43391],\"disallowed\"],[[43392,43456],\"valid\"],[[43457,43469],\"valid\",[],\"NV8\"],[[43470,43470],\"disallowed\"],[[43471,43481],\"valid\"],[[43482,43485],\"disallowed\"],[[43486,43487],\"valid\",[],\"NV8\"],[[43488,43518],\"valid\"],[[43519,43519],\"disallowed\"],[[43520,43574],\"valid\"],[[43575,43583],\"disallowed\"],[[43584,43597],\"valid\"],[[43598,43599],\"disallowed\"],[[43600,43609],\"valid\"],[[43610,43611],\"disallowed\"],[[43612,43615],\"valid\",[],\"NV8\"],[[43616,43638],\"valid\"],[[43639,43641],\"valid\",[],\"NV8\"],[[43642,43643],\"valid\"],[[43644,43647],\"valid\"],[[43648,43714],\"valid\"],[[43715,43738],\"disallowed\"],[[43739,43741],\"valid\"],[[43742,43743],\"valid\",[],\"NV8\"],[[43744,43759],\"valid\"],[[43760,43761],\"valid\",[],\"NV8\"],[[43762,43766],\"valid\"],[[43767,43776],\"disallowed\"],[[43777,43782],\"valid\"],[[43783,43784],\"disallowed\"],[[43785,43790],\"valid\"],[[43791,43792],\"disallowed\"],[[43793,43798],\"valid\"],[[43799,43807],\"disallowed\"],[[43808,43814],\"valid\"],[[43815,43815],\"disallowed\"],[[43816,43822],\"valid\"],[[43823,43823],\"disallowed\"],[[43824,43866],\"valid\"],[[43867,43867],\"valid\",[],\"NV8\"],[[43868,43868],\"mapped\",[42791]],[[43869,43869],\"mapped\",[43831]],[[43870,43870],\"mapped\",[619]],[[43871,43871],\"mapped\",[43858]],[[43872,43875],\"valid\"],[[43876,43877],\"valid\"],[[43878,43887],\"disallowed\"],[[43888,43888],\"mapped\",[5024]],[[43889,43889],\"mapped\",[5025]],[[43890,43890],\"mapped\",[5026]],[[43891,43891],\"mapped\",[5027]],[[43892,43892],\"mapped\",[5028]],[[43893,43893],\"mapped\",[5029]],[[43894,43894],\"mapped\",[5030]],[[43895,43895],\"mapped\",[5031]],[[43896,43896],\"mapped\",[5032]],[[43897,43897],\"mapped\",[5033]],[[43898,43898],\"mapped\",[5034]],[[43899,43899],\"mapped\",[5035]],[[43900,43900],\"mapped\",[5036]],[[43901,43901],\"mapped\",[5037]],[[43902,43902],\"mapped\",[5038]],[[43903,43903],\"mapped\",[5039]],[[43904,43904],\"mapped\",[5040]],[[43905,43905],\"mapped\",[5041]],[[43906,43906],\"mapped\",[5042]],[[43907,43907],\"mapped\",[5043]],[[43908,43908],\"mapped\",[5044]],[[43909,43909],\"mapped\",[5045]],[[43910,43910],\"mapped\",[5046]],[[43911,43911],\"mapped\",[5047]],[[43912,43912],\"mapped\",[5048]],[[43913,43913],\"mapped\",[5049]],[[43914,43914],\"mapped\",[5050]],[[43915,43915],\"mapped\",[5051]],[[43916,43916],\"mapped\",[5052]],[[43917,43917],\"mapped\",[5053]],[[43918,43918],\"mapped\",[5054]],[[43919,43919],\"mapped\",[5055]],[[43920,43920],\"mapped\",[5056]],[[43921,43921],\"mapped\",[5057]],[[43922,43922],\"mapped\",[5058]],[[43923,43923],\"mapped\",[5059]],[[43924,43924],\"mapped\",[5060]],[[43925,43925],\"mapped\",[5061]],[[43926,43926],\"mapped\",[5062]],[[43927,43927],\"mapped\",[5063]],[[43928,43928],\"mapped\",[5064]],[[43929,43929],\"mapped\",[5065]],[[43930,43930],\"mapped\",[5066]],[[43931,43931],\"mapped\",[5067]],[[43932,43932],\"mapped\",[5068]],[[43933,43933],\"mapped\",[5069]],[[43934,43934],\"mapped\",[5070]],[[43935,43935],\"mapped\",[5071]],[[43936,43936],\"mapped\",[5072]],[[43937,43937],\"mapped\",[5073]],[[43938,43938],\"mapped\",[5074]],[[43939,43939],\"mapped\",[5075]],[[43940,43940],\"mapped\",[5076]],[[43941,43941],\"mapped\",[5077]],[[43942,43942],\"mapped\",[5078]],[[43943,43943],\"mapped\",[5079]],[[43944,43944],\"mapped\",[5080]],[[43945,43945],\"mapped\",[5081]],[[43946,43946],\"mapped\",[5082]],[[43947,43947],\"mapped\",[5083]],[[43948,43948],\"mapped\",[5084]],[[43949,43949],\"mapped\",[5085]],[[43950,43950],\"mapped\",[5086]],[[43951,43951],\"mapped\",[5087]],[[43952,43952],\"mapped\",[5088]],[[43953,43953],\"mapped\",[5089]],[[43954,43954],\"mapped\",[5090]],[[43955,43955],\"mapped\",[5091]],[[43956,43956],\"mapped\",[5092]],[[43957,43957],\"mapped\",[5093]],[[43958,43958],\"mapped\",[5094]],[[43959,43959],\"mapped\",[5095]],[[43960,43960],\"mapped\",[5096]],[[43961,43961],\"mapped\",[5097]],[[43962,43962],\"mapped\",[5098]],[[43963,43963],\"mapped\",[5099]],[[43964,43964],\"mapped\",[5100]],[[43965,43965],\"mapped\",[5101]],[[43966,43966],\"mapped\",[5102]],[[43967,43967],\"mapped\",[5103]],[[43968,44010],\"valid\"],[[44011,44011],\"valid\",[],\"NV8\"],[[44012,44013],\"valid\"],[[44014,44015],\"disallowed\"],[[44016,44025],\"valid\"],[[44026,44031],\"disallowed\"],[[44032,55203],\"valid\"],[[55204,55215],\"disallowed\"],[[55216,55238],\"valid\",[],\"NV8\"],[[55239,55242],\"disallowed\"],[[55243,55291],\"valid\",[],\"NV8\"],[[55292,55295],\"disallowed\"],[[55296,57343],\"disallowed\"],[[57344,63743],\"disallowed\"],[[63744,63744],\"mapped\",[35912]],[[63745,63745],\"mapped\",[26356]],[[63746,63746],\"mapped\",[36554]],[[63747,63747],\"mapped\",[36040]],[[63748,63748],\"mapped\",[28369]],[[63749,63749],\"mapped\",[20018]],[[63750,63750],\"mapped\",[21477]],[[63751,63752],\"mapped\",[40860]],[[63753,63753],\"mapped\",[22865]],[[63754,63754],\"mapped\",[37329]],[[63755,63755],\"mapped\",[21895]],[[63756,63756],\"mapped\",[22856]],[[63757,63757],\"mapped\",[25078]],[[63758,63758],\"mapped\",[30313]],[[63759,63759],\"mapped\",[32645]],[[63760,63760],\"mapped\",[34367]],[[63761,63761],\"mapped\",[34746]],[[63762,63762],\"mapped\",[35064]],[[63763,63763],\"mapped\",[37007]],[[63764,63764],\"mapped\",[27138]],[[63765,63765],\"mapped\",[27931]],[[63766,63766],\"mapped\",[28889]],[[63767,63767],\"mapped\",[29662]],[[63768,63768],\"mapped\",[33853]],[[63769,63769],\"mapped\",[37226]],[[63770,63770],\"mapped\",[39409]],[[63771,63771],\"mapped\",[20098]],[[63772,63772],\"mapped\",[21365]],[[63773,63773],\"mapped\",[27396]],[[63774,63774],\"mapped\",[29211]],[[63775,63775],\"mapped\",[34349]],[[63776,63776],\"mapped\",[40478]],[[63777,63777],\"mapped\",[23888]],[[63778,63778],\"mapped\",[28651]],[[63779,63779],\"mapped\",[34253]],[[63780,63780],\"mapped\",[35172]],[[63781,63781],\"mapped\",[25289]],[[63782,63782],\"mapped\",[33240]],[[63783,63783],\"mapped\",[34847]],[[63784,63784],\"mapped\",[24266]],[[63785,63785],\"mapped\",[26391]],[[63786,63786],\"mapped\",[28010]],[[63787,63787],\"mapped\",[29436]],[[63788,63788],\"mapped\",[37070]],[[63789,63789],\"mapped\",[20358]],[[63790,63790],\"mapped\",[20919]],[[63791,63791],\"mapped\",[21214]],[[63792,63792],\"mapped\",[25796]],[[63793,63793],\"mapped\",[27347]],[[63794,63794],\"mapped\",[29200]],[[63795,63795],\"mapped\",[30439]],[[63796,63796],\"mapped\",[32769]],[[63797,63797],\"mapped\",[34310]],[[63798,63798],\"mapped\",[34396]],[[63799,63799],\"mapped\",[36335]],[[63800,63800],\"mapped\",[38706]],[[63801,63801],\"mapped\",[39791]],[[63802,63802],\"mapped\",[40442]],[[63803,63803],\"mapped\",[30860]],[[63804,63804],\"mapped\",[31103]],[[63805,63805],\"mapped\",[32160]],[[63806,63806],\"mapped\",[33737]],[[63807,63807],\"mapped\",[37636]],[[63808,63808],\"mapped\",[40575]],[[63809,63809],\"mapped\",[35542]],[[63810,63810],\"mapped\",[22751]],[[63811,63811],\"mapped\",[24324]],[[63812,63812],\"mapped\",[31840]],[[63813,63813],\"mapped\",[32894]],[[63814,63814],\"mapped\",[29282]],[[63815,63815],\"mapped\",[30922]],[[63816,63816],\"mapped\",[36034]],[[63817,63817],\"mapped\",[38647]],[[63818,63818],\"mapped\",[22744]],[[63819,63819],\"mapped\",[23650]],[[63820,63820],\"mapped\",[27155]],[[63821,63821],\"mapped\",[28122]],[[63822,63822],\"mapped\",[28431]],[[63823,63823],\"mapped\",[32047]],[[63824,63824],\"mapped\",[32311]],[[63825,63825],\"mapped\",[38475]],[[63826,63826],\"mapped\",[21202]],[[63827,63827],\"mapped\",[32907]],[[63828,63828],\"mapped\",[20956]],[[63829,63829],\"mapped\",[20940]],[[63830,63830],\"mapped\",[31260]],[[63831,63831],\"mapped\",[32190]],[[63832,63832],\"mapped\",[33777]],[[63833,63833],\"mapped\",[38517]],[[63834,63834],\"mapped\",[35712]],[[63835,63835],\"mapped\",[25295]],[[63836,63836],\"mapped\",[27138]],[[63837,63837],\"mapped\",[35582]],[[63838,63838],\"mapped\",[20025]],[[63839,63839],\"mapped\",[23527]],[[63840,63840],\"mapped\",[24594]],[[63841,63841],\"mapped\",[29575]],[[63842,63842],\"mapped\",[30064]],[[63843,63843],\"mapped\",[21271]],[[63844,63844],\"mapped\",[30971]],[[63845,63845],\"mapped\",[20415]],[[63846,63846],\"mapped\",[24489]],[[63847,63847],\"mapped\",[19981]],[[63848,63848],\"mapped\",[27852]],[[63849,63849],\"mapped\",[25976]],[[63850,63850],\"mapped\",[32034]],[[63851,63851],\"mapped\",[21443]],[[63852,63852],\"mapped\",[22622]],[[63853,63853],\"mapped\",[30465]],[[63854,63854],\"mapped\",[33865]],[[63855,63855],\"mapped\",[35498]],[[63856,63856],\"mapped\",[27578]],[[63857,63857],\"mapped\",[36784]],[[63858,63858],\"mapped\",[27784]],[[63859,63859],\"mapped\",[25342]],[[63860,63860],\"mapped\",[33509]],[[63861,63861],\"mapped\",[25504]],[[63862,63862],\"mapped\",[30053]],[[63863,63863],\"mapped\",[20142]],[[63864,63864],\"mapped\",[20841]],[[63865,63865],\"mapped\",[20937]],[[63866,63866],\"mapped\",[26753]],[[63867,63867],\"mapped\",[31975]],[[63868,63868],\"mapped\",[33391]],[[63869,63869],\"mapped\",[35538]],[[63870,63870],\"mapped\",[37327]],[[63871,63871],\"mapped\",[21237]],[[63872,63872],\"mapped\",[21570]],[[63873,63873],\"mapped\",[22899]],[[63874,63874],\"mapped\",[24300]],[[63875,63875],\"mapped\",[26053]],[[63876,63876],\"mapped\",[28670]],[[63877,63877],\"mapped\",[31018]],[[63878,63878],\"mapped\",[38317]],[[63879,63879],\"mapped\",[39530]],[[63880,63880],\"mapped\",[40599]],[[63881,63881],\"mapped\",[40654]],[[63882,63882],\"mapped\",[21147]],[[63883,63883],\"mapped\",[26310]],[[63884,63884],\"mapped\",[27511]],[[63885,63885],\"mapped\",[36706]],[[63886,63886],\"mapped\",[24180]],[[63887,63887],\"mapped\",[24976]],[[63888,63888],\"mapped\",[25088]],[[63889,63889],\"mapped\",[25754]],[[63890,63890],\"mapped\",[28451]],[[63891,63891],\"mapped\",[29001]],[[63892,63892],\"mapped\",[29833]],[[63893,63893],\"mapped\",[31178]],[[63894,63894],\"mapped\",[32244]],[[63895,63895],\"mapped\",[32879]],[[63896,63896],\"mapped\",[36646]],[[63897,63897],\"mapped\",[34030]],[[63898,63898],\"mapped\",[36899]],[[63899,63899],\"mapped\",[37706]],[[63900,63900],\"mapped\",[21015]],[[63901,63901],\"mapped\",[21155]],[[63902,63902],\"mapped\",[21693]],[[63903,63903],\"mapped\",[28872]],[[63904,63904],\"mapped\",[35010]],[[63905,63905],\"mapped\",[35498]],[[63906,63906],\"mapped\",[24265]],[[63907,63907],\"mapped\",[24565]],[[63908,63908],\"mapped\",[25467]],[[63909,63909],\"mapped\",[27566]],[[63910,63910],\"mapped\",[31806]],[[63911,63911],\"mapped\",[29557]],[[63912,63912],\"mapped\",[20196]],[[63913,63913],\"mapped\",[22265]],[[63914,63914],\"mapped\",[23527]],[[63915,63915],\"mapped\",[23994]],[[63916,63916],\"mapped\",[24604]],[[63917,63917],\"mapped\",[29618]],[[63918,63918],\"mapped\",[29801]],[[63919,63919],\"mapped\",[32666]],[[63920,63920],\"mapped\",[32838]],[[63921,63921],\"mapped\",[37428]],[[63922,63922],\"mapped\",[38646]],[[63923,63923],\"mapped\",[38728]],[[63924,63924],\"mapped\",[38936]],[[63925,63925],\"mapped\",[20363]],[[63926,63926],\"mapped\",[31150]],[[63927,63927],\"mapped\",[37300]],[[63928,63928],\"mapped\",[38584]],[[63929,63929],\"mapped\",[24801]],[[63930,63930],\"mapped\",[20102]],[[63931,63931],\"mapped\",[20698]],[[63932,63932],\"mapped\",[23534]],[[63933,63933],\"mapped\",[23615]],[[63934,63934],\"mapped\",[26009]],[[63935,63935],\"mapped\",[27138]],[[63936,63936],\"mapped\",[29134]],[[63937,63937],\"mapped\",[30274]],[[63938,63938],\"mapped\",[34044]],[[63939,63939],\"mapped\",[36988]],[[63940,63940],\"mapped\",[40845]],[[63941,63941],\"mapped\",[26248]],[[63942,63942],\"mapped\",[38446]],[[63943,63943],\"mapped\",[21129]],[[63944,63944],\"mapped\",[26491]],[[63945,63945],\"mapped\",[26611]],[[63946,63946],\"mapped\",[27969]],[[63947,63947],\"mapped\",[28316]],[[63948,63948],\"mapped\",[29705]],[[63949,63949],\"mapped\",[30041]],[[63950,63950],\"mapped\",[30827]],[[63951,63951],\"mapped\",[32016]],[[63952,63952],\"mapped\",[39006]],[[63953,63953],\"mapped\",[20845]],[[63954,63954],\"mapped\",[25134]],[[63955,63955],\"mapped\",[38520]],[[63956,63956],\"mapped\",[20523]],[[63957,63957],\"mapped\",[23833]],[[63958,63958],\"mapped\",[28138]],[[63959,63959],\"mapped\",[36650]],[[63960,63960],\"mapped\",[24459]],[[63961,63961],\"mapped\",[24900]],[[63962,63962],\"mapped\",[26647]],[[63963,63963],\"mapped\",[29575]],[[63964,63964],\"mapped\",[38534]],[[63965,63965],\"mapped\",[21033]],[[63966,63966],\"mapped\",[21519]],[[63967,63967],\"mapped\",[23653]],[[63968,63968],\"mapped\",[26131]],[[63969,63969],\"mapped\",[26446]],[[63970,63970],\"mapped\",[26792]],[[63971,63971],\"mapped\",[27877]],[[63972,63972],\"mapped\",[29702]],[[63973,63973],\"mapped\",[30178]],[[63974,63974],\"mapped\",[32633]],[[63975,63975],\"mapped\",[35023]],[[63976,63976],\"mapped\",[35041]],[[63977,63977],\"mapped\",[37324]],[[63978,63978],\"mapped\",[38626]],[[63979,63979],\"mapped\",[21311]],[[63980,63980],\"mapped\",[28346]],[[63981,63981],\"mapped\",[21533]],[[63982,63982],\"mapped\",[29136]],[[63983,63983],\"mapped\",[29848]],[[63984,63984],\"mapped\",[34298]],[[63985,63985],\"mapped\",[38563]],[[63986,63986],\"mapped\",[40023]],[[63987,63987],\"mapped\",[40607]],[[63988,63988],\"mapped\",[26519]],[[63989,63989],\"mapped\",[28107]],[[63990,63990],\"mapped\",[33256]],[[63991,63991],\"mapped\",[31435]],[[63992,63992],\"mapped\",[31520]],[[63993,63993],\"mapped\",[31890]],[[63994,63994],\"mapped\",[29376]],[[63995,63995],\"mapped\",[28825]],[[63996,63996],\"mapped\",[35672]],[[63997,63997],\"mapped\",[20160]],[[63998,63998],\"mapped\",[33590]],[[63999,63999],\"mapped\",[21050]],[[64000,64000],\"mapped\",[20999]],[[64001,64001],\"mapped\",[24230]],[[64002,64002],\"mapped\",[25299]],[[64003,64003],\"mapped\",[31958]],[[64004,64004],\"mapped\",[23429]],[[64005,64005],\"mapped\",[27934]],[[64006,64006],\"mapped\",[26292]],[[64007,64007],\"mapped\",[36667]],[[64008,64008],\"mapped\",[34892]],[[64009,64009],\"mapped\",[38477]],[[64010,64010],\"mapped\",[35211]],[[64011,64011],\"mapped\",[24275]],[[64012,64012],\"mapped\",[20800]],[[64013,64013],\"mapped\",[21952]],[[64014,64015],\"valid\"],[[64016,64016],\"mapped\",[22618]],[[64017,64017],\"valid\"],[[64018,64018],\"mapped\",[26228]],[[64019,64020],\"valid\"],[[64021,64021],\"mapped\",[20958]],[[64022,64022],\"mapped\",[29482]],[[64023,64023],\"mapped\",[30410]],[[64024,64024],\"mapped\",[31036]],[[64025,64025],\"mapped\",[31070]],[[64026,64026],\"mapped\",[31077]],[[64027,64027],\"mapped\",[31119]],[[64028,64028],\"mapped\",[38742]],[[64029,64029],\"mapped\",[31934]],[[64030,64030],\"mapped\",[32701]],[[64031,64031],\"valid\"],[[64032,64032],\"mapped\",[34322]],[[64033,64033],\"valid\"],[[64034,64034],\"mapped\",[35576]],[[64035,64036],\"valid\"],[[64037,64037],\"mapped\",[36920]],[[64038,64038],\"mapped\",[37117]],[[64039,64041],\"valid\"],[[64042,64042],\"mapped\",[39151]],[[64043,64043],\"mapped\",[39164]],[[64044,64044],\"mapped\",[39208]],[[64045,64045],\"mapped\",[40372]],[[64046,64046],\"mapped\",[37086]],[[64047,64047],\"mapped\",[38583]],[[64048,64048],\"mapped\",[20398]],[[64049,64049],\"mapped\",[20711]],[[64050,64050],\"mapped\",[20813]],[[64051,64051],\"mapped\",[21193]],[[64052,64052],\"mapped\",[21220]],[[64053,64053],\"mapped\",[21329]],[[64054,64054],\"mapped\",[21917]],[[64055,64055],\"mapped\",[22022]],[[64056,64056],\"mapped\",[22120]],[[64057,64057],\"mapped\",[22592]],[[64058,64058],\"mapped\",[22696]],[[64059,64059],\"mapped\",[23652]],[[64060,64060],\"mapped\",[23662]],[[64061,64061],\"mapped\",[24724]],[[64062,64062],\"mapped\",[24936]],[[64063,64063],\"mapped\",[24974]],[[64064,64064],\"mapped\",[25074]],[[64065,64065],\"mapped\",[25935]],[[64066,64066],\"mapped\",[26082]],[[64067,64067],\"mapped\",[26257]],[[64068,64068],\"mapped\",[26757]],[[64069,64069],\"mapped\",[28023]],[[64070,64070],\"mapped\",[28186]],[[64071,64071],\"mapped\",[28450]],[[64072,64072],\"mapped\",[29038]],[[64073,64073],\"mapped\",[29227]],[[64074,64074],\"mapped\",[29730]],[[64075,64075],\"mapped\",[30865]],[[64076,64076],\"mapped\",[31038]],[[64077,64077],\"mapped\",[31049]],[[64078,64078],\"mapped\",[31048]],[[64079,64079],\"mapped\",[31056]],[[64080,64080],\"mapped\",[31062]],[[64081,64081],\"mapped\",[31069]],[[64082,64082],\"mapped\",[31117]],[[64083,64083],\"mapped\",[31118]],[[64084,64084],\"mapped\",[31296]],[[64085,64085],\"mapped\",[31361]],[[64086,64086],\"mapped\",[31680]],[[64087,64087],\"mapped\",[32244]],[[64088,64088],\"mapped\",[32265]],[[64089,64089],\"mapped\",[32321]],[[64090,64090],\"mapped\",[32626]],[[64091,64091],\"mapped\",[32773]],[[64092,64092],\"mapped\",[33261]],[[64093,64094],\"mapped\",[33401]],[[64095,64095],\"mapped\",[33879]],[[64096,64096],\"mapped\",[35088]],[[64097,64097],\"mapped\",[35222]],[[64098,64098],\"mapped\",[35585]],[[64099,64099],\"mapped\",[35641]],[[64100,64100],\"mapped\",[36051]],[[64101,64101],\"mapped\",[36104]],[[64102,64102],\"mapped\",[36790]],[[64103,64103],\"mapped\",[36920]],[[64104,64104],\"mapped\",[38627]],[[64105,64105],\"mapped\",[38911]],[[64106,64106],\"mapped\",[38971]],[[64107,64107],\"mapped\",[24693]],[[64108,64108],\"mapped\",[148206]],[[64109,64109],\"mapped\",[33304]],[[64110,64111],\"disallowed\"],[[64112,64112],\"mapped\",[20006]],[[64113,64113],\"mapped\",[20917]],[[64114,64114],\"mapped\",[20840]],[[64115,64115],\"mapped\",[20352]],[[64116,64116],\"mapped\",[20805]],[[64117,64117],\"mapped\",[20864]],[[64118,64118],\"mapped\",[21191]],[[64119,64119],\"mapped\",[21242]],[[64120,64120],\"mapped\",[21917]],[[64121,64121],\"mapped\",[21845]],[[64122,64122],\"mapped\",[21913]],[[64123,64123],\"mapped\",[21986]],[[64124,64124],\"mapped\",[22618]],[[64125,64125],\"mapped\",[22707]],[[64126,64126],\"mapped\",[22852]],[[64127,64127],\"mapped\",[22868]],[[64128,64128],\"mapped\",[23138]],[[64129,64129],\"mapped\",[23336]],[[64130,64130],\"mapped\",[24274]],[[64131,64131],\"mapped\",[24281]],[[64132,64132],\"mapped\",[24425]],[[64133,64133],\"mapped\",[24493]],[[64134,64134],\"mapped\",[24792]],[[64135,64135],\"mapped\",[24910]],[[64136,64136],\"mapped\",[24840]],[[64137,64137],\"mapped\",[24974]],[[64138,64138],\"mapped\",[24928]],[[64139,64139],\"mapped\",[25074]],[[64140,64140],\"mapped\",[25140]],[[64141,64141],\"mapped\",[25540]],[[64142,64142],\"mapped\",[25628]],[[64143,64143],\"mapped\",[25682]],[[64144,64144],\"mapped\",[25942]],[[64145,64145],\"mapped\",[26228]],[[64146,64146],\"mapped\",[26391]],[[64147,64147],\"mapped\",[26395]],[[64148,64148],\"mapped\",[26454]],[[64149,64149],\"mapped\",[27513]],[[64150,64150],\"mapped\",[27578]],[[64151,64151],\"mapped\",[27969]],[[64152,64152],\"mapped\",[28379]],[[64153,64153],\"mapped\",[28363]],[[64154,64154],\"mapped\",[28450]],[[64155,64155],\"mapped\",[28702]],[[64156,64156],\"mapped\",[29038]],[[64157,64157],\"mapped\",[30631]],[[64158,64158],\"mapped\",[29237]],[[64159,64159],\"mapped\",[29359]],[[64160,64160],\"mapped\",[29482]],[[64161,64161],\"mapped\",[29809]],[[64162,64162],\"mapped\",[29958]],[[64163,64163],\"mapped\",[30011]],[[64164,64164],\"mapped\",[30237]],[[64165,64165],\"mapped\",[30239]],[[64166,64166],\"mapped\",[30410]],[[64167,64167],\"mapped\",[30427]],[[64168,64168],\"mapped\",[30452]],[[64169,64169],\"mapped\",[30538]],[[64170,64170],\"mapped\",[30528]],[[64171,64171],\"mapped\",[30924]],[[64172,64172],\"mapped\",[31409]],[[64173,64173],\"mapped\",[31680]],[[64174,64174],\"mapped\",[31867]],[[64175,64175],\"mapped\",[32091]],[[64176,64176],\"mapped\",[32244]],[[64177,64177],\"mapped\",[32574]],[[64178,64178],\"mapped\",[32773]],[[64179,64179],\"mapped\",[33618]],[[64180,64180],\"mapped\",[33775]],[[64181,64181],\"mapped\",[34681]],[[64182,64182],\"mapped\",[35137]],[[64183,64183],\"mapped\",[35206]],[[64184,64184],\"mapped\",[35222]],[[64185,64185],\"mapped\",[35519]],[[64186,64186],\"mapped\",[35576]],[[64187,64187],\"mapped\",[35531]],[[64188,64188],\"mapped\",[35585]],[[64189,64189],\"mapped\",[35582]],[[64190,64190],\"mapped\",[35565]],[[64191,64191],\"mapped\",[35641]],[[64192,64192],\"mapped\",[35722]],[[64193,64193],\"mapped\",[36104]],[[64194,64194],\"mapped\",[36664]],[[64195,64195],\"mapped\",[36978]],[[64196,64196],\"mapped\",[37273]],[[64197,64197],\"mapped\",[37494]],[[64198,64198],\"mapped\",[38524]],[[64199,64199],\"mapped\",[38627]],[[64200,64200],\"mapped\",[38742]],[[64201,64201],\"mapped\",[38875]],[[64202,64202],\"mapped\",[38911]],[[64203,64203],\"mapped\",[38923]],[[64204,64204],\"mapped\",[38971]],[[64205,64205],\"mapped\",[39698]],[[64206,64206],\"mapped\",[40860]],[[64207,64207],\"mapped\",[141386]],[[64208,64208],\"mapped\",[141380]],[[64209,64209],\"mapped\",[144341]],[[64210,64210],\"mapped\",[15261]],[[64211,64211],\"mapped\",[16408]],[[64212,64212],\"mapped\",[16441]],[[64213,64213],\"mapped\",[152137]],[[64214,64214],\"mapped\",[154832]],[[64215,64215],\"mapped\",[163539]],[[64216,64216],\"mapped\",[40771]],[[64217,64217],\"mapped\",[40846]],[[64218,64255],\"disallowed\"],[[64256,64256],\"mapped\",[102,102]],[[64257,64257],\"mapped\",[102,105]],[[64258,64258],\"mapped\",[102,108]],[[64259,64259],\"mapped\",[102,102,105]],[[64260,64260],\"mapped\",[102,102,108]],[[64261,64262],\"mapped\",[115,116]],[[64263,64274],\"disallowed\"],[[64275,64275],\"mapped\",[1396,1398]],[[64276,64276],\"mapped\",[1396,1381]],[[64277,64277],\"mapped\",[1396,1387]],[[64278,64278],\"mapped\",[1406,1398]],[[64279,64279],\"mapped\",[1396,1389]],[[64280,64284],\"disallowed\"],[[64285,64285],\"mapped\",[1497,1460]],[[64286,64286],\"valid\"],[[64287,64287],\"mapped\",[1522,1463]],[[64288,64288],\"mapped\",[1506]],[[64289,64289],\"mapped\",[1488]],[[64290,64290],\"mapped\",[1491]],[[64291,64291],\"mapped\",[1492]],[[64292,64292],\"mapped\",[1499]],[[64293,64293],\"mapped\",[1500]],[[64294,64294],\"mapped\",[1501]],[[64295,64295],\"mapped\",[1512]],[[64296,64296],\"mapped\",[1514]],[[64297,64297],\"disallowed_STD3_mapped\",[43]],[[64298,64298],\"mapped\",[1513,1473]],[[64299,64299],\"mapped\",[1513,1474]],[[64300,64300],\"mapped\",[1513,1468,1473]],[[64301,64301],\"mapped\",[1513,1468,1474]],[[64302,64302],\"mapped\",[1488,1463]],[[64303,64303],\"mapped\",[1488,1464]],[[64304,64304],\"mapped\",[1488,1468]],[[64305,64305],\"mapped\",[1489,1468]],[[64306,64306],\"mapped\",[1490,1468]],[[64307,64307],\"mapped\",[1491,1468]],[[64308,64308],\"mapped\",[1492,1468]],[[64309,64309],\"mapped\",[1493,1468]],[[64310,64310],\"mapped\",[1494,1468]],[[64311,64311],\"disallowed\"],[[64312,64312],\"mapped\",[1496,1468]],[[64313,64313],\"mapped\",[1497,1468]],[[64314,64314],\"mapped\",[1498,1468]],[[64315,64315],\"mapped\",[1499,1468]],[[64316,64316],\"mapped\",[1500,1468]],[[64317,64317],\"disallowed\"],[[64318,64318],\"mapped\",[1502,1468]],[[64319,64319],\"disallowed\"],[[64320,64320],\"mapped\",[1504,1468]],[[64321,64321],\"mapped\",[1505,1468]],[[64322,64322],\"disallowed\"],[[64323,64323],\"mapped\",[1507,1468]],[[64324,64324],\"mapped\",[1508,1468]],[[64325,64325],\"disallowed\"],[[64326,64326],\"mapped\",[1510,1468]],[[64327,64327],\"mapped\",[1511,1468]],[[64328,64328],\"mapped\",[1512,1468]],[[64329,64329],\"mapped\",[1513,1468]],[[64330,64330],\"mapped\",[1514,1468]],[[64331,64331],\"mapped\",[1493,1465]],[[64332,64332],\"mapped\",[1489,1471]],[[64333,64333],\"mapped\",[1499,1471]],[[64334,64334],\"mapped\",[1508,1471]],[[64335,64335],\"mapped\",[1488,1500]],[[64336,64337],\"mapped\",[1649]],[[64338,64341],\"mapped\",[1659]],[[64342,64345],\"mapped\",[1662]],[[64346,64349],\"mapped\",[1664]],[[64350,64353],\"mapped\",[1658]],[[64354,64357],\"mapped\",[1663]],[[64358,64361],\"mapped\",[1657]],[[64362,64365],\"mapped\",[1700]],[[64366,64369],\"mapped\",[1702]],[[64370,64373],\"mapped\",[1668]],[[64374,64377],\"mapped\",[1667]],[[64378,64381],\"mapped\",[1670]],[[64382,64385],\"mapped\",[1671]],[[64386,64387],\"mapped\",[1677]],[[64388,64389],\"mapped\",[1676]],[[64390,64391],\"mapped\",[1678]],[[64392,64393],\"mapped\",[1672]],[[64394,64395],\"mapped\",[1688]],[[64396,64397],\"mapped\",[1681]],[[64398,64401],\"mapped\",[1705]],[[64402,64405],\"mapped\",[1711]],[[64406,64409],\"mapped\",[1715]],[[64410,64413],\"mapped\",[1713]],[[64414,64415],\"mapped\",[1722]],[[64416,64419],\"mapped\",[1723]],[[64420,64421],\"mapped\",[1728]],[[64422,64425],\"mapped\",[1729]],[[64426,64429],\"mapped\",[1726]],[[64430,64431],\"mapped\",[1746]],[[64432,64433],\"mapped\",[1747]],[[64434,64449],\"valid\",[],\"NV8\"],[[64450,64466],\"disallowed\"],[[64467,64470],\"mapped\",[1709]],[[64471,64472],\"mapped\",[1735]],[[64473,64474],\"mapped\",[1734]],[[64475,64476],\"mapped\",[1736]],[[64477,64477],\"mapped\",[1735,1652]],[[64478,64479],\"mapped\",[1739]],[[64480,64481],\"mapped\",[1733]],[[64482,64483],\"mapped\",[1737]],[[64484,64487],\"mapped\",[1744]],[[64488,64489],\"mapped\",[1609]],[[64490,64491],\"mapped\",[1574,1575]],[[64492,64493],\"mapped\",[1574,1749]],[[64494,64495],\"mapped\",[1574,1608]],[[64496,64497],\"mapped\",[1574,1735]],[[64498,64499],\"mapped\",[1574,1734]],[[64500,64501],\"mapped\",[1574,1736]],[[64502,64504],\"mapped\",[1574,1744]],[[64505,64507],\"mapped\",[1574,1609]],[[64508,64511],\"mapped\",[1740]],[[64512,64512],\"mapped\",[1574,1580]],[[64513,64513],\"mapped\",[1574,1581]],[[64514,64514],\"mapped\",[1574,1605]],[[64515,64515],\"mapped\",[1574,1609]],[[64516,64516],\"mapped\",[1574,1610]],[[64517,64517],\"mapped\",[1576,1580]],[[64518,64518],\"mapped\",[1576,1581]],[[64519,64519],\"mapped\",[1576,1582]],[[64520,64520],\"mapped\",[1576,1605]],[[64521,64521],\"mapped\",[1576,1609]],[[64522,64522],\"mapped\",[1576,1610]],[[64523,64523],\"mapped\",[1578,1580]],[[64524,64524],\"mapped\",[1578,1581]],[[64525,64525],\"mapped\",[1578,1582]],[[64526,64526],\"mapped\",[1578,1605]],[[64527,64527],\"mapped\",[1578,1609]],[[64528,64528],\"mapped\",[1578,1610]],[[64529,64529],\"mapped\",[1579,1580]],[[64530,64530],\"mapped\",[1579,1605]],[[64531,64531],\"mapped\",[1579,1609]],[[64532,64532],\"mapped\",[1579,1610]],[[64533,64533],\"mapped\",[1580,1581]],[[64534,64534],\"mapped\",[1580,1605]],[[64535,64535],\"mapped\",[1581,1580]],[[64536,64536],\"mapped\",[1581,1605]],[[64537,64537],\"mapped\",[1582,1580]],[[64538,64538],\"mapped\",[1582,1581]],[[64539,64539],\"mapped\",[1582,1605]],[[64540,64540],\"mapped\",[1587,1580]],[[64541,64541],\"mapped\",[1587,1581]],[[64542,64542],\"mapped\",[1587,1582]],[[64543,64543],\"mapped\",[1587,1605]],[[64544,64544],\"mapped\",[1589,1581]],[[64545,64545],\"mapped\",[1589,1605]],[[64546,64546],\"mapped\",[1590,1580]],[[64547,64547],\"mapped\",[1590,1581]],[[64548,64548],\"mapped\",[1590,1582]],[[64549,64549],\"mapped\",[1590,1605]],[[64550,64550],\"mapped\",[1591,1581]],[[64551,64551],\"mapped\",[1591,1605]],[[64552,64552],\"mapped\",[1592,1605]],[[64553,64553],\"mapped\",[1593,1580]],[[64554,64554],\"mapped\",[1593,1605]],[[64555,64555],\"mapped\",[1594,1580]],[[64556,64556],\"mapped\",[1594,1605]],[[64557,64557],\"mapped\",[1601,1580]],[[64558,64558],\"mapped\",[1601,1581]],[[64559,64559],\"mapped\",[1601,1582]],[[64560,64560],\"mapped\",[1601,1605]],[[64561,64561],\"mapped\",[1601,1609]],[[64562,64562],\"mapped\",[1601,1610]],[[64563,64563],\"mapped\",[1602,1581]],[[64564,64564],\"mapped\",[1602,1605]],[[64565,64565],\"mapped\",[1602,1609]],[[64566,64566],\"mapped\",[1602,1610]],[[64567,64567],\"mapped\",[1603,1575]],[[64568,64568],\"mapped\",[1603,1580]],[[64569,64569],\"mapped\",[1603,1581]],[[64570,64570],\"mapped\",[1603,1582]],[[64571,64571],\"mapped\",[1603,1604]],[[64572,64572],\"mapped\",[1603,1605]],[[64573,64573],\"mapped\",[1603,1609]],[[64574,64574],\"mapped\",[1603,1610]],[[64575,64575],\"mapped\",[1604,1580]],[[64576,64576],\"mapped\",[1604,1581]],[[64577,64577],\"mapped\",[1604,1582]],[[64578,64578],\"mapped\",[1604,1605]],[[64579,64579],\"mapped\",[1604,1609]],[[64580,64580],\"mapped\",[1604,1610]],[[64581,64581],\"mapped\",[1605,1580]],[[64582,64582],\"mapped\",[1605,1581]],[[64583,64583],\"mapped\",[1605,1582]],[[64584,64584],\"mapped\",[1605,1605]],[[64585,64585],\"mapped\",[1605,1609]],[[64586,64586],\"mapped\",[1605,1610]],[[64587,64587],\"mapped\",[1606,1580]],[[64588,64588],\"mapped\",[1606,1581]],[[64589,64589],\"mapped\",[1606,1582]],[[64590,64590],\"mapped\",[1606,1605]],[[64591,64591],\"mapped\",[1606,1609]],[[64592,64592],\"mapped\",[1606,1610]],[[64593,64593],\"mapped\",[1607,1580]],[[64594,64594],\"mapped\",[1607,1605]],[[64595,64595],\"mapped\",[1607,1609]],[[64596,64596],\"mapped\",[1607,1610]],[[64597,64597],\"mapped\",[1610,1580]],[[64598,64598],\"mapped\",[1610,1581]],[[64599,64599],\"mapped\",[1610,1582]],[[64600,64600],\"mapped\",[1610,1605]],[[64601,64601],\"mapped\",[1610,1609]],[[64602,64602],\"mapped\",[1610,1610]],[[64603,64603],\"mapped\",[1584,1648]],[[64604,64604],\"mapped\",[1585,1648]],[[64605,64605],\"mapped\",[1609,1648]],[[64606,64606],\"disallowed_STD3_mapped\",[32,1612,1617]],[[64607,64607],\"disallowed_STD3_mapped\",[32,1613,1617]],[[64608,64608],\"disallowed_STD3_mapped\",[32,1614,1617]],[[64609,64609],\"disallowed_STD3_mapped\",[32,1615,1617]],[[64610,64610],\"disallowed_STD3_mapped\",[32,1616,1617]],[[64611,64611],\"disallowed_STD3_mapped\",[32,1617,1648]],[[64612,64612],\"mapped\",[1574,1585]],[[64613,64613],\"mapped\",[1574,1586]],[[64614,64614],\"mapped\",[1574,1605]],[[64615,64615],\"mapped\",[1574,1606]],[[64616,64616],\"mapped\",[1574,1609]],[[64617,64617],\"mapped\",[1574,1610]],[[64618,64618],\"mapped\",[1576,1585]],[[64619,64619],\"mapped\",[1576,1586]],[[64620,64620],\"mapped\",[1576,1605]],[[64621,64621],\"mapped\",[1576,1606]],[[64622,64622],\"mapped\",[1576,1609]],[[64623,64623],\"mapped\",[1576,1610]],[[64624,64624],\"mapped\",[1578,1585]],[[64625,64625],\"mapped\",[1578,1586]],[[64626,64626],\"mapped\",[1578,1605]],[[64627,64627],\"mapped\",[1578,1606]],[[64628,64628],\"mapped\",[1578,1609]],[[64629,64629],\"mapped\",[1578,1610]],[[64630,64630],\"mapped\",[1579,1585]],[[64631,64631],\"mapped\",[1579,1586]],[[64632,64632],\"mapped\",[1579,1605]],[[64633,64633],\"mapped\",[1579,1606]],[[64634,64634],\"mapped\",[1579,1609]],[[64635,64635],\"mapped\",[1579,1610]],[[64636,64636],\"mapped\",[1601,1609]],[[64637,64637],\"mapped\",[1601,1610]],[[64638,64638],\"mapped\",[1602,1609]],[[64639,64639],\"mapped\",[1602,1610]],[[64640,64640],\"mapped\",[1603,1575]],[[64641,64641],\"mapped\",[1603,1604]],[[64642,64642],\"mapped\",[1603,1605]],[[64643,64643],\"mapped\",[1603,1609]],[[64644,64644],\"mapped\",[1603,1610]],[[64645,64645],\"mapped\",[1604,1605]],[[64646,64646],\"mapped\",[1604,1609]],[[64647,64647],\"mapped\",[1604,1610]],[[64648,64648],\"mapped\",[1605,1575]],[[64649,64649],\"mapped\",[1605,1605]],[[64650,64650],\"mapped\",[1606,1585]],[[64651,64651],\"mapped\",[1606,1586]],[[64652,64652],\"mapped\",[1606,1605]],[[64653,64653],\"mapped\",[1606,1606]],[[64654,64654],\"mapped\",[1606,1609]],[[64655,64655],\"mapped\",[1606,1610]],[[64656,64656],\"mapped\",[1609,1648]],[[64657,64657],\"mapped\",[1610,1585]],[[64658,64658],\"mapped\",[1610,1586]],[[64659,64659],\"mapped\",[1610,1605]],[[64660,64660],\"mapped\",[1610,1606]],[[64661,64661],\"mapped\",[1610,1609]],[[64662,64662],\"mapped\",[1610,1610]],[[64663,64663],\"mapped\",[1574,1580]],[[64664,64664],\"mapped\",[1574,1581]],[[64665,64665],\"mapped\",[1574,1582]],[[64666,64666],\"mapped\",[1574,1605]],[[64667,64667],\"mapped\",[1574,1607]],[[64668,64668],\"mapped\",[1576,1580]],[[64669,64669],\"mapped\",[1576,1581]],[[64670,64670],\"mapped\",[1576,1582]],[[64671,64671],\"mapped\",[1576,1605]],[[64672,64672],\"mapped\",[1576,1607]],[[64673,64673],\"mapped\",[1578,1580]],[[64674,64674],\"mapped\",[1578,1581]],[[64675,64675],\"mapped\",[1578,1582]],[[64676,64676],\"mapped\",[1578,1605]],[[64677,64677],\"mapped\",[1578,1607]],[[64678,64678],\"mapped\",[1579,1605]],[[64679,64679],\"mapped\",[1580,1581]],[[64680,64680],\"mapped\",[1580,1605]],[[64681,64681],\"mapped\",[1581,1580]],[[64682,64682],\"mapped\",[1581,1605]],[[64683,64683],\"mapped\",[1582,1580]],[[64684,64684],\"mapped\",[1582,1605]],[[64685,64685],\"mapped\",[1587,1580]],[[64686,64686],\"mapped\",[1587,1581]],[[64687,64687],\"mapped\",[1587,1582]],[[64688,64688],\"mapped\",[1587,1605]],[[64689,64689],\"mapped\",[1589,1581]],[[64690,64690],\"mapped\",[1589,1582]],[[64691,64691],\"mapped\",[1589,1605]],[[64692,64692],\"mapped\",[1590,1580]],[[64693,64693],\"mapped\",[1590,1581]],[[64694,64694],\"mapped\",[1590,1582]],[[64695,64695],\"mapped\",[1590,1605]],[[64696,64696],\"mapped\",[1591,1581]],[[64697,64697],\"mapped\",[1592,1605]],[[64698,64698],\"mapped\",[1593,1580]],[[64699,64699],\"mapped\",[1593,1605]],[[64700,64700],\"mapped\",[1594,1580]],[[64701,64701],\"mapped\",[1594,1605]],[[64702,64702],\"mapped\",[1601,1580]],[[64703,64703],\"mapped\",[1601,1581]],[[64704,64704],\"mapped\",[1601,1582]],[[64705,64705],\"mapped\",[1601,1605]],[[64706,64706],\"mapped\",[1602,1581]],[[64707,64707],\"mapped\",[1602,1605]],[[64708,64708],\"mapped\",[1603,1580]],[[64709,64709],\"mapped\",[1603,1581]],[[64710,64710],\"mapped\",[1603,1582]],[[64711,64711],\"mapped\",[1603,1604]],[[64712,64712],\"mapped\",[1603,1605]],[[64713,64713],\"mapped\",[1604,1580]],[[64714,64714],\"mapped\",[1604,1581]],[[64715,64715],\"mapped\",[1604,1582]],[[64716,64716],\"mapped\",[1604,1605]],[[64717,64717],\"mapped\",[1604,1607]],[[64718,64718],\"mapped\",[1605,1580]],[[64719,64719],\"mapped\",[1605,1581]],[[64720,64720],\"mapped\",[1605,1582]],[[64721,64721],\"mapped\",[1605,1605]],[[64722,64722],\"mapped\",[1606,1580]],[[64723,64723],\"mapped\",[1606,1581]],[[64724,64724],\"mapped\",[1606,1582]],[[64725,64725],\"mapped\",[1606,1605]],[[64726,64726],\"mapped\",[1606,1607]],[[64727,64727],\"mapped\",[1607,1580]],[[64728,64728],\"mapped\",[1607,1605]],[[64729,64729],\"mapped\",[1607,1648]],[[64730,64730],\"mapped\",[1610,1580]],[[64731,64731],\"mapped\",[1610,1581]],[[64732,64732],\"mapped\",[1610,1582]],[[64733,64733],\"mapped\",[1610,1605]],[[64734,64734],\"mapped\",[1610,1607]],[[64735,64735],\"mapped\",[1574,1605]],[[64736,64736],\"mapped\",[1574,1607]],[[64737,64737],\"mapped\",[1576,1605]],[[64738,64738],\"mapped\",[1576,1607]],[[64739,64739],\"mapped\",[1578,1605]],[[64740,64740],\"mapped\",[1578,1607]],[[64741,64741],\"mapped\",[1579,1605]],[[64742,64742],\"mapped\",[1579,1607]],[[64743,64743],\"mapped\",[1587,1605]],[[64744,64744],\"mapped\",[1587,1607]],[[64745,64745],\"mapped\",[1588,1605]],[[64746,64746],\"mapped\",[1588,1607]],[[64747,64747],\"mapped\",[1603,1604]],[[64748,64748],\"mapped\",[1603,1605]],[[64749,64749],\"mapped\",[1604,1605]],[[64750,64750],\"mapped\",[1606,1605]],[[64751,64751],\"mapped\",[1606,1607]],[[64752,64752],\"mapped\",[1610,1605]],[[64753,64753],\"mapped\",[1610,1607]],[[64754,64754],\"mapped\",[1600,1614,1617]],[[64755,64755],\"mapped\",[1600,1615,1617]],[[64756,64756],\"mapped\",[1600,1616,1617]],[[64757,64757],\"mapped\",[1591,1609]],[[64758,64758],\"mapped\",[1591,1610]],[[64759,64759],\"mapped\",[1593,1609]],[[64760,64760],\"mapped\",[1593,1610]],[[64761,64761],\"mapped\",[1594,1609]],[[64762,64762],\"mapped\",[1594,1610]],[[64763,64763],\"mapped\",[1587,1609]],[[64764,64764],\"mapped\",[1587,1610]],[[64765,64765],\"mapped\",[1588,1609]],[[64766,64766],\"mapped\",[1588,1610]],[[64767,64767],\"mapped\",[1581,1609]],[[64768,64768],\"mapped\",[1581,1610]],[[64769,64769],\"mapped\",[1580,1609]],[[64770,64770],\"mapped\",[1580,1610]],[[64771,64771],\"mapped\",[1582,1609]],[[64772,64772],\"mapped\",[1582,1610]],[[64773,64773],\"mapped\",[1589,1609]],[[64774,64774],\"mapped\",[1589,1610]],[[64775,64775],\"mapped\",[1590,1609]],[[64776,64776],\"mapped\",[1590,1610]],[[64777,64777],\"mapped\",[1588,1580]],[[64778,64778],\"mapped\",[1588,1581]],[[64779,64779],\"mapped\",[1588,1582]],[[64780,64780],\"mapped\",[1588,1605]],[[64781,64781],\"mapped\",[1588,1585]],[[64782,64782],\"mapped\",[1587,1585]],[[64783,64783],\"mapped\",[1589,1585]],[[64784,64784],\"mapped\",[1590,1585]],[[64785,64785],\"mapped\",[1591,1609]],[[64786,64786],\"mapped\",[1591,1610]],[[64787,64787],\"mapped\",[1593,1609]],[[64788,64788],\"mapped\",[1593,1610]],[[64789,64789],\"mapped\",[1594,1609]],[[64790,64790],\"mapped\",[1594,1610]],[[64791,64791],\"mapped\",[1587,1609]],[[64792,64792],\"mapped\",[1587,1610]],[[64793,64793],\"mapped\",[1588,1609]],[[64794,64794],\"mapped\",[1588,1610]],[[64795,64795],\"mapped\",[1581,1609]],[[64796,64796],\"mapped\",[1581,1610]],[[64797,64797],\"mapped\",[1580,1609]],[[64798,64798],\"mapped\",[1580,1610]],[[64799,64799],\"mapped\",[1582,1609]],[[64800,64800],\"mapped\",[1582,1610]],[[64801,64801],\"mapped\",[1589,1609]],[[64802,64802],\"mapped\",[1589,1610]],[[64803,64803],\"mapped\",[1590,1609]],[[64804,64804],\"mapped\",[1590,1610]],[[64805,64805],\"mapped\",[1588,1580]],[[64806,64806],\"mapped\",[1588,1581]],[[64807,64807],\"mapped\",[1588,1582]],[[64808,64808],\"mapped\",[1588,1605]],[[64809,64809],\"mapped\",[1588,1585]],[[64810,64810],\"mapped\",[1587,1585]],[[64811,64811],\"mapped\",[1589,1585]],[[64812,64812],\"mapped\",[1590,1585]],[[64813,64813],\"mapped\",[1588,1580]],[[64814,64814],\"mapped\",[1588,1581]],[[64815,64815],\"mapped\",[1588,1582]],[[64816,64816],\"mapped\",[1588,1605]],[[64817,64817],\"mapped\",[1587,1607]],[[64818,64818],\"mapped\",[1588,1607]],[[64819,64819],\"mapped\",[1591,1605]],[[64820,64820],\"mapped\",[1587,1580]],[[64821,64821],\"mapped\",[1587,1581]],[[64822,64822],\"mapped\",[1587,1582]],[[64823,64823],\"mapped\",[1588,1580]],[[64824,64824],\"mapped\",[1588,1581]],[[64825,64825],\"mapped\",[1588,1582]],[[64826,64826],\"mapped\",[1591,1605]],[[64827,64827],\"mapped\",[1592,1605]],[[64828,64829],\"mapped\",[1575,1611]],[[64830,64831],\"valid\",[],\"NV8\"],[[64832,64847],\"disallowed\"],[[64848,64848],\"mapped\",[1578,1580,1605]],[[64849,64850],\"mapped\",[1578,1581,1580]],[[64851,64851],\"mapped\",[1578,1581,1605]],[[64852,64852],\"mapped\",[1578,1582,1605]],[[64853,64853],\"mapped\",[1578,1605,1580]],[[64854,64854],\"mapped\",[1578,1605,1581]],[[64855,64855],\"mapped\",[1578,1605,1582]],[[64856,64857],\"mapped\",[1580,1605,1581]],[[64858,64858],\"mapped\",[1581,1605,1610]],[[64859,64859],\"mapped\",[1581,1605,1609]],[[64860,64860],\"mapped\",[1587,1581,1580]],[[64861,64861],\"mapped\",[1587,1580,1581]],[[64862,64862],\"mapped\",[1587,1580,1609]],[[64863,64864],\"mapped\",[1587,1605,1581]],[[64865,64865],\"mapped\",[1587,1605,1580]],[[64866,64867],\"mapped\",[1587,1605,1605]],[[64868,64869],\"mapped\",[1589,1581,1581]],[[64870,64870],\"mapped\",[1589,1605,1605]],[[64871,64872],\"mapped\",[1588,1581,1605]],[[64873,64873],\"mapped\",[1588,1580,1610]],[[64874,64875],\"mapped\",[1588,1605,1582]],[[64876,64877],\"mapped\",[1588,1605,1605]],[[64878,64878],\"mapped\",[1590,1581,1609]],[[64879,64880],\"mapped\",[1590,1582,1605]],[[64881,64882],\"mapped\",[1591,1605,1581]],[[64883,64883],\"mapped\",[1591,1605,1605]],[[64884,64884],\"mapped\",[1591,1605,1610]],[[64885,64885],\"mapped\",[1593,1580,1605]],[[64886,64887],\"mapped\",[1593,1605,1605]],[[64888,64888],\"mapped\",[1593,1605,1609]],[[64889,64889],\"mapped\",[1594,1605,1605]],[[64890,64890],\"mapped\",[1594,1605,1610]],[[64891,64891],\"mapped\",[1594,1605,1609]],[[64892,64893],\"mapped\",[1601,1582,1605]],[[64894,64894],\"mapped\",[1602,1605,1581]],[[64895,64895],\"mapped\",[1602,1605,1605]],[[64896,64896],\"mapped\",[1604,1581,1605]],[[64897,64897],\"mapped\",[1604,1581,1610]],[[64898,64898],\"mapped\",[1604,1581,1609]],[[64899,64900],\"mapped\",[1604,1580,1580]],[[64901,64902],\"mapped\",[1604,1582,1605]],[[64903,64904],\"mapped\",[1604,1605,1581]],[[64905,64905],\"mapped\",[1605,1581,1580]],[[64906,64906],\"mapped\",[1605,1581,1605]],[[64907,64907],\"mapped\",[1605,1581,1610]],[[64908,64908],\"mapped\",[1605,1580,1581]],[[64909,64909],\"mapped\",[1605,1580,1605]],[[64910,64910],\"mapped\",[1605,1582,1580]],[[64911,64911],\"mapped\",[1605,1582,1605]],[[64912,64913],\"disallowed\"],[[64914,64914],\"mapped\",[1605,1580,1582]],[[64915,64915],\"mapped\",[1607,1605,1580]],[[64916,64916],\"mapped\",[1607,1605,1605]],[[64917,64917],\"mapped\",[1606,1581,1605]],[[64918,64918],\"mapped\",[1606,1581,1609]],[[64919,64920],\"mapped\",[1606,1580,1605]],[[64921,64921],\"mapped\",[1606,1580,1609]],[[64922,64922],\"mapped\",[1606,1605,1610]],[[64923,64923],\"mapped\",[1606,1605,1609]],[[64924,64925],\"mapped\",[1610,1605,1605]],[[64926,64926],\"mapped\",[1576,1582,1610]],[[64927,64927],\"mapped\",[1578,1580,1610]],[[64928,64928],\"mapped\",[1578,1580,1609]],[[64929,64929],\"mapped\",[1578,1582,1610]],[[64930,64930],\"mapped\",[1578,1582,1609]],[[64931,64931],\"mapped\",[1578,1605,1610]],[[64932,64932],\"mapped\",[1578,1605,1609]],[[64933,64933],\"mapped\",[1580,1605,1610]],[[64934,64934],\"mapped\",[1580,1581,1609]],[[64935,64935],\"mapped\",[1580,1605,1609]],[[64936,64936],\"mapped\",[1587,1582,1609]],[[64937,64937],\"mapped\",[1589,1581,1610]],[[64938,64938],\"mapped\",[1588,1581,1610]],[[64939,64939],\"mapped\",[1590,1581,1610]],[[64940,64940],\"mapped\",[1604,1580,1610]],[[64941,64941],\"mapped\",[1604,1605,1610]],[[64942,64942],\"mapped\",[1610,1581,1610]],[[64943,64943],\"mapped\",[1610,1580,1610]],[[64944,64944],\"mapped\",[1610,1605,1610]],[[64945,64945],\"mapped\",[1605,1605,1610]],[[64946,64946],\"mapped\",[1602,1605,1610]],[[64947,64947],\"mapped\",[1606,1581,1610]],[[64948,64948],\"mapped\",[1602,1605,1581]],[[64949,64949],\"mapped\",[1604,1581,1605]],[[64950,64950],\"mapped\",[1593,1605,1610]],[[64951,64951],\"mapped\",[1603,1605,1610]],[[64952,64952],\"mapped\",[1606,1580,1581]],[[64953,64953],\"mapped\",[1605,1582,1610]],[[64954,64954],\"mapped\",[1604,1580,1605]],[[64955,64955],\"mapped\",[1603,1605,1605]],[[64956,64956],\"mapped\",[1604,1580,1605]],[[64957,64957],\"mapped\",[1606,1580,1581]],[[64958,64958],\"mapped\",[1580,1581,1610]],[[64959,64959],\"mapped\",[1581,1580,1610]],[[64960,64960],\"mapped\",[1605,1580,1610]],[[64961,64961],\"mapped\",[1601,1605,1610]],[[64962,64962],\"mapped\",[1576,1581,1610]],[[64963,64963],\"mapped\",[1603,1605,1605]],[[64964,64964],\"mapped\",[1593,1580,1605]],[[64965,64965],\"mapped\",[1589,1605,1605]],[[64966,64966],\"mapped\",[1587,1582,1610]],[[64967,64967],\"mapped\",[1606,1580,1610]],[[64968,64975],\"disallowed\"],[[64976,65007],\"disallowed\"],[[65008,65008],\"mapped\",[1589,1604,1746]],[[65009,65009],\"mapped\",[1602,1604,1746]],[[65010,65010],\"mapped\",[1575,1604,1604,1607]],[[65011,65011],\"mapped\",[1575,1603,1576,1585]],[[65012,65012],\"mapped\",[1605,1581,1605,1583]],[[65013,65013],\"mapped\",[1589,1604,1593,1605]],[[65014,65014],\"mapped\",[1585,1587,1608,1604]],[[65015,65015],\"mapped\",[1593,1604,1610,1607]],[[65016,65016],\"mapped\",[1608,1587,1604,1605]],[[65017,65017],\"mapped\",[1589,1604,1609]],[[65018,65018],\"disallowed_STD3_mapped\",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],\"disallowed_STD3_mapped\",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],\"mapped\",[1585,1740,1575,1604]],[[65021,65021],\"valid\",[],\"NV8\"],[[65022,65023],\"disallowed\"],[[65024,65039],\"ignored\"],[[65040,65040],\"disallowed_STD3_mapped\",[44]],[[65041,65041],\"mapped\",[12289]],[[65042,65042],\"disallowed\"],[[65043,65043],\"disallowed_STD3_mapped\",[58]],[[65044,65044],\"disallowed_STD3_mapped\",[59]],[[65045,65045],\"disallowed_STD3_mapped\",[33]],[[65046,65046],\"disallowed_STD3_mapped\",[63]],[[65047,65047],\"mapped\",[12310]],[[65048,65048],\"mapped\",[12311]],[[65049,65049],\"disallowed\"],[[65050,65055],\"disallowed\"],[[65056,65059],\"valid\"],[[65060,65062],\"valid\"],[[65063,65069],\"valid\"],[[65070,65071],\"valid\"],[[65072,65072],\"disallowed\"],[[65073,65073],\"mapped\",[8212]],[[65074,65074],\"mapped\",[8211]],[[65075,65076],\"disallowed_STD3_mapped\",[95]],[[65077,65077],\"disallowed_STD3_mapped\",[40]],[[65078,65078],\"disallowed_STD3_mapped\",[41]],[[65079,65079],\"disallowed_STD3_mapped\",[123]],[[65080,65080],\"disallowed_STD3_mapped\",[125]],[[65081,65081],\"mapped\",[12308]],[[65082,65082],\"mapped\",[12309]],[[65083,65083],\"mapped\",[12304]],[[65084,65084],\"mapped\",[12305]],[[65085,65085],\"mapped\",[12298]],[[65086,65086],\"mapped\",[12299]],[[65087,65087],\"mapped\",[12296]],[[65088,65088],\"mapped\",[12297]],[[65089,65089],\"mapped\",[12300]],[[65090,65090],\"mapped\",[12301]],[[65091,65091],\"mapped\",[12302]],[[65092,65092],\"mapped\",[12303]],[[65093,65094],\"valid\",[],\"NV8\"],[[65095,65095],\"disallowed_STD3_mapped\",[91]],[[65096,65096],\"disallowed_STD3_mapped\",[93]],[[65097,65100],\"disallowed_STD3_mapped\",[32,773]],[[65101,65103],\"disallowed_STD3_mapped\",[95]],[[65104,65104],\"disallowed_STD3_mapped\",[44]],[[65105,65105],\"mapped\",[12289]],[[65106,65106],\"disallowed\"],[[65107,65107],\"disallowed\"],[[65108,65108],\"disallowed_STD3_mapped\",[59]],[[65109,65109],\"disallowed_STD3_mapped\",[58]],[[65110,65110],\"disallowed_STD3_mapped\",[63]],[[65111,65111],\"disallowed_STD3_mapped\",[33]],[[65112,65112],\"mapped\",[8212]],[[65113,65113],\"disallowed_STD3_mapped\",[40]],[[65114,65114],\"disallowed_STD3_mapped\",[41]],[[65115,65115],\"disallowed_STD3_mapped\",[123]],[[65116,65116],\"disallowed_STD3_mapped\",[125]],[[65117,65117],\"mapped\",[12308]],[[65118,65118],\"mapped\",[12309]],[[65119,65119],\"disallowed_STD3_mapped\",[35]],[[65120,65120],\"disallowed_STD3_mapped\",[38]],[[65121,65121],\"disallowed_STD3_mapped\",[42]],[[65122,65122],\"disallowed_STD3_mapped\",[43]],[[65123,65123],\"mapped\",[45]],[[65124,65124],\"disallowed_STD3_mapped\",[60]],[[65125,65125],\"disallowed_STD3_mapped\",[62]],[[65126,65126],\"disallowed_STD3_mapped\",[61]],[[65127,65127],\"disallowed\"],[[65128,65128],\"disallowed_STD3_mapped\",[92]],[[65129,65129],\"disallowed_STD3_mapped\",[36]],[[65130,65130],\"disallowed_STD3_mapped\",[37]],[[65131,65131],\"disallowed_STD3_mapped\",[64]],[[65132,65135],\"disallowed\"],[[65136,65136],\"disallowed_STD3_mapped\",[32,1611]],[[65137,65137],\"mapped\",[1600,1611]],[[65138,65138],\"disallowed_STD3_mapped\",[32,1612]],[[65139,65139],\"valid\"],[[65140,65140],\"disallowed_STD3_mapped\",[32,1613]],[[65141,65141],\"disallowed\"],[[65142,65142],\"disallowed_STD3_mapped\",[32,1614]],[[65143,65143],\"mapped\",[1600,1614]],[[65144,65144],\"disallowed_STD3_mapped\",[32,1615]],[[65145,65145],\"mapped\",[1600,1615]],[[65146,65146],\"disallowed_STD3_mapped\",[32,1616]],[[65147,65147],\"mapped\",[1600,1616]],[[65148,65148],\"disallowed_STD3_mapped\",[32,1617]],[[65149,65149],\"mapped\",[1600,1617]],[[65150,65150],\"disallowed_STD3_mapped\",[32,1618]],[[65151,65151],\"mapped\",[1600,1618]],[[65152,65152],\"mapped\",[1569]],[[65153,65154],\"mapped\",[1570]],[[65155,65156],\"mapped\",[1571]],[[65157,65158],\"mapped\",[1572]],[[65159,65160],\"mapped\",[1573]],[[65161,65164],\"mapped\",[1574]],[[65165,65166],\"mapped\",[1575]],[[65167,65170],\"mapped\",[1576]],[[65171,65172],\"mapped\",[1577]],[[65173,65176],\"mapped\",[1578]],[[65177,65180],\"mapped\",[1579]],[[65181,65184],\"mapped\",[1580]],[[65185,65188],\"mapped\",[1581]],[[65189,65192],\"mapped\",[1582]],[[65193,65194],\"mapped\",[1583]],[[65195,65196],\"mapped\",[1584]],[[65197,65198],\"mapped\",[1585]],[[65199,65200],\"mapped\",[1586]],[[65201,65204],\"mapped\",[1587]],[[65205,65208],\"mapped\",[1588]],[[65209,65212],\"mapped\",[1589]],[[65213,65216],\"mapped\",[1590]],[[65217,65220],\"mapped\",[1591]],[[65221,65224],\"mapped\",[1592]],[[65225,65228],\"mapped\",[1593]],[[65229,65232],\"mapped\",[1594]],[[65233,65236],\"mapped\",[1601]],[[65237,65240],\"mapped\",[1602]],[[65241,65244],\"mapped\",[1603]],[[65245,65248],\"mapped\",[1604]],[[65249,65252],\"mapped\",[1605]],[[65253,65256],\"mapped\",[1606]],[[65257,65260],\"mapped\",[1607]],[[65261,65262],\"mapped\",[1608]],[[65263,65264],\"mapped\",[1609]],[[65265,65268],\"mapped\",[1610]],[[65269,65270],\"mapped\",[1604,1570]],[[65271,65272],\"mapped\",[1604,1571]],[[65273,65274],\"mapped\",[1604,1573]],[[65275,65276],\"mapped\",[1604,1575]],[[65277,65278],\"disallowed\"],[[65279,65279],\"ignored\"],[[65280,65280],\"disallowed\"],[[65281,65281],\"disallowed_STD3_mapped\",[33]],[[65282,65282],\"disallowed_STD3_mapped\",[34]],[[65283,65283],\"disallowed_STD3_mapped\",[35]],[[65284,65284],\"disallowed_STD3_mapped\",[36]],[[65285,65285],\"disallowed_STD3_mapped\",[37]],[[65286,65286],\"disallowed_STD3_mapped\",[38]],[[65287,65287],\"disallowed_STD3_mapped\",[39]],[[65288,65288],\"disallowed_STD3_mapped\",[40]],[[65289,65289],\"disallowed_STD3_mapped\",[41]],[[65290,65290],\"disallowed_STD3_mapped\",[42]],[[65291,65291],\"disallowed_STD3_mapped\",[43]],[[65292,65292],\"disallowed_STD3_mapped\",[44]],[[65293,65293],\"mapped\",[45]],[[65294,65294],\"mapped\",[46]],[[65295,65295],\"disallowed_STD3_mapped\",[47]],[[65296,65296],\"mapped\",[48]],[[65297,65297],\"mapped\",[49]],[[65298,65298],\"mapped\",[50]],[[65299,65299],\"mapped\",[51]],[[65300,65300],\"mapped\",[52]],[[65301,65301],\"mapped\",[53]],[[65302,65302],\"mapped\",[54]],[[65303,65303],\"mapped\",[55]],[[65304,65304],\"mapped\",[56]],[[65305,65305],\"mapped\",[57]],[[65306,65306],\"disallowed_STD3_mapped\",[58]],[[65307,65307],\"disallowed_STD3_mapped\",[59]],[[65308,65308],\"disallowed_STD3_mapped\",[60]],[[65309,65309],\"disallowed_STD3_mapped\",[61]],[[65310,65310],\"disallowed_STD3_mapped\",[62]],[[65311,65311],\"disallowed_STD3_mapped\",[63]],[[65312,65312],\"disallowed_STD3_mapped\",[64]],[[65313,65313],\"mapped\",[97]],[[65314,65314],\"mapped\",[98]],[[65315,65315],\"mapped\",[99]],[[65316,65316],\"mapped\",[100]],[[65317,65317],\"mapped\",[101]],[[65318,65318],\"mapped\",[102]],[[65319,65319],\"mapped\",[103]],[[65320,65320],\"mapped\",[104]],[[65321,65321],\"mapped\",[105]],[[65322,65322],\"mapped\",[106]],[[65323,65323],\"mapped\",[107]],[[65324,65324],\"mapped\",[108]],[[65325,65325],\"mapped\",[109]],[[65326,65326],\"mapped\",[110]],[[65327,65327],\"mapped\",[111]],[[65328,65328],\"mapped\",[112]],[[65329,65329],\"mapped\",[113]],[[65330,65330],\"mapped\",[114]],[[65331,65331],\"mapped\",[115]],[[65332,65332],\"mapped\",[116]],[[65333,65333],\"mapped\",[117]],[[65334,65334],\"mapped\",[118]],[[65335,65335],\"mapped\",[119]],[[65336,65336],\"mapped\",[120]],[[65337,65337],\"mapped\",[121]],[[65338,65338],\"mapped\",[122]],[[65339,65339],\"disallowed_STD3_mapped\",[91]],[[65340,65340],\"disallowed_STD3_mapped\",[92]],[[65341,65341],\"disallowed_STD3_mapped\",[93]],[[65342,65342],\"disallowed_STD3_mapped\",[94]],[[65343,65343],\"disallowed_STD3_mapped\",[95]],[[65344,65344],\"disallowed_STD3_mapped\",[96]],[[65345,65345],\"mapped\",[97]],[[65346,65346],\"mapped\",[98]],[[65347,65347],\"mapped\",[99]],[[65348,65348],\"mapped\",[100]],[[65349,65349],\"mapped\",[101]],[[65350,65350],\"mapped\",[102]],[[65351,65351],\"mapped\",[103]],[[65352,65352],\"mapped\",[104]],[[65353,65353],\"mapped\",[105]],[[65354,65354],\"mapped\",[106]],[[65355,65355],\"mapped\",[107]],[[65356,65356],\"mapped\",[108]],[[65357,65357],\"mapped\",[109]],[[65358,65358],\"mapped\",[110]],[[65359,65359],\"mapped\",[111]],[[65360,65360],\"mapped\",[112]],[[65361,65361],\"mapped\",[113]],[[65362,65362],\"mapped\",[114]],[[65363,65363],\"mapped\",[115]],[[65364,65364],\"mapped\",[116]],[[65365,65365],\"mapped\",[117]],[[65366,65366],\"mapped\",[118]],[[65367,65367],\"mapped\",[119]],[[65368,65368],\"mapped\",[120]],[[65369,65369],\"mapped\",[121]],[[65370,65370],\"mapped\",[122]],[[65371,65371],\"disallowed_STD3_mapped\",[123]],[[65372,65372],\"disallowed_STD3_mapped\",[124]],[[65373,65373],\"disallowed_STD3_mapped\",[125]],[[65374,65374],\"disallowed_STD3_mapped\",[126]],[[65375,65375],\"mapped\",[10629]],[[65376,65376],\"mapped\",[10630]],[[65377,65377],\"mapped\",[46]],[[65378,65378],\"mapped\",[12300]],[[65379,65379],\"mapped\",[12301]],[[65380,65380],\"mapped\",[12289]],[[65381,65381],\"mapped\",[12539]],[[65382,65382],\"mapped\",[12530]],[[65383,65383],\"mapped\",[12449]],[[65384,65384],\"mapped\",[12451]],[[65385,65385],\"mapped\",[12453]],[[65386,65386],\"mapped\",[12455]],[[65387,65387],\"mapped\",[12457]],[[65388,65388],\"mapped\",[12515]],[[65389,65389],\"mapped\",[12517]],[[65390,65390],\"mapped\",[12519]],[[65391,65391],\"mapped\",[12483]],[[65392,65392],\"mapped\",[12540]],[[65393,65393],\"mapped\",[12450]],[[65394,65394],\"mapped\",[12452]],[[65395,65395],\"mapped\",[12454]],[[65396,65396],\"mapped\",[12456]],[[65397,65397],\"mapped\",[12458]],[[65398,65398],\"mapped\",[12459]],[[65399,65399],\"mapped\",[12461]],[[65400,65400],\"mapped\",[12463]],[[65401,65401],\"mapped\",[12465]],[[65402,65402],\"mapped\",[12467]],[[65403,65403],\"mapped\",[12469]],[[65404,65404],\"mapped\",[12471]],[[65405,65405],\"mapped\",[12473]],[[65406,65406],\"mapped\",[12475]],[[65407,65407],\"mapped\",[12477]],[[65408,65408],\"mapped\",[12479]],[[65409,65409],\"mapped\",[12481]],[[65410,65410],\"mapped\",[12484]],[[65411,65411],\"mapped\",[12486]],[[65412,65412],\"mapped\",[12488]],[[65413,65413],\"mapped\",[12490]],[[65414,65414],\"mapped\",[12491]],[[65415,65415],\"mapped\",[12492]],[[65416,65416],\"mapped\",[12493]],[[65417,65417],\"mapped\",[12494]],[[65418,65418],\"mapped\",[12495]],[[65419,65419],\"mapped\",[12498]],[[65420,65420],\"mapped\",[12501]],[[65421,65421],\"mapped\",[12504]],[[65422,65422],\"mapped\",[12507]],[[65423,65423],\"mapped\",[12510]],[[65424,65424],\"mapped\",[12511]],[[65425,65425],\"mapped\",[12512]],[[65426,65426],\"mapped\",[12513]],[[65427,65427],\"mapped\",[12514]],[[65428,65428],\"mapped\",[12516]],[[65429,65429],\"mapped\",[12518]],[[65430,65430],\"mapped\",[12520]],[[65431,65431],\"mapped\",[12521]],[[65432,65432],\"mapped\",[12522]],[[65433,65433],\"mapped\",[12523]],[[65434,65434],\"mapped\",[12524]],[[65435,65435],\"mapped\",[12525]],[[65436,65436],\"mapped\",[12527]],[[65437,65437],\"mapped\",[12531]],[[65438,65438],\"mapped\",[12441]],[[65439,65439],\"mapped\",[12442]],[[65440,65440],\"disallowed\"],[[65441,65441],\"mapped\",[4352]],[[65442,65442],\"mapped\",[4353]],[[65443,65443],\"mapped\",[4522]],[[65444,65444],\"mapped\",[4354]],[[65445,65445],\"mapped\",[4524]],[[65446,65446],\"mapped\",[4525]],[[65447,65447],\"mapped\",[4355]],[[65448,65448],\"mapped\",[4356]],[[65449,65449],\"mapped\",[4357]],[[65450,65450],\"mapped\",[4528]],[[65451,65451],\"mapped\",[4529]],[[65452,65452],\"mapped\",[4530]],[[65453,65453],\"mapped\",[4531]],[[65454,65454],\"mapped\",[4532]],[[65455,65455],\"mapped\",[4533]],[[65456,65456],\"mapped\",[4378]],[[65457,65457],\"mapped\",[4358]],[[65458,65458],\"mapped\",[4359]],[[65459,65459],\"mapped\",[4360]],[[65460,65460],\"mapped\",[4385]],[[65461,65461],\"mapped\",[4361]],[[65462,65462],\"mapped\",[4362]],[[65463,65463],\"mapped\",[4363]],[[65464,65464],\"mapped\",[4364]],[[65465,65465],\"mapped\",[4365]],[[65466,65466],\"mapped\",[4366]],[[65467,65467],\"mapped\",[4367]],[[65468,65468],\"mapped\",[4368]],[[65469,65469],\"mapped\",[4369]],[[65470,65470],\"mapped\",[4370]],[[65471,65473],\"disallowed\"],[[65474,65474],\"mapped\",[4449]],[[65475,65475],\"mapped\",[4450]],[[65476,65476],\"mapped\",[4451]],[[65477,65477],\"mapped\",[4452]],[[65478,65478],\"mapped\",[4453]],[[65479,65479],\"mapped\",[4454]],[[65480,65481],\"disallowed\"],[[65482,65482],\"mapped\",[4455]],[[65483,65483],\"mapped\",[4456]],[[65484,65484],\"mapped\",[4457]],[[65485,65485],\"mapped\",[4458]],[[65486,65486],\"mapped\",[4459]],[[65487,65487],\"mapped\",[4460]],[[65488,65489],\"disallowed\"],[[65490,65490],\"mapped\",[4461]],[[65491,65491],\"mapped\",[4462]],[[65492,65492],\"mapped\",[4463]],[[65493,65493],\"mapped\",[4464]],[[65494,65494],\"mapped\",[4465]],[[65495,65495],\"mapped\",[4466]],[[65496,65497],\"disallowed\"],[[65498,65498],\"mapped\",[4467]],[[65499,65499],\"mapped\",[4468]],[[65500,65500],\"mapped\",[4469]],[[65501,65503],\"disallowed\"],[[65504,65504],\"mapped\",[162]],[[65505,65505],\"mapped\",[163]],[[65506,65506],\"mapped\",[172]],[[65507,65507],\"disallowed_STD3_mapped\",[32,772]],[[65508,65508],\"mapped\",[166]],[[65509,65509],\"mapped\",[165]],[[65510,65510],\"mapped\",[8361]],[[65511,65511],\"disallowed\"],[[65512,65512],\"mapped\",[9474]],[[65513,65513],\"mapped\",[8592]],[[65514,65514],\"mapped\",[8593]],[[65515,65515],\"mapped\",[8594]],[[65516,65516],\"mapped\",[8595]],[[65517,65517],\"mapped\",[9632]],[[65518,65518],\"mapped\",[9675]],[[65519,65528],\"disallowed\"],[[65529,65531],\"disallowed\"],[[65532,65532],\"disallowed\"],[[65533,65533],\"disallowed\"],[[65534,65535],\"disallowed\"],[[65536,65547],\"valid\"],[[65548,65548],\"disallowed\"],[[65549,65574],\"valid\"],[[65575,65575],\"disallowed\"],[[65576,65594],\"valid\"],[[65595,65595],\"disallowed\"],[[65596,65597],\"valid\"],[[65598,65598],\"disallowed\"],[[65599,65613],\"valid\"],[[65614,65615],\"disallowed\"],[[65616,65629],\"valid\"],[[65630,65663],\"disallowed\"],[[65664,65786],\"valid\"],[[65787,65791],\"disallowed\"],[[65792,65794],\"valid\",[],\"NV8\"],[[65795,65798],\"disallowed\"],[[65799,65843],\"valid\",[],\"NV8\"],[[65844,65846],\"disallowed\"],[[65847,65855],\"valid\",[],\"NV8\"],[[65856,65930],\"valid\",[],\"NV8\"],[[65931,65932],\"valid\",[],\"NV8\"],[[65933,65935],\"disallowed\"],[[65936,65947],\"valid\",[],\"NV8\"],[[65948,65951],\"disallowed\"],[[65952,65952],\"valid\",[],\"NV8\"],[[65953,65999],\"disallowed\"],[[66000,66044],\"valid\",[],\"NV8\"],[[66045,66045],\"valid\"],[[66046,66175],\"disallowed\"],[[66176,66204],\"valid\"],[[66205,66207],\"disallowed\"],[[66208,66256],\"valid\"],[[66257,66271],\"disallowed\"],[[66272,66272],\"valid\"],[[66273,66299],\"valid\",[],\"NV8\"],[[66300,66303],\"disallowed\"],[[66304,66334],\"valid\"],[[66335,66335],\"valid\"],[[66336,66339],\"valid\",[],\"NV8\"],[[66340,66351],\"disallowed\"],[[66352,66368],\"valid\"],[[66369,66369],\"valid\",[],\"NV8\"],[[66370,66377],\"valid\"],[[66378,66378],\"valid\",[],\"NV8\"],[[66379,66383],\"disallowed\"],[[66384,66426],\"valid\"],[[66427,66431],\"disallowed\"],[[66432,66461],\"valid\"],[[66462,66462],\"disallowed\"],[[66463,66463],\"valid\",[],\"NV8\"],[[66464,66499],\"valid\"],[[66500,66503],\"disallowed\"],[[66504,66511],\"valid\"],[[66512,66517],\"valid\",[],\"NV8\"],[[66518,66559],\"disallowed\"],[[66560,66560],\"mapped\",[66600]],[[66561,66561],\"mapped\",[66601]],[[66562,66562],\"mapped\",[66602]],[[66563,66563],\"mapped\",[66603]],[[66564,66564],\"mapped\",[66604]],[[66565,66565],\"mapped\",[66605]],[[66566,66566],\"mapped\",[66606]],[[66567,66567],\"mapped\",[66607]],[[66568,66568],\"mapped\",[66608]],[[66569,66569],\"mapped\",[66609]],[[66570,66570],\"mapped\",[66610]],[[66571,66571],\"mapped\",[66611]],[[66572,66572],\"mapped\",[66612]],[[66573,66573],\"mapped\",[66613]],[[66574,66574],\"mapped\",[66614]],[[66575,66575],\"mapped\",[66615]],[[66576,66576],\"mapped\",[66616]],[[66577,66577],\"mapped\",[66617]],[[66578,66578],\"mapped\",[66618]],[[66579,66579],\"mapped\",[66619]],[[66580,66580],\"mapped\",[66620]],[[66581,66581],\"mapped\",[66621]],[[66582,66582],\"mapped\",[66622]],[[66583,66583],\"mapped\",[66623]],[[66584,66584],\"mapped\",[66624]],[[66585,66585],\"mapped\",[66625]],[[66586,66586],\"mapped\",[66626]],[[66587,66587],\"mapped\",[66627]],[[66588,66588],\"mapped\",[66628]],[[66589,66589],\"mapped\",[66629]],[[66590,66590],\"mapped\",[66630]],[[66591,66591],\"mapped\",[66631]],[[66592,66592],\"mapped\",[66632]],[[66593,66593],\"mapped\",[66633]],[[66594,66594],\"mapped\",[66634]],[[66595,66595],\"mapped\",[66635]],[[66596,66596],\"mapped\",[66636]],[[66597,66597],\"mapped\",[66637]],[[66598,66598],\"mapped\",[66638]],[[66599,66599],\"mapped\",[66639]],[[66600,66637],\"valid\"],[[66638,66717],\"valid\"],[[66718,66719],\"disallowed\"],[[66720,66729],\"valid\"],[[66730,66815],\"disallowed\"],[[66816,66855],\"valid\"],[[66856,66863],\"disallowed\"],[[66864,66915],\"valid\"],[[66916,66926],\"disallowed\"],[[66927,66927],\"valid\",[],\"NV8\"],[[66928,67071],\"disallowed\"],[[67072,67382],\"valid\"],[[67383,67391],\"disallowed\"],[[67392,67413],\"valid\"],[[67414,67423],\"disallowed\"],[[67424,67431],\"valid\"],[[67432,67583],\"disallowed\"],[[67584,67589],\"valid\"],[[67590,67591],\"disallowed\"],[[67592,67592],\"valid\"],[[67593,67593],\"disallowed\"],[[67594,67637],\"valid\"],[[67638,67638],\"disallowed\"],[[67639,67640],\"valid\"],[[67641,67643],\"disallowed\"],[[67644,67644],\"valid\"],[[67645,67646],\"disallowed\"],[[67647,67647],\"valid\"],[[67648,67669],\"valid\"],[[67670,67670],\"disallowed\"],[[67671,67679],\"valid\",[],\"NV8\"],[[67680,67702],\"valid\"],[[67703,67711],\"valid\",[],\"NV8\"],[[67712,67742],\"valid\"],[[67743,67750],\"disallowed\"],[[67751,67759],\"valid\",[],\"NV8\"],[[67760,67807],\"disallowed\"],[[67808,67826],\"valid\"],[[67827,67827],\"disallowed\"],[[67828,67829],\"valid\"],[[67830,67834],\"disallowed\"],[[67835,67839],\"valid\",[],\"NV8\"],[[67840,67861],\"valid\"],[[67862,67865],\"valid\",[],\"NV8\"],[[67866,67867],\"valid\",[],\"NV8\"],[[67868,67870],\"disallowed\"],[[67871,67871],\"valid\",[],\"NV8\"],[[67872,67897],\"valid\"],[[67898,67902],\"disallowed\"],[[67903,67903],\"valid\",[],\"NV8\"],[[67904,67967],\"disallowed\"],[[67968,68023],\"valid\"],[[68024,68027],\"disallowed\"],[[68028,68029],\"valid\",[],\"NV8\"],[[68030,68031],\"valid\"],[[68032,68047],\"valid\",[],\"NV8\"],[[68048,68049],\"disallowed\"],[[68050,68095],\"valid\",[],\"NV8\"],[[68096,68099],\"valid\"],[[68100,68100],\"disallowed\"],[[68101,68102],\"valid\"],[[68103,68107],\"disallowed\"],[[68108,68115],\"valid\"],[[68116,68116],\"disallowed\"],[[68117,68119],\"valid\"],[[68120,68120],\"disallowed\"],[[68121,68147],\"valid\"],[[68148,68151],\"disallowed\"],[[68152,68154],\"valid\"],[[68155,68158],\"disallowed\"],[[68159,68159],\"valid\"],[[68160,68167],\"valid\",[],\"NV8\"],[[68168,68175],\"disallowed\"],[[68176,68184],\"valid\",[],\"NV8\"],[[68185,68191],\"disallowed\"],[[68192,68220],\"valid\"],[[68221,68223],\"valid\",[],\"NV8\"],[[68224,68252],\"valid\"],[[68253,68255],\"valid\",[],\"NV8\"],[[68256,68287],\"disallowed\"],[[68288,68295],\"valid\"],[[68296,68296],\"valid\",[],\"NV8\"],[[68297,68326],\"valid\"],[[68327,68330],\"disallowed\"],[[68331,68342],\"valid\",[],\"NV8\"],[[68343,68351],\"disallowed\"],[[68352,68405],\"valid\"],[[68406,68408],\"disallowed\"],[[68409,68415],\"valid\",[],\"NV8\"],[[68416,68437],\"valid\"],[[68438,68439],\"disallowed\"],[[68440,68447],\"valid\",[],\"NV8\"],[[68448,68466],\"valid\"],[[68467,68471],\"disallowed\"],[[68472,68479],\"valid\",[],\"NV8\"],[[68480,68497],\"valid\"],[[68498,68504],\"disallowed\"],[[68505,68508],\"valid\",[],\"NV8\"],[[68509,68520],\"disallowed\"],[[68521,68527],\"valid\",[],\"NV8\"],[[68528,68607],\"disallowed\"],[[68608,68680],\"valid\"],[[68681,68735],\"disallowed\"],[[68736,68736],\"mapped\",[68800]],[[68737,68737],\"mapped\",[68801]],[[68738,68738],\"mapped\",[68802]],[[68739,68739],\"mapped\",[68803]],[[68740,68740],\"mapped\",[68804]],[[68741,68741],\"mapped\",[68805]],[[68742,68742],\"mapped\",[68806]],[[68743,68743],\"mapped\",[68807]],[[68744,68744],\"mapped\",[68808]],[[68745,68745],\"mapped\",[68809]],[[68746,68746],\"mapped\",[68810]],[[68747,68747],\"mapped\",[68811]],[[68748,68748],\"mapped\",[68812]],[[68749,68749],\"mapped\",[68813]],[[68750,68750],\"mapped\",[68814]],[[68751,68751],\"mapped\",[68815]],[[68752,68752],\"mapped\",[68816]],[[68753,68753],\"mapped\",[68817]],[[68754,68754],\"mapped\",[68818]],[[68755,68755],\"mapped\",[68819]],[[68756,68756],\"mapped\",[68820]],[[68757,68757],\"mapped\",[68821]],[[68758,68758],\"mapped\",[68822]],[[68759,68759],\"mapped\",[68823]],[[68760,68760],\"mapped\",[68824]],[[68761,68761],\"mapped\",[68825]],[[68762,68762],\"mapped\",[68826]],[[68763,68763],\"mapped\",[68827]],[[68764,68764],\"mapped\",[68828]],[[68765,68765],\"mapped\",[68829]],[[68766,68766],\"mapped\",[68830]],[[68767,68767],\"mapped\",[68831]],[[68768,68768],\"mapped\",[68832]],[[68769,68769],\"mapped\",[68833]],[[68770,68770],\"mapped\",[68834]],[[68771,68771],\"mapped\",[68835]],[[68772,68772],\"mapped\",[68836]],[[68773,68773],\"mapped\",[68837]],[[68774,68774],\"mapped\",[68838]],[[68775,68775],\"mapped\",[68839]],[[68776,68776],\"mapped\",[68840]],[[68777,68777],\"mapped\",[68841]],[[68778,68778],\"mapped\",[68842]],[[68779,68779],\"mapped\",[68843]],[[68780,68780],\"mapped\",[68844]],[[68781,68781],\"mapped\",[68845]],[[68782,68782],\"mapped\",[68846]],[[68783,68783],\"mapped\",[68847]],[[68784,68784],\"mapped\",[68848]],[[68785,68785],\"mapped\",[68849]],[[68786,68786],\"mapped\",[68850]],[[68787,68799],\"disallowed\"],[[68800,68850],\"valid\"],[[68851,68857],\"disallowed\"],[[68858,68863],\"valid\",[],\"NV8\"],[[68864,69215],\"disallowed\"],[[69216,69246],\"valid\",[],\"NV8\"],[[69247,69631],\"disallowed\"],[[69632,69702],\"valid\"],[[69703,69709],\"valid\",[],\"NV8\"],[[69710,69713],\"disallowed\"],[[69714,69733],\"valid\",[],\"NV8\"],[[69734,69743],\"valid\"],[[69744,69758],\"disallowed\"],[[69759,69759],\"valid\"],[[69760,69818],\"valid\"],[[69819,69820],\"valid\",[],\"NV8\"],[[69821,69821],\"disallowed\"],[[69822,69825],\"valid\",[],\"NV8\"],[[69826,69839],\"disallowed\"],[[69840,69864],\"valid\"],[[69865,69871],\"disallowed\"],[[69872,69881],\"valid\"],[[69882,69887],\"disallowed\"],[[69888,69940],\"valid\"],[[69941,69941],\"disallowed\"],[[69942,69951],\"valid\"],[[69952,69955],\"valid\",[],\"NV8\"],[[69956,69967],\"disallowed\"],[[69968,70003],\"valid\"],[[70004,70005],\"valid\",[],\"NV8\"],[[70006,70006],\"valid\"],[[70007,70015],\"disallowed\"],[[70016,70084],\"valid\"],[[70085,70088],\"valid\",[],\"NV8\"],[[70089,70089],\"valid\",[],\"NV8\"],[[70090,70092],\"valid\"],[[70093,70093],\"valid\",[],\"NV8\"],[[70094,70095],\"disallowed\"],[[70096,70105],\"valid\"],[[70106,70106],\"valid\"],[[70107,70107],\"valid\",[],\"NV8\"],[[70108,70108],\"valid\"],[[70109,70111],\"valid\",[],\"NV8\"],[[70112,70112],\"disallowed\"],[[70113,70132],\"valid\",[],\"NV8\"],[[70133,70143],\"disallowed\"],[[70144,70161],\"valid\"],[[70162,70162],\"disallowed\"],[[70163,70199],\"valid\"],[[70200,70205],\"valid\",[],\"NV8\"],[[70206,70271],\"disallowed\"],[[70272,70278],\"valid\"],[[70279,70279],\"disallowed\"],[[70280,70280],\"valid\"],[[70281,70281],\"disallowed\"],[[70282,70285],\"valid\"],[[70286,70286],\"disallowed\"],[[70287,70301],\"valid\"],[[70302,70302],\"disallowed\"],[[70303,70312],\"valid\"],[[70313,70313],\"valid\",[],\"NV8\"],[[70314,70319],\"disallowed\"],[[70320,70378],\"valid\"],[[70379,70383],\"disallowed\"],[[70384,70393],\"valid\"],[[70394,70399],\"disallowed\"],[[70400,70400],\"valid\"],[[70401,70403],\"valid\"],[[70404,70404],\"disallowed\"],[[70405,70412],\"valid\"],[[70413,70414],\"disallowed\"],[[70415,70416],\"valid\"],[[70417,70418],\"disallowed\"],[[70419,70440],\"valid\"],[[70441,70441],\"disallowed\"],[[70442,70448],\"valid\"],[[70449,70449],\"disallowed\"],[[70450,70451],\"valid\"],[[70452,70452],\"disallowed\"],[[70453,70457],\"valid\"],[[70458,70459],\"disallowed\"],[[70460,70468],\"valid\"],[[70469,70470],\"disallowed\"],[[70471,70472],\"valid\"],[[70473,70474],\"disallowed\"],[[70475,70477],\"valid\"],[[70478,70479],\"disallowed\"],[[70480,70480],\"valid\"],[[70481,70486],\"disallowed\"],[[70487,70487],\"valid\"],[[70488,70492],\"disallowed\"],[[70493,70499],\"valid\"],[[70500,70501],\"disallowed\"],[[70502,70508],\"valid\"],[[70509,70511],\"disallowed\"],[[70512,70516],\"valid\"],[[70517,70783],\"disallowed\"],[[70784,70853],\"valid\"],[[70854,70854],\"valid\",[],\"NV8\"],[[70855,70855],\"valid\"],[[70856,70863],\"disallowed\"],[[70864,70873],\"valid\"],[[70874,71039],\"disallowed\"],[[71040,71093],\"valid\"],[[71094,71095],\"disallowed\"],[[71096,71104],\"valid\"],[[71105,71113],\"valid\",[],\"NV8\"],[[71114,71127],\"valid\",[],\"NV8\"],[[71128,71133],\"valid\"],[[71134,71167],\"disallowed\"],[[71168,71232],\"valid\"],[[71233,71235],\"valid\",[],\"NV8\"],[[71236,71236],\"valid\"],[[71237,71247],\"disallowed\"],[[71248,71257],\"valid\"],[[71258,71295],\"disallowed\"],[[71296,71351],\"valid\"],[[71352,71359],\"disallowed\"],[[71360,71369],\"valid\"],[[71370,71423],\"disallowed\"],[[71424,71449],\"valid\"],[[71450,71452],\"disallowed\"],[[71453,71467],\"valid\"],[[71468,71471],\"disallowed\"],[[71472,71481],\"valid\"],[[71482,71487],\"valid\",[],\"NV8\"],[[71488,71839],\"disallowed\"],[[71840,71840],\"mapped\",[71872]],[[71841,71841],\"mapped\",[71873]],[[71842,71842],\"mapped\",[71874]],[[71843,71843],\"mapped\",[71875]],[[71844,71844],\"mapped\",[71876]],[[71845,71845],\"mapped\",[71877]],[[71846,71846],\"mapped\",[71878]],[[71847,71847],\"mapped\",[71879]],[[71848,71848],\"mapped\",[71880]],[[71849,71849],\"mapped\",[71881]],[[71850,71850],\"mapped\",[71882]],[[71851,71851],\"mapped\",[71883]],[[71852,71852],\"mapped\",[71884]],[[71853,71853],\"mapped\",[71885]],[[71854,71854],\"mapped\",[71886]],[[71855,71855],\"mapped\",[71887]],[[71856,71856],\"mapped\",[71888]],[[71857,71857],\"mapped\",[71889]],[[71858,71858],\"mapped\",[71890]],[[71859,71859],\"mapped\",[71891]],[[71860,71860],\"mapped\",[71892]],[[71861,71861],\"mapped\",[71893]],[[71862,71862],\"mapped\",[71894]],[[71863,71863],\"mapped\",[71895]],[[71864,71864],\"mapped\",[71896]],[[71865,71865],\"mapped\",[71897]],[[71866,71866],\"mapped\",[71898]],[[71867,71867],\"mapped\",[71899]],[[71868,71868],\"mapped\",[71900]],[[71869,71869],\"mapped\",[71901]],[[71870,71870],\"mapped\",[71902]],[[71871,71871],\"mapped\",[71903]],[[71872,71913],\"valid\"],[[71914,71922],\"valid\",[],\"NV8\"],[[71923,71934],\"disallowed\"],[[71935,71935],\"valid\"],[[71936,72383],\"disallowed\"],[[72384,72440],\"valid\"],[[72441,73727],\"disallowed\"],[[73728,74606],\"valid\"],[[74607,74648],\"valid\"],[[74649,74649],\"valid\"],[[74650,74751],\"disallowed\"],[[74752,74850],\"valid\",[],\"NV8\"],[[74851,74862],\"valid\",[],\"NV8\"],[[74863,74863],\"disallowed\"],[[74864,74867],\"valid\",[],\"NV8\"],[[74868,74868],\"valid\",[],\"NV8\"],[[74869,74879],\"disallowed\"],[[74880,75075],\"valid\"],[[75076,77823],\"disallowed\"],[[77824,78894],\"valid\"],[[78895,82943],\"disallowed\"],[[82944,83526],\"valid\"],[[83527,92159],\"disallowed\"],[[92160,92728],\"valid\"],[[92729,92735],\"disallowed\"],[[92736,92766],\"valid\"],[[92767,92767],\"disallowed\"],[[92768,92777],\"valid\"],[[92778,92781],\"disallowed\"],[[92782,92783],\"valid\",[],\"NV8\"],[[92784,92879],\"disallowed\"],[[92880,92909],\"valid\"],[[92910,92911],\"disallowed\"],[[92912,92916],\"valid\"],[[92917,92917],\"valid\",[],\"NV8\"],[[92918,92927],\"disallowed\"],[[92928,92982],\"valid\"],[[92983,92991],\"valid\",[],\"NV8\"],[[92992,92995],\"valid\"],[[92996,92997],\"valid\",[],\"NV8\"],[[92998,93007],\"disallowed\"],[[93008,93017],\"valid\"],[[93018,93018],\"disallowed\"],[[93019,93025],\"valid\",[],\"NV8\"],[[93026,93026],\"disallowed\"],[[93027,93047],\"valid\"],[[93048,93052],\"disallowed\"],[[93053,93071],\"valid\"],[[93072,93951],\"disallowed\"],[[93952,94020],\"valid\"],[[94021,94031],\"disallowed\"],[[94032,94078],\"valid\"],[[94079,94094],\"disallowed\"],[[94095,94111],\"valid\"],[[94112,110591],\"disallowed\"],[[110592,110593],\"valid\"],[[110594,113663],\"disallowed\"],[[113664,113770],\"valid\"],[[113771,113775],\"disallowed\"],[[113776,113788],\"valid\"],[[113789,113791],\"disallowed\"],[[113792,113800],\"valid\"],[[113801,113807],\"disallowed\"],[[113808,113817],\"valid\"],[[113818,113819],\"disallowed\"],[[113820,113820],\"valid\",[],\"NV8\"],[[113821,113822],\"valid\"],[[113823,113823],\"valid\",[],\"NV8\"],[[113824,113827],\"ignored\"],[[113828,118783],\"disallowed\"],[[118784,119029],\"valid\",[],\"NV8\"],[[119030,119039],\"disallowed\"],[[119040,119078],\"valid\",[],\"NV8\"],[[119079,119080],\"disallowed\"],[[119081,119081],\"valid\",[],\"NV8\"],[[119082,119133],\"valid\",[],\"NV8\"],[[119134,119134],\"mapped\",[119127,119141]],[[119135,119135],\"mapped\",[119128,119141]],[[119136,119136],\"mapped\",[119128,119141,119150]],[[119137,119137],\"mapped\",[119128,119141,119151]],[[119138,119138],\"mapped\",[119128,119141,119152]],[[119139,119139],\"mapped\",[119128,119141,119153]],[[119140,119140],\"mapped\",[119128,119141,119154]],[[119141,119154],\"valid\",[],\"NV8\"],[[119155,119162],\"disallowed\"],[[119163,119226],\"valid\",[],\"NV8\"],[[119227,119227],\"mapped\",[119225,119141]],[[119228,119228],\"mapped\",[119226,119141]],[[119229,119229],\"mapped\",[119225,119141,119150]],[[119230,119230],\"mapped\",[119226,119141,119150]],[[119231,119231],\"mapped\",[119225,119141,119151]],[[119232,119232],\"mapped\",[119226,119141,119151]],[[119233,119261],\"valid\",[],\"NV8\"],[[119262,119272],\"valid\",[],\"NV8\"],[[119273,119295],\"disallowed\"],[[119296,119365],\"valid\",[],\"NV8\"],[[119366,119551],\"disallowed\"],[[119552,119638],\"valid\",[],\"NV8\"],[[119639,119647],\"disallowed\"],[[119648,119665],\"valid\",[],\"NV8\"],[[119666,119807],\"disallowed\"],[[119808,119808],\"mapped\",[97]],[[119809,119809],\"mapped\",[98]],[[119810,119810],\"mapped\",[99]],[[119811,119811],\"mapped\",[100]],[[119812,119812],\"mapped\",[101]],[[119813,119813],\"mapped\",[102]],[[119814,119814],\"mapped\",[103]],[[119815,119815],\"mapped\",[104]],[[119816,119816],\"mapped\",[105]],[[119817,119817],\"mapped\",[106]],[[119818,119818],\"mapped\",[107]],[[119819,119819],\"mapped\",[108]],[[119820,119820],\"mapped\",[109]],[[119821,119821],\"mapped\",[110]],[[119822,119822],\"mapped\",[111]],[[119823,119823],\"mapped\",[112]],[[119824,119824],\"mapped\",[113]],[[119825,119825],\"mapped\",[114]],[[119826,119826],\"mapped\",[115]],[[119827,119827],\"mapped\",[116]],[[119828,119828],\"mapped\",[117]],[[119829,119829],\"mapped\",[118]],[[119830,119830],\"mapped\",[119]],[[119831,119831],\"mapped\",[120]],[[119832,119832],\"mapped\",[121]],[[119833,119833],\"mapped\",[122]],[[119834,119834],\"mapped\",[97]],[[119835,119835],\"mapped\",[98]],[[119836,119836],\"mapped\",[99]],[[119837,119837],\"mapped\",[100]],[[119838,119838],\"mapped\",[101]],[[119839,119839],\"mapped\",[102]],[[119840,119840],\"mapped\",[103]],[[119841,119841],\"mapped\",[104]],[[119842,119842],\"mapped\",[105]],[[119843,119843],\"mapped\",[106]],[[119844,119844],\"mapped\",[107]],[[119845,119845],\"mapped\",[108]],[[119846,119846],\"mapped\",[109]],[[119847,119847],\"mapped\",[110]],[[119848,119848],\"mapped\",[111]],[[119849,119849],\"mapped\",[112]],[[119850,119850],\"mapped\",[113]],[[119851,119851],\"mapped\",[114]],[[119852,119852],\"mapped\",[115]],[[119853,119853],\"mapped\",[116]],[[119854,119854],\"mapped\",[117]],[[119855,119855],\"mapped\",[118]],[[119856,119856],\"mapped\",[119]],[[119857,119857],\"mapped\",[120]],[[119858,119858],\"mapped\",[121]],[[119859,119859],\"mapped\",[122]],[[119860,119860],\"mapped\",[97]],[[119861,119861],\"mapped\",[98]],[[119862,119862],\"mapped\",[99]],[[119863,119863],\"mapped\",[100]],[[119864,119864],\"mapped\",[101]],[[119865,119865],\"mapped\",[102]],[[119866,119866],\"mapped\",[103]],[[119867,119867],\"mapped\",[104]],[[119868,119868],\"mapped\",[105]],[[119869,119869],\"mapped\",[106]],[[119870,119870],\"mapped\",[107]],[[119871,119871],\"mapped\",[108]],[[119872,119872],\"mapped\",[109]],[[119873,119873],\"mapped\",[110]],[[119874,119874],\"mapped\",[111]],[[119875,119875],\"mapped\",[112]],[[119876,119876],\"mapped\",[113]],[[119877,119877],\"mapped\",[114]],[[119878,119878],\"mapped\",[115]],[[119879,119879],\"mapped\",[116]],[[119880,119880],\"mapped\",[117]],[[119881,119881],\"mapped\",[118]],[[119882,119882],\"mapped\",[119]],[[119883,119883],\"mapped\",[120]],[[119884,119884],\"mapped\",[121]],[[119885,119885],\"mapped\",[122]],[[119886,119886],\"mapped\",[97]],[[119887,119887],\"mapped\",[98]],[[119888,119888],\"mapped\",[99]],[[119889,119889],\"mapped\",[100]],[[119890,119890],\"mapped\",[101]],[[119891,119891],\"mapped\",[102]],[[119892,119892],\"mapped\",[103]],[[119893,119893],\"disallowed\"],[[119894,119894],\"mapped\",[105]],[[119895,119895],\"mapped\",[106]],[[119896,119896],\"mapped\",[107]],[[119897,119897],\"mapped\",[108]],[[119898,119898],\"mapped\",[109]],[[119899,119899],\"mapped\",[110]],[[119900,119900],\"mapped\",[111]],[[119901,119901],\"mapped\",[112]],[[119902,119902],\"mapped\",[113]],[[119903,119903],\"mapped\",[114]],[[119904,119904],\"mapped\",[115]],[[119905,119905],\"mapped\",[116]],[[119906,119906],\"mapped\",[117]],[[119907,119907],\"mapped\",[118]],[[119908,119908],\"mapped\",[119]],[[119909,119909],\"mapped\",[120]],[[119910,119910],\"mapped\",[121]],[[119911,119911],\"mapped\",[122]],[[119912,119912],\"mapped\",[97]],[[119913,119913],\"mapped\",[98]],[[119914,119914],\"mapped\",[99]],[[119915,119915],\"mapped\",[100]],[[119916,119916],\"mapped\",[101]],[[119917,119917],\"mapped\",[102]],[[119918,119918],\"mapped\",[103]],[[119919,119919],\"mapped\",[104]],[[119920,119920],\"mapped\",[105]],[[119921,119921],\"mapped\",[106]],[[119922,119922],\"mapped\",[107]],[[119923,119923],\"mapped\",[108]],[[119924,119924],\"mapped\",[109]],[[119925,119925],\"mapped\",[110]],[[119926,119926],\"mapped\",[111]],[[119927,119927],\"mapped\",[112]],[[119928,119928],\"mapped\",[113]],[[119929,119929],\"mapped\",[114]],[[119930,119930],\"mapped\",[115]],[[119931,119931],\"mapped\",[116]],[[119932,119932],\"mapped\",[117]],[[119933,119933],\"mapped\",[118]],[[119934,119934],\"mapped\",[119]],[[119935,119935],\"mapped\",[120]],[[119936,119936],\"mapped\",[121]],[[119937,119937],\"mapped\",[122]],[[119938,119938],\"mapped\",[97]],[[119939,119939],\"mapped\",[98]],[[119940,119940],\"mapped\",[99]],[[119941,119941],\"mapped\",[100]],[[119942,119942],\"mapped\",[101]],[[119943,119943],\"mapped\",[102]],[[119944,119944],\"mapped\",[103]],[[119945,119945],\"mapped\",[104]],[[119946,119946],\"mapped\",[105]],[[119947,119947],\"mapped\",[106]],[[119948,119948],\"mapped\",[107]],[[119949,119949],\"mapped\",[108]],[[119950,119950],\"mapped\",[109]],[[119951,119951],\"mapped\",[110]],[[119952,119952],\"mapped\",[111]],[[119953,119953],\"mapped\",[112]],[[119954,119954],\"mapped\",[113]],[[119955,119955],\"mapped\",[114]],[[119956,119956],\"mapped\",[115]],[[119957,119957],\"mapped\",[116]],[[119958,119958],\"mapped\",[117]],[[119959,119959],\"mapped\",[118]],[[119960,119960],\"mapped\",[119]],[[119961,119961],\"mapped\",[120]],[[119962,119962],\"mapped\",[121]],[[119963,119963],\"mapped\",[122]],[[119964,119964],\"mapped\",[97]],[[119965,119965],\"disallowed\"],[[119966,119966],\"mapped\",[99]],[[119967,119967],\"mapped\",[100]],[[119968,119969],\"disallowed\"],[[119970,119970],\"mapped\",[103]],[[119971,119972],\"disallowed\"],[[119973,119973],\"mapped\",[106]],[[119974,119974],\"mapped\",[107]],[[119975,119976],\"disallowed\"],[[119977,119977],\"mapped\",[110]],[[119978,119978],\"mapped\",[111]],[[119979,119979],\"mapped\",[112]],[[119980,119980],\"mapped\",[113]],[[119981,119981],\"disallowed\"],[[119982,119982],\"mapped\",[115]],[[119983,119983],\"mapped\",[116]],[[119984,119984],\"mapped\",[117]],[[119985,119985],\"mapped\",[118]],[[119986,119986],\"mapped\",[119]],[[119987,119987],\"mapped\",[120]],[[119988,119988],\"mapped\",[121]],[[119989,119989],\"mapped\",[122]],[[119990,119990],\"mapped\",[97]],[[119991,119991],\"mapped\",[98]],[[119992,119992],\"mapped\",[99]],[[119993,119993],\"mapped\",[100]],[[119994,119994],\"disallowed\"],[[119995,119995],\"mapped\",[102]],[[119996,119996],\"disallowed\"],[[119997,119997],\"mapped\",[104]],[[119998,119998],\"mapped\",[105]],[[119999,119999],\"mapped\",[106]],[[120000,120000],\"mapped\",[107]],[[120001,120001],\"mapped\",[108]],[[120002,120002],\"mapped\",[109]],[[120003,120003],\"mapped\",[110]],[[120004,120004],\"disallowed\"],[[120005,120005],\"mapped\",[112]],[[120006,120006],\"mapped\",[113]],[[120007,120007],\"mapped\",[114]],[[120008,120008],\"mapped\",[115]],[[120009,120009],\"mapped\",[116]],[[120010,120010],\"mapped\",[117]],[[120011,120011],\"mapped\",[118]],[[120012,120012],\"mapped\",[119]],[[120013,120013],\"mapped\",[120]],[[120014,120014],\"mapped\",[121]],[[120015,120015],\"mapped\",[122]],[[120016,120016],\"mapped\",[97]],[[120017,120017],\"mapped\",[98]],[[120018,120018],\"mapped\",[99]],[[120019,120019],\"mapped\",[100]],[[120020,120020],\"mapped\",[101]],[[120021,120021],\"mapped\",[102]],[[120022,120022],\"mapped\",[103]],[[120023,120023],\"mapped\",[104]],[[120024,120024],\"mapped\",[105]],[[120025,120025],\"mapped\",[106]],[[120026,120026],\"mapped\",[107]],[[120027,120027],\"mapped\",[108]],[[120028,120028],\"mapped\",[109]],[[120029,120029],\"mapped\",[110]],[[120030,120030],\"mapped\",[111]],[[120031,120031],\"mapped\",[112]],[[120032,120032],\"mapped\",[113]],[[120033,120033],\"mapped\",[114]],[[120034,120034],\"mapped\",[115]],[[120035,120035],\"mapped\",[116]],[[120036,120036],\"mapped\",[117]],[[120037,120037],\"mapped\",[118]],[[120038,120038],\"mapped\",[119]],[[120039,120039],\"mapped\",[120]],[[120040,120040],\"mapped\",[121]],[[120041,120041],\"mapped\",[122]],[[120042,120042],\"mapped\",[97]],[[120043,120043],\"mapped\",[98]],[[120044,120044],\"mapped\",[99]],[[120045,120045],\"mapped\",[100]],[[120046,120046],\"mapped\",[101]],[[120047,120047],\"mapped\",[102]],[[120048,120048],\"mapped\",[103]],[[120049,120049],\"mapped\",[104]],[[120050,120050],\"mapped\",[105]],[[120051,120051],\"mapped\",[106]],[[120052,120052],\"mapped\",[107]],[[120053,120053],\"mapped\",[108]],[[120054,120054],\"mapped\",[109]],[[120055,120055],\"mapped\",[110]],[[120056,120056],\"mapped\",[111]],[[120057,120057],\"mapped\",[112]],[[120058,120058],\"mapped\",[113]],[[120059,120059],\"mapped\",[114]],[[120060,120060],\"mapped\",[115]],[[120061,120061],\"mapped\",[116]],[[120062,120062],\"mapped\",[117]],[[120063,120063],\"mapped\",[118]],[[120064,120064],\"mapped\",[119]],[[120065,120065],\"mapped\",[120]],[[120066,120066],\"mapped\",[121]],[[120067,120067],\"mapped\",[122]],[[120068,120068],\"mapped\",[97]],[[120069,120069],\"mapped\",[98]],[[120070,120070],\"disallowed\"],[[120071,120071],\"mapped\",[100]],[[120072,120072],\"mapped\",[101]],[[120073,120073],\"mapped\",[102]],[[120074,120074],\"mapped\",[103]],[[120075,120076],\"disallowed\"],[[120077,120077],\"mapped\",[106]],[[120078,120078],\"mapped\",[107]],[[120079,120079],\"mapped\",[108]],[[120080,120080],\"mapped\",[109]],[[120081,120081],\"mapped\",[110]],[[120082,120082],\"mapped\",[111]],[[120083,120083],\"mapped\",[112]],[[120084,120084],\"mapped\",[113]],[[120085,120085],\"disallowed\"],[[120086,120086],\"mapped\",[115]],[[120087,120087],\"mapped\",[116]],[[120088,120088],\"mapped\",[117]],[[120089,120089],\"mapped\",[118]],[[120090,120090],\"mapped\",[119]],[[120091,120091],\"mapped\",[120]],[[120092,120092],\"mapped\",[121]],[[120093,120093],\"disallowed\"],[[120094,120094],\"mapped\",[97]],[[120095,120095],\"mapped\",[98]],[[120096,120096],\"mapped\",[99]],[[120097,120097],\"mapped\",[100]],[[120098,120098],\"mapped\",[101]],[[120099,120099],\"mapped\",[102]],[[120100,120100],\"mapped\",[103]],[[120101,120101],\"mapped\",[104]],[[120102,120102],\"mapped\",[105]],[[120103,120103],\"mapped\",[106]],[[120104,120104],\"mapped\",[107]],[[120105,120105],\"mapped\",[108]],[[120106,120106],\"mapped\",[109]],[[120107,120107],\"mapped\",[110]],[[120108,120108],\"mapped\",[111]],[[120109,120109],\"mapped\",[112]],[[120110,120110],\"mapped\",[113]],[[120111,120111],\"mapped\",[114]],[[120112,120112],\"mapped\",[115]],[[120113,120113],\"mapped\",[116]],[[120114,120114],\"mapped\",[117]],[[120115,120115],\"mapped\",[118]],[[120116,120116],\"mapped\",[119]],[[120117,120117],\"mapped\",[120]],[[120118,120118],\"mapped\",[121]],[[120119,120119],\"mapped\",[122]],[[120120,120120],\"mapped\",[97]],[[120121,120121],\"mapped\",[98]],[[120122,120122],\"disallowed\"],[[120123,120123],\"mapped\",[100]],[[120124,120124],\"mapped\",[101]],[[120125,120125],\"mapped\",[102]],[[120126,120126],\"mapped\",[103]],[[120127,120127],\"disallowed\"],[[120128,120128],\"mapped\",[105]],[[120129,120129],\"mapped\",[106]],[[120130,120130],\"mapped\",[107]],[[120131,120131],\"mapped\",[108]],[[120132,120132],\"mapped\",[109]],[[120133,120133],\"disallowed\"],[[120134,120134],\"mapped\",[111]],[[120135,120137],\"disallowed\"],[[120138,120138],\"mapped\",[115]],[[120139,120139],\"mapped\",[116]],[[120140,120140],\"mapped\",[117]],[[120141,120141],\"mapped\",[118]],[[120142,120142],\"mapped\",[119]],[[120143,120143],\"mapped\",[120]],[[120144,120144],\"mapped\",[121]],[[120145,120145],\"disallowed\"],[[120146,120146],\"mapped\",[97]],[[120147,120147],\"mapped\",[98]],[[120148,120148],\"mapped\",[99]],[[120149,120149],\"mapped\",[100]],[[120150,120150],\"mapped\",[101]],[[120151,120151],\"mapped\",[102]],[[120152,120152],\"mapped\",[103]],[[120153,120153],\"mapped\",[104]],[[120154,120154],\"mapped\",[105]],[[120155,120155],\"mapped\",[106]],[[120156,120156],\"mapped\",[107]],[[120157,120157],\"mapped\",[108]],[[120158,120158],\"mapped\",[109]],[[120159,120159],\"mapped\",[110]],[[120160,120160],\"mapped\",[111]],[[120161,120161],\"mapped\",[112]],[[120162,120162],\"mapped\",[113]],[[120163,120163],\"mapped\",[114]],[[120164,120164],\"mapped\",[115]],[[120165,120165],\"mapped\",[116]],[[120166,120166],\"mapped\",[117]],[[120167,120167],\"mapped\",[118]],[[120168,120168],\"mapped\",[119]],[[120169,120169],\"mapped\",[120]],[[120170,120170],\"mapped\",[121]],[[120171,120171],\"mapped\",[122]],[[120172,120172],\"mapped\",[97]],[[120173,120173],\"mapped\",[98]],[[120174,120174],\"mapped\",[99]],[[120175,120175],\"mapped\",[100]],[[120176,120176],\"mapped\",[101]],[[120177,120177],\"mapped\",[102]],[[120178,120178],\"mapped\",[103]],[[120179,120179],\"mapped\",[104]],[[120180,120180],\"mapped\",[105]],[[120181,120181],\"mapped\",[106]],[[120182,120182],\"mapped\",[107]],[[120183,120183],\"mapped\",[108]],[[120184,120184],\"mapped\",[109]],[[120185,120185],\"mapped\",[110]],[[120186,120186],\"mapped\",[111]],[[120187,120187],\"mapped\",[112]],[[120188,120188],\"mapped\",[113]],[[120189,120189],\"mapped\",[114]],[[120190,120190],\"mapped\",[115]],[[120191,120191],\"mapped\",[116]],[[120192,120192],\"mapped\",[117]],[[120193,120193],\"mapped\",[118]],[[120194,120194],\"mapped\",[119]],[[120195,120195],\"mapped\",[120]],[[120196,120196],\"mapped\",[121]],[[120197,120197],\"mapped\",[122]],[[120198,120198],\"mapped\",[97]],[[120199,120199],\"mapped\",[98]],[[120200,120200],\"mapped\",[99]],[[120201,120201],\"mapped\",[100]],[[120202,120202],\"mapped\",[101]],[[120203,120203],\"mapped\",[102]],[[120204,120204],\"mapped\",[103]],[[120205,120205],\"mapped\",[104]],[[120206,120206],\"mapped\",[105]],[[120207,120207],\"mapped\",[106]],[[120208,120208],\"mapped\",[107]],[[120209,120209],\"mapped\",[108]],[[120210,120210],\"mapped\",[109]],[[120211,120211],\"mapped\",[110]],[[120212,120212],\"mapped\",[111]],[[120213,120213],\"mapped\",[112]],[[120214,120214],\"mapped\",[113]],[[120215,120215],\"mapped\",[114]],[[120216,120216],\"mapped\",[115]],[[120217,120217],\"mapped\",[116]],[[120218,120218],\"mapped\",[117]],[[120219,120219],\"mapped\",[118]],[[120220,120220],\"mapped\",[119]],[[120221,120221],\"mapped\",[120]],[[120222,120222],\"mapped\",[121]],[[120223,120223],\"mapped\",[122]],[[120224,120224],\"mapped\",[97]],[[120225,120225],\"mapped\",[98]],[[120226,120226],\"mapped\",[99]],[[120227,120227],\"mapped\",[100]],[[120228,120228],\"mapped\",[101]],[[120229,120229],\"mapped\",[102]],[[120230,120230],\"mapped\",[103]],[[120231,120231],\"mapped\",[104]],[[120232,120232],\"mapped\",[105]],[[120233,120233],\"mapped\",[106]],[[120234,120234],\"mapped\",[107]],[[120235,120235],\"mapped\",[108]],[[120236,120236],\"mapped\",[109]],[[120237,120237],\"mapped\",[110]],[[120238,120238],\"mapped\",[111]],[[120239,120239],\"mapped\",[112]],[[120240,120240],\"mapped\",[113]],[[120241,120241],\"mapped\",[114]],[[120242,120242],\"mapped\",[115]],[[120243,120243],\"mapped\",[116]],[[120244,120244],\"mapped\",[117]],[[120245,120245],\"mapped\",[118]],[[120246,120246],\"mapped\",[119]],[[120247,120247],\"mapped\",[120]],[[120248,120248],\"mapped\",[121]],[[120249,120249],\"mapped\",[122]],[[120250,120250],\"mapped\",[97]],[[120251,120251],\"mapped\",[98]],[[120252,120252],\"mapped\",[99]],[[120253,120253],\"mapped\",[100]],[[120254,120254],\"mapped\",[101]],[[120255,120255],\"mapped\",[102]],[[120256,120256],\"mapped\",[103]],[[120257,120257],\"mapped\",[104]],[[120258,120258],\"mapped\",[105]],[[120259,120259],\"mapped\",[106]],[[120260,120260],\"mapped\",[107]],[[120261,120261],\"mapped\",[108]],[[120262,120262],\"mapped\",[109]],[[120263,120263],\"mapped\",[110]],[[120264,120264],\"mapped\",[111]],[[120265,120265],\"mapped\",[112]],[[120266,120266],\"mapped\",[113]],[[120267,120267],\"mapped\",[114]],[[120268,120268],\"mapped\",[115]],[[120269,120269],\"mapped\",[116]],[[120270,120270],\"mapped\",[117]],[[120271,120271],\"mapped\",[118]],[[120272,120272],\"mapped\",[119]],[[120273,120273],\"mapped\",[120]],[[120274,120274],\"mapped\",[121]],[[120275,120275],\"mapped\",[122]],[[120276,120276],\"mapped\",[97]],[[120277,120277],\"mapped\",[98]],[[120278,120278],\"mapped\",[99]],[[120279,120279],\"mapped\",[100]],[[120280,120280],\"mapped\",[101]],[[120281,120281],\"mapped\",[102]],[[120282,120282],\"mapped\",[103]],[[120283,120283],\"mapped\",[104]],[[120284,120284],\"mapped\",[105]],[[120285,120285],\"mapped\",[106]],[[120286,120286],\"mapped\",[107]],[[120287,120287],\"mapped\",[108]],[[120288,120288],\"mapped\",[109]],[[120289,120289],\"mapped\",[110]],[[120290,120290],\"mapped\",[111]],[[120291,120291],\"mapped\",[112]],[[120292,120292],\"mapped\",[113]],[[120293,120293],\"mapped\",[114]],[[120294,120294],\"mapped\",[115]],[[120295,120295],\"mapped\",[116]],[[120296,120296],\"mapped\",[117]],[[120297,120297],\"mapped\",[118]],[[120298,120298],\"mapped\",[119]],[[120299,120299],\"mapped\",[120]],[[120300,120300],\"mapped\",[121]],[[120301,120301],\"mapped\",[122]],[[120302,120302],\"mapped\",[97]],[[120303,120303],\"mapped\",[98]],[[120304,120304],\"mapped\",[99]],[[120305,120305],\"mapped\",[100]],[[120306,120306],\"mapped\",[101]],[[120307,120307],\"mapped\",[102]],[[120308,120308],\"mapped\",[103]],[[120309,120309],\"mapped\",[104]],[[120310,120310],\"mapped\",[105]],[[120311,120311],\"mapped\",[106]],[[120312,120312],\"mapped\",[107]],[[120313,120313],\"mapped\",[108]],[[120314,120314],\"mapped\",[109]],[[120315,120315],\"mapped\",[110]],[[120316,120316],\"mapped\",[111]],[[120317,120317],\"mapped\",[112]],[[120318,120318],\"mapped\",[113]],[[120319,120319],\"mapped\",[114]],[[120320,120320],\"mapped\",[115]],[[120321,120321],\"mapped\",[116]],[[120322,120322],\"mapped\",[117]],[[120323,120323],\"mapped\",[118]],[[120324,120324],\"mapped\",[119]],[[120325,120325],\"mapped\",[120]],[[120326,120326],\"mapped\",[121]],[[120327,120327],\"mapped\",[122]],[[120328,120328],\"mapped\",[97]],[[120329,120329],\"mapped\",[98]],[[120330,120330],\"mapped\",[99]],[[120331,120331],\"mapped\",[100]],[[120332,120332],\"mapped\",[101]],[[120333,120333],\"mapped\",[102]],[[120334,120334],\"mapped\",[103]],[[120335,120335],\"mapped\",[104]],[[120336,120336],\"mapped\",[105]],[[120337,120337],\"mapped\",[106]],[[120338,120338],\"mapped\",[107]],[[120339,120339],\"mapped\",[108]],[[120340,120340],\"mapped\",[109]],[[120341,120341],\"mapped\",[110]],[[120342,120342],\"mapped\",[111]],[[120343,120343],\"mapped\",[112]],[[120344,120344],\"mapped\",[113]],[[120345,120345],\"mapped\",[114]],[[120346,120346],\"mapped\",[115]],[[120347,120347],\"mapped\",[116]],[[120348,120348],\"mapped\",[117]],[[120349,120349],\"mapped\",[118]],[[120350,120350],\"mapped\",[119]],[[120351,120351],\"mapped\",[120]],[[120352,120352],\"mapped\",[121]],[[120353,120353],\"mapped\",[122]],[[120354,120354],\"mapped\",[97]],[[120355,120355],\"mapped\",[98]],[[120356,120356],\"mapped\",[99]],[[120357,120357],\"mapped\",[100]],[[120358,120358],\"mapped\",[101]],[[120359,120359],\"mapped\",[102]],[[120360,120360],\"mapped\",[103]],[[120361,120361],\"mapped\",[104]],[[120362,120362],\"mapped\",[105]],[[120363,120363],\"mapped\",[106]],[[120364,120364],\"mapped\",[107]],[[120365,120365],\"mapped\",[108]],[[120366,120366],\"mapped\",[109]],[[120367,120367],\"mapped\",[110]],[[120368,120368],\"mapped\",[111]],[[120369,120369],\"mapped\",[112]],[[120370,120370],\"mapped\",[113]],[[120371,120371],\"mapped\",[114]],[[120372,120372],\"mapped\",[115]],[[120373,120373],\"mapped\",[116]],[[120374,120374],\"mapped\",[117]],[[120375,120375],\"mapped\",[118]],[[120376,120376],\"mapped\",[119]],[[120377,120377],\"mapped\",[120]],[[120378,120378],\"mapped\",[121]],[[120379,120379],\"mapped\",[122]],[[120380,120380],\"mapped\",[97]],[[120381,120381],\"mapped\",[98]],[[120382,120382],\"mapped\",[99]],[[120383,120383],\"mapped\",[100]],[[120384,120384],\"mapped\",[101]],[[120385,120385],\"mapped\",[102]],[[120386,120386],\"mapped\",[103]],[[120387,120387],\"mapped\",[104]],[[120388,120388],\"mapped\",[105]],[[120389,120389],\"mapped\",[106]],[[120390,120390],\"mapped\",[107]],[[120391,120391],\"mapped\",[108]],[[120392,120392],\"mapped\",[109]],[[120393,120393],\"mapped\",[110]],[[120394,120394],\"mapped\",[111]],[[120395,120395],\"mapped\",[112]],[[120396,120396],\"mapped\",[113]],[[120397,120397],\"mapped\",[114]],[[120398,120398],\"mapped\",[115]],[[120399,120399],\"mapped\",[116]],[[120400,120400],\"mapped\",[117]],[[120401,120401],\"mapped\",[118]],[[120402,120402],\"mapped\",[119]],[[120403,120403],\"mapped\",[120]],[[120404,120404],\"mapped\",[121]],[[120405,120405],\"mapped\",[122]],[[120406,120406],\"mapped\",[97]],[[120407,120407],\"mapped\",[98]],[[120408,120408],\"mapped\",[99]],[[120409,120409],\"mapped\",[100]],[[120410,120410],\"mapped\",[101]],[[120411,120411],\"mapped\",[102]],[[120412,120412],\"mapped\",[103]],[[120413,120413],\"mapped\",[104]],[[120414,120414],\"mapped\",[105]],[[120415,120415],\"mapped\",[106]],[[120416,120416],\"mapped\",[107]],[[120417,120417],\"mapped\",[108]],[[120418,120418],\"mapped\",[109]],[[120419,120419],\"mapped\",[110]],[[120420,120420],\"mapped\",[111]],[[120421,120421],\"mapped\",[112]],[[120422,120422],\"mapped\",[113]],[[120423,120423],\"mapped\",[114]],[[120424,120424],\"mapped\",[115]],[[120425,120425],\"mapped\",[116]],[[120426,120426],\"mapped\",[117]],[[120427,120427],\"mapped\",[118]],[[120428,120428],\"mapped\",[119]],[[120429,120429],\"mapped\",[120]],[[120430,120430],\"mapped\",[121]],[[120431,120431],\"mapped\",[122]],[[120432,120432],\"mapped\",[97]],[[120433,120433],\"mapped\",[98]],[[120434,120434],\"mapped\",[99]],[[120435,120435],\"mapped\",[100]],[[120436,120436],\"mapped\",[101]],[[120437,120437],\"mapped\",[102]],[[120438,120438],\"mapped\",[103]],[[120439,120439],\"mapped\",[104]],[[120440,120440],\"mapped\",[105]],[[120441,120441],\"mapped\",[106]],[[120442,120442],\"mapped\",[107]],[[120443,120443],\"mapped\",[108]],[[120444,120444],\"mapped\",[109]],[[120445,120445],\"mapped\",[110]],[[120446,120446],\"mapped\",[111]],[[120447,120447],\"mapped\",[112]],[[120448,120448],\"mapped\",[113]],[[120449,120449],\"mapped\",[114]],[[120450,120450],\"mapped\",[115]],[[120451,120451],\"mapped\",[116]],[[120452,120452],\"mapped\",[117]],[[120453,120453],\"mapped\",[118]],[[120454,120454],\"mapped\",[119]],[[120455,120455],\"mapped\",[120]],[[120456,120456],\"mapped\",[121]],[[120457,120457],\"mapped\",[122]],[[120458,120458],\"mapped\",[97]],[[120459,120459],\"mapped\",[98]],[[120460,120460],\"mapped\",[99]],[[120461,120461],\"mapped\",[100]],[[120462,120462],\"mapped\",[101]],[[120463,120463],\"mapped\",[102]],[[120464,120464],\"mapped\",[103]],[[120465,120465],\"mapped\",[104]],[[120466,120466],\"mapped\",[105]],[[120467,120467],\"mapped\",[106]],[[120468,120468],\"mapped\",[107]],[[120469,120469],\"mapped\",[108]],[[120470,120470],\"mapped\",[109]],[[120471,120471],\"mapped\",[110]],[[120472,120472],\"mapped\",[111]],[[120473,120473],\"mapped\",[112]],[[120474,120474],\"mapped\",[113]],[[120475,120475],\"mapped\",[114]],[[120476,120476],\"mapped\",[115]],[[120477,120477],\"mapped\",[116]],[[120478,120478],\"mapped\",[117]],[[120479,120479],\"mapped\",[118]],[[120480,120480],\"mapped\",[119]],[[120481,120481],\"mapped\",[120]],[[120482,120482],\"mapped\",[121]],[[120483,120483],\"mapped\",[122]],[[120484,120484],\"mapped\",[305]],[[120485,120485],\"mapped\",[567]],[[120486,120487],\"disallowed\"],[[120488,120488],\"mapped\",[945]],[[120489,120489],\"mapped\",[946]],[[120490,120490],\"mapped\",[947]],[[120491,120491],\"mapped\",[948]],[[120492,120492],\"mapped\",[949]],[[120493,120493],\"mapped\",[950]],[[120494,120494],\"mapped\",[951]],[[120495,120495],\"mapped\",[952]],[[120496,120496],\"mapped\",[953]],[[120497,120497],\"mapped\",[954]],[[120498,120498],\"mapped\",[955]],[[120499,120499],\"mapped\",[956]],[[120500,120500],\"mapped\",[957]],[[120501,120501],\"mapped\",[958]],[[120502,120502],\"mapped\",[959]],[[120503,120503],\"mapped\",[960]],[[120504,120504],\"mapped\",[961]],[[120505,120505],\"mapped\",[952]],[[120506,120506],\"mapped\",[963]],[[120507,120507],\"mapped\",[964]],[[120508,120508],\"mapped\",[965]],[[120509,120509],\"mapped\",[966]],[[120510,120510],\"mapped\",[967]],[[120511,120511],\"mapped\",[968]],[[120512,120512],\"mapped\",[969]],[[120513,120513],\"mapped\",[8711]],[[120514,120514],\"mapped\",[945]],[[120515,120515],\"mapped\",[946]],[[120516,120516],\"mapped\",[947]],[[120517,120517],\"mapped\",[948]],[[120518,120518],\"mapped\",[949]],[[120519,120519],\"mapped\",[950]],[[120520,120520],\"mapped\",[951]],[[120521,120521],\"mapped\",[952]],[[120522,120522],\"mapped\",[953]],[[120523,120523],\"mapped\",[954]],[[120524,120524],\"mapped\",[955]],[[120525,120525],\"mapped\",[956]],[[120526,120526],\"mapped\",[957]],[[120527,120527],\"mapped\",[958]],[[120528,120528],\"mapped\",[959]],[[120529,120529],\"mapped\",[960]],[[120530,120530],\"mapped\",[961]],[[120531,120532],\"mapped\",[963]],[[120533,120533],\"mapped\",[964]],[[120534,120534],\"mapped\",[965]],[[120535,120535],\"mapped\",[966]],[[120536,120536],\"mapped\",[967]],[[120537,120537],\"mapped\",[968]],[[120538,120538],\"mapped\",[969]],[[120539,120539],\"mapped\",[8706]],[[120540,120540],\"mapped\",[949]],[[120541,120541],\"mapped\",[952]],[[120542,120542],\"mapped\",[954]],[[120543,120543],\"mapped\",[966]],[[120544,120544],\"mapped\",[961]],[[120545,120545],\"mapped\",[960]],[[120546,120546],\"mapped\",[945]],[[120547,120547],\"mapped\",[946]],[[120548,120548],\"mapped\",[947]],[[120549,120549],\"mapped\",[948]],[[120550,120550],\"mapped\",[949]],[[120551,120551],\"mapped\",[950]],[[120552,120552],\"mapped\",[951]],[[120553,120553],\"mapped\",[952]],[[120554,120554],\"mapped\",[953]],[[120555,120555],\"mapped\",[954]],[[120556,120556],\"mapped\",[955]],[[120557,120557],\"mapped\",[956]],[[120558,120558],\"mapped\",[957]],[[120559,120559],\"mapped\",[958]],[[120560,120560],\"mapped\",[959]],[[120561,120561],\"mapped\",[960]],[[120562,120562],\"mapped\",[961]],[[120563,120563],\"mapped\",[952]],[[120564,120564],\"mapped\",[963]],[[120565,120565],\"mapped\",[964]],[[120566,120566],\"mapped\",[965]],[[120567,120567],\"mapped\",[966]],[[120568,120568],\"mapped\",[967]],[[120569,120569],\"mapped\",[968]],[[120570,120570],\"mapped\",[969]],[[120571,120571],\"mapped\",[8711]],[[120572,120572],\"mapped\",[945]],[[120573,120573],\"mapped\",[946]],[[120574,120574],\"mapped\",[947]],[[120575,120575],\"mapped\",[948]],[[120576,120576],\"mapped\",[949]],[[120577,120577],\"mapped\",[950]],[[120578,120578],\"mapped\",[951]],[[120579,120579],\"mapped\",[952]],[[120580,120580],\"mapped\",[953]],[[120581,120581],\"mapped\",[954]],[[120582,120582],\"mapped\",[955]],[[120583,120583],\"mapped\",[956]],[[120584,120584],\"mapped\",[957]],[[120585,120585],\"mapped\",[958]],[[120586,120586],\"mapped\",[959]],[[120587,120587],\"mapped\",[960]],[[120588,120588],\"mapped\",[961]],[[120589,120590],\"mapped\",[963]],[[120591,120591],\"mapped\",[964]],[[120592,120592],\"mapped\",[965]],[[120593,120593],\"mapped\",[966]],[[120594,120594],\"mapped\",[967]],[[120595,120595],\"mapped\",[968]],[[120596,120596],\"mapped\",[969]],[[120597,120597],\"mapped\",[8706]],[[120598,120598],\"mapped\",[949]],[[120599,120599],\"mapped\",[952]],[[120600,120600],\"mapped\",[954]],[[120601,120601],\"mapped\",[966]],[[120602,120602],\"mapped\",[961]],[[120603,120603],\"mapped\",[960]],[[120604,120604],\"mapped\",[945]],[[120605,120605],\"mapped\",[946]],[[120606,120606],\"mapped\",[947]],[[120607,120607],\"mapped\",[948]],[[120608,120608],\"mapped\",[949]],[[120609,120609],\"mapped\",[950]],[[120610,120610],\"mapped\",[951]],[[120611,120611],\"mapped\",[952]],[[120612,120612],\"mapped\",[953]],[[120613,120613],\"mapped\",[954]],[[120614,120614],\"mapped\",[955]],[[120615,120615],\"mapped\",[956]],[[120616,120616],\"mapped\",[957]],[[120617,120617],\"mapped\",[958]],[[120618,120618],\"mapped\",[959]],[[120619,120619],\"mapped\",[960]],[[120620,120620],\"mapped\",[961]],[[120621,120621],\"mapped\",[952]],[[120622,120622],\"mapped\",[963]],[[120623,120623],\"mapped\",[964]],[[120624,120624],\"mapped\",[965]],[[120625,120625],\"mapped\",[966]],[[120626,120626],\"mapped\",[967]],[[120627,120627],\"mapped\",[968]],[[120628,120628],\"mapped\",[969]],[[120629,120629],\"mapped\",[8711]],[[120630,120630],\"mapped\",[945]],[[120631,120631],\"mapped\",[946]],[[120632,120632],\"mapped\",[947]],[[120633,120633],\"mapped\",[948]],[[120634,120634],\"mapped\",[949]],[[120635,120635],\"mapped\",[950]],[[120636,120636],\"mapped\",[951]],[[120637,120637],\"mapped\",[952]],[[120638,120638],\"mapped\",[953]],[[120639,120639],\"mapped\",[954]],[[120640,120640],\"mapped\",[955]],[[120641,120641],\"mapped\",[956]],[[120642,120642],\"mapped\",[957]],[[120643,120643],\"mapped\",[958]],[[120644,120644],\"mapped\",[959]],[[120645,120645],\"mapped\",[960]],[[120646,120646],\"mapped\",[961]],[[120647,120648],\"mapped\",[963]],[[120649,120649],\"mapped\",[964]],[[120650,120650],\"mapped\",[965]],[[120651,120651],\"mapped\",[966]],[[120652,120652],\"mapped\",[967]],[[120653,120653],\"mapped\",[968]],[[120654,120654],\"mapped\",[969]],[[120655,120655],\"mapped\",[8706]],[[120656,120656],\"mapped\",[949]],[[120657,120657],\"mapped\",[952]],[[120658,120658],\"mapped\",[954]],[[120659,120659],\"mapped\",[966]],[[120660,120660],\"mapped\",[961]],[[120661,120661],\"mapped\",[960]],[[120662,120662],\"mapped\",[945]],[[120663,120663],\"mapped\",[946]],[[120664,120664],\"mapped\",[947]],[[120665,120665],\"mapped\",[948]],[[120666,120666],\"mapped\",[949]],[[120667,120667],\"mapped\",[950]],[[120668,120668],\"mapped\",[951]],[[120669,120669],\"mapped\",[952]],[[120670,120670],\"mapped\",[953]],[[120671,120671],\"mapped\",[954]],[[120672,120672],\"mapped\",[955]],[[120673,120673],\"mapped\",[956]],[[120674,120674],\"mapped\",[957]],[[120675,120675],\"mapped\",[958]],[[120676,120676],\"mapped\",[959]],[[120677,120677],\"mapped\",[960]],[[120678,120678],\"mapped\",[961]],[[120679,120679],\"mapped\",[952]],[[120680,120680],\"mapped\",[963]],[[120681,120681],\"mapped\",[964]],[[120682,120682],\"mapped\",[965]],[[120683,120683],\"mapped\",[966]],[[120684,120684],\"mapped\",[967]],[[120685,120685],\"mapped\",[968]],[[120686,120686],\"mapped\",[969]],[[120687,120687],\"mapped\",[8711]],[[120688,120688],\"mapped\",[945]],[[120689,120689],\"mapped\",[946]],[[120690,120690],\"mapped\",[947]],[[120691,120691],\"mapped\",[948]],[[120692,120692],\"mapped\",[949]],[[120693,120693],\"mapped\",[950]],[[120694,120694],\"mapped\",[951]],[[120695,120695],\"mapped\",[952]],[[120696,120696],\"mapped\",[953]],[[120697,120697],\"mapped\",[954]],[[120698,120698],\"mapped\",[955]],[[120699,120699],\"mapped\",[956]],[[120700,120700],\"mapped\",[957]],[[120701,120701],\"mapped\",[958]],[[120702,120702],\"mapped\",[959]],[[120703,120703],\"mapped\",[960]],[[120704,120704],\"mapped\",[961]],[[120705,120706],\"mapped\",[963]],[[120707,120707],\"mapped\",[964]],[[120708,120708],\"mapped\",[965]],[[120709,120709],\"mapped\",[966]],[[120710,120710],\"mapped\",[967]],[[120711,120711],\"mapped\",[968]],[[120712,120712],\"mapped\",[969]],[[120713,120713],\"mapped\",[8706]],[[120714,120714],\"mapped\",[949]],[[120715,120715],\"mapped\",[952]],[[120716,120716],\"mapped\",[954]],[[120717,120717],\"mapped\",[966]],[[120718,120718],\"mapped\",[961]],[[120719,120719],\"mapped\",[960]],[[120720,120720],\"mapped\",[945]],[[120721,120721],\"mapped\",[946]],[[120722,120722],\"mapped\",[947]],[[120723,120723],\"mapped\",[948]],[[120724,120724],\"mapped\",[949]],[[120725,120725],\"mapped\",[950]],[[120726,120726],\"mapped\",[951]],[[120727,120727],\"mapped\",[952]],[[120728,120728],\"mapped\",[953]],[[120729,120729],\"mapped\",[954]],[[120730,120730],\"mapped\",[955]],[[120731,120731],\"mapped\",[956]],[[120732,120732],\"mapped\",[957]],[[120733,120733],\"mapped\",[958]],[[120734,120734],\"mapped\",[959]],[[120735,120735],\"mapped\",[960]],[[120736,120736],\"mapped\",[961]],[[120737,120737],\"mapped\",[952]],[[120738,120738],\"mapped\",[963]],[[120739,120739],\"mapped\",[964]],[[120740,120740],\"mapped\",[965]],[[120741,120741],\"mapped\",[966]],[[120742,120742],\"mapped\",[967]],[[120743,120743],\"mapped\",[968]],[[120744,120744],\"mapped\",[969]],[[120745,120745],\"mapped\",[8711]],[[120746,120746],\"mapped\",[945]],[[120747,120747],\"mapped\",[946]],[[120748,120748],\"mapped\",[947]],[[120749,120749],\"mapped\",[948]],[[120750,120750],\"mapped\",[949]],[[120751,120751],\"mapped\",[950]],[[120752,120752],\"mapped\",[951]],[[120753,120753],\"mapped\",[952]],[[120754,120754],\"mapped\",[953]],[[120755,120755],\"mapped\",[954]],[[120756,120756],\"mapped\",[955]],[[120757,120757],\"mapped\",[956]],[[120758,120758],\"mapped\",[957]],[[120759,120759],\"mapped\",[958]],[[120760,120760],\"mapped\",[959]],[[120761,120761],\"mapped\",[960]],[[120762,120762],\"mapped\",[961]],[[120763,120764],\"mapped\",[963]],[[120765,120765],\"mapped\",[964]],[[120766,120766],\"mapped\",[965]],[[120767,120767],\"mapped\",[966]],[[120768,120768],\"mapped\",[967]],[[120769,120769],\"mapped\",[968]],[[120770,120770],\"mapped\",[969]],[[120771,120771],\"mapped\",[8706]],[[120772,120772],\"mapped\",[949]],[[120773,120773],\"mapped\",[952]],[[120774,120774],\"mapped\",[954]],[[120775,120775],\"mapped\",[966]],[[120776,120776],\"mapped\",[961]],[[120777,120777],\"mapped\",[960]],[[120778,120779],\"mapped\",[989]],[[120780,120781],\"disallowed\"],[[120782,120782],\"mapped\",[48]],[[120783,120783],\"mapped\",[49]],[[120784,120784],\"mapped\",[50]],[[120785,120785],\"mapped\",[51]],[[120786,120786],\"mapped\",[52]],[[120787,120787],\"mapped\",[53]],[[120788,120788],\"mapped\",[54]],[[120789,120789],\"mapped\",[55]],[[120790,120790],\"mapped\",[56]],[[120791,120791],\"mapped\",[57]],[[120792,120792],\"mapped\",[48]],[[120793,120793],\"mapped\",[49]],[[120794,120794],\"mapped\",[50]],[[120795,120795],\"mapped\",[51]],[[120796,120796],\"mapped\",[52]],[[120797,120797],\"mapped\",[53]],[[120798,120798],\"mapped\",[54]],[[120799,120799],\"mapped\",[55]],[[120800,120800],\"mapped\",[56]],[[120801,120801],\"mapped\",[57]],[[120802,120802],\"mapped\",[48]],[[120803,120803],\"mapped\",[49]],[[120804,120804],\"mapped\",[50]],[[120805,120805],\"mapped\",[51]],[[120806,120806],\"mapped\",[52]],[[120807,120807],\"mapped\",[53]],[[120808,120808],\"mapped\",[54]],[[120809,120809],\"mapped\",[55]],[[120810,120810],\"mapped\",[56]],[[120811,120811],\"mapped\",[57]],[[120812,120812],\"mapped\",[48]],[[120813,120813],\"mapped\",[49]],[[120814,120814],\"mapped\",[50]],[[120815,120815],\"mapped\",[51]],[[120816,120816],\"mapped\",[52]],[[120817,120817],\"mapped\",[53]],[[120818,120818],\"mapped\",[54]],[[120819,120819],\"mapped\",[55]],[[120820,120820],\"mapped\",[56]],[[120821,120821],\"mapped\",[57]],[[120822,120822],\"mapped\",[48]],[[120823,120823],\"mapped\",[49]],[[120824,120824],\"mapped\",[50]],[[120825,120825],\"mapped\",[51]],[[120826,120826],\"mapped\",[52]],[[120827,120827],\"mapped\",[53]],[[120828,120828],\"mapped\",[54]],[[120829,120829],\"mapped\",[55]],[[120830,120830],\"mapped\",[56]],[[120831,120831],\"mapped\",[57]],[[120832,121343],\"valid\",[],\"NV8\"],[[121344,121398],\"valid\"],[[121399,121402],\"valid\",[],\"NV8\"],[[121403,121452],\"valid\"],[[121453,121460],\"valid\",[],\"NV8\"],[[121461,121461],\"valid\"],[[121462,121475],\"valid\",[],\"NV8\"],[[121476,121476],\"valid\"],[[121477,121483],\"valid\",[],\"NV8\"],[[121484,121498],\"disallowed\"],[[121499,121503],\"valid\"],[[121504,121504],\"disallowed\"],[[121505,121519],\"valid\"],[[121520,124927],\"disallowed\"],[[124928,125124],\"valid\"],[[125125,125126],\"disallowed\"],[[125127,125135],\"valid\",[],\"NV8\"],[[125136,125142],\"valid\"],[[125143,126463],\"disallowed\"],[[126464,126464],\"mapped\",[1575]],[[126465,126465],\"mapped\",[1576]],[[126466,126466],\"mapped\",[1580]],[[126467,126467],\"mapped\",[1583]],[[126468,126468],\"disallowed\"],[[126469,126469],\"mapped\",[1608]],[[126470,126470],\"mapped\",[1586]],[[126471,126471],\"mapped\",[1581]],[[126472,126472],\"mapped\",[1591]],[[126473,126473],\"mapped\",[1610]],[[126474,126474],\"mapped\",[1603]],[[126475,126475],\"mapped\",[1604]],[[126476,126476],\"mapped\",[1605]],[[126477,126477],\"mapped\",[1606]],[[126478,126478],\"mapped\",[1587]],[[126479,126479],\"mapped\",[1593]],[[126480,126480],\"mapped\",[1601]],[[126481,126481],\"mapped\",[1589]],[[126482,126482],\"mapped\",[1602]],[[126483,126483],\"mapped\",[1585]],[[126484,126484],\"mapped\",[1588]],[[126485,126485],\"mapped\",[1578]],[[126486,126486],\"mapped\",[1579]],[[126487,126487],\"mapped\",[1582]],[[126488,126488],\"mapped\",[1584]],[[126489,126489],\"mapped\",[1590]],[[126490,126490],\"mapped\",[1592]],[[126491,126491],\"mapped\",[1594]],[[126492,126492],\"mapped\",[1646]],[[126493,126493],\"mapped\",[1722]],[[126494,126494],\"mapped\",[1697]],[[126495,126495],\"mapped\",[1647]],[[126496,126496],\"disallowed\"],[[126497,126497],\"mapped\",[1576]],[[126498,126498],\"mapped\",[1580]],[[126499,126499],\"disallowed\"],[[126500,126500],\"mapped\",[1607]],[[126501,126502],\"disallowed\"],[[126503,126503],\"mapped\",[1581]],[[126504,126504],\"disallowed\"],[[126505,126505],\"mapped\",[1610]],[[126506,126506],\"mapped\",[1603]],[[126507,126507],\"mapped\",[1604]],[[126508,126508],\"mapped\",[1605]],[[126509,126509],\"mapped\",[1606]],[[126510,126510],\"mapped\",[1587]],[[126511,126511],\"mapped\",[1593]],[[126512,126512],\"mapped\",[1601]],[[126513,126513],\"mapped\",[1589]],[[126514,126514],\"mapped\",[1602]],[[126515,126515],\"disallowed\"],[[126516,126516],\"mapped\",[1588]],[[126517,126517],\"mapped\",[1578]],[[126518,126518],\"mapped\",[1579]],[[126519,126519],\"mapped\",[1582]],[[126520,126520],\"disallowed\"],[[126521,126521],\"mapped\",[1590]],[[126522,126522],\"disallowed\"],[[126523,126523],\"mapped\",[1594]],[[126524,126529],\"disallowed\"],[[126530,126530],\"mapped\",[1580]],[[126531,126534],\"disallowed\"],[[126535,126535],\"mapped\",[1581]],[[126536,126536],\"disallowed\"],[[126537,126537],\"mapped\",[1610]],[[126538,126538],\"disallowed\"],[[126539,126539],\"mapped\",[1604]],[[126540,126540],\"disallowed\"],[[126541,126541],\"mapped\",[1606]],[[126542,126542],\"mapped\",[1587]],[[126543,126543],\"mapped\",[1593]],[[126544,126544],\"disallowed\"],[[126545,126545],\"mapped\",[1589]],[[126546,126546],\"mapped\",[1602]],[[126547,126547],\"disallowed\"],[[126548,126548],\"mapped\",[1588]],[[126549,126550],\"disallowed\"],[[126551,126551],\"mapped\",[1582]],[[126552,126552],\"disallowed\"],[[126553,126553],\"mapped\",[1590]],[[126554,126554],\"disallowed\"],[[126555,126555],\"mapped\",[1594]],[[126556,126556],\"disallowed\"],[[126557,126557],\"mapped\",[1722]],[[126558,126558],\"disallowed\"],[[126559,126559],\"mapped\",[1647]],[[126560,126560],\"disallowed\"],[[126561,126561],\"mapped\",[1576]],[[126562,126562],\"mapped\",[1580]],[[126563,126563],\"disallowed\"],[[126564,126564],\"mapped\",[1607]],[[126565,126566],\"disallowed\"],[[126567,126567],\"mapped\",[1581]],[[126568,126568],\"mapped\",[1591]],[[126569,126569],\"mapped\",[1610]],[[126570,126570],\"mapped\",[1603]],[[126571,126571],\"disallowed\"],[[126572,126572],\"mapped\",[1605]],[[126573,126573],\"mapped\",[1606]],[[126574,126574],\"mapped\",[1587]],[[126575,126575],\"mapped\",[1593]],[[126576,126576],\"mapped\",[1601]],[[126577,126577],\"mapped\",[1589]],[[126578,126578],\"mapped\",[1602]],[[126579,126579],\"disallowed\"],[[126580,126580],\"mapped\",[1588]],[[126581,126581],\"mapped\",[1578]],[[126582,126582],\"mapped\",[1579]],[[126583,126583],\"mapped\",[1582]],[[126584,126584],\"disallowed\"],[[126585,126585],\"mapped\",[1590]],[[126586,126586],\"mapped\",[1592]],[[126587,126587],\"mapped\",[1594]],[[126588,126588],\"mapped\",[1646]],[[126589,126589],\"disallowed\"],[[126590,126590],\"mapped\",[1697]],[[126591,126591],\"disallowed\"],[[126592,126592],\"mapped\",[1575]],[[126593,126593],\"mapped\",[1576]],[[126594,126594],\"mapped\",[1580]],[[126595,126595],\"mapped\",[1583]],[[126596,126596],\"mapped\",[1607]],[[126597,126597],\"mapped\",[1608]],[[126598,126598],\"mapped\",[1586]],[[126599,126599],\"mapped\",[1581]],[[126600,126600],\"mapped\",[1591]],[[126601,126601],\"mapped\",[1610]],[[126602,126602],\"disallowed\"],[[126603,126603],\"mapped\",[1604]],[[126604,126604],\"mapped\",[1605]],[[126605,126605],\"mapped\",[1606]],[[126606,126606],\"mapped\",[1587]],[[126607,126607],\"mapped\",[1593]],[[126608,126608],\"mapped\",[1601]],[[126609,126609],\"mapped\",[1589]],[[126610,126610],\"mapped\",[1602]],[[126611,126611],\"mapped\",[1585]],[[126612,126612],\"mapped\",[1588]],[[126613,126613],\"mapped\",[1578]],[[126614,126614],\"mapped\",[1579]],[[126615,126615],\"mapped\",[1582]],[[126616,126616],\"mapped\",[1584]],[[126617,126617],\"mapped\",[1590]],[[126618,126618],\"mapped\",[1592]],[[126619,126619],\"mapped\",[1594]],[[126620,126624],\"disallowed\"],[[126625,126625],\"mapped\",[1576]],[[126626,126626],\"mapped\",[1580]],[[126627,126627],\"mapped\",[1583]],[[126628,126628],\"disallowed\"],[[126629,126629],\"mapped\",[1608]],[[126630,126630],\"mapped\",[1586]],[[126631,126631],\"mapped\",[1581]],[[126632,126632],\"mapped\",[1591]],[[126633,126633],\"mapped\",[1610]],[[126634,126634],\"disallowed\"],[[126635,126635],\"mapped\",[1604]],[[126636,126636],\"mapped\",[1605]],[[126637,126637],\"mapped\",[1606]],[[126638,126638],\"mapped\",[1587]],[[126639,126639],\"mapped\",[1593]],[[126640,126640],\"mapped\",[1601]],[[126641,126641],\"mapped\",[1589]],[[126642,126642],\"mapped\",[1602]],[[126643,126643],\"mapped\",[1585]],[[126644,126644],\"mapped\",[1588]],[[126645,126645],\"mapped\",[1578]],[[126646,126646],\"mapped\",[1579]],[[126647,126647],\"mapped\",[1582]],[[126648,126648],\"mapped\",[1584]],[[126649,126649],\"mapped\",[1590]],[[126650,126650],\"mapped\",[1592]],[[126651,126651],\"mapped\",[1594]],[[126652,126703],\"disallowed\"],[[126704,126705],\"valid\",[],\"NV8\"],[[126706,126975],\"disallowed\"],[[126976,127019],\"valid\",[],\"NV8\"],[[127020,127023],\"disallowed\"],[[127024,127123],\"valid\",[],\"NV8\"],[[127124,127135],\"disallowed\"],[[127136,127150],\"valid\",[],\"NV8\"],[[127151,127152],\"disallowed\"],[[127153,127166],\"valid\",[],\"NV8\"],[[127167,127167],\"valid\",[],\"NV8\"],[[127168,127168],\"disallowed\"],[[127169,127183],\"valid\",[],\"NV8\"],[[127184,127184],\"disallowed\"],[[127185,127199],\"valid\",[],\"NV8\"],[[127200,127221],\"valid\",[],\"NV8\"],[[127222,127231],\"disallowed\"],[[127232,127232],\"disallowed\"],[[127233,127233],\"disallowed_STD3_mapped\",[48,44]],[[127234,127234],\"disallowed_STD3_mapped\",[49,44]],[[127235,127235],\"disallowed_STD3_mapped\",[50,44]],[[127236,127236],\"disallowed_STD3_mapped\",[51,44]],[[127237,127237],\"disallowed_STD3_mapped\",[52,44]],[[127238,127238],\"disallowed_STD3_mapped\",[53,44]],[[127239,127239],\"disallowed_STD3_mapped\",[54,44]],[[127240,127240],\"disallowed_STD3_mapped\",[55,44]],[[127241,127241],\"disallowed_STD3_mapped\",[56,44]],[[127242,127242],\"disallowed_STD3_mapped\",[57,44]],[[127243,127244],\"valid\",[],\"NV8\"],[[127245,127247],\"disallowed\"],[[127248,127248],\"disallowed_STD3_mapped\",[40,97,41]],[[127249,127249],\"disallowed_STD3_mapped\",[40,98,41]],[[127250,127250],\"disallowed_STD3_mapped\",[40,99,41]],[[127251,127251],\"disallowed_STD3_mapped\",[40,100,41]],[[127252,127252],\"disallowed_STD3_mapped\",[40,101,41]],[[127253,127253],\"disallowed_STD3_mapped\",[40,102,41]],[[127254,127254],\"disallowed_STD3_mapped\",[40,103,41]],[[127255,127255],\"disallowed_STD3_mapped\",[40,104,41]],[[127256,127256],\"disallowed_STD3_mapped\",[40,105,41]],[[127257,127257],\"disallowed_STD3_mapped\",[40,106,41]],[[127258,127258],\"disallowed_STD3_mapped\",[40,107,41]],[[127259,127259],\"disallowed_STD3_mapped\",[40,108,41]],[[127260,127260],\"disallowed_STD3_mapped\",[40,109,41]],[[127261,127261],\"disallowed_STD3_mapped\",[40,110,41]],[[127262,127262],\"disallowed_STD3_mapped\",[40,111,41]],[[127263,127263],\"disallowed_STD3_mapped\",[40,112,41]],[[127264,127264],\"disallowed_STD3_mapped\",[40,113,41]],[[127265,127265],\"disallowed_STD3_mapped\",[40,114,41]],[[127266,127266],\"disallowed_STD3_mapped\",[40,115,41]],[[127267,127267],\"disallowed_STD3_mapped\",[40,116,41]],[[127268,127268],\"disallowed_STD3_mapped\",[40,117,41]],[[127269,127269],\"disallowed_STD3_mapped\",[40,118,41]],[[127270,127270],\"disallowed_STD3_mapped\",[40,119,41]],[[127271,127271],\"disallowed_STD3_mapped\",[40,120,41]],[[127272,127272],\"disallowed_STD3_mapped\",[40,121,41]],[[127273,127273],\"disallowed_STD3_mapped\",[40,122,41]],[[127274,127274],\"mapped\",[12308,115,12309]],[[127275,127275],\"mapped\",[99]],[[127276,127276],\"mapped\",[114]],[[127277,127277],\"mapped\",[99,100]],[[127278,127278],\"mapped\",[119,122]],[[127279,127279],\"disallowed\"],[[127280,127280],\"mapped\",[97]],[[127281,127281],\"mapped\",[98]],[[127282,127282],\"mapped\",[99]],[[127283,127283],\"mapped\",[100]],[[127284,127284],\"mapped\",[101]],[[127285,127285],\"mapped\",[102]],[[127286,127286],\"mapped\",[103]],[[127287,127287],\"mapped\",[104]],[[127288,127288],\"mapped\",[105]],[[127289,127289],\"mapped\",[106]],[[127290,127290],\"mapped\",[107]],[[127291,127291],\"mapped\",[108]],[[127292,127292],\"mapped\",[109]],[[127293,127293],\"mapped\",[110]],[[127294,127294],\"mapped\",[111]],[[127295,127295],\"mapped\",[112]],[[127296,127296],\"mapped\",[113]],[[127297,127297],\"mapped\",[114]],[[127298,127298],\"mapped\",[115]],[[127299,127299],\"mapped\",[116]],[[127300,127300],\"mapped\",[117]],[[127301,127301],\"mapped\",[118]],[[127302,127302],\"mapped\",[119]],[[127303,127303],\"mapped\",[120]],[[127304,127304],\"mapped\",[121]],[[127305,127305],\"mapped\",[122]],[[127306,127306],\"mapped\",[104,118]],[[127307,127307],\"mapped\",[109,118]],[[127308,127308],\"mapped\",[115,100]],[[127309,127309],\"mapped\",[115,115]],[[127310,127310],\"mapped\",[112,112,118]],[[127311,127311],\"mapped\",[119,99]],[[127312,127318],\"valid\",[],\"NV8\"],[[127319,127319],\"valid\",[],\"NV8\"],[[127320,127326],\"valid\",[],\"NV8\"],[[127327,127327],\"valid\",[],\"NV8\"],[[127328,127337],\"valid\",[],\"NV8\"],[[127338,127338],\"mapped\",[109,99]],[[127339,127339],\"mapped\",[109,100]],[[127340,127343],\"disallowed\"],[[127344,127352],\"valid\",[],\"NV8\"],[[127353,127353],\"valid\",[],\"NV8\"],[[127354,127354],\"valid\",[],\"NV8\"],[[127355,127356],\"valid\",[],\"NV8\"],[[127357,127358],\"valid\",[],\"NV8\"],[[127359,127359],\"valid\",[],\"NV8\"],[[127360,127369],\"valid\",[],\"NV8\"],[[127370,127373],\"valid\",[],\"NV8\"],[[127374,127375],\"valid\",[],\"NV8\"],[[127376,127376],\"mapped\",[100,106]],[[127377,127386],\"valid\",[],\"NV8\"],[[127387,127461],\"disallowed\"],[[127462,127487],\"valid\",[],\"NV8\"],[[127488,127488],\"mapped\",[12411,12363]],[[127489,127489],\"mapped\",[12467,12467]],[[127490,127490],\"mapped\",[12469]],[[127491,127503],\"disallowed\"],[[127504,127504],\"mapped\",[25163]],[[127505,127505],\"mapped\",[23383]],[[127506,127506],\"mapped\",[21452]],[[127507,127507],\"mapped\",[12487]],[[127508,127508],\"mapped\",[20108]],[[127509,127509],\"mapped\",[22810]],[[127510,127510],\"mapped\",[35299]],[[127511,127511],\"mapped\",[22825]],[[127512,127512],\"mapped\",[20132]],[[127513,127513],\"mapped\",[26144]],[[127514,127514],\"mapped\",[28961]],[[127515,127515],\"mapped\",[26009]],[[127516,127516],\"mapped\",[21069]],[[127517,127517],\"mapped\",[24460]],[[127518,127518],\"mapped\",[20877]],[[127519,127519],\"mapped\",[26032]],[[127520,127520],\"mapped\",[21021]],[[127521,127521],\"mapped\",[32066]],[[127522,127522],\"mapped\",[29983]],[[127523,127523],\"mapped\",[36009]],[[127524,127524],\"mapped\",[22768]],[[127525,127525],\"mapped\",[21561]],[[127526,127526],\"mapped\",[28436]],[[127527,127527],\"mapped\",[25237]],[[127528,127528],\"mapped\",[25429]],[[127529,127529],\"mapped\",[19968]],[[127530,127530],\"mapped\",[19977]],[[127531,127531],\"mapped\",[36938]],[[127532,127532],\"mapped\",[24038]],[[127533,127533],\"mapped\",[20013]],[[127534,127534],\"mapped\",[21491]],[[127535,127535],\"mapped\",[25351]],[[127536,127536],\"mapped\",[36208]],[[127537,127537],\"mapped\",[25171]],[[127538,127538],\"mapped\",[31105]],[[127539,127539],\"mapped\",[31354]],[[127540,127540],\"mapped\",[21512]],[[127541,127541],\"mapped\",[28288]],[[127542,127542],\"mapped\",[26377]],[[127543,127543],\"mapped\",[26376]],[[127544,127544],\"mapped\",[30003]],[[127545,127545],\"mapped\",[21106]],[[127546,127546],\"mapped\",[21942]],[[127547,127551],\"disallowed\"],[[127552,127552],\"mapped\",[12308,26412,12309]],[[127553,127553],\"mapped\",[12308,19977,12309]],[[127554,127554],\"mapped\",[12308,20108,12309]],[[127555,127555],\"mapped\",[12308,23433,12309]],[[127556,127556],\"mapped\",[12308,28857,12309]],[[127557,127557],\"mapped\",[12308,25171,12309]],[[127558,127558],\"mapped\",[12308,30423,12309]],[[127559,127559],\"mapped\",[12308,21213,12309]],[[127560,127560],\"mapped\",[12308,25943,12309]],[[127561,127567],\"disallowed\"],[[127568,127568],\"mapped\",[24471]],[[127569,127569],\"mapped\",[21487]],[[127570,127743],\"disallowed\"],[[127744,127776],\"valid\",[],\"NV8\"],[[127777,127788],\"valid\",[],\"NV8\"],[[127789,127791],\"valid\",[],\"NV8\"],[[127792,127797],\"valid\",[],\"NV8\"],[[127798,127798],\"valid\",[],\"NV8\"],[[127799,127868],\"valid\",[],\"NV8\"],[[127869,127869],\"valid\",[],\"NV8\"],[[127870,127871],\"valid\",[],\"NV8\"],[[127872,127891],\"valid\",[],\"NV8\"],[[127892,127903],\"valid\",[],\"NV8\"],[[127904,127940],\"valid\",[],\"NV8\"],[[127941,127941],\"valid\",[],\"NV8\"],[[127942,127946],\"valid\",[],\"NV8\"],[[127947,127950],\"valid\",[],\"NV8\"],[[127951,127955],\"valid\",[],\"NV8\"],[[127956,127967],\"valid\",[],\"NV8\"],[[127968,127984],\"valid\",[],\"NV8\"],[[127985,127991],\"valid\",[],\"NV8\"],[[127992,127999],\"valid\",[],\"NV8\"],[[128000,128062],\"valid\",[],\"NV8\"],[[128063,128063],\"valid\",[],\"NV8\"],[[128064,128064],\"valid\",[],\"NV8\"],[[128065,128065],\"valid\",[],\"NV8\"],[[128066,128247],\"valid\",[],\"NV8\"],[[128248,128248],\"valid\",[],\"NV8\"],[[128249,128252],\"valid\",[],\"NV8\"],[[128253,128254],\"valid\",[],\"NV8\"],[[128255,128255],\"valid\",[],\"NV8\"],[[128256,128317],\"valid\",[],\"NV8\"],[[128318,128319],\"valid\",[],\"NV8\"],[[128320,128323],\"valid\",[],\"NV8\"],[[128324,128330],\"valid\",[],\"NV8\"],[[128331,128335],\"valid\",[],\"NV8\"],[[128336,128359],\"valid\",[],\"NV8\"],[[128360,128377],\"valid\",[],\"NV8\"],[[128378,128378],\"disallowed\"],[[128379,128419],\"valid\",[],\"NV8\"],[[128420,128420],\"disallowed\"],[[128421,128506],\"valid\",[],\"NV8\"],[[128507,128511],\"valid\",[],\"NV8\"],[[128512,128512],\"valid\",[],\"NV8\"],[[128513,128528],\"valid\",[],\"NV8\"],[[128529,128529],\"valid\",[],\"NV8\"],[[128530,128532],\"valid\",[],\"NV8\"],[[128533,128533],\"valid\",[],\"NV8\"],[[128534,128534],\"valid\",[],\"NV8\"],[[128535,128535],\"valid\",[],\"NV8\"],[[128536,128536],\"valid\",[],\"NV8\"],[[128537,128537],\"valid\",[],\"NV8\"],[[128538,128538],\"valid\",[],\"NV8\"],[[128539,128539],\"valid\",[],\"NV8\"],[[128540,128542],\"valid\",[],\"NV8\"],[[128543,128543],\"valid\",[],\"NV8\"],[[128544,128549],\"valid\",[],\"NV8\"],[[128550,128551],\"valid\",[],\"NV8\"],[[128552,128555],\"valid\",[],\"NV8\"],[[128556,128556],\"valid\",[],\"NV8\"],[[128557,128557],\"valid\",[],\"NV8\"],[[128558,128559],\"valid\",[],\"NV8\"],[[128560,128563],\"valid\",[],\"NV8\"],[[128564,128564],\"valid\",[],\"NV8\"],[[128565,128576],\"valid\",[],\"NV8\"],[[128577,128578],\"valid\",[],\"NV8\"],[[128579,128580],\"valid\",[],\"NV8\"],[[128581,128591],\"valid\",[],\"NV8\"],[[128592,128639],\"valid\",[],\"NV8\"],[[128640,128709],\"valid\",[],\"NV8\"],[[128710,128719],\"valid\",[],\"NV8\"],[[128720,128720],\"valid\",[],\"NV8\"],[[128721,128735],\"disallowed\"],[[128736,128748],\"valid\",[],\"NV8\"],[[128749,128751],\"disallowed\"],[[128752,128755],\"valid\",[],\"NV8\"],[[128756,128767],\"disallowed\"],[[128768,128883],\"valid\",[],\"NV8\"],[[128884,128895],\"disallowed\"],[[128896,128980],\"valid\",[],\"NV8\"],[[128981,129023],\"disallowed\"],[[129024,129035],\"valid\",[],\"NV8\"],[[129036,129039],\"disallowed\"],[[129040,129095],\"valid\",[],\"NV8\"],[[129096,129103],\"disallowed\"],[[129104,129113],\"valid\",[],\"NV8\"],[[129114,129119],\"disallowed\"],[[129120,129159],\"valid\",[],\"NV8\"],[[129160,129167],\"disallowed\"],[[129168,129197],\"valid\",[],\"NV8\"],[[129198,129295],\"disallowed\"],[[129296,129304],\"valid\",[],\"NV8\"],[[129305,129407],\"disallowed\"],[[129408,129412],\"valid\",[],\"NV8\"],[[129413,129471],\"disallowed\"],[[129472,129472],\"valid\",[],\"NV8\"],[[129473,131069],\"disallowed\"],[[131070,131071],\"disallowed\"],[[131072,173782],\"valid\"],[[173783,173823],\"disallowed\"],[[173824,177972],\"valid\"],[[177973,177983],\"disallowed\"],[[177984,178205],\"valid\"],[[178206,178207],\"disallowed\"],[[178208,183969],\"valid\"],[[183970,194559],\"disallowed\"],[[194560,194560],\"mapped\",[20029]],[[194561,194561],\"mapped\",[20024]],[[194562,194562],\"mapped\",[20033]],[[194563,194563],\"mapped\",[131362]],[[194564,194564],\"mapped\",[20320]],[[194565,194565],\"mapped\",[20398]],[[194566,194566],\"mapped\",[20411]],[[194567,194567],\"mapped\",[20482]],[[194568,194568],\"mapped\",[20602]],[[194569,194569],\"mapped\",[20633]],[[194570,194570],\"mapped\",[20711]],[[194571,194571],\"mapped\",[20687]],[[194572,194572],\"mapped\",[13470]],[[194573,194573],\"mapped\",[132666]],[[194574,194574],\"mapped\",[20813]],[[194575,194575],\"mapped\",[20820]],[[194576,194576],\"mapped\",[20836]],[[194577,194577],\"mapped\",[20855]],[[194578,194578],\"mapped\",[132380]],[[194579,194579],\"mapped\",[13497]],[[194580,194580],\"mapped\",[20839]],[[194581,194581],\"mapped\",[20877]],[[194582,194582],\"mapped\",[132427]],[[194583,194583],\"mapped\",[20887]],[[194584,194584],\"mapped\",[20900]],[[194585,194585],\"mapped\",[20172]],[[194586,194586],\"mapped\",[20908]],[[194587,194587],\"mapped\",[20917]],[[194588,194588],\"mapped\",[168415]],[[194589,194589],\"mapped\",[20981]],[[194590,194590],\"mapped\",[20995]],[[194591,194591],\"mapped\",[13535]],[[194592,194592],\"mapped\",[21051]],[[194593,194593],\"mapped\",[21062]],[[194594,194594],\"mapped\",[21106]],[[194595,194595],\"mapped\",[21111]],[[194596,194596],\"mapped\",[13589]],[[194597,194597],\"mapped\",[21191]],[[194598,194598],\"mapped\",[21193]],[[194599,194599],\"mapped\",[21220]],[[194600,194600],\"mapped\",[21242]],[[194601,194601],\"mapped\",[21253]],[[194602,194602],\"mapped\",[21254]],[[194603,194603],\"mapped\",[21271]],[[194604,194604],\"mapped\",[21321]],[[194605,194605],\"mapped\",[21329]],[[194606,194606],\"mapped\",[21338]],[[194607,194607],\"mapped\",[21363]],[[194608,194608],\"mapped\",[21373]],[[194609,194611],\"mapped\",[21375]],[[194612,194612],\"mapped\",[133676]],[[194613,194613],\"mapped\",[28784]],[[194614,194614],\"mapped\",[21450]],[[194615,194615],\"mapped\",[21471]],[[194616,194616],\"mapped\",[133987]],[[194617,194617],\"mapped\",[21483]],[[194618,194618],\"mapped\",[21489]],[[194619,194619],\"mapped\",[21510]],[[194620,194620],\"mapped\",[21662]],[[194621,194621],\"mapped\",[21560]],[[194622,194622],\"mapped\",[21576]],[[194623,194623],\"mapped\",[21608]],[[194624,194624],\"mapped\",[21666]],[[194625,194625],\"mapped\",[21750]],[[194626,194626],\"mapped\",[21776]],[[194627,194627],\"mapped\",[21843]],[[194628,194628],\"mapped\",[21859]],[[194629,194630],\"mapped\",[21892]],[[194631,194631],\"mapped\",[21913]],[[194632,194632],\"mapped\",[21931]],[[194633,194633],\"mapped\",[21939]],[[194634,194634],\"mapped\",[21954]],[[194635,194635],\"mapped\",[22294]],[[194636,194636],\"mapped\",[22022]],[[194637,194637],\"mapped\",[22295]],[[194638,194638],\"mapped\",[22097]],[[194639,194639],\"mapped\",[22132]],[[194640,194640],\"mapped\",[20999]],[[194641,194641],\"mapped\",[22766]],[[194642,194642],\"mapped\",[22478]],[[194643,194643],\"mapped\",[22516]],[[194644,194644],\"mapped\",[22541]],[[194645,194645],\"mapped\",[22411]],[[194646,194646],\"mapped\",[22578]],[[194647,194647],\"mapped\",[22577]],[[194648,194648],\"mapped\",[22700]],[[194649,194649],\"mapped\",[136420]],[[194650,194650],\"mapped\",[22770]],[[194651,194651],\"mapped\",[22775]],[[194652,194652],\"mapped\",[22790]],[[194653,194653],\"mapped\",[22810]],[[194654,194654],\"mapped\",[22818]],[[194655,194655],\"mapped\",[22882]],[[194656,194656],\"mapped\",[136872]],[[194657,194657],\"mapped\",[136938]],[[194658,194658],\"mapped\",[23020]],[[194659,194659],\"mapped\",[23067]],[[194660,194660],\"mapped\",[23079]],[[194661,194661],\"mapped\",[23000]],[[194662,194662],\"mapped\",[23142]],[[194663,194663],\"mapped\",[14062]],[[194664,194664],\"disallowed\"],[[194665,194665],\"mapped\",[23304]],[[194666,194667],\"mapped\",[23358]],[[194668,194668],\"mapped\",[137672]],[[194669,194669],\"mapped\",[23491]],[[194670,194670],\"mapped\",[23512]],[[194671,194671],\"mapped\",[23527]],[[194672,194672],\"mapped\",[23539]],[[194673,194673],\"mapped\",[138008]],[[194674,194674],\"mapped\",[23551]],[[194675,194675],\"mapped\",[23558]],[[194676,194676],\"disallowed\"],[[194677,194677],\"mapped\",[23586]],[[194678,194678],\"mapped\",[14209]],[[194679,194679],\"mapped\",[23648]],[[194680,194680],\"mapped\",[23662]],[[194681,194681],\"mapped\",[23744]],[[194682,194682],\"mapped\",[23693]],[[194683,194683],\"mapped\",[138724]],[[194684,194684],\"mapped\",[23875]],[[194685,194685],\"mapped\",[138726]],[[194686,194686],\"mapped\",[23918]],[[194687,194687],\"mapped\",[23915]],[[194688,194688],\"mapped\",[23932]],[[194689,194689],\"mapped\",[24033]],[[194690,194690],\"mapped\",[24034]],[[194691,194691],\"mapped\",[14383]],[[194692,194692],\"mapped\",[24061]],[[194693,194693],\"mapped\",[24104]],[[194694,194694],\"mapped\",[24125]],[[194695,194695],\"mapped\",[24169]],[[194696,194696],\"mapped\",[14434]],[[194697,194697],\"mapped\",[139651]],[[194698,194698],\"mapped\",[14460]],[[194699,194699],\"mapped\",[24240]],[[194700,194700],\"mapped\",[24243]],[[194701,194701],\"mapped\",[24246]],[[194702,194702],\"mapped\",[24266]],[[194703,194703],\"mapped\",[172946]],[[194704,194704],\"mapped\",[24318]],[[194705,194706],\"mapped\",[140081]],[[194707,194707],\"mapped\",[33281]],[[194708,194709],\"mapped\",[24354]],[[194710,194710],\"mapped\",[14535]],[[194711,194711],\"mapped\",[144056]],[[194712,194712],\"mapped\",[156122]],[[194713,194713],\"mapped\",[24418]],[[194714,194714],\"mapped\",[24427]],[[194715,194715],\"mapped\",[14563]],[[194716,194716],\"mapped\",[24474]],[[194717,194717],\"mapped\",[24525]],[[194718,194718],\"mapped\",[24535]],[[194719,194719],\"mapped\",[24569]],[[194720,194720],\"mapped\",[24705]],[[194721,194721],\"mapped\",[14650]],[[194722,194722],\"mapped\",[14620]],[[194723,194723],\"mapped\",[24724]],[[194724,194724],\"mapped\",[141012]],[[194725,194725],\"mapped\",[24775]],[[194726,194726],\"mapped\",[24904]],[[194727,194727],\"mapped\",[24908]],[[194728,194728],\"mapped\",[24910]],[[194729,194729],\"mapped\",[24908]],[[194730,194730],\"mapped\",[24954]],[[194731,194731],\"mapped\",[24974]],[[194732,194732],\"mapped\",[25010]],[[194733,194733],\"mapped\",[24996]],[[194734,194734],\"mapped\",[25007]],[[194735,194735],\"mapped\",[25054]],[[194736,194736],\"mapped\",[25074]],[[194737,194737],\"mapped\",[25078]],[[194738,194738],\"mapped\",[25104]],[[194739,194739],\"mapped\",[25115]],[[194740,194740],\"mapped\",[25181]],[[194741,194741],\"mapped\",[25265]],[[194742,194742],\"mapped\",[25300]],[[194743,194743],\"mapped\",[25424]],[[194744,194744],\"mapped\",[142092]],[[194745,194745],\"mapped\",[25405]],[[194746,194746],\"mapped\",[25340]],[[194747,194747],\"mapped\",[25448]],[[194748,194748],\"mapped\",[25475]],[[194749,194749],\"mapped\",[25572]],[[194750,194750],\"mapped\",[142321]],[[194751,194751],\"mapped\",[25634]],[[194752,194752],\"mapped\",[25541]],[[194753,194753],\"mapped\",[25513]],[[194754,194754],\"mapped\",[14894]],[[194755,194755],\"mapped\",[25705]],[[194756,194756],\"mapped\",[25726]],[[194757,194757],\"mapped\",[25757]],[[194758,194758],\"mapped\",[25719]],[[194759,194759],\"mapped\",[14956]],[[194760,194760],\"mapped\",[25935]],[[194761,194761],\"mapped\",[25964]],[[194762,194762],\"mapped\",[143370]],[[194763,194763],\"mapped\",[26083]],[[194764,194764],\"mapped\",[26360]],[[194765,194765],\"mapped\",[26185]],[[194766,194766],\"mapped\",[15129]],[[194767,194767],\"mapped\",[26257]],[[194768,194768],\"mapped\",[15112]],[[194769,194769],\"mapped\",[15076]],[[194770,194770],\"mapped\",[20882]],[[194771,194771],\"mapped\",[20885]],[[194772,194772],\"mapped\",[26368]],[[194773,194773],\"mapped\",[26268]],[[194774,194774],\"mapped\",[32941]],[[194775,194775],\"mapped\",[17369]],[[194776,194776],\"mapped\",[26391]],[[194777,194777],\"mapped\",[26395]],[[194778,194778],\"mapped\",[26401]],[[194779,194779],\"mapped\",[26462]],[[194780,194780],\"mapped\",[26451]],[[194781,194781],\"mapped\",[144323]],[[194782,194782],\"mapped\",[15177]],[[194783,194783],\"mapped\",[26618]],[[194784,194784],\"mapped\",[26501]],[[194785,194785],\"mapped\",[26706]],[[194786,194786],\"mapped\",[26757]],[[194787,194787],\"mapped\",[144493]],[[194788,194788],\"mapped\",[26766]],[[194789,194789],\"mapped\",[26655]],[[194790,194790],\"mapped\",[26900]],[[194791,194791],\"mapped\",[15261]],[[194792,194792],\"mapped\",[26946]],[[194793,194793],\"mapped\",[27043]],[[194794,194794],\"mapped\",[27114]],[[194795,194795],\"mapped\",[27304]],[[194796,194796],\"mapped\",[145059]],[[194797,194797],\"mapped\",[27355]],[[194798,194798],\"mapped\",[15384]],[[194799,194799],\"mapped\",[27425]],[[194800,194800],\"mapped\",[145575]],[[194801,194801],\"mapped\",[27476]],[[194802,194802],\"mapped\",[15438]],[[194803,194803],\"mapped\",[27506]],[[194804,194804],\"mapped\",[27551]],[[194805,194805],\"mapped\",[27578]],[[194806,194806],\"mapped\",[27579]],[[194807,194807],\"mapped\",[146061]],[[194808,194808],\"mapped\",[138507]],[[194809,194809],\"mapped\",[146170]],[[194810,194810],\"mapped\",[27726]],[[194811,194811],\"mapped\",[146620]],[[194812,194812],\"mapped\",[27839]],[[194813,194813],\"mapped\",[27853]],[[194814,194814],\"mapped\",[27751]],[[194815,194815],\"mapped\",[27926]],[[194816,194816],\"mapped\",[27966]],[[194817,194817],\"mapped\",[28023]],[[194818,194818],\"mapped\",[27969]],[[194819,194819],\"mapped\",[28009]],[[194820,194820],\"mapped\",[28024]],[[194821,194821],\"mapped\",[28037]],[[194822,194822],\"mapped\",[146718]],[[194823,194823],\"mapped\",[27956]],[[194824,194824],\"mapped\",[28207]],[[194825,194825],\"mapped\",[28270]],[[194826,194826],\"mapped\",[15667]],[[194827,194827],\"mapped\",[28363]],[[194828,194828],\"mapped\",[28359]],[[194829,194829],\"mapped\",[147153]],[[194830,194830],\"mapped\",[28153]],[[194831,194831],\"mapped\",[28526]],[[194832,194832],\"mapped\",[147294]],[[194833,194833],\"mapped\",[147342]],[[194834,194834],\"mapped\",[28614]],[[194835,194835],\"mapped\",[28729]],[[194836,194836],\"mapped\",[28702]],[[194837,194837],\"mapped\",[28699]],[[194838,194838],\"mapped\",[15766]],[[194839,194839],\"mapped\",[28746]],[[194840,194840],\"mapped\",[28797]],[[194841,194841],\"mapped\",[28791]],[[194842,194842],\"mapped\",[28845]],[[194843,194843],\"mapped\",[132389]],[[194844,194844],\"mapped\",[28997]],[[194845,194845],\"mapped\",[148067]],[[194846,194846],\"mapped\",[29084]],[[194847,194847],\"disallowed\"],[[194848,194848],\"mapped\",[29224]],[[194849,194849],\"mapped\",[29237]],[[194850,194850],\"mapped\",[29264]],[[194851,194851],\"mapped\",[149000]],[[194852,194852],\"mapped\",[29312]],[[194853,194853],\"mapped\",[29333]],[[194854,194854],\"mapped\",[149301]],[[194855,194855],\"mapped\",[149524]],[[194856,194856],\"mapped\",[29562]],[[194857,194857],\"mapped\",[29579]],[[194858,194858],\"mapped\",[16044]],[[194859,194859],\"mapped\",[29605]],[[194860,194861],\"mapped\",[16056]],[[194862,194862],\"mapped\",[29767]],[[194863,194863],\"mapped\",[29788]],[[194864,194864],\"mapped\",[29809]],[[194865,194865],\"mapped\",[29829]],[[194866,194866],\"mapped\",[29898]],[[194867,194867],\"mapped\",[16155]],[[194868,194868],\"mapped\",[29988]],[[194869,194869],\"mapped\",[150582]],[[194870,194870],\"mapped\",[30014]],[[194871,194871],\"mapped\",[150674]],[[194872,194872],\"mapped\",[30064]],[[194873,194873],\"mapped\",[139679]],[[194874,194874],\"mapped\",[30224]],[[194875,194875],\"mapped\",[151457]],[[194876,194876],\"mapped\",[151480]],[[194877,194877],\"mapped\",[151620]],[[194878,194878],\"mapped\",[16380]],[[194879,194879],\"mapped\",[16392]],[[194880,194880],\"mapped\",[30452]],[[194881,194881],\"mapped\",[151795]],[[194882,194882],\"mapped\",[151794]],[[194883,194883],\"mapped\",[151833]],[[194884,194884],\"mapped\",[151859]],[[194885,194885],\"mapped\",[30494]],[[194886,194887],\"mapped\",[30495]],[[194888,194888],\"mapped\",[30538]],[[194889,194889],\"mapped\",[16441]],[[194890,194890],\"mapped\",[30603]],[[194891,194891],\"mapped\",[16454]],[[194892,194892],\"mapped\",[16534]],[[194893,194893],\"mapped\",[152605]],[[194894,194894],\"mapped\",[30798]],[[194895,194895],\"mapped\",[30860]],[[194896,194896],\"mapped\",[30924]],[[194897,194897],\"mapped\",[16611]],[[194898,194898],\"mapped\",[153126]],[[194899,194899],\"mapped\",[31062]],[[194900,194900],\"mapped\",[153242]],[[194901,194901],\"mapped\",[153285]],[[194902,194902],\"mapped\",[31119]],[[194903,194903],\"mapped\",[31211]],[[194904,194904],\"mapped\",[16687]],[[194905,194905],\"mapped\",[31296]],[[194906,194906],\"mapped\",[31306]],[[194907,194907],\"mapped\",[31311]],[[194908,194908],\"mapped\",[153980]],[[194909,194910],\"mapped\",[154279]],[[194911,194911],\"disallowed\"],[[194912,194912],\"mapped\",[16898]],[[194913,194913],\"mapped\",[154539]],[[194914,194914],\"mapped\",[31686]],[[194915,194915],\"mapped\",[31689]],[[194916,194916],\"mapped\",[16935]],[[194917,194917],\"mapped\",[154752]],[[194918,194918],\"mapped\",[31954]],[[194919,194919],\"mapped\",[17056]],[[194920,194920],\"mapped\",[31976]],[[194921,194921],\"mapped\",[31971]],[[194922,194922],\"mapped\",[32000]],[[194923,194923],\"mapped\",[155526]],[[194924,194924],\"mapped\",[32099]],[[194925,194925],\"mapped\",[17153]],[[194926,194926],\"mapped\",[32199]],[[194927,194927],\"mapped\",[32258]],[[194928,194928],\"mapped\",[32325]],[[194929,194929],\"mapped\",[17204]],[[194930,194930],\"mapped\",[156200]],[[194931,194931],\"mapped\",[156231]],[[194932,194932],\"mapped\",[17241]],[[194933,194933],\"mapped\",[156377]],[[194934,194934],\"mapped\",[32634]],[[194935,194935],\"mapped\",[156478]],[[194936,194936],\"mapped\",[32661]],[[194937,194937],\"mapped\",[32762]],[[194938,194938],\"mapped\",[32773]],[[194939,194939],\"mapped\",[156890]],[[194940,194940],\"mapped\",[156963]],[[194941,194941],\"mapped\",[32864]],[[194942,194942],\"mapped\",[157096]],[[194943,194943],\"mapped\",[32880]],[[194944,194944],\"mapped\",[144223]],[[194945,194945],\"mapped\",[17365]],[[194946,194946],\"mapped\",[32946]],[[194947,194947],\"mapped\",[33027]],[[194948,194948],\"mapped\",[17419]],[[194949,194949],\"mapped\",[33086]],[[194950,194950],\"mapped\",[23221]],[[194951,194951],\"mapped\",[157607]],[[194952,194952],\"mapped\",[157621]],[[194953,194953],\"mapped\",[144275]],[[194954,194954],\"mapped\",[144284]],[[194955,194955],\"mapped\",[33281]],[[194956,194956],\"mapped\",[33284]],[[194957,194957],\"mapped\",[36766]],[[194958,194958],\"mapped\",[17515]],[[194959,194959],\"mapped\",[33425]],[[194960,194960],\"mapped\",[33419]],[[194961,194961],\"mapped\",[33437]],[[194962,194962],\"mapped\",[21171]],[[194963,194963],\"mapped\",[33457]],[[194964,194964],\"mapped\",[33459]],[[194965,194965],\"mapped\",[33469]],[[194966,194966],\"mapped\",[33510]],[[194967,194967],\"mapped\",[158524]],[[194968,194968],\"mapped\",[33509]],[[194969,194969],\"mapped\",[33565]],[[194970,194970],\"mapped\",[33635]],[[194971,194971],\"mapped\",[33709]],[[194972,194972],\"mapped\",[33571]],[[194973,194973],\"mapped\",[33725]],[[194974,194974],\"mapped\",[33767]],[[194975,194975],\"mapped\",[33879]],[[194976,194976],\"mapped\",[33619]],[[194977,194977],\"mapped\",[33738]],[[194978,194978],\"mapped\",[33740]],[[194979,194979],\"mapped\",[33756]],[[194980,194980],\"mapped\",[158774]],[[194981,194981],\"mapped\",[159083]],[[194982,194982],\"mapped\",[158933]],[[194983,194983],\"mapped\",[17707]],[[194984,194984],\"mapped\",[34033]],[[194985,194985],\"mapped\",[34035]],[[194986,194986],\"mapped\",[34070]],[[194987,194987],\"mapped\",[160714]],[[194988,194988],\"mapped\",[34148]],[[194989,194989],\"mapped\",[159532]],[[194990,194990],\"mapped\",[17757]],[[194991,194991],\"mapped\",[17761]],[[194992,194992],\"mapped\",[159665]],[[194993,194993],\"mapped\",[159954]],[[194994,194994],\"mapped\",[17771]],[[194995,194995],\"mapped\",[34384]],[[194996,194996],\"mapped\",[34396]],[[194997,194997],\"mapped\",[34407]],[[194998,194998],\"mapped\",[34409]],[[194999,194999],\"mapped\",[34473]],[[195000,195000],\"mapped\",[34440]],[[195001,195001],\"mapped\",[34574]],[[195002,195002],\"mapped\",[34530]],[[195003,195003],\"mapped\",[34681]],[[195004,195004],\"mapped\",[34600]],[[195005,195005],\"mapped\",[34667]],[[195006,195006],\"mapped\",[34694]],[[195007,195007],\"disallowed\"],[[195008,195008],\"mapped\",[34785]],[[195009,195009],\"mapped\",[34817]],[[195010,195010],\"mapped\",[17913]],[[195011,195011],\"mapped\",[34912]],[[195012,195012],\"mapped\",[34915]],[[195013,195013],\"mapped\",[161383]],[[195014,195014],\"mapped\",[35031]],[[195015,195015],\"mapped\",[35038]],[[195016,195016],\"mapped\",[17973]],[[195017,195017],\"mapped\",[35066]],[[195018,195018],\"mapped\",[13499]],[[195019,195019],\"mapped\",[161966]],[[195020,195020],\"mapped\",[162150]],[[195021,195021],\"mapped\",[18110]],[[195022,195022],\"mapped\",[18119]],[[195023,195023],\"mapped\",[35488]],[[195024,195024],\"mapped\",[35565]],[[195025,195025],\"mapped\",[35722]],[[195026,195026],\"mapped\",[35925]],[[195027,195027],\"mapped\",[162984]],[[195028,195028],\"mapped\",[36011]],[[195029,195029],\"mapped\",[36033]],[[195030,195030],\"mapped\",[36123]],[[195031,195031],\"mapped\",[36215]],[[195032,195032],\"mapped\",[163631]],[[195033,195033],\"mapped\",[133124]],[[195034,195034],\"mapped\",[36299]],[[195035,195035],\"mapped\",[36284]],[[195036,195036],\"mapped\",[36336]],[[195037,195037],\"mapped\",[133342]],[[195038,195038],\"mapped\",[36564]],[[195039,195039],\"mapped\",[36664]],[[195040,195040],\"mapped\",[165330]],[[195041,195041],\"mapped\",[165357]],[[195042,195042],\"mapped\",[37012]],[[195043,195043],\"mapped\",[37105]],[[195044,195044],\"mapped\",[37137]],[[195045,195045],\"mapped\",[165678]],[[195046,195046],\"mapped\",[37147]],[[195047,195047],\"mapped\",[37432]],[[195048,195048],\"mapped\",[37591]],[[195049,195049],\"mapped\",[37592]],[[195050,195050],\"mapped\",[37500]],[[195051,195051],\"mapped\",[37881]],[[195052,195052],\"mapped\",[37909]],[[195053,195053],\"mapped\",[166906]],[[195054,195054],\"mapped\",[38283]],[[195055,195055],\"mapped\",[18837]],[[195056,195056],\"mapped\",[38327]],[[195057,195057],\"mapped\",[167287]],[[195058,195058],\"mapped\",[18918]],[[195059,195059],\"mapped\",[38595]],[[195060,195060],\"mapped\",[23986]],[[195061,195061],\"mapped\",[38691]],[[195062,195062],\"mapped\",[168261]],[[195063,195063],\"mapped\",[168474]],[[195064,195064],\"mapped\",[19054]],[[195065,195065],\"mapped\",[19062]],[[195066,195066],\"mapped\",[38880]],[[195067,195067],\"mapped\",[168970]],[[195068,195068],\"mapped\",[19122]],[[195069,195069],\"mapped\",[169110]],[[195070,195071],\"mapped\",[38923]],[[195072,195072],\"mapped\",[38953]],[[195073,195073],\"mapped\",[169398]],[[195074,195074],\"mapped\",[39138]],[[195075,195075],\"mapped\",[19251]],[[195076,195076],\"mapped\",[39209]],[[195077,195077],\"mapped\",[39335]],[[195078,195078],\"mapped\",[39362]],[[195079,195079],\"mapped\",[39422]],[[195080,195080],\"mapped\",[19406]],[[195081,195081],\"mapped\",[170800]],[[195082,195082],\"mapped\",[39698]],[[195083,195083],\"mapped\",[40000]],[[195084,195084],\"mapped\",[40189]],[[195085,195085],\"mapped\",[19662]],[[195086,195086],\"mapped\",[19693]],[[195087,195087],\"mapped\",[40295]],[[195088,195088],\"mapped\",[172238]],[[195089,195089],\"mapped\",[19704]],[[195090,195090],\"mapped\",[172293]],[[195091,195091],\"mapped\",[172558]],[[195092,195092],\"mapped\",[172689]],[[195093,195093],\"mapped\",[40635]],[[195094,195094],\"mapped\",[19798]],[[195095,195095],\"mapped\",[40697]],[[195096,195096],\"mapped\",[40702]],[[195097,195097],\"mapped\",[40709]],[[195098,195098],\"mapped\",[40719]],[[195099,195099],\"mapped\",[40726]],[[195100,195100],\"mapped\",[40763]],[[195101,195101],\"mapped\",[173568]],[[195102,196605],\"disallowed\"],[[196606,196607],\"disallowed\"],[[196608,262141],\"disallowed\"],[[262142,262143],\"disallowed\"],[[262144,327677],\"disallowed\"],[[327678,327679],\"disallowed\"],[[327680,393213],\"disallowed\"],[[393214,393215],\"disallowed\"],[[393216,458749],\"disallowed\"],[[458750,458751],\"disallowed\"],[[458752,524285],\"disallowed\"],[[524286,524287],\"disallowed\"],[[524288,589821],\"disallowed\"],[[589822,589823],\"disallowed\"],[[589824,655357],\"disallowed\"],[[655358,655359],\"disallowed\"],[[655360,720893],\"disallowed\"],[[720894,720895],\"disallowed\"],[[720896,786429],\"disallowed\"],[[786430,786431],\"disallowed\"],[[786432,851965],\"disallowed\"],[[851966,851967],\"disallowed\"],[[851968,917501],\"disallowed\"],[[917502,917503],\"disallowed\"],[[917504,917504],\"disallowed\"],[[917505,917505],\"disallowed\"],[[917506,917535],\"disallowed\"],[[917536,917631],\"disallowed\"],[[917632,917759],\"disallowed\"],[[917760,917999],\"ignored\"],[[918000,983037],\"disallowed\"],[[983038,983039],\"disallowed\"],[[983040,1048573],\"disallowed\"],[[1048574,1048575],\"disallowed\"],[[1048576,1114109],\"disallowed\"],[[1114110,1114111],\"disallowed\"]]");

/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength;
exports.toByteArray = toByteArray;
exports.fromByteArray = fromByteArray;
var lookup = [];
var revLookup = [];
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i];
  revLookup[code.charCodeAt(i)] = i;
} // Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications


revLookup['-'.charCodeAt(0)] = 62;
revLookup['_'.charCodeAt(0)] = 63;

function getLens(b64) {
  var len = b64.length;

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4');
  } // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42


  var validLen = b64.indexOf('=');
  if (validLen === -1) validLen = len;
  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;
  return [validLen, placeHoldersLen];
} // base64 is 4/3 + up to two characters of the original data


function byteLength(b64) {
  var lens = getLens(b64);
  var validLen = lens[0];
  var placeHoldersLen = lens[1];
  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}

function _byteLength(b64, validLen, placeHoldersLen) {
  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}

function toByteArray(b64) {
  var tmp;
  var lens = getLens(b64);
  var validLen = lens[0];
  var placeHoldersLen = lens[1];
  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars

  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;
  var i;

  for (i = 0; i < len; i += 4) {
    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
    arr[curByte++] = tmp >> 16 & 0xFF;
    arr[curByte++] = tmp >> 8 & 0xFF;
    arr[curByte++] = tmp & 0xFF;
  }

  if (placeHoldersLen === 2) {
    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
    arr[curByte++] = tmp & 0xFF;
  }

  if (placeHoldersLen === 1) {
    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
    arr[curByte++] = tmp >> 8 & 0xFF;
    arr[curByte++] = tmp & 0xFF;
  }

  return arr;
}

function tripletToBase64(num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
}

function encodeChunk(uint8, start, end) {
  var tmp;
  var output = [];

  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);
    output.push(tripletToBase64(tmp));
  }

  return output.join('');
}

function fromByteArray(uint8) {
  var tmp;
  var len = uint8.length;
  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes

  var parts = [];
  var maxChunkLength = 16383; // must be multiple of 3
  // go through the array every three bytes, we'll deal with trailing stuff later

  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
  } // pad the end with zeros, but make sure to not forget the extra bytes


  if (extraBytes === 1) {
    tmp = uint8[len - 1];
    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1];
    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');
  }

  return parts.join('');
}

/***/ }),
/* 608 */
/***/ (function(module, exports) {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m;
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = -7;
  var i = isLE ? nBytes - 1 : 0;
  var d = isLE ? -1 : 1;
  var s = buffer[offset + i];
  i += d;
  e = s & (1 << -nBits) - 1;
  s >>= -nBits;
  nBits += eLen;

  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;

  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : (s ? -1 : 1) * Infinity;
  } else {
    m = m + Math.pow(2, mLen);
    e = e - eBias;
  }

  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
};

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c;
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
  var i = isLE ? 0 : nBytes - 1;
  var d = isLE ? 1 : -1;
  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
  value = Math.abs(value);

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0;
    e = eMax;
  } else {
    e = Math.floor(Math.log(value) / Math.LN2);

    if (value * (c = Math.pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }

    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * Math.pow(2, 1 - eBias);
    }

    if (value * c >= 2) {
      e++;
      c /= 2;
    }

    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
      e = 0;
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = e << mLen | m;
  eLen += mLen;

  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128;
};

/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Dependencies
 */

var MailService = __webpack_require__(275); //Export singleton instance


module.exports = new MailService();

/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var client = __webpack_require__(611);

var Client = __webpack_require__(276);

module.exports = client;
module.exports.Client = Client;

/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Dependencies
 */

var Client = __webpack_require__(276); //Export singleton instance


module.exports = new Client();

/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(31);

var bind = __webpack_require__(277);

var Axios = __webpack_require__(613);

var mergeConfig = __webpack_require__(283);

var defaults = __webpack_require__(204);
/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */


function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context); // Copy axios.prototype to instance

  utils.extend(instance, Axios.prototype, context); // Copy context to instance

  utils.extend(instance, context); // Factory for creating new instances

  instance.create = function create(instanceConfig) {
    return createInstance(mergeConfig(defaultConfig, instanceConfig));
  };

  return instance;
} // Create the default instance to be exported


var axios = createInstance(defaults); // Expose Axios class to allow class inheritance

axios.Axios = Axios; // Expose Cancel & CancelToken

axios.Cancel = __webpack_require__(122);
axios.CancelToken = __webpack_require__(634);
axios.isCancel = __webpack_require__(282);
axios.VERSION = __webpack_require__(208).version; // Expose all/spread

axios.all = function all(promises) {
  return Promise.all(promises);
};

axios.spread = __webpack_require__(635); // Expose isAxiosError

axios.isAxiosError = __webpack_require__(636);
module.exports = axios; // Allow use of default import syntax in TypeScript

module.exports["default"] = axios;

/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(31);

var buildURL = __webpack_require__(203);

var InterceptorManager = __webpack_require__(614);

var dispatchRequest = __webpack_require__(615);

var mergeConfig = __webpack_require__(283);

var validator = __webpack_require__(633);

var validators = validator.validators;
/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */

function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}
/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */


Axios.prototype.request = function request(configOrUrl, config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof configOrUrl === 'string') {
    config = config || {};
    config.url = configOrUrl;
  } else {
    config = configOrUrl || {};
  }

  config = mergeConfig(this.defaults, config); // Set config.method

  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  var transitional = config.transitional;

  if (transitional !== undefined) {
    validator.assertOptions(transitional, {
      silentJSONParsing: validators.transitional(validators["boolean"]),
      forcedJSONParsing: validators.transitional(validators["boolean"]),
      clarifyTimeoutError: validators.transitional(validators["boolean"])
    }, false);
  } // filter out skipped interceptors


  var requestInterceptorChain = [];
  var synchronousRequestInterceptors = true;
  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {
      return;
    }

    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
  });
  var responseInterceptorChain = [];
  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
  });
  var promise;

  if (!synchronousRequestInterceptors) {
    var chain = [dispatchRequest, undefined];
    Array.prototype.unshift.apply(chain, requestInterceptorChain);
    chain = chain.concat(responseInterceptorChain);
    promise = Promise.resolve(config);

    while (chain.length) {
      promise = promise.then(chain.shift(), chain.shift());
    }

    return promise;
  }

  var newConfig = config;

  while (requestInterceptorChain.length) {
    var onFulfilled = requestInterceptorChain.shift();
    var onRejected = requestInterceptorChain.shift();

    try {
      newConfig = onFulfilled(newConfig);
    } catch (error) {
      onRejected(error);
      break;
    }
  }

  try {
    promise = dispatchRequest(newConfig);
  } catch (error) {
    return Promise.reject(error);
  }

  while (responseInterceptorChain.length) {
    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
}; // Provide aliases for supported request methods


utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function (url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});
utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function (url, data, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});
module.exports = Axios;

/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(31);

function InterceptorManager() {
  this.handlers = [];
}
/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */


InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected,
    synchronous: options ? options.synchronous : false,
    runWhen: options ? options.runWhen : null
  });
  return this.handlers.length - 1;
};
/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */


InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};
/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */


InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;

/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(31);

var transformData = __webpack_require__(616);

var isCancel = __webpack_require__(282);

var defaults = __webpack_require__(204);

var Cancel = __webpack_require__(122);
/**
 * Throws a `Cancel` if cancellation has been requested.
 */


function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }

  if (config.signal && config.signal.aborted) {
    throw new Cancel('canceled');
  }
}
/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */


module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config); // Ensure headers exist

  config.headers = config.headers || {}; // Transform request data

  config.data = transformData.call(config, config.data, config.headers, config.transformRequest); // Flatten headers

  config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers);
  utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {
    delete config.headers[method];
  });
  var adapter = config.adapter || defaults.adapter;
  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config); // Transform response data

    response.data = transformData.call(config, response.data, response.headers, config.transformResponse);
    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config); // Transform response data

      if (reason && reason.response) {
        reason.response.data = transformData.call(config, reason.response.data, reason.response.headers, config.transformResponse);
      }
    }

    return Promise.reject(reason);
  });
};

/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(31);

var defaults = __webpack_require__(204);
/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */


module.exports = function transformData(data, headers, fns) {
  var context = this || defaults;
  /*eslint no-param-reassign:0*/

  utils.forEach(fns, function transform(fn) {
    data = fn.call(context, data, headers);
  });
  return data;
};

/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(31);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};

/***/ }),
/* 618 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(31);

var settle = __webpack_require__(278);

var cookies = __webpack_require__(619);

var buildURL = __webpack_require__(203);

var buildFullPath = __webpack_require__(279);

var parseHeaders = __webpack_require__(622);

var isURLSameOrigin = __webpack_require__(623);

var createError = __webpack_require__(207);

var transitionalDefaults = __webpack_require__(206);

var Cancel = __webpack_require__(122);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;
    var responseType = config.responseType;
    var onCanceled;

    function done() {
      if (config.cancelToken) {
        config.cancelToken.unsubscribe(onCanceled);
      }

      if (config.signal) {
        config.signal.removeEventListener('abort', onCanceled);
      }
    }

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest(); // HTTP basic authentication

    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true); // Set the request timeout in MS

    request.timeout = config.timeout;

    function onloadend() {
      if (!request) {
        return;
      } // Prepare the response


      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !responseType || responseType === 'text' || responseType === 'json' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };
      settle(function _resolve(value) {
        resolve(value);
        done();
      }, function _reject(err) {
        reject(err);
        done();
      }, response); // Clean up request

      request = null;
    }

    if ('onloadend' in request) {
      // Use onloadend if available
      request.onloadend = onloadend;
    } else {
      // Listen for ready state to emulate onloadend
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        } // The request errored out and we didn't get a response, this will be
        // handled by onerror instead
        // With one exception: request that using file: protocol, most browsers
        // will return status as 0 even though it's a successful request


        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
          return;
        } // readystate handler is calling before onerror or ontimeout handlers,
        // so we should call onloadend on the next 'tick'


        setTimeout(onloadend);
      };
    } // Handle browser request cancellation (as opposed to a manual cancellation)


    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request)); // Clean up request

      request = null;
    }; // Handle low level network errors


    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request)); // Clean up request

      request = null;
    }; // Handle timeout


    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';
      var transitional = config.transitional || transitionalDefaults;

      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }

      reject(createError(timeoutErrorMessage, config, transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED', request)); // Clean up request

      request = null;
    }; // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.


    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    } // Add headers to the request


    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    } // Add withCredentials to request if needed


    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    } // Add responseType to request if needed


    if (responseType && responseType !== 'json') {
      request.responseType = config.responseType;
    } // Handle progress if needed


    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    } // Not all browsers support upload events


    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken || config.signal) {
      // Handle cancellation
      // eslint-disable-next-line func-names
      onCanceled = function onCanceled(cancel) {
        if (!request) {
          return;
        }

        reject(!cancel || cancel && cancel.type ? new Cancel('canceled') : cancel);
        request.abort();
        request = null;
      };

      config.cancelToken && config.cancelToken.subscribe(onCanceled);

      if (config.signal) {
        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);
      }
    }

    if (!requestData) {
      requestData = null;
    } // Send the request


    request.send(requestData);
  });
};

/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(31);

module.exports = utils.isStandardBrowserEnv() ? // Standard browser envs support document.cookie
function standardBrowserEnv() {
  return {
    write: function write(name, value, expires, path, domain, secure) {
      var cookie = [];
      cookie.push(name + '=' + encodeURIComponent(value));

      if (utils.isNumber(expires)) {
        cookie.push('expires=' + new Date(expires).toGMTString());
      }

      if (utils.isString(path)) {
        cookie.push('path=' + path);
      }

      if (utils.isString(domain)) {
        cookie.push('domain=' + domain);
      }

      if (secure === true) {
        cookie.push('secure');
      }

      document.cookie = cookie.join('; ');
    },
    read: function read(name) {
      var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
      return match ? decodeURIComponent(match[3]) : null;
    },
    remove: function remove(name) {
      this.write(name, '', Date.now() - 86400000);
    }
  };
}() : // Non standard browser env (web workers, react-native) lack needed support.
function nonStandardBrowserEnv() {
  return {
    write: function write() {},
    read: function read() {
      return null;
    },
    remove: function remove() {}
  };
}();

/***/ }),
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */

module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
};

/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */

module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '') : baseURL;
};

/***/ }),
/* 622 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(31); // Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers


var ignoreDuplicateOf = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];
/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */

module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) {
    return parsed;
  }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }

      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });
  return parsed;
};

/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(31);

module.exports = utils.isStandardBrowserEnv() ? // Standard browser envs have full support of the APIs needed to test
// whether the request URL is of the same origin as current location.
function standardBrowserEnv() {
  var msie = /(msie|trident)/i.test(navigator.userAgent);
  var urlParsingNode = document.createElement('a');
  var originURL;
  /**
  * Parse a URL to discover it's components
  *
  * @param {String} url The URL to be parsed
  * @returns {Object}
  */

  function resolveURL(url) {
    var href = url;

    if (msie) {
      // IE needs attribute set twice to normalize properties
      urlParsingNode.setAttribute('href', href);
      href = urlParsingNode.href;
    }

    urlParsingNode.setAttribute('href', href); // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils

    return {
      href: urlParsingNode.href,
      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
      host: urlParsingNode.host,
      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
      hostname: urlParsingNode.hostname,
      port: urlParsingNode.port,
      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname
    };
  }

  originURL = resolveURL(window.location.href);
  /**
  * Determine if a URL shares the same origin as the current location
  *
  * @param {String} requestURL The URL to test
  * @returns {boolean} True if URL shares the same origin, otherwise false
  */

  return function isURLSameOrigin(requestURL) {
    var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
  };
}() : // Non standard browser envs (web workers, react-native) lack needed support.
function nonStandardBrowserEnv() {
  return function isURLSameOrigin() {
    return true;
  };
}();

/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(31);

var settle = __webpack_require__(278);

var buildFullPath = __webpack_require__(279);

var buildURL = __webpack_require__(203);

var http = __webpack_require__(69);

var https = __webpack_require__(75);

var httpFollow = __webpack_require__(96).http;

var httpsFollow = __webpack_require__(96).https;

var url = __webpack_require__(32);

var zlib = __webpack_require__(49);

var VERSION = __webpack_require__(208).version;

var createError = __webpack_require__(207);

var enhanceError = __webpack_require__(205);

var transitionalDefaults = __webpack_require__(206);

var Cancel = __webpack_require__(122);

var isHttps = /https:?/;
/**
 *
 * @param {http.ClientRequestArgs} options
 * @param {AxiosProxyConfig} proxy
 * @param {string} location
 */

function setProxy(options, proxy, location) {
  options.hostname = proxy.host;
  options.host = proxy.host;
  options.port = proxy.port;
  options.path = location; // Basic proxy authorization

  if (proxy.auth) {
    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');
    options.headers['Proxy-Authorization'] = 'Basic ' + base64;
  } // If a proxy is used, any redirects must also pass through the proxy


  options.beforeRedirect = function beforeRedirect(redirection) {
    redirection.headers.host = redirection.host;
    setProxy(redirection, proxy, redirection.href);
  };
}
/*eslint consistent-return:0*/


module.exports = function httpAdapter(config) {
  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {
    var onCanceled;

    function done() {
      if (config.cancelToken) {
        config.cancelToken.unsubscribe(onCanceled);
      }

      if (config.signal) {
        config.signal.removeEventListener('abort', onCanceled);
      }
    }

    var resolve = function resolve(value) {
      done();
      resolvePromise(value);
    };

    var rejected = false;

    var reject = function reject(value) {
      done();
      rejected = true;
      rejectPromise(value);
    };

    var data = config.data;
    var headers = config.headers;
    var headerNames = {};
    Object.keys(headers).forEach(function storeLowerName(name) {
      headerNames[name.toLowerCase()] = name;
    }); // Set User-Agent (required by some servers)
    // See https://github.com/axios/axios/issues/69

    if ('user-agent' in headerNames) {
      // User-Agent is specified; handle case where no UA header is desired
      if (!headers[headerNames['user-agent']]) {
        delete headers[headerNames['user-agent']];
      } // Otherwise, use specified value

    } else {
      // Only set header if it hasn't been set in config
      headers['User-Agent'] = 'axios/' + VERSION;
    }

    if (data && !utils.isStream(data)) {
      if (Buffer.isBuffer(data)) {// Nothing to do...
      } else if (utils.isArrayBuffer(data)) {
        data = Buffer.from(new Uint8Array(data));
      } else if (utils.isString(data)) {
        data = Buffer.from(data, 'utf-8');
      } else {
        return reject(createError('Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream', config));
      }

      if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {
        return reject(createError('Request body larger than maxBodyLength limit', config));
      } // Add Content-Length header if data exists


      if (!headerNames['content-length']) {
        headers['Content-Length'] = data.length;
      }
    } // HTTP basic authentication


    var auth = undefined;

    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      auth = username + ':' + password;
    } // Parse url


    var fullPath = buildFullPath(config.baseURL, config.url);
    var parsed = url.parse(fullPath);
    var protocol = parsed.protocol || 'http:';

    if (!auth && parsed.auth) {
      var urlAuth = parsed.auth.split(':');
      var urlUsername = urlAuth[0] || '';
      var urlPassword = urlAuth[1] || '';
      auth = urlUsername + ':' + urlPassword;
    }

    if (auth && headerNames.authorization) {
      delete headers[headerNames.authorization];
    }

    var isHttpsRequest = isHttps.test(protocol);
    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;

    try {
      buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\?/, '');
    } catch (err) {
      var customErr = new Error(err.message);
      customErr.config = config;
      customErr.url = config.url;
      customErr.exists = true;
      reject(customErr);
    }

    var options = {
      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\?/, ''),
      method: config.method.toUpperCase(),
      headers: headers,
      agent: agent,
      agents: {
        http: config.httpAgent,
        https: config.httpsAgent
      },
      auth: auth
    };

    if (config.socketPath) {
      options.socketPath = config.socketPath;
    } else {
      options.hostname = parsed.hostname;
      options.port = parsed.port;
    }

    var proxy = config.proxy;

    if (!proxy && proxy !== false) {
      var proxyEnv = protocol.slice(0, -1) + '_proxy';
      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];

      if (proxyUrl) {
        var parsedProxyUrl = url.parse(proxyUrl);
        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;
        var shouldProxy = true;

        if (noProxyEnv) {
          var noProxy = noProxyEnv.split(',').map(function trim(s) {
            return s.trim();
          });
          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {
            if (!proxyElement) {
              return false;
            }

            if (proxyElement === '*') {
              return true;
            }

            if (proxyElement[0] === '.' && parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {
              return true;
            }

            return parsed.hostname === proxyElement;
          });
        }

        if (shouldProxy) {
          proxy = {
            host: parsedProxyUrl.hostname,
            port: parsedProxyUrl.port,
            protocol: parsedProxyUrl.protocol
          };

          if (parsedProxyUrl.auth) {
            var proxyUrlAuth = parsedProxyUrl.auth.split(':');
            proxy.auth = {
              username: proxyUrlAuth[0],
              password: proxyUrlAuth[1]
            };
          }
        }
      }
    }

    if (proxy) {
      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');
      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);
    }

    var transport;
    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);

    if (config.transport) {
      transport = config.transport;
    } else if (config.maxRedirects === 0) {
      transport = isHttpsProxy ? https : http;
    } else {
      if (config.maxRedirects) {
        options.maxRedirects = config.maxRedirects;
      }

      transport = isHttpsProxy ? httpsFollow : httpFollow;
    }

    if (config.maxBodyLength > -1) {
      options.maxBodyLength = config.maxBodyLength;
    }

    if (config.insecureHTTPParser) {
      options.insecureHTTPParser = config.insecureHTTPParser;
    } // Create the request


    var req = transport.request(options, function handleResponse(res) {
      if (req.aborted) return; // uncompress the response body transparently if required

      var stream = res; // return the last request in case of redirects

      var lastRequest = res.req || req; // if no content, is HEAD request or decompress disabled we should not decompress

      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {
        switch (res.headers['content-encoding']) {
          /*eslint default-case:0*/
          case 'gzip':
          case 'compress':
          case 'deflate':
            // add the unzipper to the body stream processing pipeline
            stream = stream.pipe(zlib.createUnzip()); // remove the content-encoding in order to not confuse downstream operations

            delete res.headers['content-encoding'];
            break;
        }
      }

      var response = {
        status: res.statusCode,
        statusText: res.statusMessage,
        headers: res.headers,
        config: config,
        request: lastRequest
      };

      if (config.responseType === 'stream') {
        response.data = stream;
        settle(resolve, reject, response);
      } else {
        var responseBuffer = [];
        var totalResponseBytes = 0;
        stream.on('data', function handleStreamData(chunk) {
          responseBuffer.push(chunk);
          totalResponseBytes += chunk.length; // make sure the content length is not over the maxContentLength if specified

          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {
            // stream.destoy() emit aborted event before calling reject() on Node.js v16
            rejected = true;
            stream.destroy();
            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded', config, null, lastRequest));
          }
        });
        stream.on('aborted', function handlerStreamAborted() {
          if (rejected) {
            return;
          }

          stream.destroy();
          reject(createError('error request aborted', config, 'ERR_REQUEST_ABORTED', lastRequest));
        });
        stream.on('error', function handleStreamError(err) {
          if (req.aborted) return;
          reject(enhanceError(err, config, null, lastRequest));
        });
        stream.on('end', function handleStreamEnd() {
          try {
            var responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);

            if (config.responseType !== 'arraybuffer') {
              responseData = responseData.toString(config.responseEncoding);

              if (!config.responseEncoding || config.responseEncoding === 'utf8') {
                responseData = utils.stripBOM(responseData);
              }
            }

            response.data = responseData;
          } catch (err) {
            reject(enhanceError(err, config, err.code, response.request, response));
          }

          settle(resolve, reject, response);
        });
      }
    }); // Handle errors

    req.on('error', function handleRequestError(err) {
      if (req.aborted && err.code !== 'ERR_FR_TOO_MANY_REDIRECTS') return;
      reject(enhanceError(err, config, null, req));
    }); // set tcp keep alive to prevent drop connection by peer

    req.on('socket', function handleRequestSocket(socket) {
      // default interval of sending ack packet is 1 minute
      socket.setKeepAlive(true, 1000 * 60);
    }); // Handle request timeout

    if (config.timeout) {
      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.
      var timeout = parseInt(config.timeout, 10);

      if (isNaN(timeout)) {
        reject(createError('error trying to parse `config.timeout` to int', config, 'ERR_PARSE_TIMEOUT', req));
        return;
      } // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.
      // And timer callback will be fired, and abort() will be invoked before connection, then get "socket hang up" and code ECONNRESET.
      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.
      // And then these socket which be hang up will devoring CPU little by little.
      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.


      req.setTimeout(timeout, function handleRequestTimeout() {
        req.abort();
        var timeoutErrorMessage = '';

        if (config.timeoutErrorMessage) {
          timeoutErrorMessage = config.timeoutErrorMessage;
        } else {
          timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
        }

        var transitional = config.transitional || transitionalDefaults;
        reject(createError(timeoutErrorMessage, config, transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED', req));
      });
    }

    if (config.cancelToken || config.signal) {
      // Handle cancellation
      // eslint-disable-next-line func-names
      onCanceled = function onCanceled(cancel) {
        if (req.aborted) return;
        req.abort();
        reject(!cancel || cancel && cancel.type ? new Cancel('canceled') : cancel);
      };

      config.cancelToken && config.cancelToken.subscribe(onCanceled);

      if (config.signal) {
        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);
      }
    } // Send the request


    if (utils.isStream(data)) {
      data.on('error', function handleStreamError(err) {
        reject(enhanceError(err, config, null, req));
      }).pipe(req);
    } else {
      req.end(data);
    }
  });
};

/***/ }),
/* 625 */
/***/ (function(module, exports) {

module.exports = require("assert");

/***/ }),
/* 626 */
/***/ (function(module, exports, __webpack_require__) {

var debug;

module.exports = function () {
  if (!debug) {
    try {
      /* eslint global-require: off */
      debug = __webpack_require__(627)("follow-redirects");
    } catch (error) {
      /* */
    }

    if (typeof debug !== "function") {
      debug = function debug() {
        /* */
      };
    }
  }

  debug.apply(null, arguments);
};

/***/ }),
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Detect Electron renderer / nwjs process, which is node, but we should
 * treat as a browser.
 */
if (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {
  module.exports = __webpack_require__(628);
} else {
  module.exports = __webpack_require__(630);
}

/***/ }),
/* 628 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();

exports.destroy = function () {
  var warned = false;
  return function () {
    if (!warned) {
      warned = true;
      console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
    }
  };
}();
/**
 * Colors.
 */


exports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];
/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */
// eslint-disable-next-line complexity

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
    return true;
  } // Internet Explorer and Edge do not support colors.


  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  } // Is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632


  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
}
/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */


function formatArgs(args) {
  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);

  if (!this.useColors) {
    return;
  }

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit'); // The final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into

  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function (match) {
    if (match === '%%') {
      return;
    }

    index++;

    if (match === '%c') {
      // We only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });
  args.splice(lastC, 0, c);
}
/**
 * Invokes `console.debug()` when available.
 * No-op when `console.debug` is not a "function".
 * If `console.debug` is not available, falls back
 * to `console.log`.
 *
 * @api public
 */


exports.log = console.debug || console.log || function () {};
/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */


function save(namespaces) {
  try {
    if (namespaces) {
      exports.storage.setItem('debug', namespaces);
    } else {
      exports.storage.removeItem('debug');
    }
  } catch (error) {// Swallow
    // XXX (@Qix-) should we be logging these?
  }
}
/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */


function load() {
  var r;

  try {
    r = exports.storage.getItem('debug');
  } catch (error) {// Swallow
    // XXX (@Qix-) should we be logging these?
  } // If debug isn't set in LS, and we're in Electron, try to load $DEBUG


  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}
/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */


function localstorage() {
  try {
    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
    // The Browser also has localStorage in the global context.
    return localStorage;
  } catch (error) {// Swallow
    // XXX (@Qix-) should we be logging these?
  }
}

module.exports = __webpack_require__(280)(exports);
var formatters = module.exports.formatters;
/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
  try {
    return JSON.stringify(v);
  } catch (error) {
    return '[UnexpectedJSONParseError]: ' + error.message;
  }
};

/***/ }),
/* 629 */
/***/ (function(module, exports) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/**
 * Helpers.
 */
var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var w = d * 7;
var y = d * 365.25;
/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function (val, options) {
  options = options || {};

  var type = _typeof(val);

  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isFinite(val)) {
    return options["long"] ? fmtLong(val) : fmtShort(val);
  }

  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));
};
/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */


function parse(str) {
  str = String(str);

  if (str.length > 100) {
    return;
  }

  var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);

  if (!match) {
    return;
  }

  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();

  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;

    case 'weeks':
    case 'week':
    case 'w':
      return n * w;

    case 'days':
    case 'day':
    case 'd':
      return n * d;

    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;

    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;

    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;

    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;

    default:
      return undefined;
  }
}
/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */


function fmtShort(ms) {
  var msAbs = Math.abs(ms);

  if (msAbs >= d) {
    return Math.round(ms / d) + 'd';
  }

  if (msAbs >= h) {
    return Math.round(ms / h) + 'h';
  }

  if (msAbs >= m) {
    return Math.round(ms / m) + 'm';
  }

  if (msAbs >= s) {
    return Math.round(ms / s) + 's';
  }

  return ms + 'ms';
}
/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */


function fmtLong(ms) {
  var msAbs = Math.abs(ms);

  if (msAbs >= d) {
    return plural(ms, msAbs, d, 'day');
  }

  if (msAbs >= h) {
    return plural(ms, msAbs, h, 'hour');
  }

  if (msAbs >= m) {
    return plural(ms, msAbs, m, 'minute');
  }

  if (msAbs >= s) {
    return plural(ms, msAbs, s, 'second');
  }

  return ms + ' ms';
}
/**
 * Pluralization helper.
 */


function plural(ms, msAbs, n, name) {
  var isPlural = msAbs >= n * 1.5;
  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
}

/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */
var tty = __webpack_require__(281);

var util = __webpack_require__(82);
/**
 * This is the Node.js implementation of `debug()`.
 */


exports.init = init;
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.destroy = util.deprecate(function () {}, 'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
/**
 * Colors.
 */

exports.colors = [6, 2, 3, 4, 5, 1];

try {
  // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)
  // eslint-disable-next-line import/no-extraneous-dependencies
  var supportsColor = __webpack_require__(631);

  if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
    exports.colors = [20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221];
  }
} catch (error) {// Swallow - we only care if `supports-color` is available; it doesn't have to be.
}
/**
 * Build up the default `inspectOpts` object from the environment variables.
 *
 *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
 */


exports.inspectOpts = Object.keys(process.env).filter(function (key) {
  return /^debug_/i.test(key);
}).reduce(function (obj, key) {
  // Camel-case
  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {
    return k.toUpperCase();
  }); // Coerce string value into JS value

  var val = process.env[key];

  if (/^(yes|on|true|enabled)$/i.test(val)) {
    val = true;
  } else if (/^(no|off|false|disabled)$/i.test(val)) {
    val = false;
  } else if (val === 'null') {
    val = null;
  } else {
    val = Number(val);
  }

  obj[prop] = val;
  return obj;
}, {});
/**
 * Is stdout a TTY? Colored output is enabled when `true`.
 */

function useColors() {
  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);
}
/**
 * Adds ANSI color escape codes if enabled.
 *
 * @api public
 */


function formatArgs(args) {
  var name = this.namespace,
      useColors = this.useColors;

  if (useColors) {
    var c = this.color;
    var colorCode = "\x1B[3" + (c < 8 ? c : '8;5;' + c);
    var prefix = "  ".concat(colorCode, ";1m").concat(name, " \x1B[0m");
    args[0] = prefix + args[0].split('\n').join('\n' + prefix);
    args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + "\x1B[0m");
  } else {
    args[0] = getDate() + name + ' ' + args[0];
  }
}

function getDate() {
  if (exports.inspectOpts.hideDate) {
    return '';
  }

  return new Date().toISOString() + ' ';
}
/**
 * Invokes `util.format()` with the specified arguments and writes to stderr.
 */


function log() {
  return process.stderr.write(util.format.apply(util, arguments) + '\n');
}
/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */


function save(namespaces) {
  if (namespaces) {
    process.env.DEBUG = namespaces;
  } else {
    // If you set a process.env field to null or undefined, it gets cast to the
    // string 'null' or 'undefined'. Just delete instead.
    delete process.env.DEBUG;
  }
}
/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */


function load() {
  return process.env.DEBUG;
}
/**
 * Init logic for `debug` instances.
 *
 * Create a new `inspectOpts` object in case `useColors` is set
 * differently for a particular `debug` instance.
 */


function init(debug) {
  debug.inspectOpts = {};
  var keys = Object.keys(exports.inspectOpts);

  for (var i = 0; i < keys.length; i++) {
    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
  }
}

module.exports = __webpack_require__(280)(exports);
var formatters = module.exports.formatters;
/**
 * Map %o to `util.inspect()`, all on a single line.
 */

formatters.o = function (v) {
  this.inspectOpts.colors = this.useColors;
  return util.inspect(v, this.inspectOpts).split('\n').map(function (str) {
    return str.trim();
  }).join(' ');
};
/**
 * Map %O to `util.inspect()`, allowing multiple lines if needed.
 */


formatters.O = function (v) {
  this.inspectOpts.colors = this.useColors;
  return util.inspect(v, this.inspectOpts);
};

/***/ }),
/* 631 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var os = __webpack_require__(163);

var tty = __webpack_require__(281);

var hasFlag = __webpack_require__(632);

var _process = process,
    env = _process.env;
var forceColor;

if (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false') || hasFlag('color=never')) {
  forceColor = 0;
} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true') || hasFlag('color=always')) {
  forceColor = 1;
}

if ('FORCE_COLOR' in env) {
  if (env.FORCE_COLOR === 'true') {
    forceColor = 1;
  } else if (env.FORCE_COLOR === 'false') {
    forceColor = 0;
  } else {
    forceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);
  }
}

function translateLevel(level) {
  if (level === 0) {
    return false;
  }

  return {
    level: level,
    hasBasic: true,
    has256: level >= 2,
    has16m: level >= 3
  };
}

function supportsColor(haveStream, streamIsTTY) {
  if (forceColor === 0) {
    return 0;
  }

  if (hasFlag('color=16m') || hasFlag('color=full') || hasFlag('color=truecolor')) {
    return 3;
  }

  if (hasFlag('color=256')) {
    return 2;
  }

  if (haveStream && !streamIsTTY && forceColor === undefined) {
    return 0;
  }

  var min = forceColor || 0;

  if (env.TERM === 'dumb') {
    return min;
  }

  if (process.platform === 'win32') {
    // Windows 10 build 10586 is the first Windows release that supports 256 colors.
    // Windows 10 build 14931 is the first release that supports 16m/TrueColor.
    var osRelease = os.release().split('.');

    if (Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
      return Number(osRelease[2]) >= 14931 ? 3 : 2;
    }

    return 1;
  }

  if ('CI' in env) {
    if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(function (sign) {
      return sign in env;
    }) || env.CI_NAME === 'codeship') {
      return 1;
    }

    return min;
  }

  if ('TEAMCITY_VERSION' in env) {
    return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
  }

  if (env.COLORTERM === 'truecolor') {
    return 3;
  }

  if ('TERM_PROGRAM' in env) {
    var version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);

    switch (env.TERM_PROGRAM) {
      case 'iTerm.app':
        return version >= 3 ? 3 : 2;

      case 'Apple_Terminal':
        return 2;
      // No default
    }
  }

  if (/-256(color)?$/i.test(env.TERM)) {
    return 2;
  }

  if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
    return 1;
  }

  if ('COLORTERM' in env) {
    return 1;
  }

  return min;
}

function getSupportLevel(stream) {
  var level = supportsColor(stream, stream && stream.isTTY);
  return translateLevel(level);
}

module.exports = {
  supportsColor: getSupportLevel,
  stdout: translateLevel(supportsColor(true, tty.isatty(1))),
  stderr: translateLevel(supportsColor(true, tty.isatty(2)))
};

/***/ }),
/* 632 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (flag) {
  var argv = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : process.argv;
  var prefix = flag.startsWith('-') ? '' : flag.length === 1 ? '-' : '--';
  var position = argv.indexOf(prefix + flag);
  var terminatorPosition = argv.indexOf('--');
  return position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);
};

/***/ }),
/* 633 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var VERSION = __webpack_require__(208).version;

var validators = {}; // eslint-disable-next-line func-names

['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function (type, i) {
  validators[type] = function validator(thing) {
    return _typeof(thing) === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
  };
});
var deprecatedWarnings = {};
/**
 * Transitional option validator
 * @param {function|boolean?} validator - set to false if the transitional option has been removed
 * @param {string?} version - deprecated version / removed since version
 * @param {string?} message - some message with additional info
 * @returns {function}
 */

validators.transitional = function transitional(validator, version, message) {
  function formatMessage(opt, desc) {
    return '[Axios v' + VERSION + '] Transitional option \'' + opt + '\'' + desc + (message ? '. ' + message : '');
  } // eslint-disable-next-line func-names


  return function (value, opt, opts) {
    if (validator === false) {
      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));
    }

    if (version && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true; // eslint-disable-next-line no-console

      console.warn(formatMessage(opt, ' has been deprecated since v' + version + ' and will be removed in the near future'));
    }

    return validator ? validator(value, opt, opts) : true;
  };
};
/**
 * Assert object's properties type
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 */


function assertOptions(options, schema, allowUnknown) {
  if (_typeof(options) !== 'object') {
    throw new TypeError('options must be an object');
  }

  var keys = Object.keys(options);
  var i = keys.length;

  while (i-- > 0) {
    var opt = keys[i];
    var validator = schema[opt];

    if (validator) {
      var value = options[opt];
      var result = value === undefined || validator(value, opt, options);

      if (result !== true) {
        throw new TypeError('option ' + opt + ' must be ' + result);
      }

      continue;
    }

    if (allowUnknown !== true) {
      throw Error('Unknown option ' + opt);
    }
  }
}

module.exports = {
  assertOptions: assertOptions,
  validators: validators
};

/***/ }),
/* 634 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(122);
/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */


function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });
  var token = this; // eslint-disable-next-line func-names

  this.promise.then(function (cancel) {
    if (!token._listeners) return;
    var i;
    var l = token._listeners.length;

    for (i = 0; i < l; i++) {
      token._listeners[i](cancel);
    }

    token._listeners = null;
  }); // eslint-disable-next-line func-names

  this.promise.then = function (onfulfilled) {
    var _resolve; // eslint-disable-next-line func-names


    var promise = new Promise(function (resolve) {
      token.subscribe(resolve);
      _resolve = resolve;
    }).then(onfulfilled);

    promise.cancel = function reject() {
      token.unsubscribe(_resolve);
    };

    return promise;
  };

  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}
/**
 * Throws a `Cancel` if cancellation has been requested.
 */


CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};
/**
 * Subscribe to the cancel signal
 */


CancelToken.prototype.subscribe = function subscribe(listener) {
  if (this.reason) {
    listener(this.reason);
    return;
  }

  if (this._listeners) {
    this._listeners.push(listener);
  } else {
    this._listeners = [listener];
  }
};
/**
 * Unsubscribe from the cancel signal
 */


CancelToken.prototype.unsubscribe = function unsubscribe(listener) {
  if (!this._listeners) {
    return;
  }

  var index = this._listeners.indexOf(listener);

  if (index !== -1) {
    this._listeners.splice(index, 1);
  }
};
/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */


CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;

/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */

module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};

/***/ }),
/* 636 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(31);
/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */


module.exports = function isAxiosError(payload) {
  return utils.isObject(payload) && payload.isAxiosError === true;
};

/***/ }),
/* 637 */
/***/ (function(module) {

module.exports = JSON.parse("{\"name\":\"@sendgrid/client\",\"description\":\"Twilio SendGrid NodeJS API client\",\"version\":\"7.7.0\",\"author\":\"Twilio SendGrid <help@twilio.com> (sendgrid.com)\",\"contributors\":[\"Kyle Partridge <kyle.partridge@sendgrid.com>\",\"David Tomberlin <david.tomberlin@sendgrid.com>\",\"Swift <swift@sendgrid.com>\",\"Brandon West <brandon.west@sendgrid.com>\",\"Scott Motte <scott.motte@sendgrid.com>\",\"Robert Acosta <robert.acosta@sendgrid.com>\",\"Elmer Thomas <ethomas@twilio.com>\",\"Adam Reis <adam@reis.nz>\"],\"license\":\"MIT\",\"homepage\":\"https://sendgrid.com\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/sendgrid/sendgrid-nodejs.git\"},\"publishConfig\":{\"access\":\"public\"},\"main\":\"index.js\",\"engines\":{\"node\":\"6.* || 8.* || >=10.*\"},\"dependencies\":{\"@sendgrid/helpers\":\"^7.7.0\",\"axios\":\"^0.26.0\"},\"devDependencies\":{\"chai\":\"4.2.0\",\"nock\":\"^10.0.6\"},\"resolutions\":{\"chai\":\"4.2.0\"},\"tags\":[\"http\",\"rest\",\"api\",\"mail\",\"sendgrid\"],\"gitHead\":\"30eebb16a51b51e6a2df1b3596044db6f5fdbe92\"}");

/***/ }),
/* 638 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Expose classes
 */

var Attachment = __webpack_require__(639);

var EmailAddress = __webpack_require__(210);

var Mail = __webpack_require__(642);

var Personalization = __webpack_require__(286);

var Response = __webpack_require__(646);

var ResponseError = __webpack_require__(647);

var Statistics = __webpack_require__(648);
/**
 * Export
 */


module.exports = {
  Attachment: Attachment,
  EmailAddress: EmailAddress,
  Mail: Mail,
  Personalization: Personalization,
  Response: Response,
  ResponseError: ResponseError,
  Statistics: Statistics
};

/***/ }),
/* 639 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Dependencies
 */

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var toCamelCase = __webpack_require__(123);

var toSnakeCase = __webpack_require__(164);

var deepClone = __webpack_require__(124);

var fs = __webpack_require__(125);

var path = __webpack_require__(126);
/**
 * Attachment class
 */


var Attachment = /*#__PURE__*/function () {
  /**
   * Constructor
   */
  function Attachment(data) {
    _classCallCheck(this, Attachment);

    //Create from data
    if (data) {
      this.fromData(data);
    }
  }
  /**
   * From data
   */


  _createClass(Attachment, [{
    key: "fromData",
    value: function fromData(data) {
      //Expecting object
      if (_typeof(data) !== 'object') {
        throw new Error('Expecting object for Mail data');
      } //Convert to camel case to make it workable, making a copy to prevent
      //changes to the original objects


      data = deepClone(data);
      data = toCamelCase(data); //Extract properties from data

      var _data = data,
          content = _data.content,
          filename = _data.filename,
          type = _data.type,
          disposition = _data.disposition,
          contentId = _data.contentId,
          filePath = _data.filePath;

      if (typeof content !== 'undefined' && typeof filePath !== 'undefined') {
        throw new Error("The props 'content' and 'filePath' cannot be used together.");
      } //Set data


      this.setFilename(filename);
      this.setType(type);
      this.setDisposition(disposition);
      this.setContentId(contentId);
      this.setContent(filePath ? this.readFile(filePath) : content);
    }
    /**
     * Read a file and return its content as base64
     */

  }, {
    key: "readFile",
    value: function readFile(filePath) {
      return fs.readFileSync(path.resolve(filePath));
    }
    /**
     * Set content
     */

  }, {
    key: "setContent",
    value: function setContent(content) {
      //Duck type check toString on content if it's a Buffer as that's the method that will be called.
      if (typeof content === 'string') {
        this.content = content;
        return;
      } else if (content instanceof Buffer && content.toString !== undefined) {
        this.content = content.toString();

        if (this.disposition === 'attachment') {
          this.content = content.toString('base64');
        }

        return;
      }

      throw new Error('`content` expected to be either Buffer or string');
    }
    /**
     * Set content
     */

  }, {
    key: "setFileContent",
    value: function setFileContent(content) {
      if (content instanceof Buffer && content.toString !== undefined) {
        this.content = content.toString('base64');
        return;
      }

      throw new Error('`content` expected to be Buffer');
    }
    /**
     * Set filename
     */

  }, {
    key: "setFilename",
    value: function setFilename(filename) {
      if (typeof filename === 'undefined') {
        return;
      }

      if (filename && typeof filename !== 'string') {
        throw new Error('String expected for `filename`');
      }

      this.filename = filename;
    }
    /**
     * Set type
     */

  }, {
    key: "setType",
    value: function setType(type) {
      if (typeof type === 'undefined') {
        return;
      }

      if (typeof type !== 'string') {
        throw new Error('String expected for `type`');
      }

      this.type = type;
    }
    /**
     * Set disposition
     */

  }, {
    key: "setDisposition",
    value: function setDisposition(disposition) {
      if (typeof disposition === 'undefined') {
        return;
      }

      if (typeof disposition !== 'string') {
        throw new Error('String expected for `disposition`');
      }

      this.disposition = disposition;
    }
    /**
     * Set content ID
     */

  }, {
    key: "setContentId",
    value: function setContentId(contentId) {
      if (typeof contentId === 'undefined') {
        return;
      }

      if (typeof contentId !== 'string') {
        throw new Error('String expected for `contentId`');
      }

      this.contentId = contentId;
    }
    /**
     * To JSON
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      //Extract properties from self
      var content = this.content,
          filename = this.filename,
          type = this.type,
          disposition = this.disposition,
          contentId = this.contentId; //Initialize with mandatory properties

      var json = {
        content: content,
        filename: filename
      }; //Add whatever else we have

      if (typeof type !== 'undefined') {
        json.type = type;
      }

      if (typeof disposition !== 'undefined') {
        json.disposition = disposition;
      }

      if (typeof contentId !== 'undefined') {
        json.contentId = contentId;
      } //Return


      return toSnakeCase(json);
    }
  }]);

  return Attachment;
}(); //Export class


module.exports = Attachment;

/***/ }),
/* 640 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Internal conversion helper
 */

module.exports = function strToCamelCase(str) {
  if (typeof str !== 'string') {
    throw new Error('String expected for conversion to snake case');
  }

  return str.trim().replace(/_+|\-+/g, ' ').replace(/(?:^\w|[A-Z]|\b\w|\s+)/g, function (match, index) {
    if (Number(match) === 0) {
      return '';
    }

    return index === 0 ? match.toLowerCase() : match.toUpperCase();
  });
};

/***/ }),
/* 641 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Internal conversion helper
 */

module.exports = function strToSnakeCase(str) {
  if (typeof str !== 'string') {
    throw new Error('String expected for conversion to snake case');
  }

  return str.trim().replace(/(\s*\-*\b\w|[A-Z])/g, function ($1) {
    $1 = $1.trim().toLowerCase().replace('-', '');
    return ($1[0] === '_' ? '' : '_') + $1;
  }).slice(1);
};

/***/ }),
/* 642 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Dependencies
 */

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var EmailAddress = __webpack_require__(210);

var Personalization = __webpack_require__(286);

var toCamelCase = __webpack_require__(123);

var toSnakeCase = __webpack_require__(164);

var deepClone = __webpack_require__(124);

var arrayToJSON = __webpack_require__(288);

var _require = __webpack_require__(644),
    DYNAMIC_TEMPLATE_CHAR_WARNING = _require.DYNAMIC_TEMPLATE_CHAR_WARNING;

var _require2 = __webpack_require__(645),
    validateMailSettings = _require2.validateMailSettings,
    validateTrackingSettings = _require2.validateTrackingSettings;
/**
 * Mail class
 */


var Mail = /*#__PURE__*/function () {
  /**
   * Constructor
   */
  function Mail(data) {
    _classCallCheck(this, Mail);

    //Initialize array and object properties
    this.isDynamic = false;
    this.hideWarnings = false;
    this.personalizations = [];
    this.attachments = [];
    this.content = [];
    this.categories = [];
    this.headers = {};
    this.sections = {};
    this.customArgs = {};
    this.trackingSettings = {};
    this.mailSettings = {};
    this.asm = {}; //Helper properties

    this.substitutions = null;
    this.substitutionWrappers = null;
    this.dynamicTemplateData = null; //Process data if given

    if (data) {
      this.fromData(data);
    }
  }
  /**
   * Build from data
   */


  _createClass(Mail, [{
    key: "fromData",
    value: function fromData(data) {
      var _this = this;

      //Expecting object
      if (_typeof(data) !== 'object') {
        throw new Error('Expecting object for Mail data');
      } //Convert to camel case to make it workable, making a copy to prevent
      //changes to the original objects


      data = deepClone(data);
      data = toCamelCase(data, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers', 'sections']); //Extract properties from data

      var _data = data,
          to = _data.to,
          from = _data.from,
          replyTo = _data.replyTo,
          cc = _data.cc,
          bcc = _data.bcc,
          sendAt = _data.sendAt,
          subject = _data.subject,
          text = _data.text,
          html = _data.html,
          content = _data.content,
          templateId = _data.templateId,
          personalizations = _data.personalizations,
          attachments = _data.attachments,
          ipPoolName = _data.ipPoolName,
          batchId = _data.batchId,
          sections = _data.sections,
          headers = _data.headers,
          categories = _data.categories,
          category = _data.category,
          customArgs = _data.customArgs,
          asm = _data.asm,
          mailSettings = _data.mailSettings,
          trackingSettings = _data.trackingSettings,
          substitutions = _data.substitutions,
          substitutionWrappers = _data.substitutionWrappers,
          dynamicTemplateData = _data.dynamicTemplateData,
          isMultiple = _data.isMultiple,
          hideWarnings = _data.hideWarnings,
          replyToList = _data.replyToList; //Set data

      this.setFrom(from);
      this.setReplyTo(replyTo);
      this.setSubject(subject);
      this.setSendAt(sendAt);
      this.setTemplateId(templateId);
      this.setBatchId(batchId);
      this.setIpPoolName(ipPoolName);
      this.setAttachments(attachments);
      this.setContent(content);
      this.setSections(sections);
      this.setHeaders(headers);
      this.setCategories(category);
      this.setCategories(categories);
      this.setCustomArgs(customArgs);
      this.setAsm(asm);
      this.setMailSettings(mailSettings);
      this.setTrackingSettings(trackingSettings);
      this.setHideWarnings(hideWarnings);
      this.setReplyToList(replyToList);

      if (this.isDynamic) {
        this.setDynamicTemplateData(dynamicTemplateData);
      } else {
        this.setSubstitutions(substitutions);
        this.setSubstitutionWrappers(substitutionWrappers);
      } //Add contents from text/html properties


      this.addTextContent(text);
      this.addHtmlContent(html); //Using "to" property for personalizations

      if (personalizations) {
        this.setPersonalizations(personalizations);
      } else if (isMultiple && Array.isArray(to)) {
        //Multiple individual emails
        to.forEach(function (to) {
          return _this.addTo(to, cc, bcc);
        });
      } else {
        //Single email (possibly with multiple recipients in the to field)
        this.addTo(to, cc, bcc);
      }
    }
    /**
     * Set from email
     */

  }, {
    key: "setFrom",
    value: function setFrom(from) {
      if (this._checkProperty('from', from, [this._checkUndefined])) {
        if (typeof from !== 'string' && typeof from.email !== 'string') {
          throw new Error('String or address object expected for `from`');
        }

        this.from = EmailAddress.create(from);
      }
    }
    /**
     * Set reply to
     */

  }, {
    key: "setReplyTo",
    value: function setReplyTo(replyTo) {
      if (this._checkProperty('replyTo', replyTo, [this._checkUndefined])) {
        if (typeof replyTo !== 'string' && typeof replyTo.email !== 'string') {
          throw new Error('String or address object expected for `replyTo`');
        }

        this.replyTo = EmailAddress.create(replyTo);
      }
    }
    /**
     * Set subject
     */

  }, {
    key: "setSubject",
    value: function setSubject(subject) {
      this._setProperty('subject', subject, 'string');
    }
    /**
     * Set send at
     */

  }, {
    key: "setSendAt",
    value: function setSendAt(sendAt) {
      if (this._checkProperty('sendAt', sendAt, [this._checkUndefined, this._createCheckThatThrows(Number.isInteger, 'Integer expected for `sendAt`')])) {
        this.sendAt = sendAt;
      }
    }
    /**
     * Set template ID, also checks if the template is dynamic or legacy
     */

  }, {
    key: "setTemplateId",
    value: function setTemplateId(templateId) {
      if (this._setProperty('templateId', templateId, 'string')) {
        if (templateId.indexOf('d-') === 0) {
          this.isDynamic = true;
        }
      }
    }
    /**
     * Set batch ID
     */

  }, {
    key: "setBatchId",
    value: function setBatchId(batchId) {
      this._setProperty('batchId', batchId, 'string');
    }
    /**
     * Set IP pool name
     */

  }, {
    key: "setIpPoolName",
    value: function setIpPoolName(ipPoolName) {
      this._setProperty('ipPoolName', ipPoolName, 'string');
    }
    /**
     * Set ASM
     */

  }, {
    key: "setAsm",
    value: function setAsm(asm) {
      if (this._checkProperty('asm', asm, [this._checkUndefined, this._createTypeCheck('object')])) {
        if (typeof asm.groupId !== 'number') {
          throw new Error('Expected `asm` to include an integer in its `groupId` field');
        }

        if (asm.groupsToDisplay && (!Array.isArray(asm.groupsToDisplay) || !asm.groupsToDisplay.every(function (group) {
          return typeof group === 'number';
        }))) {
          throw new Error('Array of integers expected for `asm.groupsToDisplay`');
        }

        this.asm = asm;
      }
    }
    /**
     * Set personalizations
     */

  }, {
    key: "setPersonalizations",
    value: function setPersonalizations(personalizations) {
      var _this2 = this;

      if (!this._doArrayCheck('personalizations', personalizations)) {
        return;
      }

      if (!personalizations.every(function (personalization) {
        return _typeof(personalization) === 'object';
      })) {
        throw new Error('Array of objects expected for `personalizations`');
      } //Clear and use add helper to add one by one


      this.personalizations = [];
      personalizations.forEach(function (personalization) {
        return _this2.addPersonalization(personalization);
      });
    }
    /**
     * Add personalization
     */

  }, {
    key: "addPersonalization",
    value: function addPersonalization(personalization) {
      //We should either send substitutions or dynamicTemplateData
      //depending on the templateId
      if (this.isDynamic && personalization.substitutions) {
        delete personalization.substitutions;
      } else if (!this.isDynamic && personalization.dynamicTemplateData) {
        delete personalization.dynamicTemplateData;
      } //Convert to class if needed


      if (!(personalization instanceof Personalization)) {
        personalization = new Personalization(personalization);
      } //If this is dynamic, set dynamicTemplateData, or set substitutions


      if (this.isDynamic) {
        this.applyDynamicTemplateData(personalization);
      } else {
        this.applySubstitutions(personalization);
      } //Push personalization to array


      this.personalizations.push(personalization);
    }
    /**
     * Convenience method for quickly creating personalizations
     */

  }, {
    key: "addTo",
    value: function addTo(to, cc, bcc) {
      if (typeof to === 'undefined' && typeof cc === 'undefined' && typeof bcc === 'undefined') {
        throw new Error('Provide at least one of to, cc or bcc');
      }

      this.addPersonalization(new Personalization({
        to: to,
        cc: cc,
        bcc: bcc
      }));
    }
    /**
     * Set substitutions
     */

  }, {
    key: "setSubstitutions",
    value: function setSubstitutions(substitutions) {
      this._setProperty('substitutions', substitutions, 'object');
    }
    /**
     * Set substitution wrappers
     */

  }, {
    key: "setSubstitutionWrappers",
    value: function setSubstitutionWrappers(substitutionWrappers) {
      var lengthCheck = function lengthCheck(propertyName, value) {
        if (!Array.isArray(value) || value.length !== 2) {
          throw new Error('Array expected with two elements for `' + propertyName + '`');
        }
      };

      if (this._checkProperty('substitutionWrappers', substitutionWrappers, [this._checkUndefined, lengthCheck])) {
        this.substitutionWrappers = substitutionWrappers;
      }
    }
    /**
     * Helper which applies globally set substitutions to personalizations
     */

  }, {
    key: "applySubstitutions",
    value: function applySubstitutions(personalization) {
      if (personalization instanceof Personalization) {
        personalization.reverseMergeSubstitutions(this.substitutions);
        personalization.setSubstitutionWrappers(this.substitutionWrappers);
      }
    }
    /**
     * Helper which applies globally set dynamic_template_data to personalizations
     */

  }, {
    key: "applyDynamicTemplateData",
    value: function applyDynamicTemplateData(personalization) {
      if (personalization instanceof Personalization) {
        personalization.deepMergeDynamicTemplateData(this.dynamicTemplateData);
      }
    }
    /**
     * Set dynamicTemplateData
     */

  }, {
    key: "setDynamicTemplateData",
    value: function setDynamicTemplateData(dynamicTemplateData) {
      if (typeof dynamicTemplateData === 'undefined') {
        return;
      }

      if (_typeof(dynamicTemplateData) !== 'object') {
        throw new Error('Object expected for `dynamicTemplateData`');
      } // Check dynamic template for non-escaped characters and warn if found


      if (!this.hideWarnings) {
        Object.values(dynamicTemplateData).forEach(function (value) {
          if (/['"&]/.test(value)) {
            console.warn(DYNAMIC_TEMPLATE_CHAR_WARNING);
          }
        });
      }

      this.dynamicTemplateData = dynamicTemplateData;
    }
    /**
     * Set content
     */

  }, {
    key: "setContent",
    value: function setContent(content) {
      if (this._doArrayCheck('content', content)) {
        if (!content.every(function (contentField) {
          return _typeof(contentField) === 'object';
        })) {
          throw new Error('Expected each entry in `content` to be an object');
        }

        if (!content.every(function (contentField) {
          return typeof contentField.type === 'string';
        })) {
          throw new Error('Expected each `content` entry to contain a `type` string');
        }

        if (!content.every(function (contentField) {
          return typeof contentField.value === 'string';
        })) {
          throw new Error('Expected each `content` entry to contain a `value` string');
        }

        this.content = content;
      }
    }
    /**
     * Add content
     */

  }, {
    key: "addContent",
    value: function addContent(content) {
      if (this._checkProperty('content', content, [this._createTypeCheck('object')])) {
        this.content.push(content);
      }
    }
    /**
     * Add text content
     */

  }, {
    key: "addTextContent",
    value: function addTextContent(text) {
      if (this._checkProperty('text', text, [this._checkUndefined, this._createTypeCheck('string')])) {
        this.addContent({
          value: text,
          type: 'text/plain'
        });
      }
    }
    /**
     * Add HTML content
     */

  }, {
    key: "addHtmlContent",
    value: function addHtmlContent(html) {
      if (this._checkProperty('html', html, [this._checkUndefined, this._createTypeCheck('string')])) {
        this.addContent({
          value: html,
          type: 'text/html'
        });
      }
    }
    /**
     * Set attachments
     */

  }, {
    key: "setAttachments",
    value: function setAttachments(attachments) {
      if (this._doArrayCheck('attachments', attachments)) {
        if (!attachments.every(function (attachment) {
          return typeof attachment.content === 'string';
        })) {
          throw new Error('Expected each attachment to contain a `content` string');
        }

        if (!attachments.every(function (attachment) {
          return typeof attachment.filename === 'string';
        })) {
          throw new Error('Expected each attachment to contain a `filename` string');
        }

        if (!attachments.every(function (attachment) {
          return !attachment.type || typeof attachment.type === 'string';
        })) {
          throw new Error('Expected the attachment\'s `type` field to be a string');
        }

        if (!attachments.every(function (attachment) {
          return !attachment.disposition || typeof attachment.disposition === 'string';
        })) {
          throw new Error('Expected the attachment\'s `disposition` field to be a string');
        }

        this.attachments = attachments;
      }
    }
    /**
     * Add attachment
     */

  }, {
    key: "addAttachment",
    value: function addAttachment(attachment) {
      if (this._checkProperty('attachment', attachment, [this._checkUndefined, this._createTypeCheck('object')])) {
        this.attachments.push(attachment);
      }
    }
    /**
     * Set categories
     */

  }, {
    key: "setCategories",
    value: function setCategories(categories) {
      var allElementsAreStrings = function allElementsAreStrings(propertyName, value) {
        if (!Array.isArray(value) || !value.every(function (item) {
          return typeof item === 'string';
        })) {
          throw new Error('Array of strings expected for `' + propertyName + '`');
        }
      };

      if (typeof categories === 'string') {
        categories = [categories];
      }

      if (this._checkProperty('categories', categories, [this._checkUndefined, allElementsAreStrings])) {
        this.categories = categories;
      }
    }
    /**
     * Add category
     */

  }, {
    key: "addCategory",
    value: function addCategory(category) {
      if (this._checkProperty('category', category, [this._createTypeCheck('string')])) {
        this.categories.push(category);
      }
    }
    /**
     * Set headers
     */

  }, {
    key: "setHeaders",
    value: function setHeaders(headers) {
      this._setProperty('headers', headers, 'object');
    }
    /**
     * Add a header
     */

  }, {
    key: "addHeader",
    value: function addHeader(key, value) {
      if (this._checkProperty('key', key, [this._createTypeCheck('string')]) && this._checkProperty('value', value, [this._createTypeCheck('string')])) {
        this.headers[key] = value;
      }
    }
    /**
     * Set sections
     */

  }, {
    key: "setSections",
    value: function setSections(sections) {
      this._setProperty('sections', sections, 'object');
    }
    /**
     * Set custom args
     */

  }, {
    key: "setCustomArgs",
    value: function setCustomArgs(customArgs) {
      this._setProperty('customArgs', customArgs, 'object');
    }
    /**
     * Set tracking settings
     */

  }, {
    key: "setTrackingSettings",
    value: function setTrackingSettings(settings) {
      if (typeof settings === 'undefined') {
        return;
      }

      validateTrackingSettings(settings);
      this.trackingSettings = settings;
    }
    /**
     * Set mail settings
     */

  }, {
    key: "setMailSettings",
    value: function setMailSettings(settings) {
      if (typeof settings === 'undefined') {
        return;
      }

      validateMailSettings(settings);
      this.mailSettings = settings;
    }
    /**
     * Set hide warnings
     */

  }, {
    key: "setHideWarnings",
    value: function setHideWarnings(hide) {
      if (typeof hide === 'undefined') {
        return;
      }

      if (typeof hide !== 'boolean') {
        throw new Error('Boolean expected for `hideWarnings`');
      }

      this.hideWarnings = hide;
    }
    /**
     * To JSON
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      //Extract properties from self
      var from = this.from,
          replyTo = this.replyTo,
          sendAt = this.sendAt,
          subject = this.subject,
          content = this.content,
          templateId = this.templateId,
          personalizations = this.personalizations,
          attachments = this.attachments,
          ipPoolName = this.ipPoolName,
          batchId = this.batchId,
          asm = this.asm,
          sections = this.sections,
          headers = this.headers,
          categories = this.categories,
          customArgs = this.customArgs,
          mailSettings = this.mailSettings,
          trackingSettings = this.trackingSettings,
          replyToList = this.replyToList; //Initialize with mandatory values

      var json = {
        from: from,
        subject: subject,
        personalizations: arrayToJSON(personalizations)
      }; //Array properties

      if (Array.isArray(attachments) && attachments.length > 0) {
        json.attachments = arrayToJSON(attachments);
      }

      if (Array.isArray(categories) && categories.length > 0) {
        json.categories = categories.filter(function (cat) {
          return cat !== '';
        });
      }

      if (Array.isArray(content) && content.length > 0) {
        json.content = arrayToJSON(content);
      } //Object properties


      if (Object.keys(headers).length > 0) {
        json.headers = headers;
      }

      if (Object.keys(mailSettings).length > 0) {
        json.mailSettings = mailSettings;
      }

      if (Object.keys(trackingSettings).length > 0) {
        json.trackingSettings = trackingSettings;
      }

      if (Object.keys(customArgs).length > 0) {
        json.customArgs = customArgs;
      }

      if (Object.keys(sections).length > 0) {
        json.sections = sections;
      }

      if (Object.keys(asm).length > 0) {
        json.asm = asm;
      } //Simple properties


      if (typeof replyTo !== 'undefined') {
        json.replyTo = replyTo;
      }

      if (typeof sendAt !== 'undefined') {
        json.sendAt = sendAt;
      }

      if (typeof batchId !== 'undefined') {
        json.batchId = batchId;
      }

      if (typeof templateId !== 'undefined') {
        json.templateId = templateId;
      }

      if (typeof ipPoolName !== 'undefined') {
        json.ipPoolName = ipPoolName;
      }

      if (typeof replyToList !== 'undefined') {
        json.replyToList = replyToList;
      } //Return as snake cased object


      return toSnakeCase(json, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers', 'sections']);
    }
    /**************************************************************************
     * Static helpers
     ***/

    /**
     * Create a Mail instance from given data
     */

  }, {
    key: "_checkProperty",
    value:
    /**************************************************************************
     * helpers for property-setting checks
     ***/

    /**
     * Perform a set of checks on the new property value. Returns true if all
     * checks complete successfully without throwing errors or returning true.
     */
    function _checkProperty(propertyName, value, checks) {
      return !checks.some(function (e) {
        return e(propertyName, value);
      });
    }
    /**
     * Set a property with normal undefined and type-checks
     */

  }, {
    key: "_setProperty",
    value: function _setProperty(propertyName, value, propertyType) {
      var propertyChecksPassed = this._checkProperty(propertyName, value, [this._checkUndefined, this._createTypeCheck(propertyType)]);

      if (propertyChecksPassed) {
        this[propertyName] = value;
      }

      return propertyChecksPassed;
    }
    /**
     * Fail if the value is undefined.
     */

  }, {
    key: "_checkUndefined",
    value: function _checkUndefined(propertyName, value) {
      return typeof value === 'undefined';
    }
    /**
     * Create and return a function that checks for a given type
     */

  }, {
    key: "_createTypeCheck",
    value: function _createTypeCheck(propertyType) {
      return function (propertyName, value) {
        if (_typeof(value) !== propertyType) {
          throw new Error(propertyType + ' expected for `' + propertyName + '`');
        }
      };
    }
    /**
     * Create a check out of a callback. If the callback
     * returns false, the check will throw an error.
     */

  }, {
    key: "_createCheckThatThrows",
    value: function _createCheckThatThrows(check, errorString) {
      return function (propertyName, value) {
        if (!check(value)) {
          throw new Error(errorString);
        }
      };
    }
    /**
     * Set an array property after checking that the new value is an
     * array.
     */

  }, {
    key: "_setArrayProperty",
    value: function _setArrayProperty(propertyName, value) {
      if (this._doArrayCheck(propertyName, value)) {
        this[propertyName] = value;
      }
    }
    /**
     * Check that a value isn't undefined and is an array.
     */

  }, {
    key: "_doArrayCheck",
    value: function _doArrayCheck(propertyName, value) {
      return this._checkProperty(propertyName, value, [this._checkUndefined, this._createCheckThatThrows(Array.isArray, 'Array expected for`' + propertyName + '`')]);
    }
    /**
     * Set the replyToList from email body
     */

  }, {
    key: "setReplyToList",
    value: function setReplyToList(replyToList) {
      if (this._doArrayCheck('replyToList', replyToList) && replyToList.length) {
        if (!replyToList.every(function (replyTo) {
          return replyTo && typeof replyTo.email === 'string';
        })) {
          throw new Error('Expected each replyTo to contain an `email` string');
        }

        this.replyToList = replyToList;
      }
    }
  }], [{
    key: "create",
    value: function create(data) {
      var _this3 = this;

      //Array?
      if (Array.isArray(data)) {
        return data.filter(function (item) {
          return !!item;
        }).map(function (item) {
          return _this3.create(item);
        });
      } //Already instance of Mail class?


      if (data instanceof Mail) {
        return data;
      } //Create instance


      return new Mail(data);
    }
  }]);

  return Mail;
}(); //Export class


module.exports = Mail;

/***/ }),
/* 643 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var isMergeableObject = function isMergeableObject(value) {
  return isNonNullObject(value) && !isSpecial(value);
};

function isNonNullObject(value) {
  return !!value && _typeof(value) === 'object';
}

function isSpecial(value) {
  var stringValue = Object.prototype.toString.call(value);
  return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);
} // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25


var canUseSymbol = typeof Symbol === 'function' && Symbol["for"];
var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol["for"]('react.element') : 0xeac7;

function isReactElement(value) {
  return value.$$typeof === REACT_ELEMENT_TYPE;
}

function emptyTarget(val) {
  return Array.isArray(val) ? [] : {};
}

function cloneUnlessOtherwiseSpecified(value, options) {
  return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;
}

function defaultArrayMerge(target, source, options) {
  return target.concat(source).map(function (element) {
    return cloneUnlessOtherwiseSpecified(element, options);
  });
}

function getMergeFunction(key, options) {
  if (!options.customMerge) {
    return deepmerge;
  }

  var customMerge = options.customMerge(key);
  return typeof customMerge === 'function' ? customMerge : deepmerge;
}

function getEnumerableOwnPropertySymbols(target) {
  return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function (symbol) {
    return target.propertyIsEnumerable(symbol);
  }) : [];
}

function getKeys(target) {
  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
}

function propertyIsOnObject(object, property) {
  try {
    return property in object;
  } catch (_) {
    return false;
  }
} // Protects from prototype poisoning and unexpected merging up the prototype chain.


function propertyIsUnsafe(target, key) {
  return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,
  && !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,
  && Object.propertyIsEnumerable.call(target, key)); // and also unsafe if they're nonenumerable.
}

function mergeObject(target, source, options) {
  var destination = {};

  if (options.isMergeableObject(target)) {
    getKeys(target).forEach(function (key) {
      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
    });
  }

  getKeys(source).forEach(function (key) {
    if (propertyIsUnsafe(target, key)) {
      return;
    }

    if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
      destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
    } else {
      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
    }
  });
  return destination;
}

function deepmerge(target, source, options) {
  options = options || {};
  options.arrayMerge = options.arrayMerge || defaultArrayMerge;
  options.isMergeableObject = options.isMergeableObject || isMergeableObject; // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()
  // implementations can use it. The caller may not replace it.

  options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
  var sourceIsArray = Array.isArray(source);
  var targetIsArray = Array.isArray(target);
  var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

  if (!sourceAndTargetTypesMatch) {
    return cloneUnlessOtherwiseSpecified(source, options);
  } else if (sourceIsArray) {
    return options.arrayMerge(target, source, options);
  } else {
    return mergeObject(target, source, options);
  }
}

deepmerge.all = function deepmergeAll(array, options) {
  if (!Array.isArray(array)) {
    throw new Error('first argument should be an array');
  }

  return array.reduce(function (prev, next) {
    return deepmerge(prev, next, options);
  }, {});
};

var deepmerge_1 = deepmerge;
module.exports = deepmerge_1;

/***/ }),
/* 644 */
/***/ (function(module, exports) {

var DYNAMIC_TEMPLATE_CHAR_WARNING = "\nContent with characters ', \" or & may need to be escaped with three brackets\n{{{ content }}}\nSee https://sendgrid.com/docs/for-developers/sending-email/using-handlebars/ for more information.";
module.exports = {
  DYNAMIC_TEMPLATE_CHAR_WARNING: DYNAMIC_TEMPLATE_CHAR_WARNING
};

/***/ }),
/* 645 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var validate = function validate(parent, parentName, childName, childType) {
  if (typeof parent === 'undefined' || typeof parent[childName] === 'undefined') {
    return;
  }

  if (_typeof(parent[childName]) !== childType) {
    throw new Error("".concat(childType, " expected for `").concat(parentName, ".").concat(childName, "`"));
  }
};

module.exports = {
  validateMailSettings: function validateMailSettings(settings) {
    if (_typeof(settings) !== 'object') {
      throw new Error('Object expected for `mailSettings`');
    }

    var bcc = settings.bcc,
        bypassListManagement = settings.bypassListManagement,
        bypassSpamManagement = settings.bypassSpamManagement,
        bypassBounceManagement = settings.bypassBounceManagement,
        bypassUnsubscribeManagement = settings.bypassUnsubscribeManagement,
        footer = settings.footer,
        sandboxMode = settings.sandboxMode,
        spamCheck = settings.spamCheck;
    validate(bcc, 'bcc', 'enable', 'boolean');
    validate(bcc, 'bcc', 'email', 'string');
    validate(bypassListManagement, 'bypassListManagement', 'enable', 'boolean');
    validate(bypassSpamManagement, 'bypassSpamManagement', 'enable', 'boolean');
    validate(bypassBounceManagement, 'bypassBounceManagement', 'enable', 'boolean');
    validate(bypassUnsubscribeManagement, 'bypassUnsubscribeManagement', 'enable', 'boolean');
    validate(footer, 'footer', 'enable', 'boolean');
    validate(footer, 'footer', 'text', 'string');
    validate(footer, 'footer', 'html', 'string');
    validate(sandboxMode, 'sandboxMode', 'enable', 'boolean');
    validate(spamCheck, 'spamCheck', 'enable', 'boolean');
    validate(spamCheck, 'spamCheck', 'threshold', 'number');
    validate(spamCheck, 'spamCheck', 'postToUrl', 'string');
  },
  validateTrackingSettings: function validateTrackingSettings(settings) {
    if (_typeof(settings) !== 'object') {
      throw new Error('Object expected for `trackingSettings`');
    }

    var clickTracking = settings.clickTracking,
        openTracking = settings.openTracking,
        subscriptionTracking = settings.subscriptionTracking,
        ganalytics = settings.ganalytics;
    validate(clickTracking, 'clickTracking', 'enable', 'boolean');
    validate(clickTracking, 'clickTracking', 'enableText', 'boolean');
    validate(openTracking, 'openTracking', 'enable', 'boolean');
    validate(openTracking, 'openTracking', 'substitutionTag', 'string');
    validate(subscriptionTracking, 'subscriptionTracking', 'enable', 'boolean');
    validate(subscriptionTracking, 'subscriptionTracking', 'text', 'string');
    validate(subscriptionTracking, 'subscriptionTracking', 'html', 'string');
    validate(subscriptionTracking, 'subscriptionTracking', 'substitutionTag', 'string');
    validate(ganalytics, 'ganalytics', 'enable', 'boolean');
    validate(ganalytics, 'ganalytics', 'utm_source', 'string');
    validate(ganalytics, 'ganalytics', 'utm_medium', 'string');
    validate(ganalytics, 'ganalytics', 'utm_term', 'string');
    validate(ganalytics, 'ganalytics', 'utm_content', 'string');
    validate(ganalytics, 'ganalytics', 'utm_campaign', 'string');
  }
};

/***/ }),
/* 646 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var Response = /*#__PURE__*/function () {
  function Response(statusCode, body, headers) {
    _classCallCheck(this, Response);

    this.statusCode = statusCode;
    this.body = body;
    this.headers = headers;
  }

  _createClass(Response, [{
    key: "toString",
    value: function toString() {
      return 'HTTP ' + this.statusCode + ' ' + this.body;
    }
  }]);

  return Response;
}();

module.exports = Response;

/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Response error class
 */

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var ResponseError = /*#__PURE__*/function (_Error) {
  _inherits(ResponseError, _Error);

  var _super = _createSuper(ResponseError);

  /**
   * Constructor
   */
  function ResponseError(response) {
    var _this;

    _classCallCheck(this, ResponseError);

    //Super
    _this = _super.call(this); //Extract data from response

    var headers = response.headers,
        status = response.status,
        statusText = response.statusText,
        data = response.data; //Set data

    _this.code = status;
    _this.message = statusText;
    _this.response = {
      headers: headers,
      body: data
    }; //Capture stack trace

    if (!_this.stack) {
      Error.captureStackTrace(_assertThisInitialized(_this), _this.constructor);
    } //Clean up stack trace


    var regex = new RegExp(process.cwd() + '/', 'gi');
    _this.stack = _this.stack.replace(regex, '');
    return _this;
  }
  /**
   * Convert to string
   */


  _createClass(ResponseError, [{
    key: "toString",
    value: function toString() {
      var body = this.response.body;
      var err = "".concat(this.message, " (").concat(this.code, ")");

      if (body && Array.isArray(body.errors)) {
        body.errors.forEach(function (error) {
          var message = error.message;
          var field = error.field;
          var help = error.help;
          err += "\n  ".concat(message, "\n    ").concat(field, "\n    ").concat(help);
        });
      }

      return err;
    }
    /**
     * Convert to simple object for JSON responses
     */

  }, {
    key: "toJSON",
    value: function toJSON() {
      var message = this.message,
          code = this.code,
          response = this.response;
      return {
        message: message,
        code: code,
        response: response
      };
    }
  }]);

  return ResponseError;
}( /*#__PURE__*/_wrapNativeSuper(Error)); //Export


module.exports = ResponseError;

/***/ }),
/* 648 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Dependencies
 */

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var toCamelCase = __webpack_require__(123);

var deepClone = __webpack_require__(124);
/**
 * Options
 */


var AggregatedByOptions = ['day', 'week', 'month'];
var CountryOptions = ['us', 'ca'];
var SortByDirection = ['desc', 'asc'];
/**
 * Statistics class
 */

var Statistics = /*#__PURE__*/function () {
  function Statistics(data) {
    _classCallCheck(this, Statistics);

    this.startDate = null;
    this.endDate = null;
    this.aggregatedBy = null;

    if (data) {
      this.fromData(data);
    }
  }
  /**
   * Build from data
   */


  _createClass(Statistics, [{
    key: "fromData",
    value: function fromData(data) {
      //Expecting object
      if (_typeof(data) !== 'object') {
        throw new Error('Expecting object for Statistics data');
      } //Convert to camel case to make it workable, making a copy to prevent
      //changes to the original objects


      data = deepClone(data);
      data = toCamelCase(data, ['substitutions', 'customArgs']);
      var _data = data,
          startDate = _data.startDate,
          endDate = _data.endDate,
          aggregatedBy = _data.aggregatedBy;
      this.setStartDate(startDate);
      this.setEndDate(endDate);
      this.setAggregatedBy(aggregatedBy);
    }
    /**
     * Set startDate
     */

  }, {
    key: "setStartDate",
    value: function setStartDate(startDate) {
      if (typeof startDate === 'undefined') {
        throw new Error('Date expected for `startDate`');
      }

      if (new Date(startDate) === 'Invalid Date' || isNaN(new Date(startDate))) {
        throw new Error('Date expected for `startDate`');
      }

      console.log(startDate);
      this.startDate = new Date(startDate).toISOString().slice(0, 10);
    }
    /**
     * Set endDate
     */

  }, {
    key: "setEndDate",
    value: function setEndDate(endDate) {
      if (typeof endDate === 'undefined') {
        this.endDate = new Date().toISOString().slice(0, 10);
        return;
      }

      if (new Date(endDate) === 'Invalid Date' || isNaN(new Date(endDate))) {
        throw new Error('Date expected for `endDate`');
      }

      this.endDate = new Date(endDate).toISOString().slice(0, 10);
    }
    /**
     * Set aggregatedBy
     */

  }, {
    key: "setAggregatedBy",
    value: function setAggregatedBy(aggregatedBy) {
      if (typeof aggregatedBy === 'undefined') {
        return;
      }

      if (typeof aggregatedBy === 'string' && AggregatedByOptions.includes(aggregatedBy.toLowerCase())) {
        this.aggregatedBy = aggregatedBy;
      } else {
        throw new Error('Incorrect value for `aggregatedBy`');
      }
    }
    /**
     * Get Global
     */

  }, {
    key: "getGlobal",
    value: function getGlobal() {
      var startDate = this.startDate,
          endDate = this.endDate,
          aggregatedBy = this.aggregatedBy;
      return {
        startDate: startDate,
        endDate: endDate,
        aggregatedBy: aggregatedBy
      };
    }
    /**
     * Get Advanced
     */

  }, {
    key: "getAdvanced",
    value: function getAdvanced(country) {
      var json = this.getGlobal();

      if (typeof country === 'undefined') {
        return json;
      }

      if (typeof country === 'string' && CountryOptions.includes(country.toLowerCase())) {
        json.country = country;
      }

      return json;
    }
    /**
     * Get Advanced Mailbox Providers
     */

  }, {
    key: "getAdvancedMailboxProviders",
    value: function getAdvancedMailboxProviders(mailBoxProviders) {
      var json = this.getGlobal();

      if (typeof mailBoxProviders === 'undefined') {
        return json;
      }

      if (Array.isArray(mailBoxProviders) && mailBoxProviders.some(function (x) {
        return typeof x !== 'string';
      })) {
        throw new Error('Array of strings expected for `mailboxProviders`');
      }

      json.mailBoxProviders = mailBoxProviders;
      return json;
    }
    /**
     * Get Advanced Browsers
     */

  }, {
    key: "getAdvancedBrowsers",
    value: function getAdvancedBrowsers(browsers) {
      var json = this.getGlobal();

      if (typeof browsers === 'undefined') {
        return json;
      }

      if (Array.isArray(browsers) && browsers.some(function (x) {
        return typeof x !== 'string';
      })) {
        throw new Error('Array of strings expected for `browsers`');
      }

      json.browsers = browsers;
      return json;
    }
    /**
     * Get Categories
     */

  }, {
    key: "getCategories",
    value: function getCategories(categories) {
      if (typeof categories === 'undefined') {
        throw new Error('Array of strings expected for `categories`');
      }

      if (!this._isValidArrayOfStrings(categories)) {
        throw new Error('Array of strings expected for `categories`');
      }

      var json = this.getGlobal();
      json.categories = categories;
      return json;
    }
    /**
     * Get Subuser
     */

  }, {
    key: "getSubuser",
    value: function getSubuser(subusers) {
      if (typeof subusers === 'undefined') {
        throw new Error('Array of strings expected for `subusers`');
      }

      if (!this._isValidArrayOfStrings(subusers)) {
        throw new Error('Array of strings expected for `subusers`');
      }

      var json = this.getGlobal();
      json.subusers = subusers;
      return json;
    }
    /**
     * Get Subuser Sum
     */

  }, {
    key: "getSubuserSum",
    value: function getSubuserSum() {
      var sortByMetric = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'delivered';
      var sortByDirection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SortByDirection[0];
      var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;
      var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;

      if (typeof sortByMetric !== 'string') {
        throw new Error('string expected for `sortByMetric`');
      }

      if (!SortByDirection.includes(sortByDirection.toLowerCase())) {
        throw new Error('desc or asc expected for `sortByDirection`');
      }

      if (typeof limit !== 'number') {
        throw new Error('number expected for `limit`');
      }

      if (typeof offset !== 'number') {
        throw new Error('number expected for `offset`');
      }

      var json = this.getGlobal();
      json.sortByMetric = sortByMetric;
      json.sortByDirection = sortByDirection;
      json.limit = limit;
      json.offset = offset;
      return json;
    }
    /**
     * Get Subuser Monthly
     */

  }, {
    key: "getSubuserMonthly",
    value: function getSubuserMonthly() {
      var sortByMetric = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'delivered';
      var sortByDirection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SortByDirection[0];
      var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;
      var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;

      if (typeof sortByMetric !== 'string') {
        throw new Error('string expected for `sortByMetric`');
      }

      if (!SortByDirection.includes(sortByDirection.toLowerCase())) {
        throw new Error('desc or asc expected for `sortByDirection`');
      }

      if (typeof limit !== 'number') {
        throw new Error('number expected for `limit`');
      }

      if (typeof offset !== 'number') {
        throw new Error('number expected for `offset`');
      }

      var json = this.getGlobal();
      json.sortByMetric = sortByMetric;
      json.sortByDirection = sortByDirection;
      json.limit = limit;
      json.offset = offset;
      return json;
    }
  }, {
    key: "_isValidArrayOfStrings",
    value: function _isValidArrayOfStrings(arr) {
      if (!Array.isArray(arr)) {
        return false;
      }

      if (arr.length < 1 || arr.some(function (x) {
        return typeof x !== 'string';
      })) {
        return false;
      }

      return true;
    }
  }]);

  return Statistics;
}(); //Export class


module.exports = Statistics;

/***/ }),
/* 649 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Expose helpers
 */

var arrayToJSON = __webpack_require__(288);

var convertKeys = __webpack_require__(209);

var deepClone = __webpack_require__(124);

var mergeData = __webpack_require__(650);

var splitNameEmail = __webpack_require__(285);

var toCamelCase = __webpack_require__(123);

var toSnakeCase = __webpack_require__(164);

var wrapSubstitutions = __webpack_require__(287);
/**
 * Export
 */


module.exports = {
  arrayToJSON: arrayToJSON,
  convertKeys: convertKeys,
  deepClone: deepClone,
  mergeData: mergeData,
  splitNameEmail: splitNameEmail,
  toCamelCase: toCamelCase,
  toSnakeCase: toSnakeCase,
  wrapSubstitutions: wrapSubstitutions
};

/***/ }),
/* 650 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Merge data helper
 */

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

module.exports = function mergeData(base, data) {
  //Validate data
  if (_typeof(base) !== 'object' || base === null) {
    throw new Error('Not an object provided for base');
  }

  if (_typeof(data) !== 'object' || data === null) {
    throw new Error('Not an object provided for data');
  } //Copy base


  var merged = Object.assign({}, base); //Add data

  for (var key in data) {
    //istanbul ignore else
    if (data.hasOwnProperty(key)) {
      if (data[key] && Array.isArray(data[key])) {
        merged[key] = data[key];
      } else if (data[key] && _typeof(data[key]) === 'object') {
        merged[key] = Object.assign({}, data[key]);
      } else if (data[key]) {
        merged[key] = data[key];
      }
    }
  } //Return


  return merged;
};

/***/ }),
/* 651 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var EventEmitter = __webpack_require__(97);

var shared = __webpack_require__(44);

var mimeTypes = __webpack_require__(290);

var MailComposer = __webpack_require__(653);

var DKIM = __webpack_require__(657);

var httpProxyClient = __webpack_require__(661);

var util = __webpack_require__(82);

var urllib = __webpack_require__(32);

var packageData = __webpack_require__(55);

var MailMessage = __webpack_require__(662);

var net = __webpack_require__(166);

var dns = __webpack_require__(289);

var crypto = __webpack_require__(68);
/**
 * Creates an object for exposing the Mail API
 *
 * @constructor
 * @param {Object} transporter Transport object instance to pass the mails to
 */


var Mail = /*#__PURE__*/function (_EventEmitter) {
  _inherits(Mail, _EventEmitter);

  var _super = _createSuper(Mail);

  function Mail(transporter, options, defaults) {
    var _this;

    _classCallCheck(this, Mail);

    _this = _super.call(this);
    _this.options = options || {};
    _this._defaults = defaults || {};
    _this._defaultPlugins = {
      compile: [function () {
        var _this2;

        return (_this2 = _this)._convertDataImages.apply(_this2, arguments);
      }],
      stream: []
    };
    _this._userPlugins = {
      compile: [],
      stream: []
    };
    _this.meta = new Map();
    _this.dkim = _this.options.dkim ? new DKIM(_this.options.dkim) : false;
    _this.transporter = transporter;
    _this.transporter.mailer = _assertThisInitialized(_this);
    _this.logger = shared.getLogger(_this.options, {
      component: _this.options.component || 'mail'
    });

    _this.logger.debug({
      tnx: 'create'
    }, 'Creating transport: %s', _this.getVersionString()); // setup emit handlers for the transporter


    if (typeof _this.transporter.on === 'function') {
      // deprecated log interface
      _this.transporter.on('log', function (log) {
        _this.logger.debug({
          tnx: 'transport'
        }, '%s: %s', log.type, log.message);
      }); // transporter errors


      _this.transporter.on('error', function (err) {
        _this.logger.error({
          err: err,
          tnx: 'transport'
        }, 'Transport Error: %s', err.message);

        _this.emit('error', err);
      }); // indicates if the sender has became idle


      _this.transporter.on('idle', function () {
        var _this3;

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        (_this3 = _this).emit.apply(_this3, ['idle'].concat(args));
      });
    }
    /**
     * Optional methods passed to the underlying transport object
     */


    ['close', 'isIdle', 'verify'].forEach(function (method) {
      _this[method] = function () {
        if (typeof _this.transporter[method] === 'function') {
          var _this$transporter;

          if (method === 'verify' && typeof _this.getSocket === 'function') {
            _this.transporter.getSocket = _this.getSocket;
            _this.getSocket = false;
          }

          return (_this$transporter = _this.transporter)[method].apply(_this$transporter, arguments);
        } else {
          _this.logger.warn({
            tnx: 'transport',
            methodName: method
          }, 'Non existing method %s called for transport', method);

          return false;
        }
      };
    }); // setup proxy handling

    if (_this.options.proxy && typeof _this.options.proxy === 'string') {
      _this.setupProxy(_this.options.proxy);
    }

    return _this;
  }

  _createClass(Mail, [{
    key: "use",
    value: function use(step, plugin) {
      step = (step || '').toString();

      if (!this._userPlugins.hasOwnProperty(step)) {
        this._userPlugins[step] = [plugin];
      } else {
        this._userPlugins[step].push(plugin);
      }

      return this;
    }
    /**
     * Sends an email using the preselected transport object
     *
     * @param {Object} data E-data description
     * @param {Function?} callback Callback to run once the sending succeeded or failed
     */

  }, {
    key: "sendMail",
    value: function sendMail(data, callback) {
      var _this4 = this;

      var promise;

      if (!callback) {
        promise = new Promise(function (resolve, reject) {
          callback = shared.callbackPromise(resolve, reject);
        });
      }

      if (typeof this.getSocket === 'function') {
        this.transporter.getSocket = this.getSocket;
        this.getSocket = false;
      }

      var mail = new MailMessage(this, data);
      this.logger.debug({
        tnx: 'transport',
        name: this.transporter.name,
        version: this.transporter.version,
        action: 'send'
      }, 'Sending mail using %s/%s', this.transporter.name, this.transporter.version);

      this._processPlugins('compile', mail, function (err) {
        if (err) {
          _this4.logger.error({
            err: err,
            tnx: 'plugin',
            action: 'compile'
          }, 'PluginCompile Error: %s', err.message);

          return callback(err);
        }

        mail.message = new MailComposer(mail.data).compile();
        mail.setMailerHeader();
        mail.setPriorityHeaders();
        mail.setListHeaders();

        _this4._processPlugins('stream', mail, function (err) {
          if (err) {
            _this4.logger.error({
              err: err,
              tnx: 'plugin',
              action: 'stream'
            }, 'PluginStream Error: %s', err.message);

            return callback(err);
          }

          if (mail.data.dkim || _this4.dkim) {
            mail.message.processFunc(function (input) {
              var dkim = mail.data.dkim ? new DKIM(mail.data.dkim) : _this4.dkim;

              _this4.logger.debug({
                tnx: 'DKIM',
                messageId: mail.message.messageId(),
                dkimDomains: dkim.keys.map(function (key) {
                  return key.keySelector + '.' + key.domainName;
                }).join(', ')
              }, 'Signing outgoing message with %s keys', dkim.keys.length);

              return dkim.sign(input, mail.data._dkim);
            });
          }

          _this4.transporter.send(mail, function () {
            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              args[_key2] = arguments[_key2];
            }

            if (args[0]) {
              _this4.logger.error({
                err: args[0],
                tnx: 'transport',
                action: 'send'
              }, 'Send Error: %s', args[0].message);
            }

            callback.apply(void 0, args);
          });
        });
      });

      return promise;
    }
  }, {
    key: "getVersionString",
    value: function getVersionString() {
      return util.format('%s (%s; +%s; %s/%s)', packageData.name, packageData.version, packageData.homepage, this.transporter.name, this.transporter.version);
    }
  }, {
    key: "_processPlugins",
    value: function _processPlugins(step, mail, callback) {
      step = (step || '').toString();

      if (!this._userPlugins.hasOwnProperty(step)) {
        return callback();
      }

      var userPlugins = this._userPlugins[step] || [];
      var defaultPlugins = this._defaultPlugins[step] || [];

      if (userPlugins.length) {
        this.logger.debug({
          tnx: 'transaction',
          pluginCount: userPlugins.length,
          step: step
        }, 'Using %s plugins for %s', userPlugins.length, step);
      }

      if (userPlugins.length + defaultPlugins.length === 0) {
        return callback();
      }

      var pos = 0;
      var block = 'default';

      var processPlugins = function processPlugins() {
        var curplugins = block === 'default' ? defaultPlugins : userPlugins;

        if (pos >= curplugins.length) {
          if (block === 'default' && userPlugins.length) {
            block = 'user';
            pos = 0;
            curplugins = userPlugins;
          } else {
            return callback();
          }
        }

        var plugin = curplugins[pos++];
        plugin(mail, function (err) {
          if (err) {
            return callback(err);
          }

          processPlugins();
        });
      };

      processPlugins();
    }
    /**
     * Sets up proxy handler for a Nodemailer object
     *
     * @param {String} proxyUrl Proxy configuration url
     */

  }, {
    key: "setupProxy",
    value: function setupProxy(proxyUrl) {
      var _this5 = this;

      var proxy = urllib.parse(proxyUrl); // setup socket handler for the mailer object

      this.getSocket = function (options, callback) {
        var protocol = proxy.protocol.replace(/:$/, '').toLowerCase();

        if (_this5.meta.has('proxy_handler_' + protocol)) {
          return _this5.meta.get('proxy_handler_' + protocol)(proxy, options, callback);
        }

        switch (protocol) {
          // Connect using a HTTP CONNECT method
          case 'http':
          case 'https':
            httpProxyClient(proxy.href, options.port, options.host, function (err, socket) {
              if (err) {
                return callback(err);
              }

              return callback(null, {
                connection: socket
              });
            });
            return;

          case 'socks':
          case 'socks5':
          case 'socks4':
          case 'socks4a':
            {
              if (!_this5.meta.has('proxy_socks_module')) {
                return callback(new Error('Socks module not loaded'));
              }

              var connect = function connect(ipaddress) {
                var _connectionOpts;

                var proxyV2 = !!_this5.meta.get('proxy_socks_module').SocksClient;
                var socksClient = proxyV2 ? _this5.meta.get('proxy_socks_module').SocksClient : _this5.meta.get('proxy_socks_module');
                var proxyType = Number(proxy.protocol.replace(/\D/g, '')) || 5;
                var connectionOpts = (_connectionOpts = {
                  proxy: {
                    ipaddress: ipaddress,
                    port: Number(proxy.port),
                    type: proxyType
                  }
                }, _defineProperty(_connectionOpts, proxyV2 ? 'destination' : 'target', {
                  host: options.host,
                  port: options.port
                }), _defineProperty(_connectionOpts, "command", 'connect'), _connectionOpts);

                if (proxy.auth) {
                  var username = decodeURIComponent(proxy.auth.split(':').shift());
                  var password = decodeURIComponent(proxy.auth.split(':').pop());

                  if (proxyV2) {
                    connectionOpts.proxy.userId = username;
                    connectionOpts.proxy.password = password;
                  } else if (proxyType === 4) {
                    connectionOpts.userid = username;
                  } else {
                    connectionOpts.authentication = {
                      username: username,
                      password: password
                    };
                  }
                }

                socksClient.createConnection(connectionOpts, function (err, info) {
                  if (err) {
                    return callback(err);
                  }

                  return callback(null, {
                    connection: info.socket || info
                  });
                });
              };

              if (net.isIP(proxy.hostname)) {
                return connect(proxy.hostname);
              }

              return dns.resolve(proxy.hostname, function (err, address) {
                if (err) {
                  return callback(err);
                }

                connect(Array.isArray(address) ? address[0] : address);
              });
            }
        }

        callback(new Error('Unknown proxy configuration'));
      };
    }
  }, {
    key: "_convertDataImages",
    value: function _convertDataImages(mail, callback) {
      if (!this.options.attachDataUrls && !mail.data.attachDataUrls || !mail.data.html) {
        return callback();
      }

      mail.resolveContent(mail.data, 'html', function (err, html) {
        if (err) {
          return callback(err);
        }

        var cidCounter = 0;
        html = (html || '').toString().replace(/(<img\b[^>]* src\s*=[\s"']*)(data:([^;]+);[^"'>\s]+)/gi, function (match, prefix, dataUri, mimeType) {
          var cid = crypto.randomBytes(10).toString('hex') + '@localhost';

          if (!mail.data.attachments) {
            mail.data.attachments = [];
          }

          if (!Array.isArray(mail.data.attachments)) {
            mail.data.attachments = [].concat(mail.data.attachments || []);
          }

          mail.data.attachments.push({
            path: dataUri,
            cid: cid,
            filename: 'image-' + ++cidCounter + '.' + mimeTypes.detectExtension(mimeType)
          });
          return prefix + 'cid:' + cid;
        });
        mail.data.html = html;
        callback();
      });
    }
  }, {
    key: "set",
    value: function set(key, value) {
      return this.meta.set(key, value);
    }
  }, {
    key: "get",
    value: function get(key) {
      return this.meta.get(key);
    }
  }]);

  return Mail;
}(EventEmitter);

module.exports = Mail;

/***/ }),
/* 652 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // module to handle cookies

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var urllib = __webpack_require__(32);

var SESSION_TIMEOUT = 1800; // 30 min

/**
 * Creates a biskviit cookie jar for managing cookie values in memory
 *
 * @constructor
 * @param {Object} [options] Optional options object
 */

var Cookies = /*#__PURE__*/function () {
  function Cookies(options) {
    _classCallCheck(this, Cookies);

    this.options = options || {};
    this.cookies = [];
  }
  /**
   * Stores a cookie string to the cookie storage
   *
   * @param {String} cookieStr Value from the 'Set-Cookie:' header
   * @param {String} url Current URL
   */


  _createClass(Cookies, [{
    key: "set",
    value: function set(cookieStr, url) {
      var urlparts = urllib.parse(url || '');
      var cookie = this.parse(cookieStr);
      var domain;

      if (cookie.domain) {
        domain = cookie.domain.replace(/^\./, ''); // do not allow cross origin cookies

        if ( // can't be valid if the requested domain is shorter than current hostname
        urlparts.hostname.length < domain.length || // prefix domains with dot to be sure that partial matches are not used
        ('.' + urlparts.hostname).substr(-domain.length + 1) !== '.' + domain) {
          cookie.domain = urlparts.hostname;
        }
      } else {
        cookie.domain = urlparts.hostname;
      }

      if (!cookie.path) {
        cookie.path = this.getPath(urlparts.pathname);
      } // if no expire date, then use sessionTimeout value


      if (!cookie.expires) {
        cookie.expires = new Date(Date.now() + (Number(this.options.sessionTimeout || SESSION_TIMEOUT) || SESSION_TIMEOUT) * 1000);
      }

      return this.add(cookie);
    }
    /**
     * Returns cookie string for the 'Cookie:' header.
     *
     * @param {String} url URL to check for
     * @returns {String} Cookie header or empty string if no matches were found
     */

  }, {
    key: "get",
    value: function get(url) {
      return this.list(url).map(function (cookie) {
        return cookie.name + '=' + cookie.value;
      }).join('; ');
    }
    /**
     * Lists all valied cookie objects for the specified URL
     *
     * @param {String} url URL to check for
     * @returns {Array} An array of cookie objects
     */

  }, {
    key: "list",
    value: function list(url) {
      var result = [];
      var i;
      var cookie;

      for (i = this.cookies.length - 1; i >= 0; i--) {
        cookie = this.cookies[i];

        if (this.isExpired(cookie)) {
          this.cookies.splice(i, i);
          continue;
        }

        if (this.match(cookie, url)) {
          result.unshift(cookie);
        }
      }

      return result;
    }
    /**
     * Parses cookie string from the 'Set-Cookie:' header
     *
     * @param {String} cookieStr String from the 'Set-Cookie:' header
     * @returns {Object} Cookie object
     */

  }, {
    key: "parse",
    value: function parse(cookieStr) {
      var cookie = {};
      (cookieStr || '').toString().split(';').forEach(function (cookiePart) {
        var valueParts = cookiePart.split('=');
        var key = valueParts.shift().trim().toLowerCase();
        var value = valueParts.join('=').trim();
        var domain;

        if (!key) {
          // skip empty parts
          return;
        }

        switch (key) {
          case 'expires':
            value = new Date(value); // ignore date if can not parse it

            if (value.toString() !== 'Invalid Date') {
              cookie.expires = value;
            }

            break;

          case 'path':
            cookie.path = value;
            break;

          case 'domain':
            domain = value.toLowerCase();

            if (domain.length && domain.charAt(0) !== '.') {
              domain = '.' + domain; // ensure preceeding dot for user set domains
            }

            cookie.domain = domain;
            break;

          case 'max-age':
            cookie.expires = new Date(Date.now() + (Number(value) || 0) * 1000);
            break;

          case 'secure':
            cookie.secure = true;
            break;

          case 'httponly':
            cookie.httponly = true;
            break;

          default:
            if (!cookie.name) {
              cookie.name = key;
              cookie.value = value;
            }

        }
      });
      return cookie;
    }
    /**
     * Checks if a cookie object is valid for a specified URL
     *
     * @param {Object} cookie Cookie object
     * @param {String} url URL to check for
     * @returns {Boolean} true if cookie is valid for specifiec URL
     */

  }, {
    key: "match",
    value: function match(cookie, url) {
      var urlparts = urllib.parse(url || ''); // check if hostname matches
      // .foo.com also matches subdomains, foo.com does not

      if (urlparts.hostname !== cookie.domain && (cookie.domain.charAt(0) !== '.' || ('.' + urlparts.hostname).substr(-cookie.domain.length) !== cookie.domain)) {
        return false;
      } // check if path matches


      var path = this.getPath(urlparts.pathname);

      if (path.substr(0, cookie.path.length) !== cookie.path) {
        return false;
      } // check secure argument


      if (cookie.secure && urlparts.protocol !== 'https:') {
        return false;
      }

      return true;
    }
    /**
     * Adds (or updates/removes if needed) a cookie object to the cookie storage
     *
     * @param {Object} cookie Cookie value to be stored
     */

  }, {
    key: "add",
    value: function add(cookie) {
      var i;
      var len; // nothing to do here

      if (!cookie || !cookie.name) {
        return false;
      } // overwrite if has same params


      for (i = 0, len = this.cookies.length; i < len; i++) {
        if (this.compare(this.cookies[i], cookie)) {
          // check if the cookie needs to be removed instead
          if (this.isExpired(cookie)) {
            this.cookies.splice(i, 1); // remove expired/unset cookie

            return false;
          }

          this.cookies[i] = cookie;
          return true;
        }
      } // add as new if not already expired


      if (!this.isExpired(cookie)) {
        this.cookies.push(cookie);
      }

      return true;
    }
    /**
     * Checks if two cookie objects are the same
     *
     * @param {Object} a Cookie to check against
     * @param {Object} b Cookie to check against
     * @returns {Boolean} True, if the cookies are the same
     */

  }, {
    key: "compare",
    value: function compare(a, b) {
      return a.name === b.name && a.path === b.path && a.domain === b.domain && a.secure === b.secure && a.httponly === a.httponly;
    }
    /**
     * Checks if a cookie is expired
     *
     * @param {Object} cookie Cookie object to check against
     * @returns {Boolean} True, if the cookie is expired
     */

  }, {
    key: "isExpired",
    value: function isExpired(cookie) {
      return cookie.expires && cookie.expires < new Date() || !cookie.value;
    }
    /**
     * Returns normalized cookie path for an URL path argument
     *
     * @param {String} pathname
     * @returns {String} Normalized path
     */

  }, {
    key: "getPath",
    value: function getPath(pathname) {
      var path = (pathname || '/').split('/');
      path.pop(); // remove filename part

      path = path.join('/').trim(); // ensure path prefix /

      if (path.charAt(0) !== '/') {
        path = '/' + path;
      } // ensure path suffix /


      if (path.substr(-1) !== '/') {
        path += '/';
      }

      return path;
    }
  }]);

  return Cookies;
}();

module.exports = Cookies;

/***/ }),
/* 653 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* eslint no-undefined: 0 */


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var MimeNode = __webpack_require__(291);

var mimeFuncs = __webpack_require__(167);
/**
 * Creates the object for composing a MimeNode instance out from the mail options
 *
 * @constructor
 * @param {Object} mail Mail options
 */


var MailComposer = /*#__PURE__*/function () {
  function MailComposer(mail) {
    _classCallCheck(this, MailComposer);

    this.mail = mail || {};
    this.message = false;
  }
  /**
   * Builds MimeNode instance
   */


  _createClass(MailComposer, [{
    key: "compile",
    value: function compile() {
      var _this = this;

      this._alternatives = this.getAlternatives();
      this._htmlNode = this._alternatives.filter(function (alternative) {
        return /^text\/html\b/i.test(alternative.contentType);
      }).pop();
      this._attachments = this.getAttachments(!!this._htmlNode);
      this._useRelated = !!(this._htmlNode && this._attachments.related.length);
      this._useAlternative = this._alternatives.length > 1;
      this._useMixed = this._attachments.attached.length > 1 || this._alternatives.length && this._attachments.attached.length === 1; // Compose MIME tree

      if (this.mail.raw) {
        this.message = new MimeNode('message/rfc822', {
          newline: this.mail.newline
        }).setRaw(this.mail.raw);
      } else if (this._useMixed) {
        this.message = this._createMixed();
      } else if (this._useAlternative) {
        this.message = this._createAlternative();
      } else if (this._useRelated) {
        this.message = this._createRelated();
      } else {
        this.message = this._createContentNode(false, [].concat(this._alternatives || []).concat(this._attachments.attached || []).shift() || {
          contentType: 'text/plain',
          content: ''
        });
      } // Add custom headers


      if (this.mail.headers) {
        this.message.addHeader(this.mail.headers);
      } // Add headers to the root node, always overrides custom headers


      ['from', 'sender', 'to', 'cc', 'bcc', 'reply-to', 'in-reply-to', 'references', 'subject', 'message-id', 'date'].forEach(function (header) {
        var key = header.replace(/-(\w)/g, function (o, c) {
          return c.toUpperCase();
        });

        if (_this.mail[key]) {
          _this.message.setHeader(header, _this.mail[key]);
        }
      }); // Sets custom envelope

      if (this.mail.envelope) {
        this.message.setEnvelope(this.mail.envelope);
      } // ensure Message-Id value


      this.message.messageId();
      return this.message;
    }
    /**
     * List all attachments. Resulting attachment objects can be used as input for MimeNode nodes
     *
     * @param {Boolean} findRelated If true separate related attachments from attached ones
     * @returns {Object} An object of arrays (`related` and `attached`)
     */

  }, {
    key: "getAttachments",
    value: function getAttachments(findRelated) {
      var _this2 = this;

      var icalEvent, eventObject;
      var attachments = [].concat(this.mail.attachments || []).map(function (attachment, i) {
        var data;
        var isMessageNode = /^message\//i.test(attachment.contentType);

        if (/^data:/i.test(attachment.path || attachment.href)) {
          attachment = _this2._processDataUrl(attachment);
        }

        data = {
          contentType: attachment.contentType || mimeFuncs.detectMimeType(attachment.filename || attachment.path || attachment.href || 'bin'),
          contentDisposition: attachment.contentDisposition || (isMessageNode ? 'inline' : 'attachment'),
          contentTransferEncoding: 'contentTransferEncoding' in attachment ? attachment.contentTransferEncoding : 'base64'
        };

        if (attachment.filename) {
          data.filename = attachment.filename;
        } else if (!isMessageNode && attachment.filename !== false) {
          data.filename = (attachment.path || attachment.href || '').split('/').pop().split('?').shift() || 'attachment-' + (i + 1);

          if (data.filename.indexOf('.') < 0) {
            data.filename += '.' + mimeFuncs.detectExtension(data.contentType);
          }
        }

        if (/^https?:\/\//i.test(attachment.path)) {
          attachment.href = attachment.path;
          attachment.path = undefined;
        }

        if (attachment.cid) {
          data.cid = attachment.cid;
        }

        if (attachment.raw) {
          data.raw = attachment.raw;
        } else if (attachment.path) {
          data.content = {
            path: attachment.path
          };
        } else if (attachment.href) {
          data.content = {
            href: attachment.href,
            httpHeaders: attachment.httpHeaders
          };
        } else {
          data.content = attachment.content || '';
        }

        if (attachment.encoding) {
          data.encoding = attachment.encoding;
        }

        if (attachment.headers) {
          data.headers = attachment.headers;
        }

        return data;
      });

      if (this.mail.icalEvent) {
        if (_typeof(this.mail.icalEvent) === 'object' && (this.mail.icalEvent.content || this.mail.icalEvent.path || this.mail.icalEvent.href || this.mail.icalEvent.raw)) {
          icalEvent = this.mail.icalEvent;
        } else {
          icalEvent = {
            content: this.mail.icalEvent
          };
        }

        eventObject = {};
        Object.keys(icalEvent).forEach(function (key) {
          eventObject[key] = icalEvent[key];
        });
        eventObject.contentType = 'application/ics';

        if (!eventObject.headers) {
          eventObject.headers = {};
        }

        eventObject.filename = eventObject.filename || 'invite.ics';
        eventObject.headers['Content-Disposition'] = 'attachment';
        eventObject.headers['Content-Transfer-Encoding'] = 'base64';
      }

      if (!findRelated) {
        return {
          attached: attachments.concat(eventObject || []),
          related: []
        };
      } else {
        return {
          attached: attachments.filter(function (attachment) {
            return !attachment.cid;
          }).concat(eventObject || []),
          related: attachments.filter(function (attachment) {
            return !!attachment.cid;
          })
        };
      }
    }
    /**
     * List alternatives. Resulting objects can be used as input for MimeNode nodes
     *
     * @returns {Array} An array of alternative elements. Includes the `text` and `html` values as well
     */

  }, {
    key: "getAlternatives",
    value: function getAlternatives() {
      var _this3 = this;

      var alternatives = [],
          text,
          html,
          watchHtml,
          amp,
          icalEvent,
          eventObject;

      if (this.mail.text) {
        if (_typeof(this.mail.text) === 'object' && (this.mail.text.content || this.mail.text.path || this.mail.text.href || this.mail.text.raw)) {
          text = this.mail.text;
        } else {
          text = {
            content: this.mail.text
          };
        }

        text.contentType = 'text/plain; charset=utf-8';
      }

      if (this.mail.watchHtml) {
        if (_typeof(this.mail.watchHtml) === 'object' && (this.mail.watchHtml.content || this.mail.watchHtml.path || this.mail.watchHtml.href || this.mail.watchHtml.raw)) {
          watchHtml = this.mail.watchHtml;
        } else {
          watchHtml = {
            content: this.mail.watchHtml
          };
        }

        watchHtml.contentType = 'text/watch-html; charset=utf-8';
      }

      if (this.mail.amp) {
        if (_typeof(this.mail.amp) === 'object' && (this.mail.amp.content || this.mail.amp.path || this.mail.amp.href || this.mail.amp.raw)) {
          amp = this.mail.amp;
        } else {
          amp = {
            content: this.mail.amp
          };
        }

        amp.contentType = 'text/x-amp-html; charset=utf-8';
      } // NB! when including attachments with a calendar alternative you might end up in a blank screen on some clients


      if (this.mail.icalEvent) {
        if (_typeof(this.mail.icalEvent) === 'object' && (this.mail.icalEvent.content || this.mail.icalEvent.path || this.mail.icalEvent.href || this.mail.icalEvent.raw)) {
          icalEvent = this.mail.icalEvent;
        } else {
          icalEvent = {
            content: this.mail.icalEvent
          };
        }

        eventObject = {};
        Object.keys(icalEvent).forEach(function (key) {
          eventObject[key] = icalEvent[key];
        });

        if (eventObject.content && _typeof(eventObject.content) === 'object') {
          // we are going to have the same attachment twice, so mark this to be
          // resolved just once
          eventObject.content._resolve = true;
        }

        eventObject.filename = false;
        eventObject.contentType = 'text/calendar; charset=utf-8; method=' + (eventObject.method || 'PUBLISH').toString().trim().toUpperCase();

        if (!eventObject.headers) {
          eventObject.headers = {};
        }
      }

      if (this.mail.html) {
        if (_typeof(this.mail.html) === 'object' && (this.mail.html.content || this.mail.html.path || this.mail.html.href || this.mail.html.raw)) {
          html = this.mail.html;
        } else {
          html = {
            content: this.mail.html
          };
        }

        html.contentType = 'text/html; charset=utf-8';
      }

      [].concat(text || []).concat(watchHtml || []).concat(amp || []).concat(html || []).concat(eventObject || []).concat(this.mail.alternatives || []).forEach(function (alternative) {
        var data;

        if (/^data:/i.test(alternative.path || alternative.href)) {
          alternative = _this3._processDataUrl(alternative);
        }

        data = {
          contentType: alternative.contentType || mimeFuncs.detectMimeType(alternative.filename || alternative.path || alternative.href || 'txt'),
          contentTransferEncoding: alternative.contentTransferEncoding
        };

        if (alternative.filename) {
          data.filename = alternative.filename;
        }

        if (/^https?:\/\//i.test(alternative.path)) {
          alternative.href = alternative.path;
          alternative.path = undefined;
        }

        if (alternative.raw) {
          data.raw = alternative.raw;
        } else if (alternative.path) {
          data.content = {
            path: alternative.path
          };
        } else if (alternative.href) {
          data.content = {
            href: alternative.href
          };
        } else {
          data.content = alternative.content || '';
        }

        if (alternative.encoding) {
          data.encoding = alternative.encoding;
        }

        if (alternative.headers) {
          data.headers = alternative.headers;
        }

        alternatives.push(data);
      });
      return alternatives;
    }
    /**
     * Builds multipart/mixed node. It should always contain different type of elements on the same level
     * eg. text + attachments
     *
     * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created
     * @returns {Object} MimeNode node element
     */

  }, {
    key: "_createMixed",
    value: function _createMixed(parentNode) {
      var _this4 = this;

      var node;

      if (!parentNode) {
        node = new MimeNode('multipart/mixed', {
          baseBoundary: this.mail.baseBoundary,
          textEncoding: this.mail.textEncoding,
          boundaryPrefix: this.mail.boundaryPrefix,
          disableUrlAccess: this.mail.disableUrlAccess,
          disableFileAccess: this.mail.disableFileAccess,
          normalizeHeaderKey: this.mail.normalizeHeaderKey,
          newline: this.mail.newline
        });
      } else {
        node = parentNode.createChild('multipart/mixed', {
          disableUrlAccess: this.mail.disableUrlAccess,
          disableFileAccess: this.mail.disableFileAccess,
          normalizeHeaderKey: this.mail.normalizeHeaderKey,
          newline: this.mail.newline
        });
      }

      if (this._useAlternative) {
        this._createAlternative(node);
      } else if (this._useRelated) {
        this._createRelated(node);
      }

      [].concat(!this._useAlternative && this._alternatives || []).concat(this._attachments.attached || []).forEach(function (element) {
        // if the element is a html node from related subpart then ignore it
        if (!_this4._useRelated || element !== _this4._htmlNode) {
          _this4._createContentNode(node, element);
        }
      });
      return node;
    }
    /**
     * Builds multipart/alternative node. It should always contain same type of elements on the same level
     * eg. text + html view of the same data
     *
     * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created
     * @returns {Object} MimeNode node element
     */

  }, {
    key: "_createAlternative",
    value: function _createAlternative(parentNode) {
      var _this5 = this;

      var node;

      if (!parentNode) {
        node = new MimeNode('multipart/alternative', {
          baseBoundary: this.mail.baseBoundary,
          textEncoding: this.mail.textEncoding,
          boundaryPrefix: this.mail.boundaryPrefix,
          disableUrlAccess: this.mail.disableUrlAccess,
          disableFileAccess: this.mail.disableFileAccess,
          normalizeHeaderKey: this.mail.normalizeHeaderKey,
          newline: this.mail.newline
        });
      } else {
        node = parentNode.createChild('multipart/alternative', {
          disableUrlAccess: this.mail.disableUrlAccess,
          disableFileAccess: this.mail.disableFileAccess,
          normalizeHeaderKey: this.mail.normalizeHeaderKey,
          newline: this.mail.newline
        });
      }

      this._alternatives.forEach(function (alternative) {
        if (_this5._useRelated && _this5._htmlNode === alternative) {
          _this5._createRelated(node);
        } else {
          _this5._createContentNode(node, alternative);
        }
      });

      return node;
    }
    /**
     * Builds multipart/related node. It should always contain html node with related attachments
     *
     * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created
     * @returns {Object} MimeNode node element
     */

  }, {
    key: "_createRelated",
    value: function _createRelated(parentNode) {
      var _this6 = this;

      var node;

      if (!parentNode) {
        node = new MimeNode('multipart/related; type="text/html"', {
          baseBoundary: this.mail.baseBoundary,
          textEncoding: this.mail.textEncoding,
          boundaryPrefix: this.mail.boundaryPrefix,
          disableUrlAccess: this.mail.disableUrlAccess,
          disableFileAccess: this.mail.disableFileAccess,
          normalizeHeaderKey: this.mail.normalizeHeaderKey,
          newline: this.mail.newline
        });
      } else {
        node = parentNode.createChild('multipart/related; type="text/html"', {
          disableUrlAccess: this.mail.disableUrlAccess,
          disableFileAccess: this.mail.disableFileAccess,
          normalizeHeaderKey: this.mail.normalizeHeaderKey,
          newline: this.mail.newline
        });
      }

      this._createContentNode(node, this._htmlNode);

      this._attachments.related.forEach(function (alternative) {
        return _this6._createContentNode(node, alternative);
      });

      return node;
    }
    /**
     * Creates a regular node with contents
     *
     * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created
     * @param {Object} element Node data
     * @returns {Object} MimeNode node element
     */

  }, {
    key: "_createContentNode",
    value: function _createContentNode(parentNode, element) {
      element = element || {};
      element.content = element.content || '';
      var node;
      var encoding = (element.encoding || 'utf8').toString().toLowerCase().replace(/[-_\s]/g, '');

      if (!parentNode) {
        node = new MimeNode(element.contentType, {
          filename: element.filename,
          baseBoundary: this.mail.baseBoundary,
          textEncoding: this.mail.textEncoding,
          boundaryPrefix: this.mail.boundaryPrefix,
          disableUrlAccess: this.mail.disableUrlAccess,
          disableFileAccess: this.mail.disableFileAccess,
          normalizeHeaderKey: this.mail.normalizeHeaderKey,
          newline: this.mail.newline
        });
      } else {
        node = parentNode.createChild(element.contentType, {
          filename: element.filename,
          textEncoding: this.mail.textEncoding,
          disableUrlAccess: this.mail.disableUrlAccess,
          disableFileAccess: this.mail.disableFileAccess,
          normalizeHeaderKey: this.mail.normalizeHeaderKey,
          newline: this.mail.newline
        });
      } // add custom headers


      if (element.headers) {
        node.addHeader(element.headers);
      }

      if (element.cid) {
        node.setHeader('Content-Id', '<' + element.cid.replace(/[<>]/g, '') + '>');
      }

      if (element.contentTransferEncoding) {
        node.setHeader('Content-Transfer-Encoding', element.contentTransferEncoding);
      } else if (this.mail.encoding && /^text\//i.test(element.contentType)) {
        node.setHeader('Content-Transfer-Encoding', this.mail.encoding);
      }

      if (!/^text\//i.test(element.contentType) || element.contentDisposition) {
        node.setHeader('Content-Disposition', element.contentDisposition || (element.cid ? 'inline' : 'attachment'));
      }

      if (typeof element.content === 'string' && !['utf8', 'usascii', 'ascii'].includes(encoding)) {
        element.content = Buffer.from(element.content, encoding);
      } // prefer pregenerated raw content


      if (element.raw) {
        node.setRaw(element.raw);
      } else {
        node.setContent(element.content);
      }

      return node;
    }
    /**
     * Parses data uri and converts it to a Buffer
     *
     * @param {Object} element Content element
     * @return {Object} Parsed element
     */

  }, {
    key: "_processDataUrl",
    value: function _processDataUrl(element) {
      var parts = (element.path || element.href).match(/^data:((?:[^;]*;)*(?:[^,]*)),(.*)$/i);

      if (!parts) {
        return element;
      }

      element.content = /\bbase64$/i.test(parts[1]) ? Buffer.from(parts[2], 'base64') : Buffer.from(decodeURIComponent(parts[2]));

      if ('path' in element) {
        element.path = false;
      }

      if ('href' in element) {
        element.href = false;
      }

      parts[1].split(';').forEach(function (item) {
        if (/^\w+\/[^/]+$/i.test(item)) {
          element.contentType = element.contentType || item.toLowerCase();
        }
      });
      return element;
    }
  }]);

  return MailComposer;
}();

module.exports = MailComposer;

/***/ }),
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Converts tokens for a single address into an address object
 *
 * @param {Array} tokens Tokens object
 * @return {Object} Address object
 */

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _handleAddress(tokens) {
  var token;
  var isGroup = false;
  var state = 'text';
  var address;
  var addresses = [];
  var data = {
    address: [],
    comment: [],
    group: [],
    text: []
  };
  var i;
  var len; // Filter out <addresses>, (comments) and regular text

  for (i = 0, len = tokens.length; i < len; i++) {
    token = tokens[i];

    if (token.type === 'operator') {
      switch (token.value) {
        case '<':
          state = 'address';
          break;

        case '(':
          state = 'comment';
          break;

        case ':':
          state = 'group';
          isGroup = true;
          break;

        default:
          state = 'text';
      }
    } else if (token.value) {
      if (state === 'address') {
        // handle use case where unquoted name includes a "<"
        // Apple Mail truncates everything between an unexpected < and an address
        // and so will we
        token.value = token.value.replace(/^[^<]*<\s*/, '');
      }

      data[state].push(token.value);
    }
  } // If there is no text but a comment, replace the two


  if (!data.text.length && data.comment.length) {
    data.text = data.comment;
    data.comment = [];
  }

  if (isGroup) {
    // http://tools.ietf.org/html/rfc2822#appendix-A.1.3
    data.text = data.text.join(' ');
    addresses.push({
      name: data.text || address && address.name,
      group: data.group.length ? addressparser(data.group.join(',')) : []
    });
  } else {
    // If no address was found, try to detect one from regular text
    if (!data.address.length && data.text.length) {
      for (i = data.text.length - 1; i >= 0; i--) {
        if (data.text[i].match(/^[^@\s]+@[^@\s]+$/)) {
          data.address = data.text.splice(i, 1);
          break;
        }
      }

      var _regexHandler = function _regexHandler(address) {
        if (!data.address.length) {
          data.address = [address.trim()];
          return ' ';
        } else {
          return address;
        }
      }; // still no address


      if (!data.address.length) {
        for (i = data.text.length - 1; i >= 0; i--) {
          // fixed the regex to parse email address correctly when email address has more than one @
          data.text[i] = data.text[i].replace(/\s*\b[^@\s]+@[^\s]+\b\s*/, _regexHandler).trim();

          if (data.address.length) {
            break;
          }
        }
      }
    } // If there's still is no text but a comment exixts, replace the two


    if (!data.text.length && data.comment.length) {
      data.text = data.comment;
      data.comment = [];
    } // Keep only the first address occurence, push others to regular text


    if (data.address.length > 1) {
      data.text = data.text.concat(data.address.splice(1));
    } // Join values with spaces


    data.text = data.text.join(' ');
    data.address = data.address.join(' ');

    if (!data.address && isGroup) {
      return [];
    } else {
      address = {
        address: data.address || data.text || '',
        name: data.text || data.address || ''
      };

      if (address.address === address.name) {
        if ((address.address || '').match(/@/)) {
          address.name = '';
        } else {
          address.address = '';
        }
      }

      addresses.push(address);
    }
  }

  return addresses;
}
/**
 * Creates a Tokenizer object for tokenizing address field strings
 *
 * @constructor
 * @param {String} str Address field string
 */


var Tokenizer = /*#__PURE__*/function () {
  function Tokenizer(str) {
    _classCallCheck(this, Tokenizer);

    this.str = (str || '').toString();
    this.operatorCurrent = '';
    this.operatorExpecting = '';
    this.node = null;
    this.escaped = false;
    this.list = [];
    /**
     * Operator tokens and which tokens are expected to end the sequence
     */

    this.operators = {
      '"': '"',
      '(': ')',
      '<': '>',
      ',': '',
      ':': ';',
      // Semicolons are not a legal delimiter per the RFC2822 grammar other
      // than for terminating a group, but they are also not valid for any
      // other use in this context.  Given that some mail clients have
      // historically allowed the semicolon as a delimiter equivalent to the
      // comma in their UI, it makes sense to treat them the same as a comma
      // when used outside of a group.
      ';': ''
    };
  }
  /**
   * Tokenizes the original input string
   *
   * @return {Array} An array of operator|text tokens
   */


  _createClass(Tokenizer, [{
    key: "tokenize",
    value: function tokenize() {
      var chr,
          list = [];

      for (var i = 0, len = this.str.length; i < len; i++) {
        chr = this.str.charAt(i);
        this.checkChar(chr);
      }

      this.list.forEach(function (node) {
        node.value = (node.value || '').toString().trim();

        if (node.value) {
          list.push(node);
        }
      });
      return list;
    }
    /**
     * Checks if a character is an operator or text and acts accordingly
     *
     * @param {String} chr Character from the address field
     */

  }, {
    key: "checkChar",
    value: function checkChar(chr) {
      if (this.escaped) {// ignore next condition blocks
      } else if (chr === this.operatorExpecting) {
        this.node = {
          type: 'operator',
          value: chr
        };
        this.list.push(this.node);
        this.node = null;
        this.operatorExpecting = '';
        this.escaped = false;
        return;
      } else if (!this.operatorExpecting && chr in this.operators) {
        this.node = {
          type: 'operator',
          value: chr
        };
        this.list.push(this.node);
        this.node = null;
        this.operatorExpecting = this.operators[chr];
        this.escaped = false;
        return;
      } else if (['"', "'"].includes(this.operatorExpecting) && chr === '\\') {
        this.escaped = true;
        return;
      }

      if (!this.node) {
        this.node = {
          type: 'text',
          value: ''
        };
        this.list.push(this.node);
      }

      if (chr === '\n') {
        // Convert newlines to spaces. Carriage return is ignored as \r and \n usually
        // go together anyway and there already is a WS for \n. Lone \r means something is fishy.
        chr = ' ';
      }

      if (chr.charCodeAt(0) >= 0x21 || [' ', '\t'].includes(chr)) {
        // skip command bytes
        this.node.value += chr;
      }

      this.escaped = false;
    }
  }]);

  return Tokenizer;
}();
/**
 * Parses structured e-mail addresses from an address field
 *
 * Example:
 *
 *    'Name <address@domain>'
 *
 * will be converted to
 *
 *     [{name: 'Name', address: 'address@domain'}]
 *
 * @param {String} str Address field
 * @return {Array} An array of address objects
 */


function addressparser(str, options) {
  options = options || {};
  var tokenizer = new Tokenizer(str);
  var tokens = tokenizer.tokenize();
  var addresses = [];
  var address = [];
  var parsedAddresses = [];
  tokens.forEach(function (token) {
    if (token.type === 'operator' && (token.value === ',' || token.value === ';')) {
      if (address.length) {
        addresses.push(address);
      }

      address = [];
    } else {
      address.push(token);
    }
  });

  if (address.length) {
    addresses.push(address);
  }

  addresses.forEach(function (address) {
    address = _handleAddress(address);

    if (address.length) {
      parsedAddresses = parsedAddresses.concat(address);
    }
  });

  if (options.flatten) {
    var _addresses = [];

    var walkAddressList = function walkAddressList(list) {
      list.forEach(function (address) {
        if (address.group) {
          return walkAddressList(address.group);
        } else {
          _addresses.push(address);
        }
      });
    };

    walkAddressList(parsedAddresses);
    return _addresses;
  }

  return parsedAddresses;
} // expose to the world


module.exports = addressparser;

/***/ }),
/* 655 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var Transform = __webpack_require__(15).Transform;

var LastNewline = /*#__PURE__*/function (_Transform) {
  _inherits(LastNewline, _Transform);

  var _super = _createSuper(LastNewline);

  function LastNewline() {
    var _this;

    _classCallCheck(this, LastNewline);

    _this = _super.call(this);
    _this.lastByte = false;
    return _this;
  }

  _createClass(LastNewline, [{
    key: "_transform",
    value: function _transform(chunk, encoding, done) {
      if (chunk.length) {
        this.lastByte = chunk[chunk.length - 1];
      }

      this.push(chunk);
      done();
    }
  }, {
    key: "_flush",
    value: function _flush(done) {
      if (this.lastByte === 0x0a) {
        return done();
      }

      if (this.lastByte === 0x0d) {
        this.push(Buffer.from('\n'));
        return done();
      }

      this.push(Buffer.from('\r\n'));
      return done();
    }
  }]);

  return LastNewline;
}(Transform);

module.exports = LastNewline;

/***/ }),
/* 656 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var stream = __webpack_require__(15);

var Transform = stream.Transform;
/**
 * Ensures that only <LF> is used for linebreaks
 *
 * @param {Object} options Stream options
 */

var LeWindows = /*#__PURE__*/function (_Transform) {
  _inherits(LeWindows, _Transform);

  var _super = _createSuper(LeWindows);

  function LeWindows(options) {
    var _this;

    _classCallCheck(this, LeWindows);

    _this = _super.call(this, options); // init Transform

    _this.options = options || {};
    return _this;
  }
  /**
   * Escapes dots
   */


  _createClass(LeWindows, [{
    key: "_transform",
    value: function _transform(chunk, encoding, done) {
      var buf;
      var lastPos = 0;

      for (var i = 0, len = chunk.length; i < len; i++) {
        if (chunk[i] === 0x0d) {
          // \n
          buf = chunk.slice(lastPos, i);
          lastPos = i + 1;
          this.push(buf);
        }
      }

      if (lastPos && lastPos < chunk.length) {
        buf = chunk.slice(lastPos);
        this.push(buf);
      } else if (!lastPos) {
        this.push(chunk);
      }

      done();
    }
  }]);

  return LeWindows;
}(Transform);

module.exports = LeWindows;

/***/ }),
/* 657 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // FIXME:
// replace this Transform mess with a method that pipes input argument to output argument

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var MessageParser = __webpack_require__(658);

var RelaxedBody = __webpack_require__(659);

var sign = __webpack_require__(660);

var PassThrough = __webpack_require__(15).PassThrough;

var fs = __webpack_require__(125);

var path = __webpack_require__(126);

var crypto = __webpack_require__(68);

var DKIM_ALGO = 'sha256';
var MAX_MESSAGE_SIZE = 128 * 1024; // buffer messages larger than this to disk

/*
// Usage:

let dkim = new DKIM({
    domainName: 'example.com',
    keySelector: 'key-selector',
    privateKey,
    cacheDir: '/tmp'
});
dkim.sign(input).pipe(process.stdout);

// Where inputStream is a rfc822 message (either a stream, string or Buffer)
// and outputStream is a DKIM signed rfc822 message
*/

var DKIMSigner = /*#__PURE__*/function () {
  function DKIMSigner(options, keys, input, output) {
    var _this = this;

    _classCallCheck(this, DKIMSigner);

    this.options = options || {};
    this.keys = keys;
    this.cacheTreshold = Number(this.options.cacheTreshold) || MAX_MESSAGE_SIZE;
    this.hashAlgo = this.options.hashAlgo || DKIM_ALGO;
    this.cacheDir = this.options.cacheDir || false;
    this.chunks = [];
    this.chunklen = 0;
    this.readPos = 0;
    this.cachePath = this.cacheDir ? path.join(this.cacheDir, 'message.' + Date.now() + '-' + crypto.randomBytes(14).toString('hex')) : false;
    this.cache = false;
    this.headers = false;
    this.bodyHash = false;
    this.parser = false;
    this.relaxedBody = false;
    this.input = input;
    this.output = output;
    this.output.usingCache = false;
    this.errored = false;
    this.input.on('error', function (err) {
      _this.errored = true;

      _this.cleanup();

      output.emit('error', err);
    });
  }

  _createClass(DKIMSigner, [{
    key: "cleanup",
    value: function cleanup() {
      if (!this.cache || !this.cachePath) {
        return;
      }

      fs.unlink(this.cachePath, function () {
        return false;
      });
    }
  }, {
    key: "createReadCache",
    value: function createReadCache() {
      var _this2 = this;

      // pipe remainings to cache file
      this.cache = fs.createReadStream(this.cachePath);
      this.cache.once('error', function (err) {
        _this2.cleanup();

        _this2.output.emit('error', err);
      });
      this.cache.once('close', function () {
        _this2.cleanup();
      });
      this.cache.pipe(this.output);
    }
  }, {
    key: "sendNextChunk",
    value: function sendNextChunk() {
      var _this3 = this;

      if (this.errored) {
        return;
      }

      if (this.readPos >= this.chunks.length) {
        if (!this.cache) {
          return this.output.end();
        }

        return this.createReadCache();
      }

      var chunk = this.chunks[this.readPos++];

      if (this.output.write(chunk) === false) {
        return this.output.once('drain', function () {
          _this3.sendNextChunk();
        });
      }

      setImmediate(function () {
        return _this3.sendNextChunk();
      });
    }
  }, {
    key: "sendSignedOutput",
    value: function sendSignedOutput() {
      var _this4 = this;

      var keyPos = 0;

      var signNextKey = function signNextKey() {
        if (keyPos >= _this4.keys.length) {
          _this4.output.write(_this4.parser.rawHeaders);

          return setImmediate(function () {
            return _this4.sendNextChunk();
          });
        }

        var key = _this4.keys[keyPos++];
        var dkimField = sign(_this4.headers, _this4.hashAlgo, _this4.bodyHash, {
          domainName: key.domainName,
          keySelector: key.keySelector,
          privateKey: key.privateKey,
          headerFieldNames: _this4.options.headerFieldNames,
          skipFields: _this4.options.skipFields
        });

        if (dkimField) {
          _this4.output.write(Buffer.from(dkimField + '\r\n'));
        }

        return setImmediate(signNextKey);
      };

      if (this.bodyHash && this.headers) {
        return signNextKey();
      }

      this.output.write(this.parser.rawHeaders);
      this.sendNextChunk();
    }
  }, {
    key: "createWriteCache",
    value: function createWriteCache() {
      var _this5 = this;

      this.output.usingCache = true; // pipe remainings to cache file

      this.cache = fs.createWriteStream(this.cachePath);
      this.cache.once('error', function (err) {
        _this5.cleanup(); // drain input


        _this5.relaxedBody.unpipe(_this5.cache);

        _this5.relaxedBody.on('readable', function () {
          while (_this5.relaxedBody.read() !== null) {// do nothing
          }
        });

        _this5.errored = true; // emit error

        _this5.output.emit('error', err);
      });
      this.cache.once('close', function () {
        _this5.sendSignedOutput();
      });
      this.relaxedBody.removeAllListeners('readable');
      this.relaxedBody.pipe(this.cache);
    }
  }, {
    key: "signStream",
    value: function signStream() {
      var _this6 = this;

      this.parser = new MessageParser();
      this.relaxedBody = new RelaxedBody({
        hashAlgo: this.hashAlgo
      });
      this.parser.on('headers', function (value) {
        _this6.headers = value;
      });
      this.relaxedBody.on('hash', function (value) {
        _this6.bodyHash = value;
      });
      this.relaxedBody.on('readable', function () {
        var chunk;

        if (_this6.cache) {
          return;
        }

        while ((chunk = _this6.relaxedBody.read()) !== null) {
          _this6.chunks.push(chunk);

          _this6.chunklen += chunk.length;

          if (_this6.chunklen >= _this6.cacheTreshold && _this6.cachePath) {
            return _this6.createWriteCache();
          }
        }
      });
      this.relaxedBody.on('end', function () {
        if (_this6.cache) {
          return;
        }

        _this6.sendSignedOutput();
      });
      this.parser.pipe(this.relaxedBody);
      setImmediate(function () {
        return _this6.input.pipe(_this6.parser);
      });
    }
  }]);

  return DKIMSigner;
}();

var DKIM = /*#__PURE__*/function () {
  function DKIM(options) {
    _classCallCheck(this, DKIM);

    this.options = options || {};
    this.keys = [].concat(this.options.keys || {
      domainName: options.domainName,
      keySelector: options.keySelector,
      privateKey: options.privateKey
    });
  }

  _createClass(DKIM, [{
    key: "sign",
    value: function sign(input, extraOptions) {
      var _this7 = this;

      var output = new PassThrough();
      var inputStream = input;
      var writeValue = false;

      if (Buffer.isBuffer(input)) {
        writeValue = input;
        inputStream = new PassThrough();
      } else if (typeof input === 'string') {
        writeValue = Buffer.from(input);
        inputStream = new PassThrough();
      }

      var options = this.options;

      if (extraOptions && Object.keys(extraOptions).length) {
        options = {};
        Object.keys(this.options || {}).forEach(function (key) {
          options[key] = _this7.options[key];
        });
        Object.keys(extraOptions || {}).forEach(function (key) {
          if (!(key in options)) {
            options[key] = extraOptions[key];
          }
        });
      }

      var signer = new DKIMSigner(options, this.keys, inputStream, output);
      setImmediate(function () {
        signer.signStream();

        if (writeValue) {
          setImmediate(function () {
            inputStream.end(writeValue);
          });
        }
      });
      return output;
    }
  }]);

  return DKIM;
}();

module.exports = DKIM;

/***/ }),
/* 658 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var Transform = __webpack_require__(15).Transform;
/**
 * MessageParser instance is a transform stream that separates message headers
 * from the rest of the body. Headers are emitted with the 'headers' event. Message
 * body is passed on as the resulting stream.
 */


var MessageParser = /*#__PURE__*/function (_Transform) {
  _inherits(MessageParser, _Transform);

  var _super = _createSuper(MessageParser);

  function MessageParser(options) {
    var _this;

    _classCallCheck(this, MessageParser);

    _this = _super.call(this, options);
    _this.lastBytes = Buffer.alloc(4);
    _this.headersParsed = false;
    _this.headerBytes = 0;
    _this.headerChunks = [];
    _this.rawHeaders = false;
    _this.bodySize = 0;
    return _this;
  }
  /**
   * Keeps count of the last 4 bytes in order to detect line breaks on chunk boundaries
   *
   * @param {Buffer} data Next data chunk from the stream
   */


  _createClass(MessageParser, [{
    key: "updateLastBytes",
    value: function updateLastBytes(data) {
      var lblen = this.lastBytes.length;
      var nblen = Math.min(data.length, lblen); // shift existing bytes

      for (var i = 0, len = lblen - nblen; i < len; i++) {
        this.lastBytes[i] = this.lastBytes[i + nblen];
      } // add new bytes


      for (var _i = 1; _i <= nblen; _i++) {
        this.lastBytes[lblen - _i] = data[data.length - _i];
      }
    }
    /**
     * Finds and removes message headers from the remaining body. We want to keep
     * headers separated until final delivery to be able to modify these
     *
     * @param {Buffer} data Next chunk of data
     * @return {Boolean} Returns true if headers are already found or false otherwise
     */

  }, {
    key: "checkHeaders",
    value: function checkHeaders(data) {
      var _this2 = this;

      if (this.headersParsed) {
        return true;
      }

      var lblen = this.lastBytes.length;
      var headerPos = 0;
      this.curLinePos = 0;

      for (var i = 0, len = this.lastBytes.length + data.length; i < len; i++) {
        var chr = void 0;

        if (i < lblen) {
          chr = this.lastBytes[i];
        } else {
          chr = data[i - lblen];
        }

        if (chr === 0x0a && i) {
          var pr1 = i - 1 < lblen ? this.lastBytes[i - 1] : data[i - 1 - lblen];
          var pr2 = i > 1 ? i - 2 < lblen ? this.lastBytes[i - 2] : data[i - 2 - lblen] : false;

          if (pr1 === 0x0a) {
            this.headersParsed = true;
            headerPos = i - lblen + 1;
            this.headerBytes += headerPos;
            break;
          } else if (pr1 === 0x0d && pr2 === 0x0a) {
            this.headersParsed = true;
            headerPos = i - lblen + 1;
            this.headerBytes += headerPos;
            break;
          }
        }
      }

      if (this.headersParsed) {
        this.headerChunks.push(data.slice(0, headerPos));
        this.rawHeaders = Buffer.concat(this.headerChunks, this.headerBytes);
        this.headerChunks = null;
        this.emit('headers', this.parseHeaders());

        if (data.length - 1 > headerPos) {
          var chunk = data.slice(headerPos);
          this.bodySize += chunk.length; // this would be the first chunk of data sent downstream

          setImmediate(function () {
            return _this2.push(chunk);
          });
        }

        return false;
      } else {
        this.headerBytes += data.length;
        this.headerChunks.push(data);
      } // store last 4 bytes to catch header break


      this.updateLastBytes(data);
      return false;
    }
  }, {
    key: "_transform",
    value: function _transform(chunk, encoding, callback) {
      if (!chunk || !chunk.length) {
        return callback();
      }

      if (typeof chunk === 'string') {
        chunk = Buffer.from(chunk, encoding);
      }

      var headersFound;

      try {
        headersFound = this.checkHeaders(chunk);
      } catch (E) {
        return callback(E);
      }

      if (headersFound) {
        this.bodySize += chunk.length;
        this.push(chunk);
      }

      setImmediate(callback);
    }
  }, {
    key: "_flush",
    value: function _flush(callback) {
      if (this.headerChunks) {
        var chunk = Buffer.concat(this.headerChunks, this.headerBytes);
        this.bodySize += chunk.length;
        this.push(chunk);
        this.headerChunks = null;
      }

      callback();
    }
  }, {
    key: "parseHeaders",
    value: function parseHeaders() {
      var lines = (this.rawHeaders || '').toString().split(/\r?\n/);

      for (var i = lines.length - 1; i > 0; i--) {
        if (/^\s/.test(lines[i])) {
          lines[i - 1] += '\n' + lines[i];
          lines.splice(i, 1);
        }
      }

      return lines.filter(function (line) {
        return line.trim();
      }).map(function (line) {
        return {
          key: line.substr(0, line.indexOf(':')).trim().toLowerCase(),
          line: line
        };
      });
    }
  }]);

  return MessageParser;
}(Transform);

module.exports = MessageParser;

/***/ }),
/* 659 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // streams through a message body and calculates relaxed body hash

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var Transform = __webpack_require__(15).Transform;

var crypto = __webpack_require__(68);

var RelaxedBody = /*#__PURE__*/function (_Transform) {
  _inherits(RelaxedBody, _Transform);

  var _super = _createSuper(RelaxedBody);

  function RelaxedBody(options) {
    var _this;

    _classCallCheck(this, RelaxedBody);

    _this = _super.call(this);
    options = options || {};
    _this.chunkBuffer = [];
    _this.chunkBufferLen = 0;
    _this.bodyHash = crypto.createHash(options.hashAlgo || 'sha1');
    _this.remainder = '';
    _this.byteLength = 0;
    _this.debug = options.debug;
    _this._debugBody = options.debug ? [] : false;
    return _this;
  }

  _createClass(RelaxedBody, [{
    key: "updateHash",
    value: function updateHash(chunk) {
      var bodyStr; // find next remainder

      var nextRemainder = ''; // This crux finds and removes the spaces from the last line and the newline characters after the last non-empty line
      // If we get another chunk that does not match this description then we can restore the previously processed data

      var state = 'file';

      for (var i = chunk.length - 1; i >= 0; i--) {
        var c = chunk[i];

        if (state === 'file' && (c === 0x0a || c === 0x0d)) {// do nothing, found \n or \r at the end of chunk, stil end of file
        } else if (state === 'file' && (c === 0x09 || c === 0x20)) {
          // switch to line ending mode, this is the last non-empty line
          state = 'line';
        } else if (state === 'line' && (c === 0x09 || c === 0x20)) {// do nothing, found ' ' or \t at the end of line, keep processing the last non-empty line
        } else if (state === 'file' || state === 'line') {
          // non line/file ending character found, switch to body mode
          state = 'body';

          if (i === chunk.length - 1) {
            // final char is not part of line end or file end, so do nothing
            break;
          }
        }

        if (i === 0) {
          // reached to the beginning of the chunk, check if it is still about the ending
          // and if the remainder also matches
          if (state === 'file' && (!this.remainder || /[\r\n]$/.test(this.remainder)) || state === 'line' && (!this.remainder || /[ \t]$/.test(this.remainder))) {
            // keep everything
            this.remainder += chunk.toString('binary');
            return;
          } else if (state === 'line' || state === 'file') {
            // process existing remainder as normal line but store the current chunk
            nextRemainder = chunk.toString('binary');
            chunk = false;
            break;
          }
        }

        if (state !== 'body') {
          continue;
        } // reached first non ending byte


        nextRemainder = chunk.slice(i + 1).toString('binary');
        chunk = chunk.slice(0, i + 1);
        break;
      }

      var needsFixing = !!this.remainder;

      if (chunk && !needsFixing) {
        // check if we even need to change anything
        for (var _i = 0, len = chunk.length; _i < len; _i++) {
          if (_i && chunk[_i] === 0x0a && chunk[_i - 1] !== 0x0d) {
            // missing \r before \n
            needsFixing = true;
            break;
          } else if (_i && chunk[_i] === 0x0d && chunk[_i - 1] === 0x20) {
            // trailing WSP found
            needsFixing = true;
            break;
          } else if (_i && chunk[_i] === 0x20 && chunk[_i - 1] === 0x20) {
            // multiple spaces found, needs to be replaced with just one
            needsFixing = true;
            break;
          } else if (chunk[_i] === 0x09) {
            // TAB found, needs to be replaced with a space
            needsFixing = true;
            break;
          }
        }
      }

      if (needsFixing) {
        bodyStr = this.remainder + (chunk ? chunk.toString('binary') : '');
        this.remainder = nextRemainder;
        bodyStr = bodyStr.replace(/\r?\n/g, '\n') // use js line endings
        .replace(/[ \t]*$/gm, '') // remove line endings, rtrim
        .replace(/[ \t]+/gm, ' ') // single spaces
        .replace(/\n/g, '\r\n'); // restore rfc822 line endings

        chunk = Buffer.from(bodyStr, 'binary');
      } else if (nextRemainder) {
        this.remainder = nextRemainder;
      }

      if (this.debug) {
        this._debugBody.push(chunk);
      }

      this.bodyHash.update(chunk);
    }
  }, {
    key: "_transform",
    value: function _transform(chunk, encoding, callback) {
      if (!chunk || !chunk.length) {
        return callback();
      }

      if (typeof chunk === 'string') {
        chunk = Buffer.from(chunk, encoding);
      }

      this.updateHash(chunk);
      this.byteLength += chunk.length;
      this.push(chunk);
      callback();
    }
  }, {
    key: "_flush",
    value: function _flush(callback) {
      // generate final hash and emit it
      if (/[\r\n]$/.test(this.remainder) && this.byteLength > 2) {
        // add terminating line end
        this.bodyHash.update(Buffer.from('\r\n'));
      }

      if (!this.byteLength) {
        // emit empty line buffer to keep the stream flowing
        this.push(Buffer.from('\r\n')); // this.bodyHash.update(Buffer.from('\r\n'));
      }

      this.emit('hash', this.bodyHash.digest('base64'), this.debug ? Buffer.concat(this._debugBody) : false);
      callback();
    }
  }]);

  return RelaxedBody;
}(Transform);

module.exports = RelaxedBody;

/***/ }),
/* 660 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var punycode = __webpack_require__(162);

var mimeFuncs = __webpack_require__(167);

var crypto = __webpack_require__(68);
/**
 * Returns DKIM signature header line
 *
 * @param {Object} headers Parsed headers object from MessageParser
 * @param {String} bodyHash Base64 encoded hash of the message
 * @param {Object} options DKIM options
 * @param {String} options.domainName Domain name to be signed for
 * @param {String} options.keySelector DKIM key selector to use
 * @param {String} options.privateKey DKIM private key to use
 * @return {String} Complete header line
 */


module.exports = function (headers, hashAlgo, bodyHash, options) {
  options = options || {}; // all listed fields from RFC4871 #5.5

  var defaultFieldNames = 'From:Sender:Reply-To:Subject:Date:Message-ID:To:' + 'Cc:MIME-Version:Content-Type:Content-Transfer-Encoding:Content-ID:' + 'Content-Description:Resent-Date:Resent-From:Resent-Sender:' + 'Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:References:' + 'List-Id:List-Help:List-Unsubscribe:List-Subscribe:List-Post:' + 'List-Owner:List-Archive';
  var fieldNames = options.headerFieldNames || defaultFieldNames;
  var canonicalizedHeaderData = relaxedHeaders(headers, fieldNames, options.skipFields);
  var dkimHeader = generateDKIMHeader(options.domainName, options.keySelector, canonicalizedHeaderData.fieldNames, hashAlgo, bodyHash);
  var signer, signature;
  canonicalizedHeaderData.headers += 'dkim-signature:' + relaxedHeaderLine(dkimHeader);
  signer = crypto.createSign(('rsa-' + hashAlgo).toUpperCase());
  signer.update(canonicalizedHeaderData.headers);

  try {
    signature = signer.sign(options.privateKey, 'base64');
  } catch (E) {
    return false;
  }

  return dkimHeader + signature.replace(/(^.{73}|.{75}(?!\r?\n|\r))/g, '$&\r\n ').trim();
};

module.exports.relaxedHeaders = relaxedHeaders;

function generateDKIMHeader(domainName, keySelector, fieldNames, hashAlgo, bodyHash) {
  var dkim = ['v=1', 'a=rsa-' + hashAlgo, 'c=relaxed/relaxed', 'd=' + punycode.toASCII(domainName), 'q=dns/txt', 's=' + keySelector, 'bh=' + bodyHash, 'h=' + fieldNames].join('; ');
  return mimeFuncs.foldLines('DKIM-Signature: ' + dkim, 76) + ';\r\n b=';
}

function relaxedHeaders(headers, fieldNames, skipFields) {
  var includedFields = new Set();
  var skip = new Set();
  var headerFields = new Map();
  (skipFields || '').toLowerCase().split(':').forEach(function (field) {
    skip.add(field.trim());
  });
  (fieldNames || '').toLowerCase().split(':').filter(function (field) {
    return !skip.has(field.trim());
  }).forEach(function (field) {
    includedFields.add(field.trim());
  });

  for (var i = headers.length - 1; i >= 0; i--) {
    var line = headers[i]; // only include the first value from bottom to top

    if (includedFields.has(line.key) && !headerFields.has(line.key)) {
      headerFields.set(line.key, relaxedHeaderLine(line.line));
    }
  }

  var headersList = [];
  var fields = [];
  includedFields.forEach(function (field) {
    if (headerFields.has(field)) {
      fields.push(field);
      headersList.push(field + ':' + headerFields.get(field));
    }
  });
  return {
    headers: headersList.join('\r\n') + '\r\n',
    fieldNames: fields.join(':')
  };
}

function relaxedHeaderLine(line) {
  return line.substr(line.indexOf(':') + 1).replace(/\r?\n/g, '').replace(/\s+/g, ' ').trim();
}

/***/ }),
/* 661 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Minimal HTTP/S proxy client
 */

var net = __webpack_require__(166);

var tls = __webpack_require__(295);

var urllib = __webpack_require__(32);
/**
 * Establishes proxied connection to destinationPort
 *
 * httpProxyClient("http://localhost:3128/", 80, "google.com", function(err, socket){
 *     socket.write("GET / HTTP/1.0\r\n\r\n");
 * });
 *
 * @param {String} proxyUrl proxy configuration, etg "http://proxy.host:3128/"
 * @param {Number} destinationPort Port to open in destination host
 * @param {String} destinationHost Destination hostname
 * @param {Function} callback Callback to run with the rocket object once connection is established
 */


function httpProxyClient(proxyUrl, destinationPort, destinationHost, callback) {
  var proxy = urllib.parse(proxyUrl); // create a socket connection to the proxy server

  var options;
  var connect;
  var socket;
  options = {
    host: proxy.hostname,
    port: Number(proxy.port) ? Number(proxy.port) : proxy.protocol === 'https:' ? 443 : 80
  };

  if (proxy.protocol === 'https:') {
    // we can use untrusted proxies as long as we verify actual SMTP certificates
    options.rejectUnauthorized = false;
    connect = tls.connect.bind(tls);
  } else {
    connect = net.connect.bind(net);
  } // Error harness for initial connection. Once connection is established, the responsibility
  // to handle errors is passed to whoever uses this socket


  var finished = false;

  var tempSocketErr = function tempSocketErr(err) {
    if (finished) {
      return;
    }

    finished = true;

    try {
      socket.destroy();
    } catch (E) {// ignore
    }

    callback(err);
  };

  socket = connect(options, function () {
    if (finished) {
      return;
    }

    var reqHeaders = {
      Host: destinationHost + ':' + destinationPort,
      Connection: 'close'
    };

    if (proxy.auth) {
      reqHeaders['Proxy-Authorization'] = 'Basic ' + Buffer.from(proxy.auth).toString('base64');
    }

    socket.write( // HTTP method
    'CONNECT ' + destinationHost + ':' + destinationPort + ' HTTP/1.1\r\n' + // HTTP request headers
    Object.keys(reqHeaders).map(function (key) {
      return key + ': ' + reqHeaders[key];
    }).join('\r\n') + // End request
    '\r\n\r\n');
    var headers = '';

    var onSocketData = function onSocketData(chunk) {
      var match;
      var remainder;

      if (finished) {
        return;
      }

      headers += chunk.toString('binary');

      if (match = headers.match(/\r\n\r\n/)) {
        socket.removeListener('data', onSocketData);
        remainder = headers.substr(match.index + match[0].length);
        headers = headers.substr(0, match.index);

        if (remainder) {
          socket.unshift(Buffer.from(remainder, 'binary'));
        } // proxy connection is now established


        finished = true; // check response code

        match = headers.match(/^HTTP\/\d+\.\d+ (\d+)/i);

        if (!match || (match[1] || '').charAt(0) !== '2') {
          try {
            socket.destroy();
          } catch (E) {// ignore
          }

          return callback(new Error('Invalid response from proxy' + (match && ': ' + match[1] || '')));
        }

        socket.removeListener('error', tempSocketErr);
        return callback(null, socket);
      }
    };

    socket.on('data', onSocketData);
  });
  socket.once('error', tempSocketErr);
}

module.exports = httpProxyClient;

/***/ }),
/* 662 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var shared = __webpack_require__(44);

var MimeNode = __webpack_require__(291);

var mimeFuncs = __webpack_require__(167);

var MailMessage = /*#__PURE__*/function () {
  function MailMessage(mailer, data) {
    var _this = this;

    _classCallCheck(this, MailMessage);

    this.mailer = mailer;
    this.data = {};
    this.message = null;
    data = data || {};
    var options = mailer.options || {};
    var defaults = mailer._defaults || {};
    Object.keys(data).forEach(function (key) {
      _this.data[key] = data[key];
    });
    this.data.headers = this.data.headers || {}; // apply defaults

    Object.keys(defaults).forEach(function (key) {
      if (!(key in _this.data)) {
        _this.data[key] = defaults[key];
      } else if (key === 'headers') {
        // headers is a special case. Allow setting individual default headers
        Object.keys(defaults.headers).forEach(function (key) {
          if (!(key in _this.data.headers)) {
            _this.data.headers[key] = defaults.headers[key];
          }
        });
      }
    }); // force specific keys from transporter options

    ['disableFileAccess', 'disableUrlAccess', 'normalizeHeaderKey'].forEach(function (key) {
      if (key in options) {
        _this.data[key] = options[key];
      }
    });
  }

  _createClass(MailMessage, [{
    key: "resolveContent",
    value: function resolveContent() {
      return shared.resolveContent.apply(shared, arguments);
    }
  }, {
    key: "resolveAll",
    value: function resolveAll(callback) {
      var _this2 = this;

      var keys = [[this.data, 'html'], [this.data, 'text'], [this.data, 'watchHtml'], [this.data, 'amp'], [this.data, 'icalEvent']];

      if (this.data.alternatives && this.data.alternatives.length) {
        this.data.alternatives.forEach(function (alternative, i) {
          keys.push([_this2.data.alternatives, i]);
        });
      }

      if (this.data.attachments && this.data.attachments.length) {
        this.data.attachments.forEach(function (attachment, i) {
          if (!attachment.filename) {
            attachment.filename = (attachment.path || attachment.href || '').split('/').pop().split('?').shift() || 'attachment-' + (i + 1);

            if (attachment.filename.indexOf('.') < 0) {
              attachment.filename += '.' + mimeFuncs.detectExtension(attachment.contentType);
            }
          }

          if (!attachment.contentType) {
            attachment.contentType = mimeFuncs.detectMimeType(attachment.filename || attachment.path || attachment.href || 'bin');
          }

          keys.push([_this2.data.attachments, i]);
        });
      }

      var mimeNode = new MimeNode();
      var addressKeys = ['from', 'to', 'cc', 'bcc', 'sender', 'replyTo'];
      addressKeys.forEach(function (address) {
        var value;

        if (_this2.message) {
          value = [].concat(mimeNode._parseAddresses(_this2.message.getHeader(address === 'replyTo' ? 'reply-to' : address)) || []);
        } else if (_this2.data[address]) {
          value = [].concat(mimeNode._parseAddresses(_this2.data[address]) || []);
        }

        if (value && value.length) {
          _this2.data[address] = value;
        } else if (address in _this2.data) {
          _this2.data[address] = null;
        }
      });
      var singleKeys = ['from', 'sender', 'replyTo'];
      singleKeys.forEach(function (address) {
        if (_this2.data[address]) {
          _this2.data[address] = _this2.data[address].shift();
        }
      });
      var pos = 0;

      var resolveNext = function resolveNext() {
        if (pos >= keys.length) {
          return callback(null, _this2.data);
        }

        var args = keys[pos++];

        if (!args[0] || !args[0][args[1]]) {
          return resolveNext();
        }

        shared.resolveContent.apply(shared, _toConsumableArray(args).concat([function (err, value) {
          if (err) {
            return callback(err);
          }

          var node = {
            content: value
          };

          if (args[0][args[1]] && _typeof(args[0][args[1]]) === 'object' && !Buffer.isBuffer(args[0][args[1]])) {
            Object.keys(args[0][args[1]]).forEach(function (key) {
              if (!(key in node) && !['content', 'path', 'href', 'raw'].includes(key)) {
                node[key] = args[0][args[1]][key];
              }
            });
          }

          args[0][args[1]] = node;
          resolveNext();
        }]));
      };

      setImmediate(function () {
        return resolveNext();
      });
    }
  }, {
    key: "normalize",
    value: function normalize(callback) {
      var _this3 = this;

      var envelope = this.data.envelope || this.message.getEnvelope();
      var messageId = this.message.messageId();
      this.resolveAll(function (err, data) {
        if (err) {
          return callback(err);
        }

        data.envelope = envelope;
        data.messageId = messageId;
        ['html', 'text', 'watchHtml', 'amp'].forEach(function (key) {
          if (data[key] && data[key].content) {
            if (typeof data[key].content === 'string') {
              data[key] = data[key].content;
            } else if (Buffer.isBuffer(data[key].content)) {
              data[key] = data[key].content.toString();
            }
          }
        });

        if (data.icalEvent && Buffer.isBuffer(data.icalEvent.content)) {
          data.icalEvent.content = data.icalEvent.content.toString('base64');
          data.icalEvent.encoding = 'base64';
        }

        if (data.alternatives && data.alternatives.length) {
          data.alternatives.forEach(function (alternative) {
            if (alternative && alternative.content && Buffer.isBuffer(alternative.content)) {
              alternative.content = alternative.content.toString('base64');
              alternative.encoding = 'base64';
            }
          });
        }

        if (data.attachments && data.attachments.length) {
          data.attachments.forEach(function (attachment) {
            if (attachment && attachment.content && Buffer.isBuffer(attachment.content)) {
              attachment.content = attachment.content.toString('base64');
              attachment.encoding = 'base64';
            }
          });
        }

        data.normalizedHeaders = {};
        Object.keys(data.headers || {}).forEach(function (key) {
          var value = [].concat(data.headers[key] || []).shift();
          value = value && value.value || value;

          if (value) {
            if (['references', 'in-reply-to', 'message-id', 'content-id'].includes(key)) {
              value = _this3.message._encodeHeaderValue(key, value);
            }

            data.normalizedHeaders[key] = value;
          }
        });

        if (data.list && _typeof(data.list) === 'object') {
          var listHeaders = _this3._getListHeaders(data.list);

          listHeaders.forEach(function (entry) {
            data.normalizedHeaders[entry.key] = entry.value.map(function (val) {
              return val && val.value || val;
            }).join(', ');
          });
        }

        if (data.references) {
          data.normalizedHeaders.references = _this3.message._encodeHeaderValue('references', data.references);
        }

        if (data.inReplyTo) {
          data.normalizedHeaders['in-reply-to'] = _this3.message._encodeHeaderValue('in-reply-to', data.inReplyTo);
        }

        return callback(null, data);
      });
    }
  }, {
    key: "setMailerHeader",
    value: function setMailerHeader() {
      if (!this.message || !this.data.xMailer) {
        return;
      }

      this.message.setHeader('X-Mailer', this.data.xMailer);
    }
  }, {
    key: "setPriorityHeaders",
    value: function setPriorityHeaders() {
      if (!this.message || !this.data.priority) {
        return;
      }

      switch ((this.data.priority || '').toString().toLowerCase()) {
        case 'high':
          this.message.setHeader('X-Priority', '1 (Highest)');
          this.message.setHeader('X-MSMail-Priority', 'High');
          this.message.setHeader('Importance', 'High');
          break;

        case 'low':
          this.message.setHeader('X-Priority', '5 (Lowest)');
          this.message.setHeader('X-MSMail-Priority', 'Low');
          this.message.setHeader('Importance', 'Low');
          break;

        default: // do not add anything, since all messages are 'Normal' by default

      }
    }
  }, {
    key: "setListHeaders",
    value: function setListHeaders() {
      var _this4 = this;

      if (!this.message || !this.data.list || _typeof(this.data.list) !== 'object') {
        return;
      } // add optional List-* headers


      if (this.data.list && _typeof(this.data.list) === 'object') {
        this._getListHeaders(this.data.list).forEach(function (listHeader) {
          listHeader.value.forEach(function (value) {
            _this4.message.addHeader(listHeader.key, value);
          });
        });
      }
    }
  }, {
    key: "_getListHeaders",
    value: function _getListHeaders(listData) {
      var _this5 = this;

      // make sure an url looks like <protocol:url>
      return Object.keys(listData).map(function (key) {
        return {
          key: 'list-' + key.toLowerCase().trim(),
          value: [].concat(listData[key] || []).map(function (value) {
            return {
              prepared: true,
              foldLines: true,
              value: [].concat(value || []).map(function (value) {
                if (typeof value === 'string') {
                  value = {
                    url: value
                  };
                }

                if (value && value.url) {
                  if (key.toLowerCase().trim() === 'id') {
                    // List-ID: "comment" <domain>
                    var _comment = value.comment || '';

                    if (mimeFuncs.isPlainText(_comment)) {
                      _comment = '"' + _comment + '"';
                    } else {
                      _comment = mimeFuncs.encodeWord(_comment);
                    }

                    return (value.comment ? _comment + ' ' : '') + _this5._formatListUrl(value.url).replace(/^<[^:]+\/{,2}/, '');
                  } // List-*: <http://domain> (comment)


                  var comment = value.comment || '';

                  if (!mimeFuncs.isPlainText(comment)) {
                    comment = mimeFuncs.encodeWord(comment);
                  }

                  return _this5._formatListUrl(value.url) + (value.comment ? ' (' + comment + ')' : '');
                }

                return '';
              }).filter(function (value) {
                return value;
              }).join(', ')
            };
          })
        };
      });
    }
  }, {
    key: "_formatListUrl",
    value: function _formatListUrl(url) {
      url = url.replace(/[\s<]+|[\s>]+/g, '');

      if (/^(https?|mailto|ftp):/.test(url)) {
        return '<' + url + '>';
      }

      if (/^[^@]+@[^@]+$/.test(url)) {
        return '<mailto:' + url + '>';
      }

      return '<http://' + url + '>';
    }
  }]);

  return MailMessage;
}();

module.exports = MailMessage;

/***/ }),
/* 663 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var EventEmitter = __webpack_require__(97);

var PoolResource = __webpack_require__(664);

var SMTPConnection = __webpack_require__(211);

var wellKnown = __webpack_require__(297);

var shared = __webpack_require__(44);

var packageData = __webpack_require__(55);
/**
 * Creates a SMTP pool transport object for Nodemailer
 *
 * @constructor
 * @param {Object} options SMTP Connection options
 */


var SMTPPool = /*#__PURE__*/function (_EventEmitter) {
  _inherits(SMTPPool, _EventEmitter);

  var _super = _createSuper(SMTPPool);

  function SMTPPool(options) {
    var _this;

    _classCallCheck(this, SMTPPool);

    _this = _super.call(this);
    options = options || {};

    if (typeof options === 'string') {
      options = {
        url: options
      };
    }

    var urlData;
    var service = options.service;

    if (typeof options.getSocket === 'function') {
      _this.getSocket = options.getSocket;
    }

    if (options.url) {
      urlData = shared.parseConnectionUrl(options.url);
      service = service || urlData.service;
    }

    _this.options = shared.assign(false, // create new object
    options, // regular options
    urlData, // url options
    service && wellKnown(service) // wellknown options
    );
    _this.options.maxConnections = _this.options.maxConnections || 5;
    _this.options.maxMessages = _this.options.maxMessages || 100;
    _this.logger = shared.getLogger(_this.options, {
      component: _this.options.component || 'smtp-pool'
    }); // temporary object

    var connection = new SMTPConnection(_this.options);
    _this.name = 'SMTP (pool)';
    _this.version = packageData.version + '[client:' + connection.version + ']';
    _this._rateLimit = {
      counter: 0,
      timeout: null,
      waiting: [],
      checkpoint: false,
      delta: Number(_this.options.rateDelta) || 1000,
      limit: Number(_this.options.rateLimit) || 0
    };
    _this._closed = false;
    _this._queue = [];
    _this._connections = [];
    _this._connectionCounter = 0;
    _this.idling = true;
    setImmediate(function () {
      if (_this.idling) {
        _this.emit('idle');
      }
    });
    return _this;
  }
  /**
   * Placeholder function for creating proxy sockets. This method immediatelly returns
   * without a socket
   *
   * @param {Object} options Connection options
   * @param {Function} callback Callback function to run with the socket keys
   */


  _createClass(SMTPPool, [{
    key: "getSocket",
    value: function getSocket(options, callback) {
      // return immediatelly
      return setImmediate(function () {
        return callback(null, false);
      });
    }
    /**
     * Queues an e-mail to be sent using the selected settings
     *
     * @param {Object} mail Mail object
     * @param {Function} callback Callback function
     */

  }, {
    key: "send",
    value: function send(mail, callback) {
      var _this2 = this;

      if (this._closed) {
        return false;
      }

      this._queue.push({
        mail: mail,
        requeueAttempts: 0,
        callback: callback
      });

      if (this.idling && this._queue.length >= this.options.maxConnections) {
        this.idling = false;
      }

      setImmediate(function () {
        return _this2._processMessages();
      });
      return true;
    }
    /**
     * Closes all connections in the pool. If there is a message being sent, the connection
     * is closed later
     */

  }, {
    key: "close",
    value: function close() {
      var _this3 = this;

      var connection;
      var len = this._connections.length;
      this._closed = true; // clear rate limit timer if it exists

      clearTimeout(this._rateLimit.timeout);

      if (!len && !this._queue.length) {
        return;
      } // remove all available connections


      for (var i = len - 1; i >= 0; i--) {
        if (this._connections[i] && this._connections[i].available) {
          connection = this._connections[i];
          connection.close();
          this.logger.info({
            tnx: 'connection',
            cid: connection.id,
            action: 'removed'
          }, 'Connection #%s removed', connection.id);
        }
      }

      if (len && !this._connections.length) {
        this.logger.debug({
          tnx: 'connection'
        }, 'All connections removed');
      }

      if (!this._queue.length) {
        return;
      } // make sure that entire queue would be cleaned


      var invokeCallbacks = function invokeCallbacks() {
        if (!_this3._queue.length) {
          _this3.logger.debug({
            tnx: 'connection'
          }, 'Pending queue entries cleared');

          return;
        }

        var entry = _this3._queue.shift();

        if (entry && typeof entry.callback === 'function') {
          try {
            entry.callback(new Error('Connection pool was closed'));
          } catch (E) {
            _this3.logger.error({
              err: E,
              tnx: 'callback',
              cid: connection.id
            }, 'Callback error for #%s: %s', connection.id, E.message);
          }
        }

        setImmediate(invokeCallbacks);
      };

      setImmediate(invokeCallbacks);
    }
    /**
     * Check the queue and available connections. If there is a message to be sent and there is
     * an available connection, then use this connection to send the mail
     */

  }, {
    key: "_processMessages",
    value: function _processMessages() {
      var _this4 = this;

      var connection;
      var i, len; // do nothing if already closed

      if (this._closed) {
        return;
      } // do nothing if queue is empty


      if (!this._queue.length) {
        if (!this.idling) {
          // no pending jobs
          this.idling = true;
          this.emit('idle');
        }

        return;
      } // find first available connection


      for (i = 0, len = this._connections.length; i < len; i++) {
        if (this._connections[i].available) {
          connection = this._connections[i];
          break;
        }
      }

      if (!connection && this._connections.length < this.options.maxConnections) {
        connection = this._createConnection();
      }

      if (!connection) {
        // no more free connection slots available
        this.idling = false;
        return;
      } // check if there is free space in the processing queue


      if (!this.idling && this._queue.length < this.options.maxConnections) {
        this.idling = true;
        this.emit('idle');
      }

      var entry = connection.queueEntry = this._queue.shift();

      entry.messageId = (connection.queueEntry.mail.message.getHeader('message-id') || '').replace(/[<>\s]/g, '');
      connection.available = false;
      this.logger.debug({
        tnx: 'pool',
        cid: connection.id,
        messageId: entry.messageId,
        action: 'assign'
      }, 'Assigned message <%s> to #%s (%s)', entry.messageId, connection.id, connection.messages + 1);

      if (this._rateLimit.limit) {
        this._rateLimit.counter++;

        if (!this._rateLimit.checkpoint) {
          this._rateLimit.checkpoint = Date.now();
        }
      }

      connection.send(entry.mail, function (err, info) {
        // only process callback if current handler is not changed
        if (entry === connection.queueEntry) {
          try {
            entry.callback(err, info);
          } catch (E) {
            _this4.logger.error({
              err: E,
              tnx: 'callback',
              cid: connection.id
            }, 'Callback error for #%s: %s', connection.id, E.message);
          }

          connection.queueEntry = false;
        }
      });
    }
    /**
     * Creates a new pool resource
     */

  }, {
    key: "_createConnection",
    value: function _createConnection() {
      var _this5 = this;

      var connection = new PoolResource(this);
      connection.id = ++this._connectionCounter;
      this.logger.info({
        tnx: 'pool',
        cid: connection.id,
        action: 'conection'
      }, 'Created new pool resource #%s', connection.id); // resource comes available

      connection.on('available', function () {
        _this5.logger.debug({
          tnx: 'connection',
          cid: connection.id,
          action: 'available'
        }, 'Connection #%s became available', connection.id);

        if (_this5._closed) {
          // if already closed run close() that will remove this connections from connections list
          _this5.close();
        } else {
          // check if there's anything else to send
          _this5._processMessages();
        }
      }); // resource is terminated with an error

      connection.once('error', function (err) {
        if (err.code !== 'EMAXLIMIT') {
          _this5.logger.error({
            err: err,
            tnx: 'pool',
            cid: connection.id
          }, 'Pool Error for #%s: %s', connection.id, err.message);
        } else {
          _this5.logger.debug({
            tnx: 'pool',
            cid: connection.id,
            action: 'maxlimit'
          }, 'Max messages limit exchausted for #%s', connection.id);
        }

        if (connection.queueEntry) {
          try {
            connection.queueEntry.callback(err);
          } catch (E) {
            _this5.logger.error({
              err: E,
              tnx: 'callback',
              cid: connection.id
            }, 'Callback error for #%s: %s', connection.id, E.message);
          }

          connection.queueEntry = false;
        } // remove the erroneus connection from connections list


        _this5._removeConnection(connection);

        _this5._continueProcessing();
      });
      connection.once('close', function () {
        _this5.logger.info({
          tnx: 'connection',
          cid: connection.id,
          action: 'closed'
        }, 'Connection #%s was closed', connection.id);

        _this5._removeConnection(connection);

        if (connection.queueEntry) {
          // If the connection closed when sending, add the message to the queue again
          // if max number of requeues is not reached yet
          // Note that we must wait a bit.. because the callback of the 'error' handler might be called
          // in the next event loop
          setTimeout(function () {
            if (connection.queueEntry) {
              if (_this5._shouldRequeuOnConnectionClose(connection.queueEntry)) {
                _this5._requeueEntryOnConnectionClose(connection);
              } else {
                _this5._failDeliveryOnConnectionClose(connection);
              }
            }

            _this5._continueProcessing();
          }, 50);
        } else {
          _this5._continueProcessing();
        }
      });

      this._connections.push(connection);

      return connection;
    }
  }, {
    key: "_shouldRequeuOnConnectionClose",
    value: function _shouldRequeuOnConnectionClose(queueEntry) {
      if (this.options.maxRequeues === undefined || this.options.maxRequeues < 0) {
        return true;
      }

      return queueEntry.requeueAttempts < this.options.maxRequeues;
    }
  }, {
    key: "_failDeliveryOnConnectionClose",
    value: function _failDeliveryOnConnectionClose(connection) {
      if (connection.queueEntry && connection.queueEntry.callback) {
        try {
          connection.queueEntry.callback(new Error('Reached maximum number of retries after connection was closed'));
        } catch (E) {
          this.logger.error({
            err: E,
            tnx: 'callback',
            messageId: connection.queueEntry.messageId,
            cid: connection.id
          }, 'Callback error for #%s: %s', connection.id, E.message);
        }

        connection.queueEntry = false;
      }
    }
  }, {
    key: "_requeueEntryOnConnectionClose",
    value: function _requeueEntryOnConnectionClose(connection) {
      connection.queueEntry.requeueAttempts = connection.queueEntry.requeueAttempts + 1;
      this.logger.debug({
        tnx: 'pool',
        cid: connection.id,
        messageId: connection.queueEntry.messageId,
        action: 'requeue'
      }, 'Re-queued message <%s> for #%s. Attempt: #%s', connection.queueEntry.messageId, connection.id, connection.queueEntry.requeueAttempts);

      this._queue.unshift(connection.queueEntry);

      connection.queueEntry = false;
    }
    /**
     * Continue to process message if the pool hasn't closed
     */

  }, {
    key: "_continueProcessing",
    value: function _continueProcessing() {
      var _this6 = this;

      if (this._closed) {
        this.close();
      } else {
        setTimeout(function () {
          return _this6._processMessages();
        }, 100);
      }
    }
    /**
     * Remove resource from pool
     *
     * @param {Object} connection The PoolResource to remove
     */

  }, {
    key: "_removeConnection",
    value: function _removeConnection(connection) {
      var index = this._connections.indexOf(connection);

      if (index !== -1) {
        this._connections.splice(index, 1);
      }
    }
    /**
     * Checks if connections have hit current rate limit and if so, queues the availability callback
     *
     * @param {Function} callback Callback function to run once rate limiter has been cleared
     */

  }, {
    key: "_checkRateLimit",
    value: function _checkRateLimit(callback) {
      var _this7 = this;

      if (!this._rateLimit.limit) {
        return callback();
      }

      var now = Date.now();

      if (this._rateLimit.counter < this._rateLimit.limit) {
        return callback();
      }

      this._rateLimit.waiting.push(callback);

      if (this._rateLimit.checkpoint <= now - this._rateLimit.delta) {
        return this._clearRateLimit();
      } else if (!this._rateLimit.timeout) {
        this._rateLimit.timeout = setTimeout(function () {
          return _this7._clearRateLimit();
        }, this._rateLimit.delta - (now - this._rateLimit.checkpoint));
        this._rateLimit.checkpoint = now;
      }
    }
    /**
     * Clears current rate limit limitation and runs paused callback
     */

  }, {
    key: "_clearRateLimit",
    value: function _clearRateLimit() {
      clearTimeout(this._rateLimit.timeout);
      this._rateLimit.timeout = null;
      this._rateLimit.counter = 0;
      this._rateLimit.checkpoint = false; // resume all paused connections

      while (this._rateLimit.waiting.length) {
        var cb = this._rateLimit.waiting.shift();

        setImmediate(cb);
      }
    }
    /**
     * Returns true if there are free slots in the queue
     */

  }, {
    key: "isIdle",
    value: function isIdle() {
      return this.idling;
    }
    /**
     * Verifies SMTP configuration
     *
     * @param {Function} callback Callback function
     */

  }, {
    key: "verify",
    value: function verify(callback) {
      var _this8 = this;

      var promise;

      if (!callback) {
        promise = new Promise(function (resolve, reject) {
          callback = shared.callbackPromise(resolve, reject);
        });
      }

      var auth = new PoolResource(this).auth;
      this.getSocket(this.options, function (err, socketOptions) {
        if (err) {
          return callback(err);
        }

        var options = _this8.options;

        if (socketOptions && socketOptions.connection) {
          _this8.logger.info({
            tnx: 'proxy',
            remoteAddress: socketOptions.connection.remoteAddress,
            remotePort: socketOptions.connection.remotePort,
            destHost: options.host || '',
            destPort: options.port || '',
            action: 'connected'
          }, 'Using proxied socket from %s:%s to %s:%s', socketOptions.connection.remoteAddress, socketOptions.connection.remotePort, options.host || '', options.port || '');

          options = shared.assign(false, options);
          Object.keys(socketOptions).forEach(function (key) {
            options[key] = socketOptions[key];
          });
        }

        var connection = new SMTPConnection(options);
        var returned = false;
        connection.once('error', function (err) {
          if (returned) {
            return;
          }

          returned = true;
          connection.close();
          return callback(err);
        });
        connection.once('end', function () {
          if (returned) {
            return;
          }

          returned = true;
          return callback(new Error('Connection closed'));
        });

        var finalize = function finalize() {
          if (returned) {
            return;
          }

          returned = true;
          connection.quit();
          return callback(null, true);
        };

        connection.connect(function () {
          if (returned) {
            return;
          }

          if (auth && (connection.allowsAuth || options.forceAuth)) {
            connection.login(auth, function (err) {
              if (returned) {
                return;
              }

              if (err) {
                returned = true;
                connection.close();
                return callback(err);
              }

              finalize();
            });
          } else {
            finalize();
          }
        });
      });
      return promise;
    }
  }]);

  return SMTPPool;
}(EventEmitter); // expose to the world


module.exports = SMTPPool;

/***/ }),
/* 664 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var SMTPConnection = __webpack_require__(211);

var assign = __webpack_require__(44).assign;

var XOAuth2 = __webpack_require__(296);

var EventEmitter = __webpack_require__(97);
/**
 * Creates an element for the pool
 *
 * @constructor
 * @param {Object} options SMTPPool instance
 */


var PoolResource = /*#__PURE__*/function (_EventEmitter) {
  _inherits(PoolResource, _EventEmitter);

  var _super = _createSuper(PoolResource);

  function PoolResource(pool) {
    var _this;

    _classCallCheck(this, PoolResource);

    _this = _super.call(this);
    _this.pool = pool;
    _this.options = pool.options;
    _this.logger = _this.pool.logger;

    if (_this.options.auth) {
      switch ((_this.options.auth.type || '').toString().toUpperCase()) {
        case 'OAUTH2':
          {
            var oauth2 = new XOAuth2(_this.options.auth, _this.logger);
            oauth2.provisionCallback = _this.pool.mailer && _this.pool.mailer.get('oauth2_provision_cb') || oauth2.provisionCallback;
            _this.auth = {
              type: 'OAUTH2',
              user: _this.options.auth.user,
              oauth2: oauth2,
              method: 'XOAUTH2'
            };
            oauth2.on('token', function (token) {
              return _this.pool.mailer.emit('token', token);
            });
            oauth2.on('error', function (err) {
              return _this.emit('error', err);
            });
            break;
          }

        default:
          if (!_this.options.auth.user && !_this.options.auth.pass) {
            break;
          }

          _this.auth = {
            type: (_this.options.auth.type || '').toString().toUpperCase() || 'LOGIN',
            user: _this.options.auth.user,
            credentials: {
              user: _this.options.auth.user || '',
              pass: _this.options.auth.pass,
              options: _this.options.auth.options
            },
            method: (_this.options.auth.method || '').trim().toUpperCase() || _this.options.authMethod || false
          };
      }
    }

    _this._connection = false;
    _this._connected = false;
    _this.messages = 0;
    _this.available = true;
    return _this;
  }
  /**
   * Initiates a connection to the SMTP server
   *
   * @param {Function} callback Callback function to run once the connection is established or failed
   */


  _createClass(PoolResource, [{
    key: "connect",
    value: function connect(callback) {
      var _this2 = this;

      this.pool.getSocket(this.options, function (err, socketOptions) {
        if (err) {
          return callback(err);
        }

        var returned = false;
        var options = _this2.options;

        if (socketOptions && socketOptions.connection) {
          _this2.logger.info({
            tnx: 'proxy',
            remoteAddress: socketOptions.connection.remoteAddress,
            remotePort: socketOptions.connection.remotePort,
            destHost: options.host || '',
            destPort: options.port || '',
            action: 'connected'
          }, 'Using proxied socket from %s:%s to %s:%s', socketOptions.connection.remoteAddress, socketOptions.connection.remotePort, options.host || '', options.port || '');

          options = assign(false, options);
          Object.keys(socketOptions).forEach(function (key) {
            options[key] = socketOptions[key];
          });
        }

        _this2.connection = new SMTPConnection(options);

        _this2.connection.once('error', function (err) {
          _this2.emit('error', err);

          if (returned) {
            return;
          }

          returned = true;
          return callback(err);
        });

        _this2.connection.once('end', function () {
          _this2.close();

          if (returned) {
            return;
          }

          returned = true;
          var timer = setTimeout(function () {
            if (returned) {
              return;
            } // still have not returned, this means we have an unexpected connection close


            var err = new Error('Unexpected socket close');

            if (_this2.connection && _this2.connection._socket && _this2.connection._socket.upgrading) {
              // starttls connection errors
              err.code = 'ETLS';
            }

            callback(err);
          }, 1000);

          try {
            timer.unref();
          } catch (E) {// Ignore. Happens on envs with non-node timer implementation
          }
        });

        _this2.connection.connect(function () {
          if (returned) {
            return;
          }

          if (_this2.auth && (_this2.connection.allowsAuth || options.forceAuth)) {
            _this2.connection.login(_this2.auth, function (err) {
              if (returned) {
                return;
              }

              returned = true;

              if (err) {
                _this2.connection.close();

                _this2.emit('error', err);

                return callback(err);
              }

              _this2._connected = true;
              callback(null, true);
            });
          } else {
            returned = true;
            _this2._connected = true;
            return callback(null, true);
          }
        });
      });
    }
    /**
     * Sends an e-mail to be sent using the selected settings
     *
     * @param {Object} mail Mail object
     * @param {Function} callback Callback function
     */

  }, {
    key: "send",
    value: function send(mail, callback) {
      var _this3 = this;

      if (!this._connected) {
        return this.connect(function (err) {
          if (err) {
            return callback(err);
          }

          return _this3.send(mail, callback);
        });
      }

      var envelope = mail.message.getEnvelope();
      var messageId = mail.message.messageId();
      var recipients = [].concat(envelope.to || []);

      if (recipients.length > 3) {
        recipients.push('...and ' + recipients.splice(2).length + ' more');
      }

      this.logger.info({
        tnx: 'send',
        messageId: messageId,
        cid: this.id
      }, 'Sending message %s using #%s to <%s>', messageId, this.id, recipients.join(', '));

      if (mail.data.dsn) {
        envelope.dsn = mail.data.dsn;
      }

      this.connection.send(envelope, mail.message.createReadStream(), function (err, info) {
        _this3.messages++;

        if (err) {
          _this3.connection.close();

          _this3.emit('error', err);

          return callback(err);
        }

        info.envelope = {
          from: envelope.from,
          to: envelope.to
        };
        info.messageId = messageId;
        setImmediate(function () {
          var err;

          if (_this3.messages >= _this3.options.maxMessages) {
            err = new Error('Resource exhausted');
            err.code = 'EMAXLIMIT';

            _this3.connection.close();

            _this3.emit('error', err);
          } else {
            _this3.pool._checkRateLimit(function () {
              _this3.available = true;

              _this3.emit('available');
            });
          }
        });
        callback(null, info);
      });
    }
    /**
     * Closes the connection
     */

  }, {
    key: "close",
    value: function close() {
      this._connected = false;

      if (this.auth && this.auth.oauth2) {
        this.auth.oauth2.removeAllListeners();
      }

      if (this.connection) {
        this.connection.close();
      }

      this.emit('close');
    }
  }]);

  return PoolResource;
}(EventEmitter);

module.exports = PoolResource;

/***/ }),
/* 665 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var stream = __webpack_require__(15);

var Transform = stream.Transform;
/**
 * Escapes dots in the beginning of lines. Ends the stream with <CR><LF>.<CR><LF>
 * Also makes sure that only <CR><LF> sequences are used for linebreaks
 *
 * @param {Object} options Stream options
 */

var DataStream = /*#__PURE__*/function (_Transform) {
  _inherits(DataStream, _Transform);

  var _super = _createSuper(DataStream);

  function DataStream(options) {
    var _this;

    _classCallCheck(this, DataStream);

    _this = _super.call(this, options); // init Transform

    _this.options = options || {};
    _this._curLine = '';
    _this.inByteCount = 0;
    _this.outByteCount = 0;
    _this.lastByte = false;
    return _this;
  }
  /**
   * Escapes dots
   */


  _createClass(DataStream, [{
    key: "_transform",
    value: function _transform(chunk, encoding, done) {
      var chunks = [];
      var chunklen = 0;
      var i,
          len,
          lastPos = 0;
      var buf;

      if (!chunk || !chunk.length) {
        return done();
      }

      if (typeof chunk === 'string') {
        chunk = Buffer.from(chunk);
      }

      this.inByteCount += chunk.length;

      for (i = 0, len = chunk.length; i < len; i++) {
        if (chunk[i] === 0x2e) {
          // .
          if (i && chunk[i - 1] === 0x0a || !i && (!this.lastByte || this.lastByte === 0x0a)) {
            buf = chunk.slice(lastPos, i + 1);
            chunks.push(buf);
            chunks.push(Buffer.from('.'));
            chunklen += buf.length + 1;
            lastPos = i + 1;
          }
        } else if (chunk[i] === 0x0a) {
          // .
          if (i && chunk[i - 1] !== 0x0d || !i && this.lastByte !== 0x0d) {
            if (i > lastPos) {
              buf = chunk.slice(lastPos, i);
              chunks.push(buf);
              chunklen += buf.length + 2;
            } else {
              chunklen += 2;
            }

            chunks.push(Buffer.from('\r\n'));
            lastPos = i + 1;
          }
        }
      }

      if (chunklen) {
        // add last piece
        if (lastPos < chunk.length) {
          buf = chunk.slice(lastPos);
          chunks.push(buf);
          chunklen += buf.length;
        }

        this.outByteCount += chunklen;
        this.push(Buffer.concat(chunks, chunklen));
      } else {
        this.outByteCount += chunk.length;
        this.push(chunk);
      }

      this.lastByte = chunk[chunk.length - 1];
      done();
    }
    /**
     * Finalizes the stream with a dot on a single line
     */

  }, {
    key: "_flush",
    value: function _flush(done) {
      var buf;

      if (this.lastByte === 0x0a) {
        buf = Buffer.from('.\r\n');
      } else if (this.lastByte === 0x0d) {
        buf = Buffer.from('\n.\r\n');
      } else {
        buf = Buffer.from('\r\n.\r\n');
      }

      this.outByteCount += buf.length;
      this.push(buf);
      done();
    }
  }]);

  return DataStream;
}(Transform);

module.exports = DataStream;

/***/ }),
/* 666 */
/***/ (function(module) {

module.exports = JSON.parse("{\"126\":{\"host\":\"smtp.126.com\",\"port\":465,\"secure\":true},\"163\":{\"host\":\"smtp.163.com\",\"port\":465,\"secure\":true},\"1und1\":{\"host\":\"smtp.1und1.de\",\"port\":465,\"secure\":true,\"authMethod\":\"LOGIN\"},\"AOL\":{\"domains\":[\"aol.com\"],\"host\":\"smtp.aol.com\",\"port\":587},\"DebugMail\":{\"host\":\"debugmail.io\",\"port\":25},\"DynectEmail\":{\"aliases\":[\"Dynect\"],\"host\":\"smtp.dynect.net\",\"port\":25},\"Ethereal\":{\"aliases\":[\"ethereal.email\"],\"host\":\"smtp.ethereal.email\",\"port\":587},\"FastMail\":{\"domains\":[\"fastmail.fm\"],\"host\":\"smtp.fastmail.com\",\"port\":465,\"secure\":true},\"GandiMail\":{\"aliases\":[\"Gandi\",\"Gandi Mail\"],\"host\":\"mail.gandi.net\",\"port\":587},\"Gmail\":{\"aliases\":[\"Google Mail\"],\"domains\":[\"gmail.com\",\"googlemail.com\"],\"host\":\"smtp.gmail.com\",\"port\":465,\"secure\":true},\"Godaddy\":{\"host\":\"smtpout.secureserver.net\",\"port\":25},\"GodaddyAsia\":{\"host\":\"smtp.asia.secureserver.net\",\"port\":25},\"GodaddyEurope\":{\"host\":\"smtp.europe.secureserver.net\",\"port\":25},\"hot.ee\":{\"host\":\"mail.hot.ee\"},\"Hotmail\":{\"aliases\":[\"Outlook\",\"Outlook.com\",\"Hotmail.com\"],\"domains\":[\"hotmail.com\",\"outlook.com\"],\"host\":\"smtp-mail.outlook.com\",\"port\":587},\"iCloud\":{\"aliases\":[\"Me\",\"Mac\"],\"domains\":[\"me.com\",\"mac.com\"],\"host\":\"smtp.mail.me.com\",\"port\":587},\"Infomaniak\":{\"host\":\"mail.infomaniak.com\",\"domains\":[\"ik.me\",\"ikmail.com\",\"etik.com\"],\"port\":587},\"mail.ee\":{\"host\":\"smtp.mail.ee\"},\"Mail.ru\":{\"host\":\"smtp.mail.ru\",\"port\":465,\"secure\":true},\"Maildev\":{\"port\":1025,\"ignoreTLS\":true},\"Mailgun\":{\"host\":\"smtp.mailgun.org\",\"port\":465,\"secure\":true},\"Mailjet\":{\"host\":\"in.mailjet.com\",\"port\":587},\"Mailosaur\":{\"host\":\"mailosaur.io\",\"port\":25},\"Mailtrap\":{\"host\":\"smtp.mailtrap.io\",\"port\":2525},\"Mandrill\":{\"host\":\"smtp.mandrillapp.com\",\"port\":587},\"Naver\":{\"host\":\"smtp.naver.com\",\"port\":587},\"One\":{\"host\":\"send.one.com\",\"port\":465,\"secure\":true},\"OpenMailBox\":{\"aliases\":[\"OMB\",\"openmailbox.org\"],\"host\":\"smtp.openmailbox.org\",\"port\":465,\"secure\":true},\"Outlook365\":{\"host\":\"smtp.office365.com\",\"port\":587,\"secure\":false},\"OhMySMTP\":{\"host\":\"smtp.ohmysmtp.com\",\"port\":587,\"secure\":false},\"Postmark\":{\"aliases\":[\"PostmarkApp\"],\"host\":\"smtp.postmarkapp.com\",\"port\":2525},\"qiye.aliyun\":{\"host\":\"smtp.mxhichina.com\",\"port\":\"465\",\"secure\":true},\"QQ\":{\"domains\":[\"qq.com\"],\"host\":\"smtp.qq.com\",\"port\":465,\"secure\":true},\"QQex\":{\"aliases\":[\"QQ Enterprise\"],\"domains\":[\"exmail.qq.com\"],\"host\":\"smtp.exmail.qq.com\",\"port\":465,\"secure\":true},\"SendCloud\":{\"host\":\"smtpcloud.sohu.com\",\"port\":25},\"SendGrid\":{\"host\":\"smtp.sendgrid.net\",\"port\":587},\"SendinBlue\":{\"host\":\"smtp-relay.sendinblue.com\",\"port\":587},\"SendPulse\":{\"host\":\"smtp-pulse.com\",\"port\":465,\"secure\":true},\"SES\":{\"host\":\"email-smtp.us-east-1.amazonaws.com\",\"port\":465,\"secure\":true},\"SES-US-EAST-1\":{\"host\":\"email-smtp.us-east-1.amazonaws.com\",\"port\":465,\"secure\":true},\"SES-US-WEST-2\":{\"host\":\"email-smtp.us-west-2.amazonaws.com\",\"port\":465,\"secure\":true},\"SES-EU-WEST-1\":{\"host\":\"email-smtp.eu-west-1.amazonaws.com\",\"port\":465,\"secure\":true},\"Sparkpost\":{\"aliases\":[\"SparkPost\",\"SparkPost Mail\"],\"domains\":[\"sparkpost.com\"],\"host\":\"smtp.sparkpostmail.com\",\"port\":587,\"secure\":false},\"Tipimail\":{\"host\":\"smtp.tipimail.com\",\"port\":587},\"Yahoo\":{\"domains\":[\"yahoo.com\"],\"host\":\"smtp.mail.yahoo.com\",\"port\":465,\"secure\":true},\"Yandex\":{\"domains\":[\"yandex.ru\"],\"host\":\"smtp.yandex.ru\",\"port\":465,\"secure\":true},\"Zoho\":{\"host\":\"smtp.zoho.com\",\"port\":465,\"secure\":true,\"authMethod\":\"LOGIN\"}}");

/***/ }),
/* 667 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var EventEmitter = __webpack_require__(97);

var SMTPConnection = __webpack_require__(211);

var wellKnown = __webpack_require__(297);

var shared = __webpack_require__(44);

var XOAuth2 = __webpack_require__(296);

var packageData = __webpack_require__(55);
/**
 * Creates a SMTP transport object for Nodemailer
 *
 * @constructor
 * @param {Object} options Connection options
 */


var SMTPTransport = /*#__PURE__*/function (_EventEmitter) {
  _inherits(SMTPTransport, _EventEmitter);

  var _super = _createSuper(SMTPTransport);

  function SMTPTransport(options) {
    var _this;

    _classCallCheck(this, SMTPTransport);

    _this = _super.call(this);
    options = options || {};

    if (typeof options === 'string') {
      options = {
        url: options
      };
    }

    var urlData;
    var service = options.service;

    if (typeof options.getSocket === 'function') {
      _this.getSocket = options.getSocket;
    }

    if (options.url) {
      urlData = shared.parseConnectionUrl(options.url);
      service = service || urlData.service;
    }

    _this.options = shared.assign(false, // create new object
    options, // regular options
    urlData, // url options
    service && wellKnown(service) // wellknown options
    );
    _this.logger = shared.getLogger(_this.options, {
      component: _this.options.component || 'smtp-transport'
    }); // temporary object

    var connection = new SMTPConnection(_this.options);
    _this.name = 'SMTP';
    _this.version = packageData.version + '[client:' + connection.version + ']';

    if (_this.options.auth) {
      _this.auth = _this.getAuth({});
    }

    return _this;
  }
  /**
   * Placeholder function for creating proxy sockets. This method immediatelly returns
   * without a socket
   *
   * @param {Object} options Connection options
   * @param {Function} callback Callback function to run with the socket keys
   */


  _createClass(SMTPTransport, [{
    key: "getSocket",
    value: function getSocket(options, callback) {
      // return immediatelly
      return setImmediate(function () {
        return callback(null, false);
      });
    }
  }, {
    key: "getAuth",
    value: function getAuth(authOpts) {
      var _this2 = this;

      if (!authOpts) {
        return this.auth;
      }

      var hasAuth = false;
      var authData = {};

      if (this.options.auth && _typeof(this.options.auth) === 'object') {
        Object.keys(this.options.auth).forEach(function (key) {
          hasAuth = true;
          authData[key] = _this2.options.auth[key];
        });
      }

      if (authOpts && _typeof(authOpts) === 'object') {
        Object.keys(authOpts).forEach(function (key) {
          hasAuth = true;
          authData[key] = authOpts[key];
        });
      }

      if (!hasAuth) {
        return false;
      }

      switch ((authData.type || '').toString().toUpperCase()) {
        case 'OAUTH2':
          {
            if (!authData.service && !authData.user) {
              return false;
            }

            var oauth2 = new XOAuth2(authData, this.logger);
            oauth2.provisionCallback = this.mailer && this.mailer.get('oauth2_provision_cb') || oauth2.provisionCallback;
            oauth2.on('token', function (token) {
              return _this2.mailer.emit('token', token);
            });
            oauth2.on('error', function (err) {
              return _this2.emit('error', err);
            });
            return {
              type: 'OAUTH2',
              user: authData.user,
              oauth2: oauth2,
              method: 'XOAUTH2'
            };
          }

        default:
          return {
            type: (authData.type || '').toString().toUpperCase() || 'LOGIN',
            user: authData.user,
            credentials: {
              user: authData.user || '',
              pass: authData.pass,
              options: authData.options
            },
            method: (authData.method || '').trim().toUpperCase() || this.options.authMethod || false
          };
      }
    }
    /**
     * Sends an e-mail using the selected settings
     *
     * @param {Object} mail Mail object
     * @param {Function} callback Callback function
     */

  }, {
    key: "send",
    value: function send(mail, callback) {
      var _this3 = this;

      this.getSocket(this.options, function (err, socketOptions) {
        if (err) {
          return callback(err);
        }

        var returned = false;
        var options = _this3.options;

        if (socketOptions && socketOptions.connection) {
          _this3.logger.info({
            tnx: 'proxy',
            remoteAddress: socketOptions.connection.remoteAddress,
            remotePort: socketOptions.connection.remotePort,
            destHost: options.host || '',
            destPort: options.port || '',
            action: 'connected'
          }, 'Using proxied socket from %s:%s to %s:%s', socketOptions.connection.remoteAddress, socketOptions.connection.remotePort, options.host || '', options.port || ''); // only copy options if we need to modify it


          options = shared.assign(false, options);
          Object.keys(socketOptions).forEach(function (key) {
            options[key] = socketOptions[key];
          });
        }

        var connection = new SMTPConnection(options);
        connection.once('error', function (err) {
          if (returned) {
            return;
          }

          returned = true;
          connection.close();
          return callback(err);
        });
        connection.once('end', function () {
          if (returned) {
            return;
          }

          var timer = setTimeout(function () {
            if (returned) {
              return;
            }

            returned = true; // still have not returned, this means we have an unexpected connection close

            var err = new Error('Unexpected socket close');

            if (connection && connection._socket && connection._socket.upgrading) {
              // starttls connection errors
              err.code = 'ETLS';
            }

            callback(err);
          }, 1000);

          try {
            timer.unref();
          } catch (E) {// Ignore. Happens on envs with non-node timer implementation
          }
        });

        var sendMessage = function sendMessage() {
          var envelope = mail.message.getEnvelope();
          var messageId = mail.message.messageId();
          var recipients = [].concat(envelope.to || []);

          if (recipients.length > 3) {
            recipients.push('...and ' + recipients.splice(2).length + ' more');
          }

          if (mail.data.dsn) {
            envelope.dsn = mail.data.dsn;
          }

          _this3.logger.info({
            tnx: 'send',
            messageId: messageId
          }, 'Sending message %s to <%s>', messageId, recipients.join(', '));

          connection.send(envelope, mail.message.createReadStream(), function (err, info) {
            returned = true;
            connection.close();

            if (err) {
              _this3.logger.error({
                err: err,
                tnx: 'send'
              }, 'Send error for %s: %s', messageId, err.message);

              return callback(err);
            }

            info.envelope = {
              from: envelope.from,
              to: envelope.to
            };
            info.messageId = messageId;

            try {
              return callback(null, info);
            } catch (E) {
              _this3.logger.error({
                err: E,
                tnx: 'callback'
              }, 'Callback error for %s: %s', messageId, E.message);
            }
          });
        };

        connection.connect(function () {
          if (returned) {
            return;
          }

          var auth = _this3.getAuth(mail.data.auth);

          if (auth && (connection.allowsAuth || options.forceAuth)) {
            connection.login(auth, function (err) {
              if (auth && auth !== _this3.auth && auth.oauth2) {
                auth.oauth2.removeAllListeners();
              }

              if (returned) {
                return;
              }

              if (err) {
                returned = true;
                connection.close();
                return callback(err);
              }

              sendMessage();
            });
          } else {
            sendMessage();
          }
        });
      });
    }
    /**
     * Verifies SMTP configuration
     *
     * @param {Function} callback Callback function
     */

  }, {
    key: "verify",
    value: function verify(callback) {
      var _this4 = this;

      var promise;

      if (!callback) {
        promise = new Promise(function (resolve, reject) {
          callback = shared.callbackPromise(resolve, reject);
        });
      }

      this.getSocket(this.options, function (err, socketOptions) {
        if (err) {
          return callback(err);
        }

        var options = _this4.options;

        if (socketOptions && socketOptions.connection) {
          _this4.logger.info({
            tnx: 'proxy',
            remoteAddress: socketOptions.connection.remoteAddress,
            remotePort: socketOptions.connection.remotePort,
            destHost: options.host || '',
            destPort: options.port || '',
            action: 'connected'
          }, 'Using proxied socket from %s:%s to %s:%s', socketOptions.connection.remoteAddress, socketOptions.connection.remotePort, options.host || '', options.port || '');

          options = shared.assign(false, options);
          Object.keys(socketOptions).forEach(function (key) {
            options[key] = socketOptions[key];
          });
        }

        var connection = new SMTPConnection(options);
        var returned = false;
        connection.once('error', function (err) {
          if (returned) {
            return;
          }

          returned = true;
          connection.close();
          return callback(err);
        });
        connection.once('end', function () {
          if (returned) {
            return;
          }

          returned = true;
          return callback(new Error('Connection closed'));
        });

        var finalize = function finalize() {
          if (returned) {
            return;
          }

          returned = true;
          connection.quit();
          return callback(null, true);
        };

        connection.connect(function () {
          if (returned) {
            return;
          }

          var authData = _this4.getAuth({});

          if (authData && (connection.allowsAuth || options.forceAuth)) {
            connection.login(authData, function (err) {
              if (returned) {
                return;
              }

              if (err) {
                returned = true;
                connection.close();
                return callback(err);
              }

              finalize();
            });
          } else {
            finalize();
          }
        });
      });
      return promise;
    }
    /**
     * Releases resources
     */

  }, {
    key: "close",
    value: function close() {
      if (this.auth && this.auth.oauth2) {
        this.auth.oauth2.removeAllListeners();
      }

      this.emit('close');
    }
  }]);

  return SMTPTransport;
}(EventEmitter); // expose to the world


module.exports = SMTPTransport;

/***/ }),
/* 668 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var spawn = __webpack_require__(669).spawn;

var packageData = __webpack_require__(55);

var shared = __webpack_require__(44);
/**
 * Generates a Transport object for Sendmail
 *
 * Possible options can be the following:
 *
 *  * **path** optional path to sendmail binary
 *  * **newline** either 'windows' or 'unix'
 *  * **args** an array of arguments for the sendmail binary
 *
 * @constructor
 * @param {Object} optional config parameter for Sendmail
 */


var SendmailTransport = /*#__PURE__*/function () {
  function SendmailTransport(options) {
    _classCallCheck(this, SendmailTransport);

    options = options || {}; // use a reference to spawn for mocking purposes

    this._spawn = spawn;
    this.options = options || {};
    this.name = 'Sendmail';
    this.version = packageData.version;
    this.path = 'sendmail';
    this.args = false;
    this.winbreak = false;
    this.logger = shared.getLogger(this.options, {
      component: this.options.component || 'sendmail'
    });

    if (options) {
      if (typeof options === 'string') {
        this.path = options;
      } else if (_typeof(options) === 'object') {
        if (options.path) {
          this.path = options.path;
        }

        if (Array.isArray(options.args)) {
          this.args = options.args;
        }

        this.winbreak = ['win', 'windows', 'dos', '\r\n'].includes((options.newline || '').toString().toLowerCase());
      }
    }
  }
  /**
   * <p>Compiles a mailcomposer message and forwards it to handler that sends it.</p>
   *
   * @param {Object} emailMessage MailComposer object
   * @param {Function} callback Callback function to run when the sending is completed
   */


  _createClass(SendmailTransport, [{
    key: "send",
    value: function send(mail, done) {
      var _this = this;

      // Sendmail strips this header line by itself
      mail.message.keepBcc = true;
      var envelope = mail.data.envelope || mail.message.getEnvelope();
      var messageId = mail.message.messageId();
      var args;
      var sendmail;
      var returned;
      var hasInvalidAddresses = [].concat(envelope.from || []).concat(envelope.to || []).some(function (addr) {
        return /^-/.test(addr);
      });

      if (hasInvalidAddresses) {
        return done(new Error('Can not send mail. Invalid envelope addresses.'));
      }

      if (this.args) {
        // force -i to keep single dots
        args = ['-i'].concat(this.args).concat(envelope.to);
      } else {
        args = ['-i'].concat(envelope.from ? ['-f', envelope.from] : []).concat(envelope.to);
      }

      var callback = function callback(err) {
        if (returned) {
          // ignore any additional responses, already done
          return;
        }

        returned = true;

        if (typeof done === 'function') {
          if (err) {
            return done(err);
          } else {
            return done(null, {
              envelope: mail.data.envelope || mail.message.getEnvelope(),
              messageId: messageId,
              response: 'Messages queued for delivery'
            });
          }
        }
      };

      try {
        sendmail = this._spawn(this.path, args);
      } catch (E) {
        this.logger.error({
          err: E,
          tnx: 'spawn',
          messageId: messageId
        }, 'Error occurred while spawning sendmail. %s', E.message);
        return callback(E);
      }

      if (sendmail) {
        sendmail.on('error', function (err) {
          _this.logger.error({
            err: err,
            tnx: 'spawn',
            messageId: messageId
          }, 'Error occurred when sending message %s. %s', messageId, err.message);

          callback(err);
        });
        sendmail.once('exit', function (code) {
          if (!code) {
            return callback();
          }

          var err;

          if (code === 127) {
            err = new Error('Sendmail command not found, process exited with code ' + code);
          } else {
            err = new Error('Sendmail exited with code ' + code);
          }

          _this.logger.error({
            err: err,
            tnx: 'stdin',
            messageId: messageId
          }, 'Error sending message %s to sendmail. %s', messageId, err.message);

          callback(err);
        });
        sendmail.once('close', callback);
        sendmail.stdin.on('error', function (err) {
          _this.logger.error({
            err: err,
            tnx: 'stdin',
            messageId: messageId
          }, 'Error occurred when piping message %s to sendmail. %s', messageId, err.message);

          callback(err);
        });
        var recipients = [].concat(envelope.to || []);

        if (recipients.length > 3) {
          recipients.push('...and ' + recipients.splice(2).length + ' more');
        }

        this.logger.info({
          tnx: 'send',
          messageId: messageId
        }, 'Sending message %s to <%s>', messageId, recipients.join(', '));
        var sourceStream = mail.message.createReadStream();
        sourceStream.once('error', function (err) {
          _this.logger.error({
            err: err,
            tnx: 'stdin',
            messageId: messageId
          }, 'Error occurred when generating message %s. %s', messageId, err.message);

          sendmail.kill('SIGINT'); // do not deliver the message

          callback(err);
        });
        sourceStream.pipe(sendmail.stdin);
      } else {
        return callback(new Error('sendmail was not found'));
      }
    }
  }]);

  return SendmailTransport;
}();

module.exports = SendmailTransport;

/***/ }),
/* 669 */
/***/ (function(module, exports) {

module.exports = require("child_process");

/***/ }),
/* 670 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var packageData = __webpack_require__(55);

var shared = __webpack_require__(44);
/**
 * Generates a Transport object for streaming
 *
 * Possible options can be the following:
 *
 *  * **buffer** if true, then returns the message as a Buffer object instead of a stream
 *  * **newline** either 'windows' or 'unix'
 *
 * @constructor
 * @param {Object} optional config parameter
 */


var StreamTransport = /*#__PURE__*/function () {
  function StreamTransport(options) {
    _classCallCheck(this, StreamTransport);

    options = options || {};
    this.options = options || {};
    this.name = 'StreamTransport';
    this.version = packageData.version;
    this.logger = shared.getLogger(this.options, {
      component: this.options.component || 'stream-transport'
    });
    this.winbreak = ['win', 'windows', 'dos', '\r\n'].includes((options.newline || '').toString().toLowerCase());
  }
  /**
   * Compiles a mailcomposer message and forwards it to handler that sends it
   *
   * @param {Object} emailMessage MailComposer object
   * @param {Function} callback Callback function to run when the sending is completed
   */


  _createClass(StreamTransport, [{
    key: "send",
    value: function send(mail, done) {
      var _this = this;

      // We probably need this in the output
      mail.message.keepBcc = true;
      var envelope = mail.data.envelope || mail.message.getEnvelope();
      var messageId = mail.message.messageId();
      var recipients = [].concat(envelope.to || []);

      if (recipients.length > 3) {
        recipients.push('...and ' + recipients.splice(2).length + ' more');
      }

      this.logger.info({
        tnx: 'send',
        messageId: messageId
      }, 'Sending message %s to <%s> using %s line breaks', messageId, recipients.join(', '), this.winbreak ? '<CR><LF>' : '<LF>');
      setImmediate(function () {
        var stream;

        try {
          stream = mail.message.createReadStream();
        } catch (E) {
          _this.logger.error({
            err: E,
            tnx: 'send',
            messageId: messageId
          }, 'Creating send stream failed for %s. %s', messageId, E.message);

          return done(E);
        }

        if (!_this.options.buffer) {
          stream.once('error', function (err) {
            _this.logger.error({
              err: err,
              tnx: 'send',
              messageId: messageId
            }, 'Failed creating message for %s. %s', messageId, err.message);
          });
          return done(null, {
            envelope: mail.data.envelope || mail.message.getEnvelope(),
            messageId: messageId,
            message: stream
          });
        }

        var chunks = [];
        var chunklen = 0;
        stream.on('readable', function () {
          var chunk;

          while ((chunk = stream.read()) !== null) {
            chunks.push(chunk);
            chunklen += chunk.length;
          }
        });
        stream.once('error', function (err) {
          _this.logger.error({
            err: err,
            tnx: 'send',
            messageId: messageId
          }, 'Failed creating message for %s. %s', messageId, err.message);

          return done(err);
        });
        stream.on('end', function () {
          return done(null, {
            envelope: mail.data.envelope || mail.message.getEnvelope(),
            messageId: messageId,
            message: Buffer.concat(chunks, chunklen)
          });
        });
      });
    }
  }]);

  return StreamTransport;
}();

module.exports = StreamTransport;

/***/ }),
/* 671 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var packageData = __webpack_require__(55);

var shared = __webpack_require__(44);
/**
 * Generates a Transport object to generate JSON output
 *
 * @constructor
 * @param {Object} optional config parameter
 */


var JSONTransport = /*#__PURE__*/function () {
  function JSONTransport(options) {
    _classCallCheck(this, JSONTransport);

    options = options || {};
    this.options = options || {};
    this.name = 'JSONTransport';
    this.version = packageData.version;
    this.logger = shared.getLogger(this.options, {
      component: this.options.component || 'json-transport'
    });
  }
  /**
   * <p>Compiles a mailcomposer message and forwards it to handler that sends it.</p>
   *
   * @param {Object} emailMessage MailComposer object
   * @param {Function} callback Callback function to run when the sending is completed
   */


  _createClass(JSONTransport, [{
    key: "send",
    value: function send(mail, done) {
      var _this = this;

      // Sendmail strips this header line by itself
      mail.message.keepBcc = true;
      var envelope = mail.data.envelope || mail.message.getEnvelope();
      var messageId = mail.message.messageId();
      var recipients = [].concat(envelope.to || []);

      if (recipients.length > 3) {
        recipients.push('...and ' + recipients.splice(2).length + ' more');
      }

      this.logger.info({
        tnx: 'send',
        messageId: messageId
      }, 'Composing JSON structure of %s to <%s>', messageId, recipients.join(', '));
      setImmediate(function () {
        mail.normalize(function (err, data) {
          if (err) {
            _this.logger.error({
              err: err,
              tnx: 'send',
              messageId: messageId
            }, 'Failed building JSON structure for %s. %s', messageId, err.message);

            return done(err);
          }

          delete data.envelope;
          delete data.normalizedHeaders;
          return done(null, {
            envelope: envelope,
            messageId: messageId,
            message: _this.options.skipEncoding ? data : JSON.stringify(data)
          });
        });
      });
    }
  }]);

  return JSONTransport;
}();

module.exports = JSONTransport;

/***/ }),
/* 672 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var EventEmitter = __webpack_require__(97);

var packageData = __webpack_require__(55);

var shared = __webpack_require__(44);

var LeWindows = __webpack_require__(294);
/**
 * Generates a Transport object for AWS SES
 *
 * Possible options can be the following:
 *
 *  * **sendingRate** optional Number specifying how many messages per second should be delivered to SES
 *  * **maxConnections** optional Number specifying max number of parallel connections to SES
 *
 * @constructor
 * @param {Object} optional config parameter
 */


var SESTransport = /*#__PURE__*/function (_EventEmitter) {
  _inherits(SESTransport, _EventEmitter);

  var _super = _createSuper(SESTransport);

  function SESTransport(options) {
    var _this;

    _classCallCheck(this, SESTransport);

    _this = _super.call(this);
    options = options || {};
    _this.options = options || {};
    _this.ses = _this.options.SES;
    _this.name = 'SESTransport';
    _this.version = packageData.version;
    _this.logger = shared.getLogger(_this.options, {
      component: _this.options.component || 'ses-transport'
    }); // parallel sending connections

    _this.maxConnections = Number(_this.options.maxConnections) || Infinity;
    _this.connections = 0; // max messages per second

    _this.sendingRate = Number(_this.options.sendingRate) || Infinity;
    _this.sendingRateTTL = null;
    _this.rateInterval = 1000; // milliseconds

    _this.rateMessages = [];
    _this.pending = [];
    _this.idling = true;
    setImmediate(function () {
      if (_this.idling) {
        _this.emit('idle');
      }
    });
    return _this;
  }
  /**
   * Schedules a sending of a message
   *
   * @param {Object} emailMessage MailComposer object
   * @param {Function} callback Callback function to run when the sending is completed
   */


  _createClass(SESTransport, [{
    key: "send",
    value: function send(mail, callback) {
      var _this2 = this;

      if (this.connections >= this.maxConnections) {
        this.idling = false;
        return this.pending.push({
          mail: mail,
          callback: callback
        });
      }

      if (!this._checkSendingRate()) {
        this.idling = false;
        return this.pending.push({
          mail: mail,
          callback: callback
        });
      }

      this._send(mail, function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        setImmediate(function () {
          return callback.apply(void 0, args);
        });

        _this2._sent();
      });
    }
  }, {
    key: "_checkRatedQueue",
    value: function _checkRatedQueue() {
      var _this3 = this;

      if (this.connections >= this.maxConnections || !this._checkSendingRate()) {
        return;
      }

      if (!this.pending.length) {
        if (!this.idling) {
          this.idling = true;
          this.emit('idle');
        }

        return;
      }

      var next = this.pending.shift();

      this._send(next.mail, function () {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        setImmediate(function () {
          return next.callback.apply(next, args);
        });

        _this3._sent();
      });
    }
  }, {
    key: "_checkSendingRate",
    value: function _checkSendingRate() {
      var _this4 = this;

      clearTimeout(this.sendingRateTTL);
      var now = Date.now();
      var oldest = false; // delete older messages

      for (var i = this.rateMessages.length - 1; i >= 0; i--) {
        if (this.rateMessages[i].ts >= now - this.rateInterval && (!oldest || this.rateMessages[i].ts < oldest)) {
          oldest = this.rateMessages[i].ts;
        }

        if (this.rateMessages[i].ts < now - this.rateInterval && !this.rateMessages[i].pending) {
          this.rateMessages.splice(i, 1);
        }
      }

      if (this.rateMessages.length < this.sendingRate) {
        return true;
      }

      var delay = Math.max(oldest + 1001, now + 20);
      this.sendingRateTTL = setTimeout(function () {
        return _this4._checkRatedQueue();
      }, now - delay);

      try {
        this.sendingRateTTL.unref();
      } catch (E) {// Ignore. Happens on envs with non-node timer implementation
      }

      return false;
    }
  }, {
    key: "_sent",
    value: function _sent() {
      this.connections--;

      this._checkRatedQueue();
    }
    /**
     * Returns true if there are free slots in the queue
     */

  }, {
    key: "isIdle",
    value: function isIdle() {
      return this.idling;
    }
    /**
     * Compiles a mailcomposer message and forwards it to SES
     *
     * @param {Object} emailMessage MailComposer object
     * @param {Function} callback Callback function to run when the sending is completed
     */

  }, {
    key: "_send",
    value: function _send(mail, callback) {
      var _this5 = this;

      var statObject = {
        ts: Date.now(),
        pending: true
      };
      this.connections++;
      this.rateMessages.push(statObject);
      var envelope = mail.data.envelope || mail.message.getEnvelope();
      var messageId = mail.message.messageId();
      var recipients = [].concat(envelope.to || []);

      if (recipients.length > 3) {
        recipients.push('...and ' + recipients.splice(2).length + ' more');
      }

      this.logger.info({
        tnx: 'send',
        messageId: messageId
      }, 'Sending message %s to <%s>', messageId, recipients.join(', '));

      var getRawMessage = function getRawMessage(next) {
        // do not use Message-ID and Date in DKIM signature
        if (!mail.data._dkim) {
          mail.data._dkim = {};
        }

        if (mail.data._dkim.skipFields && typeof mail.data._dkim.skipFields === 'string') {
          mail.data._dkim.skipFields += ':date:message-id';
        } else {
          mail.data._dkim.skipFields = 'date:message-id';
        }

        var sourceStream = mail.message.createReadStream();
        var stream = sourceStream.pipe(new LeWindows());
        var chunks = [];
        var chunklen = 0;
        stream.on('readable', function () {
          var chunk;

          while ((chunk = stream.read()) !== null) {
            chunks.push(chunk);
            chunklen += chunk.length;
          }
        });
        sourceStream.once('error', function (err) {
          return stream.emit('error', err);
        });
        stream.once('error', function (err) {
          next(err);
        });
        stream.once('end', function () {
          return next(null, Buffer.concat(chunks, chunklen));
        });
      };

      setImmediate(function () {
        return getRawMessage(function (err, raw) {
          if (err) {
            _this5.logger.error({
              err: err,
              tnx: 'send',
              messageId: messageId
            }, 'Failed creating message for %s. %s', messageId, err.message);

            statObject.pending = false;
            return callback(err);
          }

          var sesMessage = {
            RawMessage: {
              // required
              Data: raw // required

            },
            Source: envelope.from,
            Destinations: envelope.to
          };
          Object.keys(mail.data.ses || {}).forEach(function (key) {
            sesMessage[key] = mail.data.ses[key];
          });
          var ses = (_this5.ses.aws ? _this5.ses.ses : _this5.ses) || {};
          var aws = _this5.ses.aws || {};

          var getRegion = function getRegion(cb) {
            if (ses.config && typeof ses.config.region === 'function') {
              // promise
              return ses.config.region().then(function (region) {
                return cb(null, region);
              })["catch"](function (err) {
                return cb(err);
              });
            }

            return cb(null, ses.config && ses.config.region || 'us-east-1');
          };

          getRegion(function (err, region) {
            if (err || !region) {
              region = 'us-east-1';
            }

            var sendPromise;

            if (typeof ses.send === 'function' && aws.SendRawEmailCommand) {
              // v3 API
              sendPromise = ses.send(new aws.SendRawEmailCommand(sesMessage));
            } else {
              // v2 API
              sendPromise = ses.sendRawEmail(sesMessage).promise();
            }

            sendPromise.then(function (data) {
              if (region === 'us-east-1') {
                region = 'email';
              }

              statObject.pending = false;
              callback(null, {
                envelope: {
                  from: envelope.from,
                  to: envelope.to
                },
                messageId: '<' + data.MessageId + (!/@/.test(data.MessageId) ? '@' + region + '.amazonses.com' : '') + '>',
                response: data.MessageId,
                raw: raw
              });
            })["catch"](function (err) {
              _this5.logger.error({
                err: err,
                tnx: 'send'
              }, 'Send error for %s: %s', messageId, err.message);

              statObject.pending = false;
              callback(err);
            });
          });
        });
      });
    }
    /**
     * Verifies SES configuration
     *
     * @param {Function} callback Callback function
     */

  }, {
    key: "verify",
    value: function verify(callback) {
      var promise;
      var ses = (this.ses.aws ? this.ses.ses : this.ses) || {};
      var aws = this.ses.aws || {};
      var sesMessage = {
        RawMessage: {
          // required
          Data: 'From: invalid@invalid\r\nTo: invalid@invalid\r\n Subject: Invalid\r\n\r\nInvalid'
        },
        Source: 'invalid@invalid',
        Destinations: ['invalid@invalid']
      };

      if (!callback) {
        promise = new Promise(function (resolve, reject) {
          callback = shared.callbackPromise(resolve, reject);
        });
      }

      var cb = function cb(err) {
        if (err && (err.code || err.Code) !== 'InvalidParameterValue') {
          return callback(err);
        }

        return callback(null, true);
      };

      if (typeof ses.send === 'function' && aws.SendRawEmailCommand) {
        // v3 API
        sesMessage.RawMessage.Data = Buffer.from(sesMessage.RawMessage.Data);
        ses.send(new aws.SendRawEmailCommand(sesMessage), cb);
      } else {
        // v2 API
        ses.sendRawEmail(sesMessage, cb);
      }

      return promise;
    }
  }]);

  return SESTransport;
}(EventEmitter);

module.exports = SESTransport;

/***/ }),
/* 673 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(674);

/***/ }),
/* 674 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(23);

var bind = __webpack_require__(298);

var Axios = __webpack_require__(675);

var mergeConfig = __webpack_require__(308);

var defaults = __webpack_require__(213);
/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */


function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context); // Copy axios.prototype to instance

  utils.extend(instance, Axios.prototype, context); // Copy context to instance

  utils.extend(instance, context); // Factory for creating new instances

  instance.create = function create(instanceConfig) {
    return createInstance(mergeConfig(defaultConfig, instanceConfig));
  };

  return instance;
} // Create the default instance to be exported


var axios = createInstance(defaults); // Expose Axios class to allow class inheritance

axios.Axios = Axios; // Expose Cancel & CancelToken

axios.CanceledError = __webpack_require__(127);
axios.CancelToken = __webpack_require__(701);
axios.isCancel = __webpack_require__(307);
axios.VERSION = __webpack_require__(216).version;
axios.toFormData = __webpack_require__(299); // Expose AxiosError class

axios.AxiosError = __webpack_require__(83); // alias for CanceledError for backward compatibility

axios.Cancel = axios.CanceledError; // Expose all/spread

axios.all = function all(promises) {
  return Promise.all(promises);
};

axios.spread = __webpack_require__(702); // Expose isAxiosError

axios.isAxiosError = __webpack_require__(703);
module.exports = axios; // Allow use of default import syntax in TypeScript

module.exports["default"] = axios;

/***/ }),
/* 675 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(23);

var buildURL = __webpack_require__(212);

var InterceptorManager = __webpack_require__(676);

var dispatchRequest = __webpack_require__(677);

var mergeConfig = __webpack_require__(308);

var buildFullPath = __webpack_require__(215);

var validator = __webpack_require__(700);

var validators = validator.validators;
/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */

function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}
/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */


Axios.prototype.request = function request(configOrUrl, config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof configOrUrl === 'string') {
    config = config || {};
    config.url = configOrUrl;
  } else {
    config = configOrUrl || {};
  }

  config = mergeConfig(this.defaults, config); // Set config.method

  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  var transitional = config.transitional;

  if (transitional !== undefined) {
    validator.assertOptions(transitional, {
      silentJSONParsing: validators.transitional(validators["boolean"]),
      forcedJSONParsing: validators.transitional(validators["boolean"]),
      clarifyTimeoutError: validators.transitional(validators["boolean"])
    }, false);
  } // filter out skipped interceptors


  var requestInterceptorChain = [];
  var synchronousRequestInterceptors = true;
  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {
      return;
    }

    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
  });
  var responseInterceptorChain = [];
  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
  });
  var promise;

  if (!synchronousRequestInterceptors) {
    var chain = [dispatchRequest, undefined];
    Array.prototype.unshift.apply(chain, requestInterceptorChain);
    chain = chain.concat(responseInterceptorChain);
    promise = Promise.resolve(config);

    while (chain.length) {
      promise = promise.then(chain.shift(), chain.shift());
    }

    return promise;
  }

  var newConfig = config;

  while (requestInterceptorChain.length) {
    var onFulfilled = requestInterceptorChain.shift();
    var onRejected = requestInterceptorChain.shift();

    try {
      newConfig = onFulfilled(newConfig);
    } catch (error) {
      onRejected(error);
      break;
    }
  }

  try {
    promise = dispatchRequest(newConfig);
  } catch (error) {
    return Promise.reject(error);
  }

  while (responseInterceptorChain.length) {
    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  var fullPath = buildFullPath(config.baseURL, config.url);
  return buildURL(fullPath, config.params, config.paramsSerializer);
}; // Provide aliases for supported request methods


utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function (url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});
utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  function generateHTTPMethod(isForm) {
    return function httpMethod(url, data, config) {
      return this.request(mergeConfig(config || {}, {
        method: method,
        headers: isForm ? {
          'Content-Type': 'multipart/form-data'
        } : {},
        url: url,
        data: data
      }));
    };
  }

  Axios.prototype[method] = generateHTTPMethod();
  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);
});
module.exports = Axios;

/***/ }),
/* 676 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(23);

function InterceptorManager() {
  this.handlers = [];
}
/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */


InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected,
    synchronous: options ? options.synchronous : false,
    runWhen: options ? options.runWhen : null
  });
  return this.handlers.length - 1;
};
/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */


InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};
/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */


InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;

/***/ }),
/* 677 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(23);

var transformData = __webpack_require__(678);

var isCancel = __webpack_require__(307);

var defaults = __webpack_require__(213);

var CanceledError = __webpack_require__(127);
/**
 * Throws a `CanceledError` if cancellation has been requested.
 */


function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }

  if (config.signal && config.signal.aborted) {
    throw new CanceledError();
  }
}
/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */


module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config); // Ensure headers exist

  config.headers = config.headers || {}; // Transform request data

  config.data = transformData.call(config, config.data, config.headers, config.transformRequest); // Flatten headers

  config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers);
  utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {
    delete config.headers[method];
  });
  var adapter = config.adapter || defaults.adapter;
  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config); // Transform response data

    response.data = transformData.call(config, response.data, response.headers, config.transformResponse);
    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config); // Transform response data

      if (reason && reason.response) {
        reason.response.data = transformData.call(config, reason.response.data, reason.response.headers, config.transformResponse);
      }
    }

    return Promise.reject(reason);
  });
};

/***/ }),
/* 678 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(23);

var defaults = __webpack_require__(213);
/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */


module.exports = function transformData(data, headers, fns) {
  var context = this || defaults;
  /*eslint no-param-reassign:0*/

  utils.forEach(fns, function transform(fn) {
    data = fn.call(context, data, headers);
  });
  return data;
};

/***/ }),
/* 679 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(23);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};

/***/ }),
/* 680 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(23);

var settle = __webpack_require__(300);

var cookies = __webpack_require__(681);

var buildURL = __webpack_require__(212);

var buildFullPath = __webpack_require__(215);

var parseHeaders = __webpack_require__(684);

var isURLSameOrigin = __webpack_require__(685);

var transitionalDefaults = __webpack_require__(214);

var AxiosError = __webpack_require__(83);

var CanceledError = __webpack_require__(127);

var parseProtocol = __webpack_require__(686);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;
    var responseType = config.responseType;
    var onCanceled;

    function done() {
      if (config.cancelToken) {
        config.cancelToken.unsubscribe(onCanceled);
      }

      if (config.signal) {
        config.signal.removeEventListener('abort', onCanceled);
      }
    }

    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest(); // HTTP basic authentication

    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true); // Set the request timeout in MS

    request.timeout = config.timeout;

    function onloadend() {
      if (!request) {
        return;
      } // Prepare the response


      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !responseType || responseType === 'text' || responseType === 'json' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };
      settle(function _resolve(value) {
        resolve(value);
        done();
      }, function _reject(err) {
        reject(err);
        done();
      }, response); // Clean up request

      request = null;
    }

    if ('onloadend' in request) {
      // Use onloadend if available
      request.onloadend = onloadend;
    } else {
      // Listen for ready state to emulate onloadend
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        } // The request errored out and we didn't get a response, this will be
        // handled by onerror instead
        // With one exception: request that using file: protocol, most browsers
        // will return status as 0 even though it's a successful request


        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
          return;
        } // readystate handler is calling before onerror or ontimeout handlers,
        // so we should call onloadend on the next 'tick'


        setTimeout(onloadend);
      };
    } // Handle browser request cancellation (as opposed to a manual cancellation)


    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request)); // Clean up request

      request = null;
    }; // Handle low level network errors


    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request)); // Clean up request

      request = null;
    }; // Handle timeout


    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';
      var transitional = config.transitional || transitionalDefaults;

      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }

      reject(new AxiosError(timeoutErrorMessage, transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED, config, request)); // Clean up request

      request = null;
    }; // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.


    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    } // Add headers to the request


    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    } // Add withCredentials to request if needed


    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    } // Add responseType to request if needed


    if (responseType && responseType !== 'json') {
      request.responseType = config.responseType;
    } // Handle progress if needed


    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    } // Not all browsers support upload events


    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken || config.signal) {
      // Handle cancellation
      // eslint-disable-next-line func-names
      onCanceled = function onCanceled(cancel) {
        if (!request) {
          return;
        }

        reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);
        request.abort();
        request = null;
      };

      config.cancelToken && config.cancelToken.subscribe(onCanceled);

      if (config.signal) {
        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);
      }
    }

    if (!requestData) {
      requestData = null;
    }

    var protocol = parseProtocol(fullPath);

    if (protocol && ['http', 'https', 'file'].indexOf(protocol) === -1) {
      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));
      return;
    } // Send the request


    request.send(requestData);
  });
};

/***/ }),
/* 681 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(23);

module.exports = utils.isStandardBrowserEnv() ? // Standard browser envs support document.cookie
function standardBrowserEnv() {
  return {
    write: function write(name, value, expires, path, domain, secure) {
      var cookie = [];
      cookie.push(name + '=' + encodeURIComponent(value));

      if (utils.isNumber(expires)) {
        cookie.push('expires=' + new Date(expires).toGMTString());
      }

      if (utils.isString(path)) {
        cookie.push('path=' + path);
      }

      if (utils.isString(domain)) {
        cookie.push('domain=' + domain);
      }

      if (secure === true) {
        cookie.push('secure');
      }

      document.cookie = cookie.join('; ');
    },
    read: function read(name) {
      var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
      return match ? decodeURIComponent(match[3]) : null;
    },
    remove: function remove(name) {
      this.write(name, '', Date.now() - 86400000);
    }
  };
}() : // Non standard browser env (web workers, react-native) lack needed support.
function nonStandardBrowserEnv() {
  return {
    write: function write() {},
    read: function read() {
      return null;
    },
    remove: function remove() {}
  };
}();

/***/ }),
/* 682 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */

module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
};

/***/ }),
/* 683 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */

module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '') : baseURL;
};

/***/ }),
/* 684 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(23); // Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers


var ignoreDuplicateOf = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];
/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */

module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) {
    return parsed;
  }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }

      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });
  return parsed;
};

/***/ }),
/* 685 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(23);

module.exports = utils.isStandardBrowserEnv() ? // Standard browser envs have full support of the APIs needed to test
// whether the request URL is of the same origin as current location.
function standardBrowserEnv() {
  var msie = /(msie|trident)/i.test(navigator.userAgent);
  var urlParsingNode = document.createElement('a');
  var originURL;
  /**
  * Parse a URL to discover it's components
  *
  * @param {String} url The URL to be parsed
  * @returns {Object}
  */

  function resolveURL(url) {
    var href = url;

    if (msie) {
      // IE needs attribute set twice to normalize properties
      urlParsingNode.setAttribute('href', href);
      href = urlParsingNode.href;
    }

    urlParsingNode.setAttribute('href', href); // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils

    return {
      href: urlParsingNode.href,
      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
      host: urlParsingNode.host,
      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
      hostname: urlParsingNode.hostname,
      port: urlParsingNode.port,
      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname
    };
  }

  originURL = resolveURL(window.location.href);
  /**
  * Determine if a URL shares the same origin as the current location
  *
  * @param {String} requestURL The URL to test
  * @returns {boolean} True if URL shares the same origin, otherwise false
  */

  return function isURLSameOrigin(requestURL) {
    var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
  };
}() : // Non standard browser envs (web workers, react-native) lack needed support.
function nonStandardBrowserEnv() {
  return function isURLSameOrigin() {
    return true;
  };
}();

/***/ }),
/* 686 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function parseProtocol(url) {
  var match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
  return match && match[1] || '';
};

/***/ }),
/* 687 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(23);

var settle = __webpack_require__(300);

var buildFullPath = __webpack_require__(215);

var buildURL = __webpack_require__(212);

var http = __webpack_require__(69);

var https = __webpack_require__(75);

var httpFollow = __webpack_require__(96).http;

var httpsFollow = __webpack_require__(96).https;

var url = __webpack_require__(32);

var zlib = __webpack_require__(49);

var VERSION = __webpack_require__(216).version;

var transitionalDefaults = __webpack_require__(214);

var AxiosError = __webpack_require__(83);

var CanceledError = __webpack_require__(127);

var isHttps = /https:?/;
var supportedProtocols = ['http:', 'https:', 'file:'];
/**
 *
 * @param {http.ClientRequestArgs} options
 * @param {AxiosProxyConfig} proxy
 * @param {string} location
 */

function setProxy(options, proxy, location) {
  options.hostname = proxy.host;
  options.host = proxy.host;
  options.port = proxy.port;
  options.path = location; // Basic proxy authorization

  if (proxy.auth) {
    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');
    options.headers['Proxy-Authorization'] = 'Basic ' + base64;
  } // If a proxy is used, any redirects must also pass through the proxy


  options.beforeRedirect = function beforeRedirect(redirection) {
    redirection.headers.host = redirection.host;
    setProxy(redirection, proxy, redirection.href);
  };
}
/*eslint consistent-return:0*/


module.exports = function httpAdapter(config) {
  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {
    var onCanceled;

    function done() {
      if (config.cancelToken) {
        config.cancelToken.unsubscribe(onCanceled);
      }

      if (config.signal) {
        config.signal.removeEventListener('abort', onCanceled);
      }
    }

    var resolve = function resolve(value) {
      done();
      resolvePromise(value);
    };

    var rejected = false;

    var reject = function reject(value) {
      done();
      rejected = true;
      rejectPromise(value);
    };

    var data = config.data;
    var headers = config.headers;
    var headerNames = {};
    Object.keys(headers).forEach(function storeLowerName(name) {
      headerNames[name.toLowerCase()] = name;
    }); // Set User-Agent (required by some servers)
    // See https://github.com/axios/axios/issues/69

    if ('user-agent' in headerNames) {
      // User-Agent is specified; handle case where no UA header is desired
      if (!headers[headerNames['user-agent']]) {
        delete headers[headerNames['user-agent']];
      } // Otherwise, use specified value

    } else {
      // Only set header if it hasn't been set in config
      headers['User-Agent'] = 'axios/' + VERSION;
    } // support for https://www.npmjs.com/package/form-data api


    if (utils.isFormData(data) && utils.isFunction(data.getHeaders)) {
      Object.assign(headers, data.getHeaders());
    } else if (data && !utils.isStream(data)) {
      if (Buffer.isBuffer(data)) {// Nothing to do...
      } else if (utils.isArrayBuffer(data)) {
        data = Buffer.from(new Uint8Array(data));
      } else if (utils.isString(data)) {
        data = Buffer.from(data, 'utf-8');
      } else {
        return reject(new AxiosError('Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream', AxiosError.ERR_BAD_REQUEST, config));
      }

      if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {
        return reject(new AxiosError('Request body larger than maxBodyLength limit', AxiosError.ERR_BAD_REQUEST, config));
      } // Add Content-Length header if data exists


      if (!headerNames['content-length']) {
        headers['Content-Length'] = data.length;
      }
    } // HTTP basic authentication


    var auth = undefined;

    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      auth = username + ':' + password;
    } // Parse url


    var fullPath = buildFullPath(config.baseURL, config.url);
    var parsed = url.parse(fullPath);
    var protocol = parsed.protocol || supportedProtocols[0];

    if (supportedProtocols.indexOf(protocol) === -1) {
      return reject(new AxiosError('Unsupported protocol ' + protocol, AxiosError.ERR_BAD_REQUEST, config));
    }

    if (!auth && parsed.auth) {
      var urlAuth = parsed.auth.split(':');
      var urlUsername = urlAuth[0] || '';
      var urlPassword = urlAuth[1] || '';
      auth = urlUsername + ':' + urlPassword;
    }

    if (auth && headerNames.authorization) {
      delete headers[headerNames.authorization];
    }

    var isHttpsRequest = isHttps.test(protocol);
    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;

    try {
      buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\?/, '');
    } catch (err) {
      var customErr = new Error(err.message);
      customErr.config = config;
      customErr.url = config.url;
      customErr.exists = true;
      reject(customErr);
    }

    var options = {
      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\?/, ''),
      method: config.method.toUpperCase(),
      headers: headers,
      agent: agent,
      agents: {
        http: config.httpAgent,
        https: config.httpsAgent
      },
      auth: auth
    };

    if (config.socketPath) {
      options.socketPath = config.socketPath;
    } else {
      options.hostname = parsed.hostname;
      options.port = parsed.port;
    }

    var proxy = config.proxy;

    if (!proxy && proxy !== false) {
      var proxyEnv = protocol.slice(0, -1) + '_proxy';
      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];

      if (proxyUrl) {
        var parsedProxyUrl = url.parse(proxyUrl);
        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;
        var shouldProxy = true;

        if (noProxyEnv) {
          var noProxy = noProxyEnv.split(',').map(function trim(s) {
            return s.trim();
          });
          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {
            if (!proxyElement) {
              return false;
            }

            if (proxyElement === '*') {
              return true;
            }

            if (proxyElement[0] === '.' && parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {
              return true;
            }

            return parsed.hostname === proxyElement;
          });
        }

        if (shouldProxy) {
          proxy = {
            host: parsedProxyUrl.hostname,
            port: parsedProxyUrl.port,
            protocol: parsedProxyUrl.protocol
          };

          if (parsedProxyUrl.auth) {
            var proxyUrlAuth = parsedProxyUrl.auth.split(':');
            proxy.auth = {
              username: proxyUrlAuth[0],
              password: proxyUrlAuth[1]
            };
          }
        }
      }
    }

    if (proxy) {
      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');
      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);
    }

    var transport;
    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);

    if (config.transport) {
      transport = config.transport;
    } else if (config.maxRedirects === 0) {
      transport = isHttpsProxy ? https : http;
    } else {
      if (config.maxRedirects) {
        options.maxRedirects = config.maxRedirects;
      }

      if (config.beforeRedirect) {
        options.beforeRedirect = config.beforeRedirect;
      }

      transport = isHttpsProxy ? httpsFollow : httpFollow;
    }

    if (config.maxBodyLength > -1) {
      options.maxBodyLength = config.maxBodyLength;
    }

    if (config.insecureHTTPParser) {
      options.insecureHTTPParser = config.insecureHTTPParser;
    } // Create the request


    var req = transport.request(options, function handleResponse(res) {
      if (req.aborted) return; // uncompress the response body transparently if required

      var stream = res; // return the last request in case of redirects

      var lastRequest = res.req || req; // if no content, is HEAD request or decompress disabled we should not decompress

      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {
        switch (res.headers['content-encoding']) {
          /*eslint default-case:0*/
          case 'gzip':
          case 'compress':
          case 'deflate':
            // add the unzipper to the body stream processing pipeline
            stream = stream.pipe(zlib.createUnzip()); // remove the content-encoding in order to not confuse downstream operations

            delete res.headers['content-encoding'];
            break;
        }
      }

      var response = {
        status: res.statusCode,
        statusText: res.statusMessage,
        headers: res.headers,
        config: config,
        request: lastRequest
      };

      if (config.responseType === 'stream') {
        response.data = stream;
        settle(resolve, reject, response);
      } else {
        var responseBuffer = [];
        var totalResponseBytes = 0;
        stream.on('data', function handleStreamData(chunk) {
          responseBuffer.push(chunk);
          totalResponseBytes += chunk.length; // make sure the content length is not over the maxContentLength if specified

          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {
            // stream.destoy() emit aborted event before calling reject() on Node.js v16
            rejected = true;
            stream.destroy();
            reject(new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded', AxiosError.ERR_BAD_RESPONSE, config, lastRequest));
          }
        });
        stream.on('aborted', function handlerStreamAborted() {
          if (rejected) {
            return;
          }

          stream.destroy();
          reject(new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded', AxiosError.ERR_BAD_RESPONSE, config, lastRequest));
        });
        stream.on('error', function handleStreamError(err) {
          if (req.aborted) return;
          reject(AxiosError.from(err, null, config, lastRequest));
        });
        stream.on('end', function handleStreamEnd() {
          try {
            var responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);

            if (config.responseType !== 'arraybuffer') {
              responseData = responseData.toString(config.responseEncoding);

              if (!config.responseEncoding || config.responseEncoding === 'utf8') {
                responseData = utils.stripBOM(responseData);
              }
            }

            response.data = responseData;
          } catch (err) {
            reject(AxiosError.from(err, null, config, response.request, response));
          }

          settle(resolve, reject, response);
        });
      }
    }); // Handle errors

    req.on('error', function handleRequestError(err) {
      // @todo remove
      // if (req.aborted && err.code !== AxiosError.ERR_FR_TOO_MANY_REDIRECTS) return;
      reject(AxiosError.from(err, null, config, req));
    }); // set tcp keep alive to prevent drop connection by peer

    req.on('socket', function handleRequestSocket(socket) {
      // default interval of sending ack packet is 1 minute
      socket.setKeepAlive(true, 1000 * 60);
    }); // Handle request timeout

    if (config.timeout) {
      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.
      var timeout = parseInt(config.timeout, 10);

      if (isNaN(timeout)) {
        reject(new AxiosError('error trying to parse `config.timeout` to int', AxiosError.ERR_BAD_OPTION_VALUE, config, req));
        return;
      } // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.
      // And timer callback will be fired, and abort() will be invoked before connection, then get "socket hang up" and code ECONNRESET.
      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.
      // And then these socket which be hang up will devoring CPU little by little.
      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.


      req.setTimeout(timeout, function handleRequestTimeout() {
        req.abort();
        var transitional = config.transitional || transitionalDefaults;
        reject(new AxiosError('timeout of ' + timeout + 'ms exceeded', transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED, config, req));
      });
    }

    if (config.cancelToken || config.signal) {
      // Handle cancellation
      // eslint-disable-next-line func-names
      onCanceled = function onCanceled(cancel) {
        if (req.aborted) return;
        req.abort();
        reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);
      };

      config.cancelToken && config.cancelToken.subscribe(onCanceled);

      if (config.signal) {
        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);
      }
    } // Send the request


    if (utils.isStream(data)) {
      data.on('error', function handleStreamError(err) {
        reject(AxiosError.from(err, config, null, req));
      }).pipe(req);
    } else {
      req.end(data);
    }
  });
};

/***/ }),
/* 688 */
/***/ (function(module, exports, __webpack_require__) {

// eslint-disable-next-line strict
module.exports = __webpack_require__(689);

/***/ }),
/* 689 */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var CombinedStream = __webpack_require__(690);

var util = __webpack_require__(82);

var path = __webpack_require__(126);

var http = __webpack_require__(69);

var https = __webpack_require__(75);

var parseUrl = __webpack_require__(32).parse;

var fs = __webpack_require__(125);

var Stream = __webpack_require__(15).Stream;

var mime = __webpack_require__(692);

var asynckit = __webpack_require__(695);

var populate = __webpack_require__(699); // Public API


module.exports = FormData; // make it a Stream

util.inherits(FormData, CombinedStream);
/**
 * Create readable "multipart/form-data" streams.
 * Can be used to submit forms
 * and file uploads to other web applications.
 *
 * @constructor
 * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream
 */

function FormData(options) {
  if (!(this instanceof FormData)) {
    return new FormData(options);
  }

  this._overheadLength = 0;
  this._valueLength = 0;
  this._valuesToMeasure = [];
  CombinedStream.call(this);
  options = options || {};

  for (var option in options) {
    this[option] = options[option];
  }
}

FormData.LINE_BREAK = '\r\n';
FormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';

FormData.prototype.append = function (field, value, options) {
  options = options || {}; // allow filename as single option

  if (typeof options == 'string') {
    options = {
      filename: options
    };
  }

  var append = CombinedStream.prototype.append.bind(this); // all that streamy business can't handle numbers

  if (typeof value == 'number') {
    value = '' + value;
  } // https://github.com/felixge/node-form-data/issues/38


  if (util.isArray(value)) {
    // Please convert your array into string
    // the way web server expects it
    this._error(new Error('Arrays are not supported.'));

    return;
  }

  var header = this._multiPartHeader(field, value, options);

  var footer = this._multiPartFooter();

  append(header);
  append(value);
  append(footer); // pass along options.knownLength

  this._trackLength(header, value, options);
};

FormData.prototype._trackLength = function (header, value, options) {
  var valueLength = 0; // used w/ getLengthSync(), when length is known.
  // e.g. for streaming directly from a remote server,
  // w/ a known file a size, and not wanting to wait for
  // incoming file to finish to get its size.

  if (options.knownLength != null) {
    valueLength += +options.knownLength;
  } else if (Buffer.isBuffer(value)) {
    valueLength = value.length;
  } else if (typeof value === 'string') {
    valueLength = Buffer.byteLength(value);
  }

  this._valueLength += valueLength; // @check why add CRLF? does this account for custom/multiple CRLFs?

  this._overheadLength += Buffer.byteLength(header) + FormData.LINE_BREAK.length; // empty or either doesn't have path or not an http response or not a stream

  if (!value || !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) && !(value instanceof Stream)) {
    return;
  } // no need to bother with the length


  if (!options.knownLength) {
    this._valuesToMeasure.push(value);
  }
};

FormData.prototype._lengthRetriever = function (value, callback) {
  if (value.hasOwnProperty('fd')) {
    // take read range into a account
    // `end` = Infinity –> read file till the end
    //
    // TODO: Looks like there is bug in Node fs.createReadStream
    // it doesn't respect `end` options without `start` options
    // Fix it when node fixes it.
    // https://github.com/joyent/node/issues/7819
    if (value.end != undefined && value.end != Infinity && value.start != undefined) {
      // when end specified
      // no need to calculate range
      // inclusive, starts with 0
      callback(null, value.end + 1 - (value.start ? value.start : 0)); // not that fast snoopy
    } else {
      // still need to fetch file size from fs
      fs.stat(value.path, function (err, stat) {
        var fileSize;

        if (err) {
          callback(err);
          return;
        } // update final size based on the range options


        fileSize = stat.size - (value.start ? value.start : 0);
        callback(null, fileSize);
      });
    } // or http response

  } else if (value.hasOwnProperty('httpVersion')) {
    callback(null, +value.headers['content-length']); // or request stream http://github.com/mikeal/request
  } else if (value.hasOwnProperty('httpModule')) {
    // wait till response come back
    value.on('response', function (response) {
      value.pause();
      callback(null, +response.headers['content-length']);
    });
    value.resume(); // something else
  } else {
    callback('Unknown stream');
  }
};

FormData.prototype._multiPartHeader = function (field, value, options) {
  // custom header specified (as string)?
  // it becomes responsible for boundary
  // (e.g. to handle extra CRLFs on .NET servers)
  if (typeof options.header == 'string') {
    return options.header;
  }

  var contentDisposition = this._getContentDisposition(value, options);

  var contentType = this._getContentType(value, options);

  var contents = '';
  var headers = {
    // add custom disposition as third element or keep it two elements if not
    'Content-Disposition': ['form-data', 'name="' + field + '"'].concat(contentDisposition || []),
    // if no content type. allow it to be empty array
    'Content-Type': [].concat(contentType || [])
  }; // allow custom headers.

  if (_typeof(options.header) == 'object') {
    populate(headers, options.header);
  }

  var header;

  for (var prop in headers) {
    if (!headers.hasOwnProperty(prop)) continue;
    header = headers[prop]; // skip nullish headers.

    if (header == null) {
      continue;
    } // convert all headers to arrays.


    if (!Array.isArray(header)) {
      header = [header];
    } // add non-empty headers.


    if (header.length) {
      contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;
    }
  }

  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;
};

FormData.prototype._getContentDisposition = function (value, options) {
  var filename, contentDisposition;

  if (typeof options.filepath === 'string') {
    // custom filepath for relative paths
    filename = path.normalize(options.filepath).replace(/\\/g, '/');
  } else if (options.filename || value.name || value.path) {
    // custom filename take precedence
    // formidable and the browser add a name property
    // fs- and request- streams have path property
    filename = path.basename(options.filename || value.name || value.path);
  } else if (value.readable && value.hasOwnProperty('httpVersion')) {
    // or try http response
    filename = path.basename(value.client._httpMessage.path || '');
  }

  if (filename) {
    contentDisposition = 'filename="' + filename + '"';
  }

  return contentDisposition;
};

FormData.prototype._getContentType = function (value, options) {
  // use custom content-type above all
  var contentType = options.contentType; // or try `name` from formidable, browser

  if (!contentType && value.name) {
    contentType = mime.lookup(value.name);
  } // or try `path` from fs-, request- streams


  if (!contentType && value.path) {
    contentType = mime.lookup(value.path);
  } // or if it's http-reponse


  if (!contentType && value.readable && value.hasOwnProperty('httpVersion')) {
    contentType = value.headers['content-type'];
  } // or guess it from the filepath or filename


  if (!contentType && (options.filepath || options.filename)) {
    contentType = mime.lookup(options.filepath || options.filename);
  } // fallback to the default content type if `value` is not simple value


  if (!contentType && _typeof(value) == 'object') {
    contentType = FormData.DEFAULT_CONTENT_TYPE;
  }

  return contentType;
};

FormData.prototype._multiPartFooter = function () {
  return function (next) {
    var footer = FormData.LINE_BREAK;
    var lastPart = this._streams.length === 0;

    if (lastPart) {
      footer += this._lastBoundary();
    }

    next(footer);
  }.bind(this);
};

FormData.prototype._lastBoundary = function () {
  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;
};

FormData.prototype.getHeaders = function (userHeaders) {
  var header;
  var formHeaders = {
    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()
  };

  for (header in userHeaders) {
    if (userHeaders.hasOwnProperty(header)) {
      formHeaders[header.toLowerCase()] = userHeaders[header];
    }
  }

  return formHeaders;
};

FormData.prototype.setBoundary = function (boundary) {
  this._boundary = boundary;
};

FormData.prototype.getBoundary = function () {
  if (!this._boundary) {
    this._generateBoundary();
  }

  return this._boundary;
};

FormData.prototype.getBuffer = function () {
  var dataBuffer = new Buffer.alloc(0);
  var boundary = this.getBoundary(); // Create the form content. Add Line breaks to the end of data.

  for (var i = 0, len = this._streams.length; i < len; i++) {
    if (typeof this._streams[i] !== 'function') {
      // Add content to the buffer.
      if (Buffer.isBuffer(this._streams[i])) {
        dataBuffer = Buffer.concat([dataBuffer, this._streams[i]]);
      } else {
        dataBuffer = Buffer.concat([dataBuffer, Buffer.from(this._streams[i])]);
      } // Add break after content.


      if (typeof this._streams[i] !== 'string' || this._streams[i].substring(2, boundary.length + 2) !== boundary) {
        dataBuffer = Buffer.concat([dataBuffer, Buffer.from(FormData.LINE_BREAK)]);
      }
    }
  } // Add the footer and return the Buffer object.


  return Buffer.concat([dataBuffer, Buffer.from(this._lastBoundary())]);
};

FormData.prototype._generateBoundary = function () {
  // This generates a 50 character boundary similar to those used by Firefox.
  // They are optimized for boyer-moore parsing.
  var boundary = '--------------------------';

  for (var i = 0; i < 24; i++) {
    boundary += Math.floor(Math.random() * 10).toString(16);
  }

  this._boundary = boundary;
}; // Note: getLengthSync DOESN'T calculate streams length
// As workaround one can calculate file size manually
// and add it as knownLength option


FormData.prototype.getLengthSync = function () {
  var knownLength = this._overheadLength + this._valueLength; // Don't get confused, there are 3 "internal" streams for each keyval pair
  // so it basically checks if there is any value added to the form

  if (this._streams.length) {
    knownLength += this._lastBoundary().length;
  } // https://github.com/form-data/form-data/issues/40


  if (!this.hasKnownLength()) {
    // Some async length retrievers are present
    // therefore synchronous length calculation is false.
    // Please use getLength(callback) to get proper length
    this._error(new Error('Cannot calculate proper length in synchronous way.'));
  }

  return knownLength;
}; // Public API to check if length of added values is known
// https://github.com/form-data/form-data/issues/196
// https://github.com/form-data/form-data/issues/262


FormData.prototype.hasKnownLength = function () {
  var hasKnownLength = true;

  if (this._valuesToMeasure.length) {
    hasKnownLength = false;
  }

  return hasKnownLength;
};

FormData.prototype.getLength = function (cb) {
  var knownLength = this._overheadLength + this._valueLength;

  if (this._streams.length) {
    knownLength += this._lastBoundary().length;
  }

  if (!this._valuesToMeasure.length) {
    process.nextTick(cb.bind(this, null, knownLength));
    return;
  }

  asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function (err, values) {
    if (err) {
      cb(err);
      return;
    }

    values.forEach(function (length) {
      knownLength += length;
    });
    cb(null, knownLength);
  });
};

FormData.prototype.submit = function (params, cb) {
  var request,
      options,
      defaults = {
    method: 'post'
  }; // parse provided url if it's string
  // or treat it as options object

  if (typeof params == 'string') {
    params = parseUrl(params);
    options = populate({
      port: params.port,
      path: params.pathname,
      host: params.hostname,
      protocol: params.protocol
    }, defaults); // use custom params
  } else {
    options = populate(params, defaults); // if no port provided use default one

    if (!options.port) {
      options.port = options.protocol == 'https:' ? 443 : 80;
    }
  } // put that good code in getHeaders to some use


  options.headers = this.getHeaders(params.headers); // https if specified, fallback to http in any other case

  if (options.protocol == 'https:') {
    request = https.request(options);
  } else {
    request = http.request(options);
  } // get content length and fire away


  this.getLength(function (err, length) {
    if (err && err !== 'Unknown stream') {
      this._error(err);

      return;
    } // add content length


    if (length) {
      request.setHeader('Content-Length', length);
    }

    this.pipe(request);

    if (cb) {
      var onResponse;

      var callback = function callback(error, responce) {
        request.removeListener('error', callback);
        request.removeListener('response', onResponse);
        return cb.call(this, error, responce);
      };

      onResponse = callback.bind(this, null);
      request.on('error', callback);
      request.on('response', onResponse);
    }
  }.bind(this));
  return request;
};

FormData.prototype._error = function (err) {
  if (!this.error) {
    this.error = err;
    this.pause();
    this.emit('error', err);
  }
};

FormData.prototype.toString = function () {
  return '[object FormData]';
};

/***/ }),
/* 690 */
/***/ (function(module, exports, __webpack_require__) {

var util = __webpack_require__(82);

var Stream = __webpack_require__(15).Stream;

var DelayedStream = __webpack_require__(691);

module.exports = CombinedStream;

function CombinedStream() {
  this.writable = false;
  this.readable = true;
  this.dataSize = 0;
  this.maxDataSize = 2 * 1024 * 1024;
  this.pauseStreams = true;
  this._released = false;
  this._streams = [];
  this._currentStream = null;
  this._insideLoop = false;
  this._pendingNext = false;
}

util.inherits(CombinedStream, Stream);

CombinedStream.create = function (options) {
  var combinedStream = new this();
  options = options || {};

  for (var option in options) {
    combinedStream[option] = options[option];
  }

  return combinedStream;
};

CombinedStream.isStreamLike = function (stream) {
  return typeof stream !== 'function' && typeof stream !== 'string' && typeof stream !== 'boolean' && typeof stream !== 'number' && !Buffer.isBuffer(stream);
};

CombinedStream.prototype.append = function (stream) {
  var isStreamLike = CombinedStream.isStreamLike(stream);

  if (isStreamLike) {
    if (!(stream instanceof DelayedStream)) {
      var newStream = DelayedStream.create(stream, {
        maxDataSize: Infinity,
        pauseStream: this.pauseStreams
      });
      stream.on('data', this._checkDataSize.bind(this));
      stream = newStream;
    }

    this._handleErrors(stream);

    if (this.pauseStreams) {
      stream.pause();
    }
  }

  this._streams.push(stream);

  return this;
};

CombinedStream.prototype.pipe = function (dest, options) {
  Stream.prototype.pipe.call(this, dest, options);
  this.resume();
  return dest;
};

CombinedStream.prototype._getNext = function () {
  this._currentStream = null;

  if (this._insideLoop) {
    this._pendingNext = true;
    return; // defer call
  }

  this._insideLoop = true;

  try {
    do {
      this._pendingNext = false;

      this._realGetNext();
    } while (this._pendingNext);
  } finally {
    this._insideLoop = false;
  }
};

CombinedStream.prototype._realGetNext = function () {
  var stream = this._streams.shift();

  if (typeof stream == 'undefined') {
    this.end();
    return;
  }

  if (typeof stream !== 'function') {
    this._pipeNext(stream);

    return;
  }

  var getStream = stream;
  getStream(function (stream) {
    var isStreamLike = CombinedStream.isStreamLike(stream);

    if (isStreamLike) {
      stream.on('data', this._checkDataSize.bind(this));

      this._handleErrors(stream);
    }

    this._pipeNext(stream);
  }.bind(this));
};

CombinedStream.prototype._pipeNext = function (stream) {
  this._currentStream = stream;
  var isStreamLike = CombinedStream.isStreamLike(stream);

  if (isStreamLike) {
    stream.on('end', this._getNext.bind(this));
    stream.pipe(this, {
      end: false
    });
    return;
  }

  var value = stream;
  this.write(value);

  this._getNext();
};

CombinedStream.prototype._handleErrors = function (stream) {
  var self = this;
  stream.on('error', function (err) {
    self._emitError(err);
  });
};

CombinedStream.prototype.write = function (data) {
  this.emit('data', data);
};

CombinedStream.prototype.pause = function () {
  if (!this.pauseStreams) {
    return;
  }

  if (this.pauseStreams && this._currentStream && typeof this._currentStream.pause == 'function') this._currentStream.pause();
  this.emit('pause');
};

CombinedStream.prototype.resume = function () {
  if (!this._released) {
    this._released = true;
    this.writable = true;

    this._getNext();
  }

  if (this.pauseStreams && this._currentStream && typeof this._currentStream.resume == 'function') this._currentStream.resume();
  this.emit('resume');
};

CombinedStream.prototype.end = function () {
  this._reset();

  this.emit('end');
};

CombinedStream.prototype.destroy = function () {
  this._reset();

  this.emit('close');
};

CombinedStream.prototype._reset = function () {
  this.writable = false;
  this._streams = [];
  this._currentStream = null;
};

CombinedStream.prototype._checkDataSize = function () {
  this._updateDataSize();

  if (this.dataSize <= this.maxDataSize) {
    return;
  }

  var message = 'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';

  this._emitError(new Error(message));
};

CombinedStream.prototype._updateDataSize = function () {
  this.dataSize = 0;
  var self = this;

  this._streams.forEach(function (stream) {
    if (!stream.dataSize) {
      return;
    }

    self.dataSize += stream.dataSize;
  });

  if (this._currentStream && this._currentStream.dataSize) {
    this.dataSize += this._currentStream.dataSize;
  }
};

CombinedStream.prototype._emitError = function (err) {
  this._reset();

  this.emit('error', err);
};

/***/ }),
/* 691 */
/***/ (function(module, exports, __webpack_require__) {

var Stream = __webpack_require__(15).Stream;

var util = __webpack_require__(82);

module.exports = DelayedStream;

function DelayedStream() {
  this.source = null;
  this.dataSize = 0;
  this.maxDataSize = 1024 * 1024;
  this.pauseStream = true;
  this._maxDataSizeExceeded = false;
  this._released = false;
  this._bufferedEvents = [];
}

util.inherits(DelayedStream, Stream);

DelayedStream.create = function (source, options) {
  var delayedStream = new this();
  options = options || {};

  for (var option in options) {
    delayedStream[option] = options[option];
  }

  delayedStream.source = source;
  var realEmit = source.emit;

  source.emit = function () {
    delayedStream._handleEmit(arguments);

    return realEmit.apply(source, arguments);
  };

  source.on('error', function () {});

  if (delayedStream.pauseStream) {
    source.pause();
  }

  return delayedStream;
};

Object.defineProperty(DelayedStream.prototype, 'readable', {
  configurable: true,
  enumerable: true,
  get: function get() {
    return this.source.readable;
  }
});

DelayedStream.prototype.setEncoding = function () {
  return this.source.setEncoding.apply(this.source, arguments);
};

DelayedStream.prototype.resume = function () {
  if (!this._released) {
    this.release();
  }

  this.source.resume();
};

DelayedStream.prototype.pause = function () {
  this.source.pause();
};

DelayedStream.prototype.release = function () {
  this._released = true;

  this._bufferedEvents.forEach(function (args) {
    this.emit.apply(this, args);
  }.bind(this));

  this._bufferedEvents = [];
};

DelayedStream.prototype.pipe = function () {
  var r = Stream.prototype.pipe.apply(this, arguments);
  this.resume();
  return r;
};

DelayedStream.prototype._handleEmit = function (args) {
  if (this._released) {
    this.emit.apply(this, args);
    return;
  }

  if (args[0] === 'data') {
    this.dataSize += args[1].length;

    this._checkIfMaxDataSizeExceeded();
  }

  this._bufferedEvents.push(args);
};

DelayedStream.prototype._checkIfMaxDataSizeExceeded = function () {
  if (this._maxDataSizeExceeded) {
    return;
  }

  if (this.dataSize <= this.maxDataSize) {
    return;
  }

  this._maxDataSizeExceeded = true;
  var message = 'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';
  this.emit('error', new Error(message));
};

/***/ }),
/* 692 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * mime-types
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */

/**
 * Module dependencies.
 * @private
 */

var db = __webpack_require__(693);

var extname = __webpack_require__(126).extname;
/**
 * Module variables.
 * @private
 */


var EXTRACT_TYPE_REGEXP = /^\s*([^;\s]*)(?:;|\s|$)/;
var TEXT_TYPE_REGEXP = /^text\//i;
/**
 * Module exports.
 * @public
 */

exports.charset = charset;
exports.charsets = {
  lookup: charset
};
exports.contentType = contentType;
exports.extension = extension;
exports.extensions = Object.create(null);
exports.lookup = lookup;
exports.types = Object.create(null); // Populate the extensions/types maps

populateMaps(exports.extensions, exports.types);
/**
 * Get the default charset for a MIME type.
 *
 * @param {string} type
 * @return {boolean|string}
 */

function charset(type) {
  if (!type || typeof type !== 'string') {
    return false;
  } // TODO: use media-typer


  var match = EXTRACT_TYPE_REGEXP.exec(type);
  var mime = match && db[match[1].toLowerCase()];

  if (mime && mime.charset) {
    return mime.charset;
  } // default text/* to utf-8


  if (match && TEXT_TYPE_REGEXP.test(match[1])) {
    return 'UTF-8';
  }

  return false;
}
/**
 * Create a full Content-Type header given a MIME type or extension.
 *
 * @param {string} str
 * @return {boolean|string}
 */


function contentType(str) {
  // TODO: should this even be in this module?
  if (!str || typeof str !== 'string') {
    return false;
  }

  var mime = str.indexOf('/') === -1 ? exports.lookup(str) : str;

  if (!mime) {
    return false;
  } // TODO: use content-type or other module


  if (mime.indexOf('charset') === -1) {
    var charset = exports.charset(mime);
    if (charset) mime += '; charset=' + charset.toLowerCase();
  }

  return mime;
}
/**
 * Get the default extension for a MIME type.
 *
 * @param {string} type
 * @return {boolean|string}
 */


function extension(type) {
  if (!type || typeof type !== 'string') {
    return false;
  } // TODO: use media-typer


  var match = EXTRACT_TYPE_REGEXP.exec(type); // get extensions

  var exts = match && exports.extensions[match[1].toLowerCase()];

  if (!exts || !exts.length) {
    return false;
  }

  return exts[0];
}
/**
 * Lookup the MIME type for a file path/extension.
 *
 * @param {string} path
 * @return {boolean|string}
 */


function lookup(path) {
  if (!path || typeof path !== 'string') {
    return false;
  } // get the extension ("ext" or ".ext" or full path)


  var extension = extname('x.' + path).toLowerCase().substr(1);

  if (!extension) {
    return false;
  }

  return exports.types[extension] || false;
}
/**
 * Populate the extensions and types maps.
 * @private
 */


function populateMaps(extensions, types) {
  // source preference (least -> most)
  var preference = ['nginx', 'apache', undefined, 'iana'];
  Object.keys(db).forEach(function forEachMimeType(type) {
    var mime = db[type];
    var exts = mime.extensions;

    if (!exts || !exts.length) {
      return;
    } // mime -> extensions


    extensions[type] = exts; // extension -> mime

    for (var i = 0; i < exts.length; i++) {
      var extension = exts[i];

      if (types[extension]) {
        var from = preference.indexOf(db[types[extension]].source);
        var to = preference.indexOf(mime.source);

        if (types[extension] !== 'application/octet-stream' && (from > to || from === to && types[extension].substr(0, 12) === 'application/')) {
          // skip the remapping
          continue;
        }
      } // set the extension -> mime


      types[extension] = type;
    }
  });
}

/***/ }),
/* 693 */
/***/ (function(module, exports, __webpack_require__) {

/*!
 * mime-db
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015-2022 Douglas Christopher Wilson
 * MIT Licensed
 */

/**
 * Module exports.
 */
module.exports = __webpack_require__(694);

/***/ }),
/* 694 */
/***/ (function(module) {

module.exports = JSON.parse("{\"application/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"application/3gpdash-qoe-report+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/3gpp-ims+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/3gpphal+json\":{\"source\":\"iana\",\"compressible\":true},\"application/3gpphalforms+json\":{\"source\":\"iana\",\"compressible\":true},\"application/a2l\":{\"source\":\"iana\"},\"application/ace+cbor\":{\"source\":\"iana\"},\"application/activemessage\":{\"source\":\"iana\"},\"application/activity+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-costmap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-costmapfilter+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-directory+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointcost+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointcostparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointprop+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointpropparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-error+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-networkmap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-networkmapfilter+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-updatestreamcontrol+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-updatestreamparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/aml\":{\"source\":\"iana\"},\"application/andrew-inset\":{\"source\":\"iana\",\"extensions\":[\"ez\"]},\"application/applefile\":{\"source\":\"iana\"},\"application/applixware\":{\"source\":\"apache\",\"extensions\":[\"aw\"]},\"application/at+jwt\":{\"source\":\"iana\"},\"application/atf\":{\"source\":\"iana\"},\"application/atfx\":{\"source\":\"iana\"},\"application/atom+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atom\"]},\"application/atomcat+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomcat\"]},\"application/atomdeleted+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomdeleted\"]},\"application/atomicmail\":{\"source\":\"iana\"},\"application/atomsvc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomsvc\"]},\"application/atsc-dwd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dwd\"]},\"application/atsc-dynamic-event-message\":{\"source\":\"iana\"},\"application/atsc-held+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"held\"]},\"application/atsc-rdt+json\":{\"source\":\"iana\",\"compressible\":true},\"application/atsc-rsat+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rsat\"]},\"application/atxml\":{\"source\":\"iana\"},\"application/auth-policy+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/bacnet-xdd+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/batch-smtp\":{\"source\":\"iana\"},\"application/bdoc\":{\"compressible\":false,\"extensions\":[\"bdoc\"]},\"application/beep+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/calendar+json\":{\"source\":\"iana\",\"compressible\":true},\"application/calendar+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xcs\"]},\"application/call-completion\":{\"source\":\"iana\"},\"application/cals-1840\":{\"source\":\"iana\"},\"application/captive+json\":{\"source\":\"iana\",\"compressible\":true},\"application/cbor\":{\"source\":\"iana\"},\"application/cbor-seq\":{\"source\":\"iana\"},\"application/cccex\":{\"source\":\"iana\"},\"application/ccmp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ccxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ccxml\"]},\"application/cdfx+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"cdfx\"]},\"application/cdmi-capability\":{\"source\":\"iana\",\"extensions\":[\"cdmia\"]},\"application/cdmi-container\":{\"source\":\"iana\",\"extensions\":[\"cdmic\"]},\"application/cdmi-domain\":{\"source\":\"iana\",\"extensions\":[\"cdmid\"]},\"application/cdmi-object\":{\"source\":\"iana\",\"extensions\":[\"cdmio\"]},\"application/cdmi-queue\":{\"source\":\"iana\",\"extensions\":[\"cdmiq\"]},\"application/cdni\":{\"source\":\"iana\"},\"application/cea\":{\"source\":\"iana\"},\"application/cea-2018+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cellml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cfw\":{\"source\":\"iana\"},\"application/city+json\":{\"source\":\"iana\",\"compressible\":true},\"application/clr\":{\"source\":\"iana\"},\"application/clue+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/clue_info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cms\":{\"source\":\"iana\"},\"application/cnrp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/coap-group+json\":{\"source\":\"iana\",\"compressible\":true},\"application/coap-payload\":{\"source\":\"iana\"},\"application/commonground\":{\"source\":\"iana\"},\"application/conference-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cose\":{\"source\":\"iana\"},\"application/cose-key\":{\"source\":\"iana\"},\"application/cose-key-set\":{\"source\":\"iana\"},\"application/cpl+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"cpl\"]},\"application/csrattrs\":{\"source\":\"iana\"},\"application/csta+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cstadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/csvm+json\":{\"source\":\"iana\",\"compressible\":true},\"application/cu-seeme\":{\"source\":\"apache\",\"extensions\":[\"cu\"]},\"application/cwt\":{\"source\":\"iana\"},\"application/cybercash\":{\"source\":\"iana\"},\"application/dart\":{\"compressible\":true},\"application/dash+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mpd\"]},\"application/dash-patch+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mpp\"]},\"application/dashdelta\":{\"source\":\"iana\"},\"application/davmount+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"davmount\"]},\"application/dca-rft\":{\"source\":\"iana\"},\"application/dcd\":{\"source\":\"iana\"},\"application/dec-dx\":{\"source\":\"iana\"},\"application/dialog-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dicom\":{\"source\":\"iana\"},\"application/dicom+json\":{\"source\":\"iana\",\"compressible\":true},\"application/dicom+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dii\":{\"source\":\"iana\"},\"application/dit\":{\"source\":\"iana\"},\"application/dns\":{\"source\":\"iana\"},\"application/dns+json\":{\"source\":\"iana\",\"compressible\":true},\"application/dns-message\":{\"source\":\"iana\"},\"application/docbook+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"dbk\"]},\"application/dots+cbor\":{\"source\":\"iana\"},\"application/dskpp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dssc+der\":{\"source\":\"iana\",\"extensions\":[\"dssc\"]},\"application/dssc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdssc\"]},\"application/dvcs\":{\"source\":\"iana\"},\"application/ecmascript\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"es\",\"ecma\"]},\"application/edi-consent\":{\"source\":\"iana\"},\"application/edi-x12\":{\"source\":\"iana\",\"compressible\":false},\"application/edifact\":{\"source\":\"iana\",\"compressible\":false},\"application/efi\":{\"source\":\"iana\"},\"application/elm+json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/elm+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.cap+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/emergencycalldata.comment+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.deviceinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.ecall.msd\":{\"source\":\"iana\"},\"application/emergencycalldata.providerinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.serviceinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.subscriberinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.veds+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emma+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"emma\"]},\"application/emotionml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"emotionml\"]},\"application/encaprtp\":{\"source\":\"iana\"},\"application/epp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/epub+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"epub\"]},\"application/eshop\":{\"source\":\"iana\"},\"application/exi\":{\"source\":\"iana\",\"extensions\":[\"exi\"]},\"application/expect-ct-report+json\":{\"source\":\"iana\",\"compressible\":true},\"application/express\":{\"source\":\"iana\",\"extensions\":[\"exp\"]},\"application/fastinfoset\":{\"source\":\"iana\"},\"application/fastsoap\":{\"source\":\"iana\"},\"application/fdt+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"fdt\"]},\"application/fhir+json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/fhir+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/fido.trusted-apps+json\":{\"compressible\":true},\"application/fits\":{\"source\":\"iana\"},\"application/flexfec\":{\"source\":\"iana\"},\"application/font-sfnt\":{\"source\":\"iana\"},\"application/font-tdpfr\":{\"source\":\"iana\",\"extensions\":[\"pfr\"]},\"application/font-woff\":{\"source\":\"iana\",\"compressible\":false},\"application/framework-attributes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/geo+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"geojson\"]},\"application/geo+json-seq\":{\"source\":\"iana\"},\"application/geopackage+sqlite3\":{\"source\":\"iana\"},\"application/geoxacml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/gltf-buffer\":{\"source\":\"iana\"},\"application/gml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"gml\"]},\"application/gpx+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"gpx\"]},\"application/gxf\":{\"source\":\"apache\",\"extensions\":[\"gxf\"]},\"application/gzip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"gz\"]},\"application/h224\":{\"source\":\"iana\"},\"application/held+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/hjson\":{\"extensions\":[\"hjson\"]},\"application/http\":{\"source\":\"iana\"},\"application/hyperstudio\":{\"source\":\"iana\",\"extensions\":[\"stk\"]},\"application/ibe-key-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ibe-pkg-reply+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ibe-pp-data\":{\"source\":\"iana\"},\"application/iges\":{\"source\":\"iana\"},\"application/im-iscomposing+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/index\":{\"source\":\"iana\"},\"application/index.cmd\":{\"source\":\"iana\"},\"application/index.obj\":{\"source\":\"iana\"},\"application/index.response\":{\"source\":\"iana\"},\"application/index.vnd\":{\"source\":\"iana\"},\"application/inkml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ink\",\"inkml\"]},\"application/iotp\":{\"source\":\"iana\"},\"application/ipfix\":{\"source\":\"iana\",\"extensions\":[\"ipfix\"]},\"application/ipp\":{\"source\":\"iana\"},\"application/isup\":{\"source\":\"iana\"},\"application/its+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"its\"]},\"application/java-archive\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"jar\",\"war\",\"ear\"]},\"application/java-serialized-object\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"ser\"]},\"application/java-vm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"class\"]},\"application/javascript\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"js\",\"mjs\"]},\"application/jf2feed+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jose\":{\"source\":\"iana\"},\"application/jose+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jrd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jscalendar+json\":{\"source\":\"iana\",\"compressible\":true},\"application/json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"json\",\"map\"]},\"application/json-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/json-seq\":{\"source\":\"iana\"},\"application/json5\":{\"extensions\":[\"json5\"]},\"application/jsonml+json\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"jsonml\"]},\"application/jwk+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jwk-set+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jwt\":{\"source\":\"iana\"},\"application/kpml-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/kpml-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ld+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"jsonld\"]},\"application/lgr+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lgr\"]},\"application/link-format\":{\"source\":\"iana\"},\"application/load-control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/lost+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lostxml\"]},\"application/lostsync+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/lpf+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/lxf\":{\"source\":\"iana\"},\"application/mac-binhex40\":{\"source\":\"iana\",\"extensions\":[\"hqx\"]},\"application/mac-compactpro\":{\"source\":\"apache\",\"extensions\":[\"cpt\"]},\"application/macwriteii\":{\"source\":\"iana\"},\"application/mads+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mads\"]},\"application/manifest+json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"webmanifest\"]},\"application/marc\":{\"source\":\"iana\",\"extensions\":[\"mrc\"]},\"application/marcxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mrcx\"]},\"application/mathematica\":{\"source\":\"iana\",\"extensions\":[\"ma\",\"nb\",\"mb\"]},\"application/mathml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mathml\"]},\"application/mathml-content+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mathml-presentation+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-associated-procedure-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-deregister+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-envelope+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-msk+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-msk-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-protection-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-reception-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-register+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-register-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-schedule+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-user-service-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbox\":{\"source\":\"iana\",\"extensions\":[\"mbox\"]},\"application/media-policy-dataset+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mpf\"]},\"application/media_control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mediaservercontrol+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mscml\"]},\"application/merge-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/metalink+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"metalink\"]},\"application/metalink4+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"meta4\"]},\"application/mets+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mets\"]},\"application/mf4\":{\"source\":\"iana\"},\"application/mikey\":{\"source\":\"iana\"},\"application/mipc\":{\"source\":\"iana\"},\"application/missing-blocks+cbor-seq\":{\"source\":\"iana\"},\"application/mmt-aei+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"maei\"]},\"application/mmt-usd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"musd\"]},\"application/mods+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mods\"]},\"application/moss-keys\":{\"source\":\"iana\"},\"application/moss-signature\":{\"source\":\"iana\"},\"application/mosskey-data\":{\"source\":\"iana\"},\"application/mosskey-request\":{\"source\":\"iana\"},\"application/mp21\":{\"source\":\"iana\",\"extensions\":[\"m21\",\"mp21\"]},\"application/mp4\":{\"source\":\"iana\",\"extensions\":[\"mp4s\",\"m4p\"]},\"application/mpeg4-generic\":{\"source\":\"iana\"},\"application/mpeg4-iod\":{\"source\":\"iana\"},\"application/mpeg4-iod-xmt\":{\"source\":\"iana\"},\"application/mrb-consumer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mrb-publish+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/msc-ivr+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/msc-mixer+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/msword\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"doc\",\"dot\"]},\"application/mud+json\":{\"source\":\"iana\",\"compressible\":true},\"application/multipart-core\":{\"source\":\"iana\"},\"application/mxf\":{\"source\":\"iana\",\"extensions\":[\"mxf\"]},\"application/n-quads\":{\"source\":\"iana\",\"extensions\":[\"nq\"]},\"application/n-triples\":{\"source\":\"iana\",\"extensions\":[\"nt\"]},\"application/nasdata\":{\"source\":\"iana\"},\"application/news-checkgroups\":{\"source\":\"iana\",\"charset\":\"US-ASCII\"},\"application/news-groupinfo\":{\"source\":\"iana\",\"charset\":\"US-ASCII\"},\"application/news-transmission\":{\"source\":\"iana\"},\"application/nlsml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/node\":{\"source\":\"iana\",\"extensions\":[\"cjs\"]},\"application/nss\":{\"source\":\"iana\"},\"application/oauth-authz-req+jwt\":{\"source\":\"iana\"},\"application/oblivious-dns-message\":{\"source\":\"iana\"},\"application/ocsp-request\":{\"source\":\"iana\"},\"application/ocsp-response\":{\"source\":\"iana\"},\"application/octet-stream\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"]},\"application/oda\":{\"source\":\"iana\",\"extensions\":[\"oda\"]},\"application/odm+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/odx\":{\"source\":\"iana\"},\"application/oebps-package+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"opf\"]},\"application/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ogx\"]},\"application/omdoc+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"omdoc\"]},\"application/onenote\":{\"source\":\"apache\",\"extensions\":[\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"]},\"application/opc-nodeset+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/oscore\":{\"source\":\"iana\"},\"application/oxps\":{\"source\":\"iana\",\"extensions\":[\"oxps\"]},\"application/p21\":{\"source\":\"iana\"},\"application/p21+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/p2p-overlay+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"relo\"]},\"application/parityfec\":{\"source\":\"iana\"},\"application/passport\":{\"source\":\"iana\"},\"application/patch-ops-error+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xer\"]},\"application/pdf\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pdf\"]},\"application/pdx\":{\"source\":\"iana\"},\"application/pem-certificate-chain\":{\"source\":\"iana\"},\"application/pgp-encrypted\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pgp\"]},\"application/pgp-keys\":{\"source\":\"iana\",\"extensions\":[\"asc\"]},\"application/pgp-signature\":{\"source\":\"iana\",\"extensions\":[\"asc\",\"sig\"]},\"application/pics-rules\":{\"source\":\"apache\",\"extensions\":[\"prf\"]},\"application/pidf+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/pidf-diff+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/pkcs10\":{\"source\":\"iana\",\"extensions\":[\"p10\"]},\"application/pkcs12\":{\"source\":\"iana\"},\"application/pkcs7-mime\":{\"source\":\"iana\",\"extensions\":[\"p7m\",\"p7c\"]},\"application/pkcs7-signature\":{\"source\":\"iana\",\"extensions\":[\"p7s\"]},\"application/pkcs8\":{\"source\":\"iana\",\"extensions\":[\"p8\"]},\"application/pkcs8-encrypted\":{\"source\":\"iana\"},\"application/pkix-attr-cert\":{\"source\":\"iana\",\"extensions\":[\"ac\"]},\"application/pkix-cert\":{\"source\":\"iana\",\"extensions\":[\"cer\"]},\"application/pkix-crl\":{\"source\":\"iana\",\"extensions\":[\"crl\"]},\"application/pkix-pkipath\":{\"source\":\"iana\",\"extensions\":[\"pkipath\"]},\"application/pkixcmp\":{\"source\":\"iana\",\"extensions\":[\"pki\"]},\"application/pls+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"pls\"]},\"application/poc-settings+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/postscript\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ai\",\"eps\",\"ps\"]},\"application/ppsp-tracker+json\":{\"source\":\"iana\",\"compressible\":true},\"application/problem+json\":{\"source\":\"iana\",\"compressible\":true},\"application/problem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/provenance+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"provx\"]},\"application/prs.alvestrand.titrax-sheet\":{\"source\":\"iana\"},\"application/prs.cww\":{\"source\":\"iana\",\"extensions\":[\"cww\"]},\"application/prs.cyn\":{\"source\":\"iana\",\"charset\":\"7-BIT\"},\"application/prs.hpub+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/prs.nprend\":{\"source\":\"iana\"},\"application/prs.plucker\":{\"source\":\"iana\"},\"application/prs.rdf-xml-crypt\":{\"source\":\"iana\"},\"application/prs.xsf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/pskc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"pskcxml\"]},\"application/pvd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/qsig\":{\"source\":\"iana\"},\"application/raml+yaml\":{\"compressible\":true,\"extensions\":[\"raml\"]},\"application/raptorfec\":{\"source\":\"iana\"},\"application/rdap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/rdf+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rdf\",\"owl\"]},\"application/reginfo+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rif\"]},\"application/relax-ng-compact-syntax\":{\"source\":\"iana\",\"extensions\":[\"rnc\"]},\"application/remote-printing\":{\"source\":\"iana\"},\"application/reputon+json\":{\"source\":\"iana\",\"compressible\":true},\"application/resource-lists+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rl\"]},\"application/resource-lists-diff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rld\"]},\"application/rfc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/riscos\":{\"source\":\"iana\"},\"application/rlmi+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/rls-services+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rs\"]},\"application/route-apd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rapd\"]},\"application/route-s-tsid+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sls\"]},\"application/route-usd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rusd\"]},\"application/rpki-ghostbusters\":{\"source\":\"iana\",\"extensions\":[\"gbr\"]},\"application/rpki-manifest\":{\"source\":\"iana\",\"extensions\":[\"mft\"]},\"application/rpki-publication\":{\"source\":\"iana\"},\"application/rpki-roa\":{\"source\":\"iana\",\"extensions\":[\"roa\"]},\"application/rpki-updown\":{\"source\":\"iana\"},\"application/rsd+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"rsd\"]},\"application/rss+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"rss\"]},\"application/rtf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtf\"]},\"application/rtploopback\":{\"source\":\"iana\"},\"application/rtx\":{\"source\":\"iana\"},\"application/samlassertion+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/samlmetadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sarif+json\":{\"source\":\"iana\",\"compressible\":true},\"application/sarif-external-properties+json\":{\"source\":\"iana\",\"compressible\":true},\"application/sbe\":{\"source\":\"iana\"},\"application/sbml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sbml\"]},\"application/scaip+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/scim+json\":{\"source\":\"iana\",\"compressible\":true},\"application/scvp-cv-request\":{\"source\":\"iana\",\"extensions\":[\"scq\"]},\"application/scvp-cv-response\":{\"source\":\"iana\",\"extensions\":[\"scs\"]},\"application/scvp-vp-request\":{\"source\":\"iana\",\"extensions\":[\"spq\"]},\"application/scvp-vp-response\":{\"source\":\"iana\",\"extensions\":[\"spp\"]},\"application/sdp\":{\"source\":\"iana\",\"extensions\":[\"sdp\"]},\"application/secevent+jwt\":{\"source\":\"iana\"},\"application/senml+cbor\":{\"source\":\"iana\"},\"application/senml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/senml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"senmlx\"]},\"application/senml-etch+cbor\":{\"source\":\"iana\"},\"application/senml-etch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/senml-exi\":{\"source\":\"iana\"},\"application/sensml+cbor\":{\"source\":\"iana\"},\"application/sensml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/sensml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sensmlx\"]},\"application/sensml-exi\":{\"source\":\"iana\"},\"application/sep+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sep-exi\":{\"source\":\"iana\"},\"application/session-info\":{\"source\":\"iana\"},\"application/set-payment\":{\"source\":\"iana\"},\"application/set-payment-initiation\":{\"source\":\"iana\",\"extensions\":[\"setpay\"]},\"application/set-registration\":{\"source\":\"iana\"},\"application/set-registration-initiation\":{\"source\":\"iana\",\"extensions\":[\"setreg\"]},\"application/sgml\":{\"source\":\"iana\"},\"application/sgml-open-catalog\":{\"source\":\"iana\"},\"application/shf+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"shf\"]},\"application/sieve\":{\"source\":\"iana\",\"extensions\":[\"siv\",\"sieve\"]},\"application/simple-filter+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/simple-message-summary\":{\"source\":\"iana\"},\"application/simplesymbolcontainer\":{\"source\":\"iana\"},\"application/sipc\":{\"source\":\"iana\"},\"application/slate\":{\"source\":\"iana\"},\"application/smil\":{\"source\":\"iana\"},\"application/smil+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"smi\",\"smil\"]},\"application/smpte336m\":{\"source\":\"iana\"},\"application/soap+fastinfoset\":{\"source\":\"iana\"},\"application/soap+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sparql-query\":{\"source\":\"iana\",\"extensions\":[\"rq\"]},\"application/sparql-results+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"srx\"]},\"application/spdx+json\":{\"source\":\"iana\",\"compressible\":true},\"application/spirits-event+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sql\":{\"source\":\"iana\"},\"application/srgs\":{\"source\":\"iana\",\"extensions\":[\"gram\"]},\"application/srgs+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"grxml\"]},\"application/sru+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sru\"]},\"application/ssdl+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ssdl\"]},\"application/ssml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ssml\"]},\"application/stix+json\":{\"source\":\"iana\",\"compressible\":true},\"application/swid+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"swidtag\"]},\"application/tamp-apex-update\":{\"source\":\"iana\"},\"application/tamp-apex-update-confirm\":{\"source\":\"iana\"},\"application/tamp-community-update\":{\"source\":\"iana\"},\"application/tamp-community-update-confirm\":{\"source\":\"iana\"},\"application/tamp-error\":{\"source\":\"iana\"},\"application/tamp-sequence-adjust\":{\"source\":\"iana\"},\"application/tamp-sequence-adjust-confirm\":{\"source\":\"iana\"},\"application/tamp-status-query\":{\"source\":\"iana\"},\"application/tamp-status-response\":{\"source\":\"iana\"},\"application/tamp-update\":{\"source\":\"iana\"},\"application/tamp-update-confirm\":{\"source\":\"iana\"},\"application/tar\":{\"compressible\":true},\"application/taxii+json\":{\"source\":\"iana\",\"compressible\":true},\"application/td+json\":{\"source\":\"iana\",\"compressible\":true},\"application/tei+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tei\",\"teicorpus\"]},\"application/tetra_isi\":{\"source\":\"iana\"},\"application/thraud+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tfi\"]},\"application/timestamp-query\":{\"source\":\"iana\"},\"application/timestamp-reply\":{\"source\":\"iana\"},\"application/timestamped-data\":{\"source\":\"iana\",\"extensions\":[\"tsd\"]},\"application/tlsrpt+gzip\":{\"source\":\"iana\"},\"application/tlsrpt+json\":{\"source\":\"iana\",\"compressible\":true},\"application/tnauthlist\":{\"source\":\"iana\"},\"application/token-introspection+jwt\":{\"source\":\"iana\"},\"application/toml\":{\"compressible\":true,\"extensions\":[\"toml\"]},\"application/trickle-ice-sdpfrag\":{\"source\":\"iana\"},\"application/trig\":{\"source\":\"iana\",\"extensions\":[\"trig\"]},\"application/ttml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ttml\"]},\"application/tve-trigger\":{\"source\":\"iana\"},\"application/tzif\":{\"source\":\"iana\"},\"application/tzif-leap\":{\"source\":\"iana\"},\"application/ubjson\":{\"compressible\":false,\"extensions\":[\"ubj\"]},\"application/ulpfec\":{\"source\":\"iana\"},\"application/urc-grpsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/urc-ressheet+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rsheet\"]},\"application/urc-targetdesc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"td\"]},\"application/urc-uisocketdesc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vcard+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vcard+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vemmi\":{\"source\":\"iana\"},\"application/vividence.scriptfile\":{\"source\":\"apache\"},\"application/vnd.1000minds.decision-model+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"1km\"]},\"application/vnd.3gpp-prose+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp-prose-pc3ch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp-v2x-local-service-information\":{\"source\":\"iana\"},\"application/vnd.3gpp.5gnas\":{\"source\":\"iana\"},\"application/vnd.3gpp.access-transfer-events+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.bsf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.gmop+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.gtpc\":{\"source\":\"iana\"},\"application/vnd.3gpp.interworking-data\":{\"source\":\"iana\"},\"application/vnd.3gpp.lpp\":{\"source\":\"iana\"},\"application/vnd.3gpp.mc-signalling-ear\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-payload\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-signalling\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-floor-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-location-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-mbms-usage-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-signed+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-ue-init-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-affiliation-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-location-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-mbms-usage-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-transmission-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mid-call+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.ngap\":{\"source\":\"iana\"},\"application/vnd.3gpp.pfcp\":{\"source\":\"iana\"},\"application/vnd.3gpp.pic-bw-large\":{\"source\":\"iana\",\"extensions\":[\"plb\"]},\"application/vnd.3gpp.pic-bw-small\":{\"source\":\"iana\",\"extensions\":[\"psb\"]},\"application/vnd.3gpp.pic-bw-var\":{\"source\":\"iana\",\"extensions\":[\"pvb\"]},\"application/vnd.3gpp.s1ap\":{\"source\":\"iana\"},\"application/vnd.3gpp.sms\":{\"source\":\"iana\"},\"application/vnd.3gpp.sms+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.srvcc-ext+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.srvcc-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.state-and-event-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.ussd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp2.bcmcsinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp2.sms\":{\"source\":\"iana\"},\"application/vnd.3gpp2.tcap\":{\"source\":\"iana\",\"extensions\":[\"tcap\"]},\"application/vnd.3lightssoftware.imagescal\":{\"source\":\"iana\"},\"application/vnd.3m.post-it-notes\":{\"source\":\"iana\",\"extensions\":[\"pwn\"]},\"application/vnd.accpac.simply.aso\":{\"source\":\"iana\",\"extensions\":[\"aso\"]},\"application/vnd.accpac.simply.imp\":{\"source\":\"iana\",\"extensions\":[\"imp\"]},\"application/vnd.acucobol\":{\"source\":\"iana\",\"extensions\":[\"acu\"]},\"application/vnd.acucorp\":{\"source\":\"iana\",\"extensions\":[\"atc\",\"acutc\"]},\"application/vnd.adobe.air-application-installer-package+zip\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"air\"]},\"application/vnd.adobe.flash.movie\":{\"source\":\"iana\"},\"application/vnd.adobe.formscentral.fcdt\":{\"source\":\"iana\",\"extensions\":[\"fcdt\"]},\"application/vnd.adobe.fxp\":{\"source\":\"iana\",\"extensions\":[\"fxp\",\"fxpl\"]},\"application/vnd.adobe.partial-upload\":{\"source\":\"iana\"},\"application/vnd.adobe.xdp+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdp\"]},\"application/vnd.adobe.xfdf\":{\"source\":\"iana\",\"extensions\":[\"xfdf\"]},\"application/vnd.aether.imp\":{\"source\":\"iana\"},\"application/vnd.afpc.afplinedata\":{\"source\":\"iana\"},\"application/vnd.afpc.afplinedata-pagedef\":{\"source\":\"iana\"},\"application/vnd.afpc.cmoca-cmresource\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-charset\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-codedfont\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-codepage\":{\"source\":\"iana\"},\"application/vnd.afpc.modca\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-cmtable\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-formdef\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-mediummap\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-objectcontainer\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-overlay\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-pagesegment\":{\"source\":\"iana\"},\"application/vnd.age\":{\"source\":\"iana\",\"extensions\":[\"age\"]},\"application/vnd.ah-barcode\":{\"source\":\"iana\"},\"application/vnd.ahead.space\":{\"source\":\"iana\",\"extensions\":[\"ahead\"]},\"application/vnd.airzip.filesecure.azf\":{\"source\":\"iana\",\"extensions\":[\"azf\"]},\"application/vnd.airzip.filesecure.azs\":{\"source\":\"iana\",\"extensions\":[\"azs\"]},\"application/vnd.amadeus+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.amazon.ebook\":{\"source\":\"apache\",\"extensions\":[\"azw\"]},\"application/vnd.amazon.mobi8-ebook\":{\"source\":\"iana\"},\"application/vnd.americandynamics.acc\":{\"source\":\"iana\",\"extensions\":[\"acc\"]},\"application/vnd.amiga.ami\":{\"source\":\"iana\",\"extensions\":[\"ami\"]},\"application/vnd.amundsen.maze+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.android.ota\":{\"source\":\"iana\"},\"application/vnd.android.package-archive\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"apk\"]},\"application/vnd.anki\":{\"source\":\"iana\"},\"application/vnd.anser-web-certificate-issue-initiation\":{\"source\":\"iana\",\"extensions\":[\"cii\"]},\"application/vnd.anser-web-funds-transfer-initiation\":{\"source\":\"apache\",\"extensions\":[\"fti\"]},\"application/vnd.antix.game-component\":{\"source\":\"iana\",\"extensions\":[\"atx\"]},\"application/vnd.apache.arrow.file\":{\"source\":\"iana\"},\"application/vnd.apache.arrow.stream\":{\"source\":\"iana\"},\"application/vnd.apache.thrift.binary\":{\"source\":\"iana\"},\"application/vnd.apache.thrift.compact\":{\"source\":\"iana\"},\"application/vnd.apache.thrift.json\":{\"source\":\"iana\"},\"application/vnd.api+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.aplextor.warrp+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.apothekende.reservation+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.apple.installer+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mpkg\"]},\"application/vnd.apple.keynote\":{\"source\":\"iana\",\"extensions\":[\"key\"]},\"application/vnd.apple.mpegurl\":{\"source\":\"iana\",\"extensions\":[\"m3u8\"]},\"application/vnd.apple.numbers\":{\"source\":\"iana\",\"extensions\":[\"numbers\"]},\"application/vnd.apple.pages\":{\"source\":\"iana\",\"extensions\":[\"pages\"]},\"application/vnd.apple.pkpass\":{\"compressible\":false,\"extensions\":[\"pkpass\"]},\"application/vnd.arastra.swi\":{\"source\":\"iana\"},\"application/vnd.aristanetworks.swi\":{\"source\":\"iana\",\"extensions\":[\"swi\"]},\"application/vnd.artisan+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.artsquare\":{\"source\":\"iana\"},\"application/vnd.astraea-software.iota\":{\"source\":\"iana\",\"extensions\":[\"iota\"]},\"application/vnd.audiograph\":{\"source\":\"iana\",\"extensions\":[\"aep\"]},\"application/vnd.autopackage\":{\"source\":\"iana\"},\"application/vnd.avalon+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.avistar+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.balsamiq.bmml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"bmml\"]},\"application/vnd.balsamiq.bmpr\":{\"source\":\"iana\"},\"application/vnd.banana-accounting\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.error\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.msg\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.msg+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.bekitzur-stech+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.bint.med-content\":{\"source\":\"iana\"},\"application/vnd.biopax.rdf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.blink-idb-value-wrapper\":{\"source\":\"iana\"},\"application/vnd.blueice.multipass\":{\"source\":\"iana\",\"extensions\":[\"mpm\"]},\"application/vnd.bluetooth.ep.oob\":{\"source\":\"iana\"},\"application/vnd.bluetooth.le.oob\":{\"source\":\"iana\"},\"application/vnd.bmi\":{\"source\":\"iana\",\"extensions\":[\"bmi\"]},\"application/vnd.bpf\":{\"source\":\"iana\"},\"application/vnd.bpf3\":{\"source\":\"iana\"},\"application/vnd.businessobjects\":{\"source\":\"iana\",\"extensions\":[\"rep\"]},\"application/vnd.byu.uapi+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cab-jscript\":{\"source\":\"iana\"},\"application/vnd.canon-cpdl\":{\"source\":\"iana\"},\"application/vnd.canon-lips\":{\"source\":\"iana\"},\"application/vnd.capasystems-pg+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cendio.thinlinc.clientconf\":{\"source\":\"iana\"},\"application/vnd.century-systems.tcp_stream\":{\"source\":\"iana\"},\"application/vnd.chemdraw+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"cdxml\"]},\"application/vnd.chess-pgn\":{\"source\":\"iana\"},\"application/vnd.chipnuts.karaoke-mmd\":{\"source\":\"iana\",\"extensions\":[\"mmd\"]},\"application/vnd.ciedi\":{\"source\":\"iana\"},\"application/vnd.cinderella\":{\"source\":\"iana\",\"extensions\":[\"cdy\"]},\"application/vnd.cirpack.isdn-ext\":{\"source\":\"iana\"},\"application/vnd.citationstyles.style+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"csl\"]},\"application/vnd.claymore\":{\"source\":\"iana\",\"extensions\":[\"cla\"]},\"application/vnd.cloanto.rp9\":{\"source\":\"iana\",\"extensions\":[\"rp9\"]},\"application/vnd.clonk.c4group\":{\"source\":\"iana\",\"extensions\":[\"c4g\",\"c4d\",\"c4f\",\"c4p\",\"c4u\"]},\"application/vnd.cluetrust.cartomobile-config\":{\"source\":\"iana\",\"extensions\":[\"c11amc\"]},\"application/vnd.cluetrust.cartomobile-config-pkg\":{\"source\":\"iana\",\"extensions\":[\"c11amz\"]},\"application/vnd.coffeescript\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.document\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.document-template\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.presentation\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.presentation-template\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.spreadsheet\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.spreadsheet-template\":{\"source\":\"iana\"},\"application/vnd.collection+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.collection.doc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.collection.next+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.comicbook+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.comicbook-rar\":{\"source\":\"iana\"},\"application/vnd.commerce-battelle\":{\"source\":\"iana\"},\"application/vnd.commonspace\":{\"source\":\"iana\",\"extensions\":[\"csp\"]},\"application/vnd.contact.cmsg\":{\"source\":\"iana\",\"extensions\":[\"cdbcmsg\"]},\"application/vnd.coreos.ignition+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cosmocaller\":{\"source\":\"iana\",\"extensions\":[\"cmc\"]},\"application/vnd.crick.clicker\":{\"source\":\"iana\",\"extensions\":[\"clkx\"]},\"application/vnd.crick.clicker.keyboard\":{\"source\":\"iana\",\"extensions\":[\"clkk\"]},\"application/vnd.crick.clicker.palette\":{\"source\":\"iana\",\"extensions\":[\"clkp\"]},\"application/vnd.crick.clicker.template\":{\"source\":\"iana\",\"extensions\":[\"clkt\"]},\"application/vnd.crick.clicker.wordbank\":{\"source\":\"iana\",\"extensions\":[\"clkw\"]},\"application/vnd.criticaltools.wbs+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wbs\"]},\"application/vnd.cryptii.pipe+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.crypto-shade-file\":{\"source\":\"iana\"},\"application/vnd.cryptomator.encrypted\":{\"source\":\"iana\"},\"application/vnd.cryptomator.vault\":{\"source\":\"iana\"},\"application/vnd.ctc-posml\":{\"source\":\"iana\",\"extensions\":[\"pml\"]},\"application/vnd.ctct.ws+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cups-pdf\":{\"source\":\"iana\"},\"application/vnd.cups-postscript\":{\"source\":\"iana\"},\"application/vnd.cups-ppd\":{\"source\":\"iana\",\"extensions\":[\"ppd\"]},\"application/vnd.cups-raster\":{\"source\":\"iana\"},\"application/vnd.cups-raw\":{\"source\":\"iana\"},\"application/vnd.curl\":{\"source\":\"iana\"},\"application/vnd.curl.car\":{\"source\":\"apache\",\"extensions\":[\"car\"]},\"application/vnd.curl.pcurl\":{\"source\":\"apache\",\"extensions\":[\"pcurl\"]},\"application/vnd.cyan.dean.root+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cybank\":{\"source\":\"iana\"},\"application/vnd.cyclonedx+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cyclonedx+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.d2l.coursepackage1p0+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.d3m-dataset\":{\"source\":\"iana\"},\"application/vnd.d3m-problem\":{\"source\":\"iana\"},\"application/vnd.dart\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dart\"]},\"application/vnd.data-vision.rdz\":{\"source\":\"iana\",\"extensions\":[\"rdz\"]},\"application/vnd.datapackage+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dataresource+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dbf\":{\"source\":\"iana\",\"extensions\":[\"dbf\"]},\"application/vnd.debian.binary-package\":{\"source\":\"iana\"},\"application/vnd.dece.data\":{\"source\":\"iana\",\"extensions\":[\"uvf\",\"uvvf\",\"uvd\",\"uvvd\"]},\"application/vnd.dece.ttml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uvt\",\"uvvt\"]},\"application/vnd.dece.unspecified\":{\"source\":\"iana\",\"extensions\":[\"uvx\",\"uvvx\"]},\"application/vnd.dece.zip\":{\"source\":\"iana\",\"extensions\":[\"uvz\",\"uvvz\"]},\"application/vnd.denovo.fcselayout-link\":{\"source\":\"iana\",\"extensions\":[\"fe_launch\"]},\"application/vnd.desmume.movie\":{\"source\":\"iana\"},\"application/vnd.dir-bi.plate-dl-nosuffix\":{\"source\":\"iana\"},\"application/vnd.dm.delegation+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dna\":{\"source\":\"iana\",\"extensions\":[\"dna\"]},\"application/vnd.document+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dolby.mlp\":{\"source\":\"apache\",\"extensions\":[\"mlp\"]},\"application/vnd.dolby.mobile.1\":{\"source\":\"iana\"},\"application/vnd.dolby.mobile.2\":{\"source\":\"iana\"},\"application/vnd.doremir.scorecloud-binary-document\":{\"source\":\"iana\"},\"application/vnd.dpgraph\":{\"source\":\"iana\",\"extensions\":[\"dpg\"]},\"application/vnd.dreamfactory\":{\"source\":\"iana\",\"extensions\":[\"dfac\"]},\"application/vnd.drive+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ds-keypoint\":{\"source\":\"apache\",\"extensions\":[\"kpxx\"]},\"application/vnd.dtg.local\":{\"source\":\"iana\"},\"application/vnd.dtg.local.flash\":{\"source\":\"iana\"},\"application/vnd.dtg.local.html\":{\"source\":\"iana\"},\"application/vnd.dvb.ait\":{\"source\":\"iana\",\"extensions\":[\"ait\"]},\"application/vnd.dvb.dvbisl+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.dvbj\":{\"source\":\"iana\"},\"application/vnd.dvb.esgcontainer\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcdftnotifaccess\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgaccess\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgaccess2\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgpdd\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcroaming\":{\"source\":\"iana\"},\"application/vnd.dvb.iptv.alfec-base\":{\"source\":\"iana\"},\"application/vnd.dvb.iptv.alfec-enhancement\":{\"source\":\"iana\"},\"application/vnd.dvb.notif-aggregate-root+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-container+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-generic+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-msglist+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-registration-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-registration-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-init+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.pfr\":{\"source\":\"iana\"},\"application/vnd.dvb.service\":{\"source\":\"iana\",\"extensions\":[\"svc\"]},\"application/vnd.dxr\":{\"source\":\"iana\"},\"application/vnd.dynageo\":{\"source\":\"iana\",\"extensions\":[\"geo\"]},\"application/vnd.dzr\":{\"source\":\"iana\"},\"application/vnd.easykaraoke.cdgdownload\":{\"source\":\"iana\"},\"application/vnd.ecdis-update\":{\"source\":\"iana\"},\"application/vnd.ecip.rlp\":{\"source\":\"iana\"},\"application/vnd.eclipse.ditto+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ecowin.chart\":{\"source\":\"iana\",\"extensions\":[\"mag\"]},\"application/vnd.ecowin.filerequest\":{\"source\":\"iana\"},\"application/vnd.ecowin.fileupdate\":{\"source\":\"iana\"},\"application/vnd.ecowin.series\":{\"source\":\"iana\"},\"application/vnd.ecowin.seriesrequest\":{\"source\":\"iana\"},\"application/vnd.ecowin.seriesupdate\":{\"source\":\"iana\"},\"application/vnd.efi.img\":{\"source\":\"iana\"},\"application/vnd.efi.iso\":{\"source\":\"iana\"},\"application/vnd.emclient.accessrequest+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.enliven\":{\"source\":\"iana\",\"extensions\":[\"nml\"]},\"application/vnd.enphase.envoy\":{\"source\":\"iana\"},\"application/vnd.eprints.data+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.epson.esf\":{\"source\":\"iana\",\"extensions\":[\"esf\"]},\"application/vnd.epson.msf\":{\"source\":\"iana\",\"extensions\":[\"msf\"]},\"application/vnd.epson.quickanime\":{\"source\":\"iana\",\"extensions\":[\"qam\"]},\"application/vnd.epson.salt\":{\"source\":\"iana\",\"extensions\":[\"slt\"]},\"application/vnd.epson.ssf\":{\"source\":\"iana\",\"extensions\":[\"ssf\"]},\"application/vnd.ericsson.quickcall\":{\"source\":\"iana\"},\"application/vnd.espass-espass+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.eszigno3+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"es3\",\"et3\"]},\"application/vnd.etsi.aoc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.asic-e+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.etsi.asic-s+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.etsi.cug+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvcommand+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvdiscovery+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-bc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-cod+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-npvr+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvservice+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsync+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvueprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.mcid+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.mheg5\":{\"source\":\"iana\"},\"application/vnd.etsi.overload-control-policy-dataset+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.pstn+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.sci+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.simservs+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.timestamp-token\":{\"source\":\"iana\"},\"application/vnd.etsi.tsl+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.tsl.der\":{\"source\":\"iana\"},\"application/vnd.eu.kasparian.car+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.eudora.data\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.profile\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.settings\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.theme\":{\"source\":\"iana\"},\"application/vnd.exstream-empower+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.exstream-package\":{\"source\":\"iana\"},\"application/vnd.ezpix-album\":{\"source\":\"iana\",\"extensions\":[\"ez2\"]},\"application/vnd.ezpix-package\":{\"source\":\"iana\",\"extensions\":[\"ez3\"]},\"application/vnd.f-secure.mobile\":{\"source\":\"iana\"},\"application/vnd.familysearch.gedcom+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.fastcopy-disk-image\":{\"source\":\"iana\"},\"application/vnd.fdf\":{\"source\":\"iana\",\"extensions\":[\"fdf\"]},\"application/vnd.fdsn.mseed\":{\"source\":\"iana\",\"extensions\":[\"mseed\"]},\"application/vnd.fdsn.seed\":{\"source\":\"iana\",\"extensions\":[\"seed\",\"dataless\"]},\"application/vnd.ffsns\":{\"source\":\"iana\"},\"application/vnd.ficlab.flb+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.filmit.zfc\":{\"source\":\"iana\"},\"application/vnd.fints\":{\"source\":\"iana\"},\"application/vnd.firemonkeys.cloudcell\":{\"source\":\"iana\"},\"application/vnd.flographit\":{\"source\":\"iana\",\"extensions\":[\"gph\"]},\"application/vnd.fluxtime.clip\":{\"source\":\"iana\",\"extensions\":[\"ftc\"]},\"application/vnd.font-fontforge-sfd\":{\"source\":\"iana\"},\"application/vnd.framemaker\":{\"source\":\"iana\",\"extensions\":[\"fm\",\"frame\",\"maker\",\"book\"]},\"application/vnd.frogans.fnc\":{\"source\":\"iana\",\"extensions\":[\"fnc\"]},\"application/vnd.frogans.ltf\":{\"source\":\"iana\",\"extensions\":[\"ltf\"]},\"application/vnd.fsc.weblaunch\":{\"source\":\"iana\",\"extensions\":[\"fsc\"]},\"application/vnd.fujifilm.fb.docuworks\":{\"source\":\"iana\"},\"application/vnd.fujifilm.fb.docuworks.binder\":{\"source\":\"iana\"},\"application/vnd.fujifilm.fb.docuworks.container\":{\"source\":\"iana\"},\"application/vnd.fujifilm.fb.jfi+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.fujitsu.oasys\":{\"source\":\"iana\",\"extensions\":[\"oas\"]},\"application/vnd.fujitsu.oasys2\":{\"source\":\"iana\",\"extensions\":[\"oa2\"]},\"application/vnd.fujitsu.oasys3\":{\"source\":\"iana\",\"extensions\":[\"oa3\"]},\"application/vnd.fujitsu.oasysgp\":{\"source\":\"iana\",\"extensions\":[\"fg5\"]},\"application/vnd.fujitsu.oasysprs\":{\"source\":\"iana\",\"extensions\":[\"bh2\"]},\"application/vnd.fujixerox.art-ex\":{\"source\":\"iana\"},\"application/vnd.fujixerox.art4\":{\"source\":\"iana\"},\"application/vnd.fujixerox.ddd\":{\"source\":\"iana\",\"extensions\":[\"ddd\"]},\"application/vnd.fujixerox.docuworks\":{\"source\":\"iana\",\"extensions\":[\"xdw\"]},\"application/vnd.fujixerox.docuworks.binder\":{\"source\":\"iana\",\"extensions\":[\"xbd\"]},\"application/vnd.fujixerox.docuworks.container\":{\"source\":\"iana\"},\"application/vnd.fujixerox.hbpl\":{\"source\":\"iana\"},\"application/vnd.fut-misnet\":{\"source\":\"iana\"},\"application/vnd.futoin+cbor\":{\"source\":\"iana\"},\"application/vnd.futoin+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.fuzzysheet\":{\"source\":\"iana\",\"extensions\":[\"fzs\"]},\"application/vnd.genomatix.tuxedo\":{\"source\":\"iana\",\"extensions\":[\"txd\"]},\"application/vnd.gentics.grd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geo+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geocube+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geogebra.file\":{\"source\":\"iana\",\"extensions\":[\"ggb\"]},\"application/vnd.geogebra.slides\":{\"source\":\"iana\"},\"application/vnd.geogebra.tool\":{\"source\":\"iana\",\"extensions\":[\"ggt\"]},\"application/vnd.geometry-explorer\":{\"source\":\"iana\",\"extensions\":[\"gex\",\"gre\"]},\"application/vnd.geonext\":{\"source\":\"iana\",\"extensions\":[\"gxt\"]},\"application/vnd.geoplan\":{\"source\":\"iana\",\"extensions\":[\"g2w\"]},\"application/vnd.geospace\":{\"source\":\"iana\",\"extensions\":[\"g3w\"]},\"application/vnd.gerber\":{\"source\":\"iana\"},\"application/vnd.globalplatform.card-content-mgt\":{\"source\":\"iana\"},\"application/vnd.globalplatform.card-content-mgt-response\":{\"source\":\"iana\"},\"application/vnd.gmx\":{\"source\":\"iana\",\"extensions\":[\"gmx\"]},\"application/vnd.google-apps.document\":{\"compressible\":false,\"extensions\":[\"gdoc\"]},\"application/vnd.google-apps.presentation\":{\"compressible\":false,\"extensions\":[\"gslides\"]},\"application/vnd.google-apps.spreadsheet\":{\"compressible\":false,\"extensions\":[\"gsheet\"]},\"application/vnd.google-earth.kml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"kml\"]},\"application/vnd.google-earth.kmz\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"kmz\"]},\"application/vnd.gov.sk.e-form+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.gov.sk.e-form+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.gov.sk.xmldatacontainer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.grafeq\":{\"source\":\"iana\",\"extensions\":[\"gqf\",\"gqs\"]},\"application/vnd.gridmp\":{\"source\":\"iana\"},\"application/vnd.groove-account\":{\"source\":\"iana\",\"extensions\":[\"gac\"]},\"application/vnd.groove-help\":{\"source\":\"iana\",\"extensions\":[\"ghf\"]},\"application/vnd.groove-identity-message\":{\"source\":\"iana\",\"extensions\":[\"gim\"]},\"application/vnd.groove-injector\":{\"source\":\"iana\",\"extensions\":[\"grv\"]},\"application/vnd.groove-tool-message\":{\"source\":\"iana\",\"extensions\":[\"gtm\"]},\"application/vnd.groove-tool-template\":{\"source\":\"iana\",\"extensions\":[\"tpl\"]},\"application/vnd.groove-vcard\":{\"source\":\"iana\",\"extensions\":[\"vcg\"]},\"application/vnd.hal+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hal+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"hal\"]},\"application/vnd.handheld-entertainment+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"zmm\"]},\"application/vnd.hbci\":{\"source\":\"iana\",\"extensions\":[\"hbci\"]},\"application/vnd.hc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hcl-bireports\":{\"source\":\"iana\"},\"application/vnd.hdt\":{\"source\":\"iana\"},\"application/vnd.heroku+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hhe.lesson-player\":{\"source\":\"iana\",\"extensions\":[\"les\"]},\"application/vnd.hl7cda+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.hl7v2+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.hp-hpgl\":{\"source\":\"iana\",\"extensions\":[\"hpgl\"]},\"application/vnd.hp-hpid\":{\"source\":\"iana\",\"extensions\":[\"hpid\"]},\"application/vnd.hp-hps\":{\"source\":\"iana\",\"extensions\":[\"hps\"]},\"application/vnd.hp-jlyt\":{\"source\":\"iana\",\"extensions\":[\"jlt\"]},\"application/vnd.hp-pcl\":{\"source\":\"iana\",\"extensions\":[\"pcl\"]},\"application/vnd.hp-pclxl\":{\"source\":\"iana\",\"extensions\":[\"pclxl\"]},\"application/vnd.httphone\":{\"source\":\"iana\"},\"application/vnd.hydrostatix.sof-data\":{\"source\":\"iana\",\"extensions\":[\"sfd-hdstx\"]},\"application/vnd.hyper+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hyper-item+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hyperdrive+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hzn-3d-crossword\":{\"source\":\"iana\"},\"application/vnd.ibm.afplinedata\":{\"source\":\"iana\"},\"application/vnd.ibm.electronic-media\":{\"source\":\"iana\"},\"application/vnd.ibm.minipay\":{\"source\":\"iana\",\"extensions\":[\"mpy\"]},\"application/vnd.ibm.modcap\":{\"source\":\"iana\",\"extensions\":[\"afp\",\"listafp\",\"list3820\"]},\"application/vnd.ibm.rights-management\":{\"source\":\"iana\",\"extensions\":[\"irm\"]},\"application/vnd.ibm.secure-container\":{\"source\":\"iana\",\"extensions\":[\"sc\"]},\"application/vnd.iccprofile\":{\"source\":\"iana\",\"extensions\":[\"icc\",\"icm\"]},\"application/vnd.ieee.1905\":{\"source\":\"iana\"},\"application/vnd.igloader\":{\"source\":\"iana\",\"extensions\":[\"igl\"]},\"application/vnd.imagemeter.folder+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.imagemeter.image+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.immervision-ivp\":{\"source\":\"iana\",\"extensions\":[\"ivp\"]},\"application/vnd.immervision-ivu\":{\"source\":\"iana\",\"extensions\":[\"ivu\"]},\"application/vnd.ims.imsccv1p1\":{\"source\":\"iana\"},\"application/vnd.ims.imsccv1p2\":{\"source\":\"iana\"},\"application/vnd.ims.imsccv1p3\":{\"source\":\"iana\"},\"application/vnd.ims.lis.v2.result+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolconsumerprofile+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolproxy+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolproxy.id+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolsettings+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolsettings.simple+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.informedcontrol.rms+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.informix-visionary\":{\"source\":\"iana\"},\"application/vnd.infotech.project\":{\"source\":\"iana\"},\"application/vnd.infotech.project+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.innopath.wamp.notification\":{\"source\":\"iana\"},\"application/vnd.insors.igm\":{\"source\":\"iana\",\"extensions\":[\"igm\"]},\"application/vnd.intercon.formnet\":{\"source\":\"iana\",\"extensions\":[\"xpw\",\"xpx\"]},\"application/vnd.intergeo\":{\"source\":\"iana\",\"extensions\":[\"i2g\"]},\"application/vnd.intertrust.digibox\":{\"source\":\"iana\"},\"application/vnd.intertrust.nncp\":{\"source\":\"iana\"},\"application/vnd.intu.qbo\":{\"source\":\"iana\",\"extensions\":[\"qbo\"]},\"application/vnd.intu.qfx\":{\"source\":\"iana\",\"extensions\":[\"qfx\"]},\"application/vnd.iptc.g2.catalogitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.conceptitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.knowledgeitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.newsitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.newsmessage+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.packageitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.planningitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ipunplugged.rcprofile\":{\"source\":\"iana\",\"extensions\":[\"rcprofile\"]},\"application/vnd.irepository.package+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"irp\"]},\"application/vnd.is-xpr\":{\"source\":\"iana\",\"extensions\":[\"xpr\"]},\"application/vnd.isac.fcs\":{\"source\":\"iana\",\"extensions\":[\"fcs\"]},\"application/vnd.iso11783-10+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.jam\":{\"source\":\"iana\",\"extensions\":[\"jam\"]},\"application/vnd.japannet-directory-service\":{\"source\":\"iana\"},\"application/vnd.japannet-jpnstore-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-payment-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-registration\":{\"source\":\"iana\"},\"application/vnd.japannet-registration-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-setstore-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-verification\":{\"source\":\"iana\"},\"application/vnd.japannet-verification-wakeup\":{\"source\":\"iana\"},\"application/vnd.jcp.javame.midlet-rms\":{\"source\":\"iana\",\"extensions\":[\"rms\"]},\"application/vnd.jisp\":{\"source\":\"iana\",\"extensions\":[\"jisp\"]},\"application/vnd.joost.joda-archive\":{\"source\":\"iana\",\"extensions\":[\"joda\"]},\"application/vnd.jsk.isdn-ngn\":{\"source\":\"iana\"},\"application/vnd.kahootz\":{\"source\":\"iana\",\"extensions\":[\"ktz\",\"ktr\"]},\"application/vnd.kde.karbon\":{\"source\":\"iana\",\"extensions\":[\"karbon\"]},\"application/vnd.kde.kchart\":{\"source\":\"iana\",\"extensions\":[\"chrt\"]},\"application/vnd.kde.kformula\":{\"source\":\"iana\",\"extensions\":[\"kfo\"]},\"application/vnd.kde.kivio\":{\"source\":\"iana\",\"extensions\":[\"flw\"]},\"application/vnd.kde.kontour\":{\"source\":\"iana\",\"extensions\":[\"kon\"]},\"application/vnd.kde.kpresenter\":{\"source\":\"iana\",\"extensions\":[\"kpr\",\"kpt\"]},\"application/vnd.kde.kspread\":{\"source\":\"iana\",\"extensions\":[\"ksp\"]},\"application/vnd.kde.kword\":{\"source\":\"iana\",\"extensions\":[\"kwd\",\"kwt\"]},\"application/vnd.kenameaapp\":{\"source\":\"iana\",\"extensions\":[\"htke\"]},\"application/vnd.kidspiration\":{\"source\":\"iana\",\"extensions\":[\"kia\"]},\"application/vnd.kinar\":{\"source\":\"iana\",\"extensions\":[\"kne\",\"knp\"]},\"application/vnd.koan\":{\"source\":\"iana\",\"extensions\":[\"skp\",\"skd\",\"skt\",\"skm\"]},\"application/vnd.kodak-descriptor\":{\"source\":\"iana\",\"extensions\":[\"sse\"]},\"application/vnd.las\":{\"source\":\"iana\"},\"application/vnd.las.las+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.las.las+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lasxml\"]},\"application/vnd.laszip\":{\"source\":\"iana\"},\"application/vnd.leap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.liberty-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.llamagraphics.life-balance.desktop\":{\"source\":\"iana\",\"extensions\":[\"lbd\"]},\"application/vnd.llamagraphics.life-balance.exchange+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lbe\"]},\"application/vnd.logipipe.circuit+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.loom\":{\"source\":\"iana\"},\"application/vnd.lotus-1-2-3\":{\"source\":\"iana\",\"extensions\":[\"123\"]},\"application/vnd.lotus-approach\":{\"source\":\"iana\",\"extensions\":[\"apr\"]},\"application/vnd.lotus-freelance\":{\"source\":\"iana\",\"extensions\":[\"pre\"]},\"application/vnd.lotus-notes\":{\"source\":\"iana\",\"extensions\":[\"nsf\"]},\"application/vnd.lotus-organizer\":{\"source\":\"iana\",\"extensions\":[\"org\"]},\"application/vnd.lotus-screencam\":{\"source\":\"iana\",\"extensions\":[\"scm\"]},\"application/vnd.lotus-wordpro\":{\"source\":\"iana\",\"extensions\":[\"lwp\"]},\"application/vnd.macports.portpkg\":{\"source\":\"iana\",\"extensions\":[\"portpkg\"]},\"application/vnd.mapbox-vector-tile\":{\"source\":\"iana\",\"extensions\":[\"mvt\"]},\"application/vnd.marlin.drm.actiontoken+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.conftoken+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.license+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.mdcf\":{\"source\":\"iana\"},\"application/vnd.mason+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.maxar.archive.3tz+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.maxmind.maxmind-db\":{\"source\":\"iana\"},\"application/vnd.mcd\":{\"source\":\"iana\",\"extensions\":[\"mcd\"]},\"application/vnd.medcalcdata\":{\"source\":\"iana\",\"extensions\":[\"mc1\"]},\"application/vnd.mediastation.cdkey\":{\"source\":\"iana\",\"extensions\":[\"cdkey\"]},\"application/vnd.meridian-slingshot\":{\"source\":\"iana\"},\"application/vnd.mfer\":{\"source\":\"iana\",\"extensions\":[\"mwf\"]},\"application/vnd.mfmp\":{\"source\":\"iana\",\"extensions\":[\"mfm\"]},\"application/vnd.micro+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.micrografx.flo\":{\"source\":\"iana\",\"extensions\":[\"flo\"]},\"application/vnd.micrografx.igx\":{\"source\":\"iana\",\"extensions\":[\"igx\"]},\"application/vnd.microsoft.portable-executable\":{\"source\":\"iana\"},\"application/vnd.microsoft.windows.thumbnail-cache\":{\"source\":\"iana\"},\"application/vnd.miele+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.mif\":{\"source\":\"iana\",\"extensions\":[\"mif\"]},\"application/vnd.minisoft-hp3000-save\":{\"source\":\"iana\"},\"application/vnd.mitsubishi.misty-guard.trustweb\":{\"source\":\"iana\"},\"application/vnd.mobius.daf\":{\"source\":\"iana\",\"extensions\":[\"daf\"]},\"application/vnd.mobius.dis\":{\"source\":\"iana\",\"extensions\":[\"dis\"]},\"application/vnd.mobius.mbk\":{\"source\":\"iana\",\"extensions\":[\"mbk\"]},\"application/vnd.mobius.mqy\":{\"source\":\"iana\",\"extensions\":[\"mqy\"]},\"application/vnd.mobius.msl\":{\"source\":\"iana\",\"extensions\":[\"msl\"]},\"application/vnd.mobius.plc\":{\"source\":\"iana\",\"extensions\":[\"plc\"]},\"application/vnd.mobius.txf\":{\"source\":\"iana\",\"extensions\":[\"txf\"]},\"application/vnd.mophun.application\":{\"source\":\"iana\",\"extensions\":[\"mpn\"]},\"application/vnd.mophun.certificate\":{\"source\":\"iana\",\"extensions\":[\"mpc\"]},\"application/vnd.motorola.flexsuite\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.adsi\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.fis\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.gotap\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.kmr\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.ttc\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.wem\":{\"source\":\"iana\"},\"application/vnd.motorola.iprm\":{\"source\":\"iana\"},\"application/vnd.mozilla.xul+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xul\"]},\"application/vnd.ms-3mfdocument\":{\"source\":\"iana\"},\"application/vnd.ms-artgalry\":{\"source\":\"iana\",\"extensions\":[\"cil\"]},\"application/vnd.ms-asf\":{\"source\":\"iana\"},\"application/vnd.ms-cab-compressed\":{\"source\":\"iana\",\"extensions\":[\"cab\"]},\"application/vnd.ms-color.iccprofile\":{\"source\":\"apache\"},\"application/vnd.ms-excel\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xls\",\"xlm\",\"xla\",\"xlc\",\"xlt\",\"xlw\"]},\"application/vnd.ms-excel.addin.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlam\"]},\"application/vnd.ms-excel.sheet.binary.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlsb\"]},\"application/vnd.ms-excel.sheet.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlsm\"]},\"application/vnd.ms-excel.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xltm\"]},\"application/vnd.ms-fontobject\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"eot\"]},\"application/vnd.ms-htmlhelp\":{\"source\":\"iana\",\"extensions\":[\"chm\"]},\"application/vnd.ms-ims\":{\"source\":\"iana\",\"extensions\":[\"ims\"]},\"application/vnd.ms-lrm\":{\"source\":\"iana\",\"extensions\":[\"lrm\"]},\"application/vnd.ms-office.activex+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-officetheme\":{\"source\":\"iana\",\"extensions\":[\"thmx\"]},\"application/vnd.ms-opentype\":{\"source\":\"apache\",\"compressible\":true},\"application/vnd.ms-outlook\":{\"compressible\":false,\"extensions\":[\"msg\"]},\"application/vnd.ms-package.obfuscated-opentype\":{\"source\":\"apache\"},\"application/vnd.ms-pki.seccat\":{\"source\":\"apache\",\"extensions\":[\"cat\"]},\"application/vnd.ms-pki.stl\":{\"source\":\"apache\",\"extensions\":[\"stl\"]},\"application/vnd.ms-playready.initiator+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-powerpoint\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ppt\",\"pps\",\"pot\"]},\"application/vnd.ms-powerpoint.addin.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"ppam\"]},\"application/vnd.ms-powerpoint.presentation.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"pptm\"]},\"application/vnd.ms-powerpoint.slide.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"sldm\"]},\"application/vnd.ms-powerpoint.slideshow.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"ppsm\"]},\"application/vnd.ms-powerpoint.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"potm\"]},\"application/vnd.ms-printdevicecapabilities+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-printing.printticket+xml\":{\"source\":\"apache\",\"compressible\":true},\"application/vnd.ms-printschematicket+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-project\":{\"source\":\"iana\",\"extensions\":[\"mpp\",\"mpt\"]},\"application/vnd.ms-tnef\":{\"source\":\"iana\"},\"application/vnd.ms-windows.devicepairing\":{\"source\":\"iana\"},\"application/vnd.ms-windows.nwprinting.oob\":{\"source\":\"iana\"},\"application/vnd.ms-windows.printerpairing\":{\"source\":\"iana\"},\"application/vnd.ms-windows.wsd.oob\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.lic-chlg-req\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.lic-resp\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.meter-chlg-req\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.meter-resp\":{\"source\":\"iana\"},\"application/vnd.ms-word.document.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"docm\"]},\"application/vnd.ms-word.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"dotm\"]},\"application/vnd.ms-works\":{\"source\":\"iana\",\"extensions\":[\"wps\",\"wks\",\"wcm\",\"wdb\"]},\"application/vnd.ms-wpl\":{\"source\":\"iana\",\"extensions\":[\"wpl\"]},\"application/vnd.ms-xpsdocument\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xps\"]},\"application/vnd.msa-disk-image\":{\"source\":\"iana\"},\"application/vnd.mseq\":{\"source\":\"iana\",\"extensions\":[\"mseq\"]},\"application/vnd.msign\":{\"source\":\"iana\"},\"application/vnd.multiad.creator\":{\"source\":\"iana\"},\"application/vnd.multiad.creator.cif\":{\"source\":\"iana\"},\"application/vnd.music-niff\":{\"source\":\"iana\"},\"application/vnd.musician\":{\"source\":\"iana\",\"extensions\":[\"mus\"]},\"application/vnd.muvee.style\":{\"source\":\"iana\",\"extensions\":[\"msty\"]},\"application/vnd.mynfc\":{\"source\":\"iana\",\"extensions\":[\"taglet\"]},\"application/vnd.nacamar.ybrid+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ncd.control\":{\"source\":\"iana\"},\"application/vnd.ncd.reference\":{\"source\":\"iana\"},\"application/vnd.nearst.inv+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nebumind.line\":{\"source\":\"iana\"},\"application/vnd.nervana\":{\"source\":\"iana\"},\"application/vnd.netfpx\":{\"source\":\"iana\"},\"application/vnd.neurolanguage.nlu\":{\"source\":\"iana\",\"extensions\":[\"nlu\"]},\"application/vnd.nimn\":{\"source\":\"iana\"},\"application/vnd.nintendo.nitro.rom\":{\"source\":\"iana\"},\"application/vnd.nintendo.snes.rom\":{\"source\":\"iana\"},\"application/vnd.nitf\":{\"source\":\"iana\",\"extensions\":[\"ntf\",\"nitf\"]},\"application/vnd.noblenet-directory\":{\"source\":\"iana\",\"extensions\":[\"nnd\"]},\"application/vnd.noblenet-sealer\":{\"source\":\"iana\",\"extensions\":[\"nns\"]},\"application/vnd.noblenet-web\":{\"source\":\"iana\",\"extensions\":[\"nnw\"]},\"application/vnd.nokia.catalogs\":{\"source\":\"iana\"},\"application/vnd.nokia.conml+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.conml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.iptv.config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.isds-radio-presets\":{\"source\":\"iana\"},\"application/vnd.nokia.landmark+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.landmark+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.landmarkcollection+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.n-gage.ac+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ac\"]},\"application/vnd.nokia.n-gage.data\":{\"source\":\"iana\",\"extensions\":[\"ngdat\"]},\"application/vnd.nokia.n-gage.symbian.install\":{\"source\":\"iana\",\"extensions\":[\"n-gage\"]},\"application/vnd.nokia.ncd\":{\"source\":\"iana\"},\"application/vnd.nokia.pcd+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.pcd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.radio-preset\":{\"source\":\"iana\",\"extensions\":[\"rpst\"]},\"application/vnd.nokia.radio-presets\":{\"source\":\"iana\",\"extensions\":[\"rpss\"]},\"application/vnd.novadigm.edm\":{\"source\":\"iana\",\"extensions\":[\"edm\"]},\"application/vnd.novadigm.edx\":{\"source\":\"iana\",\"extensions\":[\"edx\"]},\"application/vnd.novadigm.ext\":{\"source\":\"iana\",\"extensions\":[\"ext\"]},\"application/vnd.ntt-local.content-share\":{\"source\":\"iana\"},\"application/vnd.ntt-local.file-transfer\":{\"source\":\"iana\"},\"application/vnd.ntt-local.ogw_remote-access\":{\"source\":\"iana\"},\"application/vnd.ntt-local.sip-ta_remote\":{\"source\":\"iana\"},\"application/vnd.ntt-local.sip-ta_tcp_stream\":{\"source\":\"iana\"},\"application/vnd.oasis.opendocument.chart\":{\"source\":\"iana\",\"extensions\":[\"odc\"]},\"application/vnd.oasis.opendocument.chart-template\":{\"source\":\"iana\",\"extensions\":[\"otc\"]},\"application/vnd.oasis.opendocument.database\":{\"source\":\"iana\",\"extensions\":[\"odb\"]},\"application/vnd.oasis.opendocument.formula\":{\"source\":\"iana\",\"extensions\":[\"odf\"]},\"application/vnd.oasis.opendocument.formula-template\":{\"source\":\"iana\",\"extensions\":[\"odft\"]},\"application/vnd.oasis.opendocument.graphics\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odg\"]},\"application/vnd.oasis.opendocument.graphics-template\":{\"source\":\"iana\",\"extensions\":[\"otg\"]},\"application/vnd.oasis.opendocument.image\":{\"source\":\"iana\",\"extensions\":[\"odi\"]},\"application/vnd.oasis.opendocument.image-template\":{\"source\":\"iana\",\"extensions\":[\"oti\"]},\"application/vnd.oasis.opendocument.presentation\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odp\"]},\"application/vnd.oasis.opendocument.presentation-template\":{\"source\":\"iana\",\"extensions\":[\"otp\"]},\"application/vnd.oasis.opendocument.spreadsheet\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ods\"]},\"application/vnd.oasis.opendocument.spreadsheet-template\":{\"source\":\"iana\",\"extensions\":[\"ots\"]},\"application/vnd.oasis.opendocument.text\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odt\"]},\"application/vnd.oasis.opendocument.text-master\":{\"source\":\"iana\",\"extensions\":[\"odm\"]},\"application/vnd.oasis.opendocument.text-template\":{\"source\":\"iana\",\"extensions\":[\"ott\"]},\"application/vnd.oasis.opendocument.text-web\":{\"source\":\"iana\",\"extensions\":[\"oth\"]},\"application/vnd.obn\":{\"source\":\"iana\"},\"application/vnd.ocf+cbor\":{\"source\":\"iana\"},\"application/vnd.oci.image.manifest.v1+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oftn.l10n+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.contentaccessdownload+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.contentaccessstreaming+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.cspg-hexbinary\":{\"source\":\"iana\"},\"application/vnd.oipf.dae.svg+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.dae.xhtml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.mippvcontrolmessage+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.pae.gem\":{\"source\":\"iana\"},\"application/vnd.oipf.spdiscovery+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.spdlist+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.ueprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.userprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.olpc-sugar\":{\"source\":\"iana\",\"extensions\":[\"xo\"]},\"application/vnd.oma-scws-config\":{\"source\":\"iana\"},\"application/vnd.oma-scws-http-request\":{\"source\":\"iana\"},\"application/vnd.oma-scws-http-response\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.associated-procedure-parameter+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.drm-trigger+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.imd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.ltkm\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.notification+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.provisioningtrigger\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.sgboot\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.sgdd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.sgdu\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.simple-symbol-container\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.smartcard-trigger+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.sprov+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.stkm\":{\"source\":\"iana\"},\"application/vnd.oma.cab-address-book+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-feature-handler+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-pcc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-subs-invite+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-user-prefs+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.dcd\":{\"source\":\"iana\"},\"application/vnd.oma.dcdc\":{\"source\":\"iana\"},\"application/vnd.oma.dd2+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dd2\"]},\"application/vnd.oma.drm.risd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.group-usage-list+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.lwm2m+cbor\":{\"source\":\"iana\"},\"application/vnd.oma.lwm2m+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.lwm2m+tlv\":{\"source\":\"iana\"},\"application/vnd.oma.pal+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.detailed-progress-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.final-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.groups+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.invocation-descriptor+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.optimized-progress-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.push\":{\"source\":\"iana\"},\"application/vnd.oma.scidm.messages+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.xcap-directory+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.omads-email+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.omads-file+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.omads-folder+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.omaloc-supl-init\":{\"source\":\"iana\"},\"application/vnd.onepager\":{\"source\":\"iana\"},\"application/vnd.onepagertamp\":{\"source\":\"iana\"},\"application/vnd.onepagertamx\":{\"source\":\"iana\"},\"application/vnd.onepagertat\":{\"source\":\"iana\"},\"application/vnd.onepagertatp\":{\"source\":\"iana\"},\"application/vnd.onepagertatx\":{\"source\":\"iana\"},\"application/vnd.openblox.game+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"obgx\"]},\"application/vnd.openblox.game-binary\":{\"source\":\"iana\"},\"application/vnd.openeye.oeb\":{\"source\":\"iana\"},\"application/vnd.openofficeorg.extension\":{\"source\":\"apache\",\"extensions\":[\"oxt\"]},\"application/vnd.openstreetmap.data+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"osm\"]},\"application/vnd.opentimestamps.ots\":{\"source\":\"iana\"},\"application/vnd.openxmlformats-officedocument.custom-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.customxmlproperties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawing+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.extended-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.presentation\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pptx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slide\":{\"source\":\"iana\",\"extensions\":[\"sldx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.slide+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slideshow\":{\"source\":\"iana\",\"extensions\":[\"ppsx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.tags+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.template\":{\"source\":\"iana\",\"extensions\":[\"potx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xlsx\"]},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.template\":{\"source\":\"iana\",\"extensions\":[\"xltx\"]},\"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.theme+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.themeoverride+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.vmldrawing\":{\"source\":\"iana\"},\"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"docx\"]},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.template\":{\"source\":\"iana\",\"extensions\":[\"dotx\"]},\"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.core-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.relationships+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oracle.resource+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.orange.indata\":{\"source\":\"iana\"},\"application/vnd.osa.netdeploy\":{\"source\":\"iana\"},\"application/vnd.osgeo.mapguide.package\":{\"source\":\"iana\",\"extensions\":[\"mgp\"]},\"application/vnd.osgi.bundle\":{\"source\":\"iana\"},\"application/vnd.osgi.dp\":{\"source\":\"iana\",\"extensions\":[\"dp\"]},\"application/vnd.osgi.subsystem\":{\"source\":\"iana\",\"extensions\":[\"esa\"]},\"application/vnd.otps.ct-kip+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oxli.countgraph\":{\"source\":\"iana\"},\"application/vnd.pagerduty+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.palm\":{\"source\":\"iana\",\"extensions\":[\"pdb\",\"pqa\",\"oprc\"]},\"application/vnd.panoply\":{\"source\":\"iana\"},\"application/vnd.paos.xml\":{\"source\":\"iana\"},\"application/vnd.patentdive\":{\"source\":\"iana\"},\"application/vnd.patientecommsdoc\":{\"source\":\"iana\"},\"application/vnd.pawaafile\":{\"source\":\"iana\",\"extensions\":[\"paw\"]},\"application/vnd.pcos\":{\"source\":\"iana\"},\"application/vnd.pg.format\":{\"source\":\"iana\",\"extensions\":[\"str\"]},\"application/vnd.pg.osasli\":{\"source\":\"iana\",\"extensions\":[\"ei6\"]},\"application/vnd.piaccess.application-licence\":{\"source\":\"iana\"},\"application/vnd.picsel\":{\"source\":\"iana\",\"extensions\":[\"efif\"]},\"application/vnd.pmi.widget\":{\"source\":\"iana\",\"extensions\":[\"wg\"]},\"application/vnd.poc.group-advertisement+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.pocketlearn\":{\"source\":\"iana\",\"extensions\":[\"plf\"]},\"application/vnd.powerbuilder6\":{\"source\":\"iana\",\"extensions\":[\"pbd\"]},\"application/vnd.powerbuilder6-s\":{\"source\":\"iana\"},\"application/vnd.powerbuilder7\":{\"source\":\"iana\"},\"application/vnd.powerbuilder7-s\":{\"source\":\"iana\"},\"application/vnd.powerbuilder75\":{\"source\":\"iana\"},\"application/vnd.powerbuilder75-s\":{\"source\":\"iana\"},\"application/vnd.preminet\":{\"source\":\"iana\"},\"application/vnd.previewsystems.box\":{\"source\":\"iana\",\"extensions\":[\"box\"]},\"application/vnd.proteus.magazine\":{\"source\":\"iana\",\"extensions\":[\"mgz\"]},\"application/vnd.psfs\":{\"source\":\"iana\"},\"application/vnd.publishare-delta-tree\":{\"source\":\"iana\",\"extensions\":[\"qps\"]},\"application/vnd.pvi.ptid1\":{\"source\":\"iana\",\"extensions\":[\"ptid\"]},\"application/vnd.pwg-multiplexed\":{\"source\":\"iana\"},\"application/vnd.pwg-xhtml-print+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.qualcomm.brew-app-res\":{\"source\":\"iana\"},\"application/vnd.quarantainenet\":{\"source\":\"iana\"},\"application/vnd.quark.quarkxpress\":{\"source\":\"iana\",\"extensions\":[\"qxd\",\"qxt\",\"qwd\",\"qwt\",\"qxl\",\"qxb\"]},\"application/vnd.quobject-quoxdocument\":{\"source\":\"iana\"},\"application/vnd.radisys.moml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-conf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-conn+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-dialog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-stream+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-conf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-base+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-fax-detect+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-fax-sendrecv+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-group+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-speech+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-transform+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.rainstor.data\":{\"source\":\"iana\"},\"application/vnd.rapid\":{\"source\":\"iana\"},\"application/vnd.rar\":{\"source\":\"iana\",\"extensions\":[\"rar\"]},\"application/vnd.realvnc.bed\":{\"source\":\"iana\",\"extensions\":[\"bed\"]},\"application/vnd.recordare.musicxml\":{\"source\":\"iana\",\"extensions\":[\"mxl\"]},\"application/vnd.recordare.musicxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"musicxml\"]},\"application/vnd.renlearn.rlprint\":{\"source\":\"iana\"},\"application/vnd.resilient.logic\":{\"source\":\"iana\"},\"application/vnd.restful+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.rig.cryptonote\":{\"source\":\"iana\",\"extensions\":[\"cryptonote\"]},\"application/vnd.rim.cod\":{\"source\":\"apache\",\"extensions\":[\"cod\"]},\"application/vnd.rn-realmedia\":{\"source\":\"apache\",\"extensions\":[\"rm\"]},\"application/vnd.rn-realmedia-vbr\":{\"source\":\"apache\",\"extensions\":[\"rmvb\"]},\"application/vnd.route66.link66+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"link66\"]},\"application/vnd.rs-274x\":{\"source\":\"iana\"},\"application/vnd.ruckus.download\":{\"source\":\"iana\"},\"application/vnd.s3sms\":{\"source\":\"iana\"},\"application/vnd.sailingtracker.track\":{\"source\":\"iana\",\"extensions\":[\"st\"]},\"application/vnd.sar\":{\"source\":\"iana\"},\"application/vnd.sbm.cid\":{\"source\":\"iana\"},\"application/vnd.sbm.mid2\":{\"source\":\"iana\"},\"application/vnd.scribus\":{\"source\":\"iana\"},\"application/vnd.sealed.3df\":{\"source\":\"iana\"},\"application/vnd.sealed.csf\":{\"source\":\"iana\"},\"application/vnd.sealed.doc\":{\"source\":\"iana\"},\"application/vnd.sealed.eml\":{\"source\":\"iana\"},\"application/vnd.sealed.mht\":{\"source\":\"iana\"},\"application/vnd.sealed.net\":{\"source\":\"iana\"},\"application/vnd.sealed.ppt\":{\"source\":\"iana\"},\"application/vnd.sealed.tiff\":{\"source\":\"iana\"},\"application/vnd.sealed.xls\":{\"source\":\"iana\"},\"application/vnd.sealedmedia.softseal.html\":{\"source\":\"iana\"},\"application/vnd.sealedmedia.softseal.pdf\":{\"source\":\"iana\"},\"application/vnd.seemail\":{\"source\":\"iana\",\"extensions\":[\"see\"]},\"application/vnd.seis+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.sema\":{\"source\":\"iana\",\"extensions\":[\"sema\"]},\"application/vnd.semd\":{\"source\":\"iana\",\"extensions\":[\"semd\"]},\"application/vnd.semf\":{\"source\":\"iana\",\"extensions\":[\"semf\"]},\"application/vnd.shade-save-file\":{\"source\":\"iana\"},\"application/vnd.shana.informed.formdata\":{\"source\":\"iana\",\"extensions\":[\"ifm\"]},\"application/vnd.shana.informed.formtemplate\":{\"source\":\"iana\",\"extensions\":[\"itp\"]},\"application/vnd.shana.informed.interchange\":{\"source\":\"iana\",\"extensions\":[\"iif\"]},\"application/vnd.shana.informed.package\":{\"source\":\"iana\",\"extensions\":[\"ipk\"]},\"application/vnd.shootproof+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.shopkick+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.shp\":{\"source\":\"iana\"},\"application/vnd.shx\":{\"source\":\"iana\"},\"application/vnd.sigrok.session\":{\"source\":\"iana\"},\"application/vnd.simtech-mindmapper\":{\"source\":\"iana\",\"extensions\":[\"twd\",\"twds\"]},\"application/vnd.siren+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.smaf\":{\"source\":\"iana\",\"extensions\":[\"mmf\"]},\"application/vnd.smart.notebook\":{\"source\":\"iana\"},\"application/vnd.smart.teacher\":{\"source\":\"iana\",\"extensions\":[\"teacher\"]},\"application/vnd.snesdev-page-table\":{\"source\":\"iana\"},\"application/vnd.software602.filler.form+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"fo\"]},\"application/vnd.software602.filler.form-xml-zip\":{\"source\":\"iana\"},\"application/vnd.solent.sdkm+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sdkm\",\"sdkd\"]},\"application/vnd.spotfire.dxp\":{\"source\":\"iana\",\"extensions\":[\"dxp\"]},\"application/vnd.spotfire.sfs\":{\"source\":\"iana\",\"extensions\":[\"sfs\"]},\"application/vnd.sqlite3\":{\"source\":\"iana\"},\"application/vnd.sss-cod\":{\"source\":\"iana\"},\"application/vnd.sss-dtf\":{\"source\":\"iana\"},\"application/vnd.sss-ntf\":{\"source\":\"iana\"},\"application/vnd.stardivision.calc\":{\"source\":\"apache\",\"extensions\":[\"sdc\"]},\"application/vnd.stardivision.draw\":{\"source\":\"apache\",\"extensions\":[\"sda\"]},\"application/vnd.stardivision.impress\":{\"source\":\"apache\",\"extensions\":[\"sdd\"]},\"application/vnd.stardivision.math\":{\"source\":\"apache\",\"extensions\":[\"smf\"]},\"application/vnd.stardivision.writer\":{\"source\":\"apache\",\"extensions\":[\"sdw\",\"vor\"]},\"application/vnd.stardivision.writer-global\":{\"source\":\"apache\",\"extensions\":[\"sgl\"]},\"application/vnd.stepmania.package\":{\"source\":\"iana\",\"extensions\":[\"smzip\"]},\"application/vnd.stepmania.stepchart\":{\"source\":\"iana\",\"extensions\":[\"sm\"]},\"application/vnd.street-stream\":{\"source\":\"iana\"},\"application/vnd.sun.wadl+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wadl\"]},\"application/vnd.sun.xml.calc\":{\"source\":\"apache\",\"extensions\":[\"sxc\"]},\"application/vnd.sun.xml.calc.template\":{\"source\":\"apache\",\"extensions\":[\"stc\"]},\"application/vnd.sun.xml.draw\":{\"source\":\"apache\",\"extensions\":[\"sxd\"]},\"application/vnd.sun.xml.draw.template\":{\"source\":\"apache\",\"extensions\":[\"std\"]},\"application/vnd.sun.xml.impress\":{\"source\":\"apache\",\"extensions\":[\"sxi\"]},\"application/vnd.sun.xml.impress.template\":{\"source\":\"apache\",\"extensions\":[\"sti\"]},\"application/vnd.sun.xml.math\":{\"source\":\"apache\",\"extensions\":[\"sxm\"]},\"application/vnd.sun.xml.writer\":{\"source\":\"apache\",\"extensions\":[\"sxw\"]},\"application/vnd.sun.xml.writer.global\":{\"source\":\"apache\",\"extensions\":[\"sxg\"]},\"application/vnd.sun.xml.writer.template\":{\"source\":\"apache\",\"extensions\":[\"stw\"]},\"application/vnd.sus-calendar\":{\"source\":\"iana\",\"extensions\":[\"sus\",\"susp\"]},\"application/vnd.svd\":{\"source\":\"iana\",\"extensions\":[\"svd\"]},\"application/vnd.swiftview-ics\":{\"source\":\"iana\"},\"application/vnd.sycle+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.syft+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.symbian.install\":{\"source\":\"apache\",\"extensions\":[\"sis\",\"sisx\"]},\"application/vnd.syncml+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"xsm\"]},\"application/vnd.syncml.dm+wbxml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"bdm\"]},\"application/vnd.syncml.dm+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"xdm\"]},\"application/vnd.syncml.dm.notification\":{\"source\":\"iana\"},\"application/vnd.syncml.dmddf+wbxml\":{\"source\":\"iana\"},\"application/vnd.syncml.dmddf+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"ddf\"]},\"application/vnd.syncml.dmtnds+wbxml\":{\"source\":\"iana\"},\"application/vnd.syncml.dmtnds+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.syncml.ds.notification\":{\"source\":\"iana\"},\"application/vnd.tableschema+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tao.intent-module-archive\":{\"source\":\"iana\",\"extensions\":[\"tao\"]},\"application/vnd.tcpdump.pcap\":{\"source\":\"iana\",\"extensions\":[\"pcap\",\"cap\",\"dmp\"]},\"application/vnd.think-cell.ppttc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tmd.mediaflex.api+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tml\":{\"source\":\"iana\"},\"application/vnd.tmobile-livetv\":{\"source\":\"iana\",\"extensions\":[\"tmo\"]},\"application/vnd.tri.onesource\":{\"source\":\"iana\"},\"application/vnd.trid.tpt\":{\"source\":\"iana\",\"extensions\":[\"tpt\"]},\"application/vnd.triscape.mxs\":{\"source\":\"iana\",\"extensions\":[\"mxs\"]},\"application/vnd.trueapp\":{\"source\":\"iana\",\"extensions\":[\"tra\"]},\"application/vnd.truedoc\":{\"source\":\"iana\"},\"application/vnd.ubisoft.webplayer\":{\"source\":\"iana\"},\"application/vnd.ufdl\":{\"source\":\"iana\",\"extensions\":[\"ufd\",\"ufdl\"]},\"application/vnd.uiq.theme\":{\"source\":\"iana\",\"extensions\":[\"utz\"]},\"application/vnd.umajin\":{\"source\":\"iana\",\"extensions\":[\"umj\"]},\"application/vnd.unity\":{\"source\":\"iana\",\"extensions\":[\"unityweb\"]},\"application/vnd.uoml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uoml\"]},\"application/vnd.uplanet.alert\":{\"source\":\"iana\"},\"application/vnd.uplanet.alert-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.bearer-choice\":{\"source\":\"iana\"},\"application/vnd.uplanet.bearer-choice-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.cacheop\":{\"source\":\"iana\"},\"application/vnd.uplanet.cacheop-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.channel\":{\"source\":\"iana\"},\"application/vnd.uplanet.channel-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.list\":{\"source\":\"iana\"},\"application/vnd.uplanet.list-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.listcmd\":{\"source\":\"iana\"},\"application/vnd.uplanet.listcmd-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.signal\":{\"source\":\"iana\"},\"application/vnd.uri-map\":{\"source\":\"iana\"},\"application/vnd.valve.source.material\":{\"source\":\"iana\"},\"application/vnd.vcx\":{\"source\":\"iana\",\"extensions\":[\"vcx\"]},\"application/vnd.vd-study\":{\"source\":\"iana\"},\"application/vnd.vectorworks\":{\"source\":\"iana\"},\"application/vnd.vel+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.verimatrix.vcas\":{\"source\":\"iana\"},\"application/vnd.veritone.aion+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.veryant.thin\":{\"source\":\"iana\"},\"application/vnd.ves.encrypted\":{\"source\":\"iana\"},\"application/vnd.vidsoft.vidconference\":{\"source\":\"iana\"},\"application/vnd.visio\":{\"source\":\"iana\",\"extensions\":[\"vsd\",\"vst\",\"vss\",\"vsw\"]},\"application/vnd.visionary\":{\"source\":\"iana\",\"extensions\":[\"vis\"]},\"application/vnd.vividence.scriptfile\":{\"source\":\"iana\"},\"application/vnd.vsf\":{\"source\":\"iana\",\"extensions\":[\"vsf\"]},\"application/vnd.wap.sic\":{\"source\":\"iana\"},\"application/vnd.wap.slc\":{\"source\":\"iana\"},\"application/vnd.wap.wbxml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"wbxml\"]},\"application/vnd.wap.wmlc\":{\"source\":\"iana\",\"extensions\":[\"wmlc\"]},\"application/vnd.wap.wmlscriptc\":{\"source\":\"iana\",\"extensions\":[\"wmlsc\"]},\"application/vnd.webturbo\":{\"source\":\"iana\",\"extensions\":[\"wtb\"]},\"application/vnd.wfa.dpp\":{\"source\":\"iana\"},\"application/vnd.wfa.p2p\":{\"source\":\"iana\"},\"application/vnd.wfa.wsc\":{\"source\":\"iana\"},\"application/vnd.windows.devicepairing\":{\"source\":\"iana\"},\"application/vnd.wmc\":{\"source\":\"iana\"},\"application/vnd.wmf.bootstrap\":{\"source\":\"iana\"},\"application/vnd.wolfram.mathematica\":{\"source\":\"iana\"},\"application/vnd.wolfram.mathematica.package\":{\"source\":\"iana\"},\"application/vnd.wolfram.player\":{\"source\":\"iana\",\"extensions\":[\"nbp\"]},\"application/vnd.wordperfect\":{\"source\":\"iana\",\"extensions\":[\"wpd\"]},\"application/vnd.wqd\":{\"source\":\"iana\",\"extensions\":[\"wqd\"]},\"application/vnd.wrq-hp3000-labelled\":{\"source\":\"iana\"},\"application/vnd.wt.stf\":{\"source\":\"iana\",\"extensions\":[\"stf\"]},\"application/vnd.wv.csp+wbxml\":{\"source\":\"iana\"},\"application/vnd.wv.csp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.wv.ssp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xacml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xara\":{\"source\":\"iana\",\"extensions\":[\"xar\"]},\"application/vnd.xfdl\":{\"source\":\"iana\",\"extensions\":[\"xfdl\"]},\"application/vnd.xfdl.webform\":{\"source\":\"iana\"},\"application/vnd.xmi+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xmpie.cpkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.dpkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.plan\":{\"source\":\"iana\"},\"application/vnd.xmpie.ppkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.xlim\":{\"source\":\"iana\"},\"application/vnd.yamaha.hv-dic\":{\"source\":\"iana\",\"extensions\":[\"hvd\"]},\"application/vnd.yamaha.hv-script\":{\"source\":\"iana\",\"extensions\":[\"hvs\"]},\"application/vnd.yamaha.hv-voice\":{\"source\":\"iana\",\"extensions\":[\"hvp\"]},\"application/vnd.yamaha.openscoreformat\":{\"source\":\"iana\",\"extensions\":[\"osf\"]},\"application/vnd.yamaha.openscoreformat.osfpvg+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"osfpvg\"]},\"application/vnd.yamaha.remote-setup\":{\"source\":\"iana\"},\"application/vnd.yamaha.smaf-audio\":{\"source\":\"iana\",\"extensions\":[\"saf\"]},\"application/vnd.yamaha.smaf-phrase\":{\"source\":\"iana\",\"extensions\":[\"spf\"]},\"application/vnd.yamaha.through-ngn\":{\"source\":\"iana\"},\"application/vnd.yamaha.tunnel-udpencap\":{\"source\":\"iana\"},\"application/vnd.yaoweme\":{\"source\":\"iana\"},\"application/vnd.yellowriver-custom-menu\":{\"source\":\"iana\",\"extensions\":[\"cmp\"]},\"application/vnd.youtube.yt\":{\"source\":\"iana\"},\"application/vnd.zul\":{\"source\":\"iana\",\"extensions\":[\"zir\",\"zirz\"]},\"application/vnd.zzazz.deck+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"zaz\"]},\"application/voicexml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"vxml\"]},\"application/voucher-cms+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vq-rtcpxr\":{\"source\":\"iana\"},\"application/wasm\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wasm\"]},\"application/watcherinfo+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wif\"]},\"application/webpush-options+json\":{\"source\":\"iana\",\"compressible\":true},\"application/whoispp-query\":{\"source\":\"iana\"},\"application/whoispp-response\":{\"source\":\"iana\"},\"application/widget\":{\"source\":\"iana\",\"extensions\":[\"wgt\"]},\"application/winhlp\":{\"source\":\"apache\",\"extensions\":[\"hlp\"]},\"application/wita\":{\"source\":\"iana\"},\"application/wordperfect5.1\":{\"source\":\"iana\"},\"application/wsdl+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wsdl\"]},\"application/wspolicy+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wspolicy\"]},\"application/x-7z-compressed\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"7z\"]},\"application/x-abiword\":{\"source\":\"apache\",\"extensions\":[\"abw\"]},\"application/x-ace-compressed\":{\"source\":\"apache\",\"extensions\":[\"ace\"]},\"application/x-amf\":{\"source\":\"apache\"},\"application/x-apple-diskimage\":{\"source\":\"apache\",\"extensions\":[\"dmg\"]},\"application/x-arj\":{\"compressible\":false,\"extensions\":[\"arj\"]},\"application/x-authorware-bin\":{\"source\":\"apache\",\"extensions\":[\"aab\",\"x32\",\"u32\",\"vox\"]},\"application/x-authorware-map\":{\"source\":\"apache\",\"extensions\":[\"aam\"]},\"application/x-authorware-seg\":{\"source\":\"apache\",\"extensions\":[\"aas\"]},\"application/x-bcpio\":{\"source\":\"apache\",\"extensions\":[\"bcpio\"]},\"application/x-bdoc\":{\"compressible\":false,\"extensions\":[\"bdoc\"]},\"application/x-bittorrent\":{\"source\":\"apache\",\"extensions\":[\"torrent\"]},\"application/x-blorb\":{\"source\":\"apache\",\"extensions\":[\"blb\",\"blorb\"]},\"application/x-bzip\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"bz\"]},\"application/x-bzip2\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"bz2\",\"boz\"]},\"application/x-cbr\":{\"source\":\"apache\",\"extensions\":[\"cbr\",\"cba\",\"cbt\",\"cbz\",\"cb7\"]},\"application/x-cdlink\":{\"source\":\"apache\",\"extensions\":[\"vcd\"]},\"application/x-cfs-compressed\":{\"source\":\"apache\",\"extensions\":[\"cfs\"]},\"application/x-chat\":{\"source\":\"apache\",\"extensions\":[\"chat\"]},\"application/x-chess-pgn\":{\"source\":\"apache\",\"extensions\":[\"pgn\"]},\"application/x-chrome-extension\":{\"extensions\":[\"crx\"]},\"application/x-cocoa\":{\"source\":\"nginx\",\"extensions\":[\"cco\"]},\"application/x-compress\":{\"source\":\"apache\"},\"application/x-conference\":{\"source\":\"apache\",\"extensions\":[\"nsc\"]},\"application/x-cpio\":{\"source\":\"apache\",\"extensions\":[\"cpio\"]},\"application/x-csh\":{\"source\":\"apache\",\"extensions\":[\"csh\"]},\"application/x-deb\":{\"compressible\":false},\"application/x-debian-package\":{\"source\":\"apache\",\"extensions\":[\"deb\",\"udeb\"]},\"application/x-dgc-compressed\":{\"source\":\"apache\",\"extensions\":[\"dgc\"]},\"application/x-director\":{\"source\":\"apache\",\"extensions\":[\"dir\",\"dcr\",\"dxr\",\"cst\",\"cct\",\"cxt\",\"w3d\",\"fgd\",\"swa\"]},\"application/x-doom\":{\"source\":\"apache\",\"extensions\":[\"wad\"]},\"application/x-dtbncx+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ncx\"]},\"application/x-dtbook+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"dtb\"]},\"application/x-dtbresource+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"res\"]},\"application/x-dvi\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"dvi\"]},\"application/x-envoy\":{\"source\":\"apache\",\"extensions\":[\"evy\"]},\"application/x-eva\":{\"source\":\"apache\",\"extensions\":[\"eva\"]},\"application/x-font-bdf\":{\"source\":\"apache\",\"extensions\":[\"bdf\"]},\"application/x-font-dos\":{\"source\":\"apache\"},\"application/x-font-framemaker\":{\"source\":\"apache\"},\"application/x-font-ghostscript\":{\"source\":\"apache\",\"extensions\":[\"gsf\"]},\"application/x-font-libgrx\":{\"source\":\"apache\"},\"application/x-font-linux-psf\":{\"source\":\"apache\",\"extensions\":[\"psf\"]},\"application/x-font-pcf\":{\"source\":\"apache\",\"extensions\":[\"pcf\"]},\"application/x-font-snf\":{\"source\":\"apache\",\"extensions\":[\"snf\"]},\"application/x-font-speedo\":{\"source\":\"apache\"},\"application/x-font-sunos-news\":{\"source\":\"apache\"},\"application/x-font-type1\":{\"source\":\"apache\",\"extensions\":[\"pfa\",\"pfb\",\"pfm\",\"afm\"]},\"application/x-font-vfont\":{\"source\":\"apache\"},\"application/x-freearc\":{\"source\":\"apache\",\"extensions\":[\"arc\"]},\"application/x-futuresplash\":{\"source\":\"apache\",\"extensions\":[\"spl\"]},\"application/x-gca-compressed\":{\"source\":\"apache\",\"extensions\":[\"gca\"]},\"application/x-glulx\":{\"source\":\"apache\",\"extensions\":[\"ulx\"]},\"application/x-gnumeric\":{\"source\":\"apache\",\"extensions\":[\"gnumeric\"]},\"application/x-gramps-xml\":{\"source\":\"apache\",\"extensions\":[\"gramps\"]},\"application/x-gtar\":{\"source\":\"apache\",\"extensions\":[\"gtar\"]},\"application/x-gzip\":{\"source\":\"apache\"},\"application/x-hdf\":{\"source\":\"apache\",\"extensions\":[\"hdf\"]},\"application/x-httpd-php\":{\"compressible\":true,\"extensions\":[\"php\"]},\"application/x-install-instructions\":{\"source\":\"apache\",\"extensions\":[\"install\"]},\"application/x-iso9660-image\":{\"source\":\"apache\",\"extensions\":[\"iso\"]},\"application/x-iwork-keynote-sffkey\":{\"extensions\":[\"key\"]},\"application/x-iwork-numbers-sffnumbers\":{\"extensions\":[\"numbers\"]},\"application/x-iwork-pages-sffpages\":{\"extensions\":[\"pages\"]},\"application/x-java-archive-diff\":{\"source\":\"nginx\",\"extensions\":[\"jardiff\"]},\"application/x-java-jnlp-file\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"jnlp\"]},\"application/x-javascript\":{\"compressible\":true},\"application/x-keepass2\":{\"extensions\":[\"kdbx\"]},\"application/x-latex\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"latex\"]},\"application/x-lua-bytecode\":{\"extensions\":[\"luac\"]},\"application/x-lzh-compressed\":{\"source\":\"apache\",\"extensions\":[\"lzh\",\"lha\"]},\"application/x-makeself\":{\"source\":\"nginx\",\"extensions\":[\"run\"]},\"application/x-mie\":{\"source\":\"apache\",\"extensions\":[\"mie\"]},\"application/x-mobipocket-ebook\":{\"source\":\"apache\",\"extensions\":[\"prc\",\"mobi\"]},\"application/x-mpegurl\":{\"compressible\":false},\"application/x-ms-application\":{\"source\":\"apache\",\"extensions\":[\"application\"]},\"application/x-ms-shortcut\":{\"source\":\"apache\",\"extensions\":[\"lnk\"]},\"application/x-ms-wmd\":{\"source\":\"apache\",\"extensions\":[\"wmd\"]},\"application/x-ms-wmz\":{\"source\":\"apache\",\"extensions\":[\"wmz\"]},\"application/x-ms-xbap\":{\"source\":\"apache\",\"extensions\":[\"xbap\"]},\"application/x-msaccess\":{\"source\":\"apache\",\"extensions\":[\"mdb\"]},\"application/x-msbinder\":{\"source\":\"apache\",\"extensions\":[\"obd\"]},\"application/x-mscardfile\":{\"source\":\"apache\",\"extensions\":[\"crd\"]},\"application/x-msclip\":{\"source\":\"apache\",\"extensions\":[\"clp\"]},\"application/x-msdos-program\":{\"extensions\":[\"exe\"]},\"application/x-msdownload\":{\"source\":\"apache\",\"extensions\":[\"exe\",\"dll\",\"com\",\"bat\",\"msi\"]},\"application/x-msmediaview\":{\"source\":\"apache\",\"extensions\":[\"mvb\",\"m13\",\"m14\"]},\"application/x-msmetafile\":{\"source\":\"apache\",\"extensions\":[\"wmf\",\"wmz\",\"emf\",\"emz\"]},\"application/x-msmoney\":{\"source\":\"apache\",\"extensions\":[\"mny\"]},\"application/x-mspublisher\":{\"source\":\"apache\",\"extensions\":[\"pub\"]},\"application/x-msschedule\":{\"source\":\"apache\",\"extensions\":[\"scd\"]},\"application/x-msterminal\":{\"source\":\"apache\",\"extensions\":[\"trm\"]},\"application/x-mswrite\":{\"source\":\"apache\",\"extensions\":[\"wri\"]},\"application/x-netcdf\":{\"source\":\"apache\",\"extensions\":[\"nc\",\"cdf\"]},\"application/x-ns-proxy-autoconfig\":{\"compressible\":true,\"extensions\":[\"pac\"]},\"application/x-nzb\":{\"source\":\"apache\",\"extensions\":[\"nzb\"]},\"application/x-perl\":{\"source\":\"nginx\",\"extensions\":[\"pl\",\"pm\"]},\"application/x-pilot\":{\"source\":\"nginx\",\"extensions\":[\"prc\",\"pdb\"]},\"application/x-pkcs12\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"p12\",\"pfx\"]},\"application/x-pkcs7-certificates\":{\"source\":\"apache\",\"extensions\":[\"p7b\",\"spc\"]},\"application/x-pkcs7-certreqresp\":{\"source\":\"apache\",\"extensions\":[\"p7r\"]},\"application/x-pki-message\":{\"source\":\"iana\"},\"application/x-rar-compressed\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"rar\"]},\"application/x-redhat-package-manager\":{\"source\":\"nginx\",\"extensions\":[\"rpm\"]},\"application/x-research-info-systems\":{\"source\":\"apache\",\"extensions\":[\"ris\"]},\"application/x-sea\":{\"source\":\"nginx\",\"extensions\":[\"sea\"]},\"application/x-sh\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"sh\"]},\"application/x-shar\":{\"source\":\"apache\",\"extensions\":[\"shar\"]},\"application/x-shockwave-flash\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"swf\"]},\"application/x-silverlight-app\":{\"source\":\"apache\",\"extensions\":[\"xap\"]},\"application/x-sql\":{\"source\":\"apache\",\"extensions\":[\"sql\"]},\"application/x-stuffit\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"sit\"]},\"application/x-stuffitx\":{\"source\":\"apache\",\"extensions\":[\"sitx\"]},\"application/x-subrip\":{\"source\":\"apache\",\"extensions\":[\"srt\"]},\"application/x-sv4cpio\":{\"source\":\"apache\",\"extensions\":[\"sv4cpio\"]},\"application/x-sv4crc\":{\"source\":\"apache\",\"extensions\":[\"sv4crc\"]},\"application/x-t3vm-image\":{\"source\":\"apache\",\"extensions\":[\"t3\"]},\"application/x-tads\":{\"source\":\"apache\",\"extensions\":[\"gam\"]},\"application/x-tar\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"tar\"]},\"application/x-tcl\":{\"source\":\"apache\",\"extensions\":[\"tcl\",\"tk\"]},\"application/x-tex\":{\"source\":\"apache\",\"extensions\":[\"tex\"]},\"application/x-tex-tfm\":{\"source\":\"apache\",\"extensions\":[\"tfm\"]},\"application/x-texinfo\":{\"source\":\"apache\",\"extensions\":[\"texinfo\",\"texi\"]},\"application/x-tgif\":{\"source\":\"apache\",\"extensions\":[\"obj\"]},\"application/x-ustar\":{\"source\":\"apache\",\"extensions\":[\"ustar\"]},\"application/x-virtualbox-hdd\":{\"compressible\":true,\"extensions\":[\"hdd\"]},\"application/x-virtualbox-ova\":{\"compressible\":true,\"extensions\":[\"ova\"]},\"application/x-virtualbox-ovf\":{\"compressible\":true,\"extensions\":[\"ovf\"]},\"application/x-virtualbox-vbox\":{\"compressible\":true,\"extensions\":[\"vbox\"]},\"application/x-virtualbox-vbox-extpack\":{\"compressible\":false,\"extensions\":[\"vbox-extpack\"]},\"application/x-virtualbox-vdi\":{\"compressible\":true,\"extensions\":[\"vdi\"]},\"application/x-virtualbox-vhd\":{\"compressible\":true,\"extensions\":[\"vhd\"]},\"application/x-virtualbox-vmdk\":{\"compressible\":true,\"extensions\":[\"vmdk\"]},\"application/x-wais-source\":{\"source\":\"apache\",\"extensions\":[\"src\"]},\"application/x-web-app-manifest+json\":{\"compressible\":true,\"extensions\":[\"webapp\"]},\"application/x-www-form-urlencoded\":{\"source\":\"iana\",\"compressible\":true},\"application/x-x509-ca-cert\":{\"source\":\"iana\",\"extensions\":[\"der\",\"crt\",\"pem\"]},\"application/x-x509-ca-ra-cert\":{\"source\":\"iana\"},\"application/x-x509-next-ca-cert\":{\"source\":\"iana\"},\"application/x-xfig\":{\"source\":\"apache\",\"extensions\":[\"fig\"]},\"application/x-xliff+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xlf\"]},\"application/x-xpinstall\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"xpi\"]},\"application/x-xz\":{\"source\":\"apache\",\"extensions\":[\"xz\"]},\"application/x-zmachine\":{\"source\":\"apache\",\"extensions\":[\"z1\",\"z2\",\"z3\",\"z4\",\"z5\",\"z6\",\"z7\",\"z8\"]},\"application/x400-bp\":{\"source\":\"iana\"},\"application/xacml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xaml+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xaml\"]},\"application/xcap-att+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xav\"]},\"application/xcap-caps+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xca\"]},\"application/xcap-diff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdf\"]},\"application/xcap-el+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xel\"]},\"application/xcap-error+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xcap-ns+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xns\"]},\"application/xcon-conference-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xcon-conference-info-diff+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xenc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xenc\"]},\"application/xhtml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xhtml\",\"xht\"]},\"application/xhtml-voice+xml\":{\"source\":\"apache\",\"compressible\":true},\"application/xliff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xlf\"]},\"application/xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xml\",\"xsl\",\"xsd\",\"rng\"]},\"application/xml-dtd\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dtd\"]},\"application/xml-external-parsed-entity\":{\"source\":\"iana\"},\"application/xml-patch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xmpp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xop+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xop\"]},\"application/xproc+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xpl\"]},\"application/xslt+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xsl\",\"xslt\"]},\"application/xspf+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xspf\"]},\"application/xv+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mxml\",\"xhvml\",\"xvml\",\"xvm\"]},\"application/yang\":{\"source\":\"iana\",\"extensions\":[\"yang\"]},\"application/yang-data+json\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-data+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-patch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/yin+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"yin\"]},\"application/zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"zip\"]},\"application/zlib\":{\"source\":\"iana\"},\"application/zstd\":{\"source\":\"iana\"},\"audio/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"audio/32kadpcm\":{\"source\":\"iana\"},\"audio/3gpp\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"3gpp\"]},\"audio/3gpp2\":{\"source\":\"iana\"},\"audio/aac\":{\"source\":\"iana\"},\"audio/ac3\":{\"source\":\"iana\"},\"audio/adpcm\":{\"source\":\"apache\",\"extensions\":[\"adp\"]},\"audio/amr\":{\"source\":\"iana\",\"extensions\":[\"amr\"]},\"audio/amr-wb\":{\"source\":\"iana\"},\"audio/amr-wb+\":{\"source\":\"iana\"},\"audio/aptx\":{\"source\":\"iana\"},\"audio/asc\":{\"source\":\"iana\"},\"audio/atrac-advanced-lossless\":{\"source\":\"iana\"},\"audio/atrac-x\":{\"source\":\"iana\"},\"audio/atrac3\":{\"source\":\"iana\"},\"audio/basic\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"au\",\"snd\"]},\"audio/bv16\":{\"source\":\"iana\"},\"audio/bv32\":{\"source\":\"iana\"},\"audio/clearmode\":{\"source\":\"iana\"},\"audio/cn\":{\"source\":\"iana\"},\"audio/dat12\":{\"source\":\"iana\"},\"audio/dls\":{\"source\":\"iana\"},\"audio/dsr-es201108\":{\"source\":\"iana\"},\"audio/dsr-es202050\":{\"source\":\"iana\"},\"audio/dsr-es202211\":{\"source\":\"iana\"},\"audio/dsr-es202212\":{\"source\":\"iana\"},\"audio/dv\":{\"source\":\"iana\"},\"audio/dvi4\":{\"source\":\"iana\"},\"audio/eac3\":{\"source\":\"iana\"},\"audio/encaprtp\":{\"source\":\"iana\"},\"audio/evrc\":{\"source\":\"iana\"},\"audio/evrc-qcp\":{\"source\":\"iana\"},\"audio/evrc0\":{\"source\":\"iana\"},\"audio/evrc1\":{\"source\":\"iana\"},\"audio/evrcb\":{\"source\":\"iana\"},\"audio/evrcb0\":{\"source\":\"iana\"},\"audio/evrcb1\":{\"source\":\"iana\"},\"audio/evrcnw\":{\"source\":\"iana\"},\"audio/evrcnw0\":{\"source\":\"iana\"},\"audio/evrcnw1\":{\"source\":\"iana\"},\"audio/evrcwb\":{\"source\":\"iana\"},\"audio/evrcwb0\":{\"source\":\"iana\"},\"audio/evrcwb1\":{\"source\":\"iana\"},\"audio/evs\":{\"source\":\"iana\"},\"audio/flexfec\":{\"source\":\"iana\"},\"audio/fwdred\":{\"source\":\"iana\"},\"audio/g711-0\":{\"source\":\"iana\"},\"audio/g719\":{\"source\":\"iana\"},\"audio/g722\":{\"source\":\"iana\"},\"audio/g7221\":{\"source\":\"iana\"},\"audio/g723\":{\"source\":\"iana\"},\"audio/g726-16\":{\"source\":\"iana\"},\"audio/g726-24\":{\"source\":\"iana\"},\"audio/g726-32\":{\"source\":\"iana\"},\"audio/g726-40\":{\"source\":\"iana\"},\"audio/g728\":{\"source\":\"iana\"},\"audio/g729\":{\"source\":\"iana\"},\"audio/g7291\":{\"source\":\"iana\"},\"audio/g729d\":{\"source\":\"iana\"},\"audio/g729e\":{\"source\":\"iana\"},\"audio/gsm\":{\"source\":\"iana\"},\"audio/gsm-efr\":{\"source\":\"iana\"},\"audio/gsm-hr-08\":{\"source\":\"iana\"},\"audio/ilbc\":{\"source\":\"iana\"},\"audio/ip-mr_v2.5\":{\"source\":\"iana\"},\"audio/isac\":{\"source\":\"apache\"},\"audio/l16\":{\"source\":\"iana\"},\"audio/l20\":{\"source\":\"iana\"},\"audio/l24\":{\"source\":\"iana\",\"compressible\":false},\"audio/l8\":{\"source\":\"iana\"},\"audio/lpc\":{\"source\":\"iana\"},\"audio/melp\":{\"source\":\"iana\"},\"audio/melp1200\":{\"source\":\"iana\"},\"audio/melp2400\":{\"source\":\"iana\"},\"audio/melp600\":{\"source\":\"iana\"},\"audio/mhas\":{\"source\":\"iana\"},\"audio/midi\":{\"source\":\"apache\",\"extensions\":[\"mid\",\"midi\",\"kar\",\"rmi\"]},\"audio/mobile-xmf\":{\"source\":\"iana\",\"extensions\":[\"mxmf\"]},\"audio/mp3\":{\"compressible\":false,\"extensions\":[\"mp3\"]},\"audio/mp4\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"m4a\",\"mp4a\"]},\"audio/mp4a-latm\":{\"source\":\"iana\"},\"audio/mpa\":{\"source\":\"iana\"},\"audio/mpa-robust\":{\"source\":\"iana\"},\"audio/mpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"]},\"audio/mpeg4-generic\":{\"source\":\"iana\"},\"audio/musepack\":{\"source\":\"apache\"},\"audio/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"oga\",\"ogg\",\"spx\",\"opus\"]},\"audio/opus\":{\"source\":\"iana\"},\"audio/parityfec\":{\"source\":\"iana\"},\"audio/pcma\":{\"source\":\"iana\"},\"audio/pcma-wb\":{\"source\":\"iana\"},\"audio/pcmu\":{\"source\":\"iana\"},\"audio/pcmu-wb\":{\"source\":\"iana\"},\"audio/prs.sid\":{\"source\":\"iana\"},\"audio/qcelp\":{\"source\":\"iana\"},\"audio/raptorfec\":{\"source\":\"iana\"},\"audio/red\":{\"source\":\"iana\"},\"audio/rtp-enc-aescm128\":{\"source\":\"iana\"},\"audio/rtp-midi\":{\"source\":\"iana\"},\"audio/rtploopback\":{\"source\":\"iana\"},\"audio/rtx\":{\"source\":\"iana\"},\"audio/s3m\":{\"source\":\"apache\",\"extensions\":[\"s3m\"]},\"audio/scip\":{\"source\":\"iana\"},\"audio/silk\":{\"source\":\"apache\",\"extensions\":[\"sil\"]},\"audio/smv\":{\"source\":\"iana\"},\"audio/smv-qcp\":{\"source\":\"iana\"},\"audio/smv0\":{\"source\":\"iana\"},\"audio/sofa\":{\"source\":\"iana\"},\"audio/sp-midi\":{\"source\":\"iana\"},\"audio/speex\":{\"source\":\"iana\"},\"audio/t140c\":{\"source\":\"iana\"},\"audio/t38\":{\"source\":\"iana\"},\"audio/telephone-event\":{\"source\":\"iana\"},\"audio/tetra_acelp\":{\"source\":\"iana\"},\"audio/tetra_acelp_bb\":{\"source\":\"iana\"},\"audio/tone\":{\"source\":\"iana\"},\"audio/tsvcis\":{\"source\":\"iana\"},\"audio/uemclip\":{\"source\":\"iana\"},\"audio/ulpfec\":{\"source\":\"iana\"},\"audio/usac\":{\"source\":\"iana\"},\"audio/vdvi\":{\"source\":\"iana\"},\"audio/vmr-wb\":{\"source\":\"iana\"},\"audio/vnd.3gpp.iufp\":{\"source\":\"iana\"},\"audio/vnd.4sb\":{\"source\":\"iana\"},\"audio/vnd.audiokoz\":{\"source\":\"iana\"},\"audio/vnd.celp\":{\"source\":\"iana\"},\"audio/vnd.cisco.nse\":{\"source\":\"iana\"},\"audio/vnd.cmles.radio-events\":{\"source\":\"iana\"},\"audio/vnd.cns.anp1\":{\"source\":\"iana\"},\"audio/vnd.cns.inf1\":{\"source\":\"iana\"},\"audio/vnd.dece.audio\":{\"source\":\"iana\",\"extensions\":[\"uva\",\"uvva\"]},\"audio/vnd.digital-winds\":{\"source\":\"iana\",\"extensions\":[\"eol\"]},\"audio/vnd.dlna.adts\":{\"source\":\"iana\"},\"audio/vnd.dolby.heaac.1\":{\"source\":\"iana\"},\"audio/vnd.dolby.heaac.2\":{\"source\":\"iana\"},\"audio/vnd.dolby.mlp\":{\"source\":\"iana\"},\"audio/vnd.dolby.mps\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2x\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2z\":{\"source\":\"iana\"},\"audio/vnd.dolby.pulse.1\":{\"source\":\"iana\"},\"audio/vnd.dra\":{\"source\":\"iana\",\"extensions\":[\"dra\"]},\"audio/vnd.dts\":{\"source\":\"iana\",\"extensions\":[\"dts\"]},\"audio/vnd.dts.hd\":{\"source\":\"iana\",\"extensions\":[\"dtshd\"]},\"audio/vnd.dts.uhd\":{\"source\":\"iana\"},\"audio/vnd.dvb.file\":{\"source\":\"iana\"},\"audio/vnd.everad.plj\":{\"source\":\"iana\"},\"audio/vnd.hns.audio\":{\"source\":\"iana\"},\"audio/vnd.lucent.voice\":{\"source\":\"iana\",\"extensions\":[\"lvp\"]},\"audio/vnd.ms-playready.media.pya\":{\"source\":\"iana\",\"extensions\":[\"pya\"]},\"audio/vnd.nokia.mobile-xmf\":{\"source\":\"iana\"},\"audio/vnd.nortel.vbk\":{\"source\":\"iana\"},\"audio/vnd.nuera.ecelp4800\":{\"source\":\"iana\",\"extensions\":[\"ecelp4800\"]},\"audio/vnd.nuera.ecelp7470\":{\"source\":\"iana\",\"extensions\":[\"ecelp7470\"]},\"audio/vnd.nuera.ecelp9600\":{\"source\":\"iana\",\"extensions\":[\"ecelp9600\"]},\"audio/vnd.octel.sbc\":{\"source\":\"iana\"},\"audio/vnd.presonus.multitrack\":{\"source\":\"iana\"},\"audio/vnd.qcelp\":{\"source\":\"iana\"},\"audio/vnd.rhetorex.32kadpcm\":{\"source\":\"iana\"},\"audio/vnd.rip\":{\"source\":\"iana\",\"extensions\":[\"rip\"]},\"audio/vnd.rn-realaudio\":{\"compressible\":false},\"audio/vnd.sealedmedia.softseal.mpeg\":{\"source\":\"iana\"},\"audio/vnd.vmx.cvsd\":{\"source\":\"iana\"},\"audio/vnd.wave\":{\"compressible\":false},\"audio/vorbis\":{\"source\":\"iana\",\"compressible\":false},\"audio/vorbis-config\":{\"source\":\"iana\"},\"audio/wav\":{\"compressible\":false,\"extensions\":[\"wav\"]},\"audio/wave\":{\"compressible\":false,\"extensions\":[\"wav\"]},\"audio/webm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"weba\"]},\"audio/x-aac\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"aac\"]},\"audio/x-aiff\":{\"source\":\"apache\",\"extensions\":[\"aif\",\"aiff\",\"aifc\"]},\"audio/x-caf\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"caf\"]},\"audio/x-flac\":{\"source\":\"apache\",\"extensions\":[\"flac\"]},\"audio/x-m4a\":{\"source\":\"nginx\",\"extensions\":[\"m4a\"]},\"audio/x-matroska\":{\"source\":\"apache\",\"extensions\":[\"mka\"]},\"audio/x-mpegurl\":{\"source\":\"apache\",\"extensions\":[\"m3u\"]},\"audio/x-ms-wax\":{\"source\":\"apache\",\"extensions\":[\"wax\"]},\"audio/x-ms-wma\":{\"source\":\"apache\",\"extensions\":[\"wma\"]},\"audio/x-pn-realaudio\":{\"source\":\"apache\",\"extensions\":[\"ram\",\"ra\"]},\"audio/x-pn-realaudio-plugin\":{\"source\":\"apache\",\"extensions\":[\"rmp\"]},\"audio/x-realaudio\":{\"source\":\"nginx\",\"extensions\":[\"ra\"]},\"audio/x-tta\":{\"source\":\"apache\"},\"audio/x-wav\":{\"source\":\"apache\",\"extensions\":[\"wav\"]},\"audio/xm\":{\"source\":\"apache\",\"extensions\":[\"xm\"]},\"chemical/x-cdx\":{\"source\":\"apache\",\"extensions\":[\"cdx\"]},\"chemical/x-cif\":{\"source\":\"apache\",\"extensions\":[\"cif\"]},\"chemical/x-cmdf\":{\"source\":\"apache\",\"extensions\":[\"cmdf\"]},\"chemical/x-cml\":{\"source\":\"apache\",\"extensions\":[\"cml\"]},\"chemical/x-csml\":{\"source\":\"apache\",\"extensions\":[\"csml\"]},\"chemical/x-pdb\":{\"source\":\"apache\"},\"chemical/x-xyz\":{\"source\":\"apache\",\"extensions\":[\"xyz\"]},\"font/collection\":{\"source\":\"iana\",\"extensions\":[\"ttc\"]},\"font/otf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"otf\"]},\"font/sfnt\":{\"source\":\"iana\"},\"font/ttf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ttf\"]},\"font/woff\":{\"source\":\"iana\",\"extensions\":[\"woff\"]},\"font/woff2\":{\"source\":\"iana\",\"extensions\":[\"woff2\"]},\"image/aces\":{\"source\":\"iana\",\"extensions\":[\"exr\"]},\"image/apng\":{\"compressible\":false,\"extensions\":[\"apng\"]},\"image/avci\":{\"source\":\"iana\",\"extensions\":[\"avci\"]},\"image/avcs\":{\"source\":\"iana\",\"extensions\":[\"avcs\"]},\"image/avif\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"avif\"]},\"image/bmp\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"bmp\"]},\"image/cgm\":{\"source\":\"iana\",\"extensions\":[\"cgm\"]},\"image/dicom-rle\":{\"source\":\"iana\",\"extensions\":[\"drle\"]},\"image/emf\":{\"source\":\"iana\",\"extensions\":[\"emf\"]},\"image/fits\":{\"source\":\"iana\",\"extensions\":[\"fits\"]},\"image/g3fax\":{\"source\":\"iana\",\"extensions\":[\"g3\"]},\"image/gif\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"gif\"]},\"image/heic\":{\"source\":\"iana\",\"extensions\":[\"heic\"]},\"image/heic-sequence\":{\"source\":\"iana\",\"extensions\":[\"heics\"]},\"image/heif\":{\"source\":\"iana\",\"extensions\":[\"heif\"]},\"image/heif-sequence\":{\"source\":\"iana\",\"extensions\":[\"heifs\"]},\"image/hej2k\":{\"source\":\"iana\",\"extensions\":[\"hej2\"]},\"image/hsj2\":{\"source\":\"iana\",\"extensions\":[\"hsj2\"]},\"image/ief\":{\"source\":\"iana\",\"extensions\":[\"ief\"]},\"image/jls\":{\"source\":\"iana\",\"extensions\":[\"jls\"]},\"image/jp2\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jp2\",\"jpg2\"]},\"image/jpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpeg\",\"jpg\",\"jpe\"]},\"image/jph\":{\"source\":\"iana\",\"extensions\":[\"jph\"]},\"image/jphc\":{\"source\":\"iana\",\"extensions\":[\"jhc\"]},\"image/jpm\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpm\"]},\"image/jpx\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpx\",\"jpf\"]},\"image/jxr\":{\"source\":\"iana\",\"extensions\":[\"jxr\"]},\"image/jxra\":{\"source\":\"iana\",\"extensions\":[\"jxra\"]},\"image/jxrs\":{\"source\":\"iana\",\"extensions\":[\"jxrs\"]},\"image/jxs\":{\"source\":\"iana\",\"extensions\":[\"jxs\"]},\"image/jxsc\":{\"source\":\"iana\",\"extensions\":[\"jxsc\"]},\"image/jxsi\":{\"source\":\"iana\",\"extensions\":[\"jxsi\"]},\"image/jxss\":{\"source\":\"iana\",\"extensions\":[\"jxss\"]},\"image/ktx\":{\"source\":\"iana\",\"extensions\":[\"ktx\"]},\"image/ktx2\":{\"source\":\"iana\",\"extensions\":[\"ktx2\"]},\"image/naplps\":{\"source\":\"iana\"},\"image/pjpeg\":{\"compressible\":false},\"image/png\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"png\"]},\"image/prs.btif\":{\"source\":\"iana\",\"extensions\":[\"btif\"]},\"image/prs.pti\":{\"source\":\"iana\",\"extensions\":[\"pti\"]},\"image/pwg-raster\":{\"source\":\"iana\"},\"image/sgi\":{\"source\":\"apache\",\"extensions\":[\"sgi\"]},\"image/svg+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"svg\",\"svgz\"]},\"image/t38\":{\"source\":\"iana\",\"extensions\":[\"t38\"]},\"image/tiff\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"tif\",\"tiff\"]},\"image/tiff-fx\":{\"source\":\"iana\",\"extensions\":[\"tfx\"]},\"image/vnd.adobe.photoshop\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"psd\"]},\"image/vnd.airzip.accelerator.azv\":{\"source\":\"iana\",\"extensions\":[\"azv\"]},\"image/vnd.cns.inf2\":{\"source\":\"iana\"},\"image/vnd.dece.graphic\":{\"source\":\"iana\",\"extensions\":[\"uvi\",\"uvvi\",\"uvg\",\"uvvg\"]},\"image/vnd.djvu\":{\"source\":\"iana\",\"extensions\":[\"djvu\",\"djv\"]},\"image/vnd.dvb.subtitle\":{\"source\":\"iana\",\"extensions\":[\"sub\"]},\"image/vnd.dwg\":{\"source\":\"iana\",\"extensions\":[\"dwg\"]},\"image/vnd.dxf\":{\"source\":\"iana\",\"extensions\":[\"dxf\"]},\"image/vnd.fastbidsheet\":{\"source\":\"iana\",\"extensions\":[\"fbs\"]},\"image/vnd.fpx\":{\"source\":\"iana\",\"extensions\":[\"fpx\"]},\"image/vnd.fst\":{\"source\":\"iana\",\"extensions\":[\"fst\"]},\"image/vnd.fujixerox.edmics-mmr\":{\"source\":\"iana\",\"extensions\":[\"mmr\"]},\"image/vnd.fujixerox.edmics-rlc\":{\"source\":\"iana\",\"extensions\":[\"rlc\"]},\"image/vnd.globalgraphics.pgb\":{\"source\":\"iana\"},\"image/vnd.microsoft.icon\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ico\"]},\"image/vnd.mix\":{\"source\":\"iana\"},\"image/vnd.mozilla.apng\":{\"source\":\"iana\"},\"image/vnd.ms-dds\":{\"compressible\":true,\"extensions\":[\"dds\"]},\"image/vnd.ms-modi\":{\"source\":\"iana\",\"extensions\":[\"mdi\"]},\"image/vnd.ms-photo\":{\"source\":\"apache\",\"extensions\":[\"wdp\"]},\"image/vnd.net-fpx\":{\"source\":\"iana\",\"extensions\":[\"npx\"]},\"image/vnd.pco.b16\":{\"source\":\"iana\",\"extensions\":[\"b16\"]},\"image/vnd.radiance\":{\"source\":\"iana\"},\"image/vnd.sealed.png\":{\"source\":\"iana\"},\"image/vnd.sealedmedia.softseal.gif\":{\"source\":\"iana\"},\"image/vnd.sealedmedia.softseal.jpg\":{\"source\":\"iana\"},\"image/vnd.svf\":{\"source\":\"iana\"},\"image/vnd.tencent.tap\":{\"source\":\"iana\",\"extensions\":[\"tap\"]},\"image/vnd.valve.source.texture\":{\"source\":\"iana\",\"extensions\":[\"vtf\"]},\"image/vnd.wap.wbmp\":{\"source\":\"iana\",\"extensions\":[\"wbmp\"]},\"image/vnd.xiff\":{\"source\":\"iana\",\"extensions\":[\"xif\"]},\"image/vnd.zbrush.pcx\":{\"source\":\"iana\",\"extensions\":[\"pcx\"]},\"image/webp\":{\"source\":\"apache\",\"extensions\":[\"webp\"]},\"image/wmf\":{\"source\":\"iana\",\"extensions\":[\"wmf\"]},\"image/x-3ds\":{\"source\":\"apache\",\"extensions\":[\"3ds\"]},\"image/x-cmu-raster\":{\"source\":\"apache\",\"extensions\":[\"ras\"]},\"image/x-cmx\":{\"source\":\"apache\",\"extensions\":[\"cmx\"]},\"image/x-freehand\":{\"source\":\"apache\",\"extensions\":[\"fh\",\"fhc\",\"fh4\",\"fh5\",\"fh7\"]},\"image/x-icon\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ico\"]},\"image/x-jng\":{\"source\":\"nginx\",\"extensions\":[\"jng\"]},\"image/x-mrsid-image\":{\"source\":\"apache\",\"extensions\":[\"sid\"]},\"image/x-ms-bmp\":{\"source\":\"nginx\",\"compressible\":true,\"extensions\":[\"bmp\"]},\"image/x-pcx\":{\"source\":\"apache\",\"extensions\":[\"pcx\"]},\"image/x-pict\":{\"source\":\"apache\",\"extensions\":[\"pic\",\"pct\"]},\"image/x-portable-anymap\":{\"source\":\"apache\",\"extensions\":[\"pnm\"]},\"image/x-portable-bitmap\":{\"source\":\"apache\",\"extensions\":[\"pbm\"]},\"image/x-portable-graymap\":{\"source\":\"apache\",\"extensions\":[\"pgm\"]},\"image/x-portable-pixmap\":{\"source\":\"apache\",\"extensions\":[\"ppm\"]},\"image/x-rgb\":{\"source\":\"apache\",\"extensions\":[\"rgb\"]},\"image/x-tga\":{\"source\":\"apache\",\"extensions\":[\"tga\"]},\"image/x-xbitmap\":{\"source\":\"apache\",\"extensions\":[\"xbm\"]},\"image/x-xcf\":{\"compressible\":false},\"image/x-xpixmap\":{\"source\":\"apache\",\"extensions\":[\"xpm\"]},\"image/x-xwindowdump\":{\"source\":\"apache\",\"extensions\":[\"xwd\"]},\"message/cpim\":{\"source\":\"iana\"},\"message/delivery-status\":{\"source\":\"iana\"},\"message/disposition-notification\":{\"source\":\"iana\",\"extensions\":[\"disposition-notification\"]},\"message/external-body\":{\"source\":\"iana\"},\"message/feedback-report\":{\"source\":\"iana\"},\"message/global\":{\"source\":\"iana\",\"extensions\":[\"u8msg\"]},\"message/global-delivery-status\":{\"source\":\"iana\",\"extensions\":[\"u8dsn\"]},\"message/global-disposition-notification\":{\"source\":\"iana\",\"extensions\":[\"u8mdn\"]},\"message/global-headers\":{\"source\":\"iana\",\"extensions\":[\"u8hdr\"]},\"message/http\":{\"source\":\"iana\",\"compressible\":false},\"message/imdn+xml\":{\"source\":\"iana\",\"compressible\":true},\"message/news\":{\"source\":\"iana\"},\"message/partial\":{\"source\":\"iana\",\"compressible\":false},\"message/rfc822\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"eml\",\"mime\"]},\"message/s-http\":{\"source\":\"iana\"},\"message/sip\":{\"source\":\"iana\"},\"message/sipfrag\":{\"source\":\"iana\"},\"message/tracking-status\":{\"source\":\"iana\"},\"message/vnd.si.simp\":{\"source\":\"iana\"},\"message/vnd.wfa.wsc\":{\"source\":\"iana\",\"extensions\":[\"wsc\"]},\"model/3mf\":{\"source\":\"iana\",\"extensions\":[\"3mf\"]},\"model/e57\":{\"source\":\"iana\"},\"model/gltf+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"gltf\"]},\"model/gltf-binary\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"glb\"]},\"model/iges\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"igs\",\"iges\"]},\"model/mesh\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"msh\",\"mesh\",\"silo\"]},\"model/mtl\":{\"source\":\"iana\",\"extensions\":[\"mtl\"]},\"model/obj\":{\"source\":\"iana\",\"extensions\":[\"obj\"]},\"model/step\":{\"source\":\"iana\"},\"model/step+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"stpx\"]},\"model/step+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"stpz\"]},\"model/step-xml+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"stpxz\"]},\"model/stl\":{\"source\":\"iana\",\"extensions\":[\"stl\"]},\"model/vnd.collada+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dae\"]},\"model/vnd.dwf\":{\"source\":\"iana\",\"extensions\":[\"dwf\"]},\"model/vnd.flatland.3dml\":{\"source\":\"iana\"},\"model/vnd.gdl\":{\"source\":\"iana\",\"extensions\":[\"gdl\"]},\"model/vnd.gs-gdl\":{\"source\":\"apache\"},\"model/vnd.gs.gdl\":{\"source\":\"iana\"},\"model/vnd.gtw\":{\"source\":\"iana\",\"extensions\":[\"gtw\"]},\"model/vnd.moml+xml\":{\"source\":\"iana\",\"compressible\":true},\"model/vnd.mts\":{\"source\":\"iana\",\"extensions\":[\"mts\"]},\"model/vnd.opengex\":{\"source\":\"iana\",\"extensions\":[\"ogex\"]},\"model/vnd.parasolid.transmit.binary\":{\"source\":\"iana\",\"extensions\":[\"x_b\"]},\"model/vnd.parasolid.transmit.text\":{\"source\":\"iana\",\"extensions\":[\"x_t\"]},\"model/vnd.pytha.pyox\":{\"source\":\"iana\"},\"model/vnd.rosette.annotated-data-model\":{\"source\":\"iana\"},\"model/vnd.sap.vds\":{\"source\":\"iana\",\"extensions\":[\"vds\"]},\"model/vnd.usdz+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"usdz\"]},\"model/vnd.valve.source.compiled-map\":{\"source\":\"iana\",\"extensions\":[\"bsp\"]},\"model/vnd.vtu\":{\"source\":\"iana\",\"extensions\":[\"vtu\"]},\"model/vrml\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"wrl\",\"vrml\"]},\"model/x3d+binary\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"x3db\",\"x3dbz\"]},\"model/x3d+fastinfoset\":{\"source\":\"iana\",\"extensions\":[\"x3db\"]},\"model/x3d+vrml\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"x3dv\",\"x3dvz\"]},\"model/x3d+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"x3d\",\"x3dz\"]},\"model/x3d-vrml\":{\"source\":\"iana\",\"extensions\":[\"x3dv\"]},\"multipart/alternative\":{\"source\":\"iana\",\"compressible\":false},\"multipart/appledouble\":{\"source\":\"iana\"},\"multipart/byteranges\":{\"source\":\"iana\"},\"multipart/digest\":{\"source\":\"iana\"},\"multipart/encrypted\":{\"source\":\"iana\",\"compressible\":false},\"multipart/form-data\":{\"source\":\"iana\",\"compressible\":false},\"multipart/header-set\":{\"source\":\"iana\"},\"multipart/mixed\":{\"source\":\"iana\"},\"multipart/multilingual\":{\"source\":\"iana\"},\"multipart/parallel\":{\"source\":\"iana\"},\"multipart/related\":{\"source\":\"iana\",\"compressible\":false},\"multipart/report\":{\"source\":\"iana\"},\"multipart/signed\":{\"source\":\"iana\",\"compressible\":false},\"multipart/vnd.bint.med-plus\":{\"source\":\"iana\"},\"multipart/voice-message\":{\"source\":\"iana\"},\"multipart/x-mixed-replace\":{\"source\":\"iana\"},\"text/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"text/cache-manifest\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"appcache\",\"manifest\"]},\"text/calendar\":{\"source\":\"iana\",\"extensions\":[\"ics\",\"ifb\"]},\"text/calender\":{\"compressible\":true},\"text/cmd\":{\"compressible\":true},\"text/coffeescript\":{\"extensions\":[\"coffee\",\"litcoffee\"]},\"text/cql\":{\"source\":\"iana\"},\"text/cql-expression\":{\"source\":\"iana\"},\"text/cql-identifier\":{\"source\":\"iana\"},\"text/css\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"css\"]},\"text/csv\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"csv\"]},\"text/csv-schema\":{\"source\":\"iana\"},\"text/directory\":{\"source\":\"iana\"},\"text/dns\":{\"source\":\"iana\"},\"text/ecmascript\":{\"source\":\"iana\"},\"text/encaprtp\":{\"source\":\"iana\"},\"text/enriched\":{\"source\":\"iana\"},\"text/fhirpath\":{\"source\":\"iana\"},\"text/flexfec\":{\"source\":\"iana\"},\"text/fwdred\":{\"source\":\"iana\"},\"text/gff3\":{\"source\":\"iana\"},\"text/grammar-ref-list\":{\"source\":\"iana\"},\"text/html\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"html\",\"htm\",\"shtml\"]},\"text/jade\":{\"extensions\":[\"jade\"]},\"text/javascript\":{\"source\":\"iana\",\"compressible\":true},\"text/jcr-cnd\":{\"source\":\"iana\"},\"text/jsx\":{\"compressible\":true,\"extensions\":[\"jsx\"]},\"text/less\":{\"compressible\":true,\"extensions\":[\"less\"]},\"text/markdown\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"markdown\",\"md\"]},\"text/mathml\":{\"source\":\"nginx\",\"extensions\":[\"mml\"]},\"text/mdx\":{\"compressible\":true,\"extensions\":[\"mdx\"]},\"text/mizar\":{\"source\":\"iana\"},\"text/n3\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"n3\"]},\"text/parameters\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/parityfec\":{\"source\":\"iana\"},\"text/plain\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"]},\"text/provenance-notation\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/prs.fallenstein.rst\":{\"source\":\"iana\"},\"text/prs.lines.tag\":{\"source\":\"iana\",\"extensions\":[\"dsc\"]},\"text/prs.prop.logic\":{\"source\":\"iana\"},\"text/raptorfec\":{\"source\":\"iana\"},\"text/red\":{\"source\":\"iana\"},\"text/rfc822-headers\":{\"source\":\"iana\"},\"text/richtext\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtx\"]},\"text/rtf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtf\"]},\"text/rtp-enc-aescm128\":{\"source\":\"iana\"},\"text/rtploopback\":{\"source\":\"iana\"},\"text/rtx\":{\"source\":\"iana\"},\"text/sgml\":{\"source\":\"iana\",\"extensions\":[\"sgml\",\"sgm\"]},\"text/shaclc\":{\"source\":\"iana\"},\"text/shex\":{\"source\":\"iana\",\"extensions\":[\"shex\"]},\"text/slim\":{\"extensions\":[\"slim\",\"slm\"]},\"text/spdx\":{\"source\":\"iana\",\"extensions\":[\"spdx\"]},\"text/strings\":{\"source\":\"iana\"},\"text/stylus\":{\"extensions\":[\"stylus\",\"styl\"]},\"text/t140\":{\"source\":\"iana\"},\"text/tab-separated-values\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tsv\"]},\"text/troff\":{\"source\":\"iana\",\"extensions\":[\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"]},\"text/turtle\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"ttl\"]},\"text/ulpfec\":{\"source\":\"iana\"},\"text/uri-list\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uri\",\"uris\",\"urls\"]},\"text/vcard\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"vcard\"]},\"text/vnd.a\":{\"source\":\"iana\"},\"text/vnd.abc\":{\"source\":\"iana\"},\"text/vnd.ascii-art\":{\"source\":\"iana\"},\"text/vnd.curl\":{\"source\":\"iana\",\"extensions\":[\"curl\"]},\"text/vnd.curl.dcurl\":{\"source\":\"apache\",\"extensions\":[\"dcurl\"]},\"text/vnd.curl.mcurl\":{\"source\":\"apache\",\"extensions\":[\"mcurl\"]},\"text/vnd.curl.scurl\":{\"source\":\"apache\",\"extensions\":[\"scurl\"]},\"text/vnd.debian.copyright\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/vnd.dmclientscript\":{\"source\":\"iana\"},\"text/vnd.dvb.subtitle\":{\"source\":\"iana\",\"extensions\":[\"sub\"]},\"text/vnd.esmertec.theme-descriptor\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/vnd.familysearch.gedcom\":{\"source\":\"iana\",\"extensions\":[\"ged\"]},\"text/vnd.ficlab.flt\":{\"source\":\"iana\"},\"text/vnd.fly\":{\"source\":\"iana\",\"extensions\":[\"fly\"]},\"text/vnd.fmi.flexstor\":{\"source\":\"iana\",\"extensions\":[\"flx\"]},\"text/vnd.gml\":{\"source\":\"iana\"},\"text/vnd.graphviz\":{\"source\":\"iana\",\"extensions\":[\"gv\"]},\"text/vnd.hans\":{\"source\":\"iana\"},\"text/vnd.hgl\":{\"source\":\"iana\"},\"text/vnd.in3d.3dml\":{\"source\":\"iana\",\"extensions\":[\"3dml\"]},\"text/vnd.in3d.spot\":{\"source\":\"iana\",\"extensions\":[\"spot\"]},\"text/vnd.iptc.newsml\":{\"source\":\"iana\"},\"text/vnd.iptc.nitf\":{\"source\":\"iana\"},\"text/vnd.latex-z\":{\"source\":\"iana\"},\"text/vnd.motorola.reflex\":{\"source\":\"iana\"},\"text/vnd.ms-mediapackage\":{\"source\":\"iana\"},\"text/vnd.net2phone.commcenter.command\":{\"source\":\"iana\"},\"text/vnd.radisys.msml-basic-layout\":{\"source\":\"iana\"},\"text/vnd.senx.warpscript\":{\"source\":\"iana\"},\"text/vnd.si.uricatalogue\":{\"source\":\"iana\"},\"text/vnd.sosi\":{\"source\":\"iana\"},\"text/vnd.sun.j2me.app-descriptor\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"jad\"]},\"text/vnd.trolltech.linguist\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/vnd.wap.si\":{\"source\":\"iana\"},\"text/vnd.wap.sl\":{\"source\":\"iana\"},\"text/vnd.wap.wml\":{\"source\":\"iana\",\"extensions\":[\"wml\"]},\"text/vnd.wap.wmlscript\":{\"source\":\"iana\",\"extensions\":[\"wmls\"]},\"text/vtt\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"vtt\"]},\"text/x-asm\":{\"source\":\"apache\",\"extensions\":[\"s\",\"asm\"]},\"text/x-c\":{\"source\":\"apache\",\"extensions\":[\"c\",\"cc\",\"cxx\",\"cpp\",\"h\",\"hh\",\"dic\"]},\"text/x-component\":{\"source\":\"nginx\",\"extensions\":[\"htc\"]},\"text/x-fortran\":{\"source\":\"apache\",\"extensions\":[\"f\",\"for\",\"f77\",\"f90\"]},\"text/x-gwt-rpc\":{\"compressible\":true},\"text/x-handlebars-template\":{\"extensions\":[\"hbs\"]},\"text/x-java-source\":{\"source\":\"apache\",\"extensions\":[\"java\"]},\"text/x-jquery-tmpl\":{\"compressible\":true},\"text/x-lua\":{\"extensions\":[\"lua\"]},\"text/x-markdown\":{\"compressible\":true,\"extensions\":[\"mkd\"]},\"text/x-nfo\":{\"source\":\"apache\",\"extensions\":[\"nfo\"]},\"text/x-opml\":{\"source\":\"apache\",\"extensions\":[\"opml\"]},\"text/x-org\":{\"compressible\":true,\"extensions\":[\"org\"]},\"text/x-pascal\":{\"source\":\"apache\",\"extensions\":[\"p\",\"pas\"]},\"text/x-processing\":{\"compressible\":true,\"extensions\":[\"pde\"]},\"text/x-sass\":{\"extensions\":[\"sass\"]},\"text/x-scss\":{\"extensions\":[\"scss\"]},\"text/x-setext\":{\"source\":\"apache\",\"extensions\":[\"etx\"]},\"text/x-sfv\":{\"source\":\"apache\",\"extensions\":[\"sfv\"]},\"text/x-suse-ymp\":{\"compressible\":true,\"extensions\":[\"ymp\"]},\"text/x-uuencode\":{\"source\":\"apache\",\"extensions\":[\"uu\"]},\"text/x-vcalendar\":{\"source\":\"apache\",\"extensions\":[\"vcs\"]},\"text/x-vcard\":{\"source\":\"apache\",\"extensions\":[\"vcf\"]},\"text/xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xml\"]},\"text/xml-external-parsed-entity\":{\"source\":\"iana\"},\"text/yaml\":{\"compressible\":true,\"extensions\":[\"yaml\",\"yml\"]},\"video/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"video/3gpp\":{\"source\":\"iana\",\"extensions\":[\"3gp\",\"3gpp\"]},\"video/3gpp-tt\":{\"source\":\"iana\"},\"video/3gpp2\":{\"source\":\"iana\",\"extensions\":[\"3g2\"]},\"video/av1\":{\"source\":\"iana\"},\"video/bmpeg\":{\"source\":\"iana\"},\"video/bt656\":{\"source\":\"iana\"},\"video/celb\":{\"source\":\"iana\"},\"video/dv\":{\"source\":\"iana\"},\"video/encaprtp\":{\"source\":\"iana\"},\"video/ffv1\":{\"source\":\"iana\"},\"video/flexfec\":{\"source\":\"iana\"},\"video/h261\":{\"source\":\"iana\",\"extensions\":[\"h261\"]},\"video/h263\":{\"source\":\"iana\",\"extensions\":[\"h263\"]},\"video/h263-1998\":{\"source\":\"iana\"},\"video/h263-2000\":{\"source\":\"iana\"},\"video/h264\":{\"source\":\"iana\",\"extensions\":[\"h264\"]},\"video/h264-rcdo\":{\"source\":\"iana\"},\"video/h264-svc\":{\"source\":\"iana\"},\"video/h265\":{\"source\":\"iana\"},\"video/iso.segment\":{\"source\":\"iana\",\"extensions\":[\"m4s\"]},\"video/jpeg\":{\"source\":\"iana\",\"extensions\":[\"jpgv\"]},\"video/jpeg2000\":{\"source\":\"iana\"},\"video/jpm\":{\"source\":\"apache\",\"extensions\":[\"jpm\",\"jpgm\"]},\"video/jxsv\":{\"source\":\"iana\"},\"video/mj2\":{\"source\":\"iana\",\"extensions\":[\"mj2\",\"mjp2\"]},\"video/mp1s\":{\"source\":\"iana\"},\"video/mp2p\":{\"source\":\"iana\"},\"video/mp2t\":{\"source\":\"iana\",\"extensions\":[\"ts\"]},\"video/mp4\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mp4\",\"mp4v\",\"mpg4\"]},\"video/mp4v-es\":{\"source\":\"iana\"},\"video/mpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"]},\"video/mpeg4-generic\":{\"source\":\"iana\"},\"video/mpv\":{\"source\":\"iana\"},\"video/nv\":{\"source\":\"iana\"},\"video/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ogv\"]},\"video/parityfec\":{\"source\":\"iana\"},\"video/pointer\":{\"source\":\"iana\"},\"video/quicktime\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"qt\",\"mov\"]},\"video/raptorfec\":{\"source\":\"iana\"},\"video/raw\":{\"source\":\"iana\"},\"video/rtp-enc-aescm128\":{\"source\":\"iana\"},\"video/rtploopback\":{\"source\":\"iana\"},\"video/rtx\":{\"source\":\"iana\"},\"video/scip\":{\"source\":\"iana\"},\"video/smpte291\":{\"source\":\"iana\"},\"video/smpte292m\":{\"source\":\"iana\"},\"video/ulpfec\":{\"source\":\"iana\"},\"video/vc1\":{\"source\":\"iana\"},\"video/vc2\":{\"source\":\"iana\"},\"video/vnd.cctv\":{\"source\":\"iana\"},\"video/vnd.dece.hd\":{\"source\":\"iana\",\"extensions\":[\"uvh\",\"uvvh\"]},\"video/vnd.dece.mobile\":{\"source\":\"iana\",\"extensions\":[\"uvm\",\"uvvm\"]},\"video/vnd.dece.mp4\":{\"source\":\"iana\"},\"video/vnd.dece.pd\":{\"source\":\"iana\",\"extensions\":[\"uvp\",\"uvvp\"]},\"video/vnd.dece.sd\":{\"source\":\"iana\",\"extensions\":[\"uvs\",\"uvvs\"]},\"video/vnd.dece.video\":{\"source\":\"iana\",\"extensions\":[\"uvv\",\"uvvv\"]},\"video/vnd.directv.mpeg\":{\"source\":\"iana\"},\"video/vnd.directv.mpeg-tts\":{\"source\":\"iana\"},\"video/vnd.dlna.mpeg-tts\":{\"source\":\"iana\"},\"video/vnd.dvb.file\":{\"source\":\"iana\",\"extensions\":[\"dvb\"]},\"video/vnd.fvt\":{\"source\":\"iana\",\"extensions\":[\"fvt\"]},\"video/vnd.hns.video\":{\"source\":\"iana\"},\"video/vnd.iptvforum.1dparityfec-1010\":{\"source\":\"iana\"},\"video/vnd.iptvforum.1dparityfec-2005\":{\"source\":\"iana\"},\"video/vnd.iptvforum.2dparityfec-1010\":{\"source\":\"iana\"},\"video/vnd.iptvforum.2dparityfec-2005\":{\"source\":\"iana\"},\"video/vnd.iptvforum.ttsavc\":{\"source\":\"iana\"},\"video/vnd.iptvforum.ttsmpeg2\":{\"source\":\"iana\"},\"video/vnd.motorola.video\":{\"source\":\"iana\"},\"video/vnd.motorola.videop\":{\"source\":\"iana\"},\"video/vnd.mpegurl\":{\"source\":\"iana\",\"extensions\":[\"mxu\",\"m4u\"]},\"video/vnd.ms-playready.media.pyv\":{\"source\":\"iana\",\"extensions\":[\"pyv\"]},\"video/vnd.nokia.interleaved-multimedia\":{\"source\":\"iana\"},\"video/vnd.nokia.mp4vr\":{\"source\":\"iana\"},\"video/vnd.nokia.videovoip\":{\"source\":\"iana\"},\"video/vnd.objectvideo\":{\"source\":\"iana\"},\"video/vnd.radgamettools.bink\":{\"source\":\"iana\"},\"video/vnd.radgamettools.smacker\":{\"source\":\"iana\"},\"video/vnd.sealed.mpeg1\":{\"source\":\"iana\"},\"video/vnd.sealed.mpeg4\":{\"source\":\"iana\"},\"video/vnd.sealed.swf\":{\"source\":\"iana\"},\"video/vnd.sealedmedia.softseal.mov\":{\"source\":\"iana\"},\"video/vnd.uvvu.mp4\":{\"source\":\"iana\",\"extensions\":[\"uvu\",\"uvvu\"]},\"video/vnd.vivo\":{\"source\":\"iana\",\"extensions\":[\"viv\"]},\"video/vnd.youtube.yt\":{\"source\":\"iana\"},\"video/vp8\":{\"source\":\"iana\"},\"video/vp9\":{\"source\":\"iana\"},\"video/webm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"webm\"]},\"video/x-f4v\":{\"source\":\"apache\",\"extensions\":[\"f4v\"]},\"video/x-fli\":{\"source\":\"apache\",\"extensions\":[\"fli\"]},\"video/x-flv\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"flv\"]},\"video/x-m4v\":{\"source\":\"apache\",\"extensions\":[\"m4v\"]},\"video/x-matroska\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"mkv\",\"mk3d\",\"mks\"]},\"video/x-mng\":{\"source\":\"apache\",\"extensions\":[\"mng\"]},\"video/x-ms-asf\":{\"source\":\"apache\",\"extensions\":[\"asf\",\"asx\"]},\"video/x-ms-vob\":{\"source\":\"apache\",\"extensions\":[\"vob\"]},\"video/x-ms-wm\":{\"source\":\"apache\",\"extensions\":[\"wm\"]},\"video/x-ms-wmv\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"wmv\"]},\"video/x-ms-wmx\":{\"source\":\"apache\",\"extensions\":[\"wmx\"]},\"video/x-ms-wvx\":{\"source\":\"apache\",\"extensions\":[\"wvx\"]},\"video/x-msvideo\":{\"source\":\"apache\",\"extensions\":[\"avi\"]},\"video/x-sgi-movie\":{\"source\":\"apache\",\"extensions\":[\"movie\"]},\"video/x-smv\":{\"source\":\"apache\",\"extensions\":[\"smv\"]},\"x-conference/x-cooltalk\":{\"source\":\"apache\",\"extensions\":[\"ice\"]},\"x-shader/x-fragment\":{\"compressible\":true},\"x-shader/x-vertex\":{\"compressible\":true}}");

/***/ }),
/* 695 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = {
  parallel: __webpack_require__(696),
  serial: __webpack_require__(698),
  serialOrdered: __webpack_require__(306)
};

/***/ }),
/* 696 */
/***/ (function(module, exports, __webpack_require__) {

var iterate = __webpack_require__(301),
    initState = __webpack_require__(304),
    terminator = __webpack_require__(305); // Public API


module.exports = parallel;
/**
 * Runs iterator over provided array elements in parallel
 *
 * @param   {array|object} list - array or object (named list) to iterate over
 * @param   {function} iterator - iterator to run
 * @param   {function} callback - invoked when all elements processed
 * @returns {function} - jobs terminator
 */

function parallel(list, iterator, callback) {
  var state = initState(list);

  while (state.index < (state['keyedList'] || list).length) {
    iterate(list, iterator, state, function (error, result) {
      if (error) {
        callback(error, result);
        return;
      } // looks like it's the last one


      if (Object.keys(state.jobs).length === 0) {
        callback(null, state.results);
        return;
      }
    });
    state.index++;
  }

  return terminator.bind(state, callback);
}

/***/ }),
/* 697 */
/***/ (function(module, exports) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

module.exports = defer;
/**
 * Runs provided function on next iteration of the event loop
 *
 * @param {function} fn - function to run
 */

function defer(fn) {
  var nextTick = typeof setImmediate == 'function' ? setImmediate : (typeof process === "undefined" ? "undefined" : _typeof(process)) == 'object' && typeof process.nextTick == 'function' ? process.nextTick : null;

  if (nextTick) {
    nextTick(fn);
  } else {
    setTimeout(fn, 0);
  }
}

/***/ }),
/* 698 */
/***/ (function(module, exports, __webpack_require__) {

var serialOrdered = __webpack_require__(306); // Public API


module.exports = serial;
/**
 * Runs iterator over provided array elements in series
 *
 * @param   {array|object} list - array or object (named list) to iterate over
 * @param   {function} iterator - iterator to run
 * @param   {function} callback - invoked when all elements processed
 * @returns {function} - jobs terminator
 */

function serial(list, iterator, callback) {
  return serialOrdered(list, iterator, null, callback);
}

/***/ }),
/* 699 */
/***/ (function(module, exports) {

// populates missing values
module.exports = function (dst, src) {
  Object.keys(src).forEach(function (prop) {
    dst[prop] = dst[prop] || src[prop];
  });
  return dst;
};

/***/ }),
/* 700 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var VERSION = __webpack_require__(216).version;

var AxiosError = __webpack_require__(83);

var validators = {}; // eslint-disable-next-line func-names

['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function (type, i) {
  validators[type] = function validator(thing) {
    return _typeof(thing) === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
  };
});
var deprecatedWarnings = {};
/**
 * Transitional option validator
 * @param {function|boolean?} validator - set to false if the transitional option has been removed
 * @param {string?} version - deprecated version / removed since version
 * @param {string?} message - some message with additional info
 * @returns {function}
 */

validators.transitional = function transitional(validator, version, message) {
  function formatMessage(opt, desc) {
    return '[Axios v' + VERSION + '] Transitional option \'' + opt + '\'' + desc + (message ? '. ' + message : '');
  } // eslint-disable-next-line func-names


  return function (value, opt, opts) {
    if (validator === false) {
      throw new AxiosError(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')), AxiosError.ERR_DEPRECATED);
    }

    if (version && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true; // eslint-disable-next-line no-console

      console.warn(formatMessage(opt, ' has been deprecated since v' + version + ' and will be removed in the near future'));
    }

    return validator ? validator(value, opt, opts) : true;
  };
};
/**
 * Assert object's properties type
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 */


function assertOptions(options, schema, allowUnknown) {
  if (_typeof(options) !== 'object') {
    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);
  }

  var keys = Object.keys(options);
  var i = keys.length;

  while (i-- > 0) {
    var opt = keys[i];
    var validator = schema[opt];

    if (validator) {
      var value = options[opt];
      var result = value === undefined || validator(value, opt, options);

      if (result !== true) {
        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);
      }

      continue;
    }

    if (allowUnknown !== true) {
      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);
    }
  }
}

module.exports = {
  assertOptions: assertOptions,
  validators: validators
};

/***/ }),
/* 701 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var CanceledError = __webpack_require__(127);
/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */


function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });
  var token = this; // eslint-disable-next-line func-names

  this.promise.then(function (cancel) {
    if (!token._listeners) return;
    var i;
    var l = token._listeners.length;

    for (i = 0; i < l; i++) {
      token._listeners[i](cancel);
    }

    token._listeners = null;
  }); // eslint-disable-next-line func-names

  this.promise.then = function (onfulfilled) {
    var _resolve; // eslint-disable-next-line func-names


    var promise = new Promise(function (resolve) {
      token.subscribe(resolve);
      _resolve = resolve;
    }).then(onfulfilled);

    promise.cancel = function reject() {
      token.unsubscribe(_resolve);
    };

    return promise;
  };

  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new CanceledError(message);
    resolvePromise(token.reason);
  });
}
/**
 * Throws a `CanceledError` if cancellation has been requested.
 */


CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};
/**
 * Subscribe to the cancel signal
 */


CancelToken.prototype.subscribe = function subscribe(listener) {
  if (this.reason) {
    listener(this.reason);
    return;
  }

  if (this._listeners) {
    this._listeners.push(listener);
  } else {
    this._listeners = [listener];
  }
};
/**
 * Unsubscribe from the cancel signal
 */


CancelToken.prototype.unsubscribe = function unsubscribe(listener) {
  if (!this._listeners) {
    return;
  }

  var index = this._listeners.indexOf(listener);

  if (index !== -1) {
    this._listeners.splice(index, 1);
  }
};
/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */


CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;

/***/ }),
/* 702 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */

module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};

/***/ }),
/* 703 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(23);
/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */


module.exports = function isAxiosError(payload) {
  return utils.isObject(payload) && payload.isAxiosError === true;
};

/***/ }),
/* 704 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var getSideChannel = __webpack_require__(705);

var utils = __webpack_require__(311);

var formats = __webpack_require__(217);

var has = Object.prototype.hasOwnProperty;
var arrayPrefixGenerators = {
  brackets: function brackets(prefix) {
    return prefix + '[]';
  },
  comma: 'comma',
  indices: function indices(prefix, key) {
    return prefix + '[' + key + ']';
  },
  repeat: function repeat(prefix) {
    return prefix;
  }
};
var isArray = Array.isArray;
var split = String.prototype.split;
var push = Array.prototype.push;

var pushToArray = function pushToArray(arr, valueOrArray) {
  push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);
};

var toISO = Date.prototype.toISOString;
var defaultFormat = formats['default'];
var defaults = {
  addQueryPrefix: false,
  allowDots: false,
  charset: 'utf-8',
  charsetSentinel: false,
  delimiter: '&',
  encode: true,
  encoder: utils.encode,
  encodeValuesOnly: false,
  format: defaultFormat,
  formatter: formats.formatters[defaultFormat],
  // deprecated
  indices: false,
  serializeDate: function serializeDate(date) {
    return toISO.call(date);
  },
  skipNulls: false,
  strictNullHandling: false
};

var isNonNullishPrimitive = function isNonNullishPrimitive(v) {
  return typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean' || _typeof(v) === 'symbol' || typeof v === 'bigint';
};

var sentinel = {};

var stringify = function stringify(object, prefix, generateArrayPrefix, commaRoundTrip, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {
  var obj = object;
  var tmpSc = sideChannel;
  var step = 0;
  var findFlag = false;

  while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {
    // Where object last appeared in the ref tree
    var pos = tmpSc.get(object);
    step += 1;

    if (typeof pos !== 'undefined') {
      if (pos === step) {
        throw new RangeError('Cyclic object value');
      } else {
        findFlag = true; // Break while
      }
    }

    if (typeof tmpSc.get(sentinel) === 'undefined') {
      step = 0;
    }
  }

  if (typeof filter === 'function') {
    obj = filter(prefix, obj);
  } else if (obj instanceof Date) {
    obj = serializeDate(obj);
  } else if (generateArrayPrefix === 'comma' && isArray(obj)) {
    obj = utils.maybeMap(obj, function (value) {
      if (value instanceof Date) {
        return serializeDate(value);
      }

      return value;
    });
  }

  if (obj === null) {
    if (strictNullHandling) {
      return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;
    }

    obj = '';
  }

  if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
    if (encoder) {
      var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);

      if (generateArrayPrefix === 'comma' && encodeValuesOnly) {
        var valuesArray = split.call(String(obj), ',');
        var valuesJoined = '';

        for (var i = 0; i < valuesArray.length; ++i) {
          valuesJoined += (i === 0 ? '' : ',') + formatter(encoder(valuesArray[i], defaults.encoder, charset, 'value', format));
        }

        return [formatter(keyValue) + (commaRoundTrip && isArray(obj) && valuesArray.length === 1 ? '[]' : '') + '=' + valuesJoined];
      }

      return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];
    }

    return [formatter(prefix) + '=' + formatter(String(obj))];
  }

  var values = [];

  if (typeof obj === 'undefined') {
    return values;
  }

  var objKeys;

  if (generateArrayPrefix === 'comma' && isArray(obj)) {
    // we need to join elements in
    objKeys = [{
      value: obj.length > 0 ? obj.join(',') || null : void undefined
    }];
  } else if (isArray(filter)) {
    objKeys = filter;
  } else {
    var keys = Object.keys(obj);
    objKeys = sort ? keys.sort(sort) : keys;
  }

  var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;

  for (var j = 0; j < objKeys.length; ++j) {
    var key = objKeys[j];
    var value = _typeof(key) === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];

    if (skipNulls && value === null) {
      continue;
    }

    var keyPrefix = isArray(obj) ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');
    sideChannel.set(object, step);
    var valueSideChannel = getSideChannel();
    valueSideChannel.set(sentinel, sideChannel);
    pushToArray(values, stringify(value, keyPrefix, generateArrayPrefix, commaRoundTrip, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));
  }

  return values;
};

var normalizeStringifyOptions = function normalizeStringifyOptions(opts) {
  if (!opts) {
    return defaults;
  }

  if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {
    throw new TypeError('Encoder has to be a function.');
  }

  var charset = opts.charset || defaults.charset;

  if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
    throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
  }

  var format = formats['default'];

  if (typeof opts.format !== 'undefined') {
    if (!has.call(formats.formatters, opts.format)) {
      throw new TypeError('Unknown format option provided.');
    }

    format = opts.format;
  }

  var formatter = formats.formatters[format];
  var filter = defaults.filter;

  if (typeof opts.filter === 'function' || isArray(opts.filter)) {
    filter = opts.filter;
  }

  return {
    addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,
    allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
    charset: charset,
    charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
    delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,
    encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,
    encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,
    encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
    filter: filter,
    format: format,
    formatter: formatter,
    serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,
    skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,
    sort: typeof opts.sort === 'function' ? opts.sort : null,
    strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
  };
};

module.exports = function (object, opts) {
  var obj = object;
  var options = normalizeStringifyOptions(opts);
  var objKeys;
  var filter;

  if (typeof options.filter === 'function') {
    filter = options.filter;
    obj = filter('', obj);
  } else if (isArray(options.filter)) {
    filter = options.filter;
    objKeys = filter;
  }

  var keys = [];

  if (_typeof(obj) !== 'object' || obj === null) {
    return '';
  }

  var arrayFormat;

  if (opts && opts.arrayFormat in arrayPrefixGenerators) {
    arrayFormat = opts.arrayFormat;
  } else if (opts && 'indices' in opts) {
    arrayFormat = opts.indices ? 'indices' : 'repeat';
  } else {
    arrayFormat = 'indices';
  }

  var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];

  if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {
    throw new TypeError('`commaRoundTrip` must be a boolean, or absent');
  }

  var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;

  if (!objKeys) {
    objKeys = Object.keys(obj);
  }

  if (options.sort) {
    objKeys.sort(options.sort);
  }

  var sideChannel = getSideChannel();

  for (var i = 0; i < objKeys.length; ++i) {
    var key = objKeys[i];

    if (options.skipNulls && obj[key] === null) {
      continue;
    }

    pushToArray(keys, stringify(obj[key], key, generateArrayPrefix, commaRoundTrip, options.strictNullHandling, options.skipNulls, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));
  }

  var joined = keys.join(options.delimiter);
  var prefix = options.addQueryPrefix === true ? '?' : '';

  if (options.charsetSentinel) {
    if (options.charset === 'iso-8859-1') {
      // encodeURIComponent('&#10003;'), the "numeric entity" representation of a checkmark
      prefix += 'utf8=%26%2310003%3B&';
    } else {
      // encodeURIComponent('✓')
      prefix += 'utf8=%E2%9C%93&';
    }
  }

  return joined.length > 0 ? prefix + joined : '';
};

/***/ }),
/* 705 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var GetIntrinsic = __webpack_require__(706);

var callBound = __webpack_require__(710);

var inspect = __webpack_require__(714);

var $TypeError = GetIntrinsic('%TypeError%');
var $WeakMap = GetIntrinsic('%WeakMap%', true);
var $Map = GetIntrinsic('%Map%', true);
var $weakMapGet = callBound('WeakMap.prototype.get', true);
var $weakMapSet = callBound('WeakMap.prototype.set', true);
var $weakMapHas = callBound('WeakMap.prototype.has', true);
var $mapGet = callBound('Map.prototype.get', true);
var $mapSet = callBound('Map.prototype.set', true);
var $mapHas = callBound('Map.prototype.has', true);
/*
 * This function traverses the list returning the node corresponding to the
 * given key.
 *
 * That node is also moved to the head of the list, so that if it's accessed
 * again we don't need to traverse the whole list. By doing so, all the recently
 * used nodes can be accessed relatively quickly.
 */

var listGetNode = function listGetNode(list, key) {
  // eslint-disable-line consistent-return
  for (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {
    if (curr.key === key) {
      prev.next = curr.next;
      curr.next = list.next;
      list.next = curr; // eslint-disable-line no-param-reassign

      return curr;
    }
  }
};

var listGet = function listGet(objects, key) {
  var node = listGetNode(objects, key);
  return node && node.value;
};

var listSet = function listSet(objects, key, value) {
  var node = listGetNode(objects, key);

  if (node) {
    node.value = value;
  } else {
    // Prepend the new node to the beginning of the list
    objects.next = {
      // eslint-disable-line no-param-reassign
      key: key,
      next: objects.next,
      value: value
    };
  }
};

var listHas = function listHas(objects, key) {
  return !!listGetNode(objects, key);
};

module.exports = function getSideChannel() {
  var $wm;
  var $m;
  var $o;
  var channel = {
    assert: function assert(key) {
      if (!channel.has(key)) {
        throw new $TypeError('Side channel does not contain ' + inspect(key));
      }
    },
    get: function get(key) {
      // eslint-disable-line consistent-return
      if ($WeakMap && key && (_typeof(key) === 'object' || typeof key === 'function')) {
        if ($wm) {
          return $weakMapGet($wm, key);
        }
      } else if ($Map) {
        if ($m) {
          return $mapGet($m, key);
        }
      } else {
        if ($o) {
          // eslint-disable-line no-lonely-if
          return listGet($o, key);
        }
      }
    },
    has: function has(key) {
      if ($WeakMap && key && (_typeof(key) === 'object' || typeof key === 'function')) {
        if ($wm) {
          return $weakMapHas($wm, key);
        }
      } else if ($Map) {
        if ($m) {
          return $mapHas($m, key);
        }
      } else {
        if ($o) {
          // eslint-disable-line no-lonely-if
          return listHas($o, key);
        }
      }

      return false;
    },
    set: function set(key, value) {
      if ($WeakMap && key && (_typeof(key) === 'object' || typeof key === 'function')) {
        if (!$wm) {
          $wm = new $WeakMap();
        }

        $weakMapSet($wm, key, value);
      } else if ($Map) {
        if (!$m) {
          $m = new $Map();
        }

        $mapSet($m, key, value);
      } else {
        if (!$o) {
          /*
           * Initialize the linked list as an empty node, so that we don't have
           * to special-case handling of the first node: we can always refer to
           * it as (previous node).next, instead of something like (list).head
           */
          $o = {
            key: {},
            next: null
          };
        }

        listSet($o, key, value);
      }
    }
  };
  return channel;
};

/***/ }),
/* 706 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var undefined;
var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError; // eslint-disable-next-line consistent-return

var getEvalledConstructor = function getEvalledConstructor(expressionSyntax) {
  try {
    return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
  } catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;

if ($gOPD) {
  try {
    $gOPD({}, '');
  } catch (e) {
    $gOPD = null; // this is IE 8, which has a broken gOPD
  }
}

var throwTypeError = function throwTypeError() {
  throw new $TypeError();
};

var ThrowTypeError = $gOPD ? function () {
  try {
    // eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
    arguments.callee; // IE 8 does not throw here

    return throwTypeError;
  } catch (calleeThrows) {
    try {
      // IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
      return $gOPD(arguments, 'callee').get;
    } catch (gOPDthrows) {
      return throwTypeError;
    }
  }
}() : throwTypeError;

var hasSymbols = __webpack_require__(707)();

var getProto = Object.getPrototypeOf || function (x) {
  return x.__proto__;
}; // eslint-disable-line no-proto


var needsEval = {};
var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);
var INTRINSICS = {
  '%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
  '%Array%': Array,
  '%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
  '%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
  '%AsyncFromSyncIteratorPrototype%': undefined,
  '%AsyncFunction%': needsEval,
  '%AsyncGenerator%': needsEval,
  '%AsyncGeneratorFunction%': needsEval,
  '%AsyncIteratorPrototype%': needsEval,
  '%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
  '%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
  '%Boolean%': Boolean,
  '%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
  '%Date%': Date,
  '%decodeURI%': decodeURI,
  '%decodeURIComponent%': decodeURIComponent,
  '%encodeURI%': encodeURI,
  '%encodeURIComponent%': encodeURIComponent,
  '%Error%': Error,
  '%eval%': eval,
  // eslint-disable-line no-eval
  '%EvalError%': EvalError,
  '%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
  '%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
  '%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
  '%Function%': $Function,
  '%GeneratorFunction%': needsEval,
  '%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
  '%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
  '%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
  '%isFinite%': isFinite,
  '%isNaN%': isNaN,
  '%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
  '%JSON%': (typeof JSON === "undefined" ? "undefined" : _typeof(JSON)) === 'object' ? JSON : undefined,
  '%Map%': typeof Map === 'undefined' ? undefined : Map,
  '%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
  '%Math%': Math,
  '%Number%': Number,
  '%Object%': Object,
  '%parseFloat%': parseFloat,
  '%parseInt%': parseInt,
  '%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
  '%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
  '%RangeError%': RangeError,
  '%ReferenceError%': ReferenceError,
  '%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
  '%RegExp%': RegExp,
  '%Set%': typeof Set === 'undefined' ? undefined : Set,
  '%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
  '%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
  '%String%': String,
  '%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
  '%Symbol%': hasSymbols ? Symbol : undefined,
  '%SyntaxError%': $SyntaxError,
  '%ThrowTypeError%': ThrowTypeError,
  '%TypedArray%': TypedArray,
  '%TypeError%': $TypeError,
  '%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
  '%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
  '%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
  '%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
  '%URIError%': URIError,
  '%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
  '%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
  '%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

var doEval = function doEval(name) {
  var value;

  if (name === '%AsyncFunction%') {
    value = getEvalledConstructor('async function () {}');
  } else if (name === '%GeneratorFunction%') {
    value = getEvalledConstructor('function* () {}');
  } else if (name === '%AsyncGeneratorFunction%') {
    value = getEvalledConstructor('async function* () {}');
  } else if (name === '%AsyncGenerator%') {
    var fn = doEval('%AsyncGeneratorFunction%');

    if (fn) {
      value = fn.prototype;
    }
  } else if (name === '%AsyncIteratorPrototype%') {
    var gen = doEval('%AsyncGenerator%');

    if (gen) {
      value = getProto(gen.prototype);
    }
  }

  INTRINSICS[name] = value;
  return value;
};

var LEGACY_ALIASES = {
  '%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
  '%ArrayPrototype%': ['Array', 'prototype'],
  '%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
  '%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
  '%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
  '%ArrayProto_values%': ['Array', 'prototype', 'values'],
  '%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
  '%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
  '%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
  '%BooleanPrototype%': ['Boolean', 'prototype'],
  '%DataViewPrototype%': ['DataView', 'prototype'],
  '%DatePrototype%': ['Date', 'prototype'],
  '%ErrorPrototype%': ['Error', 'prototype'],
  '%EvalErrorPrototype%': ['EvalError', 'prototype'],
  '%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
  '%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
  '%FunctionPrototype%': ['Function', 'prototype'],
  '%Generator%': ['GeneratorFunction', 'prototype'],
  '%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
  '%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
  '%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
  '%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
  '%JSONParse%': ['JSON', 'parse'],
  '%JSONStringify%': ['JSON', 'stringify'],
  '%MapPrototype%': ['Map', 'prototype'],
  '%NumberPrototype%': ['Number', 'prototype'],
  '%ObjectPrototype%': ['Object', 'prototype'],
  '%ObjProto_toString%': ['Object', 'prototype', 'toString'],
  '%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
  '%PromisePrototype%': ['Promise', 'prototype'],
  '%PromiseProto_then%': ['Promise', 'prototype', 'then'],
  '%Promise_all%': ['Promise', 'all'],
  '%Promise_reject%': ['Promise', 'reject'],
  '%Promise_resolve%': ['Promise', 'resolve'],
  '%RangeErrorPrototype%': ['RangeError', 'prototype'],
  '%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
  '%RegExpPrototype%': ['RegExp', 'prototype'],
  '%SetPrototype%': ['Set', 'prototype'],
  '%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
  '%StringPrototype%': ['String', 'prototype'],
  '%SymbolPrototype%': ['Symbol', 'prototype'],
  '%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
  '%TypedArrayPrototype%': ['TypedArray', 'prototype'],
  '%TypeErrorPrototype%': ['TypeError', 'prototype'],
  '%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
  '%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
  '%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
  '%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
  '%URIErrorPrototype%': ['URIError', 'prototype'],
  '%WeakMapPrototype%': ['WeakMap', 'prototype'],
  '%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = __webpack_require__(168);

var hasOwn = __webpack_require__(309);

var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);
var $exec = bind.call(Function.call, RegExp.prototype.exec);
/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */

var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g;
/** Used to match backslashes in property paths. */

var stringToPath = function stringToPath(string) {
  var first = $strSlice(string, 0, 1);
  var last = $strSlice(string, -1);

  if (first === '%' && last !== '%') {
    throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
  } else if (last === '%' && first !== '%') {
    throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
  }

  var result = [];
  $replace(string, rePropName, function (match, number, quote, subString) {
    result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
  });
  return result;
};
/* end adaptation */


var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
  var intrinsicName = name;
  var alias;

  if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
    alias = LEGACY_ALIASES[intrinsicName];
    intrinsicName = '%' + alias[0] + '%';
  }

  if (hasOwn(INTRINSICS, intrinsicName)) {
    var value = INTRINSICS[intrinsicName];

    if (value === needsEval) {
      value = doEval(intrinsicName);
    }

    if (typeof value === 'undefined' && !allowMissing) {
      throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
    }

    return {
      alias: alias,
      name: intrinsicName,
      value: value
    };
  }

  throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
  if (typeof name !== 'string' || name.length === 0) {
    throw new $TypeError('intrinsic name must be a non-empty string');
  }

  if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
    throw new $TypeError('"allowMissing" argument must be a boolean');
  }

  if ($exec(/^%?[^%]*%?$/, name) === null) {
    throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
  }

  var parts = stringToPath(name);
  var intrinsicBaseName = parts.length > 0 ? parts[0] : '';
  var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
  var intrinsicRealName = intrinsic.name;
  var value = intrinsic.value;
  var skipFurtherCaching = false;
  var alias = intrinsic.alias;

  if (alias) {
    intrinsicBaseName = alias[0];
    $spliceApply(parts, $concat([0, 1], alias));
  }

  for (var i = 1, isOwn = true; i < parts.length; i += 1) {
    var part = parts[i];
    var first = $strSlice(part, 0, 1);
    var last = $strSlice(part, -1);

    if ((first === '"' || first === "'" || first === '`' || last === '"' || last === "'" || last === '`') && first !== last) {
      throw new $SyntaxError('property names with quotes must have matching quotes');
    }

    if (part === 'constructor' || !isOwn) {
      skipFurtherCaching = true;
    }

    intrinsicBaseName += '.' + part;
    intrinsicRealName = '%' + intrinsicBaseName + '%';

    if (hasOwn(INTRINSICS, intrinsicRealName)) {
      value = INTRINSICS[intrinsicRealName];
    } else if (value != null) {
      if (!(part in value)) {
        if (!allowMissing) {
          throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
        }

        return void undefined;
      }

      if ($gOPD && i + 1 >= parts.length) {
        var desc = $gOPD(value, part);
        isOwn = !!desc; // By convention, when a data property is converted to an accessor
        // property to emulate a data property that does not suffer from
        // the override mistake, that accessor's getter is marked with
        // an `originalValue` property. Here, when we detect this, we
        // uphold the illusion by pretending to see that original data
        // property, i.e., returning the value rather than the getter
        // itself.

        if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
          value = desc.get;
        } else {
          value = value[part];
        }
      } else {
        isOwn = hasOwn(value, part);
        value = value[part];
      }

      if (isOwn && !skipFurtherCaching) {
        INTRINSICS[intrinsicRealName] = value;
      }
    }
  }

  return value;
};

/***/ }),
/* 707 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var origSymbol = typeof Symbol !== 'undefined' && Symbol;

var hasSymbolSham = __webpack_require__(708);

module.exports = function hasNativeSymbols() {
  if (typeof origSymbol !== 'function') {
    return false;
  }

  if (typeof Symbol !== 'function') {
    return false;
  }

  if (_typeof(origSymbol('foo')) !== 'symbol') {
    return false;
  }

  if (_typeof(Symbol('bar')) !== 'symbol') {
    return false;
  }

  return hasSymbolSham();
};

/***/ }),
/* 708 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* eslint complexity: [2, 18], max-statements: [2, 33] */

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

module.exports = function hasSymbols() {
  if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') {
    return false;
  }

  if (_typeof(Symbol.iterator) === 'symbol') {
    return true;
  }

  var obj = {};
  var sym = Symbol('test');
  var symObj = Object(sym);

  if (typeof sym === 'string') {
    return false;
  }

  if (Object.prototype.toString.call(sym) !== '[object Symbol]') {
    return false;
  }

  if (Object.prototype.toString.call(symObj) !== '[object Symbol]') {
    return false;
  } // temp disabled per https://github.com/ljharb/object.assign/issues/17
  // if (sym instanceof Symbol) { return false; }
  // temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
  // if (!(symObj instanceof Symbol)) { return false; }
  // if (typeof Symbol.prototype.toString !== 'function') { return false; }
  // if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }


  var symVal = 42;
  obj[sym] = symVal;

  for (sym in obj) {
    return false;
  } // eslint-disable-line no-restricted-syntax, no-unreachable-loop


  if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) {
    return false;
  }

  if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) {
    return false;
  }

  var syms = Object.getOwnPropertySymbols(obj);

  if (syms.length !== 1 || syms[0] !== sym) {
    return false;
  }

  if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
    return false;
  }

  if (typeof Object.getOwnPropertyDescriptor === 'function') {
    var descriptor = Object.getOwnPropertyDescriptor(obj, sym);

    if (descriptor.value !== symVal || descriptor.enumerable !== true) {
      return false;
    }
  }

  return true;
};

/***/ }),
/* 709 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
  var target = this;

  if (typeof target !== 'function' || toStr.call(target) !== funcType) {
    throw new TypeError(ERROR_MESSAGE + target);
  }

  var args = slice.call(arguments, 1);
  var bound;

  var binder = function binder() {
    if (this instanceof bound) {
      var result = target.apply(this, args.concat(slice.call(arguments)));

      if (Object(result) === result) {
        return result;
      }

      return this;
    } else {
      return target.apply(that, args.concat(slice.call(arguments)));
    }
  };

  var boundLength = Math.max(0, target.length - args.length);
  var boundArgs = [];

  for (var i = 0; i < boundLength; i++) {
    boundArgs.push('$' + i);
  }

  bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

  if (target.prototype) {
    var Empty = function Empty() {};

    Empty.prototype = target.prototype;
    bound.prototype = new Empty();
    Empty.prototype = null;
  }

  return bound;
};

/***/ }),
/* 710 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(310);

var callBind = __webpack_require__(713);

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
  var intrinsic = GetIntrinsic(name, !!allowMissing);

  if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
    return callBind(intrinsic);
  }

  return intrinsic;
};

/***/ }),
/* 711 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var origSymbol = typeof Symbol !== 'undefined' && Symbol;

var hasSymbolSham = __webpack_require__(712);

module.exports = function hasNativeSymbols() {
  if (typeof origSymbol !== 'function') {
    return false;
  }

  if (typeof Symbol !== 'function') {
    return false;
  }

  if (_typeof(origSymbol('foo')) !== 'symbol') {
    return false;
  }

  if (_typeof(Symbol('bar')) !== 'symbol') {
    return false;
  }

  return hasSymbolSham();
};

/***/ }),
/* 712 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* eslint complexity: [2, 18], max-statements: [2, 33] */

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

module.exports = function hasSymbols() {
  if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') {
    return false;
  }

  if (_typeof(Symbol.iterator) === 'symbol') {
    return true;
  }

  var obj = {};
  var sym = Symbol('test');
  var symObj = Object(sym);

  if (typeof sym === 'string') {
    return false;
  }

  if (Object.prototype.toString.call(sym) !== '[object Symbol]') {
    return false;
  }

  if (Object.prototype.toString.call(symObj) !== '[object Symbol]') {
    return false;
  } // temp disabled per https://github.com/ljharb/object.assign/issues/17
  // if (sym instanceof Symbol) { return false; }
  // temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
  // if (!(symObj instanceof Symbol)) { return false; }
  // if (typeof Symbol.prototype.toString !== 'function') { return false; }
  // if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }


  var symVal = 42;
  obj[sym] = symVal;

  for (sym in obj) {
    return false;
  } // eslint-disable-line no-restricted-syntax, no-unreachable-loop


  if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) {
    return false;
  }

  if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) {
    return false;
  }

  var syms = Object.getOwnPropertySymbols(obj);

  if (syms.length !== 1 || syms[0] !== sym) {
    return false;
  }

  if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
    return false;
  }

  if (typeof Object.getOwnPropertyDescriptor === 'function') {
    var descriptor = Object.getOwnPropertyDescriptor(obj, sym);

    if (descriptor.value !== symVal || descriptor.enumerable !== true) {
      return false;
    }
  }

  return true;
};

/***/ }),
/* 713 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(168);

var GetIntrinsic = __webpack_require__(310);

var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);
var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
var $max = GetIntrinsic('%Math.max%');

if ($defineProperty) {
  try {
    $defineProperty({}, 'a', {
      value: 1
    });
  } catch (e) {
    // IE 8 has a broken defineProperty
    $defineProperty = null;
  }
}

module.exports = function callBind(originalFunction) {
  var func = $reflectApply(bind, $call, arguments);

  if ($gOPD && $defineProperty) {
    var desc = $gOPD(func, 'length');

    if (desc.configurable) {
      // original length, plus the receiver, minus any additional arguments (after the receiver)
      $defineProperty(func, 'length', {
        value: 1 + $max(0, originalFunction.length - (arguments.length - 1))
      });
    }
  }

  return func;
};

var applyBind = function applyBind() {
  return $reflectApply(bind, $apply, arguments);
};

if ($defineProperty) {
  $defineProperty(module.exports, 'apply', {
    value: applyBind
  });
} else {
  module.exports.apply = applyBind;
}

/***/ }),
/* 714 */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var hasMap = typeof Map === 'function' && Map.prototype;
var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
var mapForEach = hasMap && Map.prototype.forEach;
var hasSet = typeof Set === 'function' && Set.prototype;
var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
var setForEach = hasSet && Set.prototype.forEach;
var hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;
var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
var hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;
var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
var hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;
var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
var booleanValueOf = Boolean.prototype.valueOf;
var objectToString = Object.prototype.toString;
var functionToString = Function.prototype.toString;
var $match = String.prototype.match;
var $slice = String.prototype.slice;
var $replace = String.prototype.replace;
var $toUpperCase = String.prototype.toUpperCase;
var $toLowerCase = String.prototype.toLowerCase;
var $test = RegExp.prototype.test;
var $concat = Array.prototype.concat;
var $join = Array.prototype.join;
var $arrSlice = Array.prototype.slice;
var $floor = Math.floor;
var bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;
var gOPS = Object.getOwnPropertySymbols;
var symToString = typeof Symbol === 'function' && _typeof(Symbol.iterator) === 'symbol' ? Symbol.prototype.toString : null;
var hasShammedSymbols = typeof Symbol === 'function' && _typeof(Symbol.iterator) === 'object'; // ie, `has-tostringtag/shams

var toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (_typeof(Symbol.toStringTag) === hasShammedSymbols ? 'object' : 'symbol') ? Symbol.toStringTag : null;
var isEnumerable = Object.prototype.propertyIsEnumerable;
var gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype // eslint-disable-line no-proto
? function (O) {
  return O.__proto__; // eslint-disable-line no-proto
} : null);

function addNumericSeparator(num, str) {
  if (num === Infinity || num === -Infinity || num !== num || num && num > -1000 && num < 1000 || $test.call(/e/, str)) {
    return str;
  }

  var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;

  if (typeof num === 'number') {
    var _int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)


    if (_int !== num) {
      var intStr = String(_int);
      var dec = $slice.call(str, intStr.length + 1);
      return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');
    }
  }

  return $replace.call(str, sepRegex, '$&_');
}

var utilInspect = __webpack_require__(715);

var inspectCustom = utilInspect.custom;
var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;

module.exports = function inspect_(obj, options, depth, seen) {
  var opts = options || {};

  if (has(opts, 'quoteStyle') && opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double') {
    throw new TypeError('option "quoteStyle" must be "single" or "double"');
  }

  if (has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number' ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity : opts.maxStringLength !== null)) {
    throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
  }

  var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;

  if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {
    throw new TypeError('option "customInspect", if provided, must be `true`, `false`, or `\'symbol\'`');
  }

  if (has(opts, 'indent') && opts.indent !== null && opts.indent !== '\t' && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)) {
    throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
  }

  if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {
    throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
  }

  var numericSeparator = opts.numericSeparator;

  if (typeof obj === 'undefined') {
    return 'undefined';
  }

  if (obj === null) {
    return 'null';
  }

  if (typeof obj === 'boolean') {
    return obj ? 'true' : 'false';
  }

  if (typeof obj === 'string') {
    return inspectString(obj, opts);
  }

  if (typeof obj === 'number') {
    if (obj === 0) {
      return Infinity / obj > 0 ? '0' : '-0';
    }

    var str = String(obj);
    return numericSeparator ? addNumericSeparator(obj, str) : str;
  }

  if (typeof obj === 'bigint') {
    var bigIntStr = String(obj) + 'n';
    return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;
  }

  var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;

  if (typeof depth === 'undefined') {
    depth = 0;
  }

  if (depth >= maxDepth && maxDepth > 0 && _typeof(obj) === 'object') {
    return isArray(obj) ? '[Array]' : '[Object]';
  }

  var indent = getIndent(opts, depth);

  if (typeof seen === 'undefined') {
    seen = [];
  } else if (indexOf(seen, obj) >= 0) {
    return '[Circular]';
  }

  function inspect(value, from, noIndent) {
    if (from) {
      seen = $arrSlice.call(seen);
      seen.push(from);
    }

    if (noIndent) {
      var newOpts = {
        depth: opts.depth
      };

      if (has(opts, 'quoteStyle')) {
        newOpts.quoteStyle = opts.quoteStyle;
      }

      return inspect_(value, newOpts, depth + 1, seen);
    }

    return inspect_(value, opts, depth + 1, seen);
  }

  if (typeof obj === 'function' && !isRegExp(obj)) {
    // in older engines, regexes are callable
    var name = nameOf(obj);
    var keys = arrObjKeys(obj, inspect);
    return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');
  }

  if (isSymbol(obj)) {
    var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, '$1') : symToString.call(obj);
    return _typeof(obj) === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;
  }

  if (isElement(obj)) {
    var s = '<' + $toLowerCase.call(String(obj.nodeName));
    var attrs = obj.attributes || [];

    for (var i = 0; i < attrs.length; i++) {
      s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);
    }

    s += '>';

    if (obj.childNodes && obj.childNodes.length) {
      s += '...';
    }

    s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';
    return s;
  }

  if (isArray(obj)) {
    if (obj.length === 0) {
      return '[]';
    }

    var xs = arrObjKeys(obj, inspect);

    if (indent && !singleLineValues(xs)) {
      return '[' + indentedJoin(xs, indent) + ']';
    }

    return '[ ' + $join.call(xs, ', ') + ' ]';
  }

  if (isError(obj)) {
    var parts = arrObjKeys(obj, inspect);

    if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {
      return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';
    }

    if (parts.length === 0) {
      return '[' + String(obj) + ']';
    }

    return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';
  }

  if (_typeof(obj) === 'object' && customInspect) {
    if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {
      return utilInspect(obj, {
        depth: maxDepth - depth
      });
    } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {
      return obj.inspect();
    }
  }

  if (isMap(obj)) {
    var mapParts = [];
    mapForEach.call(obj, function (value, key) {
      mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));
    });
    return collectionOf('Map', mapSize.call(obj), mapParts, indent);
  }

  if (isSet(obj)) {
    var setParts = [];
    setForEach.call(obj, function (value) {
      setParts.push(inspect(value, obj));
    });
    return collectionOf('Set', setSize.call(obj), setParts, indent);
  }

  if (isWeakMap(obj)) {
    return weakCollectionOf('WeakMap');
  }

  if (isWeakSet(obj)) {
    return weakCollectionOf('WeakSet');
  }

  if (isWeakRef(obj)) {
    return weakCollectionOf('WeakRef');
  }

  if (isNumber(obj)) {
    return markBoxed(inspect(Number(obj)));
  }

  if (isBigInt(obj)) {
    return markBoxed(inspect(bigIntValueOf.call(obj)));
  }

  if (isBoolean(obj)) {
    return markBoxed(booleanValueOf.call(obj));
  }

  if (isString(obj)) {
    return markBoxed(inspect(String(obj)));
  }

  if (!isDate(obj) && !isRegExp(obj)) {
    var ys = arrObjKeys(obj, inspect);
    var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
    var protoTag = obj instanceof Object ? '' : 'null prototype';
    var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';
    var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';
    var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');

    if (ys.length === 0) {
      return tag + '{}';
    }

    if (indent) {
      return tag + '{' + indentedJoin(ys, indent) + '}';
    }

    return tag + '{ ' + $join.call(ys, ', ') + ' }';
  }

  return String(obj);
};

function wrapQuotes(s, defaultStyle, opts) {
  var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '"' : "'";
  return quoteChar + s + quoteChar;
}

function quote(s) {
  return $replace.call(String(s), /"/g, '&quot;');
}

function isArray(obj) {
  return toStr(obj) === '[object Array]' && (!toStringTag || !(_typeof(obj) === 'object' && toStringTag in obj));
}

function isDate(obj) {
  return toStr(obj) === '[object Date]' && (!toStringTag || !(_typeof(obj) === 'object' && toStringTag in obj));
}

function isRegExp(obj) {
  return toStr(obj) === '[object RegExp]' && (!toStringTag || !(_typeof(obj) === 'object' && toStringTag in obj));
}

function isError(obj) {
  return toStr(obj) === '[object Error]' && (!toStringTag || !(_typeof(obj) === 'object' && toStringTag in obj));
}

function isString(obj) {
  return toStr(obj) === '[object String]' && (!toStringTag || !(_typeof(obj) === 'object' && toStringTag in obj));
}

function isNumber(obj) {
  return toStr(obj) === '[object Number]' && (!toStringTag || !(_typeof(obj) === 'object' && toStringTag in obj));
}

function isBoolean(obj) {
  return toStr(obj) === '[object Boolean]' && (!toStringTag || !(_typeof(obj) === 'object' && toStringTag in obj));
} // Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives


function isSymbol(obj) {
  if (hasShammedSymbols) {
    return obj && _typeof(obj) === 'object' && obj instanceof Symbol;
  }

  if (_typeof(obj) === 'symbol') {
    return true;
  }

  if (!obj || _typeof(obj) !== 'object' || !symToString) {
    return false;
  }

  try {
    symToString.call(obj);
    return true;
  } catch (e) {}

  return false;
}

function isBigInt(obj) {
  if (!obj || _typeof(obj) !== 'object' || !bigIntValueOf) {
    return false;
  }

  try {
    bigIntValueOf.call(obj);
    return true;
  } catch (e) {}

  return false;
}

var hasOwn = Object.prototype.hasOwnProperty || function (key) {
  return key in this;
};

function has(obj, key) {
  return hasOwn.call(obj, key);
}

function toStr(obj) {
  return objectToString.call(obj);
}

function nameOf(f) {
  if (f.name) {
    return f.name;
  }

  var m = $match.call(functionToString.call(f), /^function\s*([\w$]+)/);

  if (m) {
    return m[1];
  }

  return null;
}

function indexOf(xs, x) {
  if (xs.indexOf) {
    return xs.indexOf(x);
  }

  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) {
      return i;
    }
  }

  return -1;
}

function isMap(x) {
  if (!mapSize || !x || _typeof(x) !== 'object') {
    return false;
  }

  try {
    mapSize.call(x);

    try {
      setSize.call(x);
    } catch (s) {
      return true;
    }

    return x instanceof Map; // core-js workaround, pre-v2.5.0
  } catch (e) {}

  return false;
}

function isWeakMap(x) {
  if (!weakMapHas || !x || _typeof(x) !== 'object') {
    return false;
  }

  try {
    weakMapHas.call(x, weakMapHas);

    try {
      weakSetHas.call(x, weakSetHas);
    } catch (s) {
      return true;
    }

    return x instanceof WeakMap; // core-js workaround, pre-v2.5.0
  } catch (e) {}

  return false;
}

function isWeakRef(x) {
  if (!weakRefDeref || !x || _typeof(x) !== 'object') {
    return false;
  }

  try {
    weakRefDeref.call(x);
    return true;
  } catch (e) {}

  return false;
}

function isSet(x) {
  if (!setSize || !x || _typeof(x) !== 'object') {
    return false;
  }

  try {
    setSize.call(x);

    try {
      mapSize.call(x);
    } catch (m) {
      return true;
    }

    return x instanceof Set; // core-js workaround, pre-v2.5.0
  } catch (e) {}

  return false;
}

function isWeakSet(x) {
  if (!weakSetHas || !x || _typeof(x) !== 'object') {
    return false;
  }

  try {
    weakSetHas.call(x, weakSetHas);

    try {
      weakMapHas.call(x, weakMapHas);
    } catch (s) {
      return true;
    }

    return x instanceof WeakSet; // core-js workaround, pre-v2.5.0
  } catch (e) {}

  return false;
}

function isElement(x) {
  if (!x || _typeof(x) !== 'object') {
    return false;
  }

  if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
    return true;
  }

  return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';
}

function inspectString(str, opts) {
  if (str.length > opts.maxStringLength) {
    var remaining = str.length - opts.maxStringLength;
    var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');
    return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;
  } // eslint-disable-next-line no-control-regex


  var s = $replace.call($replace.call(str, /(['\\])/g, '\\$1'), /[\x00-\x1f]/g, lowbyte);
  return wrapQuotes(s, 'single', opts);
}

function lowbyte(c) {
  var n = c.charCodeAt(0);
  var x = {
    8: 'b',
    9: 't',
    10: 'n',
    12: 'f',
    13: 'r'
  }[n];

  if (x) {
    return '\\' + x;
  }

  return '\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));
}

function markBoxed(str) {
  return 'Object(' + str + ')';
}

function weakCollectionOf(type) {
  return type + ' { ? }';
}

function collectionOf(type, size, entries, indent) {
  var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');
  return type + ' (' + size + ') {' + joinedEntries + '}';
}

function singleLineValues(xs) {
  for (var i = 0; i < xs.length; i++) {
    if (indexOf(xs[i], '\n') >= 0) {
      return false;
    }
  }

  return true;
}

function getIndent(opts, depth) {
  var baseIndent;

  if (opts.indent === '\t') {
    baseIndent = '\t';
  } else if (typeof opts.indent === 'number' && opts.indent > 0) {
    baseIndent = $join.call(Array(opts.indent + 1), ' ');
  } else {
    return null;
  }

  return {
    base: baseIndent,
    prev: $join.call(Array(depth + 1), baseIndent)
  };
}

function indentedJoin(xs, indent) {
  if (xs.length === 0) {
    return '';
  }

  var lineJoiner = '\n' + indent.prev + indent.base;
  return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\n' + indent.prev;
}

function arrObjKeys(obj, inspect) {
  var isArr = isArray(obj);
  var xs = [];

  if (isArr) {
    xs.length = obj.length;

    for (var i = 0; i < obj.length; i++) {
      xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
    }
  }

  var syms = typeof gOPS === 'function' ? gOPS(obj) : [];
  var symMap;

  if (hasShammedSymbols) {
    symMap = {};

    for (var k = 0; k < syms.length; k++) {
      symMap['$' + syms[k]] = syms[k];
    }
  }

  for (var key in obj) {
    // eslint-disable-line no-restricted-syntax
    if (!has(obj, key)) {
      continue;
    } // eslint-disable-line no-restricted-syntax, no-continue


    if (isArr && String(Number(key)) === key && key < obj.length) {
      continue;
    } // eslint-disable-line no-restricted-syntax, no-continue


    if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {
      // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section
      continue; // eslint-disable-line no-restricted-syntax, no-continue
    } else if ($test.call(/[^\w$]/, key)) {
      xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));
    } else {
      xs.push(key + ': ' + inspect(obj[key], obj));
    }
  }

  if (typeof gOPS === 'function') {
    for (var j = 0; j < syms.length; j++) {
      if (isEnumerable.call(obj, syms[j])) {
        xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));
      }
    }
  }

  return xs;
}

/***/ }),
/* 715 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(82).inspect;

/***/ }),
/* 716 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(311);

var has = Object.prototype.hasOwnProperty;
var isArray = Array.isArray;
var defaults = {
  allowDots: false,
  allowPrototypes: false,
  allowSparse: false,
  arrayLimit: 20,
  charset: 'utf-8',
  charsetSentinel: false,
  comma: false,
  decoder: utils.decode,
  delimiter: '&',
  depth: 5,
  ignoreQueryPrefix: false,
  interpretNumericEntities: false,
  parameterLimit: 1000,
  parseArrays: true,
  plainObjects: false,
  strictNullHandling: false
};

var interpretNumericEntities = function interpretNumericEntities(str) {
  return str.replace(/&#(\d+);/g, function ($0, numberStr) {
    return String.fromCharCode(parseInt(numberStr, 10));
  });
};

var parseArrayValue = function parseArrayValue(val, options) {
  if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {
    return val.split(',');
  }

  return val;
}; // This is what browsers will submit when the ✓ character occurs in an
// application/x-www-form-urlencoded body and the encoding of the page containing
// the form is iso-8859-1, or when the submitted form has an accept-charset
// attribute of iso-8859-1. Presumably also with other charsets that do not contain
// the ✓ character, such as us-ascii.


var isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')
// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.

var charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')

var parseValues = function parseQueryStringValues(str, options) {
  var obj = {};
  var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
  var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
  var parts = cleanStr.split(options.delimiter, limit);
  var skipIndex = -1; // Keep track of where the utf8 sentinel was found

  var i;
  var charset = options.charset;

  if (options.charsetSentinel) {
    for (i = 0; i < parts.length; ++i) {
      if (parts[i].indexOf('utf8=') === 0) {
        if (parts[i] === charsetSentinel) {
          charset = 'utf-8';
        } else if (parts[i] === isoSentinel) {
          charset = 'iso-8859-1';
        }

        skipIndex = i;
        i = parts.length; // The eslint settings do not allow break;
      }
    }
  }

  for (i = 0; i < parts.length; ++i) {
    if (i === skipIndex) {
      continue;
    }

    var part = parts[i];
    var bracketEqualsPos = part.indexOf(']=');
    var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;
    var key, val;

    if (pos === -1) {
      key = options.decoder(part, defaults.decoder, charset, 'key');
      val = options.strictNullHandling ? null : '';
    } else {
      key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');
      val = utils.maybeMap(parseArrayValue(part.slice(pos + 1), options), function (encodedVal) {
        return options.decoder(encodedVal, defaults.decoder, charset, 'value');
      });
    }

    if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {
      val = interpretNumericEntities(val);
    }

    if (part.indexOf('[]=') > -1) {
      val = isArray(val) ? [val] : val;
    }

    if (has.call(obj, key)) {
      obj[key] = utils.combine(obj[key], val);
    } else {
      obj[key] = val;
    }
  }

  return obj;
};

var parseObject = function parseObject(chain, val, options, valuesParsed) {
  var leaf = valuesParsed ? val : parseArrayValue(val, options);

  for (var i = chain.length - 1; i >= 0; --i) {
    var obj;
    var root = chain[i];

    if (root === '[]' && options.parseArrays) {
      obj = [].concat(leaf);
    } else {
      obj = options.plainObjects ? Object.create(null) : {};
      var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;
      var index = parseInt(cleanRoot, 10);

      if (!options.parseArrays && cleanRoot === '') {
        obj = {
          0: leaf
        };
      } else if (!isNaN(index) && root !== cleanRoot && String(index) === cleanRoot && index >= 0 && options.parseArrays && index <= options.arrayLimit) {
        obj = [];
        obj[index] = leaf;
      } else if (cleanRoot !== '__proto__') {
        obj[cleanRoot] = leaf;
      }
    }

    leaf = obj;
  }

  return leaf;
};

var parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {
  if (!givenKey) {
    return;
  } // Transform dot notation to bracket notation


  var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, '[$1]') : givenKey; // The regex chunks

  var brackets = /(\[[^[\]]*])/;
  var child = /(\[[^[\]]*])/g; // Get the parent

  var segment = options.depth > 0 && brackets.exec(key);
  var parent = segment ? key.slice(0, segment.index) : key; // Stash the parent if it exists

  var keys = [];

  if (parent) {
    // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties
    if (!options.plainObjects && has.call(Object.prototype, parent)) {
      if (!options.allowPrototypes) {
        return;
      }
    }

    keys.push(parent);
  } // Loop through children appending to the array until we hit depth


  var i = 0;

  while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {
    i += 1;

    if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
      if (!options.allowPrototypes) {
        return;
      }
    }

    keys.push(segment[1]);
  } // If there's a remainder, just add whatever is left


  if (segment) {
    keys.push('[' + key.slice(segment.index) + ']');
  }

  return parseObject(keys, val, options, valuesParsed);
};

var normalizeParseOptions = function normalizeParseOptions(opts) {
  if (!opts) {
    return defaults;
  }

  if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {
    throw new TypeError('Decoder has to be a function.');
  }

  if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
    throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
  }

  var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;
  return {
    allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
    allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,
    allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,
    arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,
    charset: charset,
    charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
    comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,
    decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,
    delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
    // eslint-disable-next-line no-implicit-coercion, no-extra-parens
    depth: typeof opts.depth === 'number' || opts.depth === false ? +opts.depth : defaults.depth,
    ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
    interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
    parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,
    parseArrays: opts.parseArrays !== false,
    plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,
    strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
  };
};

module.exports = function (str, opts) {
  var options = normalizeParseOptions(opts);

  if (str === '' || str === null || typeof str === 'undefined') {
    return options.plainObjects ? Object.create(null) : {};
  }

  var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
  var obj = options.plainObjects ? Object.create(null) : {}; // Iterate over the keys and setup the new object

  var keys = Object.keys(tempObj);

  for (var i = 0; i < keys.length; ++i) {
    var key = keys[i];
    var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');
    obj = utils.merge(obj, newObj, options);
  }

  if (options.allowSparse === true) {
    return obj;
  }

  return utils.compact(obj);
};

/***/ }),
/* 717 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = createContentfulApi;

var _contentfulSdkCore = __webpack_require__(56);

var _entities = _interopRequireDefault(__webpack_require__(718));

var _pagedSync = _interopRequireDefault(__webpack_require__(727));

var _normalizeSelect = _interopRequireDefault(__webpack_require__(728));

var _validateTimestamp = _interopRequireDefault(__webpack_require__(729));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var ASSET_KEY_MAX_LIFETIME = 48 * 60 * 60;
/**
 * Creates API object with methods to access functionality from Contentful's
 * Delivery API
 * @private
 * @param {Object} params - API initialization params
 * @prop {Object} http - HTTP client instance
 * @prop {Object} entities - Object with wrapper methods for each kind of entity
 * @prop {Function} getGlobalOptions - Link resolver preconfigured with global setting
 * @return {ClientAPI}
 */

function createContentfulApi(_ref) {
  var http = _ref.http,
      getGlobalOptions = _ref.getGlobalOptions;
  var wrapSpace = _entities["default"].space.wrapSpace;
  var _entities$default$con = _entities["default"].contentType,
      wrapContentType = _entities$default$con.wrapContentType,
      wrapContentTypeCollection = _entities$default$con.wrapContentTypeCollection;
  var _entities$default$ent = _entities["default"].entry,
      wrapEntry = _entities$default$ent.wrapEntry,
      wrapEntryCollection = _entities$default$ent.wrapEntryCollection;
  var _entities$default$ass = _entities["default"].asset,
      wrapAsset = _entities$default$ass.wrapAsset,
      wrapAssetCollection = _entities$default$ass.wrapAssetCollection;
  var _entities$default$tag = _entities["default"].tag,
      wrapTag = _entities$default$tag.wrapTag,
      wrapTagCollection = _entities$default$tag.wrapTagCollection;
  var wrapAssetKey = _entities["default"].assetKey.wrapAssetKey;
  var wrapLocaleCollection = _entities["default"].locale.wrapLocaleCollection;

  var notFoundError = function notFoundError(id) {
    var error = new Error('The resource could not be found.');
    error.sys = {
      type: 'Error',
      id: 'NotFound'
    };
    error.details = {
      type: 'Entry',
      id: id,
      environment: getGlobalOptions().environment,
      space: getGlobalOptions().space
    };
    return error;
  };
  /**
   * Gets the Space which the client is currently configured to use
   * @memberof ContentfulClientAPI
   * @return {Promise<Entities.Space>} Promise for a Space
   * @example
   * const contentful = require('contentful')
   *
   * const client = contentful.createClient({
   *   space: '<space_id>',
   *   accessToken: '<content_delivery_api_key>'
   * })
   * // returns the space object with the above <space-id>
   * const space = await client.getSpace()
   * console.log(space)
   */


  function getSpace() {
    return _getSpace.apply(this, arguments);
  }
  /**
   * Gets a Content Type
   * @memberof ContentfulClientAPI
   * @param  {string} id
   * @return {Promise<Entities.ContentType>} Promise for a Content Type
   * @example
   * const contentful = require('contentful')
   *
   * const client = contentful.createClient({
   *   space: '<space_id>',
   *   accessToken: '<content_delivery_api_key>'
   * })
   *
   * const contentType = await client.getContentType('<content_type_id>')
   * console.log(contentType)
   */


  function _getSpace() {
    _getSpace = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
      var response;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              switchToSpace(http);
              _context.prev = 1;
              _context.next = 4;
              return http.get('/');

            case 4:
              response = _context.sent;
              return _context.abrupt("return", wrapSpace(response.data));

            case 8:
              _context.prev = 8;
              _context.t0 = _context["catch"](1);
              (0, _contentfulSdkCore.errorHandler)(_context.t0);

            case 11:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[1, 8]]);
    }));
    return _getSpace.apply(this, arguments);
  }

  function getContentType(_x) {
    return _getContentType.apply(this, arguments);
  }
  /**
   * Gets a collection of Content Types
   * @memberof ContentfulClientAPI
   * @param  {Object=} query - Object with search parameters. Check the <a href="https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters">JS SDK tutorial</a> and the <a href="https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters">REST API reference</a> for more details.
   * @return {Promise<Entities.ContentTypeCollection>} Promise for a collection of Content Types
   * @example
   * const contentful = require('contentful')
   *
   * const client = contentful.createClient({
   *   space: '<space_id>',
   *   accessToken: '<content_delivery_api_key>'
   * })
   *
   * const response = await client.getContentTypes()
   * console.log(response.items)
   */


  function _getContentType() {
    _getContentType = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id) {
      var response;
      return regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              switchToEnvironment(http);
              _context2.prev = 1;
              _context2.next = 4;
              return http.get("content_types/".concat(id));

            case 4:
              response = _context2.sent;
              return _context2.abrupt("return", wrapContentType(response.data));

            case 8:
              _context2.prev = 8;
              _context2.t0 = _context2["catch"](1);
              (0, _contentfulSdkCore.errorHandler)(_context2.t0);

            case 11:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2, null, [[1, 8]]);
    }));
    return _getContentType.apply(this, arguments);
  }

  function getContentTypes() {
    return _getContentTypes.apply(this, arguments);
  }
  /**
   * Gets an Entry
   * @memberof ContentfulClientAPI
   * @param  {string} id
   * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.
   * @return {Promise<Entities.Entry>} Promise for an Entry
   * @example
   * const contentful = require('contentful')
   *
   * const client = contentful.createClient({
   *   space: '<space_id>',
   *   accessToken: '<content_delivery_api_key>'
   * })
   *
   * const entry = await client.getEntry('<entry_id>')
   * console.log(entry)
   */


  function _getContentTypes() {
    _getContentTypes = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
      var query,
          response,
          _args3 = arguments;
      return regeneratorRuntime.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              query = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};
              switchToEnvironment(http);
              _context3.prev = 2;
              _context3.next = 5;
              return http.get('content_types', (0, _contentfulSdkCore.createRequestConfig)({
                query: query
              }));

            case 5:
              response = _context3.sent;
              return _context3.abrupt("return", wrapContentTypeCollection(response.data));

            case 9:
              _context3.prev = 9;
              _context3.t0 = _context3["catch"](2);
              (0, _contentfulSdkCore.errorHandler)(_context3.t0);

            case 12:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3, null, [[2, 9]]);
    }));
    return _getContentTypes.apply(this, arguments);
  }

  function getEntry(_x2) {
    return _getEntry.apply(this, arguments);
  }
  /**
   * Gets a collection of Entries
   * @memberof ContentfulClientAPI
   * @param  {Object=} query - Object with search parameters. Check the <a href="https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters">JS SDK tutorial</a> and the <a href="https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters">REST API reference</a> for more details.
   * @return {Promise<Entities.EntryCollection>} Promise for a collection of Entries
   * @example
   * const contentful = require('contentful')
   *
   * const client = contentful.createClient({
   *   space: '<space_id>',
   *   accessToken: '<content_delivery_api_key>'
   * })
   *
   * const response = await client.getEntries()
   * console.log(response.items)
   */


  function _getEntry() {
    _getEntry = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(id) {
      var query,
          response,
          _args4 = arguments;
      return regeneratorRuntime.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              query = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};

              if (id) {
                _context4.next = 3;
                break;
              }

              throw notFoundError(id);

            case 3:
              _context4.prev = 3;
              _context4.next = 6;
              return this.getEntries(_objectSpread({
                'sys.id': id
              }, query));

            case 6:
              response = _context4.sent;

              if (!(response.items.length > 0)) {
                _context4.next = 11;
                break;
              }

              return _context4.abrupt("return", wrapEntry(response.items[0]));

            case 11:
              throw notFoundError(id);

            case 12:
              _context4.next = 17;
              break;

            case 14:
              _context4.prev = 14;
              _context4.t0 = _context4["catch"](3);
              (0, _contentfulSdkCore.errorHandler)(_context4.t0);

            case 17:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4, this, [[3, 14]]);
    }));
    return _getEntry.apply(this, arguments);
  }

  function getEntries() {
    return _getEntries.apply(this, arguments);
  }
  /**
   * Gets an Asset
   * @memberof ContentfulClientAPI
   * @param  {string} id
   * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.
   * @return {Promise<Entities.Asset>} Promise for an Asset
   * @example
   * const contentful = require('contentful')
   *
   * const client = contentful.createClient({
   *   space: '<space_id>',
   *   accessToken: '<content_delivery_api_key>'
   * })
   *
   * const asset = await client.getAsset('<asset_id>')
   * console.log(asset)
   */


  function _getEntries() {
    _getEntries = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
      var query,
          _getGlobalOptions2,
          resolveLinks,
          removeUnresolved,
          response,
          _args5 = arguments;

      return regeneratorRuntime.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              query = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {};
              switchToEnvironment(http);
              _getGlobalOptions2 = getGlobalOptions(query), resolveLinks = _getGlobalOptions2.resolveLinks, removeUnresolved = _getGlobalOptions2.removeUnresolved;
              query = (0, _normalizeSelect["default"])(query);
              _context5.prev = 4;
              _context5.next = 7;
              return http.get('entries', (0, _contentfulSdkCore.createRequestConfig)({
                query: query
              }));

            case 7:
              response = _context5.sent;
              return _context5.abrupt("return", wrapEntryCollection(response.data, {
                resolveLinks: resolveLinks,
                removeUnresolved: removeUnresolved
              }));

            case 11:
              _context5.prev = 11;
              _context5.t0 = _context5["catch"](4);
              (0, _contentfulSdkCore.errorHandler)(_context5.t0);

            case 14:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5, null, [[4, 11]]);
    }));
    return _getEntries.apply(this, arguments);
  }

  function getAsset(_x3) {
    return _getAsset.apply(this, arguments);
  }
  /**
   * Gets a collection of Assets
   * @memberof ContentfulClientAPI
   * @param  {Object=} query - Object with search parameters. Check the <a href="https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters">JS SDK tutorial</a> and the <a href="https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters">REST API reference</a> for more details.
   * @return {Promise<Entities.AssetCollection>} Promise for a collection of Assets
   * @example
   * const contentful = require('contentful')
   *
   * const client = contentful.createClient({
   *   space: '<space_id>',
   *   accessToken: '<content_delivery_api_key>'
   * })
   *
   * const response = await client.getAssets()
   * console.log(response.items)
   */


  function _getAsset() {
    _getAsset = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(id) {
      var query,
          response,
          _args6 = arguments;
      return regeneratorRuntime.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              query = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};
              switchToEnvironment(http);
              query = (0, _normalizeSelect["default"])(query);
              _context6.prev = 3;
              _context6.next = 6;
              return http.get("assets/".concat(id), (0, _contentfulSdkCore.createRequestConfig)({
                query: query
              }));

            case 6:
              response = _context6.sent;
              return _context6.abrupt("return", wrapAsset(response.data));

            case 10:
              _context6.prev = 10;
              _context6.t0 = _context6["catch"](3);
              (0, _contentfulSdkCore.errorHandler)(_context6.t0);

            case 13:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6, null, [[3, 10]]);
    }));
    return _getAsset.apply(this, arguments);
  }

  function getAssets() {
    return _getAssets.apply(this, arguments);
  }
  /**
   * Gets a Tag
   * @memberof ContentfulClientAPI
   * @param  {string} id
   * @return {Promise<Entities.Tag>} Promise for a Tag
   * @example
   * const contentful = require('contentful')
   *
   * const client = contentful.createClient({
   *   space: '<space_id>',
   *   accessToken: '<content_delivery_api_key>'
   * })
   *
   * const tag = await client.getTag('<asset_id>')
   * console.log(tag)
   */


  function _getAssets() {
    _getAssets = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {
      var query,
          response,
          _args7 = arguments;
      return regeneratorRuntime.wrap(function _callee7$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              query = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : {};
              switchToEnvironment(http);
              query = (0, _normalizeSelect["default"])(query);
              _context7.prev = 3;
              _context7.next = 6;
              return http.get('assets', (0, _contentfulSdkCore.createRequestConfig)({
                query: query
              }));

            case 6:
              response = _context7.sent;
              return _context7.abrupt("return", wrapAssetCollection(response.data));

            case 10:
              _context7.prev = 10;
              _context7.t0 = _context7["catch"](3);
              (0, _contentfulSdkCore.errorHandler)(_context7.t0);

            case 13:
            case "end":
              return _context7.stop();
          }
        }
      }, _callee7, null, [[3, 10]]);
    }));
    return _getAssets.apply(this, arguments);
  }

  function getTag(_x4) {
    return _getTag.apply(this, arguments);
  }
  /**
   * Gets a collection of Tags
   * @memberof ContentfulClientAPI
   * @param  {Object=} query - Object with search parameters.
   * @return {Promise<Entities.TagCollection>} Promise for a collection of Tags
   * @example
   * const contentful = require('contentful')
   *
   * const client = contentful.createClient({
   *   space: '<space_id>',
   *   accessToken: '<content_delivery_api_key>'
   * })
   *
   * const response = await client.getTags()
   * console.log(response.items)
   */


  function _getTag() {
    _getTag = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(id) {
      var response;
      return regeneratorRuntime.wrap(function _callee8$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              switchToEnvironment(http);
              _context8.prev = 1;
              _context8.next = 4;
              return http.get("tags/".concat(id));

            case 4:
              response = _context8.sent;
              return _context8.abrupt("return", wrapTag(response.data));

            case 8:
              _context8.prev = 8;
              _context8.t0 = _context8["catch"](1);
              (0, _contentfulSdkCore.errorHandler)(_context8.t0);

            case 11:
            case "end":
              return _context8.stop();
          }
        }
      }, _callee8, null, [[1, 8]]);
    }));
    return _getTag.apply(this, arguments);
  }

  function getTags() {
    return _getTags.apply(this, arguments);
  }
  /**
   * Creates an asset key for signing asset URLs (Embargoed Assets)
   * @memberof ContentfulClientAPI
   * @param {number} expiresAt - UNIX timestamp in the future, maximum of 48h from now
   * @return {Promise<Entities.AssetKey>} Promise for an AssetKey
   * @example
   * const contentful = require('contentful')
   *
   * const client = contentful.createClient({
   *   space: '<space_id>',
   *   accessToken: '<content_delivery_api_key>'
   * })
   *
   * const assetKey = await client.getAssetKey(<UNIX timestamp>)
   * console.log(assetKey)
   */


  function _getTags() {
    _getTags = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
      var query,
          response,
          _args9 = arguments;
      return regeneratorRuntime.wrap(function _callee9$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              query = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : {};
              switchToEnvironment(http);
              query = (0, _normalizeSelect["default"])(query);
              _context9.prev = 3;
              _context9.next = 6;
              return http.get('tags', (0, _contentfulSdkCore.createRequestConfig)({
                query: query
              }));

            case 6:
              response = _context9.sent;
              return _context9.abrupt("return", wrapTagCollection(response.data));

            case 10:
              _context9.prev = 10;
              _context9.t0 = _context9["catch"](3);
              (0, _contentfulSdkCore.errorHandler)(_context9.t0);

            case 13:
            case "end":
              return _context9.stop();
          }
        }
      }, _callee9, null, [[3, 10]]);
    }));
    return _getTags.apply(this, arguments);
  }

  function createAssetKey(_x5) {
    return _createAssetKey.apply(this, arguments);
  }
  /**
   * Gets a collection of Locale
   * @memberof ContentfulClientAPI
   * @param  {Object=} query - Object with search parameters. Check the <a href="https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters">JS SDK tutorial</a> and the <a href="https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters">REST API reference</a> for more details.
   * @return {Promise<Entities.LocaleCollection>} Promise for a collection of Locale
   * @example
   * const contentful = require('contentful')
   *
   * const client = contentful.createClient({
   *   space: '<space_id>',
   *   accessToken: '<content_delivery_api_key>'
   * })
   *
   * const response = await client.getLocales()
   * console.log(response.items)
   */


  function _createAssetKey() {
    _createAssetKey = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(expiresAt) {
      var now, currentMaxLifetime, params, response;
      return regeneratorRuntime.wrap(function _callee10$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              switchToEnvironment(http);
              _context10.prev = 1;
              now = Math.floor(Date.now() / 1000);
              currentMaxLifetime = now + ASSET_KEY_MAX_LIFETIME;
              (0, _validateTimestamp["default"])('expiresAt', expiresAt, {
                maximum: currentMaxLifetime,
                now: now
              });
              params = {
                expiresAt: expiresAt
              };
              _context10.next = 8;
              return http.post('asset_keys', params);

            case 8:
              response = _context10.sent;
              return _context10.abrupt("return", wrapAssetKey(response.data));

            case 12:
              _context10.prev = 12;
              _context10.t0 = _context10["catch"](1);
              (0, _contentfulSdkCore.errorHandler)(_context10.t0);

            case 15:
            case "end":
              return _context10.stop();
          }
        }
      }, _callee10, null, [[1, 12]]);
    }));
    return _createAssetKey.apply(this, arguments);
  }

  function getLocales() {
    return _getLocales.apply(this, arguments);
  }
  /**
   * Synchronizes either all the content or only new content since last sync
   * See <a href="https://www.contentful.com/developers/docs/concepts/sync/">Synchronization</a> for more information.
   * <strong> Important note: </strong> The the sync api endpoint does not support include or link resolution.
   * However contentful.js is doing link resolution client side if you only make an initial sync.
   * For the delta sync (using nextSyncToken) it is not possible since the sdk wont have access to all the data to make such an operation.
   * @memberof ContentfulClientAPI
   * @param  {Object} query - Query object for the sync call. One of initial or nextSyncToken always needs to be specified, but not both.
   * @param  {boolean?} query.initial - Indicates if this is the first sync. Use it if you don't have a sync token.
   * @param  {string?} query.nextSyncToken - The token you got the last time you used this method. Ensures you only get changed content.
   * @param  {string=} query.type - Filter by this type (all (default), Entry, Asset, Deletion, DeletedAsset or DeletedEntry)
   * @param  {string=} query.content_type - Filter by this content type id
   * @param  {boolean=} query.resolveLinks - When true, links to other Entries or Assets are resolved. Default: true.
   * @param  {Object} options
   * @param  {boolean=} [options.paginate = true] - Set to false to disable pagination
   * @return {Promise<Sync.SyncCollection>} Promise for the collection resulting of a sync operation
   * @example
   * const contentful = require('contentful')
   *
   * const client = contentful.createClient({
   *   space: '<space_id>',
   *   accessToken: '<content_delivery_api_key>'
   * })
   *
   * const response = await client.sync({
   *   initial: true
   * })
   * console.log({
   *   entries: response.entries,
   *   assets: response.assets,
   *   nextSyncToken: response.nextSyncToken
   * })
   */


  function _getLocales() {
    _getLocales = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {
      var query,
          response,
          _args11 = arguments;
      return regeneratorRuntime.wrap(function _callee11$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              query = _args11.length > 0 && _args11[0] !== undefined ? _args11[0] : {};
              switchToEnvironment(http);
              _context11.prev = 2;
              _context11.next = 5;
              return http.get('locales', (0, _contentfulSdkCore.createRequestConfig)({
                query: query
              }));

            case 5:
              response = _context11.sent;
              return _context11.abrupt("return", wrapLocaleCollection(response.data));

            case 9:
              _context11.prev = 9;
              _context11.t0 = _context11["catch"](2);
              (0, _contentfulSdkCore.errorHandler)(_context11.t0);

            case 12:
            case "end":
              return _context11.stop();
          }
        }
      }, _callee11, null, [[2, 9]]);
    }));
    return _getLocales.apply(this, arguments);
  }

  function sync() {
    return _sync.apply(this, arguments);
  }
  /**
  * Parse raw json data into collection of entry objects.Links will be resolved also
  * @memberof ContentfulClientAPI
  * @param {Object} raw json data
  * @example
  * let data = {items: [
  *    {
  *    sys: {type: 'Entry', locale: 'en-US'},
  *    fields: {
  *      animal: {sys: {type: 'Link', linkType: 'Animal', id: 'oink'}},
  *      anotheranimal: {sys: {type: 'Link', linkType: 'Animal', id: 'middle-parrot'}}
  *    }
  *  }
  * ],
  * includes: {
  *  Animal: [
  *    {
  *      sys: {type: 'Animal', id: 'oink', locale: 'en-US'},
  *      fields: {
  *        name: 'Pig',
  *        friend: {sys: {type: 'Link', linkType: 'Animal', id: 'groundhog'}}
  *      }
  *    }
  *   ]
  *  }
  * }
  * console.log( data.items[0].fields.foo ); // undefined
  * let parsedData = client.parseEntries(data);
  * console.log( parsedData.items[0].fields.foo ); // foo
  */


  function _sync() {
    _sync = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {
      var query,
          options,
          _getGlobalOptions3,
          resolveLinks,
          removeUnresolved,
          _args12 = arguments;

      return regeneratorRuntime.wrap(function _callee12$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              query = _args12.length > 0 && _args12[0] !== undefined ? _args12[0] : {};
              options = _args12.length > 1 && _args12[1] !== undefined ? _args12[1] : {
                paginate: true
              };
              _getGlobalOptions3 = getGlobalOptions(query), resolveLinks = _getGlobalOptions3.resolveLinks, removeUnresolved = _getGlobalOptions3.removeUnresolved;
              switchToEnvironment(http);
              return _context12.abrupt("return", (0, _pagedSync["default"])(http, query, _objectSpread({
                resolveLinks: resolveLinks,
                removeUnresolved: removeUnresolved
              }, options)));

            case 5:
            case "end":
              return _context12.stop();
          }
        }
      }, _callee12);
    }));
    return _sync.apply(this, arguments);
  }

  function parseEntries(data) {
    var _getGlobalOptions = getGlobalOptions({}),
        resolveLinks = _getGlobalOptions.resolveLinks,
        removeUnresolved = _getGlobalOptions.removeUnresolved;

    return wrapEntryCollection(data, {
      resolveLinks: resolveLinks,
      removeUnresolved: removeUnresolved
    });
  }
  /*
   * Switches BaseURL to use /environments path
   * */


  function switchToEnvironment(http) {
    http.defaults.baseURL = getGlobalOptions().environmentBaseUrl;
  }
  /*
   * Switches BaseURL to use /spaces path
   * */


  function switchToSpace(http) {
    http.defaults.baseURL = getGlobalOptions().spaceBaseUrl;
  }

  return {
    getSpace: getSpace,
    getContentType: getContentType,
    getContentTypes: getContentTypes,
    getEntry: getEntry,
    getEntries: getEntries,
    getAsset: getAsset,
    getAssets: getAssets,
    getTag: getTag,
    getTags: getTags,
    createAssetKey: createAssetKey,
    getLocales: getLocales,
    parseEntries: parseEntries,
    sync: sync
  };
}

/***/ }),
/* 718 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var space = _interopRequireWildcard(__webpack_require__(719));

var entry = _interopRequireWildcard(__webpack_require__(720));

var asset = _interopRequireWildcard(__webpack_require__(722));

var assetKey = _interopRequireWildcard(__webpack_require__(723));

var contentType = _interopRequireWildcard(__webpack_require__(724));

var locale = _interopRequireWildcard(__webpack_require__(725));

var tag = _interopRequireWildcard(__webpack_require__(726));

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

var _default = {
  space: space,
  entry: entry,
  asset: asset,
  assetKey: assetKey,
  contentType: contentType,
  locale: locale,
  tag: tag
};
exports["default"] = _default;

/***/ }),
/* 719 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapSpace = wrapSpace;

var _contentfulSdkCore = __webpack_require__(56);
/**
 * @memberof Entities
 * @typedef Space
 * @prop {Object} sys - System metadata
 * @prop {string} sys.id - Space id
 * @prop {string} sys.type - Entity type
 * @prop {string} name - Space name
 * @prop {Array<string>} locales - Array with locale codes
 * @prop {function(): Object} toPlainObject() - Returns this Space as a plain JS object
 */

/**
 * @private
 * @param  {Object} data - API response for a Space
 * @return {Space}
 */


function wrapSpace(data) {
  return (0, _contentfulSdkCore.freezeSys)((0, _contentfulSdkCore.toPlainObject)(data));
}

/***/ }),
/* 720 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapEntry = wrapEntry;
exports.wrapEntryCollection = wrapEntryCollection;

var _fastCopy = _interopRequireDefault(__webpack_require__(98));

var _contentfulSdkCore = __webpack_require__(56);

var _stringifySafe = _interopRequireDefault(__webpack_require__(312));

var _contentfulResolveResponse = _interopRequireDefault(__webpack_require__(313));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Types of fields found in an Entry
 * @namespace EntryFields
 */

/**
 * @memberof EntryFields
 * @typedef Symbol
 * @type string
 */

/**
 * @memberof EntryFields
 * @typedef Text
 * @type string
 */

/**
 * @memberof EntryFields
 * @typedef Integer
 * @type number
 */

/**
 * @memberof EntryFields
 * @typedef Number
 * @type number
 */

/**
 * @memberof EntryFields
 * @typedef Date
 * @type string
 */

/**
 * @memberof EntryFields
 * @typedef Boolean
 * @type boolean
 */

/**
 * @memberof EntryFields
 * @typedef Location
 * @prop {string} lat - latitude
 * @prop {string} lon - longitude
 */

/**
 * A Field in an Entry can have one of the following types that can be defined in Contentful. See <a href="https://www.contentful.com/developers/docs/references/field-type/">Field Types</a> for more details.
 * @memberof Entities
 * @typedef Field
 * @type EntryFields.Symbol | EntryFields.Text | EntryFields.Integer | EntryFields.Number | EntryFields.Date | EntryFields.Boolean | EntryFields.Location | Entities.Link | Entities.ResourceLink | Array<EntryFields.Symbol|Entities.Link|Entities.ResourceLink> | Object
 */

/**
 * @memberof Entities
 * @typedef Entry
 * @prop {Entities.Sys} sys - Standard system metadata with additional entry specific properties
 * @prop {Entities.Link} sys.contentType - Content Type used by this Entry
 * @prop {string=} sys.locale - If present, indicates the locale which this entry uses
 * @prop {Object<EntryFields.Field>} fields - Object with content for each field
 * @prop {function(): Object} toPlainObject() - Returns this Entry as a plain JS object
 */

/**
 * @private
 * @param {Object} data - Raw entry data
 * @return {Entry} Wrapped entry data
 */


function wrapEntry(data) {
  return (0, _contentfulSdkCore.freezeSys)((0, _contentfulSdkCore.toPlainObject)((0, _fastCopy["default"])(data)));
}
/**
 * @memberof Entities
 * @typedef EntryCollection
 * @prop {number} total
 * @prop {number} skip
 * @prop {number} limit
 * @prop {Array<Entities.Entry>} items
 * @prop {Array<Object>=} errors - Array of errors that might occur when retrieving entries.
 * @prop {Object<Array>=} includes - Object with arrays of includes for Entries and Assets. This will be present if resolveLinks is on, and any linked entries or assets exist. Those links will be resolved in the Entries present in the items array, but they are also present here in raw form.
 * @prop {function(): Object} toPlainObject() - Returns this Entry collection as a plain JS object
 * @prop {function(?function=, space=): Object} stringifySafe(replacer,space) - Stringifies the entry collection, accounting for circular references. Circular references will be replaced with just a Link object, with a <code>circular</code> property set to <code>true</code>. See <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify">MDN</a> and <a href="https://www.npmjs.com/package/json-stringify-safe">json-stringify-safe</a> for more details on the arguments this method can take.
 */

/**
 * Data is also mixed in with link getters if links exist and includes were requested
 * @private
 * @param {Object} data - Raw entry collection data
 * @param {Object} options - wrapper options
 * @return {EntryCollection} Wrapped entry collection data
 */


function wrapEntryCollection(data, _ref) {
  var resolveLinks = _ref.resolveLinks,
      removeUnresolved = _ref.removeUnresolved;
  var wrappedData = (0, _stringifySafe["default"])((0, _contentfulSdkCore.toPlainObject)((0, _fastCopy["default"])(data)));

  if (resolveLinks) {
    wrappedData.items = (0, _contentfulResolveResponse["default"])(wrappedData, {
      removeUnresolved: removeUnresolved,
      itemEntryPoints: ['fields']
    });
  }

  return (0, _contentfulSdkCore.freezeSys)(wrappedData);
}

/***/ }),
/* 721 */
/***/ (function(module, exports) {

exports = module.exports = stringify;
exports.getSerialize = serializer;

function stringify(obj, replacer, spaces, cycleReplacer) {
  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces);
}

function serializer(replacer, cycleReplacer) {
  var stack = [],
      keys = [];
  if (cycleReplacer == null) cycleReplacer = function cycleReplacer(key, value) {
    if (stack[0] === value) return "[Circular ~]";
    return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]";
  };
  return function (key, value) {
    if (stack.length > 0) {
      var thisPos = stack.indexOf(this);
      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);
      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);
      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value);
    } else stack.push(value);

    return replacer == null ? value : replacer.call(this, key, value);
  };
}

/***/ }),
/* 722 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapAsset = wrapAsset;
exports.wrapAssetCollection = wrapAssetCollection;

var _fastCopy = _interopRequireDefault(__webpack_require__(98));

var _contentfulSdkCore = __webpack_require__(56);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * @memberof Entities
 * @typedef Asset
 * @prop {Entities.Sys} sys - Standard system metadata with additional entry specific properties
 * @prop {string=} sys.locale - If present, indicates the locale which this asset uses
 * @prop {Object} fields - Object with content for each field
 * @prop {string} fields.title - Title for this asset
 * @prop {string} fields.description - Description for this asset
 * @prop {Object} fields.file - File object for this asset
 * @prop {string} fields.file.fileName - Name for the file
 * @prop {string} fields.file.contentType - Mime type for the file
 * @prop {string} fields.file.url - Url where the file is available at.
 * @prop {Object} fields.file.details - Details for the file, depending on file type (example: image size in bytes, etc)
 * @prop {function(): Object} toPlainObject() - Returns this Asset as a plain JS object
 */

/**
 * @private
 * @param {Object} data - Raw asset data
 * @return {Asset} Wrapped asset data
 */


function wrapAsset(data) {
  return (0, _contentfulSdkCore.freezeSys)((0, _contentfulSdkCore.toPlainObject)((0, _fastCopy["default"])(data)));
}
/**
 * @memberof Entities
 * @typedef AssetCollection
 * @prop {number} total
 * @prop {number} skip
 * @prop {number} limit
 * @prop {Array<Entities.Asset>} items
 * @prop {function(): Object} toPlainObject() - Returns this Asset collection as a plain JS object
 */

/**
 * @private
 * @param {Object} data - Raw asset collection data
 * @return {AssetCollection} Wrapped asset collection data
 */


function wrapAssetCollection(data) {
  return (0, _contentfulSdkCore.freezeSys)((0, _contentfulSdkCore.toPlainObject)((0, _fastCopy["default"])(data)));
}

/***/ }),
/* 723 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapAssetKey = wrapAssetKey;

var _fastCopy = _interopRequireDefault(__webpack_require__(98));

var _contentfulSdkCore = __webpack_require__(56);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * @memberof Entities
 * @typedef AssetKey
 * @prop {string} policy - The asset key's policy
 * @prop {string} secret - The secret for creating a signing token
 * @prop {function(): Object} toPlainObject() - Returns this AssetKey as a plain JS object
 */

/**
 * @private
 * @param {Object} data - Raw asset key data
 * @return {Asset} Wrapped asset key data
 */


function wrapAssetKey(data) {
  return (0, _contentfulSdkCore.freezeSys)((0, _contentfulSdkCore.toPlainObject)((0, _fastCopy["default"])(data)));
}

/***/ }),
/* 724 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapContentType = wrapContentType;
exports.wrapContentTypeCollection = wrapContentTypeCollection;

var _fastCopy = _interopRequireDefault(__webpack_require__(98));

var _contentfulSdkCore = __webpack_require__(56);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * @memberof Entities
 * @typedef ContentType
 * @prop {Entities.Sys} sys - System metadata
 * @prop {string} name
 * @prop {string} description
 * @prop {string} displayField - Field used as the main display field for Entries
 * @prop {string} Array<Field> - All the fields contained in this Content Type
 * @prop {function(): Object} toPlainObject() - Returns this Content Type as a plain JS object
 */

/**
 * @private
 * @param {Object} data - Raw content type data
 * @return {ContentType} Wrapped content type data
 */


function wrapContentType(data) {
  return (0, _contentfulSdkCore.freezeSys)((0, _contentfulSdkCore.toPlainObject)((0, _fastCopy["default"])(data)));
}
/**
 * @memberof Entities
 * @typedef ContentTypeCollection
 * @prop {number} total
 * @prop {number} skip
 * @prop {number} limit
 * @prop {Array<Entities.ContentType>} items
 * @prop {function(): Object} toPlainObject() - Returns this Content Type collection as a plain JS object
 */

/**
 * @private
 * @param {Object} data - Raw content type collection data
 * @return {ContentTypeCollection} Wrapped content type collection data
 */


function wrapContentTypeCollection(data) {
  return (0, _contentfulSdkCore.freezeSys)((0, _contentfulSdkCore.toPlainObject)((0, _fastCopy["default"])(data)));
}

/***/ }),
/* 725 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapLocale = wrapLocale;
exports.wrapLocaleCollection = wrapLocaleCollection;

var _fastCopy = _interopRequireDefault(__webpack_require__(98));

var _contentfulSdkCore = __webpack_require__(56);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * @memberof Entities
 * @typedef Locale
 * @prop {Entities.Sys} sys - Standard system metadata with additional entry specific properties
 * @prop {string} name - locale name (example: English)
 * @prop {string} code - locale code (example: en-US)
 * @prop {string} fallbackCode - the locale code to fallback to when there is not content for the current locale
 * @prop {boolean} default - If this is the default locale
 * @prop {boolean} optional - If the locale needs to be filled in on entries or not
 * @prop {function(): Object} toPlainObject() - Returns this Locale as a plain JS object
 */

/**
 * @private
 * @param {Object} data - Raw locale data
 * @return {Locale} Wrapped locale data
 */


function wrapLocale(data) {
  return (0, _contentfulSdkCore.freezeSys)((0, _contentfulSdkCore.toPlainObject)((0, _fastCopy["default"])(data)));
}
/**
 * @memberof Entities
 * @typedef LocaleCollection
 * @prop {number} total
 * @prop {number} skip
 * @prop {number} limit
 * @prop {Array<Entities.Locale>} items
 * @prop {function(): Object} toPlainObject() - Returns this Locale collection as a plain JS object
 */

/**
 * @private
 * @param {Object} data - Raw locale collection data
 * @return {LocaleCollection} Wrapped locale collection data
 */


function wrapLocaleCollection(data) {
  return (0, _contentfulSdkCore.freezeSys)((0, _contentfulSdkCore.toPlainObject)((0, _fastCopy["default"])(data)));
}

/***/ }),
/* 726 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapTag = wrapTag;
exports.wrapTagCollection = wrapTagCollection;

var _fastCopy = _interopRequireDefault(__webpack_require__(98));

var _contentfulSdkCore = __webpack_require__(56);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * @memberof Entities
 * @typedef Tag
 * @prop {Entities.Sys} sys - Standard system metadata with additional entry specific properties
 * @prop {string} name - Tag name
 * @prop {function(): Object} toPlainObject() - Returns this tag as a plain JS object
 */

/**
 * @private
 * @param {Object} data - Raw tag data
 * @return {Tag} Wrapped tag data
 */


function wrapTag(data) {
  return (0, _contentfulSdkCore.freezeSys)((0, _contentfulSdkCore.toPlainObject)((0, _fastCopy["default"])(data)));
}
/**
 * @memberof Entities
 * @typedef TagCollection
 * @prop {number} total
 * @prop {number} skip
 * @prop {number} limit
 * @prop {Array<Entities.Tag>} items
 * @prop {function(): Object} toPlainObject() - Returns this Tag collection as a plain JS object
 */

/**
 * @private
 * @param {Object} data - Raw tag collection data
 * @return {TagCollection} Wrapped tag collection data
 */


function wrapTagCollection(data) {
  return (0, _contentfulSdkCore.freezeSys)((0, _contentfulSdkCore.toPlainObject)((0, _fastCopy["default"])(data)));
}

/***/ }),
/* 727 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = pagedSync;

var _contentfulSdkCore = __webpack_require__(56);

var _contentfulResolveResponse = _interopRequireDefault(__webpack_require__(313));

var _stringifySafe = _interopRequireDefault(__webpack_require__(312));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
/**
 * @memberof Sync
 * @typedef SyncCollection
 * @prop {Array<Entities.Entry>} entries - All existing entries on first sync. New and updated entries on subsequent syncs.
 * @prop {Array<Entities.Asset>} assets - All existing assets on first sync. New and updated assets on subsequent syncs.
 * @prop {Array<Sync.DeletedEntry>} deletedEntries - List of deleted Entries since last sync
 * @prop {Array<Sync.DeletedAsset>} deletedAssets - List of deleted Assets since last sync
 * @prop {string} nextSyncToken - Token to be sent to the next sync call
 * @prop {function(): Object} toPlainObject() - Returns this Sync collection as a plain JS object
 * @prop {function(?function=, space=): Object} stringifySafe(replacer,space) - Stringifies the Sync collection, accounting for circular references. Circular references will be replaced with just a Link object, with a <code>circular</code> property set to <code>true</code>. See <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify">MDN</a> and <a href="https://www.npmjs.com/package/json-stringify-safe">json-stringify-safe</a> for more details on the arguments this method can take.
 */

/**
 * Deleted Entries are the same as Entries, but only appear on the sync API.
 * @memberof Sync
 * @typedef DeletedEntry
 * @type Entities.Entry
 */

/**
 * Deleted Assets are the same as Assets, but only appear on the sync API.
 * @memberof Sync
 * @typedef DeletedAsset
 * @type Entities.Asset
 */

/**
 * This module retrieves all the available pages for a sync operation
 * @private
 * @param {Object} http - HTTP client
 * @param {Object} query - Query object
 * @param {Object} options - Sync options object
 * @param {boolean} [options.resolveLinks = true] - If links should be resolved
 * @param {boolean} [options.removeUnresolved = false] - If unresolvable links should get removed
 * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled
 * @return {Promise<SyncCollection>}
 */


function pagedSync(_x, _x2) {
  return _pagedSync.apply(this, arguments);
}
/**
 * @private
 * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items
 * @return {Object} Entities mapped to an object for each entity type
 */


function _pagedSync() {
  _pagedSync = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(http, query) {
    var options,
        defaultOptions,
        _objectSpread2,
        resolveLinks,
        removeUnresolved,
        paginate,
        syncOptions,
        response,
        mappedResponseItems,
        _args = arguments;

    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};

            if (!(!query || !query.initial && !query.nextSyncToken && !query.nextPageToken)) {
              _context.next = 3;
              break;
            }

            throw new Error('Please provide one of `initial`, `nextSyncToken` or `nextPageToken` parameters for syncing');

          case 3:
            if (!(query && query.content_type && !query.type)) {
              _context.next = 7;
              break;
            }

            query.type = 'Entry';
            _context.next = 9;
            break;

          case 7:
            if (!(query && query.content_type && query.type && query.type !== 'Entry')) {
              _context.next = 9;
              break;
            }

            throw new Error('When using the `content_type` filter your `type` parameter cannot be different from `Entry`.');

          case 9:
            defaultOptions = {
              resolveLinks: true,
              removeUnresolved: false,
              paginate: true
            };
            _objectSpread2 = _objectSpread(_objectSpread({}, defaultOptions), options), resolveLinks = _objectSpread2.resolveLinks, removeUnresolved = _objectSpread2.removeUnresolved, paginate = _objectSpread2.paginate;
            syncOptions = {
              paginate: paginate
            };
            _context.next = 14;
            return getSyncPage(http, [], query, syncOptions);

          case 14:
            response = _context.sent;

            // clones response.items used in includes because we don't want these to be mutated
            if (resolveLinks) {
              response.items = (0, _contentfulResolveResponse["default"])(response, {
                removeUnresolved: removeUnresolved,
                itemEntryPoints: ['fields']
              });
            } // maps response items again after getters are attached


            mappedResponseItems = mapResponseItems(response.items);

            if (response.nextSyncToken) {
              mappedResponseItems.nextSyncToken = response.nextSyncToken;
            }

            if (response.nextPageToken) {
              mappedResponseItems.nextPageToken = response.nextPageToken;
            }

            return _context.abrupt("return", (0, _contentfulSdkCore.freezeSys)((0, _stringifySafe["default"])((0, _contentfulSdkCore.toPlainObject)(mappedResponseItems))));

          case 20:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _pagedSync.apply(this, arguments);
}

function mapResponseItems(items) {
  var reducer = function reducer(type) {
    return function (accumulated, item) {
      if (item.sys.type === type) {
        accumulated.push((0, _contentfulSdkCore.toPlainObject)(item));
      }

      return accumulated;
    };
  };

  return {
    entries: items.reduce(reducer('Entry'), []),
    assets: items.reduce(reducer('Asset'), []),
    deletedEntries: items.reduce(reducer('DeletedEntry'), []),
    deletedAssets: items.reduce(reducer('DeletedAsset'), [])
  };
}
/**
 * If the response contains a nextPageUrl, extracts the sync token to get the
 * next page and calls itself again with that token.
 * Otherwise, if the response contains a nextSyncUrl, extracts the sync token
 * and returns it.
 * On each call of this function, any retrieved items are collected in the
 * supplied items array, which gets returned in the end
 * @private
 * @param {Object} http
 * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items
 * @param {Object} query
 * @param {Object} options - Sync page options object
 * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled
 * @return {Promise<{items: Array, nextSyncToken: string}>}
 */


function getSyncPage(_x3, _x4, _x5, _x6) {
  return _getSyncPage.apply(this, arguments);
}
/**
 * Extracts token out of an url
 * @private
 */


function _getSyncPage() {
  _getSyncPage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(http, items, query, _ref) {
    var paginate, response, data;
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            paginate = _ref.paginate;

            if (query.nextSyncToken) {
              query.sync_token = query.nextSyncToken;
              delete query.nextSyncToken;
            }

            if (query.nextPageToken) {
              query.sync_token = query.nextPageToken;
              delete query.nextPageToken;
            }

            if (query.sync_token) {
              delete query.initial;
              delete query.type;
              delete query.content_type;
              delete query.limit;
            }

            _context2.next = 6;
            return http.get('sync', (0, _contentfulSdkCore.createRequestConfig)({
              query: query
            }));

          case 6:
            response = _context2.sent;
            data = response.data || {};
            items = items.concat(data.items || []);

            if (!data.nextPageUrl) {
              _context2.next = 17;
              break;
            }

            if (!paginate) {
              _context2.next = 14;
              break;
            }

            delete query.initial;
            query.sync_token = getToken(data.nextPageUrl);
            return _context2.abrupt("return", getSyncPage(http, items, query, {
              paginate: paginate
            }));

          case 14:
            return _context2.abrupt("return", {
              items: items,
              nextPageToken: getToken(data.nextPageUrl)
            });

          case 17:
            if (!data.nextSyncUrl) {
              _context2.next = 21;
              break;
            }

            return _context2.abrupt("return", {
              items: items,
              nextSyncToken: getToken(data.nextSyncUrl)
            });

          case 21:
            return _context2.abrupt("return", {
              items: []
            });

          case 22:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _getSyncPage.apply(this, arguments);
}

function getToken(url) {
  var urlParts = url.split('?');
  return urlParts.length > 0 ? urlParts[1].replace('sync_token=', '') : '';
}

/***/ }),
/* 728 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = normalizeSelect;

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
/*
* sdk relies heavily on sys metadata
* so we cannot omit the sys property on sdk level entirely
* and we have to ensure that at least `id` and `type` are present
* */


function normalizeSelect(query) {
  if (!query.select) {
    return query;
  } // The selection of fields for the query is limited
  // Get the different parts that are listed for selection


  var allSelects = Array.isArray(query.select) ? query.select : query.select.split(','); // Move the parts into a set for easy access and deduplication

  var selectedSet = new Set(allSelects); // If we already select all of `sys` we can just return
  // since we're anyway fetching everything that is needed

  if (selectedSet.has('sys')) {
    return query;
  } // We don't select `sys` so we need to ensure the minimum set


  selectedSet.add('sys.id');
  selectedSet.add('sys.type'); // Reassign the normalized sys properties

  return _objectSpread(_objectSpread({}, query), {}, {
    select: _toConsumableArray(selectedSet).join(',')
  });
}

/***/ }),
/* 729 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValidationError = void 0;
exports["default"] = validateTimestamp;

var ValidationError = /*#__PURE__*/function (_Error) {
  _inherits(ValidationError, _Error);

  var _super = _createSuper(ValidationError);

  function ValidationError(name, message) {
    var _this;

    _classCallCheck(this, ValidationError);

    _this = _super.call(this, "Invalid \"".concat(name, "\" provided, ") + message);
    _this.name = 'ValidationError';
    return _this;
  }

  return _createClass(ValidationError);
}( /*#__PURE__*/_wrapNativeSuper(Error));

exports.ValidationError = ValidationError;

function validateTimestamp(name, timestamp, options) {
  options = options || {};

  if (typeof timestamp !== 'number') {
    throw new ValidationError(name, "only numeric values are allowed for timestamps, provided type was \"".concat(_typeof(timestamp), "\""));
  }

  if (options.maximum && timestamp > options.maximum) {
    throw new ValidationError(name, "value (".concat(timestamp, ") cannot be further in the future than expected maximum (").concat(options.maximum, ")"));
  }

  if (options.now && timestamp < options.now) {
    throw new ValidationError(name, "value (".concat(timestamp, ") cannot be in the past, current time was ").concat(options.now));
  }
}

/***/ }),
/* 730 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = createGlobalOptions;
/**
 * Link resolution can be set globally, or it can be turned off for the methods
 * which make use of it. The local setting always overrides the global setting.
 * @private
 * @param {boolean} globalSetting - Global library setting for link resolution
 * @returns {function} Link resolver method preconfigured with global setting
 */

function createGlobalOptions(globalSettings) {
  /**
   * Link resolver method
   * @param {Object} query - regular query object used for collection endpoints
   */
  return function getGlobalOptions(query) {
    return Object.assign({}, globalSettings, query);
  };
}

/***/ }),
/* 731 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(36);

var bind = __webpack_require__(314);

var Axios = __webpack_require__(732);

var mergeConfig = __webpack_require__(319);

var defaults = __webpack_require__(219);
/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */


function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context); // Copy axios.prototype to instance

  utils.extend(instance, Axios.prototype, context); // Copy context to instance

  utils.extend(instance, context);
  return instance;
} // Create the default instance to be exported


var axios = createInstance(defaults); // Expose Axios class to allow class inheritance

axios.Axios = Axios; // Factory for creating new instances

axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
}; // Expose Cancel & CancelToken


axios.Cancel = __webpack_require__(320);
axios.CancelToken = __webpack_require__(745);
axios.isCancel = __webpack_require__(318); // Expose all/spread

axios.all = function all(promises) {
  return Promise.all(promises);
};

axios.spread = __webpack_require__(746); // Expose isAxiosError

axios.isAxiosError = __webpack_require__(747);
module.exports = axios; // Allow use of default import syntax in TypeScript

module.exports["default"] = axios;

/***/ }),
/* 732 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(36);

var buildURL = __webpack_require__(218);

var InterceptorManager = __webpack_require__(733);

var dispatchRequest = __webpack_require__(734);

var mergeConfig = __webpack_require__(319);

var validator = __webpack_require__(744);

var validators = validator.validators;
/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */

function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}
/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */


Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config); // Set config.method

  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  var transitional = config.transitional;

  if (transitional !== undefined) {
    validator.assertOptions(transitional, {
      silentJSONParsing: validators.transitional(validators["boolean"], '1.0.0'),
      forcedJSONParsing: validators.transitional(validators["boolean"], '1.0.0'),
      clarifyTimeoutError: validators.transitional(validators["boolean"], '1.0.0')
    }, false);
  } // filter out skipped interceptors


  var requestInterceptorChain = [];
  var synchronousRequestInterceptors = true;
  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {
      return;
    }

    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
  });
  var responseInterceptorChain = [];
  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
  });
  var promise;

  if (!synchronousRequestInterceptors) {
    var chain = [dispatchRequest, undefined];
    Array.prototype.unshift.apply(chain, requestInterceptorChain);
    chain = chain.concat(responseInterceptorChain);
    promise = Promise.resolve(config);

    while (chain.length) {
      promise = promise.then(chain.shift(), chain.shift());
    }

    return promise;
  }

  var newConfig = config;

  while (requestInterceptorChain.length) {
    var onFulfilled = requestInterceptorChain.shift();
    var onRejected = requestInterceptorChain.shift();

    try {
      newConfig = onFulfilled(newConfig);
    } catch (error) {
      onRejected(error);
      break;
    }
  }

  try {
    promise = dispatchRequest(newConfig);
  } catch (error) {
    return Promise.reject(error);
  }

  while (responseInterceptorChain.length) {
    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
}; // Provide aliases for supported request methods


utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function (url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});
utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function (url, data, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});
module.exports = Axios;

/***/ }),
/* 733 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(36);

function InterceptorManager() {
  this.handlers = [];
}
/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */


InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected,
    synchronous: options ? options.synchronous : false,
    runWhen: options ? options.runWhen : null
  });
  return this.handlers.length - 1;
};
/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */


InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};
/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */


InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;

/***/ }),
/* 734 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(36);

var transformData = __webpack_require__(735);

var isCancel = __webpack_require__(318);

var defaults = __webpack_require__(219);
/**
 * Throws a `Cancel` if cancellation has been requested.
 */


function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}
/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */


module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config); // Ensure headers exist

  config.headers = config.headers || {}; // Transform request data

  config.data = transformData.call(config, config.data, config.headers, config.transformRequest); // Flatten headers

  config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers);
  utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {
    delete config.headers[method];
  });
  var adapter = config.adapter || defaults.adapter;
  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config); // Transform response data

    response.data = transformData.call(config, response.data, response.headers, config.transformResponse);
    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config); // Transform response data

      if (reason && reason.response) {
        reason.response.data = transformData.call(config, reason.response.data, reason.response.headers, config.transformResponse);
      }
    }

    return Promise.reject(reason);
  });
};

/***/ }),
/* 735 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(36);

var defaults = __webpack_require__(219);
/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */


module.exports = function transformData(data, headers, fns) {
  var context = this || defaults;
  /*eslint no-param-reassign:0*/

  utils.forEach(fns, function transform(fn) {
    data = fn.call(context, data, headers);
  });
  return data;
};

/***/ }),
/* 736 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(36);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};

/***/ }),
/* 737 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(36);

var settle = __webpack_require__(315);

var cookies = __webpack_require__(738);

var buildURL = __webpack_require__(218);

var buildFullPath = __webpack_require__(316);

var parseHeaders = __webpack_require__(741);

var isURLSameOrigin = __webpack_require__(742);

var createError = __webpack_require__(221);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;
    var responseType = config.responseType;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest(); // HTTP basic authentication

    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true); // Set the request timeout in MS

    request.timeout = config.timeout;

    function onloadend() {
      if (!request) {
        return;
      } // Prepare the response


      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !responseType || responseType === 'text' || responseType === 'json' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };
      settle(resolve, reject, response); // Clean up request

      request = null;
    }

    if ('onloadend' in request) {
      // Use onloadend if available
      request.onloadend = onloadend;
    } else {
      // Listen for ready state to emulate onloadend
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        } // The request errored out and we didn't get a response, this will be
        // handled by onerror instead
        // With one exception: request that using file: protocol, most browsers
        // will return status as 0 even though it's a successful request


        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
          return;
        } // readystate handler is calling before onerror or ontimeout handlers,
        // so we should call onloadend on the next 'tick'


        setTimeout(onloadend);
      };
    } // Handle browser request cancellation (as opposed to a manual cancellation)


    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request)); // Clean up request

      request = null;
    }; // Handle low level network errors


    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request)); // Clean up request

      request = null;
    }; // Handle timeout


    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';

      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }

      reject(createError(timeoutErrorMessage, config, config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED', request)); // Clean up request

      request = null;
    }; // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.


    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    } // Add headers to the request


    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    } // Add withCredentials to request if needed


    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    } // Add responseType to request if needed


    if (responseType && responseType !== 'json') {
      request.responseType = config.responseType;
    } // Handle progress if needed


    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    } // Not all browsers support upload events


    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel); // Clean up request

        request = null;
      });
    }

    if (!requestData) {
      requestData = null;
    } // Send the request


    request.send(requestData);
  });
};

/***/ }),
/* 738 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(36);

module.exports = utils.isStandardBrowserEnv() ? // Standard browser envs support document.cookie
function standardBrowserEnv() {
  return {
    write: function write(name, value, expires, path, domain, secure) {
      var cookie = [];
      cookie.push(name + '=' + encodeURIComponent(value));

      if (utils.isNumber(expires)) {
        cookie.push('expires=' + new Date(expires).toGMTString());
      }

      if (utils.isString(path)) {
        cookie.push('path=' + path);
      }

      if (utils.isString(domain)) {
        cookie.push('domain=' + domain);
      }

      if (secure === true) {
        cookie.push('secure');
      }

      document.cookie = cookie.join('; ');
    },
    read: function read(name) {
      var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
      return match ? decodeURIComponent(match[3]) : null;
    },
    remove: function remove(name) {
      this.write(name, '', Date.now() - 86400000);
    }
  };
}() : // Non standard browser env (web workers, react-native) lack needed support.
function nonStandardBrowserEnv() {
  return {
    write: function write() {},
    read: function read() {
      return null;
    },
    remove: function remove() {}
  };
}();

/***/ }),
/* 739 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */

module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};

/***/ }),
/* 740 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */

module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '') : baseURL;
};

/***/ }),
/* 741 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(36); // Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers


var ignoreDuplicateOf = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];
/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */

module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) {
    return parsed;
  }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }

      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });
  return parsed;
};

/***/ }),
/* 742 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(36);

module.exports = utils.isStandardBrowserEnv() ? // Standard browser envs have full support of the APIs needed to test
// whether the request URL is of the same origin as current location.
function standardBrowserEnv() {
  var msie = /(msie|trident)/i.test(navigator.userAgent);
  var urlParsingNode = document.createElement('a');
  var originURL;
  /**
  * Parse a URL to discover it's components
  *
  * @param {String} url The URL to be parsed
  * @returns {Object}
  */

  function resolveURL(url) {
    var href = url;

    if (msie) {
      // IE needs attribute set twice to normalize properties
      urlParsingNode.setAttribute('href', href);
      href = urlParsingNode.href;
    }

    urlParsingNode.setAttribute('href', href); // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils

    return {
      href: urlParsingNode.href,
      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
      host: urlParsingNode.host,
      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
      hostname: urlParsingNode.hostname,
      port: urlParsingNode.port,
      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname
    };
  }

  originURL = resolveURL(window.location.href);
  /**
  * Determine if a URL shares the same origin as the current location
  *
  * @param {String} requestURL The URL to test
  * @returns {boolean} True if URL shares the same origin, otherwise false
  */

  return function isURLSameOrigin(requestURL) {
    var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
  };
}() : // Non standard browser envs (web workers, react-native) lack needed support.
function nonStandardBrowserEnv() {
  return function isURLSameOrigin() {
    return true;
  };
}();

/***/ }),
/* 743 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(36);

var settle = __webpack_require__(315);

var buildFullPath = __webpack_require__(316);

var buildURL = __webpack_require__(218);

var http = __webpack_require__(69);

var https = __webpack_require__(75);

var httpFollow = __webpack_require__(96).http;

var httpsFollow = __webpack_require__(96).https;

var url = __webpack_require__(32);

var zlib = __webpack_require__(49);

var pkg = __webpack_require__(317);

var createError = __webpack_require__(221);

var enhanceError = __webpack_require__(220);

var isHttps = /https:?/;
/**
 *
 * @param {http.ClientRequestArgs} options
 * @param {AxiosProxyConfig} proxy
 * @param {string} location
 */

function setProxy(options, proxy, location) {
  options.hostname = proxy.host;
  options.host = proxy.host;
  options.port = proxy.port;
  options.path = location; // Basic proxy authorization

  if (proxy.auth) {
    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');
    options.headers['Proxy-Authorization'] = 'Basic ' + base64;
  } // If a proxy is used, any redirects must also pass through the proxy


  options.beforeRedirect = function beforeRedirect(redirection) {
    redirection.headers.host = redirection.host;
    setProxy(redirection, proxy, redirection.href);
  };
}
/*eslint consistent-return:0*/


module.exports = function httpAdapter(config) {
  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {
    var resolve = function resolve(value) {
      resolvePromise(value);
    };

    var reject = function reject(value) {
      rejectPromise(value);
    };

    var data = config.data;
    var headers = config.headers; // Set User-Agent (required by some servers)
    // See https://github.com/axios/axios/issues/69

    if ('User-Agent' in headers || 'user-agent' in headers) {
      // User-Agent is specified; handle case where no UA header is desired
      if (!headers['User-Agent'] && !headers['user-agent']) {
        delete headers['User-Agent'];
        delete headers['user-agent'];
      } // Otherwise, use specified value

    } else {
      // Only set header if it hasn't been set in config
      headers['User-Agent'] = 'axios/' + pkg.version;
    }

    if (data && !utils.isStream(data)) {
      if (Buffer.isBuffer(data)) {// Nothing to do...
      } else if (utils.isArrayBuffer(data)) {
        data = Buffer.from(new Uint8Array(data));
      } else if (utils.isString(data)) {
        data = Buffer.from(data, 'utf-8');
      } else {
        return reject(createError('Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream', config));
      } // Add Content-Length header if data exists


      headers['Content-Length'] = data.length;
    } // HTTP basic authentication


    var auth = undefined;

    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      auth = username + ':' + password;
    } // Parse url


    var fullPath = buildFullPath(config.baseURL, config.url);
    var parsed = url.parse(fullPath);
    var protocol = parsed.protocol || 'http:';

    if (!auth && parsed.auth) {
      var urlAuth = parsed.auth.split(':');
      var urlUsername = urlAuth[0] || '';
      var urlPassword = urlAuth[1] || '';
      auth = urlUsername + ':' + urlPassword;
    }

    if (auth) {
      delete headers.Authorization;
    }

    var isHttpsRequest = isHttps.test(protocol);
    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;
    var options = {
      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\?/, ''),
      method: config.method.toUpperCase(),
      headers: headers,
      agent: agent,
      agents: {
        http: config.httpAgent,
        https: config.httpsAgent
      },
      auth: auth
    };

    if (config.socketPath) {
      options.socketPath = config.socketPath;
    } else {
      options.hostname = parsed.hostname;
      options.port = parsed.port;
    }

    var proxy = config.proxy;

    if (!proxy && proxy !== false) {
      var proxyEnv = protocol.slice(0, -1) + '_proxy';
      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];

      if (proxyUrl) {
        var parsedProxyUrl = url.parse(proxyUrl);
        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;
        var shouldProxy = true;

        if (noProxyEnv) {
          var noProxy = noProxyEnv.split(',').map(function trim(s) {
            return s.trim();
          });
          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {
            if (!proxyElement) {
              return false;
            }

            if (proxyElement === '*') {
              return true;
            }

            if (proxyElement[0] === '.' && parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {
              return true;
            }

            return parsed.hostname === proxyElement;
          });
        }

        if (shouldProxy) {
          proxy = {
            host: parsedProxyUrl.hostname,
            port: parsedProxyUrl.port,
            protocol: parsedProxyUrl.protocol
          };

          if (parsedProxyUrl.auth) {
            var proxyUrlAuth = parsedProxyUrl.auth.split(':');
            proxy.auth = {
              username: proxyUrlAuth[0],
              password: proxyUrlAuth[1]
            };
          }
        }
      }
    }

    if (proxy) {
      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');
      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);
    }

    var transport;
    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);

    if (config.transport) {
      transport = config.transport;
    } else if (config.maxRedirects === 0) {
      transport = isHttpsProxy ? https : http;
    } else {
      if (config.maxRedirects) {
        options.maxRedirects = config.maxRedirects;
      }

      transport = isHttpsProxy ? httpsFollow : httpFollow;
    }

    if (config.maxBodyLength > -1) {
      options.maxBodyLength = config.maxBodyLength;
    } // Create the request


    var req = transport.request(options, function handleResponse(res) {
      if (req.aborted) return; // uncompress the response body transparently if required

      var stream = res; // return the last request in case of redirects

      var lastRequest = res.req || req; // if no content, is HEAD request or decompress disabled we should not decompress

      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {
        switch (res.headers['content-encoding']) {
          /*eslint default-case:0*/
          case 'gzip':
          case 'compress':
          case 'deflate':
            // add the unzipper to the body stream processing pipeline
            stream = stream.pipe(zlib.createUnzip()); // remove the content-encoding in order to not confuse downstream operations

            delete res.headers['content-encoding'];
            break;
        }
      }

      var response = {
        status: res.statusCode,
        statusText: res.statusMessage,
        headers: res.headers,
        config: config,
        request: lastRequest
      };

      if (config.responseType === 'stream') {
        response.data = stream;
        settle(resolve, reject, response);
      } else {
        var responseBuffer = [];
        var totalResponseBytes = 0;
        stream.on('data', function handleStreamData(chunk) {
          responseBuffer.push(chunk);
          totalResponseBytes += chunk.length; // make sure the content length is not over the maxContentLength if specified

          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {
            stream.destroy();
            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded', config, null, lastRequest));
          }
        });
        stream.on('error', function handleStreamError(err) {
          if (req.aborted) return;
          reject(enhanceError(err, config, null, lastRequest));
        });
        stream.on('end', function handleStreamEnd() {
          var responseData = Buffer.concat(responseBuffer);

          if (config.responseType !== 'arraybuffer') {
            responseData = responseData.toString(config.responseEncoding);

            if (!config.responseEncoding || config.responseEncoding === 'utf8') {
              responseData = utils.stripBOM(responseData);
            }
          }

          response.data = responseData;
          settle(resolve, reject, response);
        });
      }
    }); // Handle errors

    req.on('error', function handleRequestError(err) {
      if (req.aborted && err.code !== 'ERR_FR_TOO_MANY_REDIRECTS') return;
      reject(enhanceError(err, config, null, req));
    }); // Handle request timeout

    if (config.timeout) {
      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.
      var timeout = parseInt(config.timeout, 10);

      if (isNaN(timeout)) {
        reject(createError('error trying to parse `config.timeout` to int', config, 'ERR_PARSE_TIMEOUT', req));
        return;
      } // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.
      // And timer callback will be fired, and abort() will be invoked before connection, then get "socket hang up" and code ECONNRESET.
      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.
      // And then these socket which be hang up will devoring CPU little by little.
      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.


      req.setTimeout(timeout, function handleRequestTimeout() {
        req.abort();
        reject(createError('timeout of ' + timeout + 'ms exceeded', config, config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED', req));
      });
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (req.aborted) return;
        req.abort();
        reject(cancel);
      });
    } // Send the request


    if (utils.isStream(data)) {
      data.on('error', function handleStreamError(err) {
        reject(enhanceError(err, config, null, req));
      }).pipe(req);
    } else {
      req.end(data);
    }
  });
};

/***/ }),
/* 744 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var pkg = __webpack_require__(317);

var validators = {}; // eslint-disable-next-line func-names

['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function (type, i) {
  validators[type] = function validator(thing) {
    return _typeof(thing) === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
  };
});
var deprecatedWarnings = {};
var currentVerArr = pkg.version.split('.');
/**
 * Compare package versions
 * @param {string} version
 * @param {string?} thanVersion
 * @returns {boolean}
 */

function isOlderVersion(version, thanVersion) {
  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;
  var destVer = version.split('.');

  for (var i = 0; i < 3; i++) {
    if (pkgVersionArr[i] > destVer[i]) {
      return true;
    } else if (pkgVersionArr[i] < destVer[i]) {
      return false;
    }
  }

  return false;
}
/**
 * Transitional option validator
 * @param {function|boolean?} validator
 * @param {string?} version
 * @param {string} message
 * @returns {function}
 */


validators.transitional = function transitional(validator, version, message) {
  var isDeprecated = version && isOlderVersion(version);

  function formatMessage(opt, desc) {
    return '[Axios v' + pkg.version + '] Transitional option \'' + opt + '\'' + desc + (message ? '. ' + message : '');
  } // eslint-disable-next-line func-names


  return function (value, opt, opts) {
    if (validator === false) {
      throw new Error(formatMessage(opt, ' has been removed in ' + version));
    }

    if (isDeprecated && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true; // eslint-disable-next-line no-console

      console.warn(formatMessage(opt, ' has been deprecated since v' + version + ' and will be removed in the near future'));
    }

    return validator ? validator(value, opt, opts) : true;
  };
};
/**
 * Assert object's properties type
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 */


function assertOptions(options, schema, allowUnknown) {
  if (_typeof(options) !== 'object') {
    throw new TypeError('options must be an object');
  }

  var keys = Object.keys(options);
  var i = keys.length;

  while (i-- > 0) {
    var opt = keys[i];
    var validator = schema[opt];

    if (validator) {
      var value = options[opt];
      var result = value === undefined || validator(value, opt, options);

      if (result !== true) {
        throw new TypeError('option ' + opt + ' must be ' + result);
      }

      continue;
    }

    if (allowUnknown !== true) {
      throw Error('Unknown option ' + opt);
    }
  }
}

module.exports = {
  isOlderVersion: isOlderVersion,
  assertOptions: assertOptions,
  validators: validators
};

/***/ }),
/* 745 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(320);
/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */


function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });
  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}
/**
 * Throws a `Cancel` if cancellation has been requested.
 */


CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};
/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */


CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;

/***/ }),
/* 746 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */

module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};

/***/ }),
/* 747 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

module.exports = function isAxiosError(payload) {
  return _typeof(payload) === 'object' && payload.isAxiosError === true;
};

/***/ }),
/* 748 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, '__esModule', {
  value: true
});

function createMetadata(attribute) {
  return {
    text: attribute['#text'],
    itemUid: attribute["data-sys-entry-uid"] || attribute["data-sys-asset-uid"],
    itemType: attribute.type,
    styleType: attribute["sys-style-type"],
    attributes: attribute,
    contentTypeUid: attribute["data-sys-content-type-uid"]
  };
}

function nodeToMetadata(attribute, textNode) {
  return {
    text: textNode.text,
    itemUid: attribute["entry-uid"] || attribute["asset-uid"],
    itemType: attribute.type,
    styleType: attribute["display-type"],
    attributes: attribute,
    contentTypeUid: attribute["content-type-uid"]
  };
}

function attributeToString(attributes) {
  var result = '';

  var _loop_1 = function _loop_1(key) {
    if (Object.prototype.hasOwnProperty.call(attributes, key)) {
      var element = attributes[key];

      if (element instanceof Array) {
        var elementString_1 = '';
        var isFirst_1 = true;
        element.forEach(function (value) {
          if (isFirst_1) {
            elementString_1 += "".concat(value);
            isFirst_1 = false;
          } else {
            elementString_1 += ", ".concat(value);
          }
        });
        element = elementString_1;
      } else if (_typeof(element) === 'object') {
        var elementString = '';

        for (var elementKey in element) {
          if (Object.prototype.hasOwnProperty.call(element, elementKey)) {
            var value = element[elementKey];
            elementString += "".concat(elementKey, ":").concat(value, "; ");
          }
        }

        element = elementString;
      }

      result += " ".concat(key, "=\"").concat(element, "\"");
    }
  };

  for (var key in attributes) {
    _loop_1(key);
  }

  return result;
}

var StyleType;

(function (StyleType) {
  StyleType["BLOCK"] = "block";
  StyleType["INLINE"] = "inline";
  StyleType["LINK"] = "link";
  StyleType["DISPLAY"] = "display";
  StyleType["DOWNLOAD"] = "download";
})(StyleType || (StyleType = {}));

var StyleType$1 = StyleType;
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

/* global Reflect, Promise */

var _extendStatics = function extendStatics(d, b) {
  _extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    }
  };

  return _extendStatics(d, b);
};

function __extends(d, b) {
  _extendStatics(d, b);

  function __() {
    this.constructor = d;
  }

  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var _assign = function __assign() {
  _assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return _assign.apply(this, arguments);
};

function elementToJson(element) {
  var obj = {};

  for (var i = 0; i < element.attributes.length; i++) {
    obj[element.attributes.item(i).name] = element.attributes.item(i).value;
  }

  element.childNodes.forEach(function (chileNode) {
    var node = chileNode;
    obj = _assign(_assign({}, obj), parseElement(node));
  });
  return obj;
}

function parseElement(node) {
  var obj = {};

  if (node.nodeType === 3) {
    obj['#text'] = node.textContent;
  } else if (node.nodeType === 1) {
    obj[node.nodeName.toLowerCase()] = elementToJson(node);
  }

  return obj;
}

var frameflag = 'documentfragmentcontainer';

String.prototype.forEachEmbeddedItem = function (callbackfn) {
  var str = "<".concat(frameflag, ">").concat(this.toString(), "</").concat(frameflag, ">");
  var root = new DOMParser().parseFromString(str, 'text/html');
  var embeddedEntries = root.querySelectorAll(".embedded-entry");
  embeddedEntries.forEach(function (element) {
    callbackfn(element.outerHTML, createMetadata(elementToJson(element)));
  });
  var embeddedAsset = root.querySelectorAll(".embedded-asset");
  embeddedAsset.forEach(function (element) {
    callbackfn(element.outerHTML, createMetadata(elementToJson(element)));
  });
};

var _a$1;

var defaultOptions = (_a$1 = {}, _a$1[StyleType$1.BLOCK] = function (item) {
  return "<div><p>".concat(item.title || item.uid, "</p><p>Content type: <span>").concat(item._content_type_uid || (item.system ? item.system.content_type_uid : ''), "</span></p></div>");
}, _a$1[StyleType$1.INLINE] = function (item) {
  return "<span>".concat(item.title || item.uid, "</span>");
}, _a$1[StyleType$1.LINK] = function (item, metadata) {
  return "<a href=\"".concat(item.url, "\">").concat(metadata.text || item.title || item.uid || (item.system ? item.system.uid : ''), "</a>");
}, _a$1[StyleType$1.DISPLAY] = function (item, metadata) {
  return "<img src=\"".concat(item.url, "\" alt=\"").concat(metadata.attributes.alt || item.title || item.filename || item.uid || (item.system ? item.system.uid : ''), "\" />");
}, _a$1[StyleType$1.DOWNLOAD] = function (item, metadata) {
  return "<a href=\"".concat(item.url, "\">").concat(metadata.text || item.title || item.uid || (item.system ? item.system.content_type_uid : ''), "</a>");
}, _a$1); // This function will find Embedded object present in string

function findEmbeddedEntry(uid, contentTypeUid, embeddeditems) {
  if (embeddeditems === void 0) {
    embeddeditems = [];
  }

  return embeddeditems.filter(function (entry) {
    if (entry.uid && entry.uid === uid && entry._content_type_uid === contentTypeUid || entry.system && entry.system.uid === uid && entry.system.content_type_uid === contentTypeUid) {
      return entry;
    }
  });
}

function findEmbeddedAsset(uid, embeddedAssets) {
  if (embeddedAssets === void 0) {
    embeddedAssets = [];
  }

  return embeddedAssets.filter(function (asset) {
    if (asset.uid && asset.uid === uid || asset.system && asset.system.uid === uid) {
      return asset;
    }
  });
}

function findGQLEmbeddedItems(metadata, items) {
  if (metadata.itemType === 'entry') {
    return findEmbeddedEntry(metadata.itemUid, metadata.contentTypeUid, items);
  } else {
    return findEmbeddedAsset(metadata.itemUid, items);
  }
}

function findEmbeddedItems(object, entry) {
  if (object && object !== undefined && entry && entry !== undefined) {
    if (entry._embedded_items !== undefined) {
      var entryEmbedable = entry;
      var items = Object.values(entryEmbedable._embedded_items || []).reduce(function (accumulator, value) {
        return accumulator.concat(value);
      }, []);
      return findGQLEmbeddedItems(object, items);
    }
  }

  return [];
}

function findRenderString(item, metadata, renderOptions) {
  if (!item && item === undefined || !metadata && metadata === undefined) {
    return '';
  }

  if (renderOptions && renderOptions[metadata.styleType] !== undefined) {
    var renderFunction = renderOptions[metadata.styleType];

    if (metadata.attributes['data-sys-content-type-uid'] !== undefined && typeof renderFunction !== 'function' && renderFunction[metadata.attributes['data-sys-content-type-uid']] !== undefined) {
      return renderFunction[metadata.attributes['data-sys-content-type-uid']](item, metadata);
    } else if (metadata.attributes['data-sys-content-type-uid'] !== undefined && typeof renderFunction !== 'function' && renderFunction.$default !== undefined) {
      return renderFunction.$default(item, metadata);
    } else if (metadata.contentTypeUid !== undefined && typeof renderFunction !== 'function' && renderFunction[metadata.contentTypeUid] !== undefined) {
      return renderFunction[metadata.contentTypeUid](item, metadata);
    } else if (metadata.contentTypeUid !== undefined && typeof renderFunction !== 'function' && renderFunction.$default !== undefined) {
      return renderFunction.$default(item, metadata);
    } else if (typeof renderFunction === 'function') {
      return renderFunction(item, metadata);
    }
  }

  var defaultRenderFunction = defaultOptions[metadata.styleType];
  return defaultRenderFunction(item, metadata);
}

function findRenderContent(keyPaths, entry, render) {
  getContent(keyPaths.split("."), entry, render);
}

function getContent(keys, object, render) {
  if (keys) {
    var key = keys[0];

    if (keys.length === 1 && object[key]) {
      object[key] = render(object[key]);
    } else if (keys.length > 0) {
      if (object[key]) {
        var newKeys = keys.slice(1);

        if (Array.isArray(object[key])) {
          // tslint:disable-next-line: prefer-for-of
          for (var _i = 0, _a = object[key]; _i < _a.length; _i++) {
            var objKey = _a[_i];
            getContent(newKeys, objKey, render);
          }
        } else if (_typeof(object[key]) === 'object') {
          getContent(newKeys, object[key], render);
        }
      }
    }
  }
}
/**
 *
 * @param {EntryEmbedable| EntryEmbedable[]} entry - Objects that contains RTE with embedded objects
 * @param {string[]} paths - Key paths for RTE contents in Entry object
 * @param {RenderOption?} renderOption -  Optional render options to render content
 */


function render(option) {
  function findContent(path, entry) {
    findRenderContent(path, entry, function (content) {
      return renderContent(content, {
        entry: entry,
        renderOption: option.renderOption
      });
    });
  }

  function findAndRender(entry) {
    if (!option.paths || option.paths.length === 0) {
      Object.keys(_assign({}, entry._embedded_items)).forEach(function (path) {
        findContent(path, entry);
      });
    } else {
      option.paths.forEach(function (path) {
        findContent(path, entry);
      });
    }
  }

  if (option.entry instanceof Array) {
    option.entry.forEach(function (entry) {
      findAndRender(entry);
    });
  } else {
    findAndRender(option.entry);
  }
}
/**
 *
 * @param {string | string[]} content - RTE content to render
 * @param {EntryEmbedable} options.entry - Entry object containing embedded objects
 * @param {RenderOption?} options.renderOption - Optional render options to render content
 */


function renderContent(content, option) {
  // return blank if content not present
  if (!content || content === undefined) {
    return '';
  } // render content of type string


  if (typeof content === 'string') {
    var contentToReplace_1 = content;
    content.forEachEmbeddedItem(function (embededObjectTag, object) {
      contentToReplace_1 = findAndReplaceEmbeddedItem(contentToReplace_1, embededObjectTag, object, option);
    });
    return contentToReplace_1;
  } // render content of type array of string


  var resultContent = [];
  content.forEach(function (element) {
    resultContent.push(renderContent(element, option));
  });
  return resultContent;
}

function findAndReplaceEmbeddedItem(content, embededObjectTag, metadata, option) {
  var embeddedObjects = findEmbeddedItems(metadata, option.entry);
  var renderString = findRenderString(embeddedObjects[0], metadata, option.renderOption);
  return content.replace(embededObjectTag, renderString);
}

var NodeType;

(function (NodeType) {
  NodeType["DOCUMENT"] = "doc";
  NodeType["PARAGRAPH"] = "p";
  NodeType["LINK"] = "a";
  NodeType["IMAGE"] = "img";
  NodeType["EMBED"] = "embed";
  NodeType["HEADING_1"] = "h1";
  NodeType["HEADING_2"] = "h2";
  NodeType["HEADING_3"] = "h3";
  NodeType["HEADING_4"] = "h4";
  NodeType["HEADING_5"] = "h5";
  NodeType["HEADING_6"] = "h6";
  NodeType["ORDER_LIST"] = "ol";
  NodeType["UNORDER_LIST"] = "ul";
  NodeType["LIST_ITEM"] = "li";
  NodeType["HR"] = "hr";
  NodeType["TABLE"] = "table";
  NodeType["TABLE_HEADER"] = "thead";
  NodeType["TABLE_BODY"] = "tbody";
  NodeType["TABLE_FOOTER"] = "tfoot";
  NodeType["TABLE_ROW"] = "tr";
  NodeType["TABLE_HEAD"] = "th";
  NodeType["TABLE_DATA"] = "td";
  NodeType["BLOCK_QUOTE"] = "blockquote";
  NodeType["CODE"] = "code";
  NodeType["TEXT"] = "text";
  NodeType["REFERENCE"] = "reference";
})(NodeType || (NodeType = {}));

var NodeType$1 = NodeType;
var MarkType;

(function (MarkType) {
  MarkType["BOLD"] = "bold";
  MarkType["ITALIC"] = "italic";
  MarkType["UNDERLINE"] = "underline";
  MarkType["STRIKE_THROUGH"] = "strikethrough";
  MarkType["INLINE_CODE"] = "inlineCode";
  MarkType["SUBSCRIPT"] = "subscript";
  MarkType["SUPERSCRIPT"] = "superscript";
})(MarkType || (MarkType = {}));

var MarkType$1 = MarkType;

var Node =
/** @class */
function () {
  function Node() {}

  return Node;
}();

var Document =
/** @class */
function (_super) {
  __extends(Document, _super);

  function Document() {
    var _this = _super.call(this) || this;

    _this.type = NodeType$1.DOCUMENT;
    return _this;
  }

  return Document;
}(Node);

var TextNode =
/** @class */
function (_super) {
  __extends(TextNode, _super);

  function TextNode(text) {
    var _this = _super.call(this) || this;

    _this.text = text;
    return _this;
  }

  return TextNode;
}(Node);

var _a;

var defaultNodeOption = (_a = {}, _a[NodeType$1.DOCUMENT] = function (node) {
  return "";
}, _a[NodeType$1.PARAGRAPH] = function (node, next) {
  return "<p>".concat(next(node.children), "</p>");
}, _a[NodeType$1.LINK] = function (node, next) {
  return "<a href=\"".concat(node.attrs.href || node.attrs.url, "\">").concat(next(node.children), "</a>");
}, _a[NodeType$1.IMAGE] = function (node, next) {
  return "<img src=\"".concat(node.attrs.src || node.attrs.url, "\" />").concat(next(node.children));
}, _a[NodeType$1.EMBED] = function (node, next) {
  return "<iframe src=\"".concat(node.attrs.src || node.attrs.url, "\">").concat(next(node.children), "</iframe>");
}, _a[NodeType$1.HEADING_1] = function (node, next) {
  return "<h1>".concat(next(node.children), "</h1>");
}, _a[NodeType$1.HEADING_2] = function (node, next) {
  return "<h2>".concat(next(node.children), "</h2>");
}, _a[NodeType$1.HEADING_3] = function (node, next) {
  return "<h3>".concat(next(node.children), "</h3>");
}, _a[NodeType$1.HEADING_4] = function (node, next) {
  return "<h4>".concat(next(node.children), "</h4>");
}, _a[NodeType$1.HEADING_5] = function (node, next) {
  return "<h5>".concat(next(node.children), "</h5>");
}, _a[NodeType$1.HEADING_6] = function (node, next) {
  return "<h6>".concat(next(node.children), "</h6>");
}, _a[NodeType$1.ORDER_LIST] = function (node, next) {
  return "<ol>".concat(next(node.children), "</ol>");
}, _a[NodeType$1.UNORDER_LIST] = function (node, next) {
  return "<ul>".concat(next(node.children), "</ul>");
}, _a[NodeType$1.LIST_ITEM] = function (node, next) {
  return "<li>".concat(next(node.children), "</li>");
}, _a[NodeType$1.HR] = function (node, next) {
  return "<hr>";
}, _a[NodeType$1.TABLE] = function (node, next) {
  return "<table>".concat(next(node.children), "</table>");
}, _a[NodeType$1.TABLE_HEADER] = function (node, next) {
  return "<thead>".concat(next(node.children), "</thead>");
}, _a[NodeType$1.TABLE_BODY] = function (node, next) {
  return "<tbody>".concat(next(node.children), "</tbody>");
}, _a[NodeType$1.TABLE_FOOTER] = function (node, next) {
  return "<tfoot>".concat(next(node.children), "</tfoot>");
}, _a[NodeType$1.TABLE_ROW] = function (node, next) {
  return "<tr>".concat(next(node.children), "</tr>");
}, _a[NodeType$1.TABLE_HEAD] = function (node, next) {
  return "<th>".concat(next(node.children), "</th>");
}, _a[NodeType$1.TABLE_DATA] = function (node, next) {
  return "<td>".concat(next(node.children), "</td>");
}, _a[NodeType$1.BLOCK_QUOTE] = function (node, next) {
  return "<blockquote>".concat(next(node.children), "</blockquote>");
}, _a[NodeType$1.CODE] = function (node, next) {
  return "<code>".concat(next(node.children), "</code>");
}, _a['reference'] = function (node, next) {
  return "";
}, _a['default'] = function (node, next) {
  return next(node.children);
}, _a[MarkType$1.BOLD] = function (text) {
  return "<strong>".concat(text, "</strong>");
}, _a[MarkType$1.ITALIC] = function (text) {
  return "<em>".concat(text, "</em>");
}, _a[MarkType$1.UNDERLINE] = function (text) {
  return "<u>".concat(text, "</u>");
}, _a[MarkType$1.STRIKE_THROUGH] = function (text) {
  return "<strike>".concat(text, "</strike>");
}, _a[MarkType$1.INLINE_CODE] = function (text) {
  return "<span>".concat(text, "</span>");
}, _a[MarkType$1.SUBSCRIPT] = function (text) {
  return "<sub>".concat(text, "</sub>");
}, _a[MarkType$1.SUPERSCRIPT] = function (text) {
  return "<sup>".concat(text, "</sup>");
}, _a);

function enumerate(entries, process) {
  for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
    var entry = entries_1[_i];
    process(entry);
  }
}

function enumerateContents(content, renderOption, renderEmbed) {
  if (!(content instanceof Array) && content.type !== 'doc') {
    return content;
  }

  if (content instanceof Array) {
    var result_1 = [];
    content.forEach(function (doc) {
      result_1.push(enumerateContents(doc, renderOption, renderEmbed));
    });
    return result_1;
  }

  var commonRenderOption = _assign(_assign({}, defaultNodeOption), renderOption);

  return nodeChildrenToHTML(content.children, commonRenderOption, renderEmbed);
}

function textNodeToHTML(node, renderOption) {
  var text = node.text;

  if (node.superscript) {
    text = renderOption[MarkType$1.SUPERSCRIPT](text);
  }

  if (node.subscript) {
    text = renderOption[MarkType$1.SUBSCRIPT](text);
  }

  if (node.inlineCode) {
    text = renderOption[MarkType$1.INLINE_CODE](text);
  }

  if (node.strikethrough) {
    text = renderOption[MarkType$1.STRIKE_THROUGH](text);
  }

  if (node.underline) {
    text = renderOption[MarkType$1.UNDERLINE](text);
  }

  if (node.italic) {
    text = renderOption[MarkType$1.ITALIC](text);
  }

  if (node.bold) {
    text = renderOption[MarkType$1.BOLD](text);
  }

  return text;
}

function referenceToHTML(node, renderOption, renderEmbed) {
  function sendToRenderOption(referenceNode) {
    return renderOption[referenceNode.type](referenceNode, undefined);
  }

  if (!renderEmbed && renderOption[node.type] !== undefined) {
    return sendToRenderOption(node);
  }

  if (!renderEmbed) {
    return '';
  }

  var metadata = nodeToMetadata(node.attrs, node.children && node.children.length > 0 ? node.children[0] : {});
  var item = renderEmbed(metadata);

  if (!item && renderOption[node.type] !== undefined) {
    return sendToRenderOption(node);
  }

  return findRenderString(item, metadata, renderOption);
}

function nodeChildrenToHTML(nodes, renderOption, renderEmbed) {
  return nodes.map(function (node) {
    return nodeToHTML(node, renderOption, renderEmbed);
  }).join('');
}

function nodeToHTML(node, renderOption, renderEmbed) {
  if (!node.type) {
    return textNodeToHTML(node, renderOption);
  } else if (node.type === 'reference') {
    return referenceToHTML(node, renderOption, renderEmbed);
  } else {
    var next = function next(nodes) {
      return nodeChildrenToHTML(nodes, renderOption, renderEmbed);
    };

    if (renderOption[node.type] !== undefined) {
      return renderOption[node.type](node, next);
    } else {
      return renderOption["default"](node, next);
    }
  }
}

function jsonToHTML$1(option) {
  if (option.entry instanceof Array) {
    enumerate(option.entry, function (entry) {
      jsonToHTML$1({
        entry: entry,
        paths: option.paths,
        renderOption: option.renderOption
      });
    });
  } else {
    enumerateKeys$1({
      entry: option.entry,
      paths: option.paths,
      renderOption: option.renderOption
    });
  }
}

function enumerateKeys$1(option) {
  for (var _i = 0, _a = option.paths; _i < _a.length; _i++) {
    var key = _a[_i];
    findRenderContent(key, option.entry, function (content) {
      return enumerateContents(content, option.renderOption, function (metadata) {
        return findEmbeddedItems(metadata, option.entry)[0];
      });
    });
  }
}

function jsonToHTML(option) {
  if (option.entry instanceof Array) {
    enumerate(option.entry, function (entry) {
      jsonToHTML({
        entry: entry,
        paths: option.paths,
        renderOption: option.renderOption
      });
    });
  } else {
    enumerateKeys({
      entry: option.entry,
      paths: option.paths,
      renderOption: option.renderOption
    });
  }
}

function enumerateKeys(option) {
  for (var _i = 0, _a = option.paths; _i < _a.length; _i++) {
    var key = _a[_i];
    findRenderContent(key, option.entry, function (content) {
      if (content && content.json) {
        var edges = content.embedded_itemsConnection ? content.embedded_itemsConnection.edges : [];
        var items_1 = Object.values(edges || []).reduce(function (accumulator, value) {
          return accumulator.concat(value.node);
        }, []);
        return enumerateContents(content.json, option.renderOption, function (metadata) {
          return findGQLEmbeddedItems(metadata, items_1)[0];
        });
      }

      return content;
    });
  }
}

var GQL = {
  jsonToHTML: jsonToHTML
};

function addTags(entry, contentTypeUid, tagsAsObject, locale) {
  if (locale === void 0) {
    locale = 'en-us';
  }

  if (entry) entry.$ = getTag(entry, "".concat(contentTypeUid, ".").concat(entry.uid, ".").concat(locale), tagsAsObject, locale);
}

function getTag(content, prefix, tagsAsObject, locale) {
  var tags = {};
  Object.entries(content).forEach(function (_a) {
    var key = _a[0],
        value = _a[1];

    switch (_typeof(value)) {
      case "object":
        if (Array.isArray(value)) {
          value.forEach(function (obj, index) {
            if (typeof obj !== 'undefined' && obj !== null && obj._content_type_uid !== undefined && obj.uid !== undefined) {
              value[index].$ = getTag(obj, "".concat(obj._content_type_uid, ".").concat(obj.uid, ".").concat(obj.locale || locale), tagsAsObject, locale);
            } else {
              if (_typeof(obj) === "object") {
                obj.$ = getTag(obj, "".concat(prefix, ".").concat(key, ".").concat(index), tagsAsObject, locale);
              } else {
                tags[key] = getTagsValue("".concat(prefix, ".").concat(key), tagsAsObject);
              }
            }
          });
        } else {
          if (value) {
            value.$ = getTag(value, "".concat(prefix, ".").concat(key), tagsAsObject, locale);
          }
        }

        break;

      default:
        tags[key] = getTagsValue("".concat(prefix, ".").concat(key), tagsAsObject);
    }
  });
  return tags;
}

function getTagsValue(dataValue, tagsAsObject) {
  if (tagsAsObject) {
    return {
      "data-cslp": dataValue
    };
  } else {
    return "data-cslp=".concat(dataValue);
  }
}

exports.Document = Document;
exports.GQL = GQL;
exports.MarkType = MarkType$1;
exports.Node = Node;
exports.NodeType = NodeType$1;
exports.StyleType = StyleType$1;
exports.TextNode = TextNode;
exports.addEditableTags = addTags;
exports.attributeToString = attributeToString;
exports.jsonToHTML = jsonToHTML$1;
exports.render = render;
exports.renderContent = renderContent;

/***/ }),
/* 749 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/*!
 * @overview es6-promise - a tiny implementation of Promises/A+.
 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
 * @license   Licensed under MIT license
 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
 * @version   v4.2.8+1e68dce6
 */
(function (global, factory) {
  ( false ? undefined : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
})(this, function () {
  'use strict';

  function objectOrFunction(x) {
    var type = _typeof(x);

    return x !== null && (type === 'object' || type === 'function');
  }

  function isFunction(x) {
    return typeof x === 'function';
  }

  var _isArray = void 0;

  if (Array.isArray) {
    _isArray = Array.isArray;
  } else {
    _isArray = function _isArray(x) {
      return Object.prototype.toString.call(x) === '[object Array]';
    };
  }

  var isArray = _isArray;
  var len = 0;
  var vertxNext = void 0;
  var customSchedulerFn = void 0;

  var asap = function asap(callback, arg) {
    queue[len] = callback;
    queue[len + 1] = arg;
    len += 2;

    if (len === 2) {
      // If len is 2, that means that we need to schedule an async flush.
      // If additional callbacks are queued before the queue is flushed, they
      // will be processed by this flush that we are scheduling.
      if (customSchedulerFn) {
        customSchedulerFn(flush);
      } else {
        scheduleFlush();
      }
    }
  };

  function setScheduler(scheduleFn) {
    customSchedulerFn = scheduleFn;
  }

  function setAsap(asapFn) {
    asap = asapFn;
  }

  var browserWindow = typeof window !== 'undefined' ? window : undefined;
  var browserGlobal = browserWindow || {};
  var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;
  var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]'; // test for web worker but not in IE10

  var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined'; // node

  function useNextTick() {
    // node version 0.10.x displays a deprecation warning when nextTick is used recursively
    // see https://github.com/cujojs/when/issues/410 for details
    return function () {
      return process.nextTick(flush);
    };
  } // vertx


  function useVertxTimer() {
    if (typeof vertxNext !== 'undefined') {
      return function () {
        vertxNext(flush);
      };
    }

    return useSetTimeout();
  }

  function useMutationObserver() {
    var iterations = 0;
    var observer = new BrowserMutationObserver(flush);
    var node = document.createTextNode('');
    observer.observe(node, {
      characterData: true
    });
    return function () {
      node.data = iterations = ++iterations % 2;
    };
  } // web worker


  function useMessageChannel() {
    var channel = new MessageChannel();
    channel.port1.onmessage = flush;
    return function () {
      return channel.port2.postMessage(0);
    };
  }

  function useSetTimeout() {
    // Store setTimeout reference so es6-promise will be unaffected by
    // other code modifying setTimeout (like sinon.useFakeTimers())
    var globalSetTimeout = setTimeout;
    return function () {
      return globalSetTimeout(flush, 1);
    };
  }

  var queue = new Array(1000);

  function flush() {
    for (var i = 0; i < len; i += 2) {
      var callback = queue[i];
      var arg = queue[i + 1];
      callback(arg);
      queue[i] = undefined;
      queue[i + 1] = undefined;
    }

    len = 0;
  }

  function attemptVertx() {
    try {
      var vertx = Function('return this')().require('vertx');

      vertxNext = vertx.runOnLoop || vertx.runOnContext;
      return useVertxTimer();
    } catch (e) {
      return useSetTimeout();
    }
  }

  var scheduleFlush = void 0; // Decide what async method to use to triggering processing of queued callbacks:

  if (isNode) {
    scheduleFlush = useNextTick();
  } else if (BrowserMutationObserver) {
    scheduleFlush = useMutationObserver();
  } else if (isWorker) {
    scheduleFlush = useMessageChannel();
  } else if (browserWindow === undefined && "function" === 'function') {
    scheduleFlush = attemptVertx();
  } else {
    scheduleFlush = useSetTimeout();
  }

  function then(onFulfillment, onRejection) {
    var parent = this;
    var child = new this.constructor(noop);

    if (child[PROMISE_ID] === undefined) {
      makePromise(child);
    }

    var _state = parent._state;

    if (_state) {
      var callback = arguments[_state - 1];
      asap(function () {
        return invokeCallback(_state, child, callback, parent._result);
      });
    } else {
      subscribe(parent, child, onFulfillment, onRejection);
    }

    return child;
  }
  /**
    `Promise.resolve` returns a promise that will become resolved with the
    passed `value`. It is shorthand for the following:
  
    ```javascript
    let promise = new Promise(function(resolve, reject){
      resolve(1);
    });
  
    promise.then(function(value){
      // value === 1
    });
    ```
  
    Instead of writing the above, your code now simply becomes the following:
  
    ```javascript
    let promise = Promise.resolve(1);
  
    promise.then(function(value){
      // value === 1
    });
    ```
  
    @method resolve
    @static
    @param {Any} value value that the returned promise will be resolved with
    Useful for tooling.
    @return {Promise} a promise that will become fulfilled with the given
    `value`
  */


  function resolve$1(object) {
    /*jshint validthis:true */
    var Constructor = this;

    if (object && _typeof(object) === 'object' && object.constructor === Constructor) {
      return object;
    }

    var promise = new Constructor(noop);
    resolve(promise, object);
    return promise;
  }

  var PROMISE_ID = Math.random().toString(36).substring(2);

  function noop() {}

  var PENDING = void 0;
  var FULFILLED = 1;
  var REJECTED = 2;

  function selfFulfillment() {
    return new TypeError("You cannot resolve a promise with itself");
  }

  function cannotReturnOwn() {
    return new TypeError('A promises callback cannot return that same promise.');
  }

  function tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {
    try {
      then$$1.call(value, fulfillmentHandler, rejectionHandler);
    } catch (e) {
      return e;
    }
  }

  function handleForeignThenable(promise, thenable, then$$1) {
    asap(function (promise) {
      var sealed = false;
      var error = tryThen(then$$1, thenable, function (value) {
        if (sealed) {
          return;
        }

        sealed = true;

        if (thenable !== value) {
          resolve(promise, value);
        } else {
          fulfill(promise, value);
        }
      }, function (reason) {
        if (sealed) {
          return;
        }

        sealed = true;
        reject(promise, reason);
      }, 'Settle: ' + (promise._label || ' unknown promise'));

      if (!sealed && error) {
        sealed = true;
        reject(promise, error);
      }
    }, promise);
  }

  function handleOwnThenable(promise, thenable) {
    if (thenable._state === FULFILLED) {
      fulfill(promise, thenable._result);
    } else if (thenable._state === REJECTED) {
      reject(promise, thenable._result);
    } else {
      subscribe(thenable, undefined, function (value) {
        return resolve(promise, value);
      }, function (reason) {
        return reject(promise, reason);
      });
    }
  }

  function handleMaybeThenable(promise, maybeThenable, then$$1) {
    if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {
      handleOwnThenable(promise, maybeThenable);
    } else {
      if (then$$1 === undefined) {
        fulfill(promise, maybeThenable);
      } else if (isFunction(then$$1)) {
        handleForeignThenable(promise, maybeThenable, then$$1);
      } else {
        fulfill(promise, maybeThenable);
      }
    }
  }

  function resolve(promise, value) {
    if (promise === value) {
      reject(promise, selfFulfillment());
    } else if (objectOrFunction(value)) {
      var then$$1 = void 0;

      try {
        then$$1 = value.then;
      } catch (error) {
        reject(promise, error);
        return;
      }

      handleMaybeThenable(promise, value, then$$1);
    } else {
      fulfill(promise, value);
    }
  }

  function publishRejection(promise) {
    if (promise._onerror) {
      promise._onerror(promise._result);
    }

    publish(promise);
  }

  function fulfill(promise, value) {
    if (promise._state !== PENDING) {
      return;
    }

    promise._result = value;
    promise._state = FULFILLED;

    if (promise._subscribers.length !== 0) {
      asap(publish, promise);
    }
  }

  function reject(promise, reason) {
    if (promise._state !== PENDING) {
      return;
    }

    promise._state = REJECTED;
    promise._result = reason;
    asap(publishRejection, promise);
  }

  function subscribe(parent, child, onFulfillment, onRejection) {
    var _subscribers = parent._subscribers;
    var length = _subscribers.length;
    parent._onerror = null;
    _subscribers[length] = child;
    _subscribers[length + FULFILLED] = onFulfillment;
    _subscribers[length + REJECTED] = onRejection;

    if (length === 0 && parent._state) {
      asap(publish, parent);
    }
  }

  function publish(promise) {
    var subscribers = promise._subscribers;
    var settled = promise._state;

    if (subscribers.length === 0) {
      return;
    }

    var child = void 0,
        callback = void 0,
        detail = promise._result;

    for (var i = 0; i < subscribers.length; i += 3) {
      child = subscribers[i];
      callback = subscribers[i + settled];

      if (child) {
        invokeCallback(settled, child, callback, detail);
      } else {
        callback(detail);
      }
    }

    promise._subscribers.length = 0;
  }

  function invokeCallback(settled, promise, callback, detail) {
    var hasCallback = isFunction(callback),
        value = void 0,
        error = void 0,
        succeeded = true;

    if (hasCallback) {
      try {
        value = callback(detail);
      } catch (e) {
        succeeded = false;
        error = e;
      }

      if (promise === value) {
        reject(promise, cannotReturnOwn());
        return;
      }
    } else {
      value = detail;
    }

    if (promise._state !== PENDING) {// noop
    } else if (hasCallback && succeeded) {
      resolve(promise, value);
    } else if (succeeded === false) {
      reject(promise, error);
    } else if (settled === FULFILLED) {
      fulfill(promise, value);
    } else if (settled === REJECTED) {
      reject(promise, value);
    }
  }

  function initializePromise(promise, resolver) {
    try {
      resolver(function resolvePromise(value) {
        resolve(promise, value);
      }, function rejectPromise(reason) {
        reject(promise, reason);
      });
    } catch (e) {
      reject(promise, e);
    }
  }

  var id = 0;

  function nextId() {
    return id++;
  }

  function makePromise(promise) {
    promise[PROMISE_ID] = id++;
    promise._state = undefined;
    promise._result = undefined;
    promise._subscribers = [];
  }

  function validationError() {
    return new Error('Array Methods must be provided an Array');
  }

  var Enumerator = function () {
    function Enumerator(Constructor, input) {
      this._instanceConstructor = Constructor;
      this.promise = new Constructor(noop);

      if (!this.promise[PROMISE_ID]) {
        makePromise(this.promise);
      }

      if (isArray(input)) {
        this.length = input.length;
        this._remaining = input.length;
        this._result = new Array(this.length);

        if (this.length === 0) {
          fulfill(this.promise, this._result);
        } else {
          this.length = this.length || 0;

          this._enumerate(input);

          if (this._remaining === 0) {
            fulfill(this.promise, this._result);
          }
        }
      } else {
        reject(this.promise, validationError());
      }
    }

    Enumerator.prototype._enumerate = function _enumerate(input) {
      for (var i = 0; this._state === PENDING && i < input.length; i++) {
        this._eachEntry(input[i], i);
      }
    };

    Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {
      var c = this._instanceConstructor;
      var resolve$$1 = c.resolve;

      if (resolve$$1 === resolve$1) {
        var _then = void 0;

        var error = void 0;
        var didError = false;

        try {
          _then = entry.then;
        } catch (e) {
          didError = true;
          error = e;
        }

        if (_then === then && entry._state !== PENDING) {
          this._settledAt(entry._state, i, entry._result);
        } else if (typeof _then !== 'function') {
          this._remaining--;
          this._result[i] = entry;
        } else if (c === Promise$1) {
          var promise = new c(noop);

          if (didError) {
            reject(promise, error);
          } else {
            handleMaybeThenable(promise, entry, _then);
          }

          this._willSettleAt(promise, i);
        } else {
          this._willSettleAt(new c(function (resolve$$1) {
            return resolve$$1(entry);
          }), i);
        }
      } else {
        this._willSettleAt(resolve$$1(entry), i);
      }
    };

    Enumerator.prototype._settledAt = function _settledAt(state, i, value) {
      var promise = this.promise;

      if (promise._state === PENDING) {
        this._remaining--;

        if (state === REJECTED) {
          reject(promise, value);
        } else {
          this._result[i] = value;
        }
      }

      if (this._remaining === 0) {
        fulfill(promise, this._result);
      }
    };

    Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {
      var enumerator = this;
      subscribe(promise, undefined, function (value) {
        return enumerator._settledAt(FULFILLED, i, value);
      }, function (reason) {
        return enumerator._settledAt(REJECTED, i, reason);
      });
    };

    return Enumerator;
  }();
  /**
    `Promise.all` accepts an array of promises, and returns a new promise which
    is fulfilled with an array of fulfillment values for the passed promises, or
    rejected with the reason of the first passed promise to be rejected. It casts all
    elements of the passed iterable to promises as it runs this algorithm.
  
    Example:
  
    ```javascript
    let promise1 = resolve(1);
    let promise2 = resolve(2);
    let promise3 = resolve(3);
    let promises = [ promise1, promise2, promise3 ];
  
    Promise.all(promises).then(function(array){
      // The array here would be [ 1, 2, 3 ];
    });
    ```
  
    If any of the `promises` given to `all` are rejected, the first promise
    that is rejected will be given as an argument to the returned promises's
    rejection handler. For example:
  
    Example:
  
    ```javascript
    let promise1 = resolve(1);
    let promise2 = reject(new Error("2"));
    let promise3 = reject(new Error("3"));
    let promises = [ promise1, promise2, promise3 ];
  
    Promise.all(promises).then(function(array){
      // Code here never runs because there are rejected promises!
    }, function(error) {
      // error.message === "2"
    });
    ```
  
    @method all
    @static
    @param {Array} entries array of promises
    @param {String} label optional string for labeling the promise.
    Useful for tooling.
    @return {Promise} promise that is fulfilled when all `promises` have been
    fulfilled, or rejected if any of them become rejected.
    @static
  */


  function all(entries) {
    return new Enumerator(this, entries).promise;
  }
  /**
    `Promise.race` returns a new promise which is settled in the same way as the
    first passed promise to settle.
  
    Example:
  
    ```javascript
    let promise1 = new Promise(function(resolve, reject){
      setTimeout(function(){
        resolve('promise 1');
      }, 200);
    });
  
    let promise2 = new Promise(function(resolve, reject){
      setTimeout(function(){
        resolve('promise 2');
      }, 100);
    });
  
    Promise.race([promise1, promise2]).then(function(result){
      // result === 'promise 2' because it was resolved before promise1
      // was resolved.
    });
    ```
  
    `Promise.race` is deterministic in that only the state of the first
    settled promise matters. For example, even if other promises given to the
    `promises` array argument are resolved, but the first settled promise has
    become rejected before the other promises became fulfilled, the returned
    promise will become rejected:
  
    ```javascript
    let promise1 = new Promise(function(resolve, reject){
      setTimeout(function(){
        resolve('promise 1');
      }, 200);
    });
  
    let promise2 = new Promise(function(resolve, reject){
      setTimeout(function(){
        reject(new Error('promise 2'));
      }, 100);
    });
  
    Promise.race([promise1, promise2]).then(function(result){
      // Code here never runs
    }, function(reason){
      // reason.message === 'promise 2' because promise 2 became rejected before
      // promise 1 became fulfilled
    });
    ```
  
    An example real-world use case is implementing timeouts:
  
    ```javascript
    Promise.race([ajax('foo.json'), timeout(5000)])
    ```
  
    @method race
    @static
    @param {Array} promises array of promises to observe
    Useful for tooling.
    @return {Promise} a promise which settles in the same way as the first passed
    promise to settle.
  */


  function race(entries) {
    /*jshint validthis:true */
    var Constructor = this;

    if (!isArray(entries)) {
      return new Constructor(function (_, reject) {
        return reject(new TypeError('You must pass an array to race.'));
      });
    } else {
      return new Constructor(function (resolve, reject) {
        var length = entries.length;

        for (var i = 0; i < length; i++) {
          Constructor.resolve(entries[i]).then(resolve, reject);
        }
      });
    }
  }
  /**
    `Promise.reject` returns a promise rejected with the passed `reason`.
    It is shorthand for the following:
  
    ```javascript
    let promise = new Promise(function(resolve, reject){
      reject(new Error('WHOOPS'));
    });
  
    promise.then(function(value){
      // Code here doesn't run because the promise is rejected!
    }, function(reason){
      // reason.message === 'WHOOPS'
    });
    ```
  
    Instead of writing the above, your code now simply becomes the following:
  
    ```javascript
    let promise = Promise.reject(new Error('WHOOPS'));
  
    promise.then(function(value){
      // Code here doesn't run because the promise is rejected!
    }, function(reason){
      // reason.message === 'WHOOPS'
    });
    ```
  
    @method reject
    @static
    @param {Any} reason value that the returned promise will be rejected with.
    Useful for tooling.
    @return {Promise} a promise rejected with the given `reason`.
  */


  function reject$1(reason) {
    /*jshint validthis:true */
    var Constructor = this;
    var promise = new Constructor(noop);
    reject(promise, reason);
    return promise;
  }

  function needsResolver() {
    throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
  }

  function needsNew() {
    throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
  }
  /**
    Promise objects represent the eventual result of an asynchronous operation. The
    primary way of interacting with a promise is through its `then` method, which
    registers callbacks to receive either a promise's eventual value or the reason
    why the promise cannot be fulfilled.
  
    Terminology
    -----------
  
    - `promise` is an object or function with a `then` method whose behavior conforms to this specification.
    - `thenable` is an object or function that defines a `then` method.
    - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).
    - `exception` is a value that is thrown using the throw statement.
    - `reason` is a value that indicates why a promise was rejected.
    - `settled` the final resting state of a promise, fulfilled or rejected.
  
    A promise can be in one of three states: pending, fulfilled, or rejected.
  
    Promises that are fulfilled have a fulfillment value and are in the fulfilled
    state.  Promises that are rejected have a rejection reason and are in the
    rejected state.  A fulfillment value is never a thenable.
  
    Promises can also be said to *resolve* a value.  If this value is also a
    promise, then the original promise's settled state will match the value's
    settled state.  So a promise that *resolves* a promise that rejects will
    itself reject, and a promise that *resolves* a promise that fulfills will
    itself fulfill.
  
  
    Basic Usage:
    ------------
  
    ```js
    let promise = new Promise(function(resolve, reject) {
      // on success
      resolve(value);
  
      // on failure
      reject(reason);
    });
  
    promise.then(function(value) {
      // on fulfillment
    }, function(reason) {
      // on rejection
    });
    ```
  
    Advanced Usage:
    ---------------
  
    Promises shine when abstracting away asynchronous interactions such as
    `XMLHttpRequest`s.
  
    ```js
    function getJSON(url) {
      return new Promise(function(resolve, reject){
        let xhr = new XMLHttpRequest();
  
        xhr.open('GET', url);
        xhr.onreadystatechange = handler;
        xhr.responseType = 'json';
        xhr.setRequestHeader('Accept', 'application/json');
        xhr.send();
  
        function handler() {
          if (this.readyState === this.DONE) {
            if (this.status === 200) {
              resolve(this.response);
            } else {
              reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));
            }
          }
        };
      });
    }
  
    getJSON('/posts.json').then(function(json) {
      // on fulfillment
    }, function(reason) {
      // on rejection
    });
    ```
  
    Unlike callbacks, promises are great composable primitives.
  
    ```js
    Promise.all([
      getJSON('/posts'),
      getJSON('/comments')
    ]).then(function(values){
      values[0] // => postsJSON
      values[1] // => commentsJSON
  
      return values;
    });
    ```
  
    @class Promise
    @param {Function} resolver
    Useful for tooling.
    @constructor
  */


  var Promise$1 = function () {
    function Promise(resolver) {
      this[PROMISE_ID] = nextId();
      this._result = this._state = undefined;
      this._subscribers = [];

      if (noop !== resolver) {
        typeof resolver !== 'function' && needsResolver();
        this instanceof Promise ? initializePromise(this, resolver) : needsNew();
      }
    }
    /**
    The primary way of interacting with a promise is through its `then` method,
    which registers callbacks to receive either a promise's eventual value or the
    reason why the promise cannot be fulfilled.
     ```js
    findUser().then(function(user){
      // user is available
    }, function(reason){
      // user is unavailable, and you are given the reason why
    });
    ```
     Chaining
    --------
     The return value of `then` is itself a promise.  This second, 'downstream'
    promise is resolved with the return value of the first promise's fulfillment
    or rejection handler, or rejected if the handler throws an exception.
     ```js
    findUser().then(function (user) {
      return user.name;
    }, function (reason) {
      return 'default name';
    }).then(function (userName) {
      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it
      // will be `'default name'`
    });
     findUser().then(function (user) {
      throw new Error('Found user, but still unhappy');
    }, function (reason) {
      throw new Error('`findUser` rejected and we're unhappy');
    }).then(function (value) {
      // never reached
    }, function (reason) {
      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.
      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.
    });
    ```
    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.
     ```js
    findUser().then(function (user) {
      throw new PedagogicalException('Upstream error');
    }).then(function (value) {
      // never reached
    }).then(function (value) {
      // never reached
    }, function (reason) {
      // The `PedgagocialException` is propagated all the way down to here
    });
    ```
     Assimilation
    ------------
     Sometimes the value you want to propagate to a downstream promise can only be
    retrieved asynchronously. This can be achieved by returning a promise in the
    fulfillment or rejection handler. The downstream promise will then be pending
    until the returned promise is settled. This is called *assimilation*.
     ```js
    findUser().then(function (user) {
      return findCommentsByAuthor(user);
    }).then(function (comments) {
      // The user's comments are now available
    });
    ```
     If the assimliated promise rejects, then the downstream promise will also reject.
     ```js
    findUser().then(function (user) {
      return findCommentsByAuthor(user);
    }).then(function (comments) {
      // If `findCommentsByAuthor` fulfills, we'll have the value here
    }, function (reason) {
      // If `findCommentsByAuthor` rejects, we'll have the reason here
    });
    ```
     Simple Example
    --------------
     Synchronous Example
     ```javascript
    let result;
     try {
      result = findResult();
      // success
    } catch(reason) {
      // failure
    }
    ```
     Errback Example
     ```js
    findResult(function(result, err){
      if (err) {
        // failure
      } else {
        // success
      }
    });
    ```
     Promise Example;
     ```javascript
    findResult().then(function(result){
      // success
    }, function(reason){
      // failure
    });
    ```
     Advanced Example
    --------------
     Synchronous Example
     ```javascript
    let author, books;
     try {
      author = findAuthor();
      books  = findBooksByAuthor(author);
      // success
    } catch(reason) {
      // failure
    }
    ```
     Errback Example
     ```js
     function foundBooks(books) {
     }
     function failure(reason) {
     }
     findAuthor(function(author, err){
      if (err) {
        failure(err);
        // failure
      } else {
        try {
          findBoooksByAuthor(author, function(books, err) {
            if (err) {
              failure(err);
            } else {
              try {
                foundBooks(books);
              } catch(reason) {
                failure(reason);
              }
            }
          });
        } catch(error) {
          failure(err);
        }
        // success
      }
    });
    ```
     Promise Example;
     ```javascript
    findAuthor().
      then(findBooksByAuthor).
      then(function(books){
        // found books
    }).catch(function(reason){
      // something went wrong
    });
    ```
     @method then
    @param {Function} onFulfilled
    @param {Function} onRejected
    Useful for tooling.
    @return {Promise}
    */

    /**
    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same
    as the catch block of a try/catch statement.
    ```js
    function findAuthor(){
    throw new Error('couldn't find that author');
    }
    // synchronous
    try {
    findAuthor();
    } catch(reason) {
    // something went wrong
    }
    // async with promises
    findAuthor().catch(function(reason){
    // something went wrong
    });
    ```
    @method catch
    @param {Function} onRejection
    Useful for tooling.
    @return {Promise}
    */


    Promise.prototype["catch"] = function _catch(onRejection) {
      return this.then(null, onRejection);
    };
    /**
      `finally` will be invoked regardless of the promise's fate just as native
      try/catch/finally behaves
    
      Synchronous example:
    
      ```js
      findAuthor() {
        if (Math.random() > 0.5) {
          throw new Error();
        }
        return new Author();
      }
    
      try {
        return findAuthor(); // succeed or fail
      } catch(error) {
        return findOtherAuther();
      } finally {
        // always runs
        // doesn't affect the return value
      }
      ```
    
      Asynchronous example:
    
      ```js
      findAuthor().catch(function(reason){
        return findOtherAuther();
      }).finally(function(){
        // author was either found, or not
      });
      ```
    
      @method finally
      @param {Function} callback
      @return {Promise}
    */


    Promise.prototype["finally"] = function _finally(callback) {
      var promise = this;
      var constructor = promise.constructor;

      if (isFunction(callback)) {
        return promise.then(function (value) {
          return constructor.resolve(callback()).then(function () {
            return value;
          });
        }, function (reason) {
          return constructor.resolve(callback()).then(function () {
            throw reason;
          });
        });
      }

      return promise.then(callback, callback);
    };

    return Promise;
  }();

  Promise$1.prototype.then = then;
  Promise$1.all = all;
  Promise$1.race = race;
  Promise$1.resolve = resolve$1;
  Promise$1.reject = reject$1;
  Promise$1._setScheduler = setScheduler;
  Promise$1._setAsap = setAsap;
  Promise$1._asap = asap;
  /*global self*/

  function polyfill() {
    var local = void 0;

    if (typeof global !== 'undefined') {
      local = global;
    } else if (typeof self !== 'undefined') {
      local = self;
    } else {
      try {
        local = Function('return this')();
      } catch (e) {
        throw new Error('polyfill failed because global object is unavailable in this environment');
      }
    }

    var P = local.Promise;

    if (P) {
      var promiseToString = null;

      try {
        promiseToString = Object.prototype.toString.call(P.resolve());
      } catch (e) {// silently ignored
      }

      if (promiseToString === '[object Promise]' && !P.cast) {
        return;
      }
    }

    local.Promise = Promise$1;
  } // Strange compat..


  Promise$1.polyfill = polyfill;
  Promise$1.Promise = Promise$1;
  return Promise$1;
});

/***/ }),
/* 750 */
/***/ (function(module, exports) {

// http://www.rajdeepd.com/articles/chrome/localstrg/LocalStorageSample.htm
// NOTE:
// this varies from actual localStorage in some subtle ways
// also, there is no persistence
// TODO persist
(function () {
  "use strict";

  var db;

  function LocalStorage() {}

  db = LocalStorage;

  db.prototype.getItem = function (key) {
    if (this.hasOwnProperty(key)) {
      return String(this[key]);
    }

    return null;
  };

  db.prototype.setItem = function (key, val) {
    this[key] = String(val);
  };

  db.prototype.removeItem = function (key) {
    delete this[key];
  };

  db.prototype.clear = function () {
    var self = this;
    Object.keys(self).forEach(function (key) {
      self[key] = undefined;
      delete self[key];
    });
  };

  db.prototype.key = function (i) {
    i = i || 0;
    return Object.keys(this)[i];
  };

  db.prototype.__defineGetter__('length', function () {
    return Object.keys(this).length;
  });

  if (global.localStorage) {
    module.exports = localStorage;
  } else {
    module.exports = new LocalStorage();
  }
})();

/***/ }),
/* 751 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = this && this.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Container = void 0;

var binding_1 = __webpack_require__(752);

var ERROR_MSGS = __webpack_require__(45);

var literal_types_1 = __webpack_require__(67);

var METADATA_KEY = __webpack_require__(24);

var metadata_reader_1 = __webpack_require__(330);

var planner_1 = __webpack_require__(753);

var resolver_1 = __webpack_require__(760);

var binding_to_syntax_1 = __webpack_require__(762);

var id_1 = __webpack_require__(84);

var serialization_1 = __webpack_require__(128);

var container_snapshot_1 = __webpack_require__(765);

var lookup_1 = __webpack_require__(766);

var Container = function () {
  function Container(containerOptions) {
    this._appliedMiddleware = [];
    var options = containerOptions || {};

    if (_typeof(options) !== "object") {
      throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT);
    }

    if (options.defaultScope === undefined) {
      options.defaultScope = literal_types_1.BindingScopeEnum.Transient;
    } else if (options.defaultScope !== literal_types_1.BindingScopeEnum.Singleton && options.defaultScope !== literal_types_1.BindingScopeEnum.Transient && options.defaultScope !== literal_types_1.BindingScopeEnum.Request) {
      throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE);
    }

    if (options.autoBindInjectable === undefined) {
      options.autoBindInjectable = false;
    } else if (typeof options.autoBindInjectable !== "boolean") {
      throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE);
    }

    if (options.skipBaseClassChecks === undefined) {
      options.skipBaseClassChecks = false;
    } else if (typeof options.skipBaseClassChecks !== "boolean") {
      throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK);
    }

    this.options = {
      autoBindInjectable: options.autoBindInjectable,
      defaultScope: options.defaultScope,
      skipBaseClassChecks: options.skipBaseClassChecks
    };
    this.id = id_1.id();
    this._bindingDictionary = new lookup_1.Lookup();
    this._snapshots = [];
    this._middleware = null;
    this.parent = null;
    this._metadataReader = new metadata_reader_1.MetadataReader();
  }

  Container.merge = function (container1, container2) {
    var container3 = [];

    for (var _i = 2; _i < arguments.length; _i++) {
      container3[_i - 2] = arguments[_i];
    }

    var container = new Container();

    var targetContainers = __spreadArray([container1, container2], container3).map(function (targetContainer) {
      return planner_1.getBindingDictionary(targetContainer);
    });

    var bindingDictionary = planner_1.getBindingDictionary(container);

    function copyDictionary(origin, destination) {
      origin.traverse(function (key, value) {
        value.forEach(function (binding) {
          destination.add(binding.serviceIdentifier, binding.clone());
        });
      });
    }

    targetContainers.forEach(function (targetBindingDictionary) {
      copyDictionary(targetBindingDictionary, bindingDictionary);
    });
    return container;
  };

  Container.prototype.load = function () {
    var modules = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      modules[_i] = arguments[_i];
    }

    var getHelpers = this._getContainerModuleHelpersFactory();

    for (var _a = 0, modules_1 = modules; _a < modules_1.length; _a++) {
      var currentModule = modules_1[_a];
      var containerModuleHelpers = getHelpers(currentModule.id);
      currentModule.registry(containerModuleHelpers.bindFunction, containerModuleHelpers.unbindFunction, containerModuleHelpers.isboundFunction, containerModuleHelpers.rebindFunction);
    }
  };

  Container.prototype.loadAsync = function () {
    var modules = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      modules[_i] = arguments[_i];
    }

    return __awaiter(this, void 0, void 0, function () {
      var getHelpers, _a, modules_2, currentModule, containerModuleHelpers;

      return __generator(this, function (_b) {
        switch (_b.label) {
          case 0:
            getHelpers = this._getContainerModuleHelpersFactory();
            _a = 0, modules_2 = modules;
            _b.label = 1;

          case 1:
            if (!(_a < modules_2.length)) return [3, 4];
            currentModule = modules_2[_a];
            containerModuleHelpers = getHelpers(currentModule.id);
            return [4, currentModule.registry(containerModuleHelpers.bindFunction, containerModuleHelpers.unbindFunction, containerModuleHelpers.isboundFunction, containerModuleHelpers.rebindFunction)];

          case 2:
            _b.sent();

            _b.label = 3;

          case 3:
            _a++;
            return [3, 1];

          case 4:
            return [2];
        }
      });
    });
  };

  Container.prototype.unload = function () {
    var _this = this;

    var modules = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      modules[_i] = arguments[_i];
    }

    var conditionFactory = function conditionFactory(expected) {
      return function (item) {
        return item.moduleId === expected;
      };
    };

    modules.forEach(function (module) {
      var condition = conditionFactory(module.id);

      _this._bindingDictionary.removeByCondition(condition);
    });
  };

  Container.prototype.bind = function (serviceIdentifier) {
    var scope = this.options.defaultScope || literal_types_1.BindingScopeEnum.Transient;
    var binding = new binding_1.Binding(serviceIdentifier, scope);

    this._bindingDictionary.add(serviceIdentifier, binding);

    return new binding_to_syntax_1.BindingToSyntax(binding);
  };

  Container.prototype.rebind = function (serviceIdentifier) {
    this.unbind(serviceIdentifier);
    return this.bind(serviceIdentifier);
  };

  Container.prototype.unbind = function (serviceIdentifier) {
    try {
      this._bindingDictionary.remove(serviceIdentifier);
    } catch (e) {
      throw new Error(ERROR_MSGS.CANNOT_UNBIND + " " + serialization_1.getServiceIdentifierAsString(serviceIdentifier));
    }
  };

  Container.prototype.unbindAll = function () {
    this._bindingDictionary = new lookup_1.Lookup();
  };

  Container.prototype.isBound = function (serviceIdentifier) {
    var bound = this._bindingDictionary.hasKey(serviceIdentifier);

    if (!bound && this.parent) {
      bound = this.parent.isBound(serviceIdentifier);
    }

    return bound;
  };

  Container.prototype.isBoundNamed = function (serviceIdentifier, named) {
    return this.isBoundTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
  };

  Container.prototype.isBoundTagged = function (serviceIdentifier, key, value) {
    var bound = false;

    if (this._bindingDictionary.hasKey(serviceIdentifier)) {
      var bindings = this._bindingDictionary.get(serviceIdentifier);

      var request_1 = planner_1.createMockRequest(this, serviceIdentifier, key, value);
      bound = bindings.some(function (b) {
        return b.constraint(request_1);
      });
    }

    if (!bound && this.parent) {
      bound = this.parent.isBoundTagged(serviceIdentifier, key, value);
    }

    return bound;
  };

  Container.prototype.snapshot = function () {
    this._snapshots.push(container_snapshot_1.ContainerSnapshot.of(this._bindingDictionary.clone(), this._middleware));
  };

  Container.prototype.restore = function () {
    var snapshot = this._snapshots.pop();

    if (snapshot === undefined) {
      throw new Error(ERROR_MSGS.NO_MORE_SNAPSHOTS_AVAILABLE);
    }

    this._bindingDictionary = snapshot.bindings;
    this._middleware = snapshot.middleware;
  };

  Container.prototype.createChild = function (containerOptions) {
    var child = new Container(containerOptions || this.options);
    child.parent = this;
    return child;
  };

  Container.prototype.applyMiddleware = function () {
    var middlewares = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      middlewares[_i] = arguments[_i];
    }

    this._appliedMiddleware = this._appliedMiddleware.concat(middlewares);
    var initial = this._middleware ? this._middleware : this._planAndResolve();
    this._middleware = middlewares.reduce(function (prev, curr) {
      return curr(prev);
    }, initial);
  };

  Container.prototype.applyCustomMetadataReader = function (metadataReader) {
    this._metadataReader = metadataReader;
  };

  Container.prototype.get = function (serviceIdentifier) {
    return this._get(false, false, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier);
  };

  Container.prototype.getTagged = function (serviceIdentifier, key, value) {
    return this._get(false, false, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier, key, value);
  };

  Container.prototype.getNamed = function (serviceIdentifier, named) {
    return this.getTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
  };

  Container.prototype.getAll = function (serviceIdentifier) {
    return this._get(true, true, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier);
  };

  Container.prototype.getAllTagged = function (serviceIdentifier, key, value) {
    return this._get(false, true, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier, key, value);
  };

  Container.prototype.getAllNamed = function (serviceIdentifier, named) {
    return this.getAllTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
  };

  Container.prototype.resolve = function (constructorFunction) {
    var tempContainer = this.createChild();
    tempContainer.bind(constructorFunction).toSelf();

    this._appliedMiddleware.forEach(function (m) {
      tempContainer.applyMiddleware(m);
    });

    return tempContainer.get(constructorFunction);
  };

  Container.prototype._getContainerModuleHelpersFactory = function () {
    var _this = this;

    var setModuleId = function setModuleId(bindingToSyntax, moduleId) {
      bindingToSyntax._binding.moduleId = moduleId;
    };

    var getBindFunction = function getBindFunction(moduleId) {
      return function (serviceIdentifier) {
        var _bind = _this.bind.bind(_this);

        var bindingToSyntax = _bind(serviceIdentifier);

        setModuleId(bindingToSyntax, moduleId);
        return bindingToSyntax;
      };
    };

    var getUnbindFunction = function getUnbindFunction(moduleId) {
      return function (serviceIdentifier) {
        var _unbind = _this.unbind.bind(_this);

        _unbind(serviceIdentifier);
      };
    };

    var getIsboundFunction = function getIsboundFunction(moduleId) {
      return function (serviceIdentifier) {
        var _isBound = _this.isBound.bind(_this);

        return _isBound(serviceIdentifier);
      };
    };

    var getRebindFunction = function getRebindFunction(moduleId) {
      return function (serviceIdentifier) {
        var _rebind = _this.rebind.bind(_this);

        var bindingToSyntax = _rebind(serviceIdentifier);

        setModuleId(bindingToSyntax, moduleId);
        return bindingToSyntax;
      };
    };

    return function (mId) {
      return {
        bindFunction: getBindFunction(mId),
        isboundFunction: getIsboundFunction(mId),
        rebindFunction: getRebindFunction(mId),
        unbindFunction: getUnbindFunction(mId)
      };
    };
  };

  Container.prototype._get = function (avoidConstraints, isMultiInject, targetType, serviceIdentifier, key, value) {
    var result = null;
    var defaultArgs = {
      avoidConstraints: avoidConstraints,
      contextInterceptor: function contextInterceptor(context) {
        return context;
      },
      isMultiInject: isMultiInject,
      key: key,
      serviceIdentifier: serviceIdentifier,
      targetType: targetType,
      value: value
    };

    if (this._middleware) {
      result = this._middleware(defaultArgs);

      if (result === undefined || result === null) {
        throw new Error(ERROR_MSGS.INVALID_MIDDLEWARE_RETURN);
      }
    } else {
      result = this._planAndResolve()(defaultArgs);
    }

    return result;
  };

  Container.prototype._planAndResolve = function () {
    var _this = this;

    return function (args) {
      var context = planner_1.plan(_this._metadataReader, _this, args.isMultiInject, args.targetType, args.serviceIdentifier, args.key, args.value, args.avoidConstraints);
      context = args.contextInterceptor(context);
      var result = resolver_1.resolve(context);
      return result;
    };
  };

  return Container;
}();

exports.Container = Container;

/***/ }),
/* 752 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Binding = void 0;

var literal_types_1 = __webpack_require__(67);

var id_1 = __webpack_require__(84);

var Binding = function () {
  function Binding(serviceIdentifier, scope) {
    this.id = id_1.id();
    this.activated = false;
    this.serviceIdentifier = serviceIdentifier;
    this.scope = scope;
    this.type = literal_types_1.BindingTypeEnum.Invalid;

    this.constraint = function (request) {
      return true;
    };

    this.implementationType = null;
    this.cache = null;
    this.factory = null;
    this.provider = null;
    this.onActivation = null;
    this.dynamicValue = null;
  }

  Binding.prototype.clone = function () {
    var clone = new Binding(this.serviceIdentifier, this.scope);
    clone.activated = clone.scope === literal_types_1.BindingScopeEnum.Singleton ? this.activated : false;
    clone.implementationType = this.implementationType;
    clone.dynamicValue = this.dynamicValue;
    clone.scope = this.scope;
    clone.type = this.type;
    clone.factory = this.factory;
    clone.provider = this.provider;
    clone.constraint = this.constraint;
    clone.onActivation = this.onActivation;
    clone.cache = this.cache;
    return clone;
  };

  return Binding;
}();

exports.Binding = Binding;

/***/ }),
/* 753 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBindingDictionary = exports.createMockRequest = exports.plan = void 0;

var binding_count_1 = __webpack_require__(754);

var ERROR_MSGS = __webpack_require__(45);

var literal_types_1 = __webpack_require__(67);

var METADATA_KEY = __webpack_require__(24);

var exceptions_1 = __webpack_require__(331);

var serialization_1 = __webpack_require__(128);

var context_1 = __webpack_require__(755);

var metadata_1 = __webpack_require__(50);

var plan_1 = __webpack_require__(756);

var reflection_utils_1 = __webpack_require__(757);

var request_1 = __webpack_require__(759);

var target_1 = __webpack_require__(333);

function getBindingDictionary(cntnr) {
  return cntnr._bindingDictionary;
}

exports.getBindingDictionary = getBindingDictionary;

function _createTarget(isMultiInject, targetType, serviceIdentifier, name, key, value) {
  var metadataKey = isMultiInject ? METADATA_KEY.MULTI_INJECT_TAG : METADATA_KEY.INJECT_TAG;
  var injectMetadata = new metadata_1.Metadata(metadataKey, serviceIdentifier);
  var target = new target_1.Target(targetType, name, serviceIdentifier, injectMetadata);

  if (key !== undefined) {
    var tagMetadata = new metadata_1.Metadata(key, value);
    target.metadata.push(tagMetadata);
  }

  return target;
}

function _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target) {
  var bindings = getBindings(context.container, target.serviceIdentifier);
  var activeBindings = [];

  if (bindings.length === binding_count_1.BindingCount.NoBindingsAvailable && context.container.options.autoBindInjectable && typeof target.serviceIdentifier === "function" && metadataReader.getConstructorMetadata(target.serviceIdentifier).compilerGeneratedMetadata) {
    context.container.bind(target.serviceIdentifier).toSelf();
    bindings = getBindings(context.container, target.serviceIdentifier);
  }

  if (!avoidConstraints) {
    activeBindings = bindings.filter(function (binding) {
      var request = new request_1.Request(binding.serviceIdentifier, context, parentRequest, binding, target);
      return binding.constraint(request);
    });
  } else {
    activeBindings = bindings;
  }

  _validateActiveBindingCount(target.serviceIdentifier, activeBindings, target, context.container);

  return activeBindings;
}

function _validateActiveBindingCount(serviceIdentifier, bindings, target, container) {
  switch (bindings.length) {
    case binding_count_1.BindingCount.NoBindingsAvailable:
      if (target.isOptional()) {
        return bindings;
      } else {
        var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);
        var msg = ERROR_MSGS.NOT_REGISTERED;
        msg += serialization_1.listMetadataForTarget(serviceIdentifierString, target);
        msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);
        throw new Error(msg);
      }

    case binding_count_1.BindingCount.OnlyOneBindingAvailable:
      if (!target.isArray()) {
        return bindings;
      }

    case binding_count_1.BindingCount.MultipleBindingsAvailable:
    default:
      if (!target.isArray()) {
        var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);
        var msg = ERROR_MSGS.AMBIGUOUS_MATCH + " " + serviceIdentifierString;
        msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);
        throw new Error(msg);
      } else {
        return bindings;
      }

  }
}

function _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, parentRequest, target) {
  var activeBindings;
  var childRequest;

  if (parentRequest === null) {
    activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, null, target);
    childRequest = new request_1.Request(serviceIdentifier, context, null, activeBindings, target);
    var thePlan = new plan_1.Plan(context, childRequest);
    context.addPlan(thePlan);
  } else {
    activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target);
    childRequest = parentRequest.addChildRequest(target.serviceIdentifier, activeBindings, target);
  }

  activeBindings.forEach(function (binding) {
    var subChildRequest = null;

    if (target.isArray()) {
      subChildRequest = childRequest.addChildRequest(binding.serviceIdentifier, binding, target);
    } else {
      if (binding.cache) {
        return;
      }

      subChildRequest = childRequest;
    }

    if (binding.type === literal_types_1.BindingTypeEnum.Instance && binding.implementationType !== null) {
      var dependencies = reflection_utils_1.getDependencies(metadataReader, binding.implementationType);

      if (!context.container.options.skipBaseClassChecks) {
        var baseClassDependencyCount = reflection_utils_1.getBaseClassDependencyCount(metadataReader, binding.implementationType);

        if (dependencies.length < baseClassDependencyCount) {
          var error = ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH(reflection_utils_1.getFunctionName(binding.implementationType));
          throw new Error(error);
        }
      }

      dependencies.forEach(function (dependency) {
        _createSubRequests(metadataReader, false, dependency.serviceIdentifier, context, subChildRequest, dependency);
      });
    }
  });
}

function getBindings(container, serviceIdentifier) {
  var bindings = [];
  var bindingDictionary = getBindingDictionary(container);

  if (bindingDictionary.hasKey(serviceIdentifier)) {
    bindings = bindingDictionary.get(serviceIdentifier);
  } else if (container.parent !== null) {
    bindings = getBindings(container.parent, serviceIdentifier);
  }

  return bindings;
}

function plan(metadataReader, container, isMultiInject, targetType, serviceIdentifier, key, value, avoidConstraints) {
  if (avoidConstraints === void 0) {
    avoidConstraints = false;
  }

  var context = new context_1.Context(container);

  var target = _createTarget(isMultiInject, targetType, serviceIdentifier, "", key, value);

  try {
    _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, null, target);

    return context;
  } catch (error) {
    if (exceptions_1.isStackOverflowExeption(error)) {
      if (context.plan) {
        serialization_1.circularDependencyToException(context.plan.rootRequest);
      }
    }

    throw error;
  }
}

exports.plan = plan;

function createMockRequest(container, serviceIdentifier, key, value) {
  var target = new target_1.Target(literal_types_1.TargetTypeEnum.Variable, "", serviceIdentifier, new metadata_1.Metadata(key, value));
  var context = new context_1.Context(container);
  var request = new request_1.Request(serviceIdentifier, context, null, [], target);
  return request;
}

exports.createMockRequest = createMockRequest;

/***/ }),
/* 754 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BindingCount = void 0;
var BindingCount = {
  MultipleBindingsAvailable: 2,
  NoBindingsAvailable: 0,
  OnlyOneBindingAvailable: 1
};
exports.BindingCount = BindingCount;

/***/ }),
/* 755 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Context = void 0;

var id_1 = __webpack_require__(84);

var Context = function () {
  function Context(container) {
    this.id = id_1.id();
    this.container = container;
  }

  Context.prototype.addPlan = function (plan) {
    this.plan = plan;
  };

  Context.prototype.setCurrentRequest = function (currentRequest) {
    this.currentRequest = currentRequest;
  };

  return Context;
}();

exports.Context = Context;

/***/ }),
/* 756 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Plan = void 0;

var Plan = function () {
  function Plan(parentContext, rootRequest) {
    this.parentContext = parentContext;
    this.rootRequest = rootRequest;
  }

  return Plan;
}();

exports.Plan = Plan;

/***/ }),
/* 757 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFunctionName = exports.getBaseClassDependencyCount = exports.getDependencies = void 0;

var inject_1 = __webpack_require__(332);

var ERROR_MSGS = __webpack_require__(45);

var literal_types_1 = __webpack_require__(67);

var METADATA_KEY = __webpack_require__(24);

var serialization_1 = __webpack_require__(128);

Object.defineProperty(exports, "getFunctionName", {
  enumerable: true,
  get: function get() {
    return serialization_1.getFunctionName;
  }
});

var target_1 = __webpack_require__(333);

function getDependencies(metadataReader, func) {
  var constructorName = serialization_1.getFunctionName(func);
  var targets = getTargets(metadataReader, constructorName, func, false);
  return targets;
}

exports.getDependencies = getDependencies;

function getTargets(metadataReader, constructorName, func, isBaseClass) {
  var metadata = metadataReader.getConstructorMetadata(func);
  var serviceIdentifiers = metadata.compilerGeneratedMetadata;

  if (serviceIdentifiers === undefined) {
    var msg = ERROR_MSGS.MISSING_INJECTABLE_ANNOTATION + " " + constructorName + ".";
    throw new Error(msg);
  }

  var constructorArgsMetadata = metadata.userGeneratedMetadata;
  var keys = Object.keys(constructorArgsMetadata);
  var hasUserDeclaredUnknownInjections = func.length === 0 && keys.length > 0;
  var hasOptionalParameters = keys.length > func.length;
  var iterations = hasUserDeclaredUnknownInjections || hasOptionalParameters ? keys.length : func.length;
  var constructorTargets = getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations);
  var propertyTargets = getClassPropsAsTargets(metadataReader, func);

  var targets = __spreadArray(__spreadArray([], constructorTargets), propertyTargets);

  return targets;
}

function getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata) {
  var targetMetadata = constructorArgsMetadata[index.toString()] || [];
  var metadata = formatTargetMetadata(targetMetadata);
  var isManaged = metadata.unmanaged !== true;
  var serviceIdentifier = serviceIdentifiers[index];
  var injectIdentifier = metadata.inject || metadata.multiInject;
  serviceIdentifier = injectIdentifier ? injectIdentifier : serviceIdentifier;

  if (serviceIdentifier instanceof inject_1.LazyServiceIdentifer) {
    serviceIdentifier = serviceIdentifier.unwrap();
  }

  if (isManaged) {
    var isObject = serviceIdentifier === Object;
    var isFunction = serviceIdentifier === Function;
    var isUndefined = serviceIdentifier === undefined;
    var isUnknownType = isObject || isFunction || isUndefined;

    if (!isBaseClass && isUnknownType) {
      var msg = ERROR_MSGS.MISSING_INJECT_ANNOTATION + " argument " + index + " in class " + constructorName + ".";
      throw new Error(msg);
    }

    var target = new target_1.Target(literal_types_1.TargetTypeEnum.ConstructorArgument, metadata.targetName, serviceIdentifier);
    target.metadata = targetMetadata;
    return target;
  }

  return null;
}

function getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations) {
  var targets = [];

  for (var i = 0; i < iterations; i++) {
    var index = i;
    var target = getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata);

    if (target !== null) {
      targets.push(target);
    }
  }

  return targets;
}

function getClassPropsAsTargets(metadataReader, constructorFunc) {
  var classPropsMetadata = metadataReader.getPropertiesMetadata(constructorFunc);
  var targets = [];
  var keys = Object.keys(classPropsMetadata);

  for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
    var key = keys_1[_i];
    var targetMetadata = classPropsMetadata[key];
    var metadata = formatTargetMetadata(classPropsMetadata[key]);
    var targetName = metadata.targetName || key;
    var serviceIdentifier = metadata.inject || metadata.multiInject;
    var target = new target_1.Target(literal_types_1.TargetTypeEnum.ClassProperty, targetName, serviceIdentifier);
    target.metadata = targetMetadata;
    targets.push(target);
  }

  var baseConstructor = Object.getPrototypeOf(constructorFunc.prototype).constructor;

  if (baseConstructor !== Object) {
    var baseTargets = getClassPropsAsTargets(metadataReader, baseConstructor);
    targets = __spreadArray(__spreadArray([], targets), baseTargets);
  }

  return targets;
}

function getBaseClassDependencyCount(metadataReader, func) {
  var baseConstructor = Object.getPrototypeOf(func.prototype).constructor;

  if (baseConstructor !== Object) {
    var baseConstructorName = serialization_1.getFunctionName(baseConstructor);
    var targets = getTargets(metadataReader, baseConstructorName, baseConstructor, true);
    var metadata = targets.map(function (t) {
      return t.metadata.filter(function (m) {
        return m.key === METADATA_KEY.UNMANAGED_TAG;
      });
    });
    var unmanagedCount = [].concat.apply([], metadata).length;
    var dependencyCount = targets.length - unmanagedCount;

    if (dependencyCount > 0) {
      return dependencyCount;
    } else {
      return getBaseClassDependencyCount(metadataReader, baseConstructor);
    }
  } else {
    return 0;
  }
}

exports.getBaseClassDependencyCount = getBaseClassDependencyCount;

function formatTargetMetadata(targetMetadata) {
  var targetMetadataMap = {};
  targetMetadata.forEach(function (m) {
    targetMetadataMap[m.key.toString()] = m.value;
  });
  return {
    inject: targetMetadataMap[METADATA_KEY.INJECT_TAG],
    multiInject: targetMetadataMap[METADATA_KEY.MULTI_INJECT_TAG],
    targetName: targetMetadataMap[METADATA_KEY.NAME_TAG],
    unmanaged: targetMetadataMap[METADATA_KEY.UNMANAGED_TAG]
  };
}

/***/ }),
/* 758 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.QueryableString = void 0;

var QueryableString = function () {
  function QueryableString(str) {
    this.str = str;
  }

  QueryableString.prototype.startsWith = function (searchString) {
    return this.str.indexOf(searchString) === 0;
  };

  QueryableString.prototype.endsWith = function (searchString) {
    var reverseString = "";
    var reverseSearchString = searchString.split("").reverse().join("");
    reverseString = this.str.split("").reverse().join("");
    return this.startsWith.call({
      str: reverseString
    }, reverseSearchString);
  };

  QueryableString.prototype.contains = function (searchString) {
    return this.str.indexOf(searchString) !== -1;
  };

  QueryableString.prototype.equals = function (compareString) {
    return this.str === compareString;
  };

  QueryableString.prototype.value = function () {
    return this.str;
  };

  return QueryableString;
}();

exports.QueryableString = QueryableString;

/***/ }),
/* 759 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Request = void 0;

var id_1 = __webpack_require__(84);

var Request = function () {
  function Request(serviceIdentifier, parentContext, parentRequest, bindings, target) {
    this.id = id_1.id();
    this.serviceIdentifier = serviceIdentifier;
    this.parentContext = parentContext;
    this.parentRequest = parentRequest;
    this.target = target;
    this.childRequests = [];
    this.bindings = Array.isArray(bindings) ? bindings : [bindings];
    this.requestScope = parentRequest === null ? new Map() : null;
  }

  Request.prototype.addChildRequest = function (serviceIdentifier, bindings, target) {
    var child = new Request(serviceIdentifier, this.parentContext, this, bindings, target);
    this.childRequests.push(child);
    return child;
  };

  return Request;
}();

exports.Request = Request;

/***/ }),
/* 760 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resolve = void 0;

var ERROR_MSGS = __webpack_require__(45);

var literal_types_1 = __webpack_require__(67);

var exceptions_1 = __webpack_require__(331);

var serialization_1 = __webpack_require__(128);

var instantiation_1 = __webpack_require__(761);

var invokeFactory = function invokeFactory(factoryType, serviceIdentifier, fn) {
  try {
    return fn();
  } catch (error) {
    if (exceptions_1.isStackOverflowExeption(error)) {
      throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY_IN_FACTORY(factoryType, serviceIdentifier.toString()));
    } else {
      throw error;
    }
  }
};

var _resolveRequest = function _resolveRequest(requestScope) {
  return function (request) {
    request.parentContext.setCurrentRequest(request);
    var bindings = request.bindings;
    var childRequests = request.childRequests;
    var targetIsAnArray = request.target && request.target.isArray();
    var targetParentIsNotAnArray = !request.parentRequest || !request.parentRequest.target || !request.target || !request.parentRequest.target.matchesArray(request.target.serviceIdentifier);

    if (targetIsAnArray && targetParentIsNotAnArray) {
      return childRequests.map(function (childRequest) {
        var _f = _resolveRequest(requestScope);

        return _f(childRequest);
      });
    } else {
      var result = null;

      if (request.target.isOptional() && bindings.length === 0) {
        return undefined;
      }

      var binding_1 = bindings[0];
      var isSingleton = binding_1.scope === literal_types_1.BindingScopeEnum.Singleton;
      var isRequestSingleton = binding_1.scope === literal_types_1.BindingScopeEnum.Request;

      if (isSingleton && binding_1.activated) {
        return binding_1.cache;
      }

      if (isRequestSingleton && requestScope !== null && requestScope.has(binding_1.id)) {
        return requestScope.get(binding_1.id);
      }

      if (binding_1.type === literal_types_1.BindingTypeEnum.ConstantValue) {
        result = binding_1.cache;
        binding_1.activated = true;
      } else if (binding_1.type === literal_types_1.BindingTypeEnum.Function) {
        result = binding_1.cache;
        binding_1.activated = true;
      } else if (binding_1.type === literal_types_1.BindingTypeEnum.Constructor) {
        result = binding_1.implementationType;
      } else if (binding_1.type === literal_types_1.BindingTypeEnum.DynamicValue && binding_1.dynamicValue !== null) {
        result = invokeFactory("toDynamicValue", binding_1.serviceIdentifier, function () {
          return binding_1.dynamicValue(request.parentContext);
        });
      } else if (binding_1.type === literal_types_1.BindingTypeEnum.Factory && binding_1.factory !== null) {
        result = invokeFactory("toFactory", binding_1.serviceIdentifier, function () {
          return binding_1.factory(request.parentContext);
        });
      } else if (binding_1.type === literal_types_1.BindingTypeEnum.Provider && binding_1.provider !== null) {
        result = invokeFactory("toProvider", binding_1.serviceIdentifier, function () {
          return binding_1.provider(request.parentContext);
        });
      } else if (binding_1.type === literal_types_1.BindingTypeEnum.Instance && binding_1.implementationType !== null) {
        result = instantiation_1.resolveInstance(binding_1.implementationType, childRequests, _resolveRequest(requestScope));
      } else {
        var serviceIdentifier = serialization_1.getServiceIdentifierAsString(request.serviceIdentifier);
        throw new Error(ERROR_MSGS.INVALID_BINDING_TYPE + " " + serviceIdentifier);
      }

      if (typeof binding_1.onActivation === "function") {
        result = binding_1.onActivation(request.parentContext, result);
      }

      if (isSingleton) {
        binding_1.cache = result;
        binding_1.activated = true;
      }

      if (isRequestSingleton && requestScope !== null && !requestScope.has(binding_1.id)) {
        requestScope.set(binding_1.id, result);
      }

      return result;
    }
  };
};

function resolve(context) {
  var _f = _resolveRequest(context.plan.rootRequest.requestScope);

  return _f(context.plan.rootRequest);
}

exports.resolve = resolve;

/***/ }),
/* 761 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resolveInstance = void 0;

var error_msgs_1 = __webpack_require__(45);

var literal_types_1 = __webpack_require__(67);

var METADATA_KEY = __webpack_require__(24);

function _injectProperties(instance, childRequests, resolveRequest) {
  var propertyInjectionsRequests = childRequests.filter(function (childRequest) {
    return childRequest.target !== null && childRequest.target.type === literal_types_1.TargetTypeEnum.ClassProperty;
  });
  var propertyInjections = propertyInjectionsRequests.map(resolveRequest);
  propertyInjectionsRequests.forEach(function (r, index) {
    var propertyName = "";
    propertyName = r.target.name.value();
    var injection = propertyInjections[index];
    instance[propertyName] = injection;
  });
  return instance;
}

function _createInstance(Func, injections) {
  return new (Func.bind.apply(Func, __spreadArray([void 0], injections)))();
}

function _postConstruct(constr, result) {
  if (Reflect.hasMetadata(METADATA_KEY.POST_CONSTRUCT, constr)) {
    var data = Reflect.getMetadata(METADATA_KEY.POST_CONSTRUCT, constr);

    try {
      result[data.value]();
    } catch (e) {
      throw new Error(error_msgs_1.POST_CONSTRUCT_ERROR(constr.name, e.message));
    }
  }
}

function resolveInstance(constr, childRequests, resolveRequest) {
  var result = null;

  if (childRequests.length > 0) {
    var constructorInjectionsRequests = childRequests.filter(function (childRequest) {
      return childRequest.target !== null && childRequest.target.type === literal_types_1.TargetTypeEnum.ConstructorArgument;
    });
    var constructorInjections = constructorInjectionsRequests.map(resolveRequest);
    result = _createInstance(constr, constructorInjections);
    result = _injectProperties(result, childRequests, resolveRequest);
  } else {
    result = new constr();
  }

  _postConstruct(constr, result);

  return result;
}

exports.resolveInstance = resolveInstance;

/***/ }),
/* 762 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BindingToSyntax = void 0;

var ERROR_MSGS = __webpack_require__(45);

var literal_types_1 = __webpack_require__(67);

var binding_in_when_on_syntax_1 = __webpack_require__(763);

var binding_when_on_syntax_1 = __webpack_require__(334);

var BindingToSyntax = function () {
  function BindingToSyntax(binding) {
    this._binding = binding;
  }

  BindingToSyntax.prototype.to = function (constructor) {
    this._binding.type = literal_types_1.BindingTypeEnum.Instance;
    this._binding.implementationType = constructor;
    return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);
  };

  BindingToSyntax.prototype.toSelf = function () {
    if (typeof this._binding.serviceIdentifier !== "function") {
      throw new Error("" + ERROR_MSGS.INVALID_TO_SELF_VALUE);
    }

    var self = this._binding.serviceIdentifier;
    return this.to(self);
  };

  BindingToSyntax.prototype.toConstantValue = function (value) {
    this._binding.type = literal_types_1.BindingTypeEnum.ConstantValue;
    this._binding.cache = value;
    this._binding.dynamicValue = null;
    this._binding.implementationType = null;
    this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
    return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
  };

  BindingToSyntax.prototype.toDynamicValue = function (func) {
    this._binding.type = literal_types_1.BindingTypeEnum.DynamicValue;
    this._binding.cache = null;
    this._binding.dynamicValue = func;
    this._binding.implementationType = null;
    return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);
  };

  BindingToSyntax.prototype.toConstructor = function (constructor) {
    this._binding.type = literal_types_1.BindingTypeEnum.Constructor;
    this._binding.implementationType = constructor;
    this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
    return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
  };

  BindingToSyntax.prototype.toFactory = function (factory) {
    this._binding.type = literal_types_1.BindingTypeEnum.Factory;
    this._binding.factory = factory;
    this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
    return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
  };

  BindingToSyntax.prototype.toFunction = function (func) {
    if (typeof func !== "function") {
      throw new Error(ERROR_MSGS.INVALID_FUNCTION_BINDING);
    }

    var bindingWhenOnSyntax = this.toConstantValue(func);
    this._binding.type = literal_types_1.BindingTypeEnum.Function;
    this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
    return bindingWhenOnSyntax;
  };

  BindingToSyntax.prototype.toAutoFactory = function (serviceIdentifier) {
    this._binding.type = literal_types_1.BindingTypeEnum.Factory;

    this._binding.factory = function (context) {
      var autofactory = function autofactory() {
        return context.container.get(serviceIdentifier);
      };

      return autofactory;
    };

    this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
    return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
  };

  BindingToSyntax.prototype.toProvider = function (provider) {
    this._binding.type = literal_types_1.BindingTypeEnum.Provider;
    this._binding.provider = provider;
    this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
    return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
  };

  BindingToSyntax.prototype.toService = function (service) {
    this.toDynamicValue(function (context) {
      return context.container.get(service);
    });
  };

  return BindingToSyntax;
}();

exports.BindingToSyntax = BindingToSyntax;

/***/ }),
/* 763 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BindingInWhenOnSyntax = void 0;

var binding_in_syntax_1 = __webpack_require__(764);

var binding_on_syntax_1 = __webpack_require__(222);

var binding_when_syntax_1 = __webpack_require__(223);

var BindingInWhenOnSyntax = function () {
  function BindingInWhenOnSyntax(binding) {
    this._binding = binding;
    this._bindingWhenSyntax = new binding_when_syntax_1.BindingWhenSyntax(this._binding);
    this._bindingOnSyntax = new binding_on_syntax_1.BindingOnSyntax(this._binding);
    this._bindingInSyntax = new binding_in_syntax_1.BindingInSyntax(binding);
  }

  BindingInWhenOnSyntax.prototype.inRequestScope = function () {
    return this._bindingInSyntax.inRequestScope();
  };

  BindingInWhenOnSyntax.prototype.inSingletonScope = function () {
    return this._bindingInSyntax.inSingletonScope();
  };

  BindingInWhenOnSyntax.prototype.inTransientScope = function () {
    return this._bindingInSyntax.inTransientScope();
  };

  BindingInWhenOnSyntax.prototype.when = function (constraint) {
    return this._bindingWhenSyntax.when(constraint);
  };

  BindingInWhenOnSyntax.prototype.whenTargetNamed = function (name) {
    return this._bindingWhenSyntax.whenTargetNamed(name);
  };

  BindingInWhenOnSyntax.prototype.whenTargetIsDefault = function () {
    return this._bindingWhenSyntax.whenTargetIsDefault();
  };

  BindingInWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {
    return this._bindingWhenSyntax.whenTargetTagged(tag, value);
  };

  BindingInWhenOnSyntax.prototype.whenInjectedInto = function (parent) {
    return this._bindingWhenSyntax.whenInjectedInto(parent);
  };

  BindingInWhenOnSyntax.prototype.whenParentNamed = function (name) {
    return this._bindingWhenSyntax.whenParentNamed(name);
  };

  BindingInWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {
    return this._bindingWhenSyntax.whenParentTagged(tag, value);
  };

  BindingInWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
    return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);
  };

  BindingInWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {
    return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);
  };

  BindingInWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {
    return this._bindingWhenSyntax.whenAnyAncestorNamed(name);
  };

  BindingInWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
    return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);
  };

  BindingInWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {
    return this._bindingWhenSyntax.whenNoAncestorNamed(name);
  };

  BindingInWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
    return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);
  };

  BindingInWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
    return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);
  };

  BindingInWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {
    return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);
  };

  BindingInWhenOnSyntax.prototype.onActivation = function (handler) {
    return this._bindingOnSyntax.onActivation(handler);
  };

  return BindingInWhenOnSyntax;
}();

exports.BindingInWhenOnSyntax = BindingInWhenOnSyntax;

/***/ }),
/* 764 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BindingInSyntax = void 0;

var literal_types_1 = __webpack_require__(67);

var binding_when_on_syntax_1 = __webpack_require__(334);

var BindingInSyntax = function () {
  function BindingInSyntax(binding) {
    this._binding = binding;
  }

  BindingInSyntax.prototype.inRequestScope = function () {
    this._binding.scope = literal_types_1.BindingScopeEnum.Request;
    return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
  };

  BindingInSyntax.prototype.inSingletonScope = function () {
    this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
    return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
  };

  BindingInSyntax.prototype.inTransientScope = function () {
    this._binding.scope = literal_types_1.BindingScopeEnum.Transient;
    return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
  };

  return BindingInSyntax;
}();

exports.BindingInSyntax = BindingInSyntax;

/***/ }),
/* 765 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ContainerSnapshot = void 0;

var ContainerSnapshot = function () {
  function ContainerSnapshot() {}

  ContainerSnapshot.of = function (bindings, middleware) {
    var snapshot = new ContainerSnapshot();
    snapshot.bindings = bindings;
    snapshot.middleware = middleware;
    return snapshot;
  };

  return ContainerSnapshot;
}();

exports.ContainerSnapshot = ContainerSnapshot;

/***/ }),
/* 766 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Lookup = void 0;

var ERROR_MSGS = __webpack_require__(45);

var Lookup = function () {
  function Lookup() {
    this._map = new Map();
  }

  Lookup.prototype.getMap = function () {
    return this._map;
  };

  Lookup.prototype.add = function (serviceIdentifier, value) {
    if (serviceIdentifier === null || serviceIdentifier === undefined) {
      throw new Error(ERROR_MSGS.NULL_ARGUMENT);
    }

    if (value === null || value === undefined) {
      throw new Error(ERROR_MSGS.NULL_ARGUMENT);
    }

    var entry = this._map.get(serviceIdentifier);

    if (entry !== undefined) {
      entry.push(value);

      this._map.set(serviceIdentifier, entry);
    } else {
      this._map.set(serviceIdentifier, [value]);
    }
  };

  Lookup.prototype.get = function (serviceIdentifier) {
    if (serviceIdentifier === null || serviceIdentifier === undefined) {
      throw new Error(ERROR_MSGS.NULL_ARGUMENT);
    }

    var entry = this._map.get(serviceIdentifier);

    if (entry !== undefined) {
      return entry;
    } else {
      throw new Error(ERROR_MSGS.KEY_NOT_FOUND);
    }
  };

  Lookup.prototype.remove = function (serviceIdentifier) {
    if (serviceIdentifier === null || serviceIdentifier === undefined) {
      throw new Error(ERROR_MSGS.NULL_ARGUMENT);
    }

    if (!this._map["delete"](serviceIdentifier)) {
      throw new Error(ERROR_MSGS.KEY_NOT_FOUND);
    }
  };

  Lookup.prototype.removeByCondition = function (condition) {
    var _this = this;

    this._map.forEach(function (entries, key) {
      var updatedEntries = entries.filter(function (entry) {
        return !condition(entry);
      });

      if (updatedEntries.length > 0) {
        _this._map.set(key, updatedEntries);
      } else {
        _this._map["delete"](key);
      }
    });
  };

  Lookup.prototype.hasKey = function (serviceIdentifier) {
    if (serviceIdentifier === null || serviceIdentifier === undefined) {
      throw new Error(ERROR_MSGS.NULL_ARGUMENT);
    }

    return this._map.has(serviceIdentifier);
  };

  Lookup.prototype.clone = function () {
    var copy = new Lookup();

    this._map.forEach(function (value, key) {
      value.forEach(function (b) {
        return copy.add(key, b.clone());
      });
    });

    return copy;
  };

  Lookup.prototype.traverse = function (func) {
    this._map.forEach(function (value, key) {
      func(key, value);
    });
  };

  return Lookup;
}();

exports.Lookup = Lookup;

/***/ }),
/* 767 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AsyncContainerModule = exports.ContainerModule = void 0;

var id_1 = __webpack_require__(84);

var ContainerModule = function () {
  function ContainerModule(registry) {
    this.id = id_1.id();
    this.registry = registry;
  }

  return ContainerModule;
}();

exports.ContainerModule = ContainerModule;

var AsyncContainerModule = function () {
  function AsyncContainerModule(registry) {
    this.id = id_1.id();
    this.registry = registry;
  }

  return AsyncContainerModule;
}();

exports.AsyncContainerModule = AsyncContainerModule;

/***/ }),
/* 768 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.injectable = void 0;

var ERRORS_MSGS = __webpack_require__(45);

var METADATA_KEY = __webpack_require__(24);

function injectable() {
  return function (target) {
    if (Reflect.hasOwnMetadata(METADATA_KEY.PARAM_TYPES, target)) {
      throw new Error(ERRORS_MSGS.DUPLICATED_INJECTABLE_DECORATOR);
    }

    var types = Reflect.getMetadata(METADATA_KEY.DESIGN_PARAM_TYPES, target) || [];
    Reflect.defineMetadata(METADATA_KEY.PARAM_TYPES, types, target);
    return target;
  };
}

exports.injectable = injectable;

/***/ }),
/* 769 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tagged = void 0;

var metadata_1 = __webpack_require__(50);

var decorator_utils_1 = __webpack_require__(74);

function tagged(metadataKey, metadataValue) {
  return function (target, targetKey, index) {
    var metadata = new metadata_1.Metadata(metadataKey, metadataValue);

    if (typeof index === "number") {
      decorator_utils_1.tagParameter(target, targetKey, index, metadata);
    } else {
      decorator_utils_1.tagProperty(target, targetKey, metadata);
    }
  };
}

exports.tagged = tagged;

/***/ }),
/* 770 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.named = void 0;

var METADATA_KEY = __webpack_require__(24);

var metadata_1 = __webpack_require__(50);

var decorator_utils_1 = __webpack_require__(74);

function named(name) {
  return function (target, targetKey, index) {
    var metadata = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, name);

    if (typeof index === "number") {
      decorator_utils_1.tagParameter(target, targetKey, index, metadata);
    } else {
      decorator_utils_1.tagProperty(target, targetKey, metadata);
    }
  };
}

exports.named = named;

/***/ }),
/* 771 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.optional = void 0;

var METADATA_KEY = __webpack_require__(24);

var metadata_1 = __webpack_require__(50);

var decorator_utils_1 = __webpack_require__(74);

function optional() {
  return function (target, targetKey, index) {
    var metadata = new metadata_1.Metadata(METADATA_KEY.OPTIONAL_TAG, true);

    if (typeof index === "number") {
      decorator_utils_1.tagParameter(target, targetKey, index, metadata);
    } else {
      decorator_utils_1.tagProperty(target, targetKey, metadata);
    }
  };
}

exports.optional = optional;

/***/ }),
/* 772 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unmanaged = void 0;

var METADATA_KEY = __webpack_require__(24);

var metadata_1 = __webpack_require__(50);

var decorator_utils_1 = __webpack_require__(74);

function unmanaged() {
  return function (target, targetKey, index) {
    var metadata = new metadata_1.Metadata(METADATA_KEY.UNMANAGED_TAG, true);
    decorator_utils_1.tagParameter(target, targetKey, index, metadata);
  };
}

exports.unmanaged = unmanaged;

/***/ }),
/* 773 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.multiInject = void 0;

var METADATA_KEY = __webpack_require__(24);

var metadata_1 = __webpack_require__(50);

var decorator_utils_1 = __webpack_require__(74);

function multiInject(serviceIdentifier) {
  return function (target, targetKey, index) {
    var metadata = new metadata_1.Metadata(METADATA_KEY.MULTI_INJECT_TAG, serviceIdentifier);

    if (typeof index === "number") {
      decorator_utils_1.tagParameter(target, targetKey, index, metadata);
    } else {
      decorator_utils_1.tagProperty(target, targetKey, metadata);
    }
  };
}

exports.multiInject = multiInject;

/***/ }),
/* 774 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.targetName = void 0;

var METADATA_KEY = __webpack_require__(24);

var metadata_1 = __webpack_require__(50);

var decorator_utils_1 = __webpack_require__(74);

function targetName(name) {
  return function (target, targetKey, index) {
    var metadata = new metadata_1.Metadata(METADATA_KEY.NAME_TAG, name);
    decorator_utils_1.tagParameter(target, targetKey, index, metadata);
  };
}

exports.targetName = targetName;

/***/ }),
/* 775 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.postConstruct = void 0;

var ERRORS_MSGS = __webpack_require__(45);

var METADATA_KEY = __webpack_require__(24);

var metadata_1 = __webpack_require__(50);

function postConstruct() {
  return function (target, propertyKey, descriptor) {
    var metadata = new metadata_1.Metadata(METADATA_KEY.POST_CONSTRUCT, propertyKey);

    if (Reflect.hasOwnMetadata(METADATA_KEY.POST_CONSTRUCT, target.constructor)) {
      throw new Error(ERRORS_MSGS.MULTIPLE_POST_CONSTRUCT_METHODS);
    }

    Reflect.defineMetadata(METADATA_KEY.POST_CONSTRUCT, metadata, target.constructor);
  };
}

exports.postConstruct = postConstruct;

/***/ }),
/* 776 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.multiBindToService = void 0;

var multiBindToService = function multiBindToService(container) {
  return function (service) {
    return function () {
      var types = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        types[_i] = arguments[_i];
      }

      return types.forEach(function (t) {
        return container.bind(t).toService(service);
      });
    };
  };
};

exports.multiBindToService = multiBindToService;

/***/ }),
/* 777 */
/***/ (function(module, exports) {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/*! *****************************************************************************
Copyright (C) Microsoft. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var Reflect;

(function (Reflect) {
  // Metadata Proposal
  // https://rbuckton.github.io/reflect-metadata/
  (function (factory) {
    var root = (typeof global === "undefined" ? "undefined" : _typeof(global)) === "object" ? global : (typeof self === "undefined" ? "undefined" : _typeof(self)) === "object" ? self : _typeof(this) === "object" ? this : Function("return this;")();
    var exporter = makeExporter(Reflect);

    if (typeof root.Reflect === "undefined") {
      root.Reflect = Reflect;
    } else {
      exporter = makeExporter(root.Reflect, exporter);
    }

    factory(exporter);

    function makeExporter(target, previous) {
      return function (key, value) {
        if (typeof target[key] !== "function") {
          Object.defineProperty(target, key, {
            configurable: true,
            writable: true,
            value: value
          });
        }

        if (previous) previous(key, value);
      };
    }
  })(function (exporter) {
    var hasOwn = Object.prototype.hasOwnProperty; // feature test for Symbol support

    var supportsSymbol = typeof Symbol === "function";
    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== "undefined" ? Symbol.toPrimitive : "@@toPrimitive";
    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== "undefined" ? Symbol.iterator : "@@iterator";
    var supportsCreate = typeof Object.create === "function"; // feature test for Object.create support

    var supportsProto = {
      __proto__: []
    } instanceof Array; // feature test for __proto__ support

    var downLevel = !supportsCreate && !supportsProto;
    var HashMap = {
      // create an object in dictionary mode (a.k.a. "slow" mode in v8)
      create: supportsCreate ? function () {
        return MakeDictionary(Object.create(null));
      } : supportsProto ? function () {
        return MakeDictionary({
          __proto__: null
        });
      } : function () {
        return MakeDictionary({});
      },
      has: downLevel ? function (map, key) {
        return hasOwn.call(map, key);
      } : function (map, key) {
        return key in map;
      },
      get: downLevel ? function (map, key) {
        return hasOwn.call(map, key) ? map[key] : undefined;
      } : function (map, key) {
        return map[key];
      }
    }; // Load global or shim versions of Map, Set, and WeakMap

    var functionPrototype = Object.getPrototypeOf(Function);
    var usePolyfill = (typeof process === "undefined" ? "undefined" : _typeof(process)) === "object" && process.env && process.env["REFLECT_METADATA_USE_MAP_POLYFILL"] === "true";

    var _Map = !usePolyfill && typeof Map === "function" && typeof Map.prototype.entries === "function" ? Map : CreateMapPolyfill();

    var _Set = !usePolyfill && typeof Set === "function" && typeof Set.prototype.entries === "function" ? Set : CreateSetPolyfill();

    var _WeakMap = !usePolyfill && typeof WeakMap === "function" ? WeakMap : CreateWeakMapPolyfill(); // [[Metadata]] internal slot
    // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots


    var Metadata = new _WeakMap();
    /**
     * Applies a set of decorators to a property of a target object.
     * @param decorators An array of decorators.
     * @param target The target object.
     * @param propertyKey (Optional) The property key to decorate.
     * @param attributes (Optional) The property descriptor for the target key.
     * @remarks Decorators are applied in reverse order.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     Example = Reflect.decorate(decoratorsArray, Example);
     *
     *     // property (on constructor)
     *     Reflect.decorate(decoratorsArray, Example, "staticProperty");
     *
     *     // property (on prototype)
     *     Reflect.decorate(decoratorsArray, Example.prototype, "property");
     *
     *     // method (on constructor)
     *     Object.defineProperty(Example, "staticMethod",
     *         Reflect.decorate(decoratorsArray, Example, "staticMethod",
     *             Object.getOwnPropertyDescriptor(Example, "staticMethod")));
     *
     *     // method (on prototype)
     *     Object.defineProperty(Example.prototype, "method",
     *         Reflect.decorate(decoratorsArray, Example.prototype, "method",
     *             Object.getOwnPropertyDescriptor(Example.prototype, "method")));
     *
     */

    function decorate(decorators, target, propertyKey, attributes) {
      if (!IsUndefined(propertyKey)) {
        if (!IsArray(decorators)) throw new TypeError();
        if (!IsObject(target)) throw new TypeError();
        if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes)) throw new TypeError();
        if (IsNull(attributes)) attributes = undefined;
        propertyKey = ToPropertyKey(propertyKey);
        return DecorateProperty(decorators, target, propertyKey, attributes);
      } else {
        if (!IsArray(decorators)) throw new TypeError();
        if (!IsConstructor(target)) throw new TypeError();
        return DecorateConstructor(decorators, target);
      }
    }

    exporter("decorate", decorate); // 4.1.2 Reflect.metadata(metadataKey, metadataValue)
    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata

    /**
     * A default metadata decorator factory that can be used on a class, class member, or parameter.
     * @param metadataKey The key for the metadata entry.
     * @param metadataValue The value for the metadata entry.
     * @returns A decorator function.
     * @remarks
     * If `metadataKey` is already defined for the target and target key, the
     * metadataValue for that key will be overwritten.
     * @example
     *
     *     // constructor
     *     @Reflect.metadata(key, value)
     *     class Example {
     *     }
     *
     *     // property (on constructor, TypeScript only)
     *     class Example {
     *         @Reflect.metadata(key, value)
     *         static staticProperty;
     *     }
     *
     *     // property (on prototype, TypeScript only)
     *     class Example {
     *         @Reflect.metadata(key, value)
     *         property;
     *     }
     *
     *     // method (on constructor)
     *     class Example {
     *         @Reflect.metadata(key, value)
     *         static staticMethod() { }
     *     }
     *
     *     // method (on prototype)
     *     class Example {
     *         @Reflect.metadata(key, value)
     *         method() { }
     *     }
     *
     */

    function metadata(metadataKey, metadataValue) {
      function decorator(target, propertyKey) {
        if (!IsObject(target)) throw new TypeError();
        if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey)) throw new TypeError();
        OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
      }

      return decorator;
    }

    exporter("metadata", metadata);
    /**
     * Define a unique metadata entry on the target.
     * @param metadataKey A key used to store and retrieve metadata.
     * @param metadataValue A value that contains attached metadata.
     * @param target The target object on which to define metadata.
     * @param propertyKey (Optional) The property key for the target.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     Reflect.defineMetadata("custom:annotation", options, Example);
     *
     *     // property (on constructor)
     *     Reflect.defineMetadata("custom:annotation", options, Example, "staticProperty");
     *
     *     // property (on prototype)
     *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "property");
     *
     *     // method (on constructor)
     *     Reflect.defineMetadata("custom:annotation", options, Example, "staticMethod");
     *
     *     // method (on prototype)
     *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "method");
     *
     *     // decorator factory as metadata-producing annotation.
     *     function MyAnnotation(options): Decorator {
     *         return (target, key?) => Reflect.defineMetadata("custom:annotation", options, target, key);
     *     }
     *
     */

    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {
      if (!IsObject(target)) throw new TypeError();
      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
      return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
    }

    exporter("defineMetadata", defineMetadata);
    /**
     * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.
     * @param metadataKey A key used to store and retrieve metadata.
     * @param target The target object on which the metadata is defined.
     * @param propertyKey (Optional) The property key for the target.
     * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     result = Reflect.hasMetadata("custom:annotation", Example);
     *
     *     // property (on constructor)
     *     result = Reflect.hasMetadata("custom:annotation", Example, "staticProperty");
     *
     *     // property (on prototype)
     *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "property");
     *
     *     // method (on constructor)
     *     result = Reflect.hasMetadata("custom:annotation", Example, "staticMethod");
     *
     *     // method (on prototype)
     *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "method");
     *
     */

    function hasMetadata(metadataKey, target, propertyKey) {
      if (!IsObject(target)) throw new TypeError();
      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
      return OrdinaryHasMetadata(metadataKey, target, propertyKey);
    }

    exporter("hasMetadata", hasMetadata);
    /**
     * Gets a value indicating whether the target object has the provided metadata key defined.
     * @param metadataKey A key used to store and retrieve metadata.
     * @param target The target object on which the metadata is defined.
     * @param propertyKey (Optional) The property key for the target.
     * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     result = Reflect.hasOwnMetadata("custom:annotation", Example);
     *
     *     // property (on constructor)
     *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticProperty");
     *
     *     // property (on prototype)
     *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "property");
     *
     *     // method (on constructor)
     *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticMethod");
     *
     *     // method (on prototype)
     *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "method");
     *
     */

    function hasOwnMetadata(metadataKey, target, propertyKey) {
      if (!IsObject(target)) throw new TypeError();
      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
      return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);
    }

    exporter("hasOwnMetadata", hasOwnMetadata);
    /**
     * Gets the metadata value for the provided metadata key on the target object or its prototype chain.
     * @param metadataKey A key used to store and retrieve metadata.
     * @param target The target object on which the metadata is defined.
     * @param propertyKey (Optional) The property key for the target.
     * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     result = Reflect.getMetadata("custom:annotation", Example);
     *
     *     // property (on constructor)
     *     result = Reflect.getMetadata("custom:annotation", Example, "staticProperty");
     *
     *     // property (on prototype)
     *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "property");
     *
     *     // method (on constructor)
     *     result = Reflect.getMetadata("custom:annotation", Example, "staticMethod");
     *
     *     // method (on prototype)
     *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "method");
     *
     */

    function getMetadata(metadataKey, target, propertyKey) {
      if (!IsObject(target)) throw new TypeError();
      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
      return OrdinaryGetMetadata(metadataKey, target, propertyKey);
    }

    exporter("getMetadata", getMetadata);
    /**
     * Gets the metadata value for the provided metadata key on the target object.
     * @param metadataKey A key used to store and retrieve metadata.
     * @param target The target object on which the metadata is defined.
     * @param propertyKey (Optional) The property key for the target.
     * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     result = Reflect.getOwnMetadata("custom:annotation", Example);
     *
     *     // property (on constructor)
     *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticProperty");
     *
     *     // property (on prototype)
     *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "property");
     *
     *     // method (on constructor)
     *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticMethod");
     *
     *     // method (on prototype)
     *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "method");
     *
     */

    function getOwnMetadata(metadataKey, target, propertyKey) {
      if (!IsObject(target)) throw new TypeError();
      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
      return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);
    }

    exporter("getOwnMetadata", getOwnMetadata);
    /**
     * Gets the metadata keys defined on the target object or its prototype chain.
     * @param target The target object on which the metadata is defined.
     * @param propertyKey (Optional) The property key for the target.
     * @returns An array of unique metadata keys.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     result = Reflect.getMetadataKeys(Example);
     *
     *     // property (on constructor)
     *     result = Reflect.getMetadataKeys(Example, "staticProperty");
     *
     *     // property (on prototype)
     *     result = Reflect.getMetadataKeys(Example.prototype, "property");
     *
     *     // method (on constructor)
     *     result = Reflect.getMetadataKeys(Example, "staticMethod");
     *
     *     // method (on prototype)
     *     result = Reflect.getMetadataKeys(Example.prototype, "method");
     *
     */

    function getMetadataKeys(target, propertyKey) {
      if (!IsObject(target)) throw new TypeError();
      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
      return OrdinaryMetadataKeys(target, propertyKey);
    }

    exporter("getMetadataKeys", getMetadataKeys);
    /**
     * Gets the unique metadata keys defined on the target object.
     * @param target The target object on which the metadata is defined.
     * @param propertyKey (Optional) The property key for the target.
     * @returns An array of unique metadata keys.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     result = Reflect.getOwnMetadataKeys(Example);
     *
     *     // property (on constructor)
     *     result = Reflect.getOwnMetadataKeys(Example, "staticProperty");
     *
     *     // property (on prototype)
     *     result = Reflect.getOwnMetadataKeys(Example.prototype, "property");
     *
     *     // method (on constructor)
     *     result = Reflect.getOwnMetadataKeys(Example, "staticMethod");
     *
     *     // method (on prototype)
     *     result = Reflect.getOwnMetadataKeys(Example.prototype, "method");
     *
     */

    function getOwnMetadataKeys(target, propertyKey) {
      if (!IsObject(target)) throw new TypeError();
      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
      return OrdinaryOwnMetadataKeys(target, propertyKey);
    }

    exporter("getOwnMetadataKeys", getOwnMetadataKeys);
    /**
     * Deletes the metadata entry from the target object with the provided key.
     * @param metadataKey A key used to store and retrieve metadata.
     * @param target The target object on which the metadata is defined.
     * @param propertyKey (Optional) The property key for the target.
     * @returns `true` if the metadata entry was found and deleted; otherwise, false.
     * @example
     *
     *     class Example {
     *         // property declarations are not part of ES6, though they are valid in TypeScript:
     *         // static staticProperty;
     *         // property;
     *
     *         constructor(p) { }
     *         static staticMethod(p) { }
     *         method(p) { }
     *     }
     *
     *     // constructor
     *     result = Reflect.deleteMetadata("custom:annotation", Example);
     *
     *     // property (on constructor)
     *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticProperty");
     *
     *     // property (on prototype)
     *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "property");
     *
     *     // method (on constructor)
     *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticMethod");
     *
     *     // method (on prototype)
     *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "method");
     *
     */

    function deleteMetadata(metadataKey, target, propertyKey) {
      if (!IsObject(target)) throw new TypeError();
      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);
      var metadataMap = GetOrCreateMetadataMap(target, propertyKey,
      /*Create*/
      false);
      if (IsUndefined(metadataMap)) return false;
      if (!metadataMap["delete"](metadataKey)) return false;
      if (metadataMap.size > 0) return true;
      var targetMetadata = Metadata.get(target);
      targetMetadata["delete"](propertyKey);
      if (targetMetadata.size > 0) return true;
      Metadata["delete"](target);
      return true;
    }

    exporter("deleteMetadata", deleteMetadata);

    function DecorateConstructor(decorators, target) {
      for (var i = decorators.length - 1; i >= 0; --i) {
        var decorator = decorators[i];
        var decorated = decorator(target);

        if (!IsUndefined(decorated) && !IsNull(decorated)) {
          if (!IsConstructor(decorated)) throw new TypeError();
          target = decorated;
        }
      }

      return target;
    }

    function DecorateProperty(decorators, target, propertyKey, descriptor) {
      for (var i = decorators.length - 1; i >= 0; --i) {
        var decorator = decorators[i];
        var decorated = decorator(target, propertyKey, descriptor);

        if (!IsUndefined(decorated) && !IsNull(decorated)) {
          if (!IsObject(decorated)) throw new TypeError();
          descriptor = decorated;
        }
      }

      return descriptor;
    }

    function GetOrCreateMetadataMap(O, P, Create) {
      var targetMetadata = Metadata.get(O);

      if (IsUndefined(targetMetadata)) {
        if (!Create) return undefined;
        targetMetadata = new _Map();
        Metadata.set(O, targetMetadata);
      }

      var metadataMap = targetMetadata.get(P);

      if (IsUndefined(metadataMap)) {
        if (!Create) return undefined;
        metadataMap = new _Map();
        targetMetadata.set(P, metadataMap);
      }

      return metadataMap;
    } // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata


    function OrdinaryHasMetadata(MetadataKey, O, P) {
      var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
      if (hasOwn) return true;
      var parent = OrdinaryGetPrototypeOf(O);
      if (!IsNull(parent)) return OrdinaryHasMetadata(MetadataKey, parent, P);
      return false;
    } // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata


    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
      var metadataMap = GetOrCreateMetadataMap(O, P,
      /*Create*/
      false);
      if (IsUndefined(metadataMap)) return false;
      return ToBoolean(metadataMap.has(MetadataKey));
    } // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata


    function OrdinaryGetMetadata(MetadataKey, O, P) {
      var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
      if (hasOwn) return OrdinaryGetOwnMetadata(MetadataKey, O, P);
      var parent = OrdinaryGetPrototypeOf(O);
      if (!IsNull(parent)) return OrdinaryGetMetadata(MetadataKey, parent, P);
      return undefined;
    } // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata


    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
      var metadataMap = GetOrCreateMetadataMap(O, P,
      /*Create*/
      false);
      if (IsUndefined(metadataMap)) return undefined;
      return metadataMap.get(MetadataKey);
    } // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata


    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
      var metadataMap = GetOrCreateMetadataMap(O, P,
      /*Create*/
      true);
      metadataMap.set(MetadataKey, MetadataValue);
    } // 3.1.6.1 OrdinaryMetadataKeys(O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys


    function OrdinaryMetadataKeys(O, P) {
      var ownKeys = OrdinaryOwnMetadataKeys(O, P);
      var parent = OrdinaryGetPrototypeOf(O);
      if (parent === null) return ownKeys;
      var parentKeys = OrdinaryMetadataKeys(parent, P);
      if (parentKeys.length <= 0) return ownKeys;
      if (ownKeys.length <= 0) return parentKeys;
      var set = new _Set();
      var keys = [];

      for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {
        var key = ownKeys_1[_i];
        var hasKey = set.has(key);

        if (!hasKey) {
          set.add(key);
          keys.push(key);
        }
      }

      for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {
        var key = parentKeys_1[_a];
        var hasKey = set.has(key);

        if (!hasKey) {
          set.add(key);
          keys.push(key);
        }
      }

      return keys;
    } // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)
    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys


    function OrdinaryOwnMetadataKeys(O, P) {
      var keys = [];
      var metadataMap = GetOrCreateMetadataMap(O, P,
      /*Create*/
      false);
      if (IsUndefined(metadataMap)) return keys;
      var keysObj = metadataMap.keys();
      var iterator = GetIterator(keysObj);
      var k = 0;

      while (true) {
        var next = IteratorStep(iterator);

        if (!next) {
          keys.length = k;
          return keys;
        }

        var nextValue = IteratorValue(next);

        try {
          keys[k] = nextValue;
        } catch (e) {
          try {
            IteratorClose(iterator);
          } finally {
            throw e;
          }
        }

        k++;
      }
    } // 6 ECMAScript Data Typ0es and Values
    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values


    function Type(x) {
      if (x === null) return 1
      /* Null */
      ;

      switch (_typeof(x)) {
        case "undefined":
          return 0
          /* Undefined */
          ;

        case "boolean":
          return 2
          /* Boolean */
          ;

        case "string":
          return 3
          /* String */
          ;

        case "symbol":
          return 4
          /* Symbol */
          ;

        case "number":
          return 5
          /* Number */
          ;

        case "object":
          return x === null ? 1
          /* Null */
          : 6
          /* Object */
          ;

        default:
          return 6
          /* Object */
          ;
      }
    } // 6.1.1 The Undefined Type
    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type


    function IsUndefined(x) {
      return x === undefined;
    } // 6.1.2 The Null Type
    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type


    function IsNull(x) {
      return x === null;
    } // 6.1.5 The Symbol Type
    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type


    function IsSymbol(x) {
      return _typeof(x) === "symbol";
    } // 6.1.7 The Object Type
    // https://tc39.github.io/ecma262/#sec-object-type


    function IsObject(x) {
      return _typeof(x) === "object" ? x !== null : typeof x === "function";
    } // 7.1 Type Conversion
    // https://tc39.github.io/ecma262/#sec-type-conversion
    // 7.1.1 ToPrimitive(input [, PreferredType])
    // https://tc39.github.io/ecma262/#sec-toprimitive


    function ToPrimitive(input, PreferredType) {
      switch (Type(input)) {
        case 0
        /* Undefined */
        :
          return input;

        case 1
        /* Null */
        :
          return input;

        case 2
        /* Boolean */
        :
          return input;

        case 3
        /* String */
        :
          return input;

        case 4
        /* Symbol */
        :
          return input;

        case 5
        /* Number */
        :
          return input;
      }

      var hint = PreferredType === 3
      /* String */
      ? "string" : PreferredType === 5
      /* Number */
      ? "number" : "default";
      var exoticToPrim = GetMethod(input, toPrimitiveSymbol);

      if (exoticToPrim !== undefined) {
        var result = exoticToPrim.call(input, hint);
        if (IsObject(result)) throw new TypeError();
        return result;
      }

      return OrdinaryToPrimitive(input, hint === "default" ? "number" : hint);
    } // 7.1.1.1 OrdinaryToPrimitive(O, hint)
    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive


    function OrdinaryToPrimitive(O, hint) {
      if (hint === "string") {
        var toString_1 = O.toString;

        if (IsCallable(toString_1)) {
          var result = toString_1.call(O);
          if (!IsObject(result)) return result;
        }

        var valueOf = O.valueOf;

        if (IsCallable(valueOf)) {
          var result = valueOf.call(O);
          if (!IsObject(result)) return result;
        }
      } else {
        var valueOf = O.valueOf;

        if (IsCallable(valueOf)) {
          var result = valueOf.call(O);
          if (!IsObject(result)) return result;
        }

        var toString_2 = O.toString;

        if (IsCallable(toString_2)) {
          var result = toString_2.call(O);
          if (!IsObject(result)) return result;
        }
      }

      throw new TypeError();
    } // 7.1.2 ToBoolean(argument)
    // https://tc39.github.io/ecma262/2016/#sec-toboolean


    function ToBoolean(argument) {
      return !!argument;
    } // 7.1.12 ToString(argument)
    // https://tc39.github.io/ecma262/#sec-tostring


    function ToString(argument) {
      return "" + argument;
    } // 7.1.14 ToPropertyKey(argument)
    // https://tc39.github.io/ecma262/#sec-topropertykey


    function ToPropertyKey(argument) {
      var key = ToPrimitive(argument, 3
      /* String */
      );
      if (IsSymbol(key)) return key;
      return ToString(key);
    } // 7.2 Testing and Comparison Operations
    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations
    // 7.2.2 IsArray(argument)
    // https://tc39.github.io/ecma262/#sec-isarray


    function IsArray(argument) {
      return Array.isArray ? Array.isArray(argument) : argument instanceof Object ? argument instanceof Array : Object.prototype.toString.call(argument) === "[object Array]";
    } // 7.2.3 IsCallable(argument)
    // https://tc39.github.io/ecma262/#sec-iscallable


    function IsCallable(argument) {
      // NOTE: This is an approximation as we cannot check for [[Call]] internal method.
      return typeof argument === "function";
    } // 7.2.4 IsConstructor(argument)
    // https://tc39.github.io/ecma262/#sec-isconstructor


    function IsConstructor(argument) {
      // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.
      return typeof argument === "function";
    } // 7.2.7 IsPropertyKey(argument)
    // https://tc39.github.io/ecma262/#sec-ispropertykey


    function IsPropertyKey(argument) {
      switch (Type(argument)) {
        case 3
        /* String */
        :
          return true;

        case 4
        /* Symbol */
        :
          return true;

        default:
          return false;
      }
    } // 7.3 Operations on Objects
    // https://tc39.github.io/ecma262/#sec-operations-on-objects
    // 7.3.9 GetMethod(V, P)
    // https://tc39.github.io/ecma262/#sec-getmethod


    function GetMethod(V, P) {
      var func = V[P];
      if (func === undefined || func === null) return undefined;
      if (!IsCallable(func)) throw new TypeError();
      return func;
    } // 7.4 Operations on Iterator Objects
    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects


    function GetIterator(obj) {
      var method = GetMethod(obj, iteratorSymbol);
      if (!IsCallable(method)) throw new TypeError(); // from Call

      var iterator = method.call(obj);
      if (!IsObject(iterator)) throw new TypeError();
      return iterator;
    } // 7.4.4 IteratorValue(iterResult)
    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue


    function IteratorValue(iterResult) {
      return iterResult.value;
    } // 7.4.5 IteratorStep(iterator)
    // https://tc39.github.io/ecma262/#sec-iteratorstep


    function IteratorStep(iterator) {
      var result = iterator.next();
      return result.done ? false : result;
    } // 7.4.6 IteratorClose(iterator, completion)
    // https://tc39.github.io/ecma262/#sec-iteratorclose


    function IteratorClose(iterator) {
      var f = iterator["return"];
      if (f) f.call(iterator);
    } // 9.1 Ordinary Object Internal Methods and Internal Slots
    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots
    // 9.1.1.1 OrdinaryGetPrototypeOf(O)
    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof


    function OrdinaryGetPrototypeOf(O) {
      var proto = Object.getPrototypeOf(O);
      if (typeof O !== "function" || O === functionPrototype) return proto; // TypeScript doesn't set __proto__ in ES5, as it's non-standard.
      // Try to determine the superclass constructor. Compatible implementations
      // must either set __proto__ on a subclass constructor to the superclass constructor,
      // or ensure each class has a valid `constructor` property on its prototype that
      // points back to the constructor.
      // If this is not the same as Function.[[Prototype]], then this is definately inherited.
      // This is the case when in ES6 or when using __proto__ in a compatible browser.

      if (proto !== functionPrototype) return proto; // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.

      var prototype = O.prototype;
      var prototypeProto = prototype && Object.getPrototypeOf(prototype);
      if (prototypeProto == null || prototypeProto === Object.prototype) return proto; // If the constructor was not a function, then we cannot determine the heritage.

      var constructor = prototypeProto.constructor;
      if (typeof constructor !== "function") return proto; // If we have some kind of self-reference, then we cannot determine the heritage.

      if (constructor === O) return proto; // we have a pretty good guess at the heritage.

      return constructor;
    } // naive Map shim


    function CreateMapPolyfill() {
      var cacheSentinel = {};
      var arraySentinel = [];

      var MapIterator =
      /** @class */
      function () {
        function MapIterator(keys, values, selector) {
          this._index = 0;
          this._keys = keys;
          this._values = values;
          this._selector = selector;
        }

        MapIterator.prototype["@@iterator"] = function () {
          return this;
        };

        MapIterator.prototype[iteratorSymbol] = function () {
          return this;
        };

        MapIterator.prototype.next = function () {
          var index = this._index;

          if (index >= 0 && index < this._keys.length) {
            var result = this._selector(this._keys[index], this._values[index]);

            if (index + 1 >= this._keys.length) {
              this._index = -1;
              this._keys = arraySentinel;
              this._values = arraySentinel;
            } else {
              this._index++;
            }

            return {
              value: result,
              done: false
            };
          }

          return {
            value: undefined,
            done: true
          };
        };

        MapIterator.prototype["throw"] = function (error) {
          if (this._index >= 0) {
            this._index = -1;
            this._keys = arraySentinel;
            this._values = arraySentinel;
          }

          throw error;
        };

        MapIterator.prototype["return"] = function (value) {
          if (this._index >= 0) {
            this._index = -1;
            this._keys = arraySentinel;
            this._values = arraySentinel;
          }

          return {
            value: value,
            done: true
          };
        };

        return MapIterator;
      }();

      return (
        /** @class */
        function () {
          function Map() {
            this._keys = [];
            this._values = [];
            this._cacheKey = cacheSentinel;
            this._cacheIndex = -2;
          }

          Object.defineProperty(Map.prototype, "size", {
            get: function get() {
              return this._keys.length;
            },
            enumerable: true,
            configurable: true
          });

          Map.prototype.has = function (key) {
            return this._find(key,
            /*insert*/
            false) >= 0;
          };

          Map.prototype.get = function (key) {
            var index = this._find(key,
            /*insert*/
            false);

            return index >= 0 ? this._values[index] : undefined;
          };

          Map.prototype.set = function (key, value) {
            var index = this._find(key,
            /*insert*/
            true);

            this._values[index] = value;
            return this;
          };

          Map.prototype["delete"] = function (key) {
            var index = this._find(key,
            /*insert*/
            false);

            if (index >= 0) {
              var size = this._keys.length;

              for (var i = index + 1; i < size; i++) {
                this._keys[i - 1] = this._keys[i];
                this._values[i - 1] = this._values[i];
              }

              this._keys.length--;
              this._values.length--;

              if (key === this._cacheKey) {
                this._cacheKey = cacheSentinel;
                this._cacheIndex = -2;
              }

              return true;
            }

            return false;
          };

          Map.prototype.clear = function () {
            this._keys.length = 0;
            this._values.length = 0;
            this._cacheKey = cacheSentinel;
            this._cacheIndex = -2;
          };

          Map.prototype.keys = function () {
            return new MapIterator(this._keys, this._values, getKey);
          };

          Map.prototype.values = function () {
            return new MapIterator(this._keys, this._values, getValue);
          };

          Map.prototype.entries = function () {
            return new MapIterator(this._keys, this._values, getEntry);
          };

          Map.prototype["@@iterator"] = function () {
            return this.entries();
          };

          Map.prototype[iteratorSymbol] = function () {
            return this.entries();
          };

          Map.prototype._find = function (key, insert) {
            if (this._cacheKey !== key) {
              this._cacheIndex = this._keys.indexOf(this._cacheKey = key);
            }

            if (this._cacheIndex < 0 && insert) {
              this._cacheIndex = this._keys.length;

              this._keys.push(key);

              this._values.push(undefined);
            }

            return this._cacheIndex;
          };

          return Map;
        }()
      );

      function getKey(key, _) {
        return key;
      }

      function getValue(_, value) {
        return value;
      }

      function getEntry(key, value) {
        return [key, value];
      }
    } // naive Set shim


    function CreateSetPolyfill() {
      return (
        /** @class */
        function () {
          function Set() {
            this._map = new _Map();
          }

          Object.defineProperty(Set.prototype, "size", {
            get: function get() {
              return this._map.size;
            },
            enumerable: true,
            configurable: true
          });

          Set.prototype.has = function (value) {
            return this._map.has(value);
          };

          Set.prototype.add = function (value) {
            return this._map.set(value, value), this;
          };

          Set.prototype["delete"] = function (value) {
            return this._map["delete"](value);
          };

          Set.prototype.clear = function () {
            this._map.clear();
          };

          Set.prototype.keys = function () {
            return this._map.keys();
          };

          Set.prototype.values = function () {
            return this._map.values();
          };

          Set.prototype.entries = function () {
            return this._map.entries();
          };

          Set.prototype["@@iterator"] = function () {
            return this.keys();
          };

          Set.prototype[iteratorSymbol] = function () {
            return this.keys();
          };

          return Set;
        }()
      );
    } // naive WeakMap shim


    function CreateWeakMapPolyfill() {
      var UUID_SIZE = 16;
      var keys = HashMap.create();
      var rootKey = CreateUniqueKey();
      return (
        /** @class */
        function () {
          function WeakMap() {
            this._key = CreateUniqueKey();
          }

          WeakMap.prototype.has = function (target) {
            var table = GetOrCreateWeakMapTable(target,
            /*create*/
            false);
            return table !== undefined ? HashMap.has(table, this._key) : false;
          };

          WeakMap.prototype.get = function (target) {
            var table = GetOrCreateWeakMapTable(target,
            /*create*/
            false);
            return table !== undefined ? HashMap.get(table, this._key) : undefined;
          };

          WeakMap.prototype.set = function (target, value) {
            var table = GetOrCreateWeakMapTable(target,
            /*create*/
            true);
            table[this._key] = value;
            return this;
          };

          WeakMap.prototype["delete"] = function (target) {
            var table = GetOrCreateWeakMapTable(target,
            /*create*/
            false);
            return table !== undefined ? delete table[this._key] : false;
          };

          WeakMap.prototype.clear = function () {
            // NOTE: not a real clear, just makes the previous data unreachable
            this._key = CreateUniqueKey();
          };

          return WeakMap;
        }()
      );

      function CreateUniqueKey() {
        var key;

        do {
          key = "@@WeakMap@@" + CreateUUID();
        } while (HashMap.has(keys, key));

        keys[key] = true;
        return key;
      }

      function GetOrCreateWeakMapTable(target, create) {
        if (!hasOwn.call(target, rootKey)) {
          if (!create) return undefined;
          Object.defineProperty(target, rootKey, {
            value: HashMap.create()
          });
        }

        return target[rootKey];
      }

      function FillRandomBytes(buffer, size) {
        for (var i = 0; i < size; ++i) {
          buffer[i] = Math.random() * 0xff | 0;
        }

        return buffer;
      }

      function GenRandomBytes(size) {
        if (typeof Uint8Array === "function") {
          if (typeof crypto !== "undefined") return crypto.getRandomValues(new Uint8Array(size));
          if (typeof msCrypto !== "undefined") return msCrypto.getRandomValues(new Uint8Array(size));
          return FillRandomBytes(new Uint8Array(size), size);
        }

        return FillRandomBytes(new Array(size), size);
      }

      function CreateUUID() {
        var data = GenRandomBytes(UUID_SIZE); // mark as random - RFC 4122 § 4.4

        data[6] = data[6] & 0x4f | 0x40;
        data[8] = data[8] & 0xbf | 0x80;
        var result = "";

        for (var offset = 0; offset < UUID_SIZE; ++offset) {
          var _byte = data[offset];
          if (offset === 4 || offset === 6 || offset === 8) result += "-";
          if (_byte < 16) result += "0";
          result += _byte.toString(16).toLowerCase();
        }

        return result;
      }
    } // uses a heuristic used by v8 and chakra to force an object into dictionary mode.


    function MakeDictionary(obj) {
      obj.__ = undefined;
      delete obj.__;
      return obj;
    }
  });
})(Reflect || (Reflect = {}));

/***/ }),
/* 778 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // Generated using scripts/write-decode-map.ts

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = new Uint16Array( // prettier-ignore
"\u1D41<\xD5\u0131\u028A\u049D\u057B\u05D0\u0675\u06DE\u07A2\u07D6\u080F\u0A4A\u0A91\u0DA1\u0E6D\u0F09\u0F26\u10CA\u1228\u12E1\u1415\u149D\u14C3\u14DF\u1525\0\0\0\0\0\0\u156B\u16CD\u198D\u1C12\u1DDD\u1F7E\u2060\u21B0\u228D\u23C0\u23FB\u2442\u2824\u2912\u2D08\u2E48\u2FCE\u3016\u32BA\u3639\u37AC\u38FE\u3A28\u3A71\u3AE0\u3B2E\u0800EMabcfglmnoprstu\\bfms\x7F\x84\x8B\x90\x95\x98\xA6\xB3\xB9\xC8\xCFlig\u803B\xC6\u40C6P\u803B&\u4026cute\u803B\xC1\u40C1reve;\u4102\u0100iyx}rc\u803B\xC2\u40C2;\u4410r;\uC000\uD835\uDD04rave\u803B\xC0\u40C0pha;\u4391acr;\u4100d;\u6A53\u0100gp\x9D\xA1on;\u4104f;\uC000\uD835\uDD38plyFunction;\u6061ing\u803B\xC5\u40C5\u0100cs\xBE\xC3r;\uC000\uD835\uDC9Cign;\u6254ilde\u803B\xC3\u40C3ml\u803B\xC4\u40C4\u0400aceforsu\xE5\xFB\xFE\u0117\u011C\u0122\u0127\u012A\u0100cr\xEA\xF2kslash;\u6216\u0176\xF6\xF8;\u6AE7ed;\u6306y;\u4411\u0180crt\u0105\u010B\u0114ause;\u6235noullis;\u612Ca;\u4392r;\uC000\uD835\uDD05pf;\uC000\uD835\uDD39eve;\u42D8c\xF2\u0113mpeq;\u624E\u0700HOacdefhilorsu\u014D\u0151\u0156\u0180\u019E\u01A2\u01B5\u01B7\u01BA\u01DC\u0215\u0273\u0278\u027Ecy;\u4427PY\u803B\xA9\u40A9\u0180cpy\u015D\u0162\u017Aute;\u4106\u0100;i\u0167\u0168\u62D2talDifferentialD;\u6145leys;\u612D\u0200aeio\u0189\u018E\u0194\u0198ron;\u410Cdil\u803B\xC7\u40C7rc;\u4108nint;\u6230ot;\u410A\u0100dn\u01A7\u01ADilla;\u40B8terDot;\u40B7\xF2\u017Fi;\u43A7rcle\u0200DMPT\u01C7\u01CB\u01D1\u01D6ot;\u6299inus;\u6296lus;\u6295imes;\u6297o\u0100cs\u01E2\u01F8kwiseContourIntegral;\u6232eCurly\u0100DQ\u0203\u020FoubleQuote;\u601Duote;\u6019\u0200lnpu\u021E\u0228\u0247\u0255on\u0100;e\u0225\u0226\u6237;\u6A74\u0180git\u022F\u0236\u023Aruent;\u6261nt;\u622FourIntegral;\u622E\u0100fr\u024C\u024E;\u6102oduct;\u6210nterClockwiseContourIntegral;\u6233oss;\u6A2Fcr;\uC000\uD835\uDC9Ep\u0100;C\u0284\u0285\u62D3ap;\u624D\u0580DJSZacefios\u02A0\u02AC\u02B0\u02B4\u02B8\u02CB\u02D7\u02E1\u02E6\u0333\u048D\u0100;o\u0179\u02A5trahd;\u6911cy;\u4402cy;\u4405cy;\u440F\u0180grs\u02BF\u02C4\u02C7ger;\u6021r;\u61A1hv;\u6AE4\u0100ay\u02D0\u02D5ron;\u410E;\u4414l\u0100;t\u02DD\u02DE\u6207a;\u4394r;\uC000\uD835\uDD07\u0100af\u02EB\u0327\u0100cm\u02F0\u0322ritical\u0200ADGT\u0300\u0306\u0316\u031Ccute;\u40B4o\u0174\u030B\u030D;\u42D9bleAcute;\u42DDrave;\u4060ilde;\u42DCond;\u62C4ferentialD;\u6146\u0470\u033D\0\0\0\u0342\u0354\0\u0405f;\uC000\uD835\uDD3B\u0180;DE\u0348\u0349\u034D\u40A8ot;\u60DCqual;\u6250ble\u0300CDLRUV\u0363\u0372\u0382\u03CF\u03E2\u03F8ontourIntegra\xEC\u0239o\u0274\u0379\0\0\u037B\xBB\u0349nArrow;\u61D3\u0100eo\u0387\u03A4ft\u0180ART\u0390\u0396\u03A1rrow;\u61D0ightArrow;\u61D4e\xE5\u02CAng\u0100LR\u03AB\u03C4eft\u0100AR\u03B3\u03B9rrow;\u67F8ightArrow;\u67FAightArrow;\u67F9ight\u0100AT\u03D8\u03DErrow;\u61D2ee;\u62A8p\u0241\u03E9\0\0\u03EFrrow;\u61D1ownArrow;\u61D5erticalBar;\u6225n\u0300ABLRTa\u0412\u042A\u0430\u045E\u047F\u037Crrow\u0180;BU\u041D\u041E\u0422\u6193ar;\u6913pArrow;\u61F5reve;\u4311eft\u02D2\u043A\0\u0446\0\u0450ightVector;\u6950eeVector;\u695Eector\u0100;B\u0459\u045A\u61BDar;\u6956ight\u01D4\u0467\0\u0471eeVector;\u695Fector\u0100;B\u047A\u047B\u61C1ar;\u6957ee\u0100;A\u0486\u0487\u62A4rrow;\u61A7\u0100ct\u0492\u0497r;\uC000\uD835\uDC9Frok;\u4110\u0800NTacdfglmopqstux\u04BD\u04C0\u04C4\u04CB\u04DE\u04E2\u04E7\u04EE\u04F5\u0521\u052F\u0536\u0552\u055D\u0560\u0565G;\u414AH\u803B\xD0\u40D0cute\u803B\xC9\u40C9\u0180aiy\u04D2\u04D7\u04DCron;\u411Arc\u803B\xCA\u40CA;\u442Dot;\u4116r;\uC000\uD835\uDD08rave\u803B\xC8\u40C8ement;\u6208\u0100ap\u04FA\u04FEcr;\u4112ty\u0253\u0506\0\0\u0512mallSquare;\u65FBerySmallSquare;\u65AB\u0100gp\u0526\u052Aon;\u4118f;\uC000\uD835\uDD3Csilon;\u4395u\u0100ai\u053C\u0549l\u0100;T\u0542\u0543\u6A75ilde;\u6242librium;\u61CC\u0100ci\u0557\u055Ar;\u6130m;\u6A73a;\u4397ml\u803B\xCB\u40CB\u0100ip\u056A\u056Fsts;\u6203onentialE;\u6147\u0280cfios\u0585\u0588\u058D\u05B2\u05CCy;\u4424r;\uC000\uD835\uDD09lled\u0253\u0597\0\0\u05A3mallSquare;\u65FCerySmallSquare;\u65AA\u0370\u05BA\0\u05BF\0\0\u05C4f;\uC000\uD835\uDD3DAll;\u6200riertrf;\u6131c\xF2\u05CB\u0600JTabcdfgorst\u05E8\u05EC\u05EF\u05FA\u0600\u0612\u0616\u061B\u061D\u0623\u066C\u0672cy;\u4403\u803B>\u403Emma\u0100;d\u05F7\u05F8\u4393;\u43DCreve;\u411E\u0180eiy\u0607\u060C\u0610dil;\u4122rc;\u411C;\u4413ot;\u4120r;\uC000\uD835\uDD0A;\u62D9pf;\uC000\uD835\uDD3Eeater\u0300EFGLST\u0635\u0644\u064E\u0656\u065B\u0666qual\u0100;L\u063E\u063F\u6265ess;\u62DBullEqual;\u6267reater;\u6AA2ess;\u6277lantEqual;\u6A7Eilde;\u6273cr;\uC000\uD835\uDCA2;\u626B\u0400Aacfiosu\u0685\u068B\u0696\u069B\u069E\u06AA\u06BE\u06CARDcy;\u442A\u0100ct\u0690\u0694ek;\u42C7;\u405Eirc;\u4124r;\u610ClbertSpace;\u610B\u01F0\u06AF\0\u06B2f;\u610DizontalLine;\u6500\u0100ct\u06C3\u06C5\xF2\u06A9rok;\u4126mp\u0144\u06D0\u06D8ownHum\xF0\u012Fqual;\u624F\u0700EJOacdfgmnostu\u06FA\u06FE\u0703\u0707\u070E\u071A\u071E\u0721\u0728\u0744\u0778\u078B\u078F\u0795cy;\u4415lig;\u4132cy;\u4401cute\u803B\xCD\u40CD\u0100iy\u0713\u0718rc\u803B\xCE\u40CE;\u4418ot;\u4130r;\u6111rave\u803B\xCC\u40CC\u0180;ap\u0720\u072F\u073F\u0100cg\u0734\u0737r;\u412AinaryI;\u6148lie\xF3\u03DD\u01F4\u0749\0\u0762\u0100;e\u074D\u074E\u622C\u0100gr\u0753\u0758ral;\u622Bsection;\u62C2isible\u0100CT\u076C\u0772omma;\u6063imes;\u6062\u0180gpt\u077F\u0783\u0788on;\u412Ef;\uC000\uD835\uDD40a;\u4399cr;\u6110ilde;\u4128\u01EB\u079A\0\u079Ecy;\u4406l\u803B\xCF\u40CF\u0280cfosu\u07AC\u07B7\u07BC\u07C2\u07D0\u0100iy\u07B1\u07B5rc;\u4134;\u4419r;\uC000\uD835\uDD0Dpf;\uC000\uD835\uDD41\u01E3\u07C7\0\u07CCr;\uC000\uD835\uDCA5rcy;\u4408kcy;\u4404\u0380HJacfos\u07E4\u07E8\u07EC\u07F1\u07FD\u0802\u0808cy;\u4425cy;\u440Cppa;\u439A\u0100ey\u07F6\u07FBdil;\u4136;\u441Ar;\uC000\uD835\uDD0Epf;\uC000\uD835\uDD42cr;\uC000\uD835\uDCA6\u0580JTaceflmost\u0825\u0829\u082C\u0850\u0863\u09B3\u09B8\u09C7\u09CD\u0A37\u0A47cy;\u4409\u803B<\u403C\u0280cmnpr\u0837\u083C\u0841\u0844\u084Dute;\u4139bda;\u439Bg;\u67EAlacetrf;\u6112r;\u619E\u0180aey\u0857\u085C\u0861ron;\u413Ddil;\u413B;\u441B\u0100fs\u0868\u0970t\u0500ACDFRTUVar\u087E\u08A9\u08B1\u08E0\u08E6\u08FC\u092F\u095B\u0390\u096A\u0100nr\u0883\u088FgleBracket;\u67E8row\u0180;BR\u0899\u089A\u089E\u6190ar;\u61E4ightArrow;\u61C6eiling;\u6308o\u01F5\u08B7\0\u08C3bleBracket;\u67E6n\u01D4\u08C8\0\u08D2eeVector;\u6961ector\u0100;B\u08DB\u08DC\u61C3ar;\u6959loor;\u630Aight\u0100AV\u08EF\u08F5rrow;\u6194ector;\u694E\u0100er\u0901\u0917e\u0180;AV\u0909\u090A\u0910\u62A3rrow;\u61A4ector;\u695Aiangle\u0180;BE\u0924\u0925\u0929\u62B2ar;\u69CFqual;\u62B4p\u0180DTV\u0937\u0942\u094CownVector;\u6951eeVector;\u6960ector\u0100;B\u0956\u0957\u61BFar;\u6958ector\u0100;B\u0965\u0966\u61BCar;\u6952ight\xE1\u039Cs\u0300EFGLST\u097E\u098B\u0995\u099D\u09A2\u09ADqualGreater;\u62DAullEqual;\u6266reater;\u6276ess;\u6AA1lantEqual;\u6A7Dilde;\u6272r;\uC000\uD835\uDD0F\u0100;e\u09BD\u09BE\u62D8ftarrow;\u61DAidot;\u413F\u0180npw\u09D4\u0A16\u0A1Bg\u0200LRlr\u09DE\u09F7\u0A02\u0A10eft\u0100AR\u09E6\u09ECrrow;\u67F5ightArrow;\u67F7ightArrow;\u67F6eft\u0100ar\u03B3\u0A0Aight\xE1\u03BFight\xE1\u03CAf;\uC000\uD835\uDD43er\u0100LR\u0A22\u0A2CeftArrow;\u6199ightArrow;\u6198\u0180cht\u0A3E\u0A40\u0A42\xF2\u084C;\u61B0rok;\u4141;\u626A\u0400acefiosu\u0A5A\u0A5D\u0A60\u0A77\u0A7C\u0A85\u0A8B\u0A8Ep;\u6905y;\u441C\u0100dl\u0A65\u0A6FiumSpace;\u605Flintrf;\u6133r;\uC000\uD835\uDD10nusPlus;\u6213pf;\uC000\uD835\uDD44c\xF2\u0A76;\u439C\u0480Jacefostu\u0AA3\u0AA7\u0AAD\u0AC0\u0B14\u0B19\u0D91\u0D97\u0D9Ecy;\u440Acute;\u4143\u0180aey\u0AB4\u0AB9\u0ABEron;\u4147dil;\u4145;\u441D\u0180gsw\u0AC7\u0AF0\u0B0Eative\u0180MTV\u0AD3\u0ADF\u0AE8ediumSpace;\u600Bhi\u0100cn\u0AE6\u0AD8\xEB\u0AD9eryThi\xEE\u0AD9ted\u0100GL\u0AF8\u0B06reaterGreate\xF2\u0673essLes\xF3\u0A48Line;\u400Ar;\uC000\uD835\uDD11\u0200Bnpt\u0B22\u0B28\u0B37\u0B3Areak;\u6060BreakingSpace;\u40A0f;\u6115\u0680;CDEGHLNPRSTV\u0B55\u0B56\u0B6A\u0B7C\u0BA1\u0BEB\u0C04\u0C5E\u0C84\u0CA6\u0CD8\u0D61\u0D85\u6AEC\u0100ou\u0B5B\u0B64ngruent;\u6262pCap;\u626DoubleVerticalBar;\u6226\u0180lqx\u0B83\u0B8A\u0B9Bement;\u6209ual\u0100;T\u0B92\u0B93\u6260ilde;\uC000\u2242\u0338ists;\u6204reater\u0380;EFGLST\u0BB6\u0BB7\u0BBD\u0BC9\u0BD3\u0BD8\u0BE5\u626Fqual;\u6271ullEqual;\uC000\u2267\u0338reater;\uC000\u226B\u0338ess;\u6279lantEqual;\uC000\u2A7E\u0338ilde;\u6275ump\u0144\u0BF2\u0BFDownHump;\uC000\u224E\u0338qual;\uC000\u224F\u0338e\u0100fs\u0C0A\u0C27tTriangle\u0180;BE\u0C1A\u0C1B\u0C21\u62EAar;\uC000\u29CF\u0338qual;\u62ECs\u0300;EGLST\u0C35\u0C36\u0C3C\u0C44\u0C4B\u0C58\u626Equal;\u6270reater;\u6278ess;\uC000\u226A\u0338lantEqual;\uC000\u2A7D\u0338ilde;\u6274ested\u0100GL\u0C68\u0C79reaterGreater;\uC000\u2AA2\u0338essLess;\uC000\u2AA1\u0338recedes\u0180;ES\u0C92\u0C93\u0C9B\u6280qual;\uC000\u2AAF\u0338lantEqual;\u62E0\u0100ei\u0CAB\u0CB9verseElement;\u620CghtTriangle\u0180;BE\u0CCB\u0CCC\u0CD2\u62EBar;\uC000\u29D0\u0338qual;\u62ED\u0100qu\u0CDD\u0D0CuareSu\u0100bp\u0CE8\u0CF9set\u0100;E\u0CF0\u0CF3\uC000\u228F\u0338qual;\u62E2erset\u0100;E\u0D03\u0D06\uC000\u2290\u0338qual;\u62E3\u0180bcp\u0D13\u0D24\u0D4Eset\u0100;E\u0D1B\u0D1E\uC000\u2282\u20D2qual;\u6288ceeds\u0200;EST\u0D32\u0D33\u0D3B\u0D46\u6281qual;\uC000\u2AB0\u0338lantEqual;\u62E1ilde;\uC000\u227F\u0338erset\u0100;E\u0D58\u0D5B\uC000\u2283\u20D2qual;\u6289ilde\u0200;EFT\u0D6E\u0D6F\u0D75\u0D7F\u6241qual;\u6244ullEqual;\u6247ilde;\u6249erticalBar;\u6224cr;\uC000\uD835\uDCA9ilde\u803B\xD1\u40D1;\u439D\u0700Eacdfgmoprstuv\u0DBD\u0DC2\u0DC9\u0DD5\u0DDB\u0DE0\u0DE7\u0DFC\u0E02\u0E20\u0E22\u0E32\u0E3F\u0E44lig;\u4152cute\u803B\xD3\u40D3\u0100iy\u0DCE\u0DD3rc\u803B\xD4\u40D4;\u441Eblac;\u4150r;\uC000\uD835\uDD12rave\u803B\xD2\u40D2\u0180aei\u0DEE\u0DF2\u0DF6cr;\u414Cga;\u43A9cron;\u439Fpf;\uC000\uD835\uDD46enCurly\u0100DQ\u0E0E\u0E1AoubleQuote;\u601Cuote;\u6018;\u6A54\u0100cl\u0E27\u0E2Cr;\uC000\uD835\uDCAAash\u803B\xD8\u40D8i\u016C\u0E37\u0E3Cde\u803B\xD5\u40D5es;\u6A37ml\u803B\xD6\u40D6er\u0100BP\u0E4B\u0E60\u0100ar\u0E50\u0E53r;\u603Eac\u0100ek\u0E5A\u0E5C;\u63DEet;\u63B4arenthesis;\u63DC\u0480acfhilors\u0E7F\u0E87\u0E8A\u0E8F\u0E92\u0E94\u0E9D\u0EB0\u0EFCrtialD;\u6202y;\u441Fr;\uC000\uD835\uDD13i;\u43A6;\u43A0usMinus;\u40B1\u0100ip\u0EA2\u0EADncareplan\xE5\u069Df;\u6119\u0200;eio\u0EB9\u0EBA\u0EE0\u0EE4\u6ABBcedes\u0200;EST\u0EC8\u0EC9\u0ECF\u0EDA\u627Aqual;\u6AAFlantEqual;\u627Cilde;\u627Eme;\u6033\u0100dp\u0EE9\u0EEEuct;\u620Fortion\u0100;a\u0225\u0EF9l;\u621D\u0100ci\u0F01\u0F06r;\uC000\uD835\uDCAB;\u43A8\u0200Ufos\u0F11\u0F16\u0F1B\u0F1FOT\u803B\"\u4022r;\uC000\uD835\uDD14pf;\u611Acr;\uC000\uD835\uDCAC\u0600BEacefhiorsu\u0F3E\u0F43\u0F47\u0F60\u0F73\u0FA7\u0FAA\u0FAD\u1096\u10A9\u10B4\u10BEarr;\u6910G\u803B\xAE\u40AE\u0180cnr\u0F4E\u0F53\u0F56ute;\u4154g;\u67EBr\u0100;t\u0F5C\u0F5D\u61A0l;\u6916\u0180aey\u0F67\u0F6C\u0F71ron;\u4158dil;\u4156;\u4420\u0100;v\u0F78\u0F79\u611Cerse\u0100EU\u0F82\u0F99\u0100lq\u0F87\u0F8Eement;\u620Builibrium;\u61CBpEquilibrium;\u696Fr\xBB\u0F79o;\u43A1ght\u0400ACDFTUVa\u0FC1\u0FEB\u0FF3\u1022\u1028\u105B\u1087\u03D8\u0100nr\u0FC6\u0FD2gleBracket;\u67E9row\u0180;BL\u0FDC\u0FDD\u0FE1\u6192ar;\u61E5eftArrow;\u61C4eiling;\u6309o\u01F5\u0FF9\0\u1005bleBracket;\u67E7n\u01D4\u100A\0\u1014eeVector;\u695Dector\u0100;B\u101D\u101E\u61C2ar;\u6955loor;\u630B\u0100er\u102D\u1043e\u0180;AV\u1035\u1036\u103C\u62A2rrow;\u61A6ector;\u695Biangle\u0180;BE\u1050\u1051\u1055\u62B3ar;\u69D0qual;\u62B5p\u0180DTV\u1063\u106E\u1078ownVector;\u694FeeVector;\u695Cector\u0100;B\u1082\u1083\u61BEar;\u6954ector\u0100;B\u1091\u1092\u61C0ar;\u6953\u0100pu\u109B\u109Ef;\u611DndImplies;\u6970ightarrow;\u61DB\u0100ch\u10B9\u10BCr;\u611B;\u61B1leDelayed;\u69F4\u0680HOacfhimoqstu\u10E4\u10F1\u10F7\u10FD\u1119\u111E\u1151\u1156\u1161\u1167\u11B5\u11BB\u11BF\u0100Cc\u10E9\u10EEHcy;\u4429y;\u4428FTcy;\u442Ccute;\u415A\u0280;aeiy\u1108\u1109\u110E\u1113\u1117\u6ABCron;\u4160dil;\u415Erc;\u415C;\u4421r;\uC000\uD835\uDD16ort\u0200DLRU\u112A\u1134\u113E\u1149ownArrow\xBB\u041EeftArrow\xBB\u089AightArrow\xBB\u0FDDpArrow;\u6191gma;\u43A3allCircle;\u6218pf;\uC000\uD835\uDD4A\u0272\u116D\0\0\u1170t;\u621Aare\u0200;ISU\u117B\u117C\u1189\u11AF\u65A1ntersection;\u6293u\u0100bp\u118F\u119Eset\u0100;E\u1197\u1198\u628Fqual;\u6291erset\u0100;E\u11A8\u11A9\u6290qual;\u6292nion;\u6294cr;\uC000\uD835\uDCAEar;\u62C6\u0200bcmp\u11C8\u11DB\u1209\u120B\u0100;s\u11CD\u11CE\u62D0et\u0100;E\u11CD\u11D5qual;\u6286\u0100ch\u11E0\u1205eeds\u0200;EST\u11ED\u11EE\u11F4\u11FF\u627Bqual;\u6AB0lantEqual;\u627Dilde;\u627FTh\xE1\u0F8C;\u6211\u0180;es\u1212\u1213\u1223\u62D1rset\u0100;E\u121C\u121D\u6283qual;\u6287et\xBB\u1213\u0580HRSacfhiors\u123E\u1244\u1249\u1255\u125E\u1271\u1276\u129F\u12C2\u12C8\u12D1ORN\u803B\xDE\u40DEADE;\u6122\u0100Hc\u124E\u1252cy;\u440By;\u4426\u0100bu\u125A\u125C;\u4009;\u43A4\u0180aey\u1265\u126A\u126Fron;\u4164dil;\u4162;\u4422r;\uC000\uD835\uDD17\u0100ei\u127B\u1289\u01F2\u1280\0\u1287efore;\u6234a;\u4398\u0100cn\u128E\u1298kSpace;\uC000\u205F\u200ASpace;\u6009lde\u0200;EFT\u12AB\u12AC\u12B2\u12BC\u623Cqual;\u6243ullEqual;\u6245ilde;\u6248pf;\uC000\uD835\uDD4BipleDot;\u60DB\u0100ct\u12D6\u12DBr;\uC000\uD835\uDCAFrok;\u4166\u0AE1\u12F7\u130E\u131A\u1326\0\u132C\u1331\0\0\0\0\0\u1338\u133D\u1377\u1385\0\u13FF\u1404\u140A\u1410\u0100cr\u12FB\u1301ute\u803B\xDA\u40DAr\u0100;o\u1307\u1308\u619Fcir;\u6949r\u01E3\u1313\0\u1316y;\u440Eve;\u416C\u0100iy\u131E\u1323rc\u803B\xDB\u40DB;\u4423blac;\u4170r;\uC000\uD835\uDD18rave\u803B\xD9\u40D9acr;\u416A\u0100di\u1341\u1369er\u0100BP\u1348\u135D\u0100ar\u134D\u1350r;\u405Fac\u0100ek\u1357\u1359;\u63DFet;\u63B5arenthesis;\u63DDon\u0100;P\u1370\u1371\u62C3lus;\u628E\u0100gp\u137B\u137Fon;\u4172f;\uC000\uD835\uDD4C\u0400ADETadps\u1395\u13AE\u13B8\u13C4\u03E8\u13D2\u13D7\u13F3rrow\u0180;BD\u1150\u13A0\u13A4ar;\u6912ownArrow;\u61C5ownArrow;\u6195quilibrium;\u696Eee\u0100;A\u13CB\u13CC\u62A5rrow;\u61A5own\xE1\u03F3er\u0100LR\u13DE\u13E8eftArrow;\u6196ightArrow;\u6197i\u0100;l\u13F9\u13FA\u43D2on;\u43A5ing;\u416Ecr;\uC000\uD835\uDCB0ilde;\u4168ml\u803B\xDC\u40DC\u0480Dbcdefosv\u1427\u142C\u1430\u1433\u143E\u1485\u148A\u1490\u1496ash;\u62ABar;\u6AEBy;\u4412ash\u0100;l\u143B\u143C\u62A9;\u6AE6\u0100er\u1443\u1445;\u62C1\u0180bty\u144C\u1450\u147Aar;\u6016\u0100;i\u144F\u1455cal\u0200BLST\u1461\u1465\u146A\u1474ar;\u6223ine;\u407Ceparator;\u6758ilde;\u6240ThinSpace;\u600Ar;\uC000\uD835\uDD19pf;\uC000\uD835\uDD4Dcr;\uC000\uD835\uDCB1dash;\u62AA\u0280cefos\u14A7\u14AC\u14B1\u14B6\u14BCirc;\u4174dge;\u62C0r;\uC000\uD835\uDD1Apf;\uC000\uD835\uDD4Ecr;\uC000\uD835\uDCB2\u0200fios\u14CB\u14D0\u14D2\u14D8r;\uC000\uD835\uDD1B;\u439Epf;\uC000\uD835\uDD4Fcr;\uC000\uD835\uDCB3\u0480AIUacfosu\u14F1\u14F5\u14F9\u14FD\u1504\u150F\u1514\u151A\u1520cy;\u442Fcy;\u4407cy;\u442Ecute\u803B\xDD\u40DD\u0100iy\u1509\u150Drc;\u4176;\u442Br;\uC000\uD835\uDD1Cpf;\uC000\uD835\uDD50cr;\uC000\uD835\uDCB4ml;\u4178\u0400Hacdefos\u1535\u1539\u153F\u154B\u154F\u155D\u1560\u1564cy;\u4416cute;\u4179\u0100ay\u1544\u1549ron;\u417D;\u4417ot;\u417B\u01F2\u1554\0\u155BoWidt\xE8\u0AD9a;\u4396r;\u6128pf;\u6124cr;\uC000\uD835\uDCB5\u0BE1\u1583\u158A\u1590\0\u15B0\u15B6\u15BF\0\0\0\0\u15C6\u15DB\u15EB\u165F\u166D\0\u1695\u169B\u16B2\u16B9\0\u16BEcute\u803B\xE1\u40E1reve;\u4103\u0300;Ediuy\u159C\u159D\u15A1\u15A3\u15A8\u15AD\u623E;\uC000\u223E\u0333;\u623Frc\u803B\xE2\u40E2te\u80BB\xB4\u0306;\u4430lig\u803B\xE6\u40E6\u0100;r\xB2\u15BA;\uC000\uD835\uDD1Erave\u803B\xE0\u40E0\u0100ep\u15CA\u15D6\u0100fp\u15CF\u15D4sym;\u6135\xE8\u15D3ha;\u43B1\u0100ap\u15DFc\u0100cl\u15E4\u15E7r;\u4101g;\u6A3F\u0264\u15F0\0\0\u160A\u0280;adsv\u15FA\u15FB\u15FF\u1601\u1607\u6227nd;\u6A55;\u6A5Clope;\u6A58;\u6A5A\u0380;elmrsz\u1618\u1619\u161B\u161E\u163F\u164F\u1659\u6220;\u69A4e\xBB\u1619sd\u0100;a\u1625\u1626\u6221\u0461\u1630\u1632\u1634\u1636\u1638\u163A\u163C\u163E;\u69A8;\u69A9;\u69AA;\u69AB;\u69AC;\u69AD;\u69AE;\u69AFt\u0100;v\u1645\u1646\u621Fb\u0100;d\u164C\u164D\u62BE;\u699D\u0100pt\u1654\u1657h;\u6222\xBB\xB9arr;\u637C\u0100gp\u1663\u1667on;\u4105f;\uC000\uD835\uDD52\u0380;Eaeiop\u12C1\u167B\u167D\u1682\u1684\u1687\u168A;\u6A70cir;\u6A6F;\u624Ad;\u624Bs;\u4027rox\u0100;e\u12C1\u1692\xF1\u1683ing\u803B\xE5\u40E5\u0180cty\u16A1\u16A6\u16A8r;\uC000\uD835\uDCB6;\u402Amp\u0100;e\u12C1\u16AF\xF1\u0288ilde\u803B\xE3\u40E3ml\u803B\xE4\u40E4\u0100ci\u16C2\u16C8onin\xF4\u0272nt;\u6A11\u0800Nabcdefiklnoprsu\u16ED\u16F1\u1730\u173C\u1743\u1748\u1778\u177D\u17E0\u17E6\u1839\u1850\u170D\u193D\u1948\u1970ot;\u6AED\u0100cr\u16F6\u171Ek\u0200ceps\u1700\u1705\u170D\u1713ong;\u624Cpsilon;\u43F6rime;\u6035im\u0100;e\u171A\u171B\u623Dq;\u62CD\u0176\u1722\u1726ee;\u62BDed\u0100;g\u172C\u172D\u6305e\xBB\u172Drk\u0100;t\u135C\u1737brk;\u63B6\u0100oy\u1701\u1741;\u4431quo;\u601E\u0280cmprt\u1753\u175B\u1761\u1764\u1768aus\u0100;e\u010A\u0109ptyv;\u69B0s\xE9\u170Cno\xF5\u0113\u0180ahw\u176F\u1771\u1773;\u43B2;\u6136een;\u626Cr;\uC000\uD835\uDD1Fg\u0380costuvw\u178D\u179D\u17B3\u17C1\u17D5\u17DB\u17DE\u0180aiu\u1794\u1796\u179A\xF0\u0760rc;\u65EFp\xBB\u1371\u0180dpt\u17A4\u17A8\u17ADot;\u6A00lus;\u6A01imes;\u6A02\u0271\u17B9\0\0\u17BEcup;\u6A06ar;\u6605riangle\u0100du\u17CD\u17D2own;\u65BDp;\u65B3plus;\u6A04e\xE5\u1444\xE5\u14ADarow;\u690D\u0180ako\u17ED\u1826\u1835\u0100cn\u17F2\u1823k\u0180lst\u17FA\u05AB\u1802ozenge;\u69EBriangle\u0200;dlr\u1812\u1813\u1818\u181D\u65B4own;\u65BEeft;\u65C2ight;\u65B8k;\u6423\u01B1\u182B\0\u1833\u01B2\u182F\0\u1831;\u6592;\u65914;\u6593ck;\u6588\u0100eo\u183E\u184D\u0100;q\u1843\u1846\uC000=\u20E5uiv;\uC000\u2261\u20E5t;\u6310\u0200ptwx\u1859\u185E\u1867\u186Cf;\uC000\uD835\uDD53\u0100;t\u13CB\u1863om\xBB\u13CCtie;\u62C8\u0600DHUVbdhmptuv\u1885\u1896\u18AA\u18BB\u18D7\u18DB\u18EC\u18FF\u1905\u190A\u1910\u1921\u0200LRlr\u188E\u1890\u1892\u1894;\u6557;\u6554;\u6556;\u6553\u0280;DUdu\u18A1\u18A2\u18A4\u18A6\u18A8\u6550;\u6566;\u6569;\u6564;\u6567\u0200LRlr\u18B3\u18B5\u18B7\u18B9;\u655D;\u655A;\u655C;\u6559\u0380;HLRhlr\u18CA\u18CB\u18CD\u18CF\u18D1\u18D3\u18D5\u6551;\u656C;\u6563;\u6560;\u656B;\u6562;\u655Fox;\u69C9\u0200LRlr\u18E4\u18E6\u18E8\u18EA;\u6555;\u6552;\u6510;\u650C\u0280;DUdu\u06BD\u18F7\u18F9\u18FB\u18FD;\u6565;\u6568;\u652C;\u6534inus;\u629Flus;\u629Eimes;\u62A0\u0200LRlr\u1919\u191B\u191D\u191F;\u655B;\u6558;\u6518;\u6514\u0380;HLRhlr\u1930\u1931\u1933\u1935\u1937\u1939\u193B\u6502;\u656A;\u6561;\u655E;\u653C;\u6524;\u651C\u0100ev\u0123\u1942bar\u803B\xA6\u40A6\u0200ceio\u1951\u1956\u195A\u1960r;\uC000\uD835\uDCB7mi;\u604Fm\u0100;e\u171A\u171Cl\u0180;bh\u1968\u1969\u196B\u405C;\u69C5sub;\u67C8\u016C\u1974\u197El\u0100;e\u1979\u197A\u6022t\xBB\u197Ap\u0180;Ee\u012F\u1985\u1987;\u6AAE\u0100;q\u06DC\u06DB\u0CE1\u19A7\0\u19E8\u1A11\u1A15\u1A32\0\u1A37\u1A50\0\0\u1AB4\0\0\u1AC1\0\0\u1B21\u1B2E\u1B4D\u1B52\0\u1BFD\0\u1C0C\u0180cpr\u19AD\u19B2\u19DDute;\u4107\u0300;abcds\u19BF\u19C0\u19C4\u19CA\u19D5\u19D9\u6229nd;\u6A44rcup;\u6A49\u0100au\u19CF\u19D2p;\u6A4Bp;\u6A47ot;\u6A40;\uC000\u2229\uFE00\u0100eo\u19E2\u19E5t;\u6041\xEE\u0693\u0200aeiu\u19F0\u19FB\u1A01\u1A05\u01F0\u19F5\0\u19F8s;\u6A4Don;\u410Ddil\u803B\xE7\u40E7rc;\u4109ps\u0100;s\u1A0C\u1A0D\u6A4Cm;\u6A50ot;\u410B\u0180dmn\u1A1B\u1A20\u1A26il\u80BB\xB8\u01ADptyv;\u69B2t\u8100\xA2;e\u1A2D\u1A2E\u40A2r\xE4\u01B2r;\uC000\uD835\uDD20\u0180cei\u1A3D\u1A40\u1A4Dy;\u4447ck\u0100;m\u1A47\u1A48\u6713ark\xBB\u1A48;\u43C7r\u0380;Ecefms\u1A5F\u1A60\u1A62\u1A6B\u1AA4\u1AAA\u1AAE\u65CB;\u69C3\u0180;el\u1A69\u1A6A\u1A6D\u42C6q;\u6257e\u0261\u1A74\0\0\u1A88rrow\u0100lr\u1A7C\u1A81eft;\u61BAight;\u61BB\u0280RSacd\u1A92\u1A94\u1A96\u1A9A\u1A9F\xBB\u0F47;\u64C8st;\u629Birc;\u629Aash;\u629Dnint;\u6A10id;\u6AEFcir;\u69C2ubs\u0100;u\u1ABB\u1ABC\u6663it\xBB\u1ABC\u02EC\u1AC7\u1AD4\u1AFA\0\u1B0Aon\u0100;e\u1ACD\u1ACE\u403A\u0100;q\xC7\xC6\u026D\u1AD9\0\0\u1AE2a\u0100;t\u1ADE\u1ADF\u402C;\u4040\u0180;fl\u1AE8\u1AE9\u1AEB\u6201\xEE\u1160e\u0100mx\u1AF1\u1AF6ent\xBB\u1AE9e\xF3\u024D\u01E7\u1AFE\0\u1B07\u0100;d\u12BB\u1B02ot;\u6A6Dn\xF4\u0246\u0180fry\u1B10\u1B14\u1B17;\uC000\uD835\uDD54o\xE4\u0254\u8100\xA9;s\u0155\u1B1Dr;\u6117\u0100ao\u1B25\u1B29rr;\u61B5ss;\u6717\u0100cu\u1B32\u1B37r;\uC000\uD835\uDCB8\u0100bp\u1B3C\u1B44\u0100;e\u1B41\u1B42\u6ACF;\u6AD1\u0100;e\u1B49\u1B4A\u6AD0;\u6AD2dot;\u62EF\u0380delprvw\u1B60\u1B6C\u1B77\u1B82\u1BAC\u1BD4\u1BF9arr\u0100lr\u1B68\u1B6A;\u6938;\u6935\u0270\u1B72\0\0\u1B75r;\u62DEc;\u62DFarr\u0100;p\u1B7F\u1B80\u61B6;\u693D\u0300;bcdos\u1B8F\u1B90\u1B96\u1BA1\u1BA5\u1BA8\u622Arcap;\u6A48\u0100au\u1B9B\u1B9Ep;\u6A46p;\u6A4Aot;\u628Dr;\u6A45;\uC000\u222A\uFE00\u0200alrv\u1BB5\u1BBF\u1BDE\u1BE3rr\u0100;m\u1BBC\u1BBD\u61B7;\u693Cy\u0180evw\u1BC7\u1BD4\u1BD8q\u0270\u1BCE\0\0\u1BD2re\xE3\u1B73u\xE3\u1B75ee;\u62CEedge;\u62CFen\u803B\xA4\u40A4earrow\u0100lr\u1BEE\u1BF3eft\xBB\u1B80ight\xBB\u1BBDe\xE4\u1BDD\u0100ci\u1C01\u1C07onin\xF4\u01F7nt;\u6231lcty;\u632D\u0980AHabcdefhijlorstuwz\u1C38\u1C3B\u1C3F\u1C5D\u1C69\u1C75\u1C8A\u1C9E\u1CAC\u1CB7\u1CFB\u1CFF\u1D0D\u1D7B\u1D91\u1DAB\u1DBB\u1DC6\u1DCDr\xF2\u0381ar;\u6965\u0200glrs\u1C48\u1C4D\u1C52\u1C54ger;\u6020eth;\u6138\xF2\u1133h\u0100;v\u1C5A\u1C5B\u6010\xBB\u090A\u016B\u1C61\u1C67arow;\u690Fa\xE3\u0315\u0100ay\u1C6E\u1C73ron;\u410F;\u4434\u0180;ao\u0332\u1C7C\u1C84\u0100gr\u02BF\u1C81r;\u61CAtseq;\u6A77\u0180glm\u1C91\u1C94\u1C98\u803B\xB0\u40B0ta;\u43B4ptyv;\u69B1\u0100ir\u1CA3\u1CA8sht;\u697F;\uC000\uD835\uDD21ar\u0100lr\u1CB3\u1CB5\xBB\u08DC\xBB\u101E\u0280aegsv\u1CC2\u0378\u1CD6\u1CDC\u1CE0m\u0180;os\u0326\u1CCA\u1CD4nd\u0100;s\u0326\u1CD1uit;\u6666amma;\u43DDin;\u62F2\u0180;io\u1CE7\u1CE8\u1CF8\u40F7de\u8100\xF7;o\u1CE7\u1CF0ntimes;\u62C7n\xF8\u1CF7cy;\u4452c\u026F\u1D06\0\0\u1D0Arn;\u631Eop;\u630D\u0280lptuw\u1D18\u1D1D\u1D22\u1D49\u1D55lar;\u4024f;\uC000\uD835\uDD55\u0280;emps\u030B\u1D2D\u1D37\u1D3D\u1D42q\u0100;d\u0352\u1D33ot;\u6251inus;\u6238lus;\u6214quare;\u62A1blebarwedg\xE5\xFAn\u0180adh\u112E\u1D5D\u1D67ownarrow\xF3\u1C83arpoon\u0100lr\u1D72\u1D76ef\xF4\u1CB4igh\xF4\u1CB6\u0162\u1D7F\u1D85karo\xF7\u0F42\u026F\u1D8A\0\0\u1D8Ern;\u631Fop;\u630C\u0180cot\u1D98\u1DA3\u1DA6\u0100ry\u1D9D\u1DA1;\uC000\uD835\uDCB9;\u4455l;\u69F6rok;\u4111\u0100dr\u1DB0\u1DB4ot;\u62F1i\u0100;f\u1DBA\u1816\u65BF\u0100ah\u1DC0\u1DC3r\xF2\u0429a\xF2\u0FA6angle;\u69A6\u0100ci\u1DD2\u1DD5y;\u445Fgrarr;\u67FF\u0900Dacdefglmnopqrstux\u1E01\u1E09\u1E19\u1E38\u0578\u1E3C\u1E49\u1E61\u1E7E\u1EA5\u1EAF\u1EBD\u1EE1\u1F2A\u1F37\u1F44\u1F4E\u1F5A\u0100Do\u1E06\u1D34o\xF4\u1C89\u0100cs\u1E0E\u1E14ute\u803B\xE9\u40E9ter;\u6A6E\u0200aioy\u1E22\u1E27\u1E31\u1E36ron;\u411Br\u0100;c\u1E2D\u1E2E\u6256\u803B\xEA\u40EAlon;\u6255;\u444Dot;\u4117\u0100Dr\u1E41\u1E45ot;\u6252;\uC000\uD835\uDD22\u0180;rs\u1E50\u1E51\u1E57\u6A9Aave\u803B\xE8\u40E8\u0100;d\u1E5C\u1E5D\u6A96ot;\u6A98\u0200;ils\u1E6A\u1E6B\u1E72\u1E74\u6A99nters;\u63E7;\u6113\u0100;d\u1E79\u1E7A\u6A95ot;\u6A97\u0180aps\u1E85\u1E89\u1E97cr;\u4113ty\u0180;sv\u1E92\u1E93\u1E95\u6205et\xBB\u1E93p\u01001;\u1E9D\u1EA4\u0133\u1EA1\u1EA3;\u6004;\u6005\u6003\u0100gs\u1EAA\u1EAC;\u414Bp;\u6002\u0100gp\u1EB4\u1EB8on;\u4119f;\uC000\uD835\uDD56\u0180als\u1EC4\u1ECE\u1ED2r\u0100;s\u1ECA\u1ECB\u62D5l;\u69E3us;\u6A71i\u0180;lv\u1EDA\u1EDB\u1EDF\u43B5on\xBB\u1EDB;\u43F5\u0200csuv\u1EEA\u1EF3\u1F0B\u1F23\u0100io\u1EEF\u1E31rc\xBB\u1E2E\u0269\u1EF9\0\0\u1EFB\xED\u0548ant\u0100gl\u1F02\u1F06tr\xBB\u1E5Dess\xBB\u1E7A\u0180aei\u1F12\u1F16\u1F1Als;\u403Dst;\u625Fv\u0100;D\u0235\u1F20D;\u6A78parsl;\u69E5\u0100Da\u1F2F\u1F33ot;\u6253rr;\u6971\u0180cdi\u1F3E\u1F41\u1EF8r;\u612Fo\xF4\u0352\u0100ah\u1F49\u1F4B;\u43B7\u803B\xF0\u40F0\u0100mr\u1F53\u1F57l\u803B\xEB\u40EBo;\u60AC\u0180cip\u1F61\u1F64\u1F67l;\u4021s\xF4\u056E\u0100eo\u1F6C\u1F74ctatio\xEE\u0559nential\xE5\u0579\u09E1\u1F92\0\u1F9E\0\u1FA1\u1FA7\0\0\u1FC6\u1FCC\0\u1FD3\0\u1FE6\u1FEA\u2000\0\u2008\u205Allingdotse\xF1\u1E44y;\u4444male;\u6640\u0180ilr\u1FAD\u1FB3\u1FC1lig;\u8000\uFB03\u0269\u1FB9\0\0\u1FBDg;\u8000\uFB00ig;\u8000\uFB04;\uC000\uD835\uDD23lig;\u8000\uFB01lig;\uC000fj\u0180alt\u1FD9\u1FDC\u1FE1t;\u666Dig;\u8000\uFB02ns;\u65B1of;\u4192\u01F0\u1FEE\0\u1FF3f;\uC000\uD835\uDD57\u0100ak\u05BF\u1FF7\u0100;v\u1FFC\u1FFD\u62D4;\u6AD9artint;\u6A0D\u0100ao\u200C\u2055\u0100cs\u2011\u2052\u03B1\u201A\u2030\u2038\u2045\u2048\0\u2050\u03B2\u2022\u2025\u2027\u202A\u202C\0\u202E\u803B\xBD\u40BD;\u6153\u803B\xBC\u40BC;\u6155;\u6159;\u615B\u01B3\u2034\0\u2036;\u6154;\u6156\u02B4\u203E\u2041\0\0\u2043\u803B\xBE\u40BE;\u6157;\u615C5;\u6158\u01B6\u204C\0\u204E;\u615A;\u615D8;\u615El;\u6044wn;\u6322cr;\uC000\uD835\uDCBB\u0880Eabcdefgijlnorstv\u2082\u2089\u209F\u20A5\u20B0\u20B4\u20F0\u20F5\u20FA\u20FF\u2103\u2112\u2138\u0317\u213E\u2152\u219E\u0100;l\u064D\u2087;\u6A8C\u0180cmp\u2090\u2095\u209Dute;\u41F5ma\u0100;d\u209C\u1CDA\u43B3;\u6A86reve;\u411F\u0100iy\u20AA\u20AErc;\u411D;\u4433ot;\u4121\u0200;lqs\u063E\u0642\u20BD\u20C9\u0180;qs\u063E\u064C\u20C4lan\xF4\u0665\u0200;cdl\u0665\u20D2\u20D5\u20E5c;\u6AA9ot\u0100;o\u20DC\u20DD\u6A80\u0100;l\u20E2\u20E3\u6A82;\u6A84\u0100;e\u20EA\u20ED\uC000\u22DB\uFE00s;\u6A94r;\uC000\uD835\uDD24\u0100;g\u0673\u061Bmel;\u6137cy;\u4453\u0200;Eaj\u065A\u210C\u210E\u2110;\u6A92;\u6AA5;\u6AA4\u0200Eaes\u211B\u211D\u2129\u2134;\u6269p\u0100;p\u2123\u2124\u6A8Arox\xBB\u2124\u0100;q\u212E\u212F\u6A88\u0100;q\u212E\u211Bim;\u62E7pf;\uC000\uD835\uDD58\u0100ci\u2143\u2146r;\u610Am\u0180;el\u066B\u214E\u2150;\u6A8E;\u6A90\u8300>;cdlqr\u05EE\u2160\u216A\u216E\u2173\u2179\u0100ci\u2165\u2167;\u6AA7r;\u6A7Aot;\u62D7Par;\u6995uest;\u6A7C\u0280adels\u2184\u216A\u2190\u0656\u219B\u01F0\u2189\0\u218Epro\xF8\u209Er;\u6978q\u0100lq\u063F\u2196les\xF3\u2088i\xED\u066B\u0100en\u21A3\u21ADrtneqq;\uC000\u2269\uFE00\xC5\u21AA\u0500Aabcefkosy\u21C4\u21C7\u21F1\u21F5\u21FA\u2218\u221D\u222F\u2268\u227Dr\xF2\u03A0\u0200ilmr\u21D0\u21D4\u21D7\u21DBrs\xF0\u1484f\xBB\u2024il\xF4\u06A9\u0100dr\u21E0\u21E4cy;\u444A\u0180;cw\u08F4\u21EB\u21EFir;\u6948;\u61ADar;\u610Firc;\u4125\u0180alr\u2201\u220E\u2213rts\u0100;u\u2209\u220A\u6665it\xBB\u220Alip;\u6026con;\u62B9r;\uC000\uD835\uDD25s\u0100ew\u2223\u2229arow;\u6925arow;\u6926\u0280amopr\u223A\u223E\u2243\u225E\u2263rr;\u61FFtht;\u623Bk\u0100lr\u2249\u2253eftarrow;\u61A9ightarrow;\u61AAf;\uC000\uD835\uDD59bar;\u6015\u0180clt\u226F\u2274\u2278r;\uC000\uD835\uDCBDas\xE8\u21F4rok;\u4127\u0100bp\u2282\u2287ull;\u6043hen\xBB\u1C5B\u0AE1\u22A3\0\u22AA\0\u22B8\u22C5\u22CE\0\u22D5\u22F3\0\0\u22F8\u2322\u2367\u2362\u237F\0\u2386\u23AA\u23B4cute\u803B\xED\u40ED\u0180;iy\u0771\u22B0\u22B5rc\u803B\xEE\u40EE;\u4438\u0100cx\u22BC\u22BFy;\u4435cl\u803B\xA1\u40A1\u0100fr\u039F\u22C9;\uC000\uD835\uDD26rave\u803B\xEC\u40EC\u0200;ino\u073E\u22DD\u22E9\u22EE\u0100in\u22E2\u22E6nt;\u6A0Ct;\u622Dfin;\u69DCta;\u6129lig;\u4133\u0180aop\u22FE\u231A\u231D\u0180cgt\u2305\u2308\u2317r;\u412B\u0180elp\u071F\u230F\u2313in\xE5\u078Ear\xF4\u0720h;\u4131f;\u62B7ed;\u41B5\u0280;cfot\u04F4\u232C\u2331\u233D\u2341are;\u6105in\u0100;t\u2338\u2339\u621Eie;\u69DDdo\xF4\u2319\u0280;celp\u0757\u234C\u2350\u235B\u2361al;\u62BA\u0100gr\u2355\u2359er\xF3\u1563\xE3\u234Darhk;\u6A17rod;\u6A3C\u0200cgpt\u236F\u2372\u2376\u237By;\u4451on;\u412Ff;\uC000\uD835\uDD5Aa;\u43B9uest\u803B\xBF\u40BF\u0100ci\u238A\u238Fr;\uC000\uD835\uDCBEn\u0280;Edsv\u04F4\u239B\u239D\u23A1\u04F3;\u62F9ot;\u62F5\u0100;v\u23A6\u23A7\u62F4;\u62F3\u0100;i\u0777\u23AElde;\u4129\u01EB\u23B8\0\u23BCcy;\u4456l\u803B\xEF\u40EF\u0300cfmosu\u23CC\u23D7\u23DC\u23E1\u23E7\u23F5\u0100iy\u23D1\u23D5rc;\u4135;\u4439r;\uC000\uD835\uDD27ath;\u4237pf;\uC000\uD835\uDD5B\u01E3\u23EC\0\u23F1r;\uC000\uD835\uDCBFrcy;\u4458kcy;\u4454\u0400acfghjos\u240B\u2416\u2422\u2427\u242D\u2431\u2435\u243Bppa\u0100;v\u2413\u2414\u43BA;\u43F0\u0100ey\u241B\u2420dil;\u4137;\u443Ar;\uC000\uD835\uDD28reen;\u4138cy;\u4445cy;\u445Cpf;\uC000\uD835\uDD5Ccr;\uC000\uD835\uDCC0\u0B80ABEHabcdefghjlmnoprstuv\u2470\u2481\u2486\u248D\u2491\u250E\u253D\u255A\u2580\u264E\u265E\u2665\u2679\u267D\u269A\u26B2\u26D8\u275D\u2768\u278B\u27C0\u2801\u2812\u0180art\u2477\u247A\u247Cr\xF2\u09C6\xF2\u0395ail;\u691Barr;\u690E\u0100;g\u0994\u248B;\u6A8Bar;\u6962\u0963\u24A5\0\u24AA\0\u24B1\0\0\0\0\0\u24B5\u24BA\0\u24C6\u24C8\u24CD\0\u24F9ute;\u413Amptyv;\u69B4ra\xEE\u084Cbda;\u43BBg\u0180;dl\u088E\u24C1\u24C3;\u6991\xE5\u088E;\u6A85uo\u803B\xAB\u40ABr\u0400;bfhlpst\u0899\u24DE\u24E6\u24E9\u24EB\u24EE\u24F1\u24F5\u0100;f\u089D\u24E3s;\u691Fs;\u691D\xEB\u2252p;\u61ABl;\u6939im;\u6973l;\u61A2\u0180;ae\u24FF\u2500\u2504\u6AABil;\u6919\u0100;s\u2509\u250A\u6AAD;\uC000\u2AAD\uFE00\u0180abr\u2515\u2519\u251Drr;\u690Crk;\u6772\u0100ak\u2522\u252Cc\u0100ek\u2528\u252A;\u407B;\u405B\u0100es\u2531\u2533;\u698Bl\u0100du\u2539\u253B;\u698F;\u698D\u0200aeuy\u2546\u254B\u2556\u2558ron;\u413E\u0100di\u2550\u2554il;\u413C\xEC\u08B0\xE2\u2529;\u443B\u0200cqrs\u2563\u2566\u256D\u257Da;\u6936uo\u0100;r\u0E19\u1746\u0100du\u2572\u2577har;\u6967shar;\u694Bh;\u61B2\u0280;fgqs\u258B\u258C\u0989\u25F3\u25FF\u6264t\u0280ahlrt\u2598\u25A4\u25B7\u25C2\u25E8rrow\u0100;t\u0899\u25A1a\xE9\u24F6arpoon\u0100du\u25AF\u25B4own\xBB\u045Ap\xBB\u0966eftarrows;\u61C7ight\u0180ahs\u25CD\u25D6\u25DErrow\u0100;s\u08F4\u08A7arpoon\xF3\u0F98quigarro\xF7\u21F0hreetimes;\u62CB\u0180;qs\u258B\u0993\u25FAlan\xF4\u09AC\u0280;cdgs\u09AC\u260A\u260D\u261D\u2628c;\u6AA8ot\u0100;o\u2614\u2615\u6A7F\u0100;r\u261A\u261B\u6A81;\u6A83\u0100;e\u2622\u2625\uC000\u22DA\uFE00s;\u6A93\u0280adegs\u2633\u2639\u263D\u2649\u264Bppro\xF8\u24C6ot;\u62D6q\u0100gq\u2643\u2645\xF4\u0989gt\xF2\u248C\xF4\u099Bi\xED\u09B2\u0180ilr\u2655\u08E1\u265Asht;\u697C;\uC000\uD835\uDD29\u0100;E\u099C\u2663;\u6A91\u0161\u2669\u2676r\u0100du\u25B2\u266E\u0100;l\u0965\u2673;\u696Alk;\u6584cy;\u4459\u0280;acht\u0A48\u2688\u268B\u2691\u2696r\xF2\u25C1orne\xF2\u1D08ard;\u696Bri;\u65FA\u0100io\u269F\u26A4dot;\u4140ust\u0100;a\u26AC\u26AD\u63B0che\xBB\u26AD\u0200Eaes\u26BB\u26BD\u26C9\u26D4;\u6268p\u0100;p\u26C3\u26C4\u6A89rox\xBB\u26C4\u0100;q\u26CE\u26CF\u6A87\u0100;q\u26CE\u26BBim;\u62E6\u0400abnoptwz\u26E9\u26F4\u26F7\u271A\u272F\u2741\u2747\u2750\u0100nr\u26EE\u26F1g;\u67ECr;\u61FDr\xEB\u08C1g\u0180lmr\u26FF\u270D\u2714eft\u0100ar\u09E6\u2707ight\xE1\u09F2apsto;\u67FCight\xE1\u09FDparrow\u0100lr\u2725\u2729ef\xF4\u24EDight;\u61AC\u0180afl\u2736\u2739\u273Dr;\u6985;\uC000\uD835\uDD5Dus;\u6A2Dimes;\u6A34\u0161\u274B\u274Fst;\u6217\xE1\u134E\u0180;ef\u2757\u2758\u1800\u65CAnge\xBB\u2758ar\u0100;l\u2764\u2765\u4028t;\u6993\u0280achmt\u2773\u2776\u277C\u2785\u2787r\xF2\u08A8orne\xF2\u1D8Car\u0100;d\u0F98\u2783;\u696D;\u600Eri;\u62BF\u0300achiqt\u2798\u279D\u0A40\u27A2\u27AE\u27BBquo;\u6039r;\uC000\uD835\uDCC1m\u0180;eg\u09B2\u27AA\u27AC;\u6A8D;\u6A8F\u0100bu\u252A\u27B3o\u0100;r\u0E1F\u27B9;\u601Arok;\u4142\u8400<;cdhilqr\u082B\u27D2\u2639\u27DC\u27E0\u27E5\u27EA\u27F0\u0100ci\u27D7\u27D9;\u6AA6r;\u6A79re\xE5\u25F2mes;\u62C9arr;\u6976uest;\u6A7B\u0100Pi\u27F5\u27F9ar;\u6996\u0180;ef\u2800\u092D\u181B\u65C3r\u0100du\u2807\u280Dshar;\u694Ahar;\u6966\u0100en\u2817\u2821rtneqq;\uC000\u2268\uFE00\xC5\u281E\u0700Dacdefhilnopsu\u2840\u2845\u2882\u288E\u2893\u28A0\u28A5\u28A8\u28DA\u28E2\u28E4\u0A83\u28F3\u2902Dot;\u623A\u0200clpr\u284E\u2852\u2863\u287Dr\u803B\xAF\u40AF\u0100et\u2857\u2859;\u6642\u0100;e\u285E\u285F\u6720se\xBB\u285F\u0100;s\u103B\u2868to\u0200;dlu\u103B\u2873\u2877\u287Bow\xEE\u048Cef\xF4\u090F\xF0\u13D1ker;\u65AE\u0100oy\u2887\u288Cmma;\u6A29;\u443Cash;\u6014asuredangle\xBB\u1626r;\uC000\uD835\uDD2Ao;\u6127\u0180cdn\u28AF\u28B4\u28C9ro\u803B\xB5\u40B5\u0200;acd\u1464\u28BD\u28C0\u28C4s\xF4\u16A7ir;\u6AF0ot\u80BB\xB7\u01B5us\u0180;bd\u28D2\u1903\u28D3\u6212\u0100;u\u1D3C\u28D8;\u6A2A\u0163\u28DE\u28E1p;\u6ADB\xF2\u2212\xF0\u0A81\u0100dp\u28E9\u28EEels;\u62A7f;\uC000\uD835\uDD5E\u0100ct\u28F8\u28FDr;\uC000\uD835\uDCC2pos\xBB\u159D\u0180;lm\u2909\u290A\u290D\u43BCtimap;\u62B8\u0C00GLRVabcdefghijlmoprstuvw\u2942\u2953\u297E\u2989\u2998\u29DA\u29E9\u2A15\u2A1A\u2A58\u2A5D\u2A83\u2A95\u2AA4\u2AA8\u2B04\u2B07\u2B44\u2B7F\u2BAE\u2C34\u2C67\u2C7C\u2CE9\u0100gt\u2947\u294B;\uC000\u22D9\u0338\u0100;v\u2950\u0BCF\uC000\u226B\u20D2\u0180elt\u295A\u2972\u2976ft\u0100ar\u2961\u2967rrow;\u61CDightarrow;\u61CE;\uC000\u22D8\u0338\u0100;v\u297B\u0C47\uC000\u226A\u20D2ightarrow;\u61CF\u0100Dd\u298E\u2993ash;\u62AFash;\u62AE\u0280bcnpt\u29A3\u29A7\u29AC\u29B1\u29CCla\xBB\u02DEute;\u4144g;\uC000\u2220\u20D2\u0280;Eiop\u0D84\u29BC\u29C0\u29C5\u29C8;\uC000\u2A70\u0338d;\uC000\u224B\u0338s;\u4149ro\xF8\u0D84ur\u0100;a\u29D3\u29D4\u666El\u0100;s\u29D3\u0B38\u01F3\u29DF\0\u29E3p\u80BB\xA0\u0B37mp\u0100;e\u0BF9\u0C00\u0280aeouy\u29F4\u29FE\u2A03\u2A10\u2A13\u01F0\u29F9\0\u29FB;\u6A43on;\u4148dil;\u4146ng\u0100;d\u0D7E\u2A0Aot;\uC000\u2A6D\u0338p;\u6A42;\u443Dash;\u6013\u0380;Aadqsx\u0B92\u2A29\u2A2D\u2A3B\u2A41\u2A45\u2A50rr;\u61D7r\u0100hr\u2A33\u2A36k;\u6924\u0100;o\u13F2\u13F0ot;\uC000\u2250\u0338ui\xF6\u0B63\u0100ei\u2A4A\u2A4Ear;\u6928\xED\u0B98ist\u0100;s\u0BA0\u0B9Fr;\uC000\uD835\uDD2B\u0200Eest\u0BC5\u2A66\u2A79\u2A7C\u0180;qs\u0BBC\u2A6D\u0BE1\u0180;qs\u0BBC\u0BC5\u2A74lan\xF4\u0BE2i\xED\u0BEA\u0100;r\u0BB6\u2A81\xBB\u0BB7\u0180Aap\u2A8A\u2A8D\u2A91r\xF2\u2971rr;\u61AEar;\u6AF2\u0180;sv\u0F8D\u2A9C\u0F8C\u0100;d\u2AA1\u2AA2\u62FC;\u62FAcy;\u445A\u0380AEadest\u2AB7\u2ABA\u2ABE\u2AC2\u2AC5\u2AF6\u2AF9r\xF2\u2966;\uC000\u2266\u0338rr;\u619Ar;\u6025\u0200;fqs\u0C3B\u2ACE\u2AE3\u2AEFt\u0100ar\u2AD4\u2AD9rro\xF7\u2AC1ightarro\xF7\u2A90\u0180;qs\u0C3B\u2ABA\u2AEAlan\xF4\u0C55\u0100;s\u0C55\u2AF4\xBB\u0C36i\xED\u0C5D\u0100;r\u0C35\u2AFEi\u0100;e\u0C1A\u0C25i\xE4\u0D90\u0100pt\u2B0C\u2B11f;\uC000\uD835\uDD5F\u8180\xAC;in\u2B19\u2B1A\u2B36\u40ACn\u0200;Edv\u0B89\u2B24\u2B28\u2B2E;\uC000\u22F9\u0338ot;\uC000\u22F5\u0338\u01E1\u0B89\u2B33\u2B35;\u62F7;\u62F6i\u0100;v\u0CB8\u2B3C\u01E1\u0CB8\u2B41\u2B43;\u62FE;\u62FD\u0180aor\u2B4B\u2B63\u2B69r\u0200;ast\u0B7B\u2B55\u2B5A\u2B5Flle\xEC\u0B7Bl;\uC000\u2AFD\u20E5;\uC000\u2202\u0338lint;\u6A14\u0180;ce\u0C92\u2B70\u2B73u\xE5\u0CA5\u0100;c\u0C98\u2B78\u0100;e\u0C92\u2B7D\xF1\u0C98\u0200Aait\u2B88\u2B8B\u2B9D\u2BA7r\xF2\u2988rr\u0180;cw\u2B94\u2B95\u2B99\u619B;\uC000\u2933\u0338;\uC000\u219D\u0338ghtarrow\xBB\u2B95ri\u0100;e\u0CCB\u0CD6\u0380chimpqu\u2BBD\u2BCD\u2BD9\u2B04\u0B78\u2BE4\u2BEF\u0200;cer\u0D32\u2BC6\u0D37\u2BC9u\xE5\u0D45;\uC000\uD835\uDCC3ort\u026D\u2B05\0\0\u2BD6ar\xE1\u2B56m\u0100;e\u0D6E\u2BDF\u0100;q\u0D74\u0D73su\u0100bp\u2BEB\u2BED\xE5\u0CF8\xE5\u0D0B\u0180bcp\u2BF6\u2C11\u2C19\u0200;Ees\u2BFF\u2C00\u0D22\u2C04\u6284;\uC000\u2AC5\u0338et\u0100;e\u0D1B\u2C0Bq\u0100;q\u0D23\u2C00c\u0100;e\u0D32\u2C17\xF1\u0D38\u0200;Ees\u2C22\u2C23\u0D5F\u2C27\u6285;\uC000\u2AC6\u0338et\u0100;e\u0D58\u2C2Eq\u0100;q\u0D60\u2C23\u0200gilr\u2C3D\u2C3F\u2C45\u2C47\xEC\u0BD7lde\u803B\xF1\u40F1\xE7\u0C43iangle\u0100lr\u2C52\u2C5Ceft\u0100;e\u0C1A\u2C5A\xF1\u0C26ight\u0100;e\u0CCB\u2C65\xF1\u0CD7\u0100;m\u2C6C\u2C6D\u43BD\u0180;es\u2C74\u2C75\u2C79\u4023ro;\u6116p;\u6007\u0480DHadgilrs\u2C8F\u2C94\u2C99\u2C9E\u2CA3\u2CB0\u2CB6\u2CD3\u2CE3ash;\u62ADarr;\u6904p;\uC000\u224D\u20D2ash;\u62AC\u0100et\u2CA8\u2CAC;\uC000\u2265\u20D2;\uC000>\u20D2nfin;\u69DE\u0180Aet\u2CBD\u2CC1\u2CC5rr;\u6902;\uC000\u2264\u20D2\u0100;r\u2CCA\u2CCD\uC000<\u20D2ie;\uC000\u22B4\u20D2\u0100At\u2CD8\u2CDCrr;\u6903rie;\uC000\u22B5\u20D2im;\uC000\u223C\u20D2\u0180Aan\u2CF0\u2CF4\u2D02rr;\u61D6r\u0100hr\u2CFA\u2CFDk;\u6923\u0100;o\u13E7\u13E5ear;\u6927\u1253\u1A95\0\0\0\0\0\0\0\0\0\0\0\0\0\u2D2D\0\u2D38\u2D48\u2D60\u2D65\u2D72\u2D84\u1B07\0\0\u2D8D\u2DAB\0\u2DC8\u2DCE\0\u2DDC\u2E19\u2E2B\u2E3E\u2E43\u0100cs\u2D31\u1A97ute\u803B\xF3\u40F3\u0100iy\u2D3C\u2D45r\u0100;c\u1A9E\u2D42\u803B\xF4\u40F4;\u443E\u0280abios\u1AA0\u2D52\u2D57\u01C8\u2D5Alac;\u4151v;\u6A38old;\u69BClig;\u4153\u0100cr\u2D69\u2D6Dir;\u69BF;\uC000\uD835\uDD2C\u036F\u2D79\0\0\u2D7C\0\u2D82n;\u42DBave\u803B\xF2\u40F2;\u69C1\u0100bm\u2D88\u0DF4ar;\u69B5\u0200acit\u2D95\u2D98\u2DA5\u2DA8r\xF2\u1A80\u0100ir\u2D9D\u2DA0r;\u69BEoss;\u69BBn\xE5\u0E52;\u69C0\u0180aei\u2DB1\u2DB5\u2DB9cr;\u414Dga;\u43C9\u0180cdn\u2DC0\u2DC5\u01CDron;\u43BF;\u69B6pf;\uC000\uD835\uDD60\u0180ael\u2DD4\u2DD7\u01D2r;\u69B7rp;\u69B9\u0380;adiosv\u2DEA\u2DEB\u2DEE\u2E08\u2E0D\u2E10\u2E16\u6228r\xF2\u1A86\u0200;efm\u2DF7\u2DF8\u2E02\u2E05\u6A5Dr\u0100;o\u2DFE\u2DFF\u6134f\xBB\u2DFF\u803B\xAA\u40AA\u803B\xBA\u40BAgof;\u62B6r;\u6A56lope;\u6A57;\u6A5B\u0180clo\u2E1F\u2E21\u2E27\xF2\u2E01ash\u803B\xF8\u40F8l;\u6298i\u016C\u2E2F\u2E34de\u803B\xF5\u40F5es\u0100;a\u01DB\u2E3As;\u6A36ml\u803B\xF6\u40F6bar;\u633D\u0AE1\u2E5E\0\u2E7D\0\u2E80\u2E9D\0\u2EA2\u2EB9\0\0\u2ECB\u0E9C\0\u2F13\0\0\u2F2B\u2FBC\0\u2FC8r\u0200;ast\u0403\u2E67\u2E72\u0E85\u8100\xB6;l\u2E6D\u2E6E\u40B6le\xEC\u0403\u0269\u2E78\0\0\u2E7Bm;\u6AF3;\u6AFDy;\u443Fr\u0280cimpt\u2E8B\u2E8F\u2E93\u1865\u2E97nt;\u4025od;\u402Eil;\u6030enk;\u6031r;\uC000\uD835\uDD2D\u0180imo\u2EA8\u2EB0\u2EB4\u0100;v\u2EAD\u2EAE\u43C6;\u43D5ma\xF4\u0A76ne;\u660E\u0180;tv\u2EBF\u2EC0\u2EC8\u43C0chfork\xBB\u1FFD;\u43D6\u0100au\u2ECF\u2EDFn\u0100ck\u2ED5\u2EDDk\u0100;h\u21F4\u2EDB;\u610E\xF6\u21F4s\u0480;abcdemst\u2EF3\u2EF4\u1908\u2EF9\u2EFD\u2F04\u2F06\u2F0A\u2F0E\u402Bcir;\u6A23ir;\u6A22\u0100ou\u1D40\u2F02;\u6A25;\u6A72n\u80BB\xB1\u0E9Dim;\u6A26wo;\u6A27\u0180ipu\u2F19\u2F20\u2F25ntint;\u6A15f;\uC000\uD835\uDD61nd\u803B\xA3\u40A3\u0500;Eaceinosu\u0EC8\u2F3F\u2F41\u2F44\u2F47\u2F81\u2F89\u2F92\u2F7E\u2FB6;\u6AB3p;\u6AB7u\xE5\u0ED9\u0100;c\u0ECE\u2F4C\u0300;acens\u0EC8\u2F59\u2F5F\u2F66\u2F68\u2F7Eppro\xF8\u2F43urlye\xF1\u0ED9\xF1\u0ECE\u0180aes\u2F6F\u2F76\u2F7Approx;\u6AB9qq;\u6AB5im;\u62E8i\xED\u0EDFme\u0100;s\u2F88\u0EAE\u6032\u0180Eas\u2F78\u2F90\u2F7A\xF0\u2F75\u0180dfp\u0EEC\u2F99\u2FAF\u0180als\u2FA0\u2FA5\u2FAAlar;\u632Eine;\u6312urf;\u6313\u0100;t\u0EFB\u2FB4\xEF\u0EFBrel;\u62B0\u0100ci\u2FC0\u2FC5r;\uC000\uD835\uDCC5;\u43C8ncsp;\u6008\u0300fiopsu\u2FDA\u22E2\u2FDF\u2FE5\u2FEB\u2FF1r;\uC000\uD835\uDD2Epf;\uC000\uD835\uDD62rime;\u6057cr;\uC000\uD835\uDCC6\u0180aeo\u2FF8\u3009\u3013t\u0100ei\u2FFE\u3005rnion\xF3\u06B0nt;\u6A16st\u0100;e\u3010\u3011\u403F\xF1\u1F19\xF4\u0F14\u0A80ABHabcdefhilmnoprstux\u3040\u3051\u3055\u3059\u30E0\u310E\u312B\u3147\u3162\u3172\u318E\u3206\u3215\u3224\u3229\u3258\u326E\u3272\u3290\u32B0\u32B7\u0180art\u3047\u304A\u304Cr\xF2\u10B3\xF2\u03DDail;\u691Car\xF2\u1C65ar;\u6964\u0380cdenqrt\u3068\u3075\u3078\u307F\u308F\u3094\u30CC\u0100eu\u306D\u3071;\uC000\u223D\u0331te;\u4155i\xE3\u116Emptyv;\u69B3g\u0200;del\u0FD1\u3089\u308B\u308D;\u6992;\u69A5\xE5\u0FD1uo\u803B\xBB\u40BBr\u0580;abcfhlpstw\u0FDC\u30AC\u30AF\u30B7\u30B9\u30BC\u30BE\u30C0\u30C3\u30C7\u30CAp;\u6975\u0100;f\u0FE0\u30B4s;\u6920;\u6933s;\u691E\xEB\u225D\xF0\u272El;\u6945im;\u6974l;\u61A3;\u619D\u0100ai\u30D1\u30D5il;\u691Ao\u0100;n\u30DB\u30DC\u6236al\xF3\u0F1E\u0180abr\u30E7\u30EA\u30EEr\xF2\u17E5rk;\u6773\u0100ak\u30F3\u30FDc\u0100ek\u30F9\u30FB;\u407D;\u405D\u0100es\u3102\u3104;\u698Cl\u0100du\u310A\u310C;\u698E;\u6990\u0200aeuy\u3117\u311C\u3127\u3129ron;\u4159\u0100di\u3121\u3125il;\u4157\xEC\u0FF2\xE2\u30FA;\u4440\u0200clqs\u3134\u3137\u313D\u3144a;\u6937dhar;\u6969uo\u0100;r\u020E\u020Dh;\u61B3\u0180acg\u314E\u315F\u0F44l\u0200;ips\u0F78\u3158\u315B\u109Cn\xE5\u10BBar\xF4\u0FA9t;\u65AD\u0180ilr\u3169\u1023\u316Esht;\u697D;\uC000\uD835\uDD2F\u0100ao\u3177\u3186r\u0100du\u317D\u317F\xBB\u047B\u0100;l\u1091\u3184;\u696C\u0100;v\u318B\u318C\u43C1;\u43F1\u0180gns\u3195\u31F9\u31FCht\u0300ahlrst\u31A4\u31B0\u31C2\u31D8\u31E4\u31EErrow\u0100;t\u0FDC\u31ADa\xE9\u30C8arpoon\u0100du\u31BB\u31BFow\xEE\u317Ep\xBB\u1092eft\u0100ah\u31CA\u31D0rrow\xF3\u0FEAarpoon\xF3\u0551ightarrows;\u61C9quigarro\xF7\u30CBhreetimes;\u62CCg;\u42DAingdotse\xF1\u1F32\u0180ahm\u320D\u3210\u3213r\xF2\u0FEAa\xF2\u0551;\u600Foust\u0100;a\u321E\u321F\u63B1che\xBB\u321Fmid;\u6AEE\u0200abpt\u3232\u323D\u3240\u3252\u0100nr\u3237\u323Ag;\u67EDr;\u61FEr\xEB\u1003\u0180afl\u3247\u324A\u324Er;\u6986;\uC000\uD835\uDD63us;\u6A2Eimes;\u6A35\u0100ap\u325D\u3267r\u0100;g\u3263\u3264\u4029t;\u6994olint;\u6A12ar\xF2\u31E3\u0200achq\u327B\u3280\u10BC\u3285quo;\u603Ar;\uC000\uD835\uDCC7\u0100bu\u30FB\u328Ao\u0100;r\u0214\u0213\u0180hir\u3297\u329B\u32A0re\xE5\u31F8mes;\u62CAi\u0200;efl\u32AA\u1059\u1821\u32AB\u65B9tri;\u69CEluhar;\u6968;\u611E\u0D61\u32D5\u32DB\u32DF\u332C\u3338\u3371\0\u337A\u33A4\0\0\u33EC\u33F0\0\u3428\u3448\u345A\u34AD\u34B1\u34CA\u34F1\0\u3616\0\0\u3633cute;\u415Bqu\xEF\u27BA\u0500;Eaceinpsy\u11ED\u32F3\u32F5\u32FF\u3302\u330B\u330F\u331F\u3326\u3329;\u6AB4\u01F0\u32FA\0\u32FC;\u6AB8on;\u4161u\xE5\u11FE\u0100;d\u11F3\u3307il;\u415Frc;\u415D\u0180Eas\u3316\u3318\u331B;\u6AB6p;\u6ABAim;\u62E9olint;\u6A13i\xED\u1204;\u4441ot\u0180;be\u3334\u1D47\u3335\u62C5;\u6A66\u0380Aacmstx\u3346\u334A\u3357\u335B\u335E\u3363\u336Drr;\u61D8r\u0100hr\u3350\u3352\xEB\u2228\u0100;o\u0A36\u0A34t\u803B\xA7\u40A7i;\u403Bwar;\u6929m\u0100in\u3369\xF0nu\xF3\xF1t;\u6736r\u0100;o\u3376\u2055\uC000\uD835\uDD30\u0200acoy\u3382\u3386\u3391\u33A0rp;\u666F\u0100hy\u338B\u338Fcy;\u4449;\u4448rt\u026D\u3399\0\0\u339Ci\xE4\u1464ara\xEC\u2E6F\u803B\xAD\u40AD\u0100gm\u33A8\u33B4ma\u0180;fv\u33B1\u33B2\u33B2\u43C3;\u43C2\u0400;deglnpr\u12AB\u33C5\u33C9\u33CE\u33D6\u33DE\u33E1\u33E6ot;\u6A6A\u0100;q\u12B1\u12B0\u0100;E\u33D3\u33D4\u6A9E;\u6AA0\u0100;E\u33DB\u33DC\u6A9D;\u6A9Fe;\u6246lus;\u6A24arr;\u6972ar\xF2\u113D\u0200aeit\u33F8\u3408\u340F\u3417\u0100ls\u33FD\u3404lsetm\xE9\u336Ahp;\u6A33parsl;\u69E4\u0100dl\u1463\u3414e;\u6323\u0100;e\u341C\u341D\u6AAA\u0100;s\u3422\u3423\u6AAC;\uC000\u2AAC\uFE00\u0180flp\u342E\u3433\u3442tcy;\u444C\u0100;b\u3438\u3439\u402F\u0100;a\u343E\u343F\u69C4r;\u633Ff;\uC000\uD835\uDD64a\u0100dr\u344D\u0402es\u0100;u\u3454\u3455\u6660it\xBB\u3455\u0180csu\u3460\u3479\u349F\u0100au\u3465\u346Fp\u0100;s\u1188\u346B;\uC000\u2293\uFE00p\u0100;s\u11B4\u3475;\uC000\u2294\uFE00u\u0100bp\u347F\u348F\u0180;es\u1197\u119C\u3486et\u0100;e\u1197\u348D\xF1\u119D\u0180;es\u11A8\u11AD\u3496et\u0100;e\u11A8\u349D\xF1\u11AE\u0180;af\u117B\u34A6\u05B0r\u0165\u34AB\u05B1\xBB\u117Car\xF2\u1148\u0200cemt\u34B9\u34BE\u34C2\u34C5r;\uC000\uD835\uDCC8tm\xEE\xF1i\xEC\u3415ar\xE6\u11BE\u0100ar\u34CE\u34D5r\u0100;f\u34D4\u17BF\u6606\u0100an\u34DA\u34EDight\u0100ep\u34E3\u34EApsilo\xEE\u1EE0h\xE9\u2EAFs\xBB\u2852\u0280bcmnp\u34FB\u355E\u1209\u358B\u358E\u0480;Edemnprs\u350E\u350F\u3511\u3515\u351E\u3523\u352C\u3531\u3536\u6282;\u6AC5ot;\u6ABD\u0100;d\u11DA\u351Aot;\u6AC3ult;\u6AC1\u0100Ee\u3528\u352A;\u6ACB;\u628Alus;\u6ABFarr;\u6979\u0180eiu\u353D\u3552\u3555t\u0180;en\u350E\u3545\u354Bq\u0100;q\u11DA\u350Feq\u0100;q\u352B\u3528m;\u6AC7\u0100bp\u355A\u355C;\u6AD5;\u6AD3c\u0300;acens\u11ED\u356C\u3572\u3579\u357B\u3326ppro\xF8\u32FAurlye\xF1\u11FE\xF1\u11F3\u0180aes\u3582\u3588\u331Bppro\xF8\u331Aq\xF1\u3317g;\u666A\u0680123;Edehlmnps\u35A9\u35AC\u35AF\u121C\u35B2\u35B4\u35C0\u35C9\u35D5\u35DA\u35DF\u35E8\u35ED\u803B\xB9\u40B9\u803B\xB2\u40B2\u803B\xB3\u40B3;\u6AC6\u0100os\u35B9\u35BCt;\u6ABEub;\u6AD8\u0100;d\u1222\u35C5ot;\u6AC4s\u0100ou\u35CF\u35D2l;\u67C9b;\u6AD7arr;\u697Bult;\u6AC2\u0100Ee\u35E4\u35E6;\u6ACC;\u628Blus;\u6AC0\u0180eiu\u35F4\u3609\u360Ct\u0180;en\u121C\u35FC\u3602q\u0100;q\u1222\u35B2eq\u0100;q\u35E7\u35E4m;\u6AC8\u0100bp\u3611\u3613;\u6AD4;\u6AD6\u0180Aan\u361C\u3620\u362Drr;\u61D9r\u0100hr\u3626\u3628\xEB\u222E\u0100;o\u0A2B\u0A29war;\u692Alig\u803B\xDF\u40DF\u0BE1\u3651\u365D\u3660\u12CE\u3673\u3679\0\u367E\u36C2\0\0\0\0\0\u36DB\u3703\0\u3709\u376C\0\0\0\u3787\u0272\u3656\0\0\u365Bget;\u6316;\u43C4r\xEB\u0E5F\u0180aey\u3666\u366B\u3670ron;\u4165dil;\u4163;\u4442lrec;\u6315r;\uC000\uD835\uDD31\u0200eiko\u3686\u369D\u36B5\u36BC\u01F2\u368B\0\u3691e\u01004f\u1284\u1281a\u0180;sv\u3698\u3699\u369B\u43B8ym;\u43D1\u0100cn\u36A2\u36B2k\u0100as\u36A8\u36AEppro\xF8\u12C1im\xBB\u12ACs\xF0\u129E\u0100as\u36BA\u36AE\xF0\u12C1rn\u803B\xFE\u40FE\u01EC\u031F\u36C6\u22E7es\u8180\xD7;bd\u36CF\u36D0\u36D8\u40D7\u0100;a\u190F\u36D5r;\u6A31;\u6A30\u0180eps\u36E1\u36E3\u3700\xE1\u2A4D\u0200;bcf\u0486\u36EC\u36F0\u36F4ot;\u6336ir;\u6AF1\u0100;o\u36F9\u36FC\uC000\uD835\uDD65rk;\u6ADA\xE1\u3362rime;\u6034\u0180aip\u370F\u3712\u3764d\xE5\u1248\u0380adempst\u3721\u374D\u3740\u3751\u3757\u375C\u375Fngle\u0280;dlqr\u3730\u3731\u3736\u3740\u3742\u65B5own\xBB\u1DBBeft\u0100;e\u2800\u373E\xF1\u092E;\u625Cight\u0100;e\u32AA\u374B\xF1\u105Aot;\u65ECinus;\u6A3Alus;\u6A39b;\u69CDime;\u6A3Bezium;\u63E2\u0180cht\u3772\u377D\u3781\u0100ry\u3777\u377B;\uC000\uD835\uDCC9;\u4446cy;\u445Brok;\u4167\u0100io\u378B\u378Ex\xF4\u1777head\u0100lr\u3797\u37A0eftarro\xF7\u084Fightarrow\xBB\u0F5D\u0900AHabcdfghlmoprstuw\u37D0\u37D3\u37D7\u37E4\u37F0\u37FC\u380E\u381C\u3823\u3834\u3851\u385D\u386B\u38A9\u38CC\u38D2\u38EA\u38F6r\xF2\u03EDar;\u6963\u0100cr\u37DC\u37E2ute\u803B\xFA\u40FA\xF2\u1150r\u01E3\u37EA\0\u37EDy;\u445Eve;\u416D\u0100iy\u37F5\u37FArc\u803B\xFB\u40FB;\u4443\u0180abh\u3803\u3806\u380Br\xF2\u13ADlac;\u4171a\xF2\u13C3\u0100ir\u3813\u3818sht;\u697E;\uC000\uD835\uDD32rave\u803B\xF9\u40F9\u0161\u3827\u3831r\u0100lr\u382C\u382E\xBB\u0957\xBB\u1083lk;\u6580\u0100ct\u3839\u384D\u026F\u383F\0\0\u384Arn\u0100;e\u3845\u3846\u631Cr\xBB\u3846op;\u630Fri;\u65F8\u0100al\u3856\u385Acr;\u416B\u80BB\xA8\u0349\u0100gp\u3862\u3866on;\u4173f;\uC000\uD835\uDD66\u0300adhlsu\u114B\u3878\u387D\u1372\u3891\u38A0own\xE1\u13B3arpoon\u0100lr\u3888\u388Cef\xF4\u382Digh\xF4\u382Fi\u0180;hl\u3899\u389A\u389C\u43C5\xBB\u13FAon\xBB\u389Aparrows;\u61C8\u0180cit\u38B0\u38C4\u38C8\u026F\u38B6\0\0\u38C1rn\u0100;e\u38BC\u38BD\u631Dr\xBB\u38BDop;\u630Eng;\u416Fri;\u65F9cr;\uC000\uD835\uDCCA\u0180dir\u38D9\u38DD\u38E2ot;\u62F0lde;\u4169i\u0100;f\u3730\u38E8\xBB\u1813\u0100am\u38EF\u38F2r\xF2\u38A8l\u803B\xFC\u40FCangle;\u69A7\u0780ABDacdeflnoprsz\u391C\u391F\u3929\u392D\u39B5\u39B8\u39BD\u39DF\u39E4\u39E8\u39F3\u39F9\u39FD\u3A01\u3A20r\xF2\u03F7ar\u0100;v\u3926\u3927\u6AE8;\u6AE9as\xE8\u03E1\u0100nr\u3932\u3937grt;\u699C\u0380eknprst\u34E3\u3946\u394B\u3952\u395D\u3964\u3996app\xE1\u2415othin\xE7\u1E96\u0180hir\u34EB\u2EC8\u3959op\xF4\u2FB5\u0100;h\u13B7\u3962\xEF\u318D\u0100iu\u3969\u396Dgm\xE1\u33B3\u0100bp\u3972\u3984setneq\u0100;q\u397D\u3980\uC000\u228A\uFE00;\uC000\u2ACB\uFE00setneq\u0100;q\u398F\u3992\uC000\u228B\uFE00;\uC000\u2ACC\uFE00\u0100hr\u399B\u399Fet\xE1\u369Ciangle\u0100lr\u39AA\u39AFeft\xBB\u0925ight\xBB\u1051y;\u4432ash\xBB\u1036\u0180elr\u39C4\u39D2\u39D7\u0180;be\u2DEA\u39CB\u39CFar;\u62BBq;\u625Alip;\u62EE\u0100bt\u39DC\u1468a\xF2\u1469r;\uC000\uD835\uDD33tr\xE9\u39AEsu\u0100bp\u39EF\u39F1\xBB\u0D1C\xBB\u0D59pf;\uC000\uD835\uDD67ro\xF0\u0EFBtr\xE9\u39B4\u0100cu\u3A06\u3A0Br;\uC000\uD835\uDCCB\u0100bp\u3A10\u3A18n\u0100Ee\u3980\u3A16\xBB\u397En\u0100Ee\u3992\u3A1E\xBB\u3990igzag;\u699A\u0380cefoprs\u3A36\u3A3B\u3A56\u3A5B\u3A54\u3A61\u3A6Airc;\u4175\u0100di\u3A40\u3A51\u0100bg\u3A45\u3A49ar;\u6A5Fe\u0100;q\u15FA\u3A4F;\u6259erp;\u6118r;\uC000\uD835\uDD34pf;\uC000\uD835\uDD68\u0100;e\u1479\u3A66at\xE8\u1479cr;\uC000\uD835\uDCCC\u0AE3\u178E\u3A87\0\u3A8B\0\u3A90\u3A9B\0\0\u3A9D\u3AA8\u3AAB\u3AAF\0\0\u3AC3\u3ACE\0\u3AD8\u17DC\u17DFtr\xE9\u17D1r;\uC000\uD835\uDD35\u0100Aa\u3A94\u3A97r\xF2\u03C3r\xF2\u09F6;\u43BE\u0100Aa\u3AA1\u3AA4r\xF2\u03B8r\xF2\u09EBa\xF0\u2713is;\u62FB\u0180dpt\u17A4\u3AB5\u3ABE\u0100fl\u3ABA\u17A9;\uC000\uD835\uDD69im\xE5\u17B2\u0100Aa\u3AC7\u3ACAr\xF2\u03CEr\xF2\u0A01\u0100cq\u3AD2\u17B8r;\uC000\uD835\uDCCD\u0100pt\u17D6\u3ADCr\xE9\u17D4\u0400acefiosu\u3AF0\u3AFD\u3B08\u3B0C\u3B11\u3B15\u3B1B\u3B21c\u0100uy\u3AF6\u3AFBte\u803B\xFD\u40FD;\u444F\u0100iy\u3B02\u3B06rc;\u4177;\u444Bn\u803B\xA5\u40A5r;\uC000\uD835\uDD36cy;\u4457pf;\uC000\uD835\uDD6Acr;\uC000\uD835\uDCCE\u0100cm\u3B26\u3B29y;\u444El\u803B\xFF\u40FF\u0500acdefhiosw\u3B42\u3B48\u3B54\u3B58\u3B64\u3B69\u3B6D\u3B74\u3B7A\u3B80cute;\u417A\u0100ay\u3B4D\u3B52ron;\u417E;\u4437ot;\u417C\u0100et\u3B5D\u3B61tr\xE6\u155Fa;\u43B6r;\uC000\uD835\uDD37cy;\u4436grarr;\u61DDpf;\uC000\uD835\uDD6Bcr;\uC000\uD835\uDCCF\u0100jn\u3B85\u3B87;\u600Dj;\u600C".split("").map(function (c) {
  return c.charCodeAt(0);
}));

/***/ }),
/* 779 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // Generated using scripts/write-decode-map.ts

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = new Uint16Array( // prettier-ignore
"\u0200aglq\t\x15\x18\x1B\u026D\x0F\0\0\x12p;\u4026os;\u4027t;\u403Et;\u403Cuot;\u4022".split("").map(function (c) {
  return c.charCodeAt(0);
}));

/***/ }),
/* 780 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var AccountController_namespaceObject = {};
__webpack_require__.r(AccountController_namespaceObject);
__webpack_require__.d(AccountController_namespaceObject, "getAccount", function() { return getAccount; });
__webpack_require__.d(AccountController_namespaceObject, "register", function() { return register; });
__webpack_require__.d(AccountController_namespaceObject, "requestConfirmationEmail", function() { return requestConfirmationEmail; });
__webpack_require__.d(AccountController_namespaceObject, "confirm", function() { return AccountController_confirm; });
__webpack_require__.d(AccountController_namespaceObject, "login", function() { return login; });
__webpack_require__.d(AccountController_namespaceObject, "logout", function() { return logout; });
__webpack_require__.d(AccountController_namespaceObject, "password", function() { return AccountController_password; });
__webpack_require__.d(AccountController_namespaceObject, "requestReset", function() { return requestReset; });
__webpack_require__.d(AccountController_namespaceObject, "reset", function() { return AccountController_reset; });
__webpack_require__.d(AccountController_namespaceObject, "update", function() { return update; });
__webpack_require__.d(AccountController_namespaceObject, "addAddress", function() { return addAddress; });
__webpack_require__.d(AccountController_namespaceObject, "addShippingAddress", function() { return addShippingAddress; });
__webpack_require__.d(AccountController_namespaceObject, "addBillingAddress", function() { return addBillingAddress; });
__webpack_require__.d(AccountController_namespaceObject, "updateAddress", function() { return updateAddress; });
__webpack_require__.d(AccountController_namespaceObject, "removeAddress", function() { return removeAddress; });
__webpack_require__.d(AccountController_namespaceObject, "setDefaultBillingAddress", function() { return setDefaultBillingAddress; });
__webpack_require__.d(AccountController_namespaceObject, "setDefaultShippingAddress", function() { return setDefaultShippingAddress; });
var ProductController_namespaceObject = {};
__webpack_require__.r(ProductController_namespaceObject);
__webpack_require__.d(ProductController_namespaceObject, "getProduct", function() { return getProduct; });
__webpack_require__.d(ProductController_namespaceObject, "query", function() { return ProductController_query; });
__webpack_require__.d(ProductController_namespaceObject, "queryCategories", function() { return queryCategories; });
__webpack_require__.d(ProductController_namespaceObject, "searchableAttributes", function() { return searchableAttributes; });
var CartController_namespaceObject = {};
__webpack_require__.r(CartController_namespaceObject);
__webpack_require__.d(CartController_namespaceObject, "getCart", function() { return getCart; });
__webpack_require__.d(CartController_namespaceObject, "resetCart", function() { return resetCart; });
__webpack_require__.d(CartController_namespaceObject, "addToCart", function() { return addToCart; });
__webpack_require__.d(CartController_namespaceObject, "replicateCart", function() { return replicateCart; });
__webpack_require__.d(CartController_namespaceObject, "updateLineItem", function() { return updateLineItem; });
__webpack_require__.d(CartController_namespaceObject, "removeLineItem", function() { return removeLineItem; });
__webpack_require__.d(CartController_namespaceObject, "updateCart", function() { return updateCart; });
__webpack_require__.d(CartController_namespaceObject, "checkout", function() { return checkout; });
__webpack_require__.d(CartController_namespaceObject, "getOrders", function() { return getOrders; });
__webpack_require__.d(CartController_namespaceObject, "getShippingMethods", function() { return getShippingMethods; });
__webpack_require__.d(CartController_namespaceObject, "getAvailableShippingMethods", function() { return getAvailableShippingMethods; });
__webpack_require__.d(CartController_namespaceObject, "setShippingMethod", function() { return setShippingMethod; });
__webpack_require__.d(CartController_namespaceObject, "addPaymentByInvoice", function() { return addPaymentByInvoice; });
__webpack_require__.d(CartController_namespaceObject, "updatePayment", function() { return updatePayment; });
__webpack_require__.d(CartController_namespaceObject, "redeemDiscount", function() { return redeemDiscount; });
__webpack_require__.d(CartController_namespaceObject, "removeDiscount", function() { return removeDiscount; });
__webpack_require__.d(CartController_namespaceObject, "queryOrders", function() { return queryOrders; });
__webpack_require__.d(CartController_namespaceObject, "getCheckoutOrder", function() { return getCheckoutOrder; });
__webpack_require__.d(CartController_namespaceObject, "getCheckoutToken", function() { return getCheckoutToken; });
var WishlistController_namespaceObject = {};
__webpack_require__.r(WishlistController_namespaceObject);
__webpack_require__.d(WishlistController_namespaceObject, "getWishlist", function() { return getWishlist; });
__webpack_require__.d(WishlistController_namespaceObject, "createWishlist", function() { return createWishlist; });
__webpack_require__.d(WishlistController_namespaceObject, "addToWishlist", function() { return addToWishlist; });
__webpack_require__.d(WishlistController_namespaceObject, "removeLineItem", function() { return WishlistController_removeLineItem; });
__webpack_require__.d(WishlistController_namespaceObject, "deleteWishlist", function() { return deleteWishlist; });
__webpack_require__.d(WishlistController_namespaceObject, "updateLineItemCount", function() { return updateLineItemCount; });
var ProjectController_namespaceObject = {};
__webpack_require__.r(ProjectController_namespaceObject);
__webpack_require__.d(ProjectController_namespaceObject, "getProjectSettings", function() { return getProjectSettings; });
var ContentController_namespaceObject = {};
__webpack_require__.r(ContentController_namespaceObject);
__webpack_require__.d(ContentController_namespaceObject, "getContent", function() { return getContent; });
var ContentstackController_namespaceObject = {};
__webpack_require__.r(ContentstackController_namespaceObject);
__webpack_require__.d(ContentstackController_namespaceObject, "getContent", function() { return ContentstackController_getContent; });
__webpack_require__.d(ContentstackController_namespaceObject, "getContentList", function() { return getContentList; });
var BloomreachController_namespaceObject = {};
__webpack_require__.r(BloomreachController_namespaceObject);
__webpack_require__.d(BloomreachController_namespaceObject, "getContent", function() { return BloomreachController_getContent; });
__webpack_require__.d(BloomreachController_namespaceObject, "getContentList", function() { return BloomreachController_getContentList; });
var actions_namespaceObject = {};
__webpack_require__.r(actions_namespaceObject);
__webpack_require__.d(actions_namespaceObject, "getTeam", function() { return getTeam; });
__webpack_require__.d(actions_namespaceObject, "getTeams", function() { return getTeams; });

// EXTERNAL MODULE: ./node_modules/core-js/stable/index.js
var stable = __webpack_require__(347);

// EXTERNAL MODULE: ./node_modules/regenerator-runtime/runtime.js
var runtime = __webpack_require__(599);

// EXTERNAL MODULE: external "querystring"
var external_querystring_ = __webpack_require__(338);

// CONCATENATED MODULE: ./node_modules/@commercetools/platform-sdk/dist/commercetools-platform-sdk.esm.js
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty2(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }



function _toPrimitive(input, hint) {
  if (_typeof(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];

  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (_typeof(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }

  return (hint === "string" ? String : Number)(input);
}

function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");

  return _typeof(key) === "symbol" ? key : String(key);
}

function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);

  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate <raml_file_path> -o <output_path> -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */


function isDefined(value) {
  return typeof value !== 'undefined' && value !== null;
}

function cleanObject(obj) {
  return Object.keys(obj).reduce(function (result, key) {
    var value = obj[key];

    if (Array.isArray(value)) {
      var values = value.filter(isDefined);

      if (!values.length) {
        return result;
      }

      return _objectSpread(_objectSpread({}, result), {}, _defineProperty2({}, key, values));
    }

    if (isDefined(value)) {
      return _objectSpread(_objectSpread({}, result), {}, _defineProperty2({}, key, value));
    }

    return result;
  }, {});
}

function formatQueryString(variableMap) {
  var map = cleanObject(variableMap);
  var result = Object(external_querystring_["stringify"])(map);

  if (result === '') {
    return '';
  }

  return "?".concat(result);
}

function buildRelativeUri(commonRequest) {
  var pathMap = commonRequest.pathVariables;
  var uri = commonRequest.uriTemplate;

  for (var param in pathMap) {
    uri = uri.replace("{".concat(param, "}"), "".concat(pathMap[param]));
  }

  var resQuery = formatQueryString(commonRequest.queryParams || {});
  return "".concat(uri).concat(resQuery);
}

var ApiRequest = /*#__PURE__*/function () {
  function ApiRequest(request, requestExecutor) {
    _classCallCheck(this, ApiRequest);

    this.requestExecutor = requestExecutor;

    _defineProperty(this, "request", void 0);

    this.request = _objectSpread(_objectSpread({}, request), {}, {
      uri: buildRelativeUri(request)
    });
  }

  _createClass(ApiRequest, [{
    key: "clientRequest",
    value: function clientRequest() {
      return this.request;
    }
  }, {
    key: "execute",
    value: function execute() {
      return this.requestExecutor(this.request);
    }
  }]);

  return ApiRequest;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyApiClientsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyApiClientsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyApiClientsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyApiClientsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/api-clients/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/api-clients/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyApiClientsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyApiClientsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyApiClientsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyApiClientsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyApiClientsRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyApiClientsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/api-clients',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/api-clients',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyApiClientsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyAttributeGroupsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyAttributeGroupsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyAttributeGroupsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyAttributeGroupsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/attribute-groups/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/attribute-groups/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/attribute-groups/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyAttributeGroupsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyAttributeGroupsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyAttributeGroupsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyAttributeGroupsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyAttributeGroupsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/attribute-groups/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/attribute-groups/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/attribute-groups/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyAttributeGroupsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyAttributeGroupsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyAttributeGroupsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyAttributeGroupsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyAttributeGroupsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyAttributeGroupsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyAttributeGroupsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/attribute-groups',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/attribute-groups',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyAttributeGroupsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyBusinessUnitsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyBusinessUnitsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyBusinessUnitsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyBusinessUnitsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/business-units/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/business-units/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/business-units/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyBusinessUnitsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyBusinessUnitsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyBusinessUnitsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyBusinessUnitsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyBusinessUnitsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/business-units/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/business-units/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/business-units/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyBusinessUnitsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyBusinessUnitsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyBusinessUnitsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyBusinessUnitsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyBusinessUnitsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyBusinessUnitsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyBusinessUnitsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/business-units',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/business-units',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyBusinessUnitsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCartDiscountsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCartDiscountsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCartDiscountsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCartDiscountsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/cart-discounts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/cart-discounts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/cart-discounts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCartDiscountsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCartDiscountsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCartDiscountsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCartDiscountsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCartDiscountsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/cart-discounts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/cart-discounts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/cart-discounts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCartDiscountsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCartDiscountsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCartDiscountsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCartDiscountsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCartDiscountsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyCartDiscountsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyCartDiscountsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/cart-discounts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/cart-discounts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCartDiscountsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCartsReplicateRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCartsReplicateRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCartsReplicateRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCartsReplicateRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/carts/replicate',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCartsReplicateRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCartsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCartsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCartsByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	The cart may not contain up-to-date prices, discounts etc.
   *	If you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.
   *
   */


  _createClass(ByProjectKeyCartsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCartsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder);

    this.args = args;
  }
  /**
   *	Retrieves the active cart of the customer that has been modified most recently.
   *	It does not consider carts with CartOrigin Merchant. If no active cart exists, a 404 Not Found error is returned.
   *
   *	The cart may not contain up-to-date prices, discounts etc. If you want to ensure they're up-to-date,
   *	send an Update request with the Recalculate update action instead.
   *
   */


  _createClass(ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/carts/customer-id={customerId}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCartsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCartsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCartsKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	The cart may not contain up-to-date prices, discounts etc.
   *	If you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.
   *
   */


  _createClass(ByProjectKeyCartsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCartsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCartsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCartsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCartsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCartsRequestBuilder, [{
    key: "replicate",
    value: function replicate() {
      return new ByProjectKeyCartsReplicateRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withCustomerId",
    value: function withCustomerId(childPathArgs) {
      return new ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyCartsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyCartsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/carts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Creating a cart can fail with an InvalidOperation if the referenced shipping method in the
     *	CartDraft has a predicate which does not match the cart.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/carts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCartsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCategoriesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCategoriesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCategoriesByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Either the [scope](/../api/scopes) `view_products:{projectKey}` or `view_categories:{projectKey}` is required.
   *
   */


  _createClass(ByProjectKeyCategoriesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/categories/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Either the [scope](/../api/scopes) `manage_products:{projectKey}` or `manage_categories:{projectKey}` is required.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/categories/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Either the [scope](/../api/scopes) `manage_products:{projectKey}` or `manage_categories:{projectKey}` is required.
     *
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/categories/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCategoriesByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCategoriesKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCategoriesKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCategoriesKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	Either the [scope](/../api/scopes) `view_products:{projectKey}` or `view_categories:{projectKey}` is required.
   *
   */


  _createClass(ByProjectKeyCategoriesKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/categories/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Either the [scope](/../api/scopes) `manage_products:{projectKey}` or `manage_categories:{projectKey}` is required.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/categories/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Either the [scope](/../api/scopes) `manage_products:{projectKey}` or `manage_categories:{projectKey}` is required.
     *
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/categories/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCategoriesKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCategoriesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCategoriesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCategoriesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCategoriesRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyCategoriesKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyCategoriesByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Either the [scope](/../api/scopes) `view_products:{projectKey}` or `view_categories:{projectKey}` is required.
     *
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/categories',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Either the [scope](/../api/scopes) `manage_products:{projectKey}` or `manage_categories:{projectKey}` is required.
     *
     *	Creating a Category produces the [CategoryCreated](ctp:api:type:CategoryCreatedMessage) Message.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/categories',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCategoriesRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyChannelsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyChannelsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyChannelsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyChannelsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/channels/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/channels/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/channels/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyChannelsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyChannelsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyChannelsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyChannelsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyChannelsRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyChannelsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/channels',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/channels',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyChannelsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/custom-objects/{container}/{key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/custom-objects/{container}/{key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCustomObjectsByContainerRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomObjectsByContainerRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomObjectsByContainerRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomObjectsByContainerRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/custom-objects/{container}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomObjectsByContainerRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCustomObjectsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomObjectsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomObjectsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomObjectsRequestBuilder, [{
    key: "withContainerAndKey",
    value: function withContainerAndKey(childPathArgs) {
      return new ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withContainer",
    value: function withContainer(childPathArgs) {
      return new ByProjectKeyCustomObjectsByContainerRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	For performance reasons, it is highly advisable to query for Custom Objects in a container by using the `container` field in the `where` predicate.
     *
     */

    /**
     * @deprecated
     **/

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/custom-objects',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	If an object with the given container/key exists, the object will be replaced with the new value and the version is incremented.
     *	If the request contains a version and an object with the given container/key, then the version must match the version of the existing object. Concurrent updates to the same Custom Object returns a [ConcurrentModification](ctp:api:type:ConcurrentModificationError) error even if the version is not provided.
     *
     *	Fields with `null` values will **not be saved**.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/custom-objects',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomObjectsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCustomerGroupsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomerGroupsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomerGroupsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomerGroupsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/customer-groups/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customer-groups/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/customer-groups/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomerGroupsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/customer-groups/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customer-groups/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/customer-groups/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCustomerGroupsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomerGroupsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomerGroupsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomerGroupsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyCustomerGroupsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/customer-groups',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customer-groups',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomerGroupsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCustomersEmailConfirmRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersEmailConfirmRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersEmailConfirmRequestBuilder);

    this.args = args;
  }
  /**
   *	Verifying the email of the Customer produces the [CustomerEmailVerified](ctp:api:type:CustomerEmailVerifiedMessage) Message.
   *
   */


  _createClass(ByProjectKeyCustomersEmailConfirmRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customers/email/confirm',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersEmailConfirmRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCustomersEmailTokenRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersEmailTokenRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersEmailTokenRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomersEmailTokenRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customers/email-token',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersEmailTokenRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCustomersPasswordTokenRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersPasswordTokenRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersPasswordTokenRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomersPasswordTokenRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customers/password-token',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersPasswordTokenRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCustomersPasswordRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersPasswordRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersPasswordRequestBuilder);

    this.args = args;
  }
  /**
   *	Changing the password produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=false`.
   *
   */


  _createClass(ByProjectKeyCustomersPasswordRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customers/password',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersPasswordRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCustomersPasswordResetRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersPasswordResetRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersPasswordResetRequestBuilder);

    this.args = args;
  }
  /**
   *	Resetting the password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=true`.
   *
   */


  _createClass(ByProjectKeyCustomersPasswordResetRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customers/password/reset',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersPasswordResetRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCustomersByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomersByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/customers/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customers/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Deleting a Customer produces the [CustomerDeleted](ctp:api:type:CustomerDeletedMessage) Message.
     *
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/customers/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/customers/email-token={emailToken}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCustomersKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomersKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/customers/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customers/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Deleting a Customer produces the [CustomerDeleted](ctp:api:type:CustomerDeletedMessage) Message.
     *
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/customers/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/customers/password-token={passwordToken}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyCustomersRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomersRequestBuilder, [{
    key: "withPasswordToken",
    value: function withPasswordToken(childPathArgs) {
      return new ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withEmailToken",
    value: function withEmailToken(childPathArgs) {
      return new ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "emailToken",
    value: function emailToken() {
      return new ByProjectKeyCustomersEmailTokenRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "emailConfirm",
    value: function emailConfirm() {
      return new ByProjectKeyCustomersEmailConfirmRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "password",
    value: function password() {
      return new ByProjectKeyCustomersPasswordRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "passwordReset",
    value: function passwordReset() {
      return new ByProjectKeyCustomersPasswordResetRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "passwordToken",
    value: function passwordToken() {
      return new ByProjectKeyCustomersPasswordTokenRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyCustomersKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyCustomersByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/customers',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	If the `anonymousCart` field is set on the [CustomerDraft](ctp:api:type:CustomerDraft), then the newly created Customer will be assigned to that [Cart](ctp:api:type:Cart).
     *	Similarly, if the `anonymousId` field is set, the Customer will be set on all [Carts](ctp:api:type:Cart), [Orders](ctp:api:type:Order), [ShoppingLists](ctp:api:type:ShoppingList) and [Payments](ctp:api:type:Payment) with the same `anonymousId`.
     *	Creating a Customer produces the [CustomerCreated](ctp:api:type:CustomerCreatedMessage) Message.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customers',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyDiscountCodesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyDiscountCodesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyDiscountCodesByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Deprecated scope: `view_orders:{projectKey}`
   */


  _createClass(ByProjectKeyDiscountCodesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/discount-codes/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Deprecated scope: `manage_orders:{projectKey}`
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/discount-codes/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Deprecated scope: `manage_orders:{projectKey}`
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/discount-codes/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyDiscountCodesByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyDiscountCodesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyDiscountCodesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyDiscountCodesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyDiscountCodesRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyDiscountCodesByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Deprecated scope: `view_orders:{projectKey}`
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/discount-codes',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Deprecated scope: `manage_orders:{projectKey}`
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/discount-codes',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyDiscountCodesRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyExtensionsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyExtensionsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyExtensionsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyExtensionsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/extensions/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/extensions/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/extensions/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyExtensionsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyExtensionsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyExtensionsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyExtensionsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyExtensionsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/extensions/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/extensions/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/extensions/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyExtensionsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyExtensionsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyExtensionsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyExtensionsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyExtensionsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyExtensionsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyExtensionsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/extensions',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/extensions',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyExtensionsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyGraphqlRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyGraphqlRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyGraphqlRequestBuilder);

    this.args = args;
  }
  /**
   *	Execute a GraphQL query
   */


  _createClass(ByProjectKeyGraphqlRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/graphql',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/graphql'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyGraphqlRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeCustomersRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeCustomersRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeCustomersRequestBuilder);

    this.args = args;
  }
  /**
   *	The My Business Unit endpoint does not support assigning existing Customers to a Business Unit.
   *	Use this endpoint to create a new Customer and associate it with the Business Unit.
   *	The user must have the `Admin` role within the Business Unit to perform this request.
   *	The new Customer is created with an empty set of roles.
   *
   */


  _createClass(ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeCustomersRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-business-unit/key={businessUnitKey}/me/customers',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeCustomersRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeRequestBuilder, [{
    key: "customers",
    value: function customers() {
      return new ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeCustomersRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }]);

  return ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyRequestBuilder, [{
    key: "me",
    value: function me() {
      return new ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }]);

  return ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/replicate',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Returns a cart by its ID from a specific Store.
   *	If the cart exists in the project but does not have the store field,
   *	or the store field references a different store, this method returns a ResourceNotFound error.
   *	The cart may not contain up-to-date prices, discounts etc.
   *	If you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Updates a [Cart](ctp:api:type:Cart) in the Store specified by `storeKey`.
     *	If the Cart exists in the Project but does not have the `store` field, or the `store` field references a different Store, a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder);

    this.args = args;
  }
  /**
   *	Retrieves the active cart of the customer that has been modified most recently in a specific Store.
   *
   *	If the cart exists in the project but does not have the store field, or the store field
   *	references a different store, this method returns a ResourceNotFound error.
   *
   *	The cart may not contain up-to-date prices, discounts etc. If you want to ensure they're up-to-date,
   *	send an Update request with the Recalculate update action instead.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/customer-id={customerId}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	Returns a cart by its key from a specific Store.
   *	If the cart exists in the project but does not have the store field,
   *	or the store field references a different store, this method returns a ResourceNotFound error.
   *	The cart may not contain up-to-date prices, discounts etc.
   *	If you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Updates a [Cart](ctp:api:type:Cart) in the Store specified by `storeKey`.
     *	If the Cart exists in the Project but does not have the store field,
     *	or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFound) error.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder, [{
    key: "withCustomerId",
    value: function withCustomerId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "replicate",
    value: function replicate() {
      return new ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Queries carts in a specific Store.
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Creates a [Cart](ctp:api:type:Cart) in the Store specified by `storeKey`.
     *	When using this endpoint the Cart's `store` field is always set to the store specified in the path parameter.
     *	If the referenced [ShippingMethod](ctp:api:type:ShippingMethod) in the [CartDraft](ctp:api:type:CartDraft) has a predicate that does not match, an [InvalidOperation](ctp:api:type:InvalidOperationError) error is returned.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder);

    this.args = args;
  }
  /**
   *	The customer verifies the email using the token value.
   *	Verifying the email of the Customer produces the [CustomerEmailVerified](ctp:api:type:CustomerEmailVerifiedMessage) Message.
   *
   *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/email/confirm',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder);

    this.args = args;
  }
  /**
   *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/email-token',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder);

    this.args = args;
  }
  /**
   *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password-token',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder);

    this.args = args;
  }
  /**
   *	Changing the password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=false`.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder);

    this.args = args;
  }
  /**
   *	Resetting the password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=true`.
   *
   *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password/reset',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Deleting a Customer produces the [CustomerDeleted](ctp:api:type:CustomerDeletedMessage) Message.
     *
     *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
     *
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder);

    this.args = args;
  }
  /**
   *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/email-token={emailToken}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Deleting a Customer produces the [CustomerDeleted](ctp:api:type:CustomerDeletedMessage) Message.
     *
     *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
     *
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder);

    this.args = args;
  }
  /**
   *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password-token={passwordToken}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder, [{
    key: "withPasswordToken",
    value: function withPasswordToken(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withEmailToken",
    value: function withEmailToken(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "emailToken",
    value: function emailToken() {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "emailConfirm",
    value: function emailConfirm() {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "password",
    value: function password() {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "passwordReset",
    value: function passwordReset() {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "passwordToken",
    value: function passwordToken() {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	When using this endpoint, if omitted, the Customer `stores` field is set to the Store specified in the path parameter.
     *
     *	If the `anonymousCart` field is set on the [CustomerDraft](ctp:api:type:CustomerDraft), then the newly created Customer will be assigned to that [Cart](ctp:api:type:Cart).
     *	Similarly, if the `anonymousId` field is set, the Customer will be set on all [Carts](ctp:api:type:Cart), [Orders](ctp:api:type:Order), [ShoppingLists](ctp:api:type:ShoppingList) and [Payments](ctp:api:type:Payment) with the same `anonymousId`.
     *	If a Cart with a `store` field specified, the `store` field must reference the same Store specified in the `{storeKey}` path parameter.
     *	Creating a Customer produces the [CustomerCreated](ctp:api:type:CustomerCreatedMessage) Message.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder);

    this.args = args;
  }
  /**
   *	Authenticates a Customer associated with a Store. For more information, see [Global versus Store-specific Customers](/../api/customers-overview#global-versus-store-specific-customers).
   *
   *	If the Customer exists in the Project but the `stores` field references a different Store, this method returns an [InvalidCredentials](ctp:api:type:InvalidCredentialsError) error.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/login',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/active-cart',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyMeEmailConfirmRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeEmailConfirmRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeEmailConfirmRequestBuilder);

    this.args = args;
  }
  /**
   *	This is the last step in the [email verification process of a Customer](/../api/projects/customers#email-verification-of-customer-in-store).
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeEmailConfirmRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/email/confirm',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeEmailConfirmRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyMeLoginRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeLoginRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeLoginRequestBuilder);

    this.args = args;
  }
  /**
   *	Retrieves the authenticated Customer (that matches the given email/password pair) if they are part of a specific [Store](ctp:api:type:Store).
   *
   *	- If the Customer does not have a Cart, the most recently modified anonymous cart becomes the Customer's Cart.
   *	- If the Customer already has a Cart, the most recently modified anonymous cart is handled according to [AnonymousCartSignInMode](ctp:api:type:AnonymousCartSignInMode).
   *
   *	If a Cart is returned as part of [CustomerSignInResult](ctp:api:type:CustomerSignInResult), it has been [recalculated](/../api/projects/carts#recalculate) with up-to-date prices, taxes, discounts, and invalid line items removed.
   *
   *	If an account with the given credentials is not found, an [InvalidCredentials](ctp:api:type:InvalidCredentialsError) error is returned.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeLoginRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/login',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeLoginRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyMePasswordResetRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMePasswordResetRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMePasswordResetRequestBuilder);

    this.args = args;
  }
  /**
   *	This is the last step in the [password reset process of the authenticated Customer](/../api/projects/customers#password-reset-of-customer-in-store).
   *
   *	Resetting a password produces the of the Customer [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=true`.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyMePasswordResetRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/password/reset',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMePasswordResetRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyMePasswordRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMePasswordRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMePasswordRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyMePasswordRequestBuilder, [{
    key: "reset",
    value: function reset() {
      return new ByProjectKeyInStoreKeyByStoreKeyMePasswordResetRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Changing the password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=false`.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/password',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMePasswordRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,
   *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,
     *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,
     *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
     *
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store, the [ResourceNotFound](/errors#404-not-found-1) error is returned.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,
     *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,
     *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
     *
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	When using this endpoint, the `store` field of a ShoppingList is always set to the Store specified in the path parameter.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyMeSignupRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeSignupRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeSignupRequestBuilder);

    this.args = args;
  }
  /**
   *	If omitted in the request body, the [Customer](ctp:api:type:Customer) `stores` field is set to the Store specified in the path parameter.
   *
   *	Creating a Customer produces the [CustomerCreated](ctp:api:type:CustomerCreatedMessage) Message.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeSignupRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/signup',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeSignupRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder);

    this.args = args;
  }
  /**
   *	A shopping cart holds product variants and can be ordered.
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder, [{
    key: "carts",
    value: function carts() {
      return new ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	An order can be created from a order, usually after a checkout process has been completed.
     */

  }, {
    key: "orders",
    value: function orders() {
      return new ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "activeCart",
    value: function activeCart() {
      return new ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	shopping-lists e.g. for wishlist support
     *
     */

  }, {
    key: "shoppingLists",
    value: function shoppingLists() {
      return new ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "emailConfirm",
    value: function emailConfirm() {
      return new ByProjectKeyInStoreKeyByStoreKeyMeEmailConfirmRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "password",
    value: function password() {
      return new ByProjectKeyInStoreKeyByStoreKeyMePasswordRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "signup",
    value: function signup() {
      return new ByProjectKeyInStoreKeyByStoreKeyMeSignupRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "login",
    value: function login() {
      return new ByProjectKeyInStoreKeyByStoreKeyMeLoginRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Returns an order by its ID from a specific Store.
   *	If the order exists in the project but does not have the store field,
   *	or the store field references a different store, this method returns a ResourceNotFound error.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Updates an order in the store specified by {storeKey}.
     *	If the order exists in the project but does not have the store field,
     *	or the store field references a different store, this method returns a ResourceNotFound error.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder);

    this.args = args;
  }
  /**
   *	Returns an order by its order number from a specific Store.
   *
   *	If the order exists in the project but does not have the store field,
   *	or the store field references a different store, this method returns a ResourceNotFound error.
   *	In case the orderNumber does not match the regular expression [a-zA-Z0-9_\-]+,
   *	it should be provided in URL-encoded format.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Updates an order in the store specified by {storeKey}.
     *	If the order exists in the project but does not have the store field,
     *	or the store field references a different store, this method returns a ResourceNotFound error.
     *	In case the orderNumber does not match the regular expression [a-zA-Z0-9_\-]+,
     *	it should be provided in URL-encoded format.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder, [{
    key: "withOrderNumber",
    value: function withOrderNumber(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Queries orders in a specific Store.
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Creates an order from a Cart from a specific Store.
     *	When using this endpoint the orders's store field is always set to the store specified in the path parameter.
     *	The cart must have a shipping address set before creating an order. When using the Platform TaxMode,
     *	the shipping address is used for tax calculation.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyProductProjectionsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyProductProjectionsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyProductProjectionsByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Gets the current or staged representation of a [Product](ctp:api:type:Product) by its ID from the specified [Store](ctp:api:type:Store).
   *	If the Store has defined some languages, countries, distribution or supply Channels,
   *	they are used for projections based on [locale](ctp:api:type:ProductProjectionLocales), [price](ctp:api:type:ProductProjectionPrices)
   *	and [inventory](ctp:api:type:ProductProjectionInventoryEntries).
   *
   *	When used with an API Client that has the `view_published_products:{projectKey}` scope, this endpoint only returns published (current) Product Projections.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyProductProjectionsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/product-projections/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyProductProjectionsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyProductProjectionsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyProductProjectionsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyProductProjectionsKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	Gets the current or staged representation of a [Product](ctp:api:type:Product) by its key from the specified [Store](ctp:api:type:Store).
   *	If the Store has defined some languages, countries, distribution or supply Channels,
   *	they are used for projections based on [locale](ctp:api:type:ProductProjectionLocales), [price](ctp:api:type:ProductProjectionPrices)
   *	and [inventory](ctp:api:type:ProductProjectionInventoryEntries).
   *
   *	When used with an API Client that has the `view_published_products:{projectKey}` scope, this endpoint only returns published (current) Product Projections.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyProductProjectionsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/product-projections/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyProductProjectionsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyProductProjectionsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyProductProjectionsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyProductProjectionsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyProductProjectionsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyProductProjectionsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyProductProjectionsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyProductProjectionsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyProductSelectionAssignmentsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyProductSelectionAssignmentsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyProductSelectionAssignmentsRequestBuilder);

    this.args = args;
  }
  /**
   *	Queries Product Selection assignments in a specific Store.
   *
   *	The response will include duplicate Products whenever more than one active Product Selection of the Store
   *	includes a Product. To make clear through which Product Selection a Product is available in the Store
   *	the response contains assignments including both the Product and the Product Selection.
   *	Only Products of Product Selections that are activated in Store will be returned.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyProductSelectionAssignmentsRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/product-selection-assignments',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyProductSelectionAssignmentsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder);

    this.args = args;
  }
  /**
   *	Retrieves all the ShippingMethods that can ship to the shipping address of the given Cart in a given Store.
   *	Each ShippingMethod contains exactly one ShippingRate with the flag `isMatching` set to `true`.
   *	This ShippingRate is used when the ShippingMethod is [added to the Cart](ctp:api:type:CartSetShippingMethodAction).
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shipping-methods/matching-cart',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder);

    this.args = args;
  }
  /**
   *	Get ShippingMethods for a cart in a store
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder, [{
    key: "matchingCart",
    value: function matchingCart() {
      return new ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,
   *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,
     *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,
     *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
     *
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,
   *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,
     *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	If a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,
     *	the [ResourceNotFound](/errors#404-not-found-1) error is returned.
     *
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	When using this endpoint, the `store` field of a ShoppingList is always set to the Store specified in the path parameter.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInStoreKeyByStoreKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	A shopping cart holds product variants and can be ordered.
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyRequestBuilder, [{
    key: "carts",
    value: function carts() {
      return new ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	An order can be created from a cart, usually after a checkout process has been completed.
     */

  }, {
    key: "orders",
    value: function orders() {
      return new ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "me",
    value: function me() {
      return new ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	A Customer is a person purchasing products. Carts, Orders,
     *	Comments and Reviews can be associated to a Customer.
     *
     */

  }, {
    key: "customers",
    value: function customers() {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Retrieves the authenticated customer.
     */

  }, {
    key: "login",
    value: function login() {
      return new ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "shippingMethods",
    value: function shippingMethods() {
      return new ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	shopping-lists e.g. for wishlist support
     *
     */

  }, {
    key: "shoppingLists",
    value: function shoppingLists() {
      return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "productProjections",
    value: function productProjections() {
      return new ByProjectKeyInStoreKeyByStoreKeyProductProjectionsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "productSelectionAssignments",
    value: function productSelectionAssignments() {
      return new ByProjectKeyInStoreKeyByStoreKeyProductSelectionAssignmentsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInventoryByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInventoryByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInventoryByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInventoryByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/inventory/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/inventory/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Produces the [InventoryEntryDeleted](ctp:api:type:InventoryEntryDeletedMessage) Message.
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/inventory/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInventoryByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInventoryKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInventoryKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInventoryKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInventoryKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/inventory/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/inventory/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Produces the [InventoryEntryDeleted](ctp:api:type:InventoryEntryDeletedMessage) Message.
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/inventory/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInventoryKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyInventoryRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInventoryRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInventoryRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInventoryRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInventoryByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyInventoryKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/inventory',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Produces the [InventoryEntryCreated](ctp:api:type:InventoryEntryCreatedMessage) Message.
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/inventory',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInventoryRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyLoginRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyLoginRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyLoginRequestBuilder);

    this.args = args;
  }
  /**
   *	Authenticates a global Customer not associated with a Store.
   *	For more information, see [Global versus Store-specific Customers](/../api/customers-overview#global-versus-store-specific-customers).
   *	If the Customer is registered in a Store, use the [Authenticate (sign in) Customer in Store](/../api/projects/customers#authenticate-sign-in-customer-in-store) method.
   *
   *	If an account with the given credentials is not found, an [InvalidCredentials](ctp:api:type:InvalidCredentialsError) error is returned.
   *
   */


  _createClass(ByProjectKeyLoginRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/login',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyLoginRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeActiveCartRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeActiveCartRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeActiveCartRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeActiveCartRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/active-cart',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeActiveCartRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeBusinessUnitsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeBusinessUnitsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeBusinessUnitsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeBusinessUnitsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/business-units/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/business-units/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me/business-units/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeBusinessUnitsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeBusinessUnitsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeBusinessUnitsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeBusinessUnitsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeBusinessUnitsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/business-units/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/business-units/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me/business-units/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeBusinessUnitsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeBusinessUnitsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeBusinessUnitsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeBusinessUnitsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeBusinessUnitsRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyMeBusinessUnitsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyMeBusinessUnitsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/business-units',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/business-units',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeBusinessUnitsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeCartsReplicateRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeCartsReplicateRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeCartsReplicateRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeCartsReplicateRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/carts/replicate',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeCartsReplicateRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeCartsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeCartsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeCartsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeCartsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeCartsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeCartsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeCartsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeCartsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeCartsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeCartsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeCartsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeCartsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeCartsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeCartsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyMeCartsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyMeCartsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "replicate",
    value: function replicate() {
      return new ByProjectKeyMeCartsReplicateRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/carts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/carts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeCartsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeEmailConfirmRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeEmailConfirmRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeEmailConfirmRequestBuilder);

    this.args = args;
  }
  /**
   *	This is the last step in the [email verification process of a Customer](/../api/projects/customers#email-verification-of-customer).
   *
   */


  _createClass(ByProjectKeyMeEmailConfirmRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/email/confirm',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeEmailConfirmRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeLoginRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeLoginRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeLoginRequestBuilder);

    this.args = args;
  }
  /**
   *	Retrieves the authenticated customer (that matches the given email/password pair).
   *
   *	If used with [an access token for an anonymous session](/../api/authorization#tokens-for-anonymous-sessions), all Orders and Carts that belong to the `anonymousId` are assigned to the newly logged-in Customer.
   *
   *	- If the Customer does not have a Cart yet, the most recently modified anonymous cart becomes the Customer's Cart.
   *	- If the Customer already has a Cart, the most recently modified anonymous cart is handled in accordance with [AnonymousCartSignInMode](ctp:api:type:AnonymousCartSignInMode).
   *
   *	A Cart returned as part of the [CustomerSignInResult](ctp:api:type:CustomerSignInResult) is [recalculated](ctp:api:type:Recalculate) with up-to-date prices, taxes, discounts, and invalid line items removed.
   *
   *	If an account with the given credentials is not found, an [InvalidCredentials](ctp:api:type:InvalidCredentialsError) error is returned.
   *
   */


  _createClass(ByProjectKeyMeLoginRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/login',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeLoginRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeOrdersByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeOrdersByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeOrdersByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeOrdersByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/orders/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeOrdersByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeOrdersRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeOrdersRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeOrdersRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeOrdersRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyMeOrdersByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/orders',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/orders',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeOrdersRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMePasswordResetRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMePasswordResetRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMePasswordResetRequestBuilder);

    this.args = args;
  }
  /**
   *	This is the last step in the [password reset process of a Customer](/../api/projects/customers#password-reset-of-customer).
   *
   *	Resetting a password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=true`.
   *
   */


  _createClass(ByProjectKeyMePasswordResetRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/password/reset',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMePasswordResetRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMePasswordRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMePasswordRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMePasswordRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMePasswordRequestBuilder, [{
    key: "reset",
    value: function reset() {
      return new ByProjectKeyMePasswordResetRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Changing the password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=false`.
     *
     *	If the current password does not match, an [InvalidCurrentPassword](ctp:api:type:InvalidCurrentPasswordError) error is returned.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/password',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMePasswordRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMePaymentsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMePaymentsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMePaymentsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMePaymentsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/payments/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	This endpoint can only update a Payment when it has no [Transactions](ctp:api:type:Transaction).
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/payments/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	This endpoint can only delete a Payment when it has no [Transactions](ctp:api:type:Transaction).
     *
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me/payments/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMePaymentsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMePaymentsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMePaymentsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMePaymentsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMePaymentsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/payments/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	This endpoint can only update a Payment when it has no [Transactions](ctp:api:type:Transaction).
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/payments/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	This endpoint can only delete a Payment when it has no [Transactions](ctp:api:type:Transaction).
     *
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me/payments/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMePaymentsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMePaymentsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMePaymentsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMePaymentsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMePaymentsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyMePaymentsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyMePaymentsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/payments',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Creating a Payment produces the [PaymentCreated](ctp:api:type:PaymentCreatedMessage) Message.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/payments',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMePaymentsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeQuoteRequestsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeQuoteRequestsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeQuoteRequestsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeQuoteRequestsByIDRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/quote-requests/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me/quote-requests/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/quote-requests/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeQuoteRequestsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeQuoteRequestsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeQuoteRequestsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeQuoteRequestsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeQuoteRequestsKeyByKeyRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/quote-requests/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me/quote-requests/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/quote-requests/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeQuoteRequestsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeQuoteRequestsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeQuoteRequestsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeQuoteRequestsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeQuoteRequestsRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyMeQuoteRequestsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyMeQuoteRequestsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/quote-requests',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/quote-requests',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeQuoteRequestsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeQuotesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeQuotesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeQuotesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeQuotesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/quotes/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/quotes/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeQuotesByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeQuotesKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeQuotesKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeQuotesKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeQuotesKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/quotes/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/quotes/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeQuotesKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeQuotesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeQuotesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeQuotesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeQuotesRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyMeQuotesByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyMeQuotesKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/quotes',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeQuotesRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeShoppingListsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeShoppingListsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeShoppingListsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeShoppingListsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeShoppingListsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeShoppingListsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeShoppingListsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeShoppingListsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeShoppingListsRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyMeShoppingListsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/shopping-lists',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/shopping-lists',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeShoppingListsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeSignupRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeSignupRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeSignupRequestBuilder);

    this.args = args;
  }
  /**
   *	If used with an [access token for an anonymous session](/../api/authorization#tokens-for-anonymous-sessions), all Orders and Carts that belong to the `anonymousId` are assigned to the newly created Customer.
   *
   *	Creating a Customer produces the [CustomerCreated](ctp:api:type:CustomerCreatedMessage) Message.
   *
   */


  _createClass(ByProjectKeyMeSignupRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/signup',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeSignupRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMeRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeRequestBuilder, [{
    key: "emailConfirm",
    value: function emailConfirm() {
      return new ByProjectKeyMeEmailConfirmRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "password",
    value: function password() {
      return new ByProjectKeyMePasswordRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "signup",
    value: function signup() {
      return new ByProjectKeyMeSignupRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "login",
    value: function login() {
      return new ByProjectKeyMeLoginRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "activeCart",
    value: function activeCart() {
      return new ByProjectKeyMeActiveCartRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	MyBusinessUnit creates and provides access to Business Units scoped to a specific user.
     */

  }, {
    key: "businessUnits",
    value: function businessUnits() {
      return new ByProjectKeyMeBusinessUnitsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	A shopping cart holds product variants and can be ordered.
     */

  }, {
    key: "carts",
    value: function carts() {
      return new ByProjectKeyMeCartsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	An order can be created from a cart, usually after a checkout process has been completed.
     */

  }, {
    key: "orders",
    value: function orders() {
      return new ByProjectKeyMeOrdersRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	The My Payments endpoint creates and provides access to payments scoped to a specific user.
     */

  }, {
    key: "payments",
    value: function payments() {
      return new ByProjectKeyMePaymentsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	The My Quote Requests endpoint creates and provides access to Quote Requests scoped to a specific user.
     */

  }, {
    key: "quoteRequests",
    value: function quoteRequests() {
      return new ByProjectKeyMeQuoteRequestsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	The My Quote endpoint provides access to Quotes scoped to a specific user.
     */

  }, {
    key: "quotes",
    value: function quotes() {
      return new ByProjectKeyMeQuotesRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	The My Shopping Lists endpoint creates and provides access to Shopping Lists scoped to a specific user.
     */

  }, {
    key: "shoppingLists",
    value: function shoppingLists() {
      return new ByProjectKeyMeShoppingListsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMessagesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMessagesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMessagesByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Deprecated scope: `view_orders:{projectKey}`
   */


  _createClass(ByProjectKeyMessagesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/messages/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMessagesByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyMessagesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMessagesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMessagesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMessagesRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyMessagesByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Deprecated scope: `view_orders:{projectKey}`
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/messages',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMessagesRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyOrdersEditsByIDApplyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersEditsByIDApplyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersEditsByIDApplyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyOrdersEditsByIDApplyRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders/edits/{ID}/apply',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersEditsByIDApplyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyOrdersEditsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersEditsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersEditsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyOrdersEditsByIDRequestBuilder, [{
    key: "apply",
    value: function apply() {
      return new ByProjectKeyOrdersEditsByIDApplyRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/orders/edits/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders/edits/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/orders/edits/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersEditsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyOrdersEditsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersEditsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersEditsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyOrdersEditsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/orders/edits/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders/edits/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/orders/edits/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersEditsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyOrdersEditsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersEditsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersEditsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyOrdersEditsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyOrdersEditsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyOrdersEditsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/orders/edits',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders/edits',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersEditsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyOrdersImportRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersImportRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersImportRequestBuilder);

    this.args = args;
  }
  /**
   *	Create an Order by Import
   */


  _createClass(ByProjectKeyOrdersImportRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders/import',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersImportRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyOrdersQuotesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersQuotesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersQuotesRequestBuilder);

    this.args = args;
  }
  /**
   *	Create an Order from a Quote
   */


  _createClass(ByProjectKeyOrdersQuotesRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders/quotes',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersQuotesRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyOrdersSearchRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersSearchRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersSearchRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyOrdersSearchRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders/search',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Checks whether a search index for the Project's Orders exists.
     */

  }, {
    key: "head",
    value: function head(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'HEAD',
        uriTemplate: '/{projectKey}/orders/search',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersSearchRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyOrdersByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyOrdersByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/orders/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/orders/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder);

    this.args = args;
  }
  /**
   *	In case the orderNumber does not match the regular expression [a-zA-Z0-9_\-]+,
   *	it should be provided in URL-encoded format.
   *
   */


  _createClass(ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyOrdersRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyOrdersRequestBuilder, [{
    key: "importOrder",
    value: function importOrder() {
      return new ByProjectKeyOrdersImportRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "orderQuote",
    value: function orderQuote() {
      return new ByProjectKeyOrdersQuotesRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withOrderNumber",
    value: function withOrderNumber(childPathArgs) {
      return new ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	OrderEdit are containers for financial changes after an Order has been placed.
     */

  }, {
    key: "edits",
    value: function edits() {
      return new ByProjectKeyOrdersEditsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyOrdersByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	This endpoint provides high performance search queries over Orders. The order search allows searching through all orders (currently supporting a limit of the 10.000.000 newest orders) in your project.
     *
     */

  }, {
    key: "search",
    value: function search() {
      return new ByProjectKeyOrdersSearchRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/orders',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Creates an order from a Cart.
     *	The cart must have a shipping address set before creating an order.
     *	When using the Platform TaxMode, the shipping address is used for tax calculation.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyPaymentsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyPaymentsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyPaymentsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyPaymentsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/payments/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/payments/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/payments/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyPaymentsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyPaymentsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyPaymentsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyPaymentsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyPaymentsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/payments/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/payments/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/payments/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyPaymentsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyPaymentsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyPaymentsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyPaymentsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyPaymentsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyPaymentsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyPaymentsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/payments',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Creating a Payment produces the [PaymentCreated](ctp:api:type:PaymentCreatedMessage) Message.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/payments',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyPaymentsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductDiscountsMatchingRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductDiscountsMatchingRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductDiscountsMatchingRequestBuilder);

    this.args = args;
  }
  /**
   *	This endpoint can be used to simulate which Product Discounts would be applied if a specified Product Variant had a specified Price.
   *	Given Product and Product Variant IDs and a Price, this endpoint will return the [ProductDiscount](ctp:api:type:ProductDiscount) that would have been applied to that Price.
   *
   *	If a Product Discount could not be found that could be applied to the Price of a Product Variant, a [NoMatchingProductDiscountFound](ctp:api:type:NoMatchingProductDiscountFoundError) error is returned.
   *
   */


  _createClass(ByProjectKeyProductDiscountsMatchingRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-discounts/matching',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductDiscountsMatchingRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductDiscountsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductDiscountsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductDiscountsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductDiscountsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-discounts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-discounts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/product-discounts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductDiscountsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductDiscountsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductDiscountsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductDiscountsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductDiscountsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-discounts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-discounts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/product-discounts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductDiscountsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductDiscountsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductDiscountsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductDiscountsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductDiscountsRequestBuilder, [{
    key: "matching",
    value: function matching() {
      return new ByProjectKeyProductDiscountsMatchingRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyProductDiscountsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyProductDiscountsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-discounts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-discounts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductDiscountsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductProjectionsSearchRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductProjectionsSearchRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductProjectionsSearchRequestBuilder);

    this.args = args;
  }
  /**
   *	Search Product Projection
   */


  _createClass(ByProjectKeyProductProjectionsSearchRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-projections/search',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/x-www-form-urlencoded'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Search Product Projection
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-projections/search',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductProjectionsSearchRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductProjectionsSuggestRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductProjectionsSuggestRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductProjectionsSuggestRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductProjectionsSuggestRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-projections/suggest',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductProjectionsSuggestRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductProjectionsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductProjectionsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductProjectionsByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Gets the current or staged representation of a [Product](ctp:api:type:Product) by its ID. When used with an API Client that has the `view_published_products:{projectKey}` scope, this endpoint only returns published (current) Product Projections.
   *
   */


  _createClass(ByProjectKeyProductProjectionsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-projections/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductProjectionsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductProjectionsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductProjectionsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductProjectionsKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	Gets the current or staged representation of a [Product](ctp:api:type:Product) found by Key.
   *	When used with an API Client that has the `view_published_products:{projectKey}` scope,
   *	this endpoint only returns published (current) Product Projections.
   *
   */


  _createClass(ByProjectKeyProductProjectionsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-projections/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductProjectionsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductProjectionsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductProjectionsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductProjectionsRequestBuilder);

    this.args = args;
  }
  /**
   *	This endpoint provides high performance search queries over ProductProjections. The query result contains the
   *	ProductProjections for which at least one ProductVariant matches the search query. This means that variants can
   *	be included in the result also for which the search query does not match. To determine which ProductVariants match
   *	the search query, the returned ProductProjections include the additional field isMatchingVariant.
   *
   */


  _createClass(ByProjectKeyProductProjectionsRequestBuilder, [{
    key: "search",
    value: function search() {
      return new ByProjectKeyProductProjectionsSearchRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	The source of data for suggestions is the searchKeyword field in a product
     */

  }, {
    key: "suggest",
    value: function suggest() {
      return new ByProjectKeyProductProjectionsSuggestRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyProductProjectionsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyProductProjectionsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Use the Product Projections query endpoint to get the current or staged representations of Products.
     *	When used with an API Client that has the `view_published_products:{projectKey}` scope,
     *	this endpoint only returns published (current) Product Projections.
     *
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-projections',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductProjectionsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductSelectionsByIDProductsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductSelectionsByIDProductsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductSelectionsByIDProductsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductSelectionsByIDProductsRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-selections/{ID}/products',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductSelectionsByIDProductsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductSelectionsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductSelectionsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductSelectionsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductSelectionsByIDRequestBuilder, [{
    key: "products",
    value: function products() {
      return new ByProjectKeyProductSelectionsByIDProductsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-selections/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-selections/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Deletion will only succeed if the Product Selection is not assigned to any [Store](/../api/projects/stores#store).
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/product-selections/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductSelectionsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductSelectionsKeyByKeyProductsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductSelectionsKeyByKeyProductsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductSelectionsKeyByKeyProductsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductSelectionsKeyByKeyProductsRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-selections/key={key}/products',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductSelectionsKeyByKeyProductsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductSelectionsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductSelectionsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductSelectionsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductSelectionsKeyByKeyRequestBuilder, [{
    key: "products",
    value: function products() {
      return new ByProjectKeyProductSelectionsKeyByKeyProductsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-selections/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-selections/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Deletion will only succeed if the Product Selection is not assigned to any [Store](/../api/projects/stores#store).
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/product-selections/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductSelectionsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductSelectionsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductSelectionsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductSelectionsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductSelectionsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyProductSelectionsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyProductSelectionsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-selections',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-selections',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductSelectionsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductTypesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductTypesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductTypesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductTypesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-types/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Checks if a Product Type with given `id` exists. Responds with a `200 OK` status if the `Product Type` exists or `404 Not Found` otherwise.
     */

  }, {
    key: "head",
    value: function head(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'HEAD',
        uriTemplate: '/{projectKey}/product-types/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-types/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/product-types/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductTypesByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductTypesKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductTypesKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductTypesKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductTypesKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-types/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Checks if a Product Type with given `key` exists. Responds with a `200 OK` status if the `Product Type` exists or `404 Not Found` otherwise.
     */

  }, {
    key: "head",
    value: function head(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'HEAD',
        uriTemplate: '/{projectKey}/product-types/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-types/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/product-types/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductTypesKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductTypesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductTypesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductTypesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductTypesRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyProductTypesKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyProductTypesByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-types',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Check if Product Types exist. Responds with a `200 OK` status if any Product Types match the Query Predicate, or `404 Not Found` otherwise.
     */

  }, {
    key: "head",
    value: function head(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'HEAD',
        uriTemplate: '/{projectKey}/product-types',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-types',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductTypesRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductsByIDImagesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductsByIDImagesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductsByIDImagesRequestBuilder);

    this.args = args;
  }
  /**
   *	Upload a JPEG, PNG and GIF file to a [ProductVariant](ctp:api:type:ProductVariant). The maximum file size of the image is 10MB. `variant` or `sku` is required to update a specific ProductVariant. The image is uploaded to the Master Variant if `variant` or `sku` are not included. Produces the [ProductImageAdded](/projects/messages#product-image-added) Message when the `Small` version of the image has been uploaded to the CDN.
   *
   */


  _createClass(ByProjectKeyProductsByIDImagesRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/products/{ID}/images',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductsByIDImagesRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductsByIDProductSelectionsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductsByIDProductSelectionsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductsByIDProductSelectionsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductsByIDProductSelectionsRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/products/{ID}/product-selections',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductsByIDProductSelectionsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductsByIDRequestBuilder, [{
    key: "images",
    value: function images() {
      return new ByProjectKeyProductsByIDImagesRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "productSelections",
    value: function productSelections() {
      return new ByProjectKeyProductsByIDProductSelectionsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/products/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Check if a Product exists with a specified `id`. Responds with a `200 OK` status if the Product exists or `404 Not Found` otherwise.
     */

  }, {
    key: "head",
    value: function head(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'HEAD',
        uriTemplate: '/{projectKey}/products/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
    /**
     *	If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
     *
     *	A failed response can return a [DuplicatePriceScope](ctp:api:type:DuplicatePriceScopeError), [DuplicateVariantValues](ctp:api:type:DuplicateVariantValuesError), [DuplicateAttributeValue](ctp:api:type:DuplicateAttributeValueError), or [DuplicateAttributeValues](ctp:api:type:DuplicateAttributeValuesError) error.
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/products/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
     *	Produces the [ProductDeleted](/projects/messages#product-deleted) Message.
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/products/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductsKeyByKeyProductSelectionsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductsKeyByKeyProductSelectionsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductsKeyByKeyProductSelectionsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductsKeyByKeyProductSelectionsRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/products/key={key}/product-selections',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductsKeyByKeyProductSelectionsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductsKeyByKeyRequestBuilder, [{
    key: "productSelections",
    value: function productSelections() {
      return new ByProjectKeyProductsKeyByKeyProductSelectionsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/products/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Check if a Product exists with a specified `key`. Responds with a `200 OK` status if the Product exists or `404 Not Found` otherwise.
     */

  }, {
    key: "head",
    value: function head(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'HEAD',
        uriTemplate: '/{projectKey}/products/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
    /**
     *	A failed response can return a [DuplicatePriceScope](ctp:api:type:DuplicatePriceScopeError), [DuplicateVariantValues](ctp:api:type:DuplicateVariantValuesError), [DuplicateAttributeValue](ctp:api:type:DuplicateAttributeValueError), or [DuplicateAttributeValues](ctp:api:type:DuplicateAttributeValuesError) error.
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/products/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
     *	Produces the [ProductDeleted](/projects/messages#product-deleted) Message.
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/products/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyProductsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyProductsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyProductsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	If [Price selection](ctp:api:type:ProductPriceSelection) query parameters are provided, the selected Prices are added to the response.
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/products',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Check if Products exist. Responds with a `200 OK` status if any Products match the Query Predicate, or `404 Not Found` otherwise.
     */

  }, {
    key: "head",
    value: function head(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'HEAD',
        uriTemplate: '/{projectKey}/products',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	To create a new Product, send a representation that is going to become the initial _staged_ representation of the new Product in the master catalog.
     *	If [Price Selection](ctp:api:type:ProductPriceSelection) query parameters are provided, selected Prices will be added to the response.
     *	Produces the [ProductCreated](/projects/messages#product-created) Message.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/products',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyQuoteRequestsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyQuoteRequestsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyQuoteRequestsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyQuoteRequestsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/quote-requests/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/quote-requests/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/quote-requests/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyQuoteRequestsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyQuoteRequestsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyQuoteRequestsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyQuoteRequestsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyQuoteRequestsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/quote-requests/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/quote-requests/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/quote-requests/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyQuoteRequestsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyQuoteRequestsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyQuoteRequestsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyQuoteRequestsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyQuoteRequestsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyQuoteRequestsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyQuoteRequestsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/quote-requests',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/quote-requests',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyQuoteRequestsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyQuotesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyQuotesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyQuotesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyQuotesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/quotes/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/quotes/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/quotes/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyQuotesByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyQuotesKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyQuotesKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyQuotesKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyQuotesKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/quotes/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/quotes/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/quotes/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyQuotesKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyQuotesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyQuotesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyQuotesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyQuotesRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyQuotesKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyQuotesByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/quotes',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/quotes',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyQuotesRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyReviewsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyReviewsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyReviewsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyReviewsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/reviews/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/reviews/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/reviews/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyReviewsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyReviewsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyReviewsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyReviewsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyReviewsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/reviews/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/reviews/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/reviews/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyReviewsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyReviewsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyReviewsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyReviewsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyReviewsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyReviewsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyReviewsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/reviews',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/reviews',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyReviewsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyShippingMethodsMatchingCartLocationRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShippingMethodsMatchingCartLocationRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShippingMethodsMatchingCartLocationRequestBuilder);

    this.args = args;
  }
  /**
   *	Retrieves all the ShippingMethods that can ship to the given [Location](/projects/zones#location)
   *	with a `predicate` that matches the given Cart.
   *	Each ShippingMethod contains exactly one ShippingRate with the flag `isMatching` set to `true`.
   *	This ShippingRate is used when the ShippingMethod is [added to the Cart](ctp:api:type:CartSetShippingMethodAction).
   *
   */


  _createClass(ByProjectKeyShippingMethodsMatchingCartLocationRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shipping-methods/matching-cart-location',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShippingMethodsMatchingCartLocationRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyShippingMethodsMatchingCartRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShippingMethodsMatchingCartRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShippingMethodsMatchingCartRequestBuilder);

    this.args = args;
  }
  /**
   *	Retrieves all the ShippingMethods that can ship to the shipping address of the given Cart.
   *	Each ShippingMethod contains exactly one ShippingRate with the flag `isMatching` set to `true`.
   *	This ShippingRate is used when the ShippingMethod is [added to the Cart](ctp:api:type:CartSetShippingMethodAction).
   *
   */


  _createClass(ByProjectKeyShippingMethodsMatchingCartRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shipping-methods/matching-cart',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShippingMethodsMatchingCartRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyShippingMethodsMatchingLocationRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShippingMethodsMatchingLocationRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShippingMethodsMatchingLocationRequestBuilder);

    this.args = args;
  }
  /**
   *	Retrieves all the ShippingMethods that can ship to the given [Location](/projects/zones#location).
   *	ShippingMethods that have a `predicate` defined are automatically disqualified.
   *	If the `currency` parameter is given, then the ShippingMethods must also have a rate defined in the specified currency.
   *	Each ShippingMethod contains at least one ShippingRate with the flag `isMatching` set to `true`.
   *	If the `currency` parameter is given, exactly one ShippingRate will contain it.
   *
   */


  _createClass(ByProjectKeyShippingMethodsMatchingLocationRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shipping-methods/matching-location',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShippingMethodsMatchingLocationRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder);

    this.args = args;
  }
  /**
   *	Retrieves all the ShippingMethods that can ship to the given [Location](/../api/projects/zones#location) for an [OrderEdit](/../api/projects/order-edits).
   *
   *	If the OrderEdit preview cannot be generated, an [EditPreviewFailed](ctp:api:type:EditPreviewFailedError) error is returned.
   *
   */


  _createClass(ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shipping-methods/matching-orderedit',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyShippingMethodsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShippingMethodsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShippingMethodsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyShippingMethodsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shipping-methods/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/shipping-methods/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/shipping-methods/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShippingMethodsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyShippingMethodsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShippingMethodsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShippingMethodsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyShippingMethodsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shipping-methods/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/shipping-methods/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/shipping-methods/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShippingMethodsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyShippingMethodsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShippingMethodsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShippingMethodsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyShippingMethodsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyShippingMethodsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Get ShippingMethods for a cart
     */

  }, {
    key: "matchingCart",
    value: function matchingCart() {
      return new ByProjectKeyShippingMethodsMatchingCartRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Get ShippingMethods for a cart and location
     */

  }, {
    key: "matchingCartLocation",
    value: function matchingCartLocation() {
      return new ByProjectKeyShippingMethodsMatchingCartLocationRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Get ShippingMethods for an order edit
     */

  }, {
    key: "matchingOrderedit",
    value: function matchingOrderedit() {
      return new ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Get ShippingMethods for a location
     */

  }, {
    key: "matchingLocation",
    value: function matchingLocation() {
      return new ByProjectKeyShippingMethodsMatchingLocationRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyShippingMethodsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shipping-methods',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/shipping-methods',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShippingMethodsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyShoppingListsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShoppingListsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShoppingListsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyShoppingListsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShoppingListsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyShoppingListsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShoppingListsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShoppingListsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyShoppingListsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShoppingListsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyShoppingListsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShoppingListsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShoppingListsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyShoppingListsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyShoppingListsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyShoppingListsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shopping-lists',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/shopping-lists',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShoppingListsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyStagedQuotesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStagedQuotesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStagedQuotesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStagedQuotesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/staged-quotes/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/staged-quotes/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/staged-quotes/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStagedQuotesByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyStagedQuotesKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStagedQuotesKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStagedQuotesKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStagedQuotesKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/staged-quotes/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/staged-quotes/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/staged-quotes/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStagedQuotesKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyStagedQuotesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStagedQuotesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStagedQuotesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStagedQuotesRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyStagedQuotesKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyStagedQuotesByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/staged-quotes',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/staged-quotes',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStagedQuotesRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyStandalonePricesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStandalonePricesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStandalonePricesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStandalonePricesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/standalone-prices/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/standalone-prices/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Produces the [StandalonePriceDeleted](ctp:api:type:StandalonePriceDeletedMessage) Message.
     *
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/standalone-prices/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStandalonePricesByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyStandalonePricesKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStandalonePricesKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStandalonePricesKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStandalonePricesKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/standalone-prices/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/standalone-prices/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Produces the [StandalonePriceDeleted](ctp:api:type:StandalonePriceDeletedMessage) Message.
     *
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/standalone-prices/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStandalonePricesKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyStandalonePricesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStandalonePricesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStandalonePricesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStandalonePricesRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyStandalonePricesKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyStandalonePricesByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/standalone-prices',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Produces the [StandalonePriceCreated](ctp:api:type:StandalonePriceCreatedMessage) Message.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/standalone-prices',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStandalonePricesRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyStatesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStatesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStatesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStatesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/states/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/states/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/states/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStatesByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyStatesKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStatesKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStatesKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStatesKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/states/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/states/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/states/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStatesKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyStatesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStatesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStatesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStatesRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyStatesKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyStatesByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/states',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/states',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStatesRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyStoresByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStoresByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStoresByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStoresByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/stores/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/stores/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/stores/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStoresByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyStoresKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStoresKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStoresKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStoresKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/stores/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/stores/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/stores/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStoresKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyStoresRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStoresRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStoresRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStoresRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyStoresKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyStoresByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/stores',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/stores',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStoresRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeySubscriptionsByIDHealthRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeySubscriptionsByIDHealthRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeySubscriptionsByIDHealthRequestBuilder);

    this.args = args;
  }
  /**
   *	This endpoint can be polled by a monitoring or alerting system that checks the health of your Subscriptions. To ease integration with such systems this endpoint does not require [Authorization](/../api/authorization).
   *
   */


  _createClass(ByProjectKeySubscriptionsByIDHealthRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/subscriptions/{ID}/health',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeySubscriptionsByIDHealthRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeySubscriptionsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeySubscriptionsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeySubscriptionsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeySubscriptionsByIDRequestBuilder, [{
    key: "withIdHealth",
    value: function withIdHealth() {
      return new ByProjectKeySubscriptionsByIDHealthRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/subscriptions/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/subscriptions/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/subscriptions/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeySubscriptionsByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeySubscriptionsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeySubscriptionsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeySubscriptionsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeySubscriptionsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/subscriptions/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/subscriptions/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/subscriptions/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeySubscriptionsKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeySubscriptionsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeySubscriptionsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeySubscriptionsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeySubscriptionsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeySubscriptionsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeySubscriptionsByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/subscriptions',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	A test message is sent to ensure the correct configuration of the Destination. If the message cannot be delivered, the Subscription will not be created. The payload of the test message is a notification of type [ResourceCreated](/../api/projects/subscriptions#resourcecreateddeliverypayload) for the `resourceTypeId` `subscription`.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/subscriptions',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeySubscriptionsRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyTaxCategoriesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyTaxCategoriesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyTaxCategoriesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyTaxCategoriesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/tax-categories/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/tax-categories/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/tax-categories/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyTaxCategoriesByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/tax-categories/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/tax-categories/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/tax-categories/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyTaxCategoriesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyTaxCategoriesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyTaxCategoriesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyTaxCategoriesRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyTaxCategoriesByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/tax-categories',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/tax-categories',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyTaxCategoriesRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyTypesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyTypesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyTypesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyTypesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/types/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/types/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/types/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyTypesByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyTypesKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyTypesKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyTypesKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyTypesKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/types/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/types/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/types/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyTypesKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyTypesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyTypesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyTypesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyTypesRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyTypesKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyTypesByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/types',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/types',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyTypesRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyZonesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyZonesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyZonesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyZonesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/zones/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/zones/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/zones/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyZonesByIDRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyZonesKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyZonesKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyZonesKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyZonesKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/zones/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/zones/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/zones/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyZonesKeyByKeyRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyZonesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyZonesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyZonesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyZonesRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyZonesKeyByKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyZonesByIDRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/zones',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/zones',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyZonesRequestBuilder;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */

/**
 **/


var ByProjectKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	A Business Unit can represent a Company or a Division.
   */


  _createClass(ByProjectKeyRequestBuilder, [{
    key: "businessUnits",
    value: function businessUnits() {
      return new ByProjectKeyBusinessUnitsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Categories are used to organize products in a hierarchical structure.
     */

  }, {
    key: "categories",
    value: function categories() {
      return new ByProjectKeyCategoriesRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	A shopping cart holds product variants and can be ordered.
     */

  }, {
    key: "carts",
    value: function carts() {
      return new ByProjectKeyCartsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Cart discounts are used to change the prices of different elements within a cart.
     */

  }, {
    key: "cartDiscounts",
    value: function cartDiscounts() {
      return new ByProjectKeyCartDiscountsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Channels represent a source or destination of different entities. They can be used to model warehouses or stores.
     *
     */

  }, {
    key: "channels",
    value: function channels() {
      return new ByProjectKeyChannelsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	A Customer is a person purchasing products. Carts, Orders, Quotes, Reviews and Payments can be associated to a Customer.
     *
     */

  }, {
    key: "customers",
    value: function customers() {
      return new ByProjectKeyCustomersRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	customer-groups are used to evaluate products and channels.
     */

  }, {
    key: "customerGroups",
    value: function customerGroups() {
      return new ByProjectKeyCustomerGroupsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Store custom JSON values.
     */

  }, {
    key: "customObjects",
    value: function customObjects() {
      return new ByProjectKeyCustomObjectsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Discount Codes can be added to a discount-code to enable certain discount-code discounts.
     */

  }, {
    key: "discountCodes",
    value: function discountCodes() {
      return new ByProjectKeyDiscountCodesRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	commercetools Composable Commerce provides a GraphQL API
     */

  }, {
    key: "graphql",
    value: function graphql() {
      return new ByProjectKeyGraphqlRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Inventory allows you to track stock quantities.
     */

  }, {
    key: "inventory",
    value: function inventory() {
      return new ByProjectKeyInventoryRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Retrieves the authenticated customer.
     */

  }, {
    key: "login",
    value: function login() {
      return new ByProjectKeyLoginRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	A message represents a change or an action performed on a resource (like an Order or a Product).
     */

  }, {
    key: "messages",
    value: function messages() {
      return new ByProjectKeyMessagesRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	An order can be created from a order, usually after a checkout process has been completed.
     */

  }, {
    key: "orders",
    value: function orders() {
      return new ByProjectKeyOrdersRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Payments hold information about the current state of receiving and/or refunding money
     */

  }, {
    key: "payments",
    value: function payments() {
      return new ByProjectKeyPaymentsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Products themselves are not sellable. Instead, they act as a parent structure for sellable Product Variants.
     *
     */

  }, {
    key: "products",
    value: function products() {
      return new ByProjectKeyProductsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Product discounts are used to change certain product prices.
     */

  }, {
    key: "productDiscounts",
    value: function productDiscounts() {
      return new ByProjectKeyProductDiscountsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	A projected representation of a product shows the product with its current or staged data. The current or staged
     *	representation of a product in a catalog is called a product projection.
     *
     */

  }, {
    key: "productProjections",
    value: function productProjections() {
      return new ByProjectKeyProductProjectionsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Manage individual Store assortments through Product Selections.
     *
     *	After you have created Product Selections and populated them by Products,
     *	you can manage Store assortments by assigning Product Selections to Stores.
     *	Product Selections may be used by a single Store or shared across several Stores.
     *
     *	As a good practice, we recommend first creating Products in the project, and then creating Product Selection.
     *
     */

  }, {
    key: "productSelections",
    value: function productSelections() {
      return new ByProjectKeyProductSelectionsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Product Types are used to describe common characteristics, most importantly common custom attributes,
     *	of many concrete products.
     *
     */

  }, {
    key: "productTypes",
    value: function productTypes() {
      return new ByProjectKeyProductTypesRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	A quote holds the negotiated offer.
     */

  }, {
    key: "quotes",
    value: function quotes() {
      return new ByProjectKeyQuotesRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	A request for a Quote holds product variants and can be ordered.
     */

  }, {
    key: "quoteRequests",
    value: function quoteRequests() {
      return new ByProjectKeyQuoteRequestsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	A staged quote holds the negotiation between the [Buyer](/../api/quotes-overview#buyer) and the [Seller](/../api/quotes-overview#seller).
     */

  }, {
    key: "stagedQuotes",
    value: function stagedQuotes() {
      return new ByProjectKeyStagedQuotesRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Reviews are used to evaluate products and channels.
     */

  }, {
    key: "reviews",
    value: function reviews() {
      return new ByProjectKeyReviewsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	ShippingMethods define where orders can be shipped and what the costs are.
     */

  }, {
    key: "shippingMethods",
    value: function shippingMethods() {
      return new ByProjectKeyShippingMethodsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	shopping-lists e.g. for wishlist support
     */

  }, {
    key: "shoppingLists",
    value: function shoppingLists() {
      return new ByProjectKeyShoppingListsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	commercetools Composable Commerce allows you to model states of certain objects, such as orders, line items, products,
     *	reviews, and payments in order to define finite state machines reflecting the business logic you'd like to
     *	implement.
     *
     */

  }, {
    key: "states",
    value: function states() {
      return new ByProjectKeyStatesRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Subscriptions allow you to be notified of new messages or changes via a Message Queue of your choice
     */

  }, {
    key: "subscriptions",
    value: function subscriptions() {
      return new ByProjectKeySubscriptionsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Tax Categories define how products are to be taxed in different countries.
     */

  }, {
    key: "taxCategories",
    value: function taxCategories() {
      return new ByProjectKeyTaxCategoriesRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Types define custom fields that are used to enhance resources as you need.
     */

  }, {
    key: "types",
    value: function types() {
      return new ByProjectKeyTypesRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Zones allow defining ShippingRates for specific Locations.
     */

  }, {
    key: "zones",
    value: function zones() {
      return new ByProjectKeyZonesRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "me",
    value: function me() {
      return new ByProjectKeyMeRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Extend the behavior of an API with your business logic
     */

  }, {
    key: "extensions",
    value: function extensions() {
      return new ByProjectKeyExtensionsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Manage your API Clients via an API. Useful for Infrastructure-as-Code tooling, and regularly rotating API secrets.
     *
     */

  }, {
    key: "apiClients",
    value: function apiClients() {
      return new ByProjectKeyApiClientsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Stores let you model the context your customers shop in.
     */

  }, {
    key: "stores",
    value: function stores() {
      return new ByProjectKeyStoresRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "inStoreKeyWithStoreKeyValue",
    value: function inStoreKeyWithStoreKeyValue(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	A standalone price assigns a price to a product variant for a given scope. The API will use the standalone prices associated with a Product if its field [`priceMode`](/projects/products#pricemode) is set to `Standalone` [ProductPriceMode](ctp:api:type:ProductPriceModeEnum).
     */

  }, {
    key: "standalonePrices",
    value: function standalonePrices() {
      return new ByProjectKeyStandalonePricesRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "inBusinessUnitKeyWithBusinessUnitKeyValue",
    value: function inBusinessUnitKeyWithBusinessUnitKeyValue(childPathArgs) {
      return new ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyRequestBuilder({
        pathArgs: _objectSpread(_objectSpread({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Attribute groups ... TODO
     */

  }, {
    key: "attributeGroups",
    value: function attributeGroups() {
      return new ByProjectKeyAttributeGroupsRequestBuilder({
        pathArgs: _objectSpread({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyRequestBuilder;
}();

var ApiRoot = /*#__PURE__*/function () {
  function ApiRoot(args) {
    _classCallCheck(this, ApiRoot);

    _defineProperty(this, "executeRequest", void 0);

    _defineProperty(this, "baseUri", void 0);

    this.executeRequest = args.executeRequest;
    this.baseUri = args.baseUri || 'https://api.europe-west1.gcp.commercetools.com';
  }
  /**
   *	The Project endpoint is used to retrieve certain information from a project.
   */


  _createClass(ApiRoot, [{
    key: "withProjectKey",
    value: function withProjectKey(childPathArgs) {
      return new ByProjectKeyRequestBuilder({
        pathArgs: _objectSpread({}, childPathArgs),
        executeRequest: this.executeRequest,
        baseUri: this.baseUri
      });
    }
  }]);

  return ApiRoot;
}();
/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate <raml_file_path> -o <output_path> -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */


var createExecutorFromMiddlewares = function createExecutorFromMiddlewares(executor, midds) {
  if (!midds || midds.length == 0) {
    return executor;
  }

  var reduced = midds.reduce(reduceMiddleware);
  return middlewareToExecutor(reduced, executor);
};

function reduceMiddleware(middleware1, middleware2) {
  return function (request, executor) {
    return middleware1(request, middlewareToExecutor(middleware2, executor));
  };
}

function middlewareToExecutor(middleware, executor) {
  return function (request) {
    return middleware(request, executor);
  };
}

function createApiBuilderFromCtpClient(ctpClient, baseUri) {
  return new ApiRoot({
    executeRequest: ctpClient.execute,
    baseUri: baseUri
  });
}


// EXTERNAL MODULE: ./node_modules/node-fetch/lib/index.mjs
var lib = __webpack_require__(27);

// EXTERNAL MODULE: ./node_modules/buffer/index.js
var buffer = __webpack_require__(106);

// CONCATENATED MODULE: ./node_modules/@commercetools/sdk-client-v2/dist/commercetools-sdk-client-v2.esm.js
var _excluded = ["statusCode", "message"],
    _excluded2 = ["createTelemetryMiddleware"];

function commercetools_sdk_client_v2_esm_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function commercetools_sdk_client_v2_esm_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function commercetools_sdk_client_v2_esm_createClass(Constructor, protoProps, staticProps) { if (protoProps) commercetools_sdk_client_v2_esm_defineProperties(Constructor.prototype, protoProps); if (staticProps) commercetools_sdk_client_v2_esm_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function commercetools_sdk_client_v2_esm_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function commercetools_sdk_client_v2_esm_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? commercetools_sdk_client_v2_esm_ownKeys(Object(source), !0).forEach(function (key) { commercetools_sdk_client_v2_esm_defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : commercetools_sdk_client_v2_esm_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function commercetools_sdk_client_v2_esm_defineProperty2(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function commercetools_sdk_client_v2_esm_typeof(obj) { "@babel/helpers - typeof"; return commercetools_sdk_client_v2_esm_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, commercetools_sdk_client_v2_esm_typeof(obj); }




function commercetools_sdk_client_v2_esm_toPrimitive(input, hint) {
  if (commercetools_sdk_client_v2_esm_typeof(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];

  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (commercetools_sdk_client_v2_esm_typeof(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }

  return (hint === "string" ? String : Number)(input);
}

function commercetools_sdk_client_v2_esm_toPropertyKey(arg) {
  var key = commercetools_sdk_client_v2_esm_toPrimitive(arg, "string");

  return commercetools_sdk_client_v2_esm_typeof(key) === "symbol" ? key : String(key);
}

function commercetools_sdk_client_v2_esm_defineProperty(obj, key, value) {
  key = commercetools_sdk_client_v2_esm_toPropertyKey(key);

  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function urlParser(url) {
  var object = {};
  var data = new URLSearchParams(url);

  var _iterator = _createForOfIteratorHelper(data.keys()),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var x = _step.value;

      if (data.getAll(x).length > 1) {
        object[x] = data.getAll(x);
      } else {
        object[x] = data.get(x);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return object;
}

function parseURLString(url) {
  var parser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : urlParser;
  return parser(url);
}

var METHODS = ['ACL', 'BIND', 'CHECKOUT', 'CONNECT', 'COPY', 'DELETE', 'GET', 'HEAD', 'LINK', 'LOCK', 'M-SEARCH', 'MERGE', 'MKACTIVITY', 'MKCALENDAR', 'MKCOL', 'MOVE', 'NOTIFY', 'OPTIONS', 'PATCH', 'POST', 'PROPFIND', 'PROPPATCH', 'PURGE', 'PUT', 'REBIND', 'REPORT', 'SEARCH', 'SOURCE', 'SUBSCRIBE', 'TRACE', 'UNBIND', 'UNLINK', 'UNLOCK', 'UNSUBSCRIBE'];
/**
 * @throws {Error}
 */

function validate(funcName, request) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    allowedMethods: METHODS
  };
  if (!request) throw new Error("The \"".concat(funcName, "\" function requires a \"Request\" object as an argument. See https://commercetools.github.io/nodejs/sdk/Glossary.html#clientrequest"));
  if (typeof request.uri !== 'string') throw new Error("The \"".concat(funcName, "\" Request object requires a valid uri. See https://commercetools.github.io/nodejs/sdk/Glossary.html#clientrequest"));
  if (!options.allowedMethods.includes(request.method)) throw new Error("The \"".concat(funcName, "\" Request object requires a valid method. See https://commercetools.github.io/nodejs/sdk/Glossary.html#clientrequest"));
}

var _options;

function compose() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  funcs = funcs.filter(function (func) {
    return typeof func === 'function';
  });
  if (funcs.length === 1) return funcs[0];
  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(void 0, arguments));
    };
  });
}

function process$1(request, fn, processOpt) {
  validate('process', request, {
    allowedMethods: ['GET']
  });
  if (typeof fn !== 'function') throw new Error('The "process" function accepts a "Function" as a second argument that returns a Promise. See https://commercetools.github.io/nodejs/sdk/api/sdkClient.html#processrequest-processfn-options'); // Set default process options

  var opt = commercetools_sdk_client_v2_esm_objectSpread({
    total: Number.POSITIVE_INFINITY,
    accumulate: true
  }, processOpt);

  return new Promise(function (resolve, reject) {
    var _path,
        _queryString = '';

    if (request && request.uri) {
      var _request$uri$split = request.uri.split('?'),
          _request$uri$split2 = _slicedToArray(_request$uri$split, 2),
          path = _request$uri$split2[0],
          queryString = _request$uri$split2[1];

      _path = path;
      _queryString = queryString;
    } // const requestQuery = { ...qs.parse(_queryString) }
    // const requestQuery = { ...Object.fromEntries(new URLSearchParams(_queryString)) }


    var requestQuery = commercetools_sdk_client_v2_esm_objectSpread({}, parseURLString(_queryString));

    var query = commercetools_sdk_client_v2_esm_objectSpread({
      // defaults
      limit: 20
    }, requestQuery);

    var hasFirstPageBeenProcessed = false;
    var itemsToGet = opt.total;

    var processPage = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(lastId) {
        var acc,
            limit,
            originalQueryString,
            enhancedQuery,
            enhancedQueryString,
            enhancedRequest,
            payload,
            _payload$body,
            results,
            resultsLength,
            result,
            accumulated,
            last,
            newLastId,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                acc = _args.length > 1 && _args[1] !== undefined ? _args[1] : [];
                // Use the lesser value between limit and itemsToGet in query
                limit = query.limit < itemsToGet ? query.limit : itemsToGet; // const originalQueryString = qs.stringify({ ...query, limit }, qsOptions)

                originalQueryString = new URLSearchParams(commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, query), {}, {
                  limit: limit
                })).toString();
                enhancedQuery = commercetools_sdk_client_v2_esm_objectSpread({
                  sort: 'id asc',
                  withTotal: false
                }, lastId ? {
                  where: "id > \"".concat(lastId, "\"")
                } : {}); // const enhancedQueryString = qs.stringify(enhancedQuery, qsOptions)

                enhancedQueryString = new URLSearchParams(enhancedQuery).toString();
                enhancedRequest = commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, request), {}, {
                  uri: "".concat(_path, "?").concat(enhancedQueryString, "&").concat(originalQueryString)
                });
                _context.prev = 6;
                _context.next = 9;
                return createClient(_options).execute(enhancedRequest);

              case 9:
                payload = _context.sent;
                _payload$body = payload.body, results = _payload$body.results, resultsLength = _payload$body.count;

                if (!(!resultsLength && hasFirstPageBeenProcessed)) {
                  _context.next = 13;
                  break;
                }

                return _context.abrupt("return", resolve(acc || []));

              case 13:
                _context.next = 15;
                return Promise.resolve(fn(payload));

              case 15:
                result = _context.sent;
                hasFirstPageBeenProcessed = true;
                if (opt.accumulate) accumulated = acc.concat(result || []);
                itemsToGet -= resultsLength; // If there are no more items to get, it means the total number
                // of items in the original request have been fetched so we
                // resolve the promise.
                // Also, if we get less results in a page then the limit set it
                // means that there are no more pages and that we can finally
                // resolve the promise.

                if (!(resultsLength < query.limit || !itemsToGet)) {
                  _context.next = 21;
                  break;
                }

                return _context.abrupt("return", resolve(accumulated || []));

              case 21:
                last = results[resultsLength - 1];
                newLastId = last && last.id;
                processPage(newLastId, accumulated);
                _context.next = 29;
                break;

              case 26:
                _context.prev = 26;
                _context.t0 = _context["catch"](6);
                reject(_context.t0);

              case 29:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[6, 26]]);
      }));

      return function processPage(_x) {
        return _ref.apply(this, arguments);
      };
    }(); // Start iterating through pages


    processPage();
  });
}

function createClient(options) {
  _options = options;
  if (!options) throw new Error('Missing required options');
  if (options.middlewares && !Array.isArray(options.middlewares)) throw new Error('Middlewares should be an array');
  if (!options.middlewares || !Array.isArray(options.middlewares) || !options.middlewares.length) throw new Error('You need to provide at least one middleware');
  return {
    /**
     * Given a request object,
     */
    process: process$1,
    execute: function execute(request) {
      validate('exec', request);
      return new Promise(function (resolve, reject) {
        var resolver = function resolver(rq, rs) {
          // Note: pick the promise `resolve` and `reject` function from
          // the response object. This is not necessary the same function
          // given from the `new Promise` constructor, as middlewares could
          // override those functions for custom behaviours.
          if (rs.error) rs.reject(rs.error);else {
            var resObj = {
              body: rs.body || {},
              statusCode: rs.statusCode
            };
            if (rs.headers) resObj.headers = rs.headers;
            if (rs.request) resObj.request = rs.request;
            rs.resolve(resObj);
          }
        };

        var dispatch = compose.apply(void 0, _toConsumableArray(options.middlewares))(resolver);
        dispatch(request, // Initial response shape
        {
          resolve: resolve,
          reject: reject,
          body: undefined,
          error: undefined
        });
      });
    }
  };
}

function buildRequestForClientCredentialsFlow(options) {
  if (!options) throw new Error('Missing required options');
  if (!options.host) throw new Error('Missing required option (host)');
  if (!options.projectKey) throw new Error('Missing required option (projectKey)');
  if (!options.credentials) throw new Error('Missing required option (credentials)');
  var _options$credentials = options.credentials,
      clientId = _options$credentials.clientId,
      clientSecret = _options$credentials.clientSecret;
  if (!(clientId && clientSecret)) throw new Error('Missing required credentials (clientId, clientSecret)');
  var scope = options.scopes ? options.scopes.join(' ') : undefined;
  var basicAuth = buffer["Buffer"].from("".concat(clientId, ":").concat(clientSecret)).toString('base64'); // This is mostly useful for internal testing purposes to be able to check
  // other oauth endpoints.

  var oauthUri = options.oauthUri || '/oauth/token';
  var url = options.host.replace(/\/$/, '') + oauthUri;
  var body = "grant_type=client_credentials".concat(scope ? "&scope=".concat(scope) : '');
  return {
    basicAuth: basicAuth,
    url: url,
    body: body
  };
}

function buildRequestForPasswordFlow(options) {
  if (!options) throw new Error('Missing required options');
  if (!options.host) throw new Error('Missing required option (host)');
  if (!options.projectKey) throw new Error('Missing required option (projectKey)');
  if (!options.credentials) throw new Error('Missing required option (credentials)');
  var _options$credentials2 = options.credentials,
      clientId = _options$credentials2.clientId,
      clientSecret = _options$credentials2.clientSecret,
      user = _options$credentials2.user;
  var pKey = options.projectKey;
  if (!(clientId && clientSecret && user)) throw new Error('Missing required credentials (clientId, clientSecret, user)');
  var username = user.username,
      password = user.password;
  if (!(username && password)) throw new Error('Missing required user credentials (username, password)');
  var scope = (options.scopes || []).join(' ');
  var scopeStr = scope ? "&scope=".concat(scope) : '';
  var basicAuth = buffer["Buffer"].from("".concat(clientId, ":").concat(clientSecret)).toString('base64');
  /**
   * This is mostly useful for internal testing purposes to be able to check
   * other oauth endpoints.
   */

  var oauthUri = options.oauthUri || "/oauth/".concat(pKey, "/customers/token");
  var url = options.host.replace(/\/$/, '') + oauthUri; // encode username and password as requested by the system

  var body = "grant_type=password&username=".concat(encodeURIComponent(username), "&password=").concat(encodeURIComponent(password)).concat(scopeStr);
  return {
    basicAuth: basicAuth,
    url: url,
    body: body
  };
}

function buildRequestForRefreshTokenFlow(options) {
  if (!options) throw new Error('Missing required options');
  if (!options.host) throw new Error('Missing required option (host)');
  if (!options.projectKey) throw new Error('Missing required option (projectKey)');
  if (!options.credentials) throw new Error('Missing required option (credentials)');
  if (!options.refreshToken) throw new Error('Missing required option (refreshToken)');
  var _options$credentials3 = options.credentials,
      clientId = _options$credentials3.clientId,
      clientSecret = _options$credentials3.clientSecret;
  if (!(clientId && clientSecret)) throw new Error('Missing required credentials (clientId, clientSecret)');
  var basicAuth = buffer["Buffer"].from("".concat(clientId, ":").concat(clientSecret)).toString('base64'); // This is mostly useful for internal testing purposes to be able to check
  // other oauth endpoints.

  var oauthUri = options.oauthUri || '/oauth/token';
  var url = options.host.replace(/\/$/, '') + oauthUri;
  var body = "grant_type=refresh_token&refresh_token=".concat(encodeURIComponent(options.refreshToken));
  return {
    basicAuth: basicAuth,
    url: url,
    body: body
  };
}

function buildRequestForAnonymousSessionFlow(options) {
  if (!options) throw new Error('Missing required options');
  if (!options.projectKey) throw new Error('Missing required option (projectKey)');
  var pKey = options.projectKey;
  options.oauthUri = options.oauthUri || "/oauth/".concat(pKey, "/anonymous/token");
  var result = buildRequestForClientCredentialsFlow(options);
  if (options.credentials.anonymousId) result.body += "&anonymous_id=".concat(options.credentials.anonymousId);
  return commercetools_sdk_client_v2_esm_objectSpread({}, result);
}

function mergeAuthHeader(token, req) {
  return commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, req), {}, {
    headers: commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, req.headers), {}, {
      Authorization: "Bearer ".concat(token)
    })
  });
}

function calculateExpirationTime(expiresIn) {
  return Date.now() + // Add a gap of 5 minutes before expiration time.
  expiresIn * 1000 - 5 * 60 * 1000;
}

function executeRequest(_x2) {
  return _executeRequest.apply(this, arguments);
}

function _executeRequest() {
  _executeRequest = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2) {
    var fetcher, url, basicAuth, body, tokenCache, requestState, pendingTasks, response, tokenCacheKey, _res, _yield$_res$json, token, expiresIn, refreshToken, expirationTime, executionQueue, parsed, text, error;

    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            fetcher = _ref2.fetcher, url = _ref2.url, basicAuth = _ref2.basicAuth, body = _ref2.body, tokenCache = _ref2.tokenCache, requestState = _ref2.requestState, pendingTasks = _ref2.pendingTasks, response = _ref2.response, tokenCacheKey = _ref2.tokenCacheKey;
            _context2.prev = 1;
            _context2.next = 4;
            return fetcher(url, {
              method: 'POST',
              headers: {
                Authorization: "Basic ".concat(basicAuth),
                'Content-Length': buffer["Buffer"].byteLength(body).toString(),
                'Content-Type': 'application/x-www-form-urlencoded'
              },
              body: body
            });

          case 4:
            _res = _context2.sent;

            if (!_res.ok) {
              _context2.next = 19;
              break;
            }

            _context2.next = 8;
            return _res.json();

          case 8:
            _yield$_res$json = _context2.sent;
            token = _yield$_res$json.access_token;
            expiresIn = _yield$_res$json.expires_in;
            refreshToken = _yield$_res$json.refresh_token;
            expirationTime = calculateExpirationTime(expiresIn); // cache new generated token

            tokenCache.set({
              token: token,
              expirationTime: expirationTime,
              refreshToken: refreshToken
            }, tokenCacheKey); // Dispatch all pending requests

            requestState.set(false);
            /**
             * Freeze and copy pending queue, reset original one for accepting
             * new pending tasks
             */

            executionQueue = pendingTasks.slice();
            pendingTasks = [];
            executionQueue.forEach(function (task) {
              // Assign the new token in the request header
              var requestWithAuth = mergeAuthHeader(token, task.request);
              /**
               * console.log('test', cache, pendingTasks)
               * Continue by calling the task's own next function
               */

              task.next(requestWithAuth, task.response);
            });
            return _context2.abrupt("return");

          case 19:
            _context2.next = 21;
            return _res.text();

          case 21:
            text = _context2.sent;

            try {
              parsed = JSON.parse(text);
            } catch (error) {
              /* noop */
            }

            error = new Error(parsed ? parsed.message : text);
            if (parsed) error.body = parsed;
            /**
             * to notify that token is either fetched or failed
             * in the below case token failed to be fetched
             * and reset requestState to false
             * so requestState could be shared between multi authMiddlewareBase functions
             */

            requestState.set(false);
            response.reject(error);
            _context2.next = 33;
            break;

          case 29:
            _context2.prev = 29;
            _context2.t0 = _context2["catch"](1);

            /**
             * to notify that token is either fetched or failed
             * in the below case token failed to be fetched
             * and reset requestState to false
             * so requestState could be shared between multi authMiddlewareBase functions
             */
            requestState.set(false);
            if (response && typeof response.reject === 'function') response.reject(_context2.t0);

          case 33:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, null, [[1, 29]]);
  }));
  return _executeRequest.apply(this, arguments);
}

function authMiddlewareBase(_ref3, next, userOptions) {
  var request = _ref3.request,
      response = _ref3.response,
      url = _ref3.url,
      basicAuth = _ref3.basicAuth,
      body = _ref3.body,
      pendingTasks = _ref3.pendingTasks,
      requestState = _ref3.requestState,
      tokenCache = _ref3.tokenCache,
      tokenCacheKey = _ref3.tokenCacheKey,
      fetcher = _ref3.fetch;
  if (!fetcher && typeof fetch === 'undefined') throw new Error('`fetch` is not available. Please pass in `fetch` as an option or have it globally available.');
  if (!fetcher) fetcher = fetch; // Check if there is already a `Authorization` header in the request.
  // If so, then go directly to the next middleware.

  if (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) {
    next(request, response);
    return;
  } // If there was a token in the tokenCache, and it's not expired, append
  // the token in the `Authorization` header.


  var tokenObj = tokenCache.get(tokenCacheKey);

  if (tokenObj && tokenObj.token && Date.now() < tokenObj.expirationTime) {
    var requestWithAuth = mergeAuthHeader(tokenObj.token, request);
    next(requestWithAuth, response);
    return;
  }
  /**
   * Keep pending tasks until a token is fetched
   * Save next function as well, to call it once the token has been fetched, which prevents
   * unexpected behaviour in a context in which the next function uses global vars
   * or Promises to capture the token to hand it to other libraries, e.g. Apollo
   */


  pendingTasks.push({
    request: request,
    response: response,
    next: next
  }); // If a token is currently being fetched, just wait ;)

  if (requestState.get()) return; // Mark that a token is being fetched

  requestState.set(true);
  /**
   * If there was a refreshToken in the tokenCache, and there was an expired
   * token or no token in the tokenCache, use the refreshToken flow
   */

  if (tokenObj && tokenObj.refreshToken && (!tokenObj.token || tokenObj.token && Date.now() > tokenObj.expirationTime)) {
    if (!userOptions) throw new Error('Missing required options');
    executeRequest(commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({
      fetcher: fetcher
    }, buildRequestForRefreshTokenFlow(commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, userOptions), {}, {
      refreshToken: tokenObj.refreshToken
    }))), {}, {
      tokenCacheKey: tokenCacheKey,
      tokenCache: tokenCache,
      requestState: requestState,
      pendingTasks: pendingTasks,
      response: response
    }));
    return;
  } // Token and refreshToken are not present or invalid. Request a new token...


  executeRequest({
    fetcher: fetcher,
    url: url,
    basicAuth: basicAuth,
    body: body,
    tokenCacheKey: tokenCacheKey,
    tokenCache: tokenCache,
    requestState: requestState,
    pendingTasks: pendingTasks,
    response: response
  });
}

function store(initVal) {
  var value = initVal;
  return {
    get: function get(TokenCacheOption) {
      return value;
    },
    set: function set(val, TokenCacheOption) {
      value = val;
    }
  };
}

function createAuthMiddlewareForAnonymousSessionFlow$1(options) {
  var tokenCache = options.tokenCache || store({
    token: '',
    expirationTime: -1
  });
  var pendingTasks = [];
  var requestState = store(false);
  return function (next) {
    return function (request, response) {
      // Check if there is already a `Authorization` header in the request.
      // If so, then go directly to the next middleware.
      if (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) {
        next(request, response);
        return;
      }

      var params = commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({
        request: request,
        response: response
      }, buildRequestForAnonymousSessionFlow(options)), {}, {
        pendingTasks: pendingTasks,
        requestState: requestState,
        tokenCache: tokenCache,
        fetch: options.fetch
      });

      authMiddlewareBase(params, next, options);
    };
  };
}

function buildTokenCacheKey(options) {
  return {
    clientId: options.credentials.clientId,
    host: options.host,
    projectKey: options.projectKey
  };
}

function createAuthMiddlewareForClientCredentialsFlow$1(options) {
  var tokenCache = options.tokenCache || store({
    token: '',
    expirationTime: -1
  });
  var requestState = store(false);
  var pendingTasks = [];
  return function (next) {
    return function (request, response) {
      // Check if there is already a `Authorization` header in the request.
      // If so, then go directly to the next middleware.
      if (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) {
        next(request, response);
        return;
      }

      var params = commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({
        request: request,
        response: response
      }, buildRequestForClientCredentialsFlow(options)), {}, {
        pendingTasks: pendingTasks,
        requestState: requestState,
        tokenCache: tokenCache,
        tokenCacheKey: buildTokenCacheKey(options),
        fetch: options.fetch
      });

      authMiddlewareBase(params, next);
    };
  };
}

function createAuthMiddlewareWithExistingToken$1() {
  var authorization = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return function (next) {
    return function (request, response) {
      if (typeof authorization !== 'string') throw new Error('authorization must be a string');
      var force = options.force === undefined ? true : options.force;
      /** The request will not be modified if:
       *  1. no argument is passed
       *  2. force is false and authorization header exists
       */

      if (!authorization || (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) && force === false) {
        return next(request, response);
      }

      var requestWithAuth = commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, request), {}, {
        headers: commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, request.headers), {}, {
          Authorization: authorization
        })
      });

      return next(requestWithAuth, response);
    };
  };
}

function createAuthMiddlewareForPasswordFlow$1(options) {
  var tokenCache = options.tokenCache || store({});
  var pendingTasks = [];
  var requestState = store(false);
  return function (next) {
    return function (request, response) {
      // Check if there is already a `Authorization` header in the request.
      // If so, then go directly to the next middleware.
      if (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) {
        next(request, response);
        return;
      }

      var params = commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({
        request: request,
        response: response
      }, buildRequestForPasswordFlow(options)), {}, {
        pendingTasks: pendingTasks,
        requestState: requestState,
        tokenCache: tokenCache,
        fetch: options.fetch
      });

      authMiddlewareBase(params, next, options);
    };
  };
}

function createAuthMiddlewareForRefreshTokenFlow$1(options) {
  var tokenCache = options.tokenCache || store({
    token: '',
    expirationTime: -1
  });
  var pendingTasks = [];
  var requestState = store(false);
  return function (next) {
    return function (request, response) {
      // Check if there is already a `Authorization` header in the request.
      // If so, then go directly to the next middleware.
      if (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) {
        next(request, response);
        return;
      }

      var params = commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({
        request: request,
        response: response
      }, buildRequestForRefreshTokenFlow(options)), {}, {
        pendingTasks: pendingTasks,
        requestState: requestState,
        tokenCache: tokenCache,
        fetch: options.fetch
      });

      authMiddlewareBase(params, next);
    };
  };
}

var authMiddlewares = /*#__PURE__*/Object.freeze({
  __proto__: null,
  createAuthMiddlewareForAnonymousSessionFlow: createAuthMiddlewareForAnonymousSessionFlow$1,
  createAuthMiddlewareForClientCredentialsFlow: createAuthMiddlewareForClientCredentialsFlow$1,
  createAuthMiddlewareWithExistingToken: createAuthMiddlewareWithExistingToken$1,
  createAuthMiddlewareForPasswordFlow: createAuthMiddlewareForPasswordFlow$1,
  createAuthMiddlewareForRefreshTokenFlow: createAuthMiddlewareForRefreshTokenFlow$1
});

function createCorrelationIdMiddleware(options) {
  return function (next) {
    return function (request, response) {
      var nextRequest = commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, request), {}, {
        headers: commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, request.headers), {}, {
          'X-Correlation-ID': options.generate()
        })
      });

      next(nextRequest, response);
    };
  };
}

function defineError(statusCode, message) {
  var meta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  this.status = this.statusCode = this.code = statusCode;
  this.message = message;
  Object.assign(this, meta);
  this.name = this.constructor.name;
  this.constructor.prototype.__proto__ = Error.prototype;
  if (Error.captureStackTrace) Error.captureStackTrace(this, this.constructor);
}

function NetworkError() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  defineError.call.apply(defineError, [this, 0
  /* special code to indicate network errors */
  ].concat(args));
}

function HttpError() {
  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    args[_key3] = arguments[_key3];
  }

  defineError.call.apply(defineError, [this].concat(args));
}

function BadRequest() {
  for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    args[_key4] = arguments[_key4];
  }

  defineError.call.apply(defineError, [this, 400].concat(args));
}

function Unauthorized() {
  for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
    args[_key5] = arguments[_key5];
  }

  defineError.call.apply(defineError, [this, 401].concat(args));
}

function Forbidden() {
  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
    args[_key6] = arguments[_key6];
  }

  defineError.call.apply(defineError, [this, 403].concat(args));
}

function NotFound() {
  for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
    args[_key7] = arguments[_key7];
  }

  defineError.call.apply(defineError, [this, 404].concat(args));
}

function ConcurrentModification() {
  for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
    args[_key8] = arguments[_key8];
  }

  defineError.call.apply(defineError, [this, 409].concat(args));
}

function InternalServerError() {
  for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
    args[_key9] = arguments[_key9];
  }

  defineError.call.apply(defineError, [this, 500].concat(args));
}

function ServiceUnavailable() {
  for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
    args[_key10] = arguments[_key10];
  }

  defineError.call.apply(defineError, [this, 503].concat(args));
}

function getErrorByCode(code) {
  switch (code) {
    case 0:
      return NetworkError;

    case 400:
      return BadRequest;

    case 401:
      return Unauthorized;

    case 403:
      return Forbidden;

    case 404:
      return NotFound;

    case 409:
      return ConcurrentModification;

    case 500:
      return InternalServerError;

    case 503:
      return ServiceUnavailable;

    default:
      return undefined;
  }
}

function parseHeaders(headers) {
  if (headers.raw) // node-fetch
    return headers.raw(); // Tmp fix for Firefox until it supports iterables

  if (!headers.forEach) return {}; // whatwg-fetch

  var map = {};
  headers.forEach(function (value, name) {
    map[name] = value;
  });
  return map;
} // performs a proper buffer check


function isBuffer(obj) {
  return obj != null && obj.constructor != null && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);
}

function createError(_ref4) {
  var statusCode = _ref4.statusCode,
      message = _ref4.message,
      rest = _objectWithoutProperties(_ref4, _excluded);

  var errorMessage = message || 'Unexpected non-JSON error response';

  if (statusCode === 404) {
    var _rest$originalRequest;

    errorMessage = "URI not found: ".concat(((_rest$originalRequest = rest.originalRequest) === null || _rest$originalRequest === void 0 ? void 0 : _rest$originalRequest.uri) || rest.uri);
    delete rest.uri; // remove the `uri` property from the response
  }

  var ResponseError = getErrorByCode(statusCode);
  if (ResponseError) return new ResponseError(errorMessage, rest);
  return new HttpError(statusCode, errorMessage, rest);
} // calculates the delay duration exponentially
// More info about the algorithm use here https://goo.gl/Xk8h5f


function calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay) {
  if (backoff) return retryCount !== 0 // do not increase if it's the first retry
  ? Math.min(Math.round((Math.random() + 1) * retryDelay * Math.pow(2, retryCount)), maxDelay) : retryDelay;
  return retryDelay;
}

function maskAuthData(request, maskSensitiveHeaderData) {
  if (maskSensitiveHeaderData) {
    if (request && request.headers && request.headers.authorization) request.headers.authorization = 'Bearer ********';
    if (request && request.headers && request.headers.Authorization) request.headers.Authorization = 'Bearer ********';
  }
}

function createHttpMiddleware(_ref5) {
  var host = _ref5.host,
      credentialsMode = _ref5.credentialsMode,
      includeResponseHeaders = _ref5.includeResponseHeaders,
      includeOriginalRequest = _ref5.includeOriginalRequest,
      _ref5$includeRequestI = _ref5.includeRequestInErrorResponse,
      includeRequestInErrorResponse = _ref5$includeRequestI === void 0 ? true : _ref5$includeRequestI,
      _ref5$maskSensitiveHe = _ref5.maskSensitiveHeaderData,
      maskSensitiveHeaderData = _ref5$maskSensitiveHe === void 0 ? true : _ref5$maskSensitiveHe,
      _ref5$headersWithStri = _ref5.headersWithStringBody,
      headersWithStringBody = _ref5$headersWithStri === void 0 ? [] : _ref5$headersWithStri,
      enableRetry = _ref5.enableRetry,
      timeout = _ref5.timeout,
      _ref5$retryConfig = _ref5.retryConfig;
  _ref5$retryConfig = _ref5$retryConfig === void 0 ? {} : _ref5$retryConfig;
  var _ref5$retryConfig$max = _ref5$retryConfig.maxRetries,
      maxRetries = _ref5$retryConfig$max === void 0 ? 10 : _ref5$retryConfig$max,
      _ref5$retryConfig$bac = _ref5$retryConfig.backoff,
      backoff = _ref5$retryConfig$bac === void 0 ? true : _ref5$retryConfig$bac,
      _ref5$retryConfig$ret = _ref5$retryConfig.retryDelay,
      retryDelay = _ref5$retryConfig$ret === void 0 ? 200 : _ref5$retryConfig$ret,
      _ref5$retryConfig$max2 = _ref5$retryConfig.maxDelay,
      maxDelay = _ref5$retryConfig$max2 === void 0 ? Infinity : _ref5$retryConfig$max2,
      _ref5$retryConfig$ret2 = _ref5$retryConfig.retryOnAbort,
      retryOnAbort = _ref5$retryConfig$ret2 === void 0 ? false : _ref5$retryConfig$ret2,
      _ref5$retryConfig$ret3 = _ref5$retryConfig.retryCodes,
      retryCodes = _ref5$retryConfig$ret3 === void 0 ? [503] : _ref5$retryConfig$ret3,
      fetcher = _ref5.fetch,
      getAbortController = _ref5.getAbortController;
  //nodejs v18 has the fetch available and not the version 16
  if (!fetcher) throw new Error('`fetch` is not available. Please pass in `fetch` as an option or have it globally available.');
  if (timeout && !getAbortController) throw new Error('`AbortController` is not available. Please pass in `getAbortController` as an option or have AbortController globally available when using timeout.');
  var fetchFunction;

  if (fetcher) {
    fetchFunction = fetcher;
  } else {
    // `fetcher` is set here rather than the destructuring to ensure fetch is
    // declared before referencing it otherwise it would cause a `ReferenceError`.
    // For reference of this pattern: https://github.com/apollographql/apollo-link/blob/498b413a5b5199b0758ce898b3bb55451f57a2fa/packages/apollo-link-http/src/httpLink.ts#L49
    fetchFunction = fetch;
  }

  if (!Array.isArray(retryCodes)) {
    throw new Error('`retryCodes` option must be an array of retry status (error) codes.');
  }

  if (!Array.isArray(headersWithStringBody)) {
    throw new Error('`headersWithStringBody` option must be an array of strings');
  }

  return function (next) {
    return function (request, response) {
      var url = host.replace(/\/$/, '') + request.uri;

      var requestHeader = commercetools_sdk_client_v2_esm_objectSpread({}, request.headers); // If no content-type is provided, defaults to application/json


      if (!(Object.prototype.hasOwnProperty.call(requestHeader, 'Content-Type') || Object.prototype.hasOwnProperty.call(requestHeader, 'content-type'))) {
        requestHeader['Content-Type'] = 'application/json';
      } // Unset the content-type header if explicitly asked to (passing `null` as value).


      if (requestHeader['Content-Type'] === null) {
        delete requestHeader['Content-Type'];
      } // Ensure body is a string if content type is application/json or application/graphql


      var body = ['application/json', 'application/graphql'].concat(_toConsumableArray(headersWithStringBody)).indexOf(requestHeader['Content-Type']) > -1 && typeof request.body === 'string' || isBuffer(request.body) ? request.body : JSON.stringify(request.body || undefined);

      if (body && (typeof body === 'string' || isBuffer(body))) {
        requestHeader['Content-Length'] = buffer["Buffer"].byteLength(body).toString();
      }

      var fetchOptions = {
        method: request.method,
        headers: requestHeader
      };

      if (credentialsMode) {
        fetchOptions.credentialsMode = credentialsMode;
      }

      if (body) {
        fetchOptions.body = body;
      }

      var retryCount = 0; // wrap in a fn so we can retry if error occur

      function executeFetch() {
        // Kick off timer for abortController directly before fetch.
        var timer;
        var abortController;

        if (timeout) {
          // Initialize the abort controller in case we do a retry on an aborted request to rest the signal
          abortController = (getAbortController ? getAbortController() : null) || new AbortController();
          fetchOptions.signal = abortController.signal; // Set the timer

          timer = setTimeout(function () {
            abortController.abort();
          }, timeout);
        }

        fetchFunction(url, fetchOptions).then(function (res) {
          if (res.ok) {
            if (fetchOptions.method === 'HEAD') {
              next(request, commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, response), {}, {
                statusCode: res.status
              }));
              return;
            }

            res.text().then(function (result) {
              // Try to parse the response as JSON
              var parsed;

              try {
                parsed = result.length > 0 ? JSON.parse(result) : {};
              } catch (err) {
                if (enableRetry && retryCount < maxRetries) {
                  setTimeout(executeFetch, calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay));
                  retryCount += 1;
                  return;
                }

                parsed = result;
              }

              var parsedResponse = commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, response), {}, {
                body: parsed,
                statusCode: res.status
              });

              if (includeResponseHeaders) parsedResponse.headers = parseHeaders(res.headers);

              if (includeOriginalRequest) {
                parsedResponse.request = commercetools_sdk_client_v2_esm_objectSpread({}, fetchOptions);
                maskAuthData(parsedResponse.request, maskSensitiveHeaderData);
              }

              next(request, parsedResponse);
            })["catch"](function (err) {
              if (enableRetry && retryCount < maxRetries) {
                setTimeout(executeFetch, calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay));
                retryCount += 1;
                return;
              }

              var error = new NetworkError(err.message, commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, includeRequestInErrorResponse ? {
                originalRequest: request
              } : {}), {}, {
                retryCount: retryCount
              }));
              maskAuthData(error.originalRequest, maskSensitiveHeaderData);
              next(request, commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, response), {}, {
                error: error,
                statusCode: 0
              }));
            });
            return;
          } // Server responded with an error. Try to parse it as JSON, then
          // return a proper error type with all necessary meta information.


          res.text().then(function (text) {
            // Try to parse the error response as JSON
            var parsed;

            try {
              parsed = JSON.parse(text);
            } catch (error) {
              parsed = text;
            }

            var error = createError(commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({
              statusCode: res.status
            }, includeRequestInErrorResponse ? {
              originalRequest: request
            } : res.status === 404 ? {
              uri: request.uri
            } : {}), {}, {
              retryCount: retryCount,
              headers: parseHeaders(res.headers)
            }, commercetools_sdk_client_v2_esm_typeof(parsed) === 'object' ? {
              message: parsed.message,
              body: parsed
            } : {
              message: parsed,
              body: parsed
            }));

            if (enableRetry && (retryCodes.indexOf(error.statusCode) !== -1 || (retryCodes === null || retryCodes === void 0 ? void 0 : retryCodes.indexOf(error.message)) !== -1)) {
              if (retryCount < maxRetries) {
                setTimeout(executeFetch, calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay));
                retryCount += 1;
                return;
              }
            }

            maskAuthData(error.originalRequest, maskSensitiveHeaderData); // Let the final resolver to reject the promise

            var parsedResponse = commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, response), {}, {
              error: error,
              statusCode: res.status
            });

            next(request, parsedResponse);
          });
        }, // We know that this is a "network" error thrown by the `fetch` library
        function (e) {
          // Retry when enabled and either the request was not aborted or retryOnAbort is enabled
          if (enableRetry && (retryOnAbort || !abortController || !abortController.signal)) {
            if (retryCount < maxRetries) {
              setTimeout(executeFetch, calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay));
              retryCount += 1;
              return;
            }
          }

          var error = new NetworkError(e.message, commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, includeRequestInErrorResponse ? {
            originalRequest: request
          } : {}), {}, {
            retryCount: retryCount
          }));
          maskAuthData(error.originalRequest, maskSensitiveHeaderData);
          next(request, commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, response), {}, {
            error: error,
            statusCode: 0
          }));
        })["finally"](function () {
          clearTimeout(timer);
        });
      }

      executeFetch();
    };
  };
}

function createLoggerMiddleware() {
  return function (next) {
    return function (request, response) {
      var error = response.error,
          body = response.body,
          statusCode = response.statusCode;
      console.log('Request: ', request);
      console.log('Response: ', {
        error: error,
        body: body,
        statusCode: statusCode
      });
      next(request, response);
    };
  };
}

function createQueueMiddleware(_ref6) {
  var _ref6$concurrency = _ref6.concurrency,
      concurrency = _ref6$concurrency === void 0 ? 20 : _ref6$concurrency;
  var queue = [];
  var runningCount = 0;

  var dequeue = function dequeue(next) {
    // We assume here that this task has been completed
    runningCount -= 1; // Check if there are any other pending tasks and execute them

    if (queue.length && runningCount <= concurrency) {
      var nextTask = queue.shift();
      runningCount += 1;
      next(nextTask.request, nextTask.response);
    }
  };

  return function (next) {
    return function (request, response) {
      // Override response `resolve` and `reject` to know when the request has
      // been completed and therefore trigger a pending task in the queue.
      var patchedResponse = commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, response), {}, {
        resolve: function resolve(data) {
          // Resolve original promise
          response.resolve(data);
          dequeue(next);
        },
        reject: function reject(error) {
          // Reject original promise
          response.reject(error);
          dequeue(next);
        }
      }); // Add task to the queue


      queue.push({
        request: request,
        response: patchedResponse
      }); // If possible, run the task straight away

      if (runningCount < concurrency) {
        var nextTask = queue.shift();
        runningCount += 1;
        next(nextTask.request, nextTask.response);
      }
    };
  };
}

var packageJson = {
  name: "@commercetools/sdk-client-v2",
  version: "2.3.0",
  engines: {
    node: ">=14"
  },
  description: "commercetools Composable Commerce TypeScript SDK client.",
  keywords: ["commercetools", "composable commerce", "sdk", "typescript", "client", "middleware", "http", "oauth", "auth"],
  homepage: "https://github.com/commercetools/commercetools-sdk-typescript",
  license: "MIT",
  directories: {
    lib: "lib",
    test: "test"
  },
  publishConfig: {
    access: "public"
  },
  repository: {
    type: "git",
    url: "git+https://github.com/commercetools/commercetools-sdk-typescript.git"
  },
  bugs: {
    url: "https://github.com/commercetools/commercetools-sdk-typescript/issues"
  },
  dependencies: {
    buffer: "^6.0.3",
    "node-fetch": "^2.6.1"
  },
  files: ["dist", "CHANGELOG.md"],
  author: "Chukwuemeka Ajima <meeky.ae@gmail.com>",
  main: "dist/commercetools-sdk-client-v2.cjs.js",
  module: "dist/commercetools-sdk-client-v2.esm.js",
  browser: {
    "./dist/commercetools-sdk-client-v2.cjs.js": "./dist/commercetools-sdk-client-v2.browser.cjs.js",
    "./dist/commercetools-sdk-client-v2.esm.js": "./dist/commercetools-sdk-client-v2.browser.esm.js"
  },
  devDependencies: {
    "abort-controller": "3.0.0",
    "common-tags": "1.8.2",
    dotenv: "16.3.1",
    jest: "29.6.2",
    nock: "12.0.3",
    "organize-imports-cli": "0.10.0"
  },
  scripts: {
    organize_imports: "find src -type f -name '*.ts' | xargs organize-imports-cli",
    postbuild: "yarn organize_imports",
    post_process_generate: "yarn organize_imports"
  }
};
/*
  This is the easiest way, for this use case, to detect if we're running in
  Node.js or in a browser environment. In other cases, this won't be even a
  problem as Rollup will provide the correct polyfill in the bundle.
  The main advantage by doing it this way is that it allows to easily test
  the code running in both environments, by overriding `global.window` in
  the specific test.
*/

var isBrowser = function isBrowser() {
  return typeof window !== 'undefined' && window.document && window.document.nodeType === 9;
};

function getSystemInfo() {
  var _process;

  if (isBrowser()) return window.navigator.userAgent;
  var nodeVersion = ((_process = process) === null || _process === void 0 ? void 0 : _process.version.slice(1)) || '12'; // temporary fix for rn environment
  // const platformInfo = `(${process.platform}; ${process.arch})`
  // return `Node.js/${nodeVersion} ${platformInfo}`

  return "node.js/".concat(nodeVersion);
}

function createUserAgent(options) {
  if (!options || Object.keys(options).length === 0 || !{}.hasOwnProperty.call(options, 'name')) throw new Error('Missing required option `name`'); // Main info

  var baseInfo = options.version ? "".concat(options.name, "/").concat(options.version) : options.name; // Library info

  var libraryInfo = null;
  if (options.libraryName && !options.libraryVersion) libraryInfo = options.libraryName;else if (options.libraryName && options.libraryVersion) libraryInfo = "".concat(options.libraryName, "/").concat(options.libraryVersion); // Contact info

  var contactInfo = null;
  if (options.contactUrl && !options.contactEmail) contactInfo = "(+".concat(options.contactUrl, ")");else if (!options.contactUrl && options.contactEmail) contactInfo = "(+".concat(options.contactEmail, ")");else if (options.contactUrl && options.contactEmail) contactInfo = "(+".concat(options.contactUrl, "; +").concat(options.contactEmail, ")"); // System info

  var systemInfo = getSystemInfo(); // customName

  var customAgent = options.customAgent || '';
  return [baseInfo, systemInfo, libraryInfo, contactInfo, customAgent].filter(Boolean).join(' ');
}

function createUserAgentMiddleware(options) {
  var userAgent = createUserAgent(commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, options), {}, {
    name: "commercetools-sdk-javascript-v2/".concat(packageJson.version)
  }));
  return function (next) {
    return function (request, response) {
      var requestWithUserAgent = commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, request), {}, {
        headers: commercetools_sdk_client_v2_esm_objectSpread(commercetools_sdk_client_v2_esm_objectSpread({}, request.headers), {}, {
          'User-Agent': userAgent
        })
      });

      next(requestWithUserAgent, response);
    };
  };
}

var createAuthMiddlewareForPasswordFlow = authMiddlewares.createAuthMiddlewareForPasswordFlow,
    createAuthMiddlewareForAnonymousSessionFlow = authMiddlewares.createAuthMiddlewareForAnonymousSessionFlow,
    createAuthMiddlewareForClientCredentialsFlow = authMiddlewares.createAuthMiddlewareForClientCredentialsFlow,
    createAuthMiddlewareForRefreshTokenFlow = authMiddlewares.createAuthMiddlewareForRefreshTokenFlow,
    createAuthMiddlewareWithExistingToken = authMiddlewares.createAuthMiddlewareWithExistingToken;

var commercetools_sdk_client_v2_esm_ClientBuilder = /*#__PURE__*/function () {
  function ClientBuilder() {
    commercetools_sdk_client_v2_esm_classCallCheck(this, ClientBuilder);

    commercetools_sdk_client_v2_esm_defineProperty(this, "projectKey", void 0);

    commercetools_sdk_client_v2_esm_defineProperty(this, "authMiddleware", void 0);

    commercetools_sdk_client_v2_esm_defineProperty(this, "httpMiddleware", void 0);

    commercetools_sdk_client_v2_esm_defineProperty(this, "userAgentMiddleware", void 0);

    commercetools_sdk_client_v2_esm_defineProperty(this, "correlationIdMiddleware", void 0);

    commercetools_sdk_client_v2_esm_defineProperty(this, "loggerMiddleware", void 0);

    commercetools_sdk_client_v2_esm_defineProperty(this, "queueMiddleware", void 0);

    commercetools_sdk_client_v2_esm_defineProperty(this, "telemetryMiddleware", void 0);

    commercetools_sdk_client_v2_esm_defineProperty(this, "middlewares", []);
  }

  commercetools_sdk_client_v2_esm_createClass(ClientBuilder, [{
    key: "withProjectKey",
    value: function withProjectKey(key) {
      this.projectKey = key;
      return this;
    }
  }, {
    key: "defaultClient",
    value: function defaultClient(baseUri, credentials, oauthUri, projectKey) {
      return this.withClientCredentialsFlow({
        host: oauthUri,
        projectKey: projectKey || this.projectKey,
        credentials: credentials
      }).withHttpMiddleware({
        host: baseUri,
        fetch: lib["default"]
      }).withLoggerMiddleware().withUserAgentMiddleware();
    }
  }, {
    key: "withAuthMiddleware",
    value: function withAuthMiddleware(authMiddleware) {
      this.authMiddleware = authMiddleware;
      return this;
    }
  }, {
    key: "withMiddleware",
    value: function withMiddleware(middleware) {
      this.middlewares.push(middleware);
      return this;
    }
  }, {
    key: "withClientCredentialsFlow",
    value: function withClientCredentialsFlow(options) {
      return this.withAuthMiddleware(createAuthMiddlewareForClientCredentialsFlow(commercetools_sdk_client_v2_esm_objectSpread({
        host: options.host || 'https://auth.europe-west1.gcp.commercetools.com',
        projectKey: options.projectKey || this.projectKey,
        credentials: {
          clientId: options.credentials.clientId || '',
          clientSecret: options.credentials.clientSecret || ''
        },
        oauthUri: options.oauthUri || '',
        scopes: options.scopes,
        fetch: options.fetch || lib["default"]
      }, options)));
    }
  }, {
    key: "withPasswordFlow",
    value: function withPasswordFlow(options) {
      return this.withAuthMiddleware(createAuthMiddlewareForPasswordFlow(commercetools_sdk_client_v2_esm_objectSpread({
        host: options.host || 'https://auth.europe-west1.gcp.commercetools.com',
        projectKey: options.projectKey || this.projectKey,
        credentials: {
          clientId: options.credentials.clientId || '',
          clientSecret: options.credentials.clientSecret || '',
          user: {
            username: options.credentials.user.username || '',
            password: options.credentials.user.password || ''
          }
        },
        fetch: options.fetch || lib["default"]
      }, options)));
    }
  }, {
    key: "withAnonymousSessionFlow",
    value: function withAnonymousSessionFlow(options) {
      return this.withAuthMiddleware(createAuthMiddlewareForAnonymousSessionFlow(commercetools_sdk_client_v2_esm_objectSpread({
        host: options.host || 'https://auth.europe-west1.gcp.commercetools.com',
        projectKey: this.projectKey || options.projectKey,
        credentials: {
          clientId: options.credentials.clientId || '',
          clientSecret: options.credentials.clientSecret || '',
          anonymousId: options.credentials.anonymousId || ''
        },
        fetch: options.fetch || lib["default"]
      }, options)));
    }
  }, {
    key: "withRefreshTokenFlow",
    value: function withRefreshTokenFlow(options) {
      return this.withAuthMiddleware(createAuthMiddlewareForRefreshTokenFlow(commercetools_sdk_client_v2_esm_objectSpread({
        host: options.host || 'https://auth.europe-west1.gcp.commercetools.com',
        projectKey: this.projectKey || options.projectKey,
        credentials: {
          clientId: options.credentials.clientId || '',
          clientSecret: options.credentials.clientSecret || ''
        },
        fetch: options.fetch || lib["default"],
        refreshToken: options.refreshToken || ''
      }, options)));
    }
  }, {
    key: "withExistingTokenFlow",
    value: function withExistingTokenFlow(authorization, options) {
      return this.withAuthMiddleware(createAuthMiddlewareWithExistingToken(authorization, commercetools_sdk_client_v2_esm_objectSpread({
        force: options.force || true
      }, options)));
    }
  }, {
    key: "withHttpMiddleware",
    value: function withHttpMiddleware(options) {
      this.httpMiddleware = createHttpMiddleware(commercetools_sdk_client_v2_esm_objectSpread({
        host: options.host || 'https://api.europe-west1.gcp.commercetools.com',
        fetch: options.fetch || lib["default"]
      }, options));
      return this;
    }
  }, {
    key: "withUserAgentMiddleware",
    value: function withUserAgentMiddleware(options) {
      this.userAgentMiddleware = createUserAgentMiddleware(options);
      return this;
    }
  }, {
    key: "withQueueMiddleware",
    value: function withQueueMiddleware(options) {
      this.queueMiddleware = createQueueMiddleware(commercetools_sdk_client_v2_esm_objectSpread({
        concurrency: options.concurrency || 20
      }, options));
      return this;
    }
  }, {
    key: "withLoggerMiddleware",
    value: function withLoggerMiddleware() {
      this.loggerMiddleware = createLoggerMiddleware();
      return this;
    }
  }, {
    key: "withCorrelationIdMiddleware",
    value: function withCorrelationIdMiddleware(options) {
      this.correlationIdMiddleware = createCorrelationIdMiddleware(commercetools_sdk_client_v2_esm_objectSpread({
        generate: options.generate || null
      }, options));
      return this;
    }
  }, {
    key: "withTelemetryMiddleware",
    value: function withTelemetryMiddleware(options) {
      var createTelemetryMiddleware = options.createTelemetryMiddleware,
          rest = _objectWithoutProperties(options, _excluded2);

      this.withUserAgentMiddleware({
        customAgent: (rest === null || rest === void 0 ? void 0 : rest.userAgent) || 'typescript-sdk-apm-middleware'
      });
      this.telemetryMiddleware = createTelemetryMiddleware(rest);
      return this;
    }
  }, {
    key: "build",
    value: function build() {
      var middlewares = this.middlewares.slice();
      if (this.telemetryMiddleware) middlewares.push(this.telemetryMiddleware);
      if (this.correlationIdMiddleware) middlewares.push(this.correlationIdMiddleware);
      if (this.userAgentMiddleware) middlewares.push(this.userAgentMiddleware);
      if (this.authMiddleware) middlewares.push(this.authMiddleware);
      if (this.queueMiddleware) middlewares.push(this.queueMiddleware);
      if (this.httpMiddleware) middlewares.push(this.httpMiddleware);
      if (this.loggerMiddleware) middlewares.push(this.loggerMiddleware);
      return createClient({
        middlewares: middlewares
      });
    }
  }]);

  return ClientBuilder;
}();


// CONCATENATED MODULE: ./commerce-commercetools/ClientFactory.ts


class ClientFactory_ClientFactory {
    static getClientBuilderWithRefreshTokenFlow(clientConfig, tokenCache, refreshToken, httpMiddlewareOptions) {
        const refreshAuthMiddlewareOptions = {
            host: clientConfig.authUrl,
            projectKey: clientConfig.projectKey,
            credentials: {
                clientId: clientConfig.clientId,
                clientSecret: clientConfig.clientSecret,
            },
            fetch: lib["default"],
            tokenCache: tokenCache,
            refreshToken: refreshToken,
        };
        return new commercetools_sdk_client_v2_esm_ClientBuilder()
            .withHttpMiddleware(httpMiddlewareOptions)
            .withRefreshTokenFlow(refreshAuthMiddlewareOptions);
    }
    static getClientBuilderWithClientCredentialsFlow(clientConfig, tokenCache, httpMiddlewareOptions) {
        const authMiddlewareOptions = {
            host: clientConfig.authUrl,
            projectKey: clientConfig.projectKey,
            credentials: {
                clientId: clientConfig.clientId,
                clientSecret: clientConfig.clientSecret,
            },
            fetch: lib["default"],
            tokenCache: tokenCache,
        };
        return new commercetools_sdk_client_v2_esm_ClientBuilder()
            .withHttpMiddleware(httpMiddlewareOptions)
            .withClientCredentialsFlow(authMiddlewareOptions);
    }
}
ClientFactory_ClientFactory.factor = (clientConfig, environment, tokenCache, refreshToken) => {
    const httpMiddlewareOptions = {
        host: clientConfig.hostUrl,
        fetch: lib["default"],
    };
    let clientBuilder;
    switch (true) {
        case refreshToken !== undefined:
            clientBuilder = ClientFactory_ClientFactory.getClientBuilderWithRefreshTokenFlow(clientConfig, tokenCache, refreshToken, httpMiddlewareOptions);
            break;
        default:
            clientBuilder = ClientFactory_ClientFactory.getClientBuilderWithClientCredentialsFlow(clientConfig, tokenCache, httpMiddlewareOptions);
            break;
    }
    if (environment !== undefined && environment !== 'prod' && environment !== 'production') {
        clientBuilder = clientBuilder.withLoggerMiddleware();
    }
    return clientBuilder.build();
};
ClientFactory_ClientFactory.factorWithoutAuthenticationFlow = (clientConfig) => {
    const httpMiddlewareOptions = {
        host: clientConfig.authUrl,
        headersWithStringBody: ['application/x-www-form-urlencoded'],
        fetch: lib["default"],
    };
    return new commercetools_sdk_client_v2_esm_ClientBuilder().withHttpMiddleware(httpMiddlewareOptions).build();
};

// CONCATENATED MODULE: ./commerce-commercetools/utils/Context.ts
const projectConfigurationOverrides = {};
const isDevEnv = (context) => {
    return context.environment === 'development' || context.environment === 'dev';
};
const getFromProjectConfig = (key, context) => {
    if (isDevEnv(context) && projectConfigurationOverrides[key]) {
        return projectConfigurationOverrides[key];
    }
    return context.projectConfiguration[key];
};

// CONCATENATED MODULE: ./commerce-commercetools/utils/GetConfig.ts

const getConfig = (context, engine, locale) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
    const prefix = `EXTENSION_${engine.toUpperCase()}`;
    const clientConfig = {
        authUrl: getFromProjectConfig(`${prefix}_AUTH_URL`, context),
        clientId: getFromProjectConfig(`${prefix}_CLIENT_ID`, context),
        clientSecret: getFromProjectConfig(`${prefix}_CLIENT_SECRET`, context),
        hostUrl: getFromProjectConfig(`${prefix}_HOST_URL`, context),
        projectKey: getFromProjectConfig(`${prefix}_PROJECT_KEY`, context),
        productIdField: getFromProjectConfig(`${prefix}_PRODUCT_ID_FIELD`, context),
        categoryIdField: getFromProjectConfig(`${prefix}_CATEGORY_ID_FIELD`, context),
    };
    if (!clientConfig.authUrl) {
        clientConfig.authUrl = (_b = (_a = context.project.configuration) === null || _a === void 0 ? void 0 : _a[engine]) === null || _b === void 0 ? void 0 : _b.authUrl;
    }
    if (!clientConfig.clientId) {
        clientConfig.clientId = (_d = (_c = context.project.configuration) === null || _c === void 0 ? void 0 : _c[engine]) === null || _d === void 0 ? void 0 : _d.clientId;
    }
    if (!clientConfig.clientSecret) {
        clientConfig.clientSecret = (_f = (_e = context.project.configuration) === null || _e === void 0 ? void 0 : _e[engine]) === null || _f === void 0 ? void 0 : _f.clientSecret;
    }
    if (!clientConfig.hostUrl) {
        clientConfig.hostUrl = (_h = (_g = context.project.configuration) === null || _g === void 0 ? void 0 : _g[engine]) === null || _h === void 0 ? void 0 : _h.hostUrl;
    }
    if (!clientConfig.projectKey) {
        clientConfig.projectKey = (_k = (_j = context.project.configuration) === null || _j === void 0 ? void 0 : _j[engine]) === null || _k === void 0 ? void 0 : _k.projectKey;
    }
    if (!clientConfig.productIdField) {
        clientConfig.productIdField = (_m = (_l = context.project.configuration) === null || _l === void 0 ? void 0 : _l[engine]) === null || _m === void 0 ? void 0 : _m.productIdField;
    }
    if (!clientConfig.categoryIdField) {
        clientConfig.categoryIdField = (_p = (_o = context.project.configuration) === null || _o === void 0 ? void 0 : _o[engine]) === null || _p === void 0 ? void 0 : _p.categoryIdField;
    }
    return clientConfig;
};

// CONCATENATED MODULE: ./commerce-commercetools/utils/Errors.ts
class ExtensionError extends Error {
    constructor({ message, errors }) {
        var _a;
        super(message || ((_a = errors === null || errors === void 0 ? void 0 : errors[0]) === null || _a === void 0 ? void 0 : _a.message));
        this.errors = errors || [{ message }];
    }
}
class Errors_ValidationError extends ExtensionError {
    constructor(options) {
        super(options);
        this.code = 'validation_error';
    }
}
class ExternalError extends ExtensionError {
    constructor(options) {
        super(options);
        this.status = options.status;
        this.body = options.body;
        this.code = 'external_error';
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/errors/LocaleError.ts

class LocaleError_LocaleError extends ExtensionError {
    constructor(options) {
        super(options);
        this.code = 'locale_error';
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/utils/Token.ts
const getToken = (request) => {
    var _a, _b;
    if (request !== undefined) {
        const token = (_b = (_a = request.sessionData) === null || _a === void 0 ? void 0 : _a.token) !== null && _b !== void 0 ? _b : undefined;
        return token;
    }
    return undefined;
};
const tokenHasExpired = (token) => {
    if (token === undefined) {
        return true;
    }
    return Date.now() >= token.expirationTime;
};
const Token_calculateExpirationTime = (expiredIn) => {
    if (expiredIn === undefined) {
        return undefined;
    }
    return expiredIn * 1000 + Date.now();
};

// EXTERNAL MODULE: external "crypto"
var external_crypto_ = __webpack_require__(68);
var external_crypto_default = /*#__PURE__*/__webpack_require__.n(external_crypto_);

// EXTERNAL MODULE: ./node_modules/performance-now/lib/performance-now.js
var performance_now = __webpack_require__(225);
var performance_now_default = /*#__PURE__*/__webpack_require__.n(performance_now);

// CONCATENATED MODULE: ./commerce-commercetools/utils/Guid.ts

class Guid {
}
Guid.newGuid = (noHyphens, [regular, withHyphens] = ['xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx', 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx']) => {
    let d = new Date().getTime();
    if (typeof performance_now_default.a === 'function') {
        d += performance_now_default()();
    }
    const shellGuid = noHyphens ? regular : withHyphens;
    return shellGuid.replace(/[xy]/g, function (c) {
        const r = (d + Math.random() * 16) % 16 | 0;
        d = Math.floor(d / 16);
        return (c === 'x' ? r : r & (0x3 | 0x8)).toString(16);
    });
};
Guid.empty = '00000000-0000-0000-0000-000000000000';

// CONCATENATED MODULE: ./commerce-commercetools/errors/ValidationError.ts

class ValidationError_ValidationError extends ExtensionError {
    constructor(options) {
        super(options);
        this.code = 'validation_error';
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/apis/BaseApi.ts









const defaultCurrency = 'USD';
const localeRegex = /^(?<language>[a-z]{2,})(?:_(?<territory>[A-Z0-9]{2,}))?(?:\.(?<codeset>[A-Z0-9_+-]+))?(?:@(?<modifier>[A-Za-z]+))?$/;
const languageToTerritory = {
    en: 'US',
};
const modifierToCurrency = {
    dollar: 'USD',
    euro: 'EUR',
};
const territoryToCurrency = {
    AD: 'EUR',
    AE: 'AED',
    AF: 'AFN',
    AG: 'XCD',
    AI: 'XCD',
    AL: 'ALL',
    AM: 'AMD',
    AN: 'ANG',
    AO: 'AOA',
    AQ: 'AQD',
    AR: 'ARS',
    AS: 'EUR',
    AT: 'EUR',
    AU: 'AUD',
    AW: 'ANG',
    AX: 'EUR',
    AZ: 'AZN',
    BA: 'BAM',
    BB: 'BBD',
    BD: 'BDT',
    BE: 'EUR',
    BF: 'XOF',
    BG: 'BGN',
    BH: 'BHD',
    BI: 'BIF',
    BJ: 'XOF',
    BL: 'EUR',
    BM: 'BMD',
    BN: 'BND',
    BO: 'BOB',
    BR: 'BRL',
    BS: 'BSD',
    BT: 'INR',
    BV: 'NOK',
    BW: 'BWP',
    BY: 'BYR',
    BZ: 'BZD',
    CA: 'CAD',
    CC: 'AUD',
    CD: 'CDF',
    CF: 'XAF',
    CG: 'XAF',
    CH: 'CHF',
    CI: 'XOF',
    CK: 'NZD',
    CL: 'CLP',
    CM: 'XAF',
    CN: 'CNY',
    CO: 'COP',
    CR: 'CRC',
    CU: 'CUP',
    CV: 'CVE',
    CX: 'AUD',
    CY: 'CYP',
    CZ: 'CZK',
    DE: 'EUR',
    DJ: 'DJF',
    DK: 'DKK',
    DM: 'XCD',
    DO: 'DOP',
    DZ: 'DZD',
    EC: 'ECS',
    EE: 'EEK',
    EG: 'EGP',
    EH: 'MAD',
    ER: 'ETB',
    ES: 'EUR',
    ET: 'ETB',
    FI: 'EUR',
    FJ: 'FJD',
    FK: 'FKP',
    FM: 'USD',
    FO: 'DKK',
    FR: 'EUR',
    GA: 'XAF',
    GB: 'GBP',
    GD: 'XCD',
    GE: 'GEL',
    GF: 'EUR',
    GG: 'GGP',
    GH: 'GHS',
    GI: 'GIP',
    GL: 'DKK',
    GM: 'GMD',
    GN: 'GNF',
    GP: 'EUR',
    GQ: 'XAF',
    GR: 'EUR',
    GS: 'GBP',
    GT: 'GTQ',
    GU: 'USD',
    GW: 'XOF',
    GY: 'GYD',
    HK: 'HKD',
    HM: 'AUD',
    HN: 'HNL',
    HR: 'HRK',
    HT: 'HTG',
    HU: 'HUF',
    ID: 'IDR',
    IE: 'EUR',
    IL: 'ILS',
    IM: 'GBP',
    IN: 'INR',
    IO: 'USD',
    IQ: 'IQD',
    IR: 'IRR',
    IS: 'ISK',
    IT: 'EUR',
    JE: 'GBP',
    JM: 'JMD',
    JO: 'JOD',
    JP: 'JPY',
    KE: 'KES',
    KG: 'KGS',
    KH: 'KHR',
    KI: 'AUD',
    KM: 'KMF',
    KN: 'XCD',
    KP: 'KPW',
    KR: 'KRW',
    KW: 'KWD',
    KY: 'KYD',
    KZ: 'KZT',
    LA: 'LAK',
    LB: 'LBP',
    LC: 'XCD',
    LI: 'CHF',
    LK: 'LKR',
    LR: 'LRD',
    LS: 'LSL',
    LT: 'LTL',
    LU: 'EUR',
    LV: 'LVL',
    LY: 'LYD',
    MA: 'MAD',
    MC: 'EUR',
    MD: 'MDL',
    ME: 'EUR',
    MF: 'ANG',
    MG: 'MGA',
    MH: 'USD',
    MK: 'MKD',
    ML: 'XOF',
    MM: 'MMK',
    MN: 'MNT',
    MO: 'MOP',
    MP: 'USD',
    MQ: 'EUR',
    MR: 'MRO',
    MS: 'XCD',
    MT: 'MTL',
    MU: 'MUR',
    MV: 'MVR',
    MW: 'MWK',
    MX: 'MXN',
    MY: 'MYR',
    MZ: 'MZN',
    NA: 'NAD',
    NC: 'XPF',
    NE: 'XOF',
    NF: 'AUD',
    NG: 'NGN',
    NI: 'NIO',
    NL: 'EUR',
    NO: 'NOK',
    NP: 'NPR',
    NR: 'AUD',
    NU: 'NZD',
    NZ: 'NZD',
    OM: 'OMR',
    PA: 'PAB',
    PE: 'PEN',
    PF: 'XPF',
    PG: 'PGK',
    PH: 'PHP',
    PK: 'PKR',
    PL: 'PLN',
    PM: 'EUR',
    PN: 'NZD',
    PR: 'USD',
    PS: 'JOD',
    PT: 'EUR',
    PW: 'USD',
    PY: 'PYG',
    QA: 'QAR',
    RE: 'EUR',
    RO: 'RON',
    RS: 'RSD',
    RU: 'RUB',
    RW: 'RWF',
    SA: 'SAR',
    SB: 'SBD',
    SC: 'SCR',
    SD: 'SDG',
    SE: 'SEK',
    SG: 'SGD',
    SH: 'GBP',
    SI: 'EUR',
    SJ: 'NOK',
    SK: 'SKK',
    SL: 'SLL',
    SM: 'EUR',
    SN: 'XOF',
    SO: 'SOS',
    SR: 'SRD',
    ST: 'STD',
    SV: 'SVC',
    SY: 'SYP',
    SZ: 'SZL',
    TC: 'USD',
    TD: 'XAF',
    TF: 'EUR',
    TG: 'XOF',
    TH: 'THB',
    TJ: 'TJS',
    TK: 'NZD',
    TM: 'TMT',
    TN: 'TND',
    TO: 'TOP',
    TP: 'IDR',
    TR: 'TRY',
    TT: 'TTD',
    TV: 'AUD',
    TW: 'TWD',
    TZ: 'TZS',
    UA: 'UAH',
    UG: 'UGX',
    UM: 'USD',
    USAF: 'USD',
    US: 'USD',
    UY: 'UYU',
    UZ: 'UZS',
    VA: 'EUR',
    VC: 'XCD',
    VE: 'VEF',
    VG: 'USD',
    VI: 'USD',
    VN: 'VND',
    VU: 'VUV',
    WF: 'XPF',
    WS: 'EUR',
    YE: 'YER',
    YT: 'EUR',
    ZA: 'ZAR',
    ZM: 'ZMK',
    ZW: 'ZWD',
};
const parseLocale = (locale, currency) => {
    const matches = locale.match(localeRegex);
    if (matches === null) {
        throw new LocaleError_LocaleError({ message: `Invalid locale: ${locale}` });
    }
    const language = matches.groups.language;
    let territory = matches.groups.territory;
    if (territory === undefined) {
        if (language in languageToTerritory) {
            territory = languageToTerritory[language];
        }
        else {
            territory = language.toUpperCase();
        }
    }
    if (!currency) {
        currency = defaultCurrency;
        if (territory in territoryToCurrency) {
            currency = territoryToCurrency[territory];
        }
        const modifier = matches.groups.modifier;
        if (modifier !== undefined) {
            if (modifier in modifierToCurrency) {
                currency = modifierToCurrency[modifier];
            }
            else {
                const foundCurrency = Object.values(territoryToCurrency).find((currency) => currency === modifier.toUpperCase());
                if (foundCurrency !== undefined) {
                    currency = foundCurrency;
                }
            }
        }
    }
    return {
        language,
        territory,
        currency,
    };
};
const projectCacheTtlMilliseconds = 10 * 60 * 1000;
const projectCache = {};
const productTypesCache = {};
const pickCandidate = (candidates, availableOptions) => {
    for (const candidate of candidates) {
        const found = availableOptions.find((option) => option.toLowerCase() === candidate.toLowerCase());
        if (found !== undefined) {
            return found;
        }
    }
    return undefined;
};
const pickCommercetoolsLanguage = (parsedLocale, availableLanguages) => {
    const candidates = [`${parsedLocale.language}-${parsedLocale.territory}`, parsedLocale.language];
    const foundCandidate = pickCandidate(candidates, availableLanguages);
    if (foundCandidate !== undefined) {
        return foundCandidate;
    }
    const prefix = `${parsedLocale.language.toLowerCase()}-`;
    const foundPrefix = availableLanguages.find((option) => option.toLowerCase().startsWith(prefix));
    if (foundPrefix !== undefined) {
        return foundPrefix;
    }
    return undefined;
};
const pickCommercetoolsCountry = (parsedLocale, language, availableCountries) => {
    const candidates = [parsedLocale.territory, parsedLocale.language, language];
    const foundCandidate = pickCandidate(candidates, availableCountries);
    if (foundCandidate !== undefined) {
        return foundCandidate;
    }
    return undefined;
};
const pickCommercetoolsCurrency = (parsedLocale, availableCurrencies) => {
    const candidates = [
        parsedLocale.currency,
        parseLocale(`${parsedLocale.language}_${parsedLocale.territory}`).currency,
    ];
    const foundCandidate = pickCandidate(candidates, availableCurrencies);
    if (foundCandidate !== undefined) {
        return foundCandidate;
    }
    return undefined;
};
const clientTokensStored = new Map();
class BaseApi_BaseApi {
    constructor(frontasticContext, locale, currency, request) {
        var _a, _b;
        this.defaultLocale = frontasticContext.project.defaultLocale;
        this.defaultCurrency = defaultCurrency;
        this.locale = locale !== null ? locale : this.defaultLocale;
        this.currency = currency;
        const engine = 'commercetools';
        this.clientSettings = getConfig(frontasticContext, engine, this.locale);
        this.environment = frontasticContext.environment;
        this.projectKey = this.clientSettings.projectKey;
        this.productIdField = ((_a = this.clientSettings) === null || _a === void 0 ? void 0 : _a.productIdField) || 'key';
        this.categoryIdField = ((_b = this.clientSettings) === null || _b === void 0 ? void 0 : _b.categoryIdField) || 'key';
        this.token = clientTokensStored.get(this.getClientHashKey());
        this.sessionData = request === null || request === void 0 ? void 0 : request.sessionData;
    }
    getSessionData() {
        return this.sessionData;
    }
    invalidateSessionCheckoutData() {
        this.invalidateSessionAnonymousId();
        this.invalidateSessionCheckoutToken();
    }
    invalidateSessionAnonymousId() {
        var _a;
        if ((_a = this.sessionData) === null || _a === void 0 ? void 0 : _a.anonymousId) {
            this.sessionData.anonymousId = undefined;
        }
    }
    invalidateSessionCheckoutToken() {
        var _a;
        if ((_a = this.sessionData) === null || _a === void 0 ? void 0 : _a.checkoutToken) {
            this.sessionData.checkoutToken = undefined;
        }
    }
    setSessionCheckoutToken(token) {
        this.sessionData.checkoutToken = token;
    }
    getSessionCheckoutToken() {
        var _a, _b;
        return (_b = (_a = this.sessionData) === null || _a === void 0 ? void 0 : _a.checkoutToken) !== null && _b !== void 0 ? _b : undefined;
    }
    commercetoolsTokenCache() {
        return (() => {
            const get = () => {
                if (this.token === undefined) {
                    return undefined;
                }
                const tokenStore = {
                    token: this.token.token,
                    expirationTime: this.token.expirationTime,
                    refreshToken: this.token.refreshToken,
                };
                return tokenStore;
            };
            const set = (tokenStore) => {
                this.token = {
                    token: tokenStore.token,
                    expirationTime: tokenStore.expirationTime,
                    refreshToken: tokenStore.refreshToken,
                };
                clientTokensStored.set(this.getClientHashKey(), this.token);
            };
            return { get, set };
        })();
    }
    getClientHashKey() {
        if (this.clientHashKey) {
            return this.clientHashKey;
        }
        this.clientHashKey = external_crypto_default.a
            .createHash('md5')
            .update(this.clientSettings.clientId + this.clientSettings.clientSecret + this.clientSettings.projectKey)
            .digest('hex');
        return this.clientHashKey;
    }
    getApiRoot() {
        var _a;
        let refreshToken;
        if (this.apiRoot && tokenHasExpired(this.token)) {
            this.apiRoot = undefined;
            refreshToken = (_a = this.token) === null || _a === void 0 ? void 0 : _a.refreshToken;
        }
        if (this.apiRoot) {
            return this.apiRoot;
        }
        const client = ClientFactory_ClientFactory.factor(this.clientSettings, this.environment, this.commercetoolsTokenCache(), refreshToken);
        this.apiRoot = createApiBuilderFromCtpClient(client);
        return this.apiRoot;
    }
    getAnonymousIdFromSessionData() {
        var _a;
        if ((_a = this.sessionData) === null || _a === void 0 ? void 0 : _a.anonymousId) {
            return this.sessionData.anonymousId;
        }
        this.sessionData = {
            ...this.sessionData,
            anonymousId: Guid.newGuid(),
        };
        return this.sessionData.anonymousId;
    }
    requestBuilder() {
        return this.getApiRoot().withProjectKey({ projectKey: this.projectKey });
    }
    async getCommercetoolsLocal() {
        var _a, _b, _c, _d, _e, _f;
        const parsedLocale = parseLocale(this.locale, this.currency);
        const parsedDefaultLocale = parseLocale(this.defaultLocale, this.currency);
        const project = await this.getProject();
        const language = (_b = (_a = pickCommercetoolsLanguage(parsedLocale, project.languages)) !== null && _a !== void 0 ? _a : pickCommercetoolsLanguage(parsedDefaultLocale, project.languages)) !== null && _b !== void 0 ? _b : project.languages[0];
        const country = (_d = (_c = pickCommercetoolsCountry(parsedLocale, language, project.countries)) !== null && _c !== void 0 ? _c : pickCommercetoolsCountry(parsedDefaultLocale, language, project.countries)) !== null && _d !== void 0 ? _d : project.countries[0];
        const currency = (_f = (_e = pickCommercetoolsCurrency(parsedLocale, project.currencies)) !== null && _e !== void 0 ? _e : pickCommercetoolsCurrency(parsedDefaultLocale, project.currencies)) !== null && _f !== void 0 ? _f : project.currencies[0];
        return Promise.resolve({
            language,
            country,
            currency,
        });
    }
    async getProductTypes() {
        const now = Date.now();
        if (this.projectKey in productTypesCache) {
            const cacheEntry = productTypesCache[this.projectKey];
            if (now < cacheEntry.expiryTime) {
                return cacheEntry.productTypes;
            }
        }
        return await this.requestBuilder()
            .productTypes()
            .get()
            .execute()
            .then((response) => {
            const productTypes = response.body.results;
            productTypesCache[this.projectKey] = {
                productTypes,
                expiryTime: projectCacheTtlMilliseconds * 1000 + now,
            };
            return productTypes;
        })
            .catch((error) => {
            throw new ExternalError({ status: error.code, message: error.message, body: error.body });
        });
    }
    async getProject() {
        const now = Date.now();
        if (this.projectKey in projectCache) {
            const cacheEntry = projectCache[this.projectKey];
            if (now < cacheEntry.expiryTime) {
                return cacheEntry.project;
            }
        }
        const response = await this.requestBuilder()
            .get()
            .execute()
            .catch((error) => {
            throw new ExternalError({ status: error.code, message: error.message, body: error.body });
        });
        const project = response.body;
        projectCache[this.projectKey] = {
            project,
            expiryTime: projectCacheTtlMilliseconds * 1000 + now,
        };
        return project;
    }
    async generateCheckoutToken(anonymousId, account, refreshToken) {
        if (anonymousId === undefined && account === undefined && refreshToken === undefined) {
            throw new ValidationError_ValidationError({ message: 'Either anonymousId, account, or refresh token must be defined' });
        }
        const scopes = ['manage_my_orders:' + this.clientSettings.projectKey];
        const client = ClientFactory_ClientFactory.factorWithoutAuthenticationFlow(this.clientSettings);
        const request = {
            method: 'POST',
            headers: {
                Authorization: `Basic ${Buffer.from(`${this.clientSettings.clientId}:${this.clientSettings.clientSecret}`).toString('base64')}`,
                'Content-Type': 'application/x-www-form-urlencoded',
            },
        };
        switch (true) {
            case refreshToken !== undefined:
                request.uri = `/oauth/token`;
                request.body = `grant_type=refresh_token&refresh_token=${encodeURIComponent(refreshToken)}`;
                break;
            case account !== undefined:
                request.uri = `/oauth/${this.clientSettings.projectKey}/customers/token`;
                request.body = `grant_type=password&username=${encodeURIComponent(account.email)}&password=${encodeURIComponent(account.password)}&scope=${scopes.join(' ')}`;
                break;
            case anonymousId !== undefined:
                request.uri = `/oauth/${this.clientSettings.projectKey}/anonymous/token`;
                request.body = `grant_type=client_credentials&anonymous_id=${encodeURIComponent(anonymousId)}&scope=${scopes.join(' ')}`;
                break;
        }
        await client
            .execute(request)
            .then((response) => {
            var _a;
            const token = {
                token: response.body.access_token,
                expirationTime: Token_calculateExpirationTime(response.body.expires_in),
                refreshToken: (_a = response.body.refresh_token) !== null && _a !== void 0 ? _a : refreshToken,
            };
            this.setSessionCheckoutToken(token);
        })
            .catch((error) => {
            throw new ExternalError({ status: error.code, message: error.message, body: error.body });
        });
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/mappers/AccountMapper.ts

class AccountMapper {
}
AccountMapper.commercetoolsCustomerToAccount = (commercetoolsCustomer, locale) => {
    return {
        accountId: commercetoolsCustomer.id,
        email: commercetoolsCustomer.email,
        salutation: commercetoolsCustomer === null || commercetoolsCustomer === void 0 ? void 0 : commercetoolsCustomer.salutation,
        firstName: commercetoolsCustomer === null || commercetoolsCustomer === void 0 ? void 0 : commercetoolsCustomer.firstName,
        lastName: commercetoolsCustomer === null || commercetoolsCustomer === void 0 ? void 0 : commercetoolsCustomer.lastName,
        birthday: (commercetoolsCustomer === null || commercetoolsCustomer === void 0 ? void 0 : commercetoolsCustomer.dateOfBirth) ? new Date(commercetoolsCustomer.dateOfBirth) : undefined,
        confirmed: commercetoolsCustomer.isEmailVerified,
        addresses: AccountMapper.commercetoolsCustomerToAddresses(commercetoolsCustomer, locale),
    };
};
AccountMapper.commercetoolsCustomerToAddresses = (commercetoolsCustomer, locale) => {
    const addresses = [];
    commercetoolsCustomer.addresses.forEach((commercetoolsAddress) => {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;
        addresses.push({
            addressId: commercetoolsAddress.id,
            salutation: (_a = commercetoolsAddress.salutation) !== null && _a !== void 0 ? _a : undefined,
            firstName: (_b = commercetoolsAddress.firstName) !== null && _b !== void 0 ? _b : undefined,
            lastName: (_c = commercetoolsAddress.lastName) !== null && _c !== void 0 ? _c : undefined,
            streetName: (_d = commercetoolsAddress.streetName) !== null && _d !== void 0 ? _d : undefined,
            streetNumber: (_e = commercetoolsAddress.streetNumber) !== null && _e !== void 0 ? _e : undefined,
            additionalStreetInfo: (_f = commercetoolsAddress.additionalStreetInfo) !== null && _f !== void 0 ? _f : undefined,
            additionalAddressInfo: (_g = commercetoolsAddress.additionalAddressInfo) !== null && _g !== void 0 ? _g : undefined,
            postalCode: (_h = commercetoolsAddress.postalCode) !== null && _h !== void 0 ? _h : undefined,
            city: (_j = commercetoolsAddress.city) !== null && _j !== void 0 ? _j : undefined,
            country: (_k = commercetoolsAddress.country) !== null && _k !== void 0 ? _k : undefined,
            state: (_l = commercetoolsAddress.state) !== null && _l !== void 0 ? _l : undefined,
            phone: (_m = commercetoolsAddress.phone) !== null && _m !== void 0 ? _m : undefined,
            isDefaultBillingAddress: commercetoolsAddress.id === commercetoolsCustomer.defaultBillingAddressId,
            isBillingAddress: commercetoolsCustomer.billingAddressIds.includes(commercetoolsAddress.id),
            isDefaultShippingAddress: commercetoolsAddress.id === commercetoolsCustomer.defaultShippingAddressId,
            isShippingAddress: commercetoolsCustomer.shippingAddressIds.includes(commercetoolsAddress.id),
        });
    });
    return addresses;
};
AccountMapper.addressToCommercetoolsAddress = (address) => {
    return {
        id: address.addressId,
        key: Guid.newGuid(),
        salutation: address.salutation,
        firstName: address.firstName,
        lastName: address.lastName,
        streetName: address.streetName,
        streetNumber: address.streetNumber,
        additionalStreetInfo: address.additionalStreetInfo,
        additionalAddressInfo: address.additionalAddressInfo,
        postalCode: address.postalCode,
        city: address.city,
        country: address.country,
        state: address.state,
        phone: address.phone,
    };
};

// CONCATENATED MODULE: ./commerce-commercetools/errors/AccountEmailDuplicatedError.ts

class AccountEmailDuplicatedError_AccountEmailDuplicatedError extends ExtensionError {
    constructor(options) {
        super(options);
        this.code = 'account_email_not_active_error';
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/errors/AccountAuthenticationError.ts

class AccountAuthenticationError_AccountAuthenticationError extends ExtensionError {
    constructor(options) {
        super(options);
        this.code = 'account_authentication_error';
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/apis/AccountApi.ts






class AccountApi_AccountApi extends BaseApi_BaseApi {
    constructor() {
        super(...arguments);
        this.create = async (account, cart) => {
            const locale = await this.getCommercetoolsLocal();
            const { commercetoolsAddresses, billingAddresses, shippingAddresses, defaultBillingAddress, defaultShippingAddress, } = this.extractAddresses(account);
            const customerDraft = {
                key: Guid.newGuid(),
                email: account.email,
                password: account.password,
                salutation: account === null || account === void 0 ? void 0 : account.salutation,
                firstName: account === null || account === void 0 ? void 0 : account.firstName,
                lastName: account === null || account === void 0 ? void 0 : account.lastName,
                dateOfBirth: (account === null || account === void 0 ? void 0 : account.birthday)
                    ? account.birthday.getFullYear() + '-' + account.birthday.getMonth() + '-' + account.birthday.getDate()
                    : undefined,
                isEmailVerified: account === null || account === void 0 ? void 0 : account.confirmed,
                addresses: commercetoolsAddresses.length > 0 ? commercetoolsAddresses : undefined,
                defaultBillingAddress: defaultBillingAddress,
                defaultShippingAddress: defaultShippingAddress,
                billingAddresses: billingAddresses.length > 0 ? billingAddresses : undefined,
                shippingAddresses: shippingAddresses.length > 0 ? shippingAddresses : undefined,
                anonymousCart: cart !== undefined
                    ? {
                        typeId: 'cart',
                        id: cart.cartId,
                    }
                    : undefined,
            };
            account = await this.requestBuilder()
                .customers()
                .post({
                body: customerDraft,
            })
                .execute()
                .then((response) => {
                return AccountMapper.commercetoolsCustomerToAccount(response.body.customer, locale);
            })
                .catch((error) => {
                var _a, _b, _c;
                if (error.code === 400) {
                    if (((_c = (_b = (_a = error.body) === null || _a === void 0 ? void 0 : _a.errors) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.code) === 'DuplicateField') {
                        throw new AccountEmailDuplicatedError_AccountEmailDuplicatedError({
                            message: `The account ${account.email} does already exist. ${error.message}`,
                        });
                    }
                    if (cart) {
                        return this.create(account, undefined);
                    }
                }
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
            if (!account.confirmed) {
                account.confirmationToken = await this.getConfirmationToken(account);
            }
            return account;
        };
        this.confirmEmail = async (token) => {
            const locale = await this.getCommercetoolsLocal();
            return await this.requestBuilder()
                .customers()
                .emailConfirm()
                .post({
                body: {
                    tokenValue: token,
                },
            })
                .execute()
                .then((response) => {
                return AccountMapper.commercetoolsCustomerToAccount(response.body, locale);
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.login = async (account, cart) => {
            const locale = await this.getCommercetoolsLocal();
            const accountCredentials = {
                email: account.email,
                password: account.password,
            };
            account = await this.requestBuilder()
                .login()
                .post({
                body: {
                    email: account.email,
                    password: account.password,
                    anonymousCart: cart !== undefined
                        ? {
                            typeId: 'cart',
                            id: cart.cartId,
                        }
                        : undefined,
                },
            })
                .execute()
                .then((response) => {
                return AccountMapper.commercetoolsCustomerToAccount(response.body.customer, locale);
            })
                .catch((error) => {
                var _a, _b, _c;
                if (error.code && error.code === 400) {
                    if (error.body && ((_c = (_b = (_a = error.body) === null || _a === void 0 ? void 0 : _a.errors) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.code) === 'InvalidCredentials') {
                        throw new AccountAuthenticationError_AccountAuthenticationError({
                            message: 'Failed to login account with the given credentials',
                        });
                    }
                    if (cart) {
                        return this.login(account, undefined);
                    }
                }
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
            if (!account.confirmed) {
                account.confirmationToken = await this.getConfirmationToken(account);
            }
            await this.generateCheckoutToken(undefined, accountCredentials).catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
            return account;
        };
        this.updatePassword = async (account, oldPassword, newPassword) => {
            const locale = await this.getCommercetoolsLocal();
            const accountVersion = await this.fetchAccountVersion(account);
            account = await this.requestBuilder()
                .customers()
                .password()
                .post({
                body: {
                    id: account.accountId,
                    version: accountVersion,
                    currentPassword: oldPassword,
                    newPassword: newPassword,
                },
            })
                .execute()
                .then((response) => {
                return AccountMapper.commercetoolsCustomerToAccount(response.body, locale);
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
            return account;
        };
        this.generatePasswordResetToken = async (email) => {
            return await this.requestBuilder()
                .customers()
                .passwordToken()
                .post({
                body: {
                    email: email,
                    ttlMinutes: 2 * 24 * 60,
                },
            })
                .execute()
                .then((response) => {
                return {
                    email: email,
                    token: response.body.value,
                    tokenValidUntil: new Date(response.body.expiresAt),
                };
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.resetPassword = async (token, newPassword) => {
            const locale = await this.getCommercetoolsLocal();
            return await this.requestBuilder()
                .customers()
                .passwordReset()
                .post({
                body: {
                    tokenValue: token,
                    newPassword: newPassword,
                },
            })
                .execute()
                .then((response) => {
                return AccountMapper.commercetoolsCustomerToAccount(response.body, locale);
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.update = async (account) => {
            const customerUpdateActions = [];
            if (account.firstName) {
                customerUpdateActions.push({ action: 'setFirstName', firstName: account.firstName });
            }
            if (account.lastName) {
                customerUpdateActions.push({ action: 'setLastName', lastName: account.lastName });
            }
            if (account.email) {
                customerUpdateActions.push({ action: 'changeEmail', email: account.email });
            }
            if (account.salutation) {
                customerUpdateActions.push({ action: 'setSalutation', salutation: account.salutation });
            }
            if (account.birthday) {
                customerUpdateActions.push({
                    action: 'setDateOfBirth',
                    dateOfBirth: account.birthday.getFullYear() + '-' + account.birthday.getMonth() + '-' + account.birthday.getDate(),
                });
            }
            return await this.updateAccount(account, customerUpdateActions);
        };
        this.addAddress = async (account, address) => {
            const customerUpdateActions = [];
            let addressData = AccountMapper.addressToCommercetoolsAddress(address);
            if (addressData.id !== undefined) {
                addressData = {
                    ...addressData,
                    id: undefined,
                };
            }
            if (address.isDefaultBillingAddress || address.isDefaultShippingAddress) {
                addressData = {
                    ...addressData,
                    key: Guid.newGuid(),
                };
            }
            customerUpdateActions.push({ action: 'addAddress', address: addressData });
            if (address.isDefaultBillingAddress) {
                customerUpdateActions.push({ action: 'setDefaultBillingAddress', addressKey: addressData.key });
            }
            if (address.isDefaultShippingAddress) {
                customerUpdateActions.push({ action: 'setDefaultShippingAddress', addressKey: addressData.key });
            }
            return await this.updateAccount(account, customerUpdateActions);
        };
        this.addShippingAddress = async (account, address) => {
            const customerUpdateActions = [];
            let addressData = AccountMapper.addressToCommercetoolsAddress(address);
            if (addressData.id !== undefined) {
                addressData = {
                    ...addressData,
                    id: undefined,
                };
            }
            customerUpdateActions.push({ action: 'addAddress', address: addressData });
            customerUpdateActions.push({ action: 'addShippingAddressId', addressKey: addressData.key });
            if (address.isDefaultShippingAddress) {
                customerUpdateActions.push({ action: 'setDefaultShippingAddress', addressKey: addressData.key });
            }
            return await this.updateAccount(account, customerUpdateActions);
        };
        this.addBillingAddress = async (account, address) => {
            const customerUpdateActions = [];
            let addressData = AccountMapper.addressToCommercetoolsAddress(address);
            if (addressData.id !== undefined) {
                addressData = {
                    ...addressData,
                    id: undefined,
                };
            }
            customerUpdateActions.push({ action: 'addAddress', address: addressData });
            customerUpdateActions.push({ action: 'addBillingAddressId', addressKey: addressData.key });
            if (address.isDefaultBillingAddress) {
                customerUpdateActions.push({ action: 'setDefaultBillingAddress', addressKey: addressData.key });
            }
            return await this.updateAccount(account, customerUpdateActions);
        };
        this.updateAddress = async (account, address) => {
            const customerUpdateActions = [];
            let addressData = AccountMapper.addressToCommercetoolsAddress(address);
            if (addressData.id !== undefined) {
                addressData = {
                    ...addressData,
                    id: undefined,
                };
            }
            if (address.isDefaultBillingAddress || address.isDefaultShippingAddress) {
                addressData = {
                    ...addressData,
                    key: Guid.newGuid(),
                };
            }
            customerUpdateActions.push({ action: 'changeAddress', addressId: address.addressId, address: addressData });
            if (address.isDefaultBillingAddress) {
                customerUpdateActions.push({ action: 'setDefaultBillingAddress', addressKey: addressData.key });
            }
            if (address.isDefaultShippingAddress) {
                customerUpdateActions.push({ action: 'setDefaultShippingAddress', addressKey: addressData.key });
            }
            return await this.updateAccount(account, customerUpdateActions);
        };
        this.removeAddress = async (account, address) => {
            const customerUpdateActions = [];
            const addressData = AccountMapper.addressToCommercetoolsAddress(address);
            if (addressData.id === undefined) {
                throw new Errors_ValidationError({ message: `The address passed doesn't contain an id.` });
            }
            customerUpdateActions.push({ action: 'removeAddress', addressId: address.addressId });
            return await this.updateAccount(account, customerUpdateActions);
        };
        this.setDefaultBillingAddress = async (account, address) => {
            const customerUpdateActions = [];
            const addressData = AccountMapper.addressToCommercetoolsAddress(address);
            customerUpdateActions.push({ action: 'setDefaultBillingAddress', addressId: addressData.id });
            return await this.updateAccount(account, customerUpdateActions);
        };
        this.setDefaultShippingAddress = async (account, address) => {
            const customerUpdateActions = [];
            const addressData = AccountMapper.addressToCommercetoolsAddress(address);
            customerUpdateActions.push({ action: 'setDefaultShippingAddress', addressId: addressData.id });
            return await this.updateAccount(account, customerUpdateActions);
        };
    }
    extractAddresses(account) {
        const commercetoolsAddresses = [];
        const billingAddresses = [];
        const shippingAddresses = [];
        let defaultBillingAddress;
        let defaultShippingAddress;
        account.addresses.forEach((address, key) => {
            const addressData = AccountMapper.addressToCommercetoolsAddress(address);
            commercetoolsAddresses.push(addressData);
            if (address.isDefaultBillingAddress) {
                billingAddresses.push(key);
                defaultBillingAddress = key;
            }
            if (address.isDefaultShippingAddress) {
                shippingAddresses.push(key);
                defaultShippingAddress = key;
            }
        });
        return {
            commercetoolsAddresses,
            billingAddresses,
            shippingAddresses,
            defaultBillingAddress,
            defaultShippingAddress,
        };
    }
    async fetchAccountVersion(account) {
        var _a;
        const commercetoolsAccount = await this.requestBuilder()
            .customers()
            .withId({ ID: account.accountId })
            .get()
            .execute();
        return (_a = commercetoolsAccount.body) === null || _a === void 0 ? void 0 : _a.version;
    }
    async updateAccount(account, customerUpdateActions) {
        const locale = await this.getCommercetoolsLocal();
        const accountVersion = await this.fetchAccountVersion(account);
        const customerUpdate = {
            version: accountVersion,
            actions: customerUpdateActions,
        };
        return await this.requestBuilder()
            .customers()
            .withId({ ID: account.accountId })
            .post({
            body: customerUpdate,
        })
            .execute()
            .then((response) => {
            return AccountMapper.commercetoolsCustomerToAccount(response.body, locale);
        })
            .catch((error) => {
            throw new ExternalError({ status: error.code, message: error.message, body: error.body });
        });
    }
    async getConfirmationToken(account) {
        return await this.requestBuilder()
            .customers()
            .emailToken()
            .post({
            body: {
                id: account.accountId,
                ttlMinutes: 2 * 7 * 24 * 60,
            },
        })
            .execute()
            .then((response) => {
            const accountToken = {
                email: account.email,
                token: response.body.value,
                tokenValidUntil: new Date(response.body.expiresAt),
            };
            return accountToken;
        })
            .catch((error) => {
            throw new ExternalError({ status: error.code, message: error.message, body: error.body });
        });
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/utils/CartFetcher.ts
class CartFetcher {
    static async fetchCart(cartApi, request, actionContext) {
        var _a;
        return (_a = (await this.fetchCartFromSession(cartApi, request, actionContext))) !== null && _a !== void 0 ? _a : (await cartApi.getAnonymous());
    }
    static async fetchCartFromSession(cartApi, request, actionContext) {
        var _a, _b;
        if (((_a = request.sessionData) === null || _a === void 0 ? void 0 : _a.account) !== undefined) {
            return await cartApi.getForUser(request.sessionData.account);
        }
        if (((_b = request.sessionData) === null || _b === void 0 ? void 0 : _b.cartId) !== undefined) {
            try {
                return await cartApi.getActiveCartById(request.sessionData.cartId);
            }
            catch (error) {
                console.info(`Error fetching the cart ${request.sessionData.cartId}. ${error}`);
            }
        }
        return undefined;
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/utils/Request.ts
const getPath = (request) => {
    var _a;
    return (_a = getHeader(request, 'frontastic-path')) !== null && _a !== void 0 ? _a : request.query.path;
};
const getLocale = (request) => {
    var _a, _b;
    if (request !== undefined) {
        const locale = (_a = getHeader(request, 'frontastic-locale')) !== null && _a !== void 0 ? _a : request.query.locale;
        if (locale !== undefined) {
            return (_b = getHeader(request, 'frontastic-locale')) !== null && _b !== void 0 ? _b : request.query.locale;
        }
    }
    return null;
};
const getCurrency = (request) => {
    var _a, _b;
    if (request !== undefined) {
        const currency = (_a = getHeader(request, 'frontastic-currency')) !== null && _a !== void 0 ? _a : request.query['currency'];
        if (currency !== undefined) {
            return (_b = getHeader(request, 'frontastic-currency')) !== null && _b !== void 0 ? _b : request.query['currency'];
        }
    }
    return null;
};
const getCountry = (locale) => {
    return { de_DE: 'DE', en_US: 'US', 'de_DE@EUR': 'DE', 'en_US@USD': 'US' }[locale];
};
const getHeader = (request, header) => {
    if (header in request.headers) {
        const foundHeader = request.headers[header];
        if (Array.isArray(foundHeader)) {
            return foundHeader[0];
        }
        return foundHeader;
    }
    return null;
};

// EXTERNAL MODULE: ./node_modules/@sendgrid/mail/index.js
var mail = __webpack_require__(339);
var mail_default = /*#__PURE__*/__webpack_require__.n(mail);

// CONCATENATED MODULE: ./email-sendgrid/utils/Price.ts
const formatPrice = (money, locale) => {
    return new Intl.NumberFormat(locale, {
        style: 'currency',
        currency: money.currencyCode,
        minimumFractionDigits: money.fractionDigits,
        maximumFractionDigits: money.fractionDigits,
    }).format(money.centAmount / 100);
};

// CONCATENATED MODULE: ./email-sendgrid/utils/Context.ts
const Context_projectConfigurationOverrides = {};
const Context_isDevEnv = (context) => {
    return context.environment === 'development' || context.environment === 'dev';
};
const Context_getFromProjectConfig = (key, context) => {
    if (Context_isDevEnv(context) && Context_projectConfigurationOverrides[key]) {
        return Context_projectConfigurationOverrides[key];
    }
    return context.projectConfiguration[key];
};

// CONCATENATED MODULE: ./email-sendgrid/apis/EmailApi.ts



class EmailApi_EmailApi {
    constructor(frontasticContext, locale) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        this.client = mail_default.a;
        let apiKey = Context_getFromProjectConfig('EXTENSION_SENDGRID_API_KEY', frontasticContext);
        if (!apiKey) {
            apiKey = (_b = (_a = frontasticContext.project.configuration) === null || _a === void 0 ? void 0 : _a.sendgrid) === null || _b === void 0 ? void 0 : _b.apiKey;
        }
        this.client.setApiKey(apiKey);
        this.locale = locale;
        this.configuration = {
            sender: Context_getFromProjectConfig('EXTENSION_SENDGRID_SENDER', frontasticContext),
            clientHost: Context_getFromProjectConfig('EXTENSION_SENDGRID_CLIENT_HOST', frontasticContext),
            templateIds: Context_getFromProjectConfig('EXTENSION_SENDGRID_TEMPLATE_IDS', frontasticContext),
        };
        if (!this.configuration.sender) {
            this.configuration.sender = (_d = (_c = frontasticContext.project.configuration) === null || _c === void 0 ? void 0 : _c.sendgrid) === null || _d === void 0 ? void 0 : _d.sender;
        }
        if (!this.configuration.clientHost) {
            this.configuration.clientHost = (_f = (_e = frontasticContext.project.configuration) === null || _e === void 0 ? void 0 : _e.sendgrid) === null || _f === void 0 ? void 0 : _f.clientHost;
        }
        if (!this.configuration.templateIds) {
            this.configuration.templateIds = (_h = (_g = frontasticContext.project.configuration) === null || _g === void 0 ? void 0 : _g.sendgrid) === null || _h === void 0 ? void 0 : _h.templateIds;
        }
    }
    async sendAccountVerificationEmail(customer) {
        await this.client.send({
            from: this.configuration.sender,
            personalizations: [
                {
                    to: [customer.email],
                    dynamicTemplateData: {
                        customer,
                        url: `${this.configuration.clientHost}/verify?token=${customer.confirmationToken.token}`,
                    },
                },
            ],
            templateId: this.configuration.templateIds.accountVerification,
        });
    }
    async sendPasswordResetEmail(customer, token) {
        await this.client.send({
            from: this.configuration.sender,
            personalizations: [
                {
                    to: [customer.email],
                    dynamicTemplateData: {
                        customer,
                        url: `${this.configuration.clientHost}/reset-password?token=${token}`,
                    },
                },
            ],
            templateId: this.configuration.templateIds.passwordReset,
        });
    }
    async sendOrderConfirmationEmail(order) {
        var _a, _b;
        const locale = (_a = this.locale) === null || _a === void 0 ? void 0 : _a.replace('_', '-');
        await this.client.send({
            from: this.configuration.sender,
            personalizations: [
                {
                    to: [order.email],
                    dynamicTemplateData: {
                        order: {
                            ...order,
                            formattedTotalPrice: formatPrice(order.sum, locale),
                            lineItems: order.lineItems.map((lineItem) => ({
                                ...lineItem,
                                formattedPrice: formatPrice(lineItem.totalPrice, locale),
                                imageUrl: lineItem.variant.images[0],
                            })),
                            shippingInfo: {
                                ...order.shippingInfo,
                                formattedPrice: formatPrice((_b = order.shippingInfo) === null || _b === void 0 ? void 0 : _b.price, locale),
                            },
                        },
                    },
                },
            ],
            templateId: this.configuration.templateIds.orderConfirmation,
        });
    }
    async sendWelcomeCustomerEmail(customer) {
        await this.client.send({
            from: this.configuration.sender,
            personalizations: [
                {
                    to: [customer.email],
                    dynamicTemplateData: { customer },
                },
            ],
            templateId: this.configuration.templateIds.welcomeCustomer,
        });
    }
    async sendAccountDeletionEmail(customer) {
        await this.client.send({
            from: this.configuration.sender,
            personalizations: [
                {
                    to: [customer.email],
                    dynamicTemplateData: { customer },
                },
            ],
            templateId: this.configuration.templateIds.accountDeletion,
        });
    }
}

// EXTERNAL MODULE: ./node_modules/nodemailer/lib/nodemailer.js
var nodemailer = __webpack_require__(340);

// CONCATENATED MODULE: ./email-smtp/errors/SmtpConfigurationError.ts

class SmtpConfigurationError_SmtpConfigurationError extends ExtensionError {
    constructor(options) {
        super(options);
        this.code = 'smtp_configuration_error';
    }
}

// CONCATENATED MODULE: ./email-smtp/utils/get-customer-name.ts
const getCustomerName = (customer) => {
    if (customer.firstName && customer.lastName) {
        return `${customer.firstName} ${customer.lastName}`;
    }
    if (customer.firstName) {
        return customer.firstName;
    }
    return '';
};
/* harmony default export */ var get_customer_name = (getCustomerName);

// CONCATENATED MODULE: ./email-smtp/utils/Context.ts
const utils_Context_projectConfigurationOverrides = {};
const utils_Context_isDevEnv = (context) => {
    return context.environment === 'development' || context.environment === 'dev';
};
const utils_Context_getFromProjectConfig = (key, context) => {
    if (utils_Context_isDevEnv(context) && utils_Context_projectConfigurationOverrides[key]) {
        return utils_Context_projectConfigurationOverrides[key];
    }
    return context.projectConfiguration[key];
};

// CONCATENATED MODULE: ./email-smtp/apis/EmailApi.ts




class apis_EmailApi_EmailApi {
    constructor(frontasticContext, locale) {
        const smtpConfig = this.getSmtpConfig(frontasticContext);
        this.client_host = smtpConfig.client_host;
        this.sender = smtpConfig.sender;
        this.locale = locale;
        this.transport = nodemailer["createTransport"]({
            host: smtpConfig.host,
            port: +smtpConfig.port,
            secure: smtpConfig.port == 465,
            auth: {
                user: smtpConfig.user,
                pass: smtpConfig.password,
            },
        });
    }
    getSmtpConfigValue(key, context) {
        var _a, _b;
        let value = utils_Context_getFromProjectConfig(`EXTENSION_SMTP_${key}`, context);
        if (!value) {
            value = (_b = (_a = context.project.configuration) === null || _a === void 0 ? void 0 : _a.smtp) === null || _b === void 0 ? void 0 : _b[key.toLowerCase()];
        }
        if (!value) {
            throw new SmtpConfigurationError_SmtpConfigurationError({
                message: `The SMTP configuration option "${key}" is missing in project "${context.project.projectId}"`,
            });
        }
        return value;
    }
    getSmtpConfig(context) {
        const smtpConfig = {
            host: this.getSmtpConfigValue('HOST', context),
            port: this.getSmtpConfigValue('PORT', context),
            encryption: this.getSmtpConfigValue('ENCRYPTION', context),
            user: this.getSmtpConfigValue('USER', context),
            password: this.getSmtpConfigValue('PASSWORD', context),
            sender: this.getSmtpConfigValue('SENDER', context),
            client_host: this.getSmtpConfigValue('CLIENT_HOST', context),
        };
        return smtpConfig;
    }
    async sendEmail(data) {
        const from = this.sender;
        const { to, text, html, subject } = data;
        return await this.transport.sendMail({ from, to, subject, text, html });
    }
    async sendAccountVerificationEmail(customer) {
        var _a;
        if (!((_a = customer.confirmationToken) === null || _a === void 0 ? void 0 : _a.token)) {
            console.error('No valid confirmation token');
            return;
        }
        const verificationUrl = `${this.client_host}/verify?token=${customer.confirmationToken.token}`;
        const htmlVerificationMessage = `
      <h1>Thanks for your registration!</h1>
      <p style="margin-top: 10px;color:gray;">Please activate your account by clicking the below link</p>
      <a href="${verificationUrl}">${verificationUrl}</a>
    `;
        await this.sendEmail({
            to: customer.email,
            subject: 'Account Verification',
            html: htmlVerificationMessage,
        });
    }
    async sendPasswordResetEmail(customer, token) {
        if (!token) {
            console.error('No valid reset token');
            return;
        }
        const url = `${this.client_host}/reset-password?token=${token}`;
        const htmlResetPasswordMessage = `
      <h1>You requested a password reset!</h1>
      <p style="margin-top: 10px;color:gray;">Please click the link below to proceed.</p>
      <a href="${url}">${url}</a>
    `;
        await this.sendEmail({
            to: customer.email,
            subject: 'Password Reset',
            html: htmlResetPasswordMessage,
        });
    }
    async sendOrderConfirmationEmail(order) {
        const htmlPaymentConfirmationMessage = `
      <h1>Thanks for your order!</h1>
      <p style="margin-top: 10px;color:gray;">Your payment has been confirmed.</p>
    `;
        await this.sendEmail({
            to: order.email,
            subject: 'Order confirmed',
            html: htmlPaymentConfirmationMessage,
        });
    }
    async sendWelcomeCustomerEmail(customer) {
        const customerName = get_customer_name(customer);
        const htmlWelcomeCustomerMessage = `
      <h1>Hello ${customerName}</h1>
      <p>We are so happy to have you here!</p>
    `;
        await this.sendEmail({
            to: customer.email,
            subject: 'Welcome',
            html: htmlWelcomeCustomerMessage,
        });
    }
    async sendAccountDeletionEmail(customer) {
        const customerName = get_customer_name(customer);
        const htmlWelcomeCustomerMessage = `
      <h1>Hello ${customerName}</h1>
      <p>Your account has been deleted successfully!</p>
    `;
        await this.sendEmail({
            to: customer.email,
            subject: 'Account deleted',
            html: htmlWelcomeCustomerMessage,
        });
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/utils/EmailApiFactory.ts


class EmailApiFactory_EmailApiFactory {
    static getSmtpApi(context, locale) {
        return new apis_EmailApi_EmailApi(context, locale);
    }
    static getSendgridApi(context, locale) {
        return new EmailApi_EmailApi(context, locale);
    }
    static getDefaultApi(context, locale) {
        return this.getSmtpApi(context, locale);
    }
}

// CONCATENATED MODULE: ../types/cart/Order.ts
var ShipmentState;
(function (ShipmentState) {
    ShipmentState["BACKORDER"] = "Backorder";
    ShipmentState["DELAYED"] = "Delayed";
    ShipmentState["DELIVERED"] = "Delivered";
    ShipmentState["PARTIAL"] = "Partial";
    ShipmentState["PENDING"] = "Pending";
    ShipmentState["READY"] = "Ready";
    ShipmentState["SHIPPED"] = "Shipped";
})(ShipmentState || (ShipmentState = {}));
var OrderState;
(function (OrderState) {
    OrderState["Cancelled"] = "Cancelled";
    OrderState["Complete"] = "Complete";
    OrderState["Confirmed"] = "Confirmed";
    OrderState["Open"] = "Open";
})(OrderState || (OrderState = {}));

// CONCATENATED MODULE: ../types/product/FilterField.ts
var FilterFieldTypes;
(function (FilterFieldTypes) {
    FilterFieldTypes["BOOLEAN"] = "boolean";
    FilterFieldTypes["ENUM"] = "enum";
    FilterFieldTypes["TEXT"] = "text";
    FilterFieldTypes["NUMBER"] = "number";
    FilterFieldTypes["MONEY"] = "money";
})(FilterFieldTypes || (FilterFieldTypes = {}));

// CONCATENATED MODULE: ../types/result/Facet.ts
var FacetTypes;
(function (FacetTypes) {
    FacetTypes["BOOLEAN"] = "boolean";
    FacetTypes["TERM"] = "term";
    FacetTypes["RANGE"] = "range";
})(FacetTypes || (FacetTypes = {}));

// CONCATENATED MODULE: ../types/query/Filter.ts
var FilterTypes;
(function (FilterTypes) {
    FilterTypes["BOOLEAN"] = "boolean";
    FilterTypes["TERM"] = "term";
    FilterTypes["RANGE"] = "range";
})(FilterTypes || (FilterTypes = {}));

// CONCATENATED MODULE: ./commerce-commercetools/utils/LocalizedValue.ts
class LocalizedValue {
}
LocalizedValue.getLocalizedValue = (locale, defaultLocale, productValue) => {
    if (!productValue) {
        return '';
    }
    if (productValue[locale.language]) {
        return productValue[locale.language];
    }
    if (productValue[locale.language]) {
        return productValue[locale.language];
    }
    if (productValue[defaultLocale]) {
        return productValue[defaultLocale];
    }
    return productValue[0];
};

// CONCATENATED MODULE: ./commerce-commercetools/mappers/ProductMapper.ts





const TypeMap = new Map([
    ['boolean', FilterFieldTypes.BOOLEAN],
    ['enum', FilterFieldTypes.ENUM],
    ['text', FilterFieldTypes.TEXT],
    ['number', FilterFieldTypes.NUMBER],
    ['lenum', FilterFieldTypes.ENUM],
    ['ltext', FilterFieldTypes.TEXT],
    ['money', FilterFieldTypes.MONEY],
]);
class ProductMapper_ProductMapper {
    static commercetoolsCategoriesToTreeCategory(commercetoolsCategories, categoryIdField, locale) {
        var _a;
        const nodes = {};
        for (const category of commercetoolsCategories) {
            category.subCategories = [];
            nodes[category.id] = category;
        }
        for (const category of commercetoolsCategories) {
            if (!((_a = category.parent) === null || _a === void 0 ? void 0 : _a.id))
                continue;
            nodes[category.parent.id].subCategories.push(category);
        }
        return commercetoolsCategories
            .filter((category) => category.ancestors.length === 0)
            .map((category) => this.commercetoolsCategoryToCategory(category, categoryIdField, locale));
    }
    static extractAttributeValue(commercetoolsAttributeValue, locale) {
        if (commercetoolsAttributeValue['key'] !== undefined && commercetoolsAttributeValue['label'] !== undefined) {
            return {
                key: commercetoolsAttributeValue['key'],
                label: ProductMapper_ProductMapper.extractAttributeValue(commercetoolsAttributeValue['label'], locale),
            };
        }
        if (commercetoolsAttributeValue instanceof Array) {
            return commercetoolsAttributeValue.map((value) => ProductMapper_ProductMapper.extractAttributeValue(value, locale));
        }
        return commercetoolsAttributeValue[locale.language] || commercetoolsAttributeValue;
    }
    static commercetoolsProductDiscountValueToProductDiscountValue(commercetoolsProductDiscountValue, locale) {
        var _a;
        const productDiscountValue = {
            type: commercetoolsProductDiscountValue.value.type,
            description: (_a = commercetoolsProductDiscountValue.description) === null || _a === void 0 ? void 0 : _a[locale.language],
        };
        if (commercetoolsProductDiscountValue.value.type == 'relative') {
            Object.assign(productDiscountValue, {
                permyriad: commercetoolsProductDiscountValue.value.permyriad,
            });
        }
        if (commercetoolsProductDiscountValue.value.type == 'absolute') {
            const discountValues = commercetoolsProductDiscountValue.value.money.map((money) => {
                return this.commercetoolsMoneyToMoney(money);
            });
            Object.assign(productDiscountValue, {
                value: discountValues,
            });
        }
        return [productDiscountValue];
    }
    static extractPriceAndDiscounts(commercetoolsVariant, locale) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3;
        let price;
        let discountedPrice;
        let discounts;
        if (commercetoolsVariant === null || commercetoolsVariant === void 0 ? void 0 : commercetoolsVariant.scopedPrice) {
            price = this.commercetoolsMoneyToMoney((_a = commercetoolsVariant.scopedPrice) === null || _a === void 0 ? void 0 : _a.value);
            if ((_c = (_b = commercetoolsVariant.scopedPrice) === null || _b === void 0 ? void 0 : _b.discounted) === null || _c === void 0 ? void 0 : _c.value) {
                discountedPrice = this.commercetoolsMoneyToMoney((_e = (_d = commercetoolsVariant.scopedPrice) === null || _d === void 0 ? void 0 : _d.discounted) === null || _e === void 0 ? void 0 : _e.value);
            }
            if ((_h = (_g = (_f = commercetoolsVariant.scopedPrice) === null || _f === void 0 ? void 0 : _f.discounted) === null || _g === void 0 ? void 0 : _g.discount) === null || _h === void 0 ? void 0 : _h.obj) {
                discounts = this.commercetoolsProductDiscountValueToProductDiscountValue((_l = (_k = (_j = commercetoolsVariant.scopedPrice) === null || _j === void 0 ? void 0 : _j.discounted) === null || _k === void 0 ? void 0 : _k.discount) === null || _l === void 0 ? void 0 : _l.obj, locale);
            }
            return { price, discountedPrice, discounts };
        }
        if (commercetoolsVariant === null || commercetoolsVariant === void 0 ? void 0 : commercetoolsVariant.price) {
            price = this.commercetoolsMoneyToMoney((_m = commercetoolsVariant.price) === null || _m === void 0 ? void 0 : _m.value);
            if ((_p = (_o = commercetoolsVariant.price) === null || _o === void 0 ? void 0 : _o.discounted) === null || _p === void 0 ? void 0 : _p.value) {
                discountedPrice = this.commercetoolsMoneyToMoney((_r = (_q = commercetoolsVariant.price) === null || _q === void 0 ? void 0 : _q.discounted) === null || _r === void 0 ? void 0 : _r.value);
            }
            if ((_u = (_t = (_s = commercetoolsVariant.price) === null || _s === void 0 ? void 0 : _s.discounted) === null || _t === void 0 ? void 0 : _t.discount) === null || _u === void 0 ? void 0 : _u.obj) {
                discounts = this.commercetoolsProductDiscountValueToProductDiscountValue((_x = (_w = (_v = commercetoolsVariant.price) === null || _v === void 0 ? void 0 : _v.discounted) === null || _w === void 0 ? void 0 : _w.discount) === null || _x === void 0 ? void 0 : _x.obj, locale);
            }
            return { price, discountedPrice, discounts };
        }
        if (commercetoolsVariant === null || commercetoolsVariant === void 0 ? void 0 : commercetoolsVariant.prices) {
            let commercetoolsPrice = commercetoolsVariant === null || commercetoolsVariant === void 0 ? void 0 : commercetoolsVariant.prices.find((price) => {
                return (!price.hasOwnProperty('channel') &&
                    !price.hasOwnProperty('customerGroup') &&
                    price.country === locale.country &&
                    price.value.currencyCode === locale.currency);
            });
            if (!commercetoolsPrice) {
                commercetoolsPrice = commercetoolsVariant === null || commercetoolsVariant === void 0 ? void 0 : commercetoolsVariant.prices.find((price) => {
                    return (!price.hasOwnProperty('channel') &&
                        !price.hasOwnProperty('customerGroup') &&
                        !price.hasOwnProperty('country') &&
                        price.value.currencyCode === locale.currency);
                });
            }
            price = this.commercetoolsMoneyToMoney(commercetoolsPrice === null || commercetoolsPrice === void 0 ? void 0 : commercetoolsPrice.value);
            if ((_y = commercetoolsPrice === null || commercetoolsPrice === void 0 ? void 0 : commercetoolsPrice.discounted) === null || _y === void 0 ? void 0 : _y.value) {
                discountedPrice = this.commercetoolsMoneyToMoney((_z = commercetoolsPrice === null || commercetoolsPrice === void 0 ? void 0 : commercetoolsPrice.discounted) === null || _z === void 0 ? void 0 : _z.value);
            }
            if ((_1 = (_0 = commercetoolsPrice === null || commercetoolsPrice === void 0 ? void 0 : commercetoolsPrice.discounted) === null || _0 === void 0 ? void 0 : _0.discount) === null || _1 === void 0 ? void 0 : _1.obj) {
                discounts = this.commercetoolsProductDiscountValueToProductDiscountValue((_3 = (_2 = commercetoolsPrice === null || commercetoolsPrice === void 0 ? void 0 : commercetoolsPrice.discounted) === null || _2 === void 0 ? void 0 : _2.discount) === null || _3 === void 0 ? void 0 : _3.obj, locale);
            }
            return { price, discountedPrice, discounts };
        }
        return { price, discountedPrice, discounts };
    }
    static commercetoolsMoneyToMoney(commercetoolsMoney) {
        if (commercetoolsMoney === undefined) {
            return undefined;
        }
        return {
            fractionDigits: commercetoolsMoney.hasOwnProperty('fractionDigits') &&
                commercetoolsMoney.fractionDigits !== undefined
                ? commercetoolsMoney.fractionDigits
                : 2,
            centAmount: commercetoolsMoney.centAmount,
            currencyCode: commercetoolsMoney.currencyCode,
        };
    }
    static commercetoolsProductTypesToFilterFields(commercetoolsProductTypes, locale) {
        const filterFields = [];
        commercetoolsProductTypes === null || commercetoolsProductTypes === void 0 ? void 0 : commercetoolsProductTypes.forEach((productType) => {
            var _a;
            (_a = productType.attributes) === null || _a === void 0 ? void 0 : _a.forEach((attribute) => {
                if (!attribute.isSearchable) {
                    return;
                }
                filterFields.push(ProductMapper_ProductMapper.commercetoolsAttributeDefinitionToFilterField(attribute, locale));
            });
        });
        return filterFields;
    }
    static commercetoolsAttributeDefinitionToFilterField(commercetoolsAttributeDefinition, locale) {
        var _a, _b, _c, _d, _e;
        let commercetoolsAttributeTypeName = commercetoolsAttributeDefinition.type.name;
        let commercetoolsAttributeValues = ((_a = commercetoolsAttributeDefinition.type) === null || _a === void 0 ? void 0 : _a.hasOwnProperty('values'))
            ? commercetoolsAttributeDefinition.type.values
            : [];
        if (commercetoolsAttributeTypeName === 'set') {
            const elementType = commercetoolsAttributeDefinition.type.elementType;
            commercetoolsAttributeTypeName = elementType.name;
            commercetoolsAttributeValues = (elementType === null || elementType === void 0 ? void 0 : elementType.hasOwnProperty('values'))
                ? elementType.values
                : [];
        }
        const filterFieldValues = [];
        for (const value of commercetoolsAttributeValues) {
            filterFieldValues.push({
                value: value.key,
                name: commercetoolsAttributeTypeName === 'enum' ? value.label : (_c = (_b = value.label) === null || _b === void 0 ? void 0 : _b[locale.language]) !== null && _c !== void 0 ? _c : undefined,
            });
        }
        return {
            field: `variants.attributes.${commercetoolsAttributeDefinition.name}`,
            type: TypeMap.has(commercetoolsAttributeTypeName)
                ? TypeMap.get(commercetoolsAttributeTypeName)
                : commercetoolsAttributeTypeName,
            label: (_e = (_d = commercetoolsAttributeDefinition.label) === null || _d === void 0 ? void 0 : _d[locale.language]) !== null && _e !== void 0 ? _e : commercetoolsAttributeDefinition.name,
            values: filterFieldValues.length > 0 ? filterFieldValues : undefined,
        };
    }
    static commercetoolsProductTypesToFacetDefinitions(commercetoolsProductTypes, locale) {
        const facetDefinitionsIndex = {};
        const facetDefinitions = [];
        commercetoolsProductTypes === null || commercetoolsProductTypes === void 0 ? void 0 : commercetoolsProductTypes.forEach((productType) => {
            var _a;
            (_a = productType.attributes) === null || _a === void 0 ? void 0 : _a.forEach((attribute) => {
                if (!attribute.isSearchable) {
                    return;
                }
                const facetDefinition = {
                    attributeType: attribute.type.name,
                    attributeId: `variants.attributes.${attribute.name}`,
                    attributeLabel: attribute.label[locale.language] !== undefined && attribute.label[locale.language].length > 0
                        ? attribute.label[locale.language]
                        : attribute.name,
                };
                if (facetDefinition.attributeId)
                    facetDefinitionsIndex[facetDefinition.attributeId] = facetDefinition;
            });
        });
        for (const [attributeId, facetDefinition] of Object.entries(facetDefinitionsIndex)) {
            facetDefinitions.push(facetDefinition);
        }
        return facetDefinitions;
    }
    static facetDefinitionsToCommercetoolsQueryArgFacets(facetDefinitions, locale) {
        const queryArgFacets = [];
        facetDefinitions === null || facetDefinitions === void 0 ? void 0 : facetDefinitions.forEach((facetDefinition) => {
            let facet;
            switch (facetDefinition.attributeType) {
                case 'money':
                    facet = `${facetDefinition.attributeId}.centAmount:range (0 to *)`;
                    break;
                case 'enum':
                    facet = `${facetDefinition.attributeId}.label`;
                    break;
                case 'lenum':
                    facet = `${facetDefinition.attributeId}.label.${locale.language}`;
                    break;
                case 'ltext':
                    facet = `${facetDefinition.attributeId}.${locale.language}`;
                    break;
                case 'number':
                case 'boolean':
                case 'text':
                case 'reference':
                default:
                    facet = facetDefinition.attributeId;
                    break;
            }
            queryArgFacets.push(`${facet} as ${facetDefinition.attributeId}`);
        });
        return queryArgFacets;
    }
    static facetDefinitionsToFilterFacets(queryFacets, facetDefinitions, locale) {
        const filterFacets = [];
        const typeLookup = {};
        if (facetDefinitions.length === 0) {
            return filterFacets;
        }
        facetDefinitions.forEach((facetDefinition) => {
            if (facetDefinition.attributeId)
                typeLookup[facetDefinition.attributeId] = facetDefinition.attributeType || '';
        });
        queryFacets.forEach((queryFacet) => {
            var _a, _b, _c, _d;
            if (!(typeLookup === null || typeLookup === void 0 ? void 0 : typeLookup.hasOwnProperty(queryFacet.identifier))) {
                return;
            }
            switch (typeLookup[queryFacet.identifier]) {
                case 'money':
                    filterFacets.push(`${queryFacet.identifier}.centAmount:range (${queryFacet.min} to ${queryFacet.max})`);
                    break;
                case 'enum':
                    filterFacets.push(`${queryFacet.identifier}.label:"${(_a = queryFacet.terms) === null || _a === void 0 ? void 0 : _a.join('","')}"`);
                    break;
                case 'lenum':
                    filterFacets.push(`${queryFacet.identifier}.label.${locale.language}:"${(_b = queryFacet.terms) === null || _b === void 0 ? void 0 : _b.join('","')}"`);
                    break;
                case 'ltext':
                    filterFacets.push(`${queryFacet.identifier}.${locale.language}:"${(_c = queryFacet.terms) === null || _c === void 0 ? void 0 : _c.join('","')}"`);
                    break;
                case 'number':
                case 'boolean':
                case 'text':
                case 'reference':
                default:
                    if (queryFacet.type === FilterTypes.TERM) {
                        filterFacets.push(`${queryFacet.identifier}:"${(_d = queryFacet.terms) === null || _d === void 0 ? void 0 : _d.join('","')}"`);
                        break;
                    }
                    if (queryFacet.type === FilterTypes.BOOLEAN) {
                        filterFacets.push(`${queryFacet.identifier}:"${queryFacet.terms[0] === 'T' ? 'true' : 'false'}"`);
                        break;
                    }
                    filterFacets.push(`${queryFacet.identifier}:range (${queryFacet.min} to ${queryFacet.max})`);
                    break;
            }
        });
        return filterFacets;
    }
    static commercetoolsFacetResultsToFacets(facetDefinitions, commercetoolsFacetResults, productQuery, locale) {
        const facets = [];
        let facetLabel;
        for (const [facetKey, facetResult] of Object.entries(commercetoolsFacetResults)) {
            const facetQuery = this.findFacetQuery(productQuery, facetKey);
            facetDefinitions.filter((facet) => {
                if (facet.attributeId === facetKey) {
                    facetLabel = facet.attributeLabel;
                }
            });
            switch (facetResult.type) {
                case 'range':
                    facets.push(ProductMapper_ProductMapper.commercetoolsRangeFacetResultToRangeFacet(facetLabel, facetKey, facetResult, facetQuery));
                    break;
                case 'terms':
                    if (facetResult.dataType === 'number') {
                        facets.push(ProductMapper_ProductMapper.commercetoolsTermNumberFacetResultToRangeFacet(facetLabel, facetKey, facetResult, facetQuery));
                        break;
                    }
                    facets.push(ProductMapper_ProductMapper.commercetoolsTermFacetResultToTermFacet(facetLabel, facetKey, facetResult, facetQuery));
                    break;
                case 'filter':
                default:
                    break;
            }
        }
        return facets;
    }
    static commercetoolsRangeFacetResultToRangeFacet(facetLabel, facetKey, facetResult, facetQuery) {
        const rangeFacet = {
            type: FacetTypes.RANGE,
            identifier: facetKey,
            label: facetLabel,
            key: facetKey,
            min: facetResult.ranges[0].min,
            max: facetResult.ranges[0].max,
            selected: facetQuery !== undefined,
            minSelected: facetQuery ? facetQuery.min : undefined,
            maxSelected: facetQuery ? facetQuery.max : undefined,
        };
        return rangeFacet;
    }
    static commercetoolsTermFacetResultToTermFacet(facetLabel, facetKey, facetResult, facetQuery) {
        const termFacet = {
            type: facetResult.dataType === 'boolean' ? FacetTypes.BOOLEAN : FacetTypes.TERM,
            identifier: facetKey,
            label: facetLabel,
            key: facetKey,
            selected: facetQuery !== undefined,
            terms: facetResult.terms.map((facetResultTerm) => {
                var _a;
                const term = {
                    identifier: facetResultTerm.term.toString(),
                    label: facetResultTerm.term.toString(),
                    count: facetResultTerm.count,
                    key: facetResultTerm.term.toString(),
                    selected: facetQuery !== undefined && ((_a = facetQuery.terms) === null || _a === void 0 ? void 0 : _a.includes(facetResultTerm.term.toString())),
                };
                return term;
            }),
        };
        return termFacet;
    }
    static commercetoolsTermNumberFacetResultToRangeFacet(facetLabel, facetKey, facetResult, facetQuery) {
        var _a, _b;
        const rangeFacet = {
            type: FacetTypes.RANGE,
            identifier: facetKey,
            label: facetLabel,
            key: facetKey,
            count: facetResult.total,
            min: (_a = Math.min(...facetResult.terms.map((facetResultTerm) => facetResultTerm.term))) !== null && _a !== void 0 ? _a : Number.MIN_SAFE_INTEGER,
            max: (_b = Math.max(...facetResult.terms.map((facetResultTerm) => facetResultTerm.term))) !== null && _b !== void 0 ? _b : Number.MAX_SAFE_INTEGER,
        };
        if (facetQuery) {
            rangeFacet.selected = true;
            rangeFacet.minSelected = facetQuery.min;
            rangeFacet.maxSelected = facetQuery.max;
        }
        return rangeFacet;
    }
    static calculatePreviousCursor(offset, count) {
        return offset - count >= 0 ? `offset:${offset - count}` : undefined;
    }
    static calculateNextCursor(offset, count, total) {
        return offset + count < total ? `offset:${offset + count}` : undefined;
    }
    static findFacetQuery(productQuery, facetKey) {
        if (productQuery.facets !== undefined) {
            for (const facet of productQuery.facets) {
                if (facet.identifier === facetKey) {
                    return facet;
                }
            }
        }
        return undefined;
    }
}
ProductMapper_ProductMapper.commercetoolsProductProjectionToProduct = (commercetoolsProduct, productIdField, categoryIdField, locale, defaultLocale) => {
    var _a;
    const product = {
        productId: commercetoolsProduct === null || commercetoolsProduct === void 0 ? void 0 : commercetoolsProduct[productIdField],
        version: (_a = commercetoolsProduct === null || commercetoolsProduct === void 0 ? void 0 : commercetoolsProduct.version) === null || _a === void 0 ? void 0 : _a.toString(),
        name: LocalizedValue.getLocalizedValue(locale, defaultLocale, commercetoolsProduct === null || commercetoolsProduct === void 0 ? void 0 : commercetoolsProduct.name),
        slug: LocalizedValue.getLocalizedValue(locale, defaultLocale, commercetoolsProduct === null || commercetoolsProduct === void 0 ? void 0 : commercetoolsProduct.slug),
        description: LocalizedValue.getLocalizedValue(locale, defaultLocale, commercetoolsProduct === null || commercetoolsProduct === void 0 ? void 0 : commercetoolsProduct.description),
        categories: ProductMapper_ProductMapper.commercetoolsCategoryReferencesToCategories(commercetoolsProduct.categories, categoryIdField, locale),
        variants: ProductMapper_ProductMapper.commercetoolsProductProjectionToVariants(commercetoolsProduct, locale),
    };
    product._url = ProductRouter_ProductRouter.generateUrlFor(product);
    return product;
};
ProductMapper_ProductMapper.commercetoolsProductProjectionToVariants = (commercetoolsProduct, locale) => {
    const variants = [];
    if (commercetoolsProduct === null || commercetoolsProduct === void 0 ? void 0 : commercetoolsProduct.masterVariant) {
        variants.push(ProductMapper_ProductMapper.commercetoolsProductVariantToVariant(commercetoolsProduct.masterVariant, locale));
    }
    for (let i = 0; i < commercetoolsProduct.variants.length; i++) {
        variants.push(ProductMapper_ProductMapper.commercetoolsProductVariantToVariant(commercetoolsProduct.variants[i], locale));
    }
    return variants;
};
ProductMapper_ProductMapper.commercetoolsProductVariantToVariant = (commercetoolsVariant, locale) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j;
    const attributes = commercetoolsVariant.attributes
        ? ProductMapper_ProductMapper.commercetoolsAttributesToAttributes(commercetoolsVariant.attributes, locale)
        : [];
    const { price, discountedPrice, discounts } = ProductMapper_ProductMapper.extractPriceAndDiscounts(commercetoolsVariant, locale);
    return {
        id: (_a = commercetoolsVariant.id) === null || _a === void 0 ? void 0 : _a.toString(),
        sku: (_b = commercetoolsVariant.sku) === null || _b === void 0 ? void 0 : _b.toString(),
        images: [
            ...((_d = (_c = commercetoolsVariant === null || commercetoolsVariant === void 0 ? void 0 : commercetoolsVariant.assets) === null || _c === void 0 ? void 0 : _c.map((asset) => { var _a; return (_a = asset.sources) === null || _a === void 0 ? void 0 : _a[0].uri; })) !== null && _d !== void 0 ? _d : []),
            ...((_f = (_e = commercetoolsVariant === null || commercetoolsVariant === void 0 ? void 0 : commercetoolsVariant.images) === null || _e === void 0 ? void 0 : _e.map((image) => image.url)) !== null && _f !== void 0 ? _f : []),
        ],
        groupId: (attributes === null || attributes === void 0 ? void 0 : attributes.baseId) || undefined,
        attributes: attributes,
        price: price,
        discountedPrice: discountedPrice,
        discounts: discounts,
        isOnStock: (_g = commercetoolsVariant.availability) === null || _g === void 0 ? void 0 : _g.isOnStock,
        restockableInDays: (_h = commercetoolsVariant.availability) === null || _h === void 0 ? void 0 : _h.restockableInDays,
        availableQuantity: (_j = commercetoolsVariant.availability) === null || _j === void 0 ? void 0 : _j.availableQuantity,
    };
};
ProductMapper_ProductMapper.commercetoolsAttributesToAttributes = (commercetoolsAttributes, locale) => {
    const attributes = {};
    commercetoolsAttributes === null || commercetoolsAttributes === void 0 ? void 0 : commercetoolsAttributes.forEach((commercetoolsAttribute) => {
        attributes[commercetoolsAttribute.name] = ProductMapper_ProductMapper.extractAttributeValue(commercetoolsAttribute.value, locale);
    });
    return attributes;
};
ProductMapper_ProductMapper.commercetoolsCategoryReferencesToCategories = (commercetoolsCategoryReferences, categoryIdField, locale) => {
    const categories = [];
    commercetoolsCategoryReferences.forEach((commercetoolsCategory) => {
        let category = {
            categoryId: commercetoolsCategory.id,
        };
        if (commercetoolsCategory.obj) {
            category = ProductMapper_ProductMapper.commercetoolsCategoryToCategory(commercetoolsCategory.obj, categoryIdField, locale);
        }
        categories.push(category);
    });
    return categories;
};
ProductMapper_ProductMapper.commercetoolsCategoryToCategory = (commercetoolsCategory, categoryIdField, locale) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
    return {
        categoryId: commercetoolsCategory === null || commercetoolsCategory === void 0 ? void 0 : commercetoolsCategory[categoryIdField],
        parentId: (_a = commercetoolsCategory.parent) === null || _a === void 0 ? void 0 : _a.id,
        name: (_c = (_b = commercetoolsCategory.name) === null || _b === void 0 ? void 0 : _b[locale.language]) !== null && _c !== void 0 ? _c : undefined,
        slug: (_e = (_d = commercetoolsCategory.slug) === null || _d === void 0 ? void 0 : _d[locale.language]) !== null && _e !== void 0 ? _e : undefined,
        depth: commercetoolsCategory.ancestors.length,
        subCategories: (_f = commercetoolsCategory.subCategories) === null || _f === void 0 ? void 0 : _f.map((subCategory) => ProductMapper_ProductMapper.commercetoolsCategoryToCategory(subCategory, categoryIdField, locale)),
        _url: commercetoolsCategory.ancestors.length > 0
            ? `/${(_g = commercetoolsCategory.ancestors) === null || _g === void 0 ? void 0 : _g.map((ancestor) => {
                var _a, _b, _c;
                return (_c = (_b = (_a = ancestor.obj) === null || _a === void 0 ? void 0 : _a.slug) === null || _b === void 0 ? void 0 : _b[locale.language]) !== null && _c !== void 0 ? _c : ancestor.id;
            }).join('/')}/${(_j = (_h = commercetoolsCategory.slug) === null || _h === void 0 ? void 0 : _h[locale.language]) !== null && _j !== void 0 ? _j : commercetoolsCategory.id}`
            : `/${(_l = (_k = commercetoolsCategory.slug) === null || _k === void 0 ? void 0 : _k[locale.language]) !== null && _l !== void 0 ? _l : commercetoolsCategory.id}`,
    };
};

// CONCATENATED MODULE: ../types/query/CategoryQuery.ts
var CategoryQueryFormat;
(function (CategoryQueryFormat) {
    CategoryQueryFormat["FLAT"] = "flat";
    CategoryQueryFormat["TREE"] = "tree";
})(CategoryQueryFormat || (CategoryQueryFormat = {}));

// CONCATENATED MODULE: ./commerce-commercetools/apis/ProductApi.ts






class ProductApi_ProductApi extends BaseApi_BaseApi {
    constructor() {
        super(...arguments);
        this.query = async (productQuery) => {
            const locale = await this.getCommercetoolsLocal();
            const limit = +productQuery.limit || 24;
            const filterQuery = [];
            const filterFacets = [];
            const sortAttributes = [];
            const facetDefinitions = [
                ...ProductMapper_ProductMapper.commercetoolsProductTypesToFacetDefinitions(await this.getProductTypes(), locale),
                {
                    attributeId: 'categories.id',
                    attributeType: 'text',
                },
                {
                    attributeId: 'variants.scopedPrice.value',
                    attributeType: 'money',
                },
                {
                    attributeId: 'variants.price',
                    attributeType: 'money',
                },
                {
                    attributeId: 'variants.scopedPriceDiscounted',
                    attributeType: 'boolean',
                },
            ];
            const queryArgFacets = ProductMapper_ProductMapper.facetDefinitionsToCommercetoolsQueryArgFacets(facetDefinitions, locale);
            if (productQuery.productIds !== undefined && productQuery.productIds.length !== 0) {
                filterQuery.push(`${this.productIdField}:"${productQuery.productIds.join('","')}"`);
            }
            if (productQuery.skus !== undefined && productQuery.skus.length !== 0) {
                filterQuery.push(`variants.sku:"${productQuery.skus.join('","')}"`);
            }
            if (productQuery.categories !== undefined && productQuery.categories.length !== 0) {
                let categoryIds = productQuery.categories.filter(function uniqueCategories(value, index, self) {
                    return self.indexOf(value) === index;
                });
                if (this.categoryIdField !== 'id') {
                    const categoriesMethodArgs = {
                        queryArgs: {
                            where: [`key in ("${categoryIds.join('","')}")`],
                        },
                    };
                    categoryIds = await this.getCommercetoolsCategoryPagedQueryResponse(categoriesMethodArgs).then((response) => {
                        return response.body.results.map((category) => {
                            return category.id;
                        });
                    });
                }
                filterQuery.push(`categories.id: ${categoryIds.map((category) => {
                    return `subtree("${category}")`;
                })}`);
            }
            if (productQuery.filters !== undefined) {
                productQuery.filters.forEach((filter) => {
                    var _a, _b, _c;
                    switch (filter.type) {
                        case FilterTypes.TERM:
                            filterQuery.push(`${filter.identifier}.key:"${filter.terms.join('","')}"`);
                            break;
                        case FilterTypes.BOOLEAN:
                            filterQuery.push(`${filter.identifier}:${((_a = filter.terms[0]) === null || _a === void 0 ? void 0 : _a.toString().toLowerCase()) === 'true'}`);
                            break;
                        case FilterTypes.RANGE:
                            const filterId = filter.identifier === 'price' ? `variants.scopedPrice.value.centAmount` : filter.identifier;
                            filterQuery.push(`${filterId}:range (${(_b = filter.min) !== null && _b !== void 0 ? _b : '*'} to ${(_c = filter.max) !== null && _c !== void 0 ? _c : '*'})`);
                            break;
                    }
                });
            }
            if (productQuery.facets !== undefined) {
                filterFacets.push(...ProductMapper_ProductMapper.facetDefinitionsToFilterFacets(productQuery.facets, facetDefinitions, locale));
            }
            switch (true) {
                case productQuery.sortAttributes !== undefined:
                    Object.keys(productQuery.sortAttributes).map((field, directionIndex) => {
                        sortAttributes.push(`${field} ${Object.values(productQuery.sortAttributes)[directionIndex]}`);
                    });
                    break;
                default:
                    sortAttributes.push(`score desc`, `id desc`);
            }
            const methodArgs = {
                queryArgs: {
                    sort: sortAttributes,
                    limit: limit,
                    offset: this.getOffsetFromCursor(productQuery.cursor),
                    priceCurrency: locale.currency,
                    priceCountry: locale.country,
                    facet: queryArgFacets.length > 0 ? queryArgFacets : undefined,
                    filter: filterFacets.length > 0 ? filterFacets : undefined,
                    'filter.facets': filterFacets.length > 0 ? filterFacets : undefined,
                    'filter.query': filterQuery.length > 0 ? filterQuery : undefined,
                    [`text.${locale.language}`]: productQuery.query,
                    expand: ['categories[*].ancestors[*]'],
                    fuzzy: true,
                },
            };
            return await this.requestBuilder()
                .productProjections()
                .search()
                .get(methodArgs)
                .execute()
                .then((response) => {
                const items = response.body.results.map((product) => ProductMapper_ProductMapper.commercetoolsProductProjectionToProduct(product, this.productIdField, this.categoryIdField, locale, this.defaultLocale));
                const result = {
                    total: response.body.total,
                    items: items,
                    count: response.body.count,
                    facets: ProductMapper_ProductMapper.commercetoolsFacetResultsToFacets(facetDefinitions, response.body.facets, productQuery, locale),
                    previousCursor: ProductMapper_ProductMapper.calculatePreviousCursor(response.body.offset, response.body.count),
                    nextCursor: ProductMapper_ProductMapper.calculateNextCursor(response.body.offset, response.body.count, response.body.total),
                    query: productQuery,
                };
                return result;
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.getProduct = async (productQuery) => {
            const result = await this.query(productQuery);
            return result.items.shift();
        };
        this.getSearchableAttributes = async () => {
            const locale = await this.getCommercetoolsLocal();
            const response = await this.requestBuilder()
                .productTypes()
                .get()
                .execute()
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
            const filterFields = ProductMapper_ProductMapper.commercetoolsProductTypesToFilterFields(response.body.results, locale);
            filterFields.push({
                field: 'categoryIds',
                type: FilterFieldTypes.ENUM,
                label: 'Category',
                values: await this.queryCategories({ limit: 250, format: CategoryQueryFormat.TREE }).then((result) => {
                    return result.items.map((item) => {
                        return {
                            value: item.categoryId,
                            name: item.name,
                        };
                    });
                }),
            });
            filterFields.push({
                field: 'variants.price',
                type: FilterFieldTypes.MONEY,
                label: 'Variants price',
            });
            filterFields.push({
                field: 'variants.scopedPrice.value',
                type: FilterFieldTypes.MONEY,
                label: 'Variants scoped price',
            });
            return filterFields;
        };
        this.queryCategories = async (categoryQuery) => {
            const locale = await this.getCommercetoolsLocal();
            const limit = +categoryQuery.limit || 24;
            const where = [];
            if (categoryQuery.slug) {
                where.push(`slug(${locale.language}="${categoryQuery.slug}")`);
            }
            if (categoryQuery.parentId) {
                where.push(`parent(id="${categoryQuery.parentId}")`);
            }
            const methodArgs = {
                queryArgs: {
                    limit: limit,
                    offset: this.getOffsetFromCursor(categoryQuery.cursor),
                    where: where.length > 0 ? where : undefined,
                    expand: ['ancestors[*]', 'parent'],
                },
            };
            return await this.getCommercetoolsCategoryPagedQueryResponse(methodArgs)
                .then((response) => {
                const items = categoryQuery.format === CategoryQueryFormat.TREE
                    ? ProductMapper_ProductMapper.commercetoolsCategoriesToTreeCategory(response.body.results, this.categoryIdField, locale)
                    : response.body.results.map((category) => ProductMapper_ProductMapper.commercetoolsCategoryToCategory(category, this.categoryIdField, locale));
                const result = {
                    total: response.body.total,
                    items: items,
                    count: response.body.count,
                    previousCursor: ProductMapper_ProductMapper.calculatePreviousCursor(response.body.offset, response.body.count),
                    nextCursor: ProductMapper_ProductMapper.calculateNextCursor(response.body.offset, response.body.count, response.body.total),
                    query: categoryQuery,
                };
                return result;
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.getOffsetFromCursor = (cursor) => {
            if (cursor === undefined) {
                return undefined;
            }
            const offsetMach = cursor.match(/(?<=offset:).+/);
            return offsetMach !== null ? +Object.values(offsetMach)[0] : undefined;
        };
    }
    async getCommercetoolsCategoryPagedQueryResponse(methodArgs) {
        return await this.requestBuilder()
            .categories()
            .get(methodArgs)
            .execute()
            .catch((error) => {
            throw new ExternalError({ status: error.code, message: error.message, body: error.body });
        });
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/utils/ProductRouter.ts
var ProductRouter_a;


class ProductRouter_ProductRouter {
    static isProduct(product) {
        return product.hasOwnProperty('slug');
    }
    static generateUrlFor(item) {
        if (ProductRouter_ProductRouter.isProduct(item)) {
            return `/${item.slug}/p/${item.variants[0].sku}`;
        }
        return `/slug/p/${item.variant.sku}`;
    }
    static identifyFrom(request) {
        var _b;
        if ((_b = getPath(request)) === null || _b === void 0 ? void 0 : _b.match(/\/p\/([^\/]+)/)) {
            return true;
        }
        return false;
    }
}
ProductRouter_a = ProductRouter_ProductRouter;
ProductRouter_ProductRouter.loadFor = async (request, frontasticContext) => {
    var _b;
    const productApi = new ProductApi_ProductApi(frontasticContext, getLocale(request), getCurrency(request));
    const urlMatches = (_b = getPath(request)) === null || _b === void 0 ? void 0 : _b.match(/\/p\/([^\/]+)/);
    if (urlMatches) {
        const productQuery = {
            skus: [urlMatches[1]],
        };
        return productApi.getProduct(productQuery);
    }
    return null;
};

// CONCATENATED MODULE: ./commerce-commercetools/mappers/CartMapper.ts




class CartMapper {
}
CartMapper.commercetoolsCartToCart = (commercetoolsCart, locale, defaultLocale) => {
    return {
        cartId: commercetoolsCart.id,
        cartVersion: commercetoolsCart.version.toString(),
        lineItems: CartMapper.commercetoolsLineItemsToLineItems(commercetoolsCart.lineItems, locale, defaultLocale),
        email: commercetoolsCart === null || commercetoolsCart === void 0 ? void 0 : commercetoolsCart.customerEmail,
        sum: ProductMapper_ProductMapper.commercetoolsMoneyToMoney(commercetoolsCart.totalPrice),
        shippingAddress: CartMapper.commercetoolsAddressToAddress(commercetoolsCart.shippingAddress),
        billingAddress: CartMapper.commercetoolsAddressToAddress(commercetoolsCart.billingAddress),
        shippingInfo: CartMapper.commercetoolsShippingInfoToShippingInfo(commercetoolsCart.shippingInfo, locale, defaultLocale),
        payments: CartMapper.commercetoolsPaymentInfoToPayments(commercetoolsCart.paymentInfo, locale),
        discountCodes: CartMapper.commercetoolsDiscountCodesInfoToDiscountCodes(commercetoolsCart.discountCodes, locale, defaultLocale),
        taxed: CartMapper.commercetoolsTaxedPriceToTaxed(commercetoolsCart.taxedPrice, locale),
    };
};
CartMapper.commercetoolsLineItemsToLineItems = (commercetoolsLineItems, locale, defaultLocale) => {
    const lineItems = [];
    commercetoolsLineItems === null || commercetoolsLineItems === void 0 ? void 0 : commercetoolsLineItems.forEach((commercetoolsLineItem) => {
        var _a, _b, _c;
        const item = {
            lineItemId: commercetoolsLineItem.id,
            productId: commercetoolsLineItem.productId,
            name: LocalizedValue.getLocalizedValue(locale, defaultLocale, commercetoolsLineItem === null || commercetoolsLineItem === void 0 ? void 0 : commercetoolsLineItem.name) || '',
            type: 'variant',
            count: commercetoolsLineItem.quantity,
            price: ProductMapper_ProductMapper.commercetoolsMoneyToMoney((_a = commercetoolsLineItem.price) === null || _a === void 0 ? void 0 : _a.value),
            discountedPrice: ProductMapper_ProductMapper.commercetoolsMoneyToMoney((_c = (_b = commercetoolsLineItem.price) === null || _b === void 0 ? void 0 : _b.discounted) === null || _c === void 0 ? void 0 : _c.value),
            discountTexts: CartMapper.commercetoolsDiscountedPricesPerQuantityToDiscountTexts(commercetoolsLineItem.discountedPricePerQuantity, locale, defaultLocale),
            discounts: CartMapper.commercetoolsDiscountedPricesPerQuantityToDiscounts(commercetoolsLineItem.discountedPricePerQuantity, locale, defaultLocale),
            totalPrice: ProductMapper_ProductMapper.commercetoolsMoneyToMoney(commercetoolsLineItem.totalPrice),
            variant: ProductMapper_ProductMapper.commercetoolsProductVariantToVariant(commercetoolsLineItem.variant, locale),
            isGift: (commercetoolsLineItem === null || commercetoolsLineItem === void 0 ? void 0 : commercetoolsLineItem.lineItemMode) !== undefined && commercetoolsLineItem.lineItemMode === 'GiftLineItem',
        };
        item._url = ProductRouter_ProductRouter.generateUrlFor(item);
        lineItems.push(item);
    });
    return lineItems;
};
CartMapper.commercetoolsAddressToAddress = (commercetoolsAddress) => {
    return {
        addressId: commercetoolsAddress === null || commercetoolsAddress === void 0 ? void 0 : commercetoolsAddress.id,
        salutation: commercetoolsAddress === null || commercetoolsAddress === void 0 ? void 0 : commercetoolsAddress.salutation,
        firstName: commercetoolsAddress === null || commercetoolsAddress === void 0 ? void 0 : commercetoolsAddress.firstName,
        lastName: commercetoolsAddress === null || commercetoolsAddress === void 0 ? void 0 : commercetoolsAddress.lastName,
        streetName: commercetoolsAddress === null || commercetoolsAddress === void 0 ? void 0 : commercetoolsAddress.streetName,
        streetNumber: commercetoolsAddress === null || commercetoolsAddress === void 0 ? void 0 : commercetoolsAddress.streetNumber,
        additionalStreetInfo: commercetoolsAddress === null || commercetoolsAddress === void 0 ? void 0 : commercetoolsAddress.additionalStreetInfo,
        additionalAddressInfo: commercetoolsAddress === null || commercetoolsAddress === void 0 ? void 0 : commercetoolsAddress.additionalAddressInfo,
        postalCode: commercetoolsAddress === null || commercetoolsAddress === void 0 ? void 0 : commercetoolsAddress.postalCode,
        city: commercetoolsAddress === null || commercetoolsAddress === void 0 ? void 0 : commercetoolsAddress.city,
        country: commercetoolsAddress === null || commercetoolsAddress === void 0 ? void 0 : commercetoolsAddress.country,
        state: commercetoolsAddress === null || commercetoolsAddress === void 0 ? void 0 : commercetoolsAddress.state,
        phone: commercetoolsAddress === null || commercetoolsAddress === void 0 ? void 0 : commercetoolsAddress.phone,
    };
};
CartMapper.addressToCommercetoolsAddress = (address) => {
    return {
        id: address === null || address === void 0 ? void 0 : address.addressId,
        salutation: address === null || address === void 0 ? void 0 : address.salutation,
        firstName: address === null || address === void 0 ? void 0 : address.firstName,
        lastName: address === null || address === void 0 ? void 0 : address.lastName,
        streetName: address === null || address === void 0 ? void 0 : address.streetName,
        streetNumber: address === null || address === void 0 ? void 0 : address.streetNumber,
        additionalStreetInfo: address === null || address === void 0 ? void 0 : address.additionalStreetInfo,
        additionalAddressInfo: address === null || address === void 0 ? void 0 : address.additionalAddressInfo,
        postalCode: address === null || address === void 0 ? void 0 : address.postalCode,
        city: address === null || address === void 0 ? void 0 : address.city,
        country: address === null || address === void 0 ? void 0 : address.country,
        state: address === null || address === void 0 ? void 0 : address.state,
        phone: address === null || address === void 0 ? void 0 : address.phone,
    };
};
CartMapper.commercetoolsOrderToOrder = (commercetoolsOrder, locale, defaultLocale) => {
    var _a;
    return {
        cartId: (_a = commercetoolsOrder.cart) === null || _a === void 0 ? void 0 : _a.id,
        orderState: commercetoolsOrder.orderState,
        orderId: commercetoolsOrder.id,
        orderNumber: commercetoolsOrder.orderNumber,
        orderVersion: commercetoolsOrder.version.toString(),
        createdAt: new Date(commercetoolsOrder.createdAt),
        lineItems: CartMapper.commercetoolsLineItemsToLineItems(commercetoolsOrder.lineItems, locale, defaultLocale),
        email: commercetoolsOrder === null || commercetoolsOrder === void 0 ? void 0 : commercetoolsOrder.customerEmail,
        shippingAddress: CartMapper.commercetoolsAddressToAddress(commercetoolsOrder.shippingAddress),
        billingAddress: CartMapper.commercetoolsAddressToAddress(commercetoolsOrder.billingAddress),
        sum: ProductMapper_ProductMapper.commercetoolsMoneyToMoney(commercetoolsOrder.totalPrice),
        taxed: CartMapper.commercetoolsTaxedPriceToTaxed(commercetoolsOrder.taxedPrice, locale),
        payments: CartMapper.commercetoolsPaymentInfoToPayments(commercetoolsOrder.paymentInfo, locale),
        shipmentState: CartMapper.commercetoolsShipmentStateToShipmentState(commercetoolsOrder.shipmentState),
    };
};
CartMapper.commercetoolsShippingInfoToShippingInfo = (commercetoolsShippingInfo, locale, defaultLocale) => {
    var _a, _b, _c, _d;
    if (commercetoolsShippingInfo === undefined) {
        return undefined;
    }
    let shippingMethod = {
        shippingMethodId: (_a = commercetoolsShippingInfo === null || commercetoolsShippingInfo === void 0 ? void 0 : commercetoolsShippingInfo.shippingMethod) === null || _a === void 0 ? void 0 : _a.id,
    };
    if (commercetoolsShippingInfo.shippingMethod.obj) {
        shippingMethod = {
            ...CartMapper.commercetoolsShippingMethodToShippingMethod(commercetoolsShippingInfo.shippingMethod.obj, locale, defaultLocale),
        };
    }
    return {
        ...shippingMethod,
        price: ProductMapper_ProductMapper.commercetoolsMoneyToMoney(commercetoolsShippingInfo.price),
        discounts: (_d = (_c = (_b = commercetoolsShippingInfo.discountedPrice) === null || _b === void 0 ? void 0 : _b.includedDiscounts) === null || _c === void 0 ? void 0 : _c.map((discount) => discount.discountedAmount)) !== null && _d !== void 0 ? _d : [],
    };
};
CartMapper.commercetoolsShippingMethodToShippingMethod = (commercetoolsShippingMethod, locale, defaultLocale) => {
    return {
        shippingMethodId: (commercetoolsShippingMethod === null || commercetoolsShippingMethod === void 0 ? void 0 : commercetoolsShippingMethod.id) || undefined,
        name: LocalizedValue.getLocalizedValue(locale, defaultLocale, commercetoolsShippingMethod === null || commercetoolsShippingMethod === void 0 ? void 0 : commercetoolsShippingMethod.localizedName) ||
            undefined,
        description: LocalizedValue.getLocalizedValue(locale, defaultLocale, commercetoolsShippingMethod === null || commercetoolsShippingMethod === void 0 ? void 0 : commercetoolsShippingMethod.localizedDescription) ||
            undefined,
        rates: CartMapper.commercetoolsZoneRatesToRates(commercetoolsShippingMethod === null || commercetoolsShippingMethod === void 0 ? void 0 : commercetoolsShippingMethod.zoneRates, locale),
    };
};
CartMapper.commercetoolsZoneRatesToRates = (commercetoolsZoneRates, locale) => {
    if (commercetoolsZoneRates === undefined) {
        return undefined;
    }
    const shippingRates = [];
    commercetoolsZoneRates.forEach((commercetoolsZoneRate) => {
        var _a, _b, _c, _d, _e;
        const shippingRateId = commercetoolsZoneRate.zone.id;
        const name = ((_b = (_a = commercetoolsZoneRate.zone) === null || _a === void 0 ? void 0 : _a.obj) === null || _b === void 0 ? void 0 : _b.name) || undefined;
        const locations = (_e = (_d = (_c = commercetoolsZoneRate.zone) === null || _c === void 0 ? void 0 : _c.obj) === null || _d === void 0 ? void 0 : _d.locations) === null || _e === void 0 ? void 0 : _e.map((location) => {
            return {
                country: location.country,
                state: location.state,
            };
        });
        const matchingShippingRates = commercetoolsZoneRate.shippingRates.filter(function (shippingRate) {
            if (shippingRate.isMatching !== undefined && shippingRate.isMatching !== true) {
                return false;
            }
            return true;
        });
        matchingShippingRates.forEach((matchingShippingRates) => {
            const matchingShippingRatePriceTiers = matchingShippingRates.tiers.filter(function (shippingRatePriceTier) {
                if (shippingRatePriceTier.isMatching !== true) {
                    return false;
                }
                return true;
            });
            shippingRates.push({
                shippingRateId: shippingRateId,
                name: name,
                locations: locations,
                price: matchingShippingRatePriceTiers.length > 0
                    ? ProductMapper_ProductMapper.commercetoolsMoneyToMoney(matchingShippingRatePriceTiers[0].price)
                    : ProductMapper_ProductMapper.commercetoolsMoneyToMoney(matchingShippingRates.price),
            });
        });
    });
    return shippingRates;
};
CartMapper.commercetoolsPaymentInfoToPayments = (commercetoolsPaymentInfo, locale) => {
    var _a;
    const payments = [];
    (_a = commercetoolsPaymentInfo === null || commercetoolsPaymentInfo === void 0 ? void 0 : commercetoolsPaymentInfo.payments) === null || _a === void 0 ? void 0 : _a.forEach((commercetoolsPayment) => {
        if (commercetoolsPayment.obj) {
            payments.push(CartMapper.commercetoolsPaymentToPayment(commercetoolsPayment.obj, locale));
        }
    });
    return payments;
};
CartMapper.commercetoolsPaymentToPayment = (commercetoolsPayment, locale) => {
    var _a, _b, _c, _d, _e, _f;
    return {
        id: (_a = commercetoolsPayment.id) !== null && _a !== void 0 ? _a : null,
        paymentId: (_b = commercetoolsPayment.interfaceId) !== null && _b !== void 0 ? _b : null,
        paymentProvider: (_c = commercetoolsPayment.paymentMethodInfo.paymentInterface) !== null && _c !== void 0 ? _c : null,
        paymentMethod: (_d = commercetoolsPayment.paymentMethodInfo.method) !== null && _d !== void 0 ? _d : null,
        amountPlanned: ProductMapper_ProductMapper.commercetoolsMoneyToMoney(commercetoolsPayment.amountPlanned),
        debug: JSON.stringify(commercetoolsPayment),
        paymentStatus: (_e = commercetoolsPayment.paymentStatus.interfaceCode) !== null && _e !== void 0 ? _e : null,
        version: (_f = commercetoolsPayment.version) !== null && _f !== void 0 ? _f : 0,
    };
};
CartMapper.commercetoolsDiscountCodesInfoToDiscountCodes = (commercetoolsDiscountCodesInfo, locale, defaultLocale) => {
    const discounts = [];
    commercetoolsDiscountCodesInfo === null || commercetoolsDiscountCodesInfo === void 0 ? void 0 : commercetoolsDiscountCodesInfo.forEach((commercetoolsDiscountCodeInfo) => {
        discounts.push(CartMapper.commercetoolsDiscountCodeInfoToDiscountCode(commercetoolsDiscountCodeInfo, locale, defaultLocale));
    });
    return discounts;
};
CartMapper.commercetoolsDiscountCodeInfoToDiscountCode = (commercetoolsDiscountCodeInfo, locale, defaultLocale) => {
    let discount = {
        state: commercetoolsDiscountCodeInfo.state,
    };
    if (commercetoolsDiscountCodeInfo.discountCode.obj) {
        const commercetoolsDiscountCode = commercetoolsDiscountCodeInfo.discountCode.obj;
        discount = {
            ...discount,
            discountId: commercetoolsDiscountCode.id,
            code: commercetoolsDiscountCode.code,
            name: LocalizedValue.getLocalizedValue(locale, defaultLocale, commercetoolsDiscountCode.name) || undefined,
            description: LocalizedValue.getLocalizedValue(locale, defaultLocale, commercetoolsDiscountCode.description) || undefined,
        };
    }
    return discount;
};
CartMapper.commercetoolsDiscountedPricesPerQuantityToDiscountTexts = (commercetoolsDiscountedLineItemPricesForQuantity, locale, defaultLocale) => {
    const discountTexts = [];
    commercetoolsDiscountedLineItemPricesForQuantity === null || commercetoolsDiscountedLineItemPricesForQuantity === void 0 ? void 0 : commercetoolsDiscountedLineItemPricesForQuantity.forEach((commercetoolsDiscountedLineItemPriceForQuantity) => {
        commercetoolsDiscountedLineItemPriceForQuantity.discountedPrice.includedDiscounts.forEach((commercetoolsDiscountedLineItemPortion) => {
            var _a;
            discountTexts.push(LocalizedValue.getLocalizedValue(locale, defaultLocale, (_a = commercetoolsDiscountedLineItemPortion.discount.obj) === null || _a === void 0 ? void 0 : _a.name));
        });
    });
    return discountTexts;
};
CartMapper.commercetoolsDiscountedPricesPerQuantityToDiscounts = (commercetoolsDiscountedLineItemPricesForQuantity, locale, defaultLocale) => {
    const discounts = [];
    commercetoolsDiscountedLineItemPricesForQuantity === null || commercetoolsDiscountedLineItemPricesForQuantity === void 0 ? void 0 : commercetoolsDiscountedLineItemPricesForQuantity.forEach((commercetoolsDiscountedLineItemPriceForQuantity) => {
        commercetoolsDiscountedLineItemPriceForQuantity.discountedPrice.includedDiscounts.forEach((commercetoolsDiscountedLineItemPortion) => {
            discounts.push(CartMapper.commercetoolsDiscountedLineItemPortionToDiscount(commercetoolsDiscountedLineItemPortion, locale, defaultLocale));
        });
    });
    return discounts;
};
CartMapper.commercetoolsDiscountedLineItemPortionToDiscount = (commercetoolsDiscountedLineItemPortion, locale, defaultLocale) => {
    let discount = {
        discountedAmount: ProductMapper_ProductMapper.commercetoolsMoneyToMoney(commercetoolsDiscountedLineItemPortion.discountedAmount),
    };
    if (commercetoolsDiscountedLineItemPortion.discount.obj) {
        const commercetoolsCartDiscount = commercetoolsDiscountedLineItemPortion.discount.obj;
        discount = {
            ...discount,
            discountId: commercetoolsCartDiscount.id,
            name: LocalizedValue.getLocalizedValue(locale, defaultLocale, commercetoolsCartDiscount.name) || undefined,
            description: LocalizedValue.getLocalizedValue(locale, defaultLocale, commercetoolsCartDiscount.description) || undefined,
        };
    }
    return discount;
};
CartMapper.commercetoolsTaxedPriceToTaxed = (commercetoolsTaxedPrice, locale) => {
    if (commercetoolsTaxedPrice === undefined) {
        return undefined;
    }
    return {
        amount: ProductMapper_ProductMapper.commercetoolsMoneyToMoney(commercetoolsTaxedPrice.totalNet),
        taxPortions: commercetoolsTaxedPrice.taxPortions.map((commercetoolsTaxPortion) => {
            const taxPortion = {
                amount: ProductMapper_ProductMapper.commercetoolsMoneyToMoney(commercetoolsTaxPortion.amount),
                name: commercetoolsTaxPortion.name,
                rate: commercetoolsTaxPortion.rate,
            };
            return taxPortion;
        }),
    };
};
CartMapper.commercetoolsShipmentStateToShipmentState = (commercetoolsShipmentState) => {
    switch (commercetoolsShipmentState) {
        case 'backorder':
            return ShipmentState.BACKORDER;
        case 'delayed':
            return ShipmentState.DELAYED;
        case 'delivered':
            return ShipmentState.DELIVERED;
        case 'partial':
            return ShipmentState.PARTIAL;
        case 'ready':
            return ShipmentState.READY;
        case 'shipped':
            return ShipmentState.SHIPPED;
        case 'pending':
        default:
            return ShipmentState.PENDING;
    }
};

// CONCATENATED MODULE: ./commerce-commercetools/utils/Cart.ts
const hasUser = (cart) => {
    return cart.email !== undefined;
};
const hasShippingAddress = (cart) => {
    return (cart.shippingAddress !== undefined &&
        cart.shippingAddress.firstName !== undefined &&
        cart.shippingAddress.lastName !== undefined &&
        cart.shippingAddress.postalCode !== undefined &&
        cart.shippingAddress.city !== undefined &&
        cart.shippingAddress.country !== undefined);
};
const hasBillingAddress = (cart) => {
    return (cart.billingAddress !== undefined &&
        cart.billingAddress.firstName !== undefined &&
        cart.billingAddress.lastName !== undefined &&
        cart.billingAddress.postalCode !== undefined &&
        cart.billingAddress.city !== undefined &&
        cart.billingAddress.country !== undefined);
};
const hasAddresses = (cart) => {
    return hasShippingAddress(cart) && hasBillingAddress(cart);
};
const isReadyForCheckout = (cart) => {
    return hasUser(cart) && hasAddresses(cart);
};

// CONCATENATED MODULE: ./commerce-commercetools/errors/CartNotCompleteError.ts

class CartNotCompleteError_CartNotCompleteError extends ExtensionError {
    constructor(options) {
        super(options);
        this.code = 'cart_not_complete_error';
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/errors/CartPaymentNotFoundError.ts

class CartPaymentNotFoundError_CartPaymentNotFoundError extends ExtensionError {
    constructor(options) {
        super(options);
        this.code = 'cart_payment_not_found_error';
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/errors/CartRedeemDiscountCodeError.ts

class CartRedeemDiscountCodeError_CartRedeemDiscountCodeError extends ExternalError {
    constructor(options) {
        super(options);
        this.code = 'cart_redeem_discount_code_error';
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/utils/Pagination.ts
const getOffsetFromCursor = (cursor) => {
    if (cursor === undefined) {
        return undefined;
    }
    const offsetMach = cursor.match(/(?<=offset:).+/);
    return offsetMach !== null ? +Object.values(offsetMach)[0] : undefined;
};

// CONCATENATED MODULE: ./commerce-commercetools/errors/CartNotActiveError.ts

class CartNotActiveError_CartNotActiveError extends ExtensionError {
    constructor(options) {
        super(options);
        this.code = 'cart_not_active_error';
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/errors/TokenError.ts

class TokenError_TokenError extends ExtensionError {
    constructor(options) {
        super(options);
        this.code = 'token_error';
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/apis/CartApi.ts













class CartApi_CartApi extends BaseApi_BaseApi {
    constructor(frontasticContext, locale, currency, request) {
        super(frontasticContext, locale, currency, request);
        this.replicateCart = async (orderId) => {
            const locale = await this.getCommercetoolsLocal();
            const response = await this.requestBuilder()
                .carts()
                .replicate()
                .post({
                body: {
                    reference: {
                        id: orderId,
                        typeId: 'order',
                    },
                },
            })
                .execute()
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
            return await this.buildCartWithAvailableShippingMethods(response.body, locale);
        };
        this.getForUser = async (account) => {
            const locale = await this.getCommercetoolsLocal();
            const response = await this.requestBuilder()
                .carts()
                .get({
                queryArgs: {
                    limit: 1,
                    expand: [
                        'lineItems[*].discountedPrice.includedDiscounts[*].discount',
                        'discountCodes[*].discountCode',
                        'paymentInfo.payments[*]',
                    ],
                    where: [`customerId="${account.accountId}"`, `cartState="Active"`],
                    sort: 'lastModifiedAt desc',
                },
            })
                .execute()
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
            if (response.body.count >= 1) {
                return this.buildCartWithAvailableShippingMethods(response.body.results[0], locale);
            }
            const cartDraft = {
                currency: locale.currency,
                country: locale.country,
                locale: locale.language,
                customerId: account.accountId,
                inventoryMode: 'ReserveOnOrder',
            };
            return await this.requestBuilder()
                .carts()
                .post({
                queryArgs: {
                    expand: [
                        'lineItems[*].discountedPrice.includedDiscounts[*].discount',
                        'discountCodes[*].discountCode',
                        'paymentInfo.payments[*]',
                    ],
                },
                body: cartDraft,
            })
                .execute()
                .then((response) => {
                return this.buildCartWithAvailableShippingMethods(response.body, locale);
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.getAnonymous = async () => {
            const locale = await this.getCommercetoolsLocal();
            const response = await this.requestBuilder()
                .carts()
                .get({
                queryArgs: {
                    limit: 1,
                    expand: [
                        'lineItems[*].discountedPrice.includedDiscounts[*].discount',
                        'discountCodes[*].discountCode',
                        'paymentInfo.payments[*]',
                    ],
                    where: [`anonymousId="${this.getAnonymousIdFromSessionData()}"`, `cartState="Active"`],
                    sort: 'createdAt desc',
                },
            })
                .execute()
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
            if (response.body.count >= 1) {
                return this.buildCartWithAvailableShippingMethods(response.body.results[0], locale);
            }
            this.invalidateSessionAnonymousId();
            const anonymousId = this.getAnonymousIdFromSessionData();
            await this.generateCheckoutToken(anonymousId);
            const cartDraft = {
                currency: locale.currency,
                country: locale.country,
                locale: locale.language,
                anonymousId: anonymousId,
                inventoryMode: 'ReserveOnOrder',
            };
            return await this.requestBuilder()
                .carts()
                .post({
                queryArgs: {
                    expand: [
                        'lineItems[*].discountedPrice.includedDiscounts[*].discount',
                        'discountCodes[*].discountCode',
                        'paymentInfo.payments[*]',
                    ],
                },
                body: cartDraft,
            })
                .execute()
                .then((response) => {
                return this.buildCartWithAvailableShippingMethods(response.body, locale);
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.getActiveCartById = async (cartId) => {
            const locale = await this.getCommercetoolsLocal();
            return await this.requestBuilder()
                .carts()
                .withId({
                ID: cartId,
            })
                .get({
                queryArgs: {
                    limit: 1,
                    expand: [
                        'lineItems[*].discountedPrice.includedDiscounts[*].discount',
                        'discountCodes[*].discountCode',
                        'paymentInfo.payments[*]',
                    ],
                },
            })
                .execute()
                .then((response) => {
                if (response.body.cartState !== 'Active') {
                    throw new CartNotActiveError_CartNotActiveError({ message: `Cart ${cartId} is not active.` });
                }
                return this.buildCartWithAvailableShippingMethods(response.body, locale);
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.addToCart = async (cart, lineItem) => {
            const locale = await this.getCommercetoolsLocal();
            const cartUpdate = {
                version: +cart.cartVersion,
                actions: [
                    {
                        action: 'addLineItem',
                        sku: lineItem.variant.sku,
                        quantity: +lineItem.count,
                    },
                ],
            };
            const commercetoolsCart = await this.updateCart(cart.cartId, cartUpdate, locale);
            return this.buildCartWithAvailableShippingMethods(commercetoolsCart, locale);
        };
        this.updateLineItem = async (cart, lineItem) => {
            const locale = await this.getCommercetoolsLocal();
            const cartUpdate = {
                version: +cart.cartVersion,
                actions: [
                    {
                        action: 'changeLineItemQuantity',
                        lineItemId: lineItem.lineItemId,
                        quantity: +lineItem.count,
                    },
                ],
            };
            const commercetoolsCart = await this.updateCart(cart.cartId, cartUpdate, locale);
            return this.buildCartWithAvailableShippingMethods(commercetoolsCart, locale);
        };
        this.removeLineItem = async (cart, lineItem) => {
            const locale = await this.getCommercetoolsLocal();
            const cartUpdate = {
                version: +cart.cartVersion,
                actions: [
                    {
                        action: 'removeLineItem',
                        lineItemId: lineItem.lineItemId,
                    },
                ],
            };
            const commercetoolsCart = await this.updateCart(cart.cartId, cartUpdate, locale);
            return this.buildCartWithAvailableShippingMethods(commercetoolsCart, locale);
        };
        this.setEmail = async (cart, email) => {
            const locale = await this.getCommercetoolsLocal();
            const cartUpdate = {
                version: +cart.cartVersion,
                actions: [
                    {
                        action: 'setCustomerEmail',
                        email: email,
                    },
                ],
            };
            const commercetoolsCart = await this.updateCart(cart.cartId, cartUpdate, locale);
            return this.buildCartWithAvailableShippingMethods(commercetoolsCart, locale);
        };
        this.setShippingAddress = async (cart, address) => {
            const locale = await this.getCommercetoolsLocal();
            const cartUpdate = {
                version: +cart.cartVersion,
                actions: [
                    {
                        action: 'setShippingAddress',
                        address: CartMapper.addressToCommercetoolsAddress(address),
                    },
                ],
            };
            const commercetoolsCart = await this.updateCart(cart.cartId, cartUpdate, locale);
            return this.buildCartWithAvailableShippingMethods(commercetoolsCart, locale);
        };
        this.setBillingAddress = async (cart, address) => {
            const locale = await this.getCommercetoolsLocal();
            const cartUpdate = {
                version: +cart.cartVersion,
                actions: [
                    {
                        action: 'setBillingAddress',
                        address: CartMapper.addressToCommercetoolsAddress(address),
                    },
                ],
            };
            const commercetoolsCart = await this.updateCart(cart.cartId, cartUpdate, locale);
            return this.buildCartWithAvailableShippingMethods(commercetoolsCart, locale);
        };
        this.setShippingMethod = async (cart, shippingMethod) => {
            const locale = await this.getCommercetoolsLocal();
            const cartUpdate = {
                version: +cart.cartVersion,
                actions: [
                    {
                        action: 'setShippingMethod',
                        shippingMethod: {
                            typeId: 'shipping-method',
                            id: shippingMethod.shippingMethodId,
                        },
                    },
                ],
            };
            const commercetoolsCart = await this.updateCart(cart.cartId, cartUpdate, locale);
            return this.buildCartWithAvailableShippingMethods(commercetoolsCart, locale);
        };
        this.order = async (cart, { orderNumber }) => {
            const locale = await this.getCommercetoolsLocal();
            const orderFromCartDraft = {
                id: cart.cartId,
                version: +cart.cartVersion,
                orderNumber,
            };
            if (!isReadyForCheckout(cart)) {
                throw new CartNotCompleteError_CartNotCompleteError({ message: 'Cart not complete yet.' });
            }
            return await this.requestBuilder()
                .orders()
                .post({
                queryArgs: {
                    expand: [
                        'lineItems[*].discountedPrice.includedDiscounts[*].discount',
                        'discountCodes[*].discountCode',
                        'paymentInfo.payments[*]',
                    ],
                },
                body: orderFromCartDraft,
            })
                .execute()
                .then((response) => {
                return CartMapper.commercetoolsOrderToOrder(response.body, locale, this.defaultLocale);
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.getOrders = async (account) => {
            const locale = await this.getCommercetoolsLocal();
            return await this.requestBuilder()
                .orders()
                .get({
                queryArgs: {
                    expand: [
                        'lineItems[*].discountedPrice.includedDiscounts[*].discount',
                        'discountCodes[*].discountCode',
                        'paymentInfo.payments[*]',
                    ],
                    where: `customerId="${account.accountId}"`,
                    sort: 'createdAt desc',
                },
            })
                .execute()
                .then((response) => {
                return response.body.results.map((order) => CartMapper.commercetoolsOrderToOrder(order, locale, this.defaultLocale));
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.getShippingMethods = async (onlyMatching) => {
            const locale = await this.getCommercetoolsLocal();
            const methodArgs = {
                queryArgs: {
                    expand: ['zoneRates[*].zone'],
                    country: undefined,
                },
            };
            let requestBuilder = this.requestBuilder().shippingMethods().get(methodArgs);
            if (onlyMatching) {
                methodArgs.queryArgs.country = locale.country;
                requestBuilder = this.requestBuilder().shippingMethods().matchingLocation().get(methodArgs);
            }
            return await requestBuilder
                .execute()
                .then((response) => {
                return response.body.results.map((shippingMethod) => CartMapper.commercetoolsShippingMethodToShippingMethod(shippingMethod, locale, this.defaultLocale));
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.getAvailableShippingMethods = async (cart) => {
            const locale = await this.getCommercetoolsLocal();
            return await this.requestBuilder()
                .shippingMethods()
                .matchingCart()
                .get({
                queryArgs: {
                    expand: ['zoneRates[*].zone'],
                    cartId: cart.cartId,
                },
            })
                .execute()
                .then((response) => {
                return response.body.results.map((shippingMethod) => CartMapper.commercetoolsShippingMethodToShippingMethod(shippingMethod, locale, this.defaultLocale));
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.addPayment = async (cart, payment) => {
            const locale = await this.getCommercetoolsLocal();
            const paymentDraft = {
                key: payment.id,
                amountPlanned: {
                    centAmount: payment.amountPlanned.centAmount,
                    currencyCode: payment.amountPlanned.currencyCode,
                },
                interfaceId: payment.paymentId,
                paymentMethodInfo: {
                    paymentInterface: payment.paymentProvider,
                    method: payment.paymentMethod,
                },
                paymentStatus: {
                    interfaceCode: payment.paymentStatus,
                    interfaceText: payment.debug,
                },
            };
            const paymentResponse = await this.requestBuilder()
                .payments()
                .post({
                body: paymentDraft,
            })
                .execute();
            const cartUpdate = {
                version: +cart.cartVersion,
                actions: [
                    {
                        action: 'addPayment',
                        payment: {
                            typeId: 'payment',
                            id: paymentResponse.body.id,
                        },
                    },
                ],
            };
            const commercetoolsCart = await this.updateCart(cart.cartId, cartUpdate, locale);
            return this.buildCartWithAvailableShippingMethods(commercetoolsCart, locale);
        };
        this.updatePayment = async (cart, payment) => {
            const locale = await this.getCommercetoolsLocal();
            const originalPayment = cart.payments.find((cartPayment) => cartPayment.id === payment.id);
            if (originalPayment === undefined) {
                throw new CartPaymentNotFoundError_CartPaymentNotFoundError({ message: `Payment ${payment.id} not found in cart ${cart.cartId}` });
            }
            const paymentUpdateActions = [];
            if (payment.paymentStatus) {
                paymentUpdateActions.push({
                    action: 'setStatusInterfaceCode',
                    interfaceCode: payment.paymentStatus,
                });
            }
            if (payment.debug) {
                paymentUpdateActions.push({
                    action: 'setStatusInterfaceText',
                    interfaceText: payment.debug,
                });
            }
            if (payment.paymentId) {
                paymentUpdateActions.push({
                    action: 'setInterfaceId',
                    interfaceId: payment.paymentId,
                });
            }
            if (paymentUpdateActions.length === 0) {
                return payment;
            }
            return await this.requestBuilder()
                .payments()
                .withKey({
                key: originalPayment.id,
            })
                .post({
                body: {
                    version: originalPayment.version,
                    actions: paymentUpdateActions,
                },
            })
                .execute()
                .then((response) => {
                return CartMapper.commercetoolsPaymentToPayment(response.body, locale);
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.getPayment = async (paymentId) => {
            return await this.requestBuilder()
                .payments()
                .withId({
                ID: paymentId,
            })
                .get()
                .execute();
        };
        this.updateOrderByNumber = async (orderNumber, payload) => {
            const locale = await this.getCommercetoolsLocal();
            const order = await this.requestBuilder()
                .orders()
                .withOrderNumber({ orderNumber })
                .get()
                .execute()
                .then((res) => res.body);
            const orderUpdateActions = [];
            if (payload.orderState) {
                orderUpdateActions.push({
                    action: 'changeOrderState',
                    orderState: payload.orderState,
                });
            }
            if (payload.payments) {
                payload.payments.forEach((payment) => {
                    orderUpdateActions.push({
                        action: 'addPayment',
                        payment: {
                            typeId: 'payment',
                            id: payment.id,
                        },
                    });
                });
            }
            if (payload.paymentState) {
                orderUpdateActions.push({
                    action: 'changePaymentState',
                    paymentState: payload.paymentState,
                });
            }
            return this.requestBuilder()
                .orders()
                .withOrderNumber({ orderNumber })
                .post({ body: { version: order.version, actions: orderUpdateActions } })
                .execute()
                .then((response) => CartMapper.commercetoolsOrderToOrder(response.body, locale, this.defaultLocale))
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.createPayment = async (payload) => {
            const locale = await this.getCommercetoolsLocal();
            const payment = this.requestBuilder()
                .payments()
                .post({ body: payload })
                .execute()
                .then((response) => CartMapper.commercetoolsPaymentToPayment(response.body, locale));
            return payment;
        };
        this.updateOrderPayment = async (paymentId, paymentDraft) => {
            const locale = await this.getCommercetoolsLocal();
            const paymentUpdateActions = [];
            if (paymentDraft.paymentMethod) {
                paymentUpdateActions.push({
                    action: 'setMethodInfoMethod',
                    method: paymentDraft.paymentMethod,
                });
            }
            if (paymentDraft.amountPlanned) {
                paymentUpdateActions.push({
                    action: 'changeAmountPlanned',
                    amount: {
                        centAmount: paymentDraft.amountPlanned.centAmount,
                        currencyCode: paymentDraft.amountPlanned.currencyCode,
                    },
                });
            }
            if (paymentDraft.paymentStatus) {
                paymentUpdateActions.push({
                    action: 'setStatusInterfaceCode',
                    interfaceCode: paymentDraft.paymentStatus,
                });
            }
            return await this.requestBuilder()
                .payments()
                .withId({
                ID: paymentId,
            })
                .post({
                body: {
                    version: paymentDraft.version,
                    actions: paymentUpdateActions,
                },
            })
                .execute()
                .then((response) => {
                return CartMapper.commercetoolsPaymentToPayment(response.body, locale);
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.redeemDiscountCode = async (cart, code) => {
            const locale = await this.getCommercetoolsLocal();
            const cartUpdate = {
                version: +cart.cartVersion,
                actions: [
                    {
                        action: 'addDiscountCode',
                        code: code,
                    },
                ],
            };
            const commercetoolsCart = await this.updateCart(cart.cartId, cartUpdate, locale).catch((error) => {
                if (error instanceof ExternalError) {
                    throw new CartRedeemDiscountCodeError_CartRedeemDiscountCodeError({
                        errorCode: error.body['errors'][0].code,
                        message: `Redeem discount code '${code}' failed. ${error.message}`,
                        status: error.status,
                    });
                }
                throw error;
            });
            return this.buildCartWithAvailableShippingMethods(commercetoolsCart, locale);
        };
        this.removeDiscountCode = async (cart, discount) => {
            const locale = await this.getCommercetoolsLocal();
            const cartUpdate = {
                version: +cart.cartVersion,
                actions: [
                    {
                        action: 'removeDiscountCode',
                        discountCode: {
                            typeId: 'discount-code',
                            id: discount.discountId,
                        },
                    },
                ],
            };
            const commercetoolsCart = await this.updateCart(cart.cartId, cartUpdate, locale);
            return this.buildCartWithAvailableShippingMethods(commercetoolsCart, locale);
        };
        this.buildCartWithAvailableShippingMethods = async (commercetoolsCart, locale) => {
            const cart = await this.assertCorrectLocale(commercetoolsCart, locale);
            if (cart.shippingAddress !== undefined && cart.shippingAddress.country !== undefined) {
                cart.availableShippingMethods = await this.getAvailableShippingMethods(cart);
            }
            return cart;
        };
        this.assertCorrectLocale = async (commercetoolsCart, locale) => {
            if (commercetoolsCart.totalPrice.currencyCode !== locale.currency.toLocaleUpperCase()) {
                return this.recreate(commercetoolsCart, locale);
            }
            if (this.doesCartNeedLocaleUpdate(commercetoolsCart, locale)) {
                const cartUpdate = {
                    version: commercetoolsCart.version,
                    actions: [
                        {
                            action: 'setCountry',
                            country: locale.country,
                        },
                        {
                            action: 'setLocale',
                            country: locale.language,
                        },
                    ],
                };
                commercetoolsCart = await this.updateCart(commercetoolsCart.id, cartUpdate, locale);
                return CartMapper.commercetoolsCartToCart(commercetoolsCart, locale, this.defaultLocale);
            }
            return CartMapper.commercetoolsCartToCart(commercetoolsCart, locale, this.defaultLocale);
        };
        this.recreate = async (primaryCommercetoolsCart, locale) => {
            const primaryCartId = primaryCommercetoolsCart.id;
            const cartVersion = primaryCommercetoolsCart.version;
            const lineItems = primaryCommercetoolsCart.lineItems;
            const cartDraft = {
                currency: locale.currency,
                country: locale.country,
                locale: locale.language,
            };
            const propertyList = [
                'customerId',
                'customerEmail',
                'customerGroup',
                'anonymousId',
                'store',
                'inventoryMode',
                'taxMode',
                'taxRoundingMode',
                'taxCalculationMode',
                'shippingAddress',
                'billingAddress',
                'shippingMethod',
                'externalTaxRateForShippingMethod',
                'deleteDaysAfterLastModification',
                'origin',
                'shippingRateInput',
                'itemShippingAddresses',
            ];
            for (const key of propertyList) {
                if (primaryCommercetoolsCart.hasOwnProperty(key)) {
                    cartDraft[key] = primaryCommercetoolsCart[key];
                }
            }
            let replicatedCommercetoolsCart = await this.requestBuilder()
                .carts()
                .post({
                queryArgs: {
                    expand: [
                        'lineItems[*].discountedPrice.includedDiscounts[*].discount',
                        'discountCodes[*].discountCode',
                        'paymentInfo.payments[*]',
                    ],
                },
                body: cartDraft,
            })
                .execute()
                .then((response) => {
                return response.body;
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
            for (const lineItem of lineItems) {
                try {
                    const cartUpdate = {
                        version: +replicatedCommercetoolsCart.version,
                        actions: [
                            {
                                action: 'addLineItem',
                                sku: lineItem.variant.sku,
                                quantity: +lineItem.quantity,
                            },
                        ],
                    };
                    replicatedCommercetoolsCart = await this.updateCart(replicatedCommercetoolsCart.id, cartUpdate, locale);
                }
                catch (error) {
                }
            }
            await this.requestBuilder()
                .carts()
                .withId({
                ID: primaryCartId,
            })
                .delete({
                queryArgs: {
                    version: cartVersion,
                },
            })
                .execute()
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
            return CartMapper.commercetoolsCartToCart(replicatedCommercetoolsCart, locale, this.defaultLocale);
        };
        this.doesCartNeedLocaleUpdate = (commercetoolsCart, locale) => {
            if (commercetoolsCart.country === undefined) {
                return true;
            }
            if (commercetoolsCart.locale === undefined) {
                return true;
            }
            return commercetoolsCart.country !== locale.country || commercetoolsCart.locale !== locale.language;
        };
        this.productApi = new ProductApi_ProductApi(frontasticContext, locale, currency, request);
    }
    async updateCart(cartId, cartUpdate, locale) {
        return await this.requestBuilder()
            .carts()
            .withId({
            ID: cartId,
        })
            .post({
            queryArgs: {
                expand: [
                    'lineItems[*].discountedPrice.includedDiscounts[*].discount',
                    'discountCodes[*].discountCode',
                    'paymentInfo.payments[*]',
                ],
            },
            body: cartUpdate,
        })
            .execute()
            .then((response) => {
            return response.body;
        })
            .catch((error) => {
            throw new ExternalError({ status: error.code, message: error.message, body: error.body });
        });
    }
    async queryOrders(orderQuery) {
        const locale = await this.getCommercetoolsLocal();
        const limit = +orderQuery.limit || undefined;
        const sortAttributes = [];
        if (orderQuery.sortAttributes !== undefined) {
            Object.keys(orderQuery.sortAttributes).map((field, directionIndex) => {
                sortAttributes.push(`${field} ${Object.values(orderQuery.sortAttributes)[directionIndex]}`);
            });
        }
        else {
            sortAttributes.push(`lastModifiedAt desc`);
        }
        const whereClause = [];
        if (orderQuery.accountId !== undefined) {
            whereClause.push(`customerId="${orderQuery.accountId}"`);
        }
        if (orderQuery.orderIds !== undefined && orderQuery.orderIds.length !== 0) {
            whereClause.push(`id in ("${orderQuery.orderIds.join('","')}")`);
        }
        if (orderQuery.orderNumbers !== undefined && orderQuery.orderNumbers.length !== 0) {
            whereClause.push(`orderNumber in ("${orderQuery.orderNumbers.join('","')}")`);
        }
        if (orderQuery.orderState !== undefined && orderQuery.orderState.length > 0) {
            whereClause.push(`orderState in ("${orderQuery.orderState.join('","')}")`);
        }
        if (orderQuery.businessUnitKey !== undefined) {
            whereClause.push(`businessUnit(key="${orderQuery.businessUnitKey}")`);
        }
        const searchQuery = orderQuery.query && orderQuery.query;
        return this.requestBuilder()
            .orders()
            .get({
            queryArgs: {
                where: whereClause,
                expand: ['orderState'],
                limit: limit,
                offset: getOffsetFromCursor(orderQuery.cursor),
                sort: sortAttributes,
                [`text.${locale.language}`]: searchQuery,
            },
        })
            .execute()
            .then((response) => {
            const orders = response.body.results.map((commercetoolsQuote) => {
                return CartMapper.commercetoolsOrderToOrder(commercetoolsQuote, locale, this.defaultLocale);
            });
            return {
                total: response.body.total,
                items: orders,
                count: response.body.count,
                previousCursor: ProductMapper_ProductMapper.calculatePreviousCursor(response.body.offset, response.body.count),
                nextCursor: ProductMapper_ProductMapper.calculateNextCursor(response.body.offset, response.body.count, response.body.total),
                query: orderQuery,
            };
        })
            .catch((error) => {
            throw new ExternalError({ status: error.code, message: error.message, body: error.body });
        });
    }
    async getCheckoutToken(cart, account) {
        let checkoutToken = this.getSessionCheckoutToken();
        if (!tokenHasExpired(checkoutToken)) {
            return checkoutToken;
        }
        if (checkoutToken.refreshToken) {
            await this.generateCheckoutToken(undefined, undefined, checkoutToken.refreshToken).catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
            return this.getSessionCheckoutToken();
        }
        this.invalidateSessionCheckoutData();
        if (account) {
            throw new TokenError_TokenError({
                message: 'The checkout token has expired and can not be refreshed. Please login again.',
            });
        }
        const anonymousId = this.getAnonymousIdFromSessionData();
        await this.generateCheckoutToken(anonymousId).catch((error) => {
            throw new ExternalError({ status: error.code, message: error.message, body: error.body });
        });
        checkoutToken = this.getSessionCheckoutToken();
        const cartUpdate = {
            version: +cart.cartVersion,
            actions: [
                {
                    action: 'setAnonymousId',
                    anonymousId,
                },
            ],
        };
        const locale = await this.getCommercetoolsLocal();
        await this.updateCart(cart.cartId, cartUpdate, locale);
        return checkoutToken;
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/actionControllers/AccountController.ts






function getAccountApi(request, actionContext) {
    return new AccountApi_AccountApi(actionContext.frontasticContext, getLocale(request), getCurrency(request), request);
}
function getCartApi(request, actionContext) {
    return new CartApi_CartApi(actionContext.frontasticContext, getLocale(request), getCurrency(request), request);
}
async function loginAccount(request, actionContext, account) {
    const accountApi = getAccountApi(request, actionContext);
    const cartApi = getCartApi(request, actionContext);
    const cart = await CartFetcher.fetchCart(cartApi, request, actionContext);
    const anonymousCheckoutToken = await cartApi.getCheckoutToken(cart);
    try {
        account = await accountApi.login(account, cart);
    }
    catch (error) {
        if (error instanceof AccountAuthenticationError_AccountAuthenticationError) {
            const response = {
                statusCode: 401,
                body: JSON.stringify(error.message),
                sessionData: {
                    ...accountApi.getSessionData(),
                },
            };
            return response;
        }
        throw error;
    }
    if (!account.confirmed) {
        accountApi.setSessionCheckoutToken(anonymousCheckoutToken);
        const response = {
            statusCode: 401,
            body: JSON.stringify(`Your email address "${account.email}" was not yet verified.`),
            sessionData: {
                ...accountApi.getSessionData(),
            },
        };
        return response;
    }
    const response = {
        statusCode: 200,
        body: JSON.stringify(account),
        sessionData: {
            ...accountApi.getSessionData(),
            account: account,
        },
    };
    return response;
}
function assertIsAuthenticated(request) {
    const account = fetchAccountFromSession(request);
    if (account === undefined) {
        throw new AccountAuthenticationError_AccountAuthenticationError({ message: 'Not logged in.' });
    }
}
function fetchAccountFromSession(request) {
    var _a;
    if (((_a = request.sessionData) === null || _a === void 0 ? void 0 : _a.account) !== undefined) {
        return request.sessionData.account;
    }
    return undefined;
}
function parseBirthday(accountRegisterBody) {
    var _a, _b;
    if (accountRegisterBody.birthdayYear) {
        return new Date(+accountRegisterBody.birthdayYear, (_a = +(accountRegisterBody === null || accountRegisterBody === void 0 ? void 0 : accountRegisterBody.birthdayMonth)) !== null && _a !== void 0 ? _a : 1, (_b = +(accountRegisterBody === null || accountRegisterBody === void 0 ? void 0 : accountRegisterBody.birthdayDay)) !== null && _b !== void 0 ? _b : 1);
    }
    return null;
}
function mapRequestToAccount(request) {
    const accountRegisterBody = JSON.parse(request.body);
    const account = {
        email: accountRegisterBody === null || accountRegisterBody === void 0 ? void 0 : accountRegisterBody.email,
        password: accountRegisterBody === null || accountRegisterBody === void 0 ? void 0 : accountRegisterBody.password,
        salutation: accountRegisterBody === null || accountRegisterBody === void 0 ? void 0 : accountRegisterBody.salutation,
        firstName: accountRegisterBody === null || accountRegisterBody === void 0 ? void 0 : accountRegisterBody.firstName,
        lastName: accountRegisterBody === null || accountRegisterBody === void 0 ? void 0 : accountRegisterBody.lastName,
        birthday: parseBirthday(accountRegisterBody),
        addresses: [],
    };
    if (accountRegisterBody.billingAddress) {
        accountRegisterBody.billingAddress.isDefaultBillingAddress = true;
        accountRegisterBody.billingAddress.isDefaultShippingAddress = !(accountRegisterBody.shippingAddress !== undefined);
        account.addresses.push(accountRegisterBody.billingAddress);
    }
    if (accountRegisterBody.shippingAddress) {
        accountRegisterBody.shippingAddress.isDefaultShippingAddress = true;
        accountRegisterBody.shippingAddress.isDefaultBillingAddress = !(accountRegisterBody.billingAddress !== undefined);
        account.addresses.push(accountRegisterBody.shippingAddress);
    }
    return account;
}
const getAccount = async (request, actionContext) => {
    const account = fetchAccountFromSession(request);
    if (account === undefined) {
        return {
            statusCode: 200,
            body: JSON.stringify({
                loggedIn: false,
            }),
        };
    }
    const response = {
        statusCode: 200,
        body: JSON.stringify({
            loggedIn: true,
            account,
        }),
        sessionData: {
            ...request.sessionData,
            account: account,
        },
    };
    return response;
};
const register = async (request, actionContext) => {
    const locale = getLocale(request);
    const accountApi = getAccountApi(request, actionContext);
    const cartApi = getCartApi(request, actionContext);
    const accountData = mapRequestToAccount(request);
    const cart = await CartFetcher.fetchCart(cartApi, request, actionContext);
    const account = await accountApi.create(accountData, cart);
    const emailApi = EmailApiFactory_EmailApiFactory.getDefaultApi(actionContext.frontasticContext, locale);
    emailApi.sendWelcomeCustomerEmail(account);
    if (!account.confirmed) {
        emailApi.sendAccountVerificationEmail(account);
    }
    const response = {
        statusCode: 200,
        body: JSON.stringify(account),
        sessionData: {
            ...accountApi.getSessionData(),
        },
    };
    return response;
};
const requestConfirmationEmail = async (request, actionContext) => {
    const locale = getLocale(request);
    const accountApi = getAccountApi(request, actionContext);
    const cartApi = getCartApi(request, actionContext);
    const accountLoginBody = JSON.parse(request.body);
    let account = {
        email: accountLoginBody.email,
        password: accountLoginBody.password,
    };
    const cart = await CartFetcher.fetchCart(cartApi, request, actionContext);
    account = await accountApi.login(account, cart);
    if (account.confirmed) {
        const response = {
            statusCode: 405,
            body: JSON.stringify(`Your email address "${account.email}" was verified already.`),
            sessionData: {
                ...accountApi.getSessionData(),
                account: account,
            },
        };
        return response;
    }
    const emailApi = EmailApiFactory_EmailApiFactory.getDefaultApi(actionContext.frontasticContext, locale);
    emailApi.sendAccountVerificationEmail(account);
    const response = {
        statusCode: 200,
        body: JSON.stringify({}),
        sessionData: {
            ...accountApi.getSessionData(),
        },
    };
    return response;
};
const AccountController_confirm = async (request, actionContext) => {
    const accountApi = new AccountApi_AccountApi(actionContext.frontasticContext, getLocale(request), getCurrency(request));
    const accountConfirmBody = JSON.parse(request.body);
    const account = await accountApi.confirmEmail(accountConfirmBody.token);
    const response = {
        statusCode: 200,
        body: JSON.stringify(account),
        sessionData: {
            ...accountApi.getSessionData(),
            account: account,
        },
    };
    return response;
};
const login = async (request, actionContext) => {
    const accountLoginBody = JSON.parse(request.body);
    const account = {
        email: accountLoginBody.email,
        password: accountLoginBody.password,
    };
    return await loginAccount(request, actionContext, account);
};
const logout = async (request, actionContext) => {
    const accountApi = getAccountApi(request, actionContext);
    accountApi.invalidateSessionCheckoutData();
    return {
        statusCode: 200,
        body: JSON.stringify({}),
        sessionData: {
            ...accountApi.getSessionData(),
            account: undefined,
            cartId: undefined,
            wishlistId: undefined,
        },
    };
};
const AccountController_password = async (request, actionContext) => {
    assertIsAuthenticated(request);
    let account = fetchAccountFromSession(request);
    const accountApi = new AccountApi_AccountApi(actionContext.frontasticContext, getLocale(request), getCurrency(request));
    const accountChangePasswordBody = JSON.parse(request.body);
    account = await accountApi.updatePassword(account, accountChangePasswordBody.oldPassword, accountChangePasswordBody.newPassword);
    return {
        statusCode: 200,
        body: JSON.stringify(account),
        sessionData: {
            ...accountApi.getSessionData(),
            account,
        },
    };
};
const requestReset = async (request, actionContext) => {
    const locale = getLocale(request);
    const accountApi = new AccountApi_AccountApi(actionContext.frontasticContext, locale, getCurrency(request));
    const emailApi = EmailApiFactory_EmailApiFactory.getDefaultApi(actionContext.frontasticContext, locale);
    const accountRequestResetBody = JSON.parse(request.body);
    const passwordResetToken = await accountApi.generatePasswordResetToken(accountRequestResetBody.email);
    emailApi.sendPasswordResetEmail(accountRequestResetBody, passwordResetToken.token);
    return {
        statusCode: 200,
        body: JSON.stringify({}),
        sessionData: {
            ...accountApi.getSessionData(),
            account: undefined,
        },
    };
};
const AccountController_reset = async (request, actionContext) => {
    const accountResetBody = JSON.parse(request.body);
    const accountApi = new AccountApi_AccountApi(actionContext.frontasticContext, getLocale(request), getCurrency(request));
    const account = await accountApi.resetPassword(accountResetBody.token, accountResetBody.newPassword);
    account.password = accountResetBody.newPassword;
    return await loginAccount(request, actionContext, account);
};
const update = async (request, actionContext) => {
    assertIsAuthenticated(request);
    let account = fetchAccountFromSession(request);
    const accountApi = new AccountApi_AccountApi(actionContext.frontasticContext, getLocale(request), getCurrency(request));
    account = {
        ...account,
        ...mapRequestToAccount(request),
    };
    account = await accountApi.update(account);
    return {
        statusCode: 200,
        body: JSON.stringify(account),
        sessionData: {
            ...accountApi.getSessionData(),
            account,
        },
    };
};
const addAddress = async (request, actionContext) => {
    assertIsAuthenticated(request);
    let account = fetchAccountFromSession(request);
    const address = JSON.parse(request.body).address;
    const accountApi = new AccountApi_AccountApi(actionContext.frontasticContext, getLocale(request), getCurrency(request));
    account = await accountApi.addAddress(account, address);
    return {
        statusCode: 200,
        body: JSON.stringify(account),
        sessionData: {
            ...accountApi.getSessionData(),
            account,
        },
    };
};
const addShippingAddress = async (request, actionContext) => {
    assertIsAuthenticated(request);
    let account = fetchAccountFromSession(request);
    const address = JSON.parse(request.body).address;
    const accountApi = new AccountApi_AccountApi(actionContext.frontasticContext, getLocale(request), getCurrency(request));
    account = await accountApi.addShippingAddress(account, address);
    return {
        statusCode: 200,
        body: JSON.stringify(account),
        sessionData: {
            ...accountApi.getSessionData(),
            account,
        },
    };
};
const addBillingAddress = async (request, actionContext) => {
    assertIsAuthenticated(request);
    let account = fetchAccountFromSession(request);
    const address = JSON.parse(request.body).address;
    const accountApi = new AccountApi_AccountApi(actionContext.frontasticContext, getLocale(request), getCurrency(request));
    account = await accountApi.addBillingAddress(account, address);
    return {
        statusCode: 200,
        body: JSON.stringify(account),
        sessionData: {
            ...accountApi.getSessionData(),
            account,
        },
    };
};
const updateAddress = async (request, actionContext) => {
    assertIsAuthenticated(request);
    let account = fetchAccountFromSession(request);
    const address = JSON.parse(request.body);
    const accountApi = new AccountApi_AccountApi(actionContext.frontasticContext, getLocale(request), getCurrency(request));
    account = await accountApi.updateAddress(account, address);
    return {
        statusCode: 200,
        body: JSON.stringify(account),
        sessionData: {
            ...accountApi.getSessionData(),
            account,
        },
    };
};
const removeAddress = async (request, actionContext) => {
    assertIsAuthenticated(request);
    let account = fetchAccountFromSession(request);
    const address = JSON.parse(request.body);
    const accountApi = new AccountApi_AccountApi(actionContext.frontasticContext, getLocale(request), getCurrency(request));
    account = await accountApi.removeAddress(account, address);
    return {
        statusCode: 200,
        body: JSON.stringify(account),
        sessionData: {
            ...accountApi.getSessionData(),
            account,
        },
    };
};
const setDefaultBillingAddress = async (request, actionContext) => {
    assertIsAuthenticated(request);
    let account = fetchAccountFromSession(request);
    const address = JSON.parse(request.body);
    const accountApi = new AccountApi_AccountApi(actionContext.frontasticContext, getLocale(request), getCurrency(request));
    account = await accountApi.setDefaultBillingAddress(account, address);
    return {
        statusCode: 200,
        body: JSON.stringify(account),
        sessionData: {
            ...accountApi.getSessionData(),
            account,
        },
    };
};
const setDefaultShippingAddress = async (request, actionContext) => {
    assertIsAuthenticated(request);
    let account = fetchAccountFromSession(request);
    const address = JSON.parse(request.body);
    const accountApi = new AccountApi_AccountApi(actionContext.frontasticContext, getLocale(request), getCurrency(request));
    account = await accountApi.setDefaultShippingAddress(account, address);
    return {
        statusCode: 200,
        body: JSON.stringify(account),
        sessionData: {
            ...accountApi.getSessionData(),
            account,
        },
    };
};

// CONCATENATED MODULE: ../types/query/ProductQuery.ts
var SortOrder;
(function (SortOrder) {
    SortOrder["ASCENDING"] = "ascending";
    SortOrder["DESCENDING"] = "descending";
})(SortOrder || (SortOrder = {}));

// CONCATENATED MODULE: ./commerce-commercetools/utils/ProductQueryFactory.ts



class ProductQueryFactory_ProductQueryFactory {
    static queryParamsToFacets(queryParams) {
        const facets = [];
        let key;
        let facetData;
        for ([key, facetData] of Object.entries(queryParams.facets)) {
            if ((facetData === null || facetData === void 0 ? void 0 : facetData.terms) && !Array.isArray(facetData.terms)) {
                facetData.terms = Object.values(facetData.terms);
            }
            switch (true) {
                case facetData.min !== undefined && facetData.max !== undefined:
                    facets.push({
                        type: FilterTypes.RANGE,
                        identifier: key,
                        min: +facetData.min,
                        max: +facetData.max,
                    });
                    break;
                case facetData.terms !== undefined:
                    facets.push({
                        type: FilterTypes.TERM,
                        identifier: key,
                        terms: facetData.terms.map((facetValueData) => facetValueData),
                    });
                    break;
                case facetData.boolean !== undefined:
                    facets.push({
                        type: FilterTypes.BOOLEAN,
                        identifier: key,
                        terms: [facetData.boolean],
                    });
                    break;
                default:
                    break;
            }
        }
        return facets;
    }
    static mergeProductFiltersAndValues(queryParams) {
        var _a, _b;
        const filtersData = [];
        if (((_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.productFilters) === null || _a === void 0 ? void 0 : _a.filters) === undefined) {
            return filtersData;
        }
        if (((_b = queryParams === null || queryParams === void 0 ? void 0 : queryParams.productFilters) === null || _b === void 0 ? void 0 : _b.values) === undefined) {
            return queryParams.productFilters.filters;
        }
        queryParams.productFilters.filters.forEach((filter) => {
            var _a;
            if (filter === null || filter === void 0 ? void 0 : filter.field) {
                const filterValues = [(_a = queryParams.productFilters) === null || _a === void 0 ? void 0 : _a.values[filter.field]] || false;
                const filterData = {
                    ...filter,
                    values: filterValues,
                };
                filtersData.push(filterData);
            }
        });
        return filtersData;
    }
    static mergeCategoryFiltersAndValues(queryParams) {
        var _a, _b;
        const filtersData = [];
        if (((_a = queryParams === null || queryParams === void 0 ? void 0 : queryParams.categoryFilters) === null || _a === void 0 ? void 0 : _a.filters) === undefined) {
            return filtersData;
        }
        if (((_b = queryParams === null || queryParams === void 0 ? void 0 : queryParams.categoryFilters) === null || _b === void 0 ? void 0 : _b.values) === undefined) {
            return queryParams.categoryFilters.filters;
        }
        queryParams.categoryFilters.filters.forEach((filter) => {
            if (filter === null || filter === void 0 ? void 0 : filter.field) {
                const filterValues = [queryParams.categoryFilters.values[filter.field]] || false;
                const filterData = {
                    ...filter,
                    values: filterValues,
                };
                filtersData.push(filterData);
            }
        });
        return filtersData;
    }
}
ProductQueryFactory_ProductQueryFactory.queryFromParams = (request, config) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;
    let queryParams;
    const filters = [];
    const productQuery = {
        categories: [],
        productIds: [],
        skus: [],
    };
    const categories = (_b = (_a = config === null || config === void 0 ? void 0 : config.configuration) === null || _a === void 0 ? void 0 : _a.categories) === null || _b === void 0 ? void 0 : _b.split(',').map((val) => val.trim());
    const productIds = (_d = (_c = config === null || config === void 0 ? void 0 : config.configuration) === null || _c === void 0 ? void 0 : _c.productIds) === null || _d === void 0 ? void 0 : _d.split(',').map((val) => val.trim());
    const productSkus = (_f = (_e = config === null || config === void 0 ? void 0 : config.configuration) === null || _e === void 0 ? void 0 : _e.productSkus) === null || _f === void 0 ? void 0 : _f.split(',').map((val) => val.trim());
    if (request === null || request === void 0 ? void 0 : request.query) {
        queryParams = request.query;
    }
    if (config === null || config === void 0 ? void 0 : config.configuration) {
        queryParams = {
            ...queryParams,
            ...config.configuration,
        };
    }
    if (categories && categories.length > 0)
        queryParams.categories = categories;
    if (productIds && productIds.length > 0)
        queryParams.productIds = productIds;
    if (productSkus && productSkus.length > 0)
        queryParams.skus = productSkus;
    productQuery.query = (queryParams === null || queryParams === void 0 ? void 0 : queryParams.query) || undefined;
    if ((queryParams === null || queryParams === void 0 ? void 0 : queryParams.categories) && Array.isArray(queryParams === null || queryParams === void 0 ? void 0 : queryParams.categories)) {
        queryParams.categories.map((category) => {
            productQuery.categories.push(category.toString());
        });
    }
    if (queryParams === null || queryParams === void 0 ? void 0 : queryParams.category) {
        productQuery.categories.push(queryParams.category);
    }
    if ((queryParams === null || queryParams === void 0 ? void 0 : queryParams.productIds) && Array.isArray(queryParams === null || queryParams === void 0 ? void 0 : queryParams.productIds)) {
        queryParams === null || queryParams === void 0 ? void 0 : queryParams.productIds.map((productId) => {
            productQuery.productIds.push(productId.toString());
        });
    }
    if ((queryParams === null || queryParams === void 0 ? void 0 : queryParams.skus) && Array.isArray(queryParams === null || queryParams === void 0 ? void 0 : queryParams.skus)) {
        queryParams === null || queryParams === void 0 ? void 0 : queryParams.skus.map((sku) => {
            productQuery.skus.push(sku.toString());
        });
    }
    const configFiltersData = [];
    configFiltersData.push(...ProductQueryFactory_ProductQueryFactory.mergeProductFiltersAndValues(queryParams));
    configFiltersData.push(...ProductQueryFactory_ProductQueryFactory.mergeCategoryFiltersAndValues(queryParams));
    if (queryParams.minPrice || queryParams.maxPrice) {
        configFiltersData.push({
            type: FilterFieldTypes.MONEY,
            field: 'price',
            values: [
                {
                    min: queryParams === null || queryParams === void 0 ? void 0 : queryParams.minPrice,
                    max: queryParams === null || queryParams === void 0 ? void 0 : queryParams.maxPrice,
                },
            ],
        });
    }
    let key;
    let configFilterData;
    if (configFiltersData instanceof Array) {
        for ([key, configFilterData] of Object.entries(configFiltersData)) {
            if ((configFilterData === null || configFilterData === void 0 ? void 0 : configFilterData.field) === 'categoryId' || (configFilterData === null || configFilterData === void 0 ? void 0 : configFilterData.field) === 'categoryIds') {
                productQuery.categories = configFilterData.values;
                continue;
            }
            switch (configFilterData.type) {
                case FilterFieldTypes.NUMBER:
                case FilterFieldTypes.MONEY:
                    const rangeFilter = {
                        identifier: configFilterData === null || configFilterData === void 0 ? void 0 : configFilterData.field,
                        type: FilterTypes.RANGE,
                        min: +((_h = (_g = configFilterData === null || configFilterData === void 0 ? void 0 : configFilterData.values) === null || _g === void 0 ? void 0 : _g[0]) === null || _h === void 0 ? void 0 : _h.min) || +((_j = configFilterData === null || configFilterData === void 0 ? void 0 : configFilterData.values) === null || _j === void 0 ? void 0 : _j[0]) || undefined,
                        max: +((_l = (_k = configFilterData === null || configFilterData === void 0 ? void 0 : configFilterData.values) === null || _k === void 0 ? void 0 : _k[0]) === null || _l === void 0 ? void 0 : _l.max) || +((_m = configFilterData === null || configFilterData === void 0 ? void 0 : configFilterData.values) === null || _m === void 0 ? void 0 : _m[0]) || undefined,
                    };
                    filters.push(rangeFilter);
                    break;
                case FilterFieldTypes.ENUM:
                    const enumFilter = {
                        identifier: configFilterData === null || configFilterData === void 0 ? void 0 : configFilterData.field,
                        type: FilterTypes.TERM,
                        terms: configFilterData === null || configFilterData === void 0 ? void 0 : configFilterData.values.map((term) => term),
                    };
                    filters.push(enumFilter);
                    break;
                case FilterFieldTypes.BOOLEAN:
                    const booleanFilter = {
                        identifier: configFilterData === null || configFilterData === void 0 ? void 0 : configFilterData.field,
                        type: FilterTypes.BOOLEAN,
                        terms: [configFilterData === null || configFilterData === void 0 ? void 0 : configFilterData.values[0]],
                    };
                    filters.push(booleanFilter);
                    break;
                default:
                    break;
            }
        }
        productQuery.filters = filters;
    }
    if (queryParams.facets) {
        productQuery.facets = ProductQueryFactory_ProductQueryFactory.queryParamsToFacets(queryParams);
    }
    if (queryParams.sortAttributes) {
        const sortAttributes = {};
        let sortAttribute;
        for (sortAttribute of Object.values(queryParams.sortAttributes)) {
            const key = Object.keys(sortAttribute)[0];
            sortAttributes[key] = sortAttribute[key] ? sortAttribute[key] : SortOrder.ASCENDING;
        }
        productQuery.sortAttributes = sortAttributes;
    }
    productQuery.limit = (queryParams === null || queryParams === void 0 ? void 0 : queryParams.limit) || undefined;
    productQuery.cursor = (queryParams === null || queryParams === void 0 ? void 0 : queryParams.cursor) || undefined;
    return productQuery;
};

// CONCATENATED MODULE: ./commerce-commercetools/actionControllers/ProductController.ts




function getProductApi(request, actionContext) {
    return new ProductApi_ProductApi(actionContext.frontasticContext, getLocale(request), getCurrency(request), request);
}
const getProduct = async (request, actionContext) => {
    const productApi = getProductApi(request, actionContext);
    let productQuery = {};
    if ('id' in request.query) {
        productQuery = {
            productIds: [request.query['id']],
        };
    }
    if ('sku' in request.query) {
        productQuery = {
            skus: [request.query['sku']],
        };
    }
    const product = await productApi.getProduct(productQuery);
    const response = {
        statusCode: 200,
        body: JSON.stringify(product),
        sessionData: {
            ...productApi.getSessionData(),
        },
    };
    return response;
};
const ProductController_query = async (request, actionContext) => {
    const productApi = getProductApi(request, actionContext);
    const productQuery = ProductQueryFactory_ProductQueryFactory.queryFromParams(request);
    const queryResult = await productApi.query(productQuery);
    const response = {
        statusCode: 200,
        body: JSON.stringify(queryResult),
        sessionData: {
            ...productApi.getSessionData(),
        },
    };
    return response;
};
const queryCategories = async (request, actionContext) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
    const productApi = getProductApi(request, actionContext);
    const categoryQuery = {
        limit: (_b = (_a = request.query) === null || _a === void 0 ? void 0 : _a.limit) !== null && _b !== void 0 ? _b : undefined,
        cursor: (_d = (_c = request.query) === null || _c === void 0 ? void 0 : _c.cursor) !== null && _d !== void 0 ? _d : undefined,
        slug: (_f = (_e = request.query) === null || _e === void 0 ? void 0 : _e.slug) !== null && _f !== void 0 ? _f : undefined,
        parentId: (_h = (_g = request.query) === null || _g === void 0 ? void 0 : _g.parentId) !== null && _h !== void 0 ? _h : undefined,
        format: (_k = (_j = request.query) === null || _j === void 0 ? void 0 : _j.format) !== null && _k !== void 0 ? _k : CategoryQueryFormat.FLAT,
    };
    const queryResult = await productApi.queryCategories(categoryQuery);
    const response = {
        statusCode: 200,
        body: JSON.stringify(queryResult),
        sessionData: {
            ...productApi.getSessionData(),
        },
    };
    return response;
};
const searchableAttributes = async (request, actionContext) => {
    const productApi = getProductApi(request, actionContext);
    const result = await productApi.getSearchableAttributes();
    const response = {
        statusCode: 200,
        body: JSON.stringify(result),
        sessionData: {
            ...productApi.getSessionData(),
        },
    };
    return response;
};

// CONCATENATED MODULE: ../types/cart/Payment.ts
var PaymentStatuses;
(function (PaymentStatuses) {
    PaymentStatuses["INIT"] = "init";
    PaymentStatuses["PENDING"] = "pending";
    PaymentStatuses["PAID"] = "paid";
    PaymentStatuses["FAILED"] = "failed";
})(PaymentStatuses || (PaymentStatuses = {}));

// CONCATENATED MODULE: ./commerce-commercetools/utils/queryParamsToState.ts
const queryParamsToStates = (param, queryParams) => {
    const states = [];
    const requestParamStates = queryParams === null || queryParams === void 0 ? void 0 : queryParams[param];
    if (requestParamStates) {
        if (Array.isArray(requestParamStates)) {
            states.push(...requestParamStates);
        }
        else {
            const params = requestParamStates.split(',');
            if (params.length > 1) {
                states.push(...params);
            }
            else {
                states.push(requestParamStates);
            }
        }
    }
    return states;
};
/* harmony default export */ var queryParamsToState = (queryParamsToStates);

// CONCATENATED MODULE: ./commerce-commercetools/utils/queryParamsToIds.ts
function queryParamsToIds(param, queryParams) {
    const ids = [];
    const requestParamIds = queryParams === null || queryParams === void 0 ? void 0 : queryParams[param];
    if (requestParamIds) {
        if (Array.isArray(requestParamIds)) {
            ids.push(...requestParamIds);
        }
        else {
            const params = requestParamIds.split(',');
            if (params.length > 1) {
                ids.push(...params);
            }
            else {
                ids.push(requestParamIds);
            }
        }
    }
    return ids;
}
/* harmony default export */ var utils_queryParamsToIds = (queryParamsToIds);

// CONCATENATED MODULE: ./commerce-commercetools/utils/handleError.ts

const handleError = (error, request) => {
    if (error instanceof ExternalError) {
        return {
            statusCode: error.status,
            body: JSON.stringify(error.body),
            sessionData: request === null || request === void 0 ? void 0 : request.sessionData,
        };
    }
    const errorResponse = error;
    return {
        statusCode: 400,
        message: errorResponse.message,
        sessionData: request === null || request === void 0 ? void 0 : request.sessionData,
    };
};
/* harmony default export */ var utils_handleError = (handleError);

// CONCATENATED MODULE: ./commerce-commercetools/utils/fetchAccountFromSession.ts
function fetchAccountFromSession_fetchAccountFromSession(request) {
    var _a;
    if (((_a = request.sessionData) === null || _a === void 0 ? void 0 : _a.account) !== undefined) {
        return request.sessionData.account;
    }
    return undefined;
}
function fetchAccountFromSessionEnsureLoggedIn(request) {
    const account = fetchAccountFromSession_fetchAccountFromSession(request);
    if (!account) {
        throw new Error('Not logged in.');
    }
    return account;
}

// CONCATENATED MODULE: ./commerce-commercetools/errors/CartNotMatchOrderError.ts

class CartNotMatchOrderError_CartNotMatchOrderError extends ExtensionError {
    constructor(options) {
        super(options);
        this.code = 'cart_not_match_order_error';
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/actionControllers/CartController.ts
















function CartController_getCartApi(request, actionContext) {
    return new CartApi_CartApi(actionContext.frontasticContext, getLocale(request), getCurrency(request), request);
}
function queryParamsToSortAttributes(queryParams) {
    const sortAttributes = {};
    if (queryParams.sortAttributes) {
        let sortAttribute;
        for (sortAttribute of Object.values(queryParams.sortAttributes)) {
            const key = Object.keys(sortAttribute)[0];
            sortAttributes[key] = sortAttribute[key] ? sortAttribute[key] : SortOrder.ASCENDING;
        }
    }
    return sortAttributes;
}
async function updateCartFromRequest(cartApi, request, actionContext) {
    var _a;
    let cart = await CartFetcher.fetchCart(cartApi, request, actionContext);
    if ((request === null || request === void 0 ? void 0 : request.body) === undefined || (request === null || request === void 0 ? void 0 : request.body) === '') {
        return cart;
    }
    const body = JSON.parse(request.body);
    if (((_a = body === null || body === void 0 ? void 0 : body.account) === null || _a === void 0 ? void 0 : _a.email) !== undefined) {
        cart = await cartApi.setEmail(cart, body.account.email);
    }
    if ((body === null || body === void 0 ? void 0 : body.shipping) !== undefined || (body === null || body === void 0 ? void 0 : body.billing) !== undefined) {
        const shippingAddress = (body === null || body === void 0 ? void 0 : body.shipping) !== undefined ? body.shipping : body.billing;
        const billingAddress = (body === null || body === void 0 ? void 0 : body.billing) !== undefined ? body.billing : body.shipping;
        cart = await cartApi.setShippingAddress(cart, shippingAddress);
        cart = await cartApi.setBillingAddress(cart, billingAddress);
    }
    return cart;
}
const getCart = async (request, actionContext) => {
    const cartApi = CartController_getCartApi(request, actionContext);
    try {
        const cart = await CartFetcher.fetchCartFromSession(cartApi, request, actionContext);
        return {
            statusCode: 200,
            body: cart ? JSON.stringify(cart) : '',
            sessionData: {
                ...cartApi.getSessionData(),
                ...(cart ? { cartId: cart.cartId } : {}),
            },
        };
    }
    catch (error) {
        const errorResponse = error;
        return {
            statusCode: 400,
            message: errorResponse.message,
        };
    }
};
const resetCart = async (request) => {
    const response = {
        statusCode: 200,
        body: null,
        sessionData: {
            ...request.sessionData,
            cartId: null,
        },
    };
    return response;
};
const addToCart = async (request, actionContext) => {
    var _a, _b;
    const cartApi = CartController_getCartApi(request, actionContext);
    const body = JSON.parse(request.body);
    const lineItem = {
        variant: {
            sku: ((_a = body.variant) === null || _a === void 0 ? void 0 : _a.sku) || undefined,
            price: undefined,
        },
        count: +((_b = body.variant) === null || _b === void 0 ? void 0 : _b.count) || 1,
    };
    let cart = await CartFetcher.fetchCart(cartApi, request, actionContext);
    cart = await cartApi.addToCart(cart, lineItem);
    const cartId = cart.cartId;
    const response = {
        statusCode: 200,
        body: JSON.stringify(cart),
        sessionData: {
            ...cartApi.getSessionData(),
            cartId,
        },
    };
    return response;
};
const replicateCart = async (request, actionContext) => {
    var _a;
    const cartApi = CartController_getCartApi(request, actionContext);
    const orderId = (_a = request.query) === null || _a === void 0 ? void 0 : _a['orderId'];
    if (!orderId) {
        return {
            statusCode: 422,
            body: JSON.stringify(`Order was not found.`),
            sessionData: {
                ...cartApi.getSessionData(),
            },
        };
    }
    try {
        const cart = await cartApi.replicateCart(orderId);
        if (!cart) {
            return {
                statusCode: 400,
                body: JSON.stringify(`We could not replicate cart for order : "${orderId}".`),
                sessionData: {
                    ...cartApi.getSessionData(),
                },
            };
        }
        return {
            statusCode: 200,
            body: JSON.stringify(cart),
            sessionData: {
                ...cartApi.getSessionData(),
                cartId: cart.cartId,
            },
        };
    }
    catch (error) {
        if (error instanceof ExternalError) {
            return {
                statusCode: error.status,
                body: JSON.stringify(error.message),
                sessionData: {
                    ...cartApi.getSessionData(),
                },
            };
        }
        const err = error;
        return {
            statusCode: 400,
            body: JSON.stringify(err.message),
            sessionData: {
                ...cartApi.getSessionData(),
            },
        };
    }
};
const updateLineItem = async (request, actionContext) => {
    var _a, _b;
    const cartApi = CartController_getCartApi(request, actionContext);
    const body = JSON.parse(request.body);
    const lineItem = {
        lineItemId: (_a = body.lineItem) === null || _a === void 0 ? void 0 : _a.id,
        count: +((_b = body.lineItem) === null || _b === void 0 ? void 0 : _b.count) || 1,
    };
    let cart = await CartFetcher.fetchCart(cartApi, request, actionContext);
    cart = await cartApi.updateLineItem(cart, lineItem);
    const cartId = cart.cartId;
    const response = {
        statusCode: 200,
        body: JSON.stringify(cart),
        sessionData: {
            ...cartApi.getSessionData(),
            cartId,
        },
    };
    return response;
};
const removeLineItem = async (request, actionContext) => {
    var _a;
    const cartApi = CartController_getCartApi(request, actionContext);
    const body = JSON.parse(request.body);
    const lineItem = {
        lineItemId: (_a = body.lineItem) === null || _a === void 0 ? void 0 : _a.id,
    };
    let cart = await CartFetcher.fetchCart(cartApi, request, actionContext);
    cart = await cartApi.removeLineItem(cart, lineItem);
    const cartId = cart.cartId;
    const response = {
        statusCode: 200,
        body: JSON.stringify(cart),
        sessionData: {
            ...cartApi.getSessionData(),
            cartId,
        },
    };
    return response;
};
const updateCart = async (request, actionContext) => {
    const cartApi = CartController_getCartApi(request, actionContext);
    const cart = await updateCartFromRequest(cartApi, request, actionContext);
    const cartId = cart.cartId;
    const response = {
        statusCode: 200,
        body: JSON.stringify(cart),
        sessionData: {
            ...cartApi.getSessionData(),
            cartId,
        },
    };
    return response;
};
const checkout = async (request, actionContext) => {
    const locale = getLocale(request);
    const cartApi = CartController_getCartApi(request, actionContext);
    const emailApi = EmailApiFactory_EmailApiFactory.getDefaultApi(actionContext.frontasticContext, locale);
    const cart = await updateCartFromRequest(cartApi, request, actionContext);
    const order = await cartApi.order(cart, { orderNumber: Guid.newGuid(false, ['xxxxxxxxyxxx', 'xxxx-xxxx-yxxx']) });
    emailApi.sendOrderConfirmationEmail({ ...order, email: order.email || cart.email });
    const cartId = undefined;
    const response = {
        statusCode: 200,
        body: JSON.stringify(order),
        sessionData: {
            ...cartApi.getSessionData(),
            cartId,
        },
    };
    return response;
};
const getOrders = async (request, actionContext) => {
    var _a;
    const cartApi = CartController_getCartApi(request, actionContext);
    const account = ((_a = request.sessionData) === null || _a === void 0 ? void 0 : _a.account) !== undefined ? request.sessionData.account : undefined;
    if (account === undefined) {
        throw new AccountAuthenticationError_AccountAuthenticationError({ message: 'Not logged in.' });
    }
    const orders = await cartApi.getOrders(account);
    const response = {
        statusCode: 200,
        body: JSON.stringify(orders),
        sessionData: {
            ...cartApi.getSessionData(),
        },
    };
    return response;
};
const getShippingMethods = async (request, actionContext) => {
    const cartApi = CartController_getCartApi(request, actionContext);
    const onlyMatching = request.query.onlyMatching === 'true';
    const shippingMethods = await cartApi.getShippingMethods(onlyMatching);
    const response = {
        statusCode: 200,
        body: JSON.stringify(shippingMethods),
        sessionData: {
            ...cartApi.getSessionData(),
        },
    };
    return response;
};
const getAvailableShippingMethods = async (request, actionContext) => {
    const cartApi = CartController_getCartApi(request, actionContext);
    const cart = await CartFetcher.fetchCart(cartApi, request, actionContext);
    const availableShippingMethods = await cartApi.getAvailableShippingMethods(cart);
    const response = {
        statusCode: 200,
        body: JSON.stringify(availableShippingMethods),
        sessionData: {
            ...cartApi.getSessionData(),
            cartId: cart.cartId,
        },
    };
    return response;
};
const setShippingMethod = async (request, actionContext) => {
    var _a;
    const cartApi = CartController_getCartApi(request, actionContext);
    let cart = await CartFetcher.fetchCart(cartApi, request, actionContext);
    const body = JSON.parse(request.body);
    const shippingMethod = {
        shippingMethodId: (_a = body.shippingMethod) === null || _a === void 0 ? void 0 : _a.id,
    };
    cart = await cartApi.setShippingMethod(cart, shippingMethod);
    const response = {
        statusCode: 200,
        body: JSON.stringify(cart),
        sessionData: {
            ...cartApi.getSessionData(),
            cartId: cart.cartId,
        },
    };
    return response;
};
const addPaymentByInvoice = async (request, actionContext) => {
    var _a, _b, _c, _d;
    const cartApi = CartController_getCartApi(request, actionContext);
    let cart = await CartFetcher.fetchCart(cartApi, request, actionContext);
    const body = JSON.parse(request.body);
    const payment = {
        ...body.payment,
        paymentProvider: 'frontastic',
        paymentMethod: 'invoice',
        paymentStatus: PaymentStatuses.PENDING,
    };
    if (payment.amountPlanned === undefined) {
        payment.amountPlanned = {};
    }
    payment.amountPlanned.centAmount = (_b = (_a = payment.amountPlanned.centAmount) !== null && _a !== void 0 ? _a : cart.sum.centAmount) !== null && _b !== void 0 ? _b : undefined;
    payment.amountPlanned.currencyCode = (_d = (_c = payment.amountPlanned.currencyCode) !== null && _c !== void 0 ? _c : cart.sum.currencyCode) !== null && _d !== void 0 ? _d : undefined;
    cart = await cartApi.addPayment(cart, payment);
    const response = {
        statusCode: 200,
        body: JSON.stringify(cart),
        sessionData: {
            ...cartApi.getSessionData(),
            cartId: cart.cartId,
        },
    };
    return response;
};
const updatePayment = async (request, actionContext) => {
    const cartApi = CartController_getCartApi(request, actionContext);
    const cart = await CartFetcher.fetchCart(cartApi, request, actionContext);
    const body = JSON.parse(request.body);
    const payment = await cartApi.updatePayment(cart, body.payment);
    const response = {
        statusCode: 200,
        body: JSON.stringify(payment),
        sessionData: {
            ...cartApi.getSessionData(),
            cartId: cart.cartId,
        },
    };
    return response;
};
const redeemDiscount = async (request, actionContext) => {
    const cartApi = CartController_getCartApi(request, actionContext);
    let cart = await CartFetcher.fetchCart(cartApi, request, actionContext);
    const body = JSON.parse(request.body);
    let response;
    try {
        cart = await cartApi.redeemDiscountCode(cart, body.code);
        response = {
            statusCode: 200,
            body: JSON.stringify(cart),
            sessionData: {
                ...cartApi.getSessionData(),
                cartId: cart.cartId,
            },
        };
    }
    catch (error) {
        if (error instanceof CartRedeemDiscountCodeError_CartRedeemDiscountCodeError) {
            response = {
                statusCode: error.status,
                body: JSON.stringify(error.message),
                sessionData: {
                    ...cartApi.getSessionData(),
                    cartId: cart.cartId,
                },
            };
            return response;
        }
        throw error;
    }
    return response;
};
const removeDiscount = async (request, actionContext) => {
    const cartApi = CartController_getCartApi(request, actionContext);
    let cart = await CartFetcher.fetchCart(cartApi, request, actionContext);
    const body = JSON.parse(request.body);
    const discount = {
        discountId: body === null || body === void 0 ? void 0 : body.discountId,
    };
    cart = await cartApi.removeDiscountCode(cart, discount);
    const response = {
        statusCode: 200,
        body: JSON.stringify(cart),
        sessionData: {
            ...cartApi.getSessionData(),
            cartId: cart.cartId,
        },
    };
    return response;
};
const queryOrders = async (request, actionContext) => {
    var _a, _b, _c, _d, _e, _f;
    const locale = getLocale(request);
    const cartApi = new CartApi_CartApi(actionContext.frontasticContext, locale, getCurrency(request));
    const account = fetchAccountFromSession_fetchAccountFromSession(request);
    if (account === undefined) {
        throw new AccountAuthenticationError_AccountAuthenticationError({ message: 'Not logged in.' });
    }
    try {
        const orderQuery = {
            accountId: account.accountId,
            limit: (_b = (_a = request.query) === null || _a === void 0 ? void 0 : _a.limit) !== null && _b !== void 0 ? _b : undefined,
            cursor: (_d = (_c = request.query) === null || _c === void 0 ? void 0 : _c.cursor) !== null && _d !== void 0 ? _d : undefined,
            orderNumbers: utils_queryParamsToIds('orderNumbers', request.query),
            orderIds: utils_queryParamsToIds('orderIds', request.query),
            orderState: queryParamsToState('orderStates', request.query),
            sortAttributes: queryParamsToSortAttributes(request.query),
            query: (_f = (_e = request.query) === null || _e === void 0 ? void 0 : _e.query) !== null && _f !== void 0 ? _f : undefined,
        };
        const queryResult = await cartApi.queryOrders(orderQuery);
        const response = {
            statusCode: 200,
            body: JSON.stringify(queryResult),
            sessionData: {
                ...cartApi.getSessionData(),
            },
        };
        return response;
    }
    catch (error) {
        return utils_handleError(error, request);
    }
};
const getCheckoutOrder = async (request, actionContext) => {
    var _a, _b;
    const locale = getLocale(request);
    const cartApi = new CartApi_CartApi(actionContext.frontasticContext, locale, getCurrency(request));
    const account = fetchAccountFromSession_fetchAccountFromSession(request);
    try {
        const orderQuery = {
            accountId: account === null || account === void 0 ? void 0 : account.accountId,
            orderIds: [(_a = request.query) === null || _a === void 0 ? void 0 : _a.orderId],
            limit: 1,
        };
        const queryResult = await cartApi.queryOrders(orderQuery);
        const order = queryResult.items[0];
        if (account === undefined) {
            if ((order === null || order === void 0 ? void 0 : order.cartId) !== ((_b = request.sessionData) === null || _b === void 0 ? void 0 : _b.cartId)) {
                throw new CartNotMatchOrderError_CartNotMatchOrderError({ message: 'Order does not match the current cart.' });
            }
        }
        const response = {
            statusCode: 200,
            body: JSON.stringify(order),
            sessionData: {
                ...cartApi.getSessionData(),
            },
        };
        return response;
    }
    catch (error) {
        return utils_handleError(error, request);
    }
};
const getCheckoutToken = async (request, actionContext) => {
    let checkoutToken;
    const cartApi = CartController_getCartApi(request, actionContext);
    const cart = await CartFetcher.fetchCart(cartApi, request, actionContext);
    const account = fetchAccountFromSession_fetchAccountFromSession(request);
    try {
        checkoutToken = await cartApi.getCheckoutToken(cart, account);
    }
    catch (error) {
        if (error instanceof TokenError_TokenError) {
            const response = {
                statusCode: 401,
                body: JSON.stringify(error.message),
                sessionData: {
                    ...cartApi.getSessionData(),
                },
            };
            return response;
        }
        if (error instanceof ExternalError) {
            const response = {
                statusCode: error.status,
                body: JSON.stringify(error.message),
                sessionData: {
                    ...cartApi.getSessionData(),
                },
            };
            return response;
        }
        throw error;
    }
    const response = {
        statusCode: 200,
        body: checkoutToken ? JSON.stringify(checkoutToken) : '',
        sessionData: {
            ...cartApi.getSessionData(),
        },
    };
    return response;
};

// CONCATENATED MODULE: ./commerce-commercetools/mappers/WishlistMapper.ts



class WishlistMapper {
}
WishlistMapper.commercetoolsShoppingListToWishlist = (commercetoolsShoppingList, locale, defaultLocale) => {
    var _a, _b;
    return {
        wishlistId: commercetoolsShoppingList.id,
        wishlistVersion: commercetoolsShoppingList.version.toString(),
        anonymousId: commercetoolsShoppingList.anonymousId,
        accountId: (_b = (_a = commercetoolsShoppingList.customer) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : undefined,
        name: LocalizedValue.getLocalizedValue(locale, defaultLocale, commercetoolsShoppingList.name),
        lineItems: (commercetoolsShoppingList.lineItems || []).map((lineItem) => WishlistMapper.commercetoolsLineItemToLineItem(lineItem, locale, defaultLocale)),
    };
};
WishlistMapper.commercetoolsLineItemToLineItem = (commercetoolsLineItem, locale, defaultLocale) => {
    const lineItem = {
        lineItemId: commercetoolsLineItem.id,
        productId: commercetoolsLineItem.productId,
        name: LocalizedValue.getLocalizedValue(locale, defaultLocale, commercetoolsLineItem.name),
        type: 'variant',
        addedAt: new Date(commercetoolsLineItem.addedAt),
        count: commercetoolsLineItem.quantity,
        variant: ProductMapper_ProductMapper.commercetoolsProductVariantToVariant(commercetoolsLineItem.variant, locale),
    };
    lineItem._url = ProductRouter_ProductRouter.generateUrlFor(lineItem);
    return lineItem;
};
WishlistMapper.wishlistToCommercetoolsShoppingListDraft = (wishlist, locale) => {
    return {
        anonymousId: wishlist.anonymousId,
        customer: wishlist.accountId === undefined ? undefined : { typeId: 'customer', id: wishlist.accountId },
        name: { [locale.language]: wishlist.name || '' },
    };
};

// CONCATENATED MODULE: ./commerce-commercetools/apis/WishlistApi.ts



const expandVariants = ['lineItems[*].variant'];
class WishlistApi_WishlistApi extends BaseApi_BaseApi {
    constructor() {
        super(...arguments);
        this.getById = async (wishlistId) => {
            const locale = await this.getCommercetoolsLocal();
            return await this.requestBuilder()
                .shoppingLists()
                .withId({ ID: wishlistId })
                .get({
                queryArgs: {
                    expand: expandVariants,
                },
            })
                .execute()
                .then((response) => {
                return WishlistMapper.commercetoolsShoppingListToWishlist(response.body, locale, this.defaultLocale);
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.getForAccount = async (accountId) => {
            const locale = await this.getCommercetoolsLocal();
            return await this.requestBuilder()
                .shoppingLists()
                .get({
                queryArgs: {
                    where: `customer(id="${accountId}")`,
                    expand: expandVariants,
                },
            })
                .execute()
                .then((response) => {
                return response.body.results.map((shoppingList) => WishlistMapper.commercetoolsShoppingListToWishlist(shoppingList, locale, this.defaultLocale));
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.getByIdForAccount = async (wishlistId, accountId) => {
            const locale = await this.getCommercetoolsLocal();
            return await this.requestBuilder()
                .shoppingLists()
                .withId({ ID: wishlistId })
                .get({
                queryArgs: {
                    where: `customer(id="${accountId}")`,
                    expand: expandVariants,
                },
            })
                .execute()
                .then((response) => {
                return WishlistMapper.commercetoolsShoppingListToWishlist(response.body, locale, this.defaultLocale);
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.create = async (wishlist) => {
            const locale = await this.getCommercetoolsLocal();
            const body = WishlistMapper.wishlistToCommercetoolsShoppingListDraft(wishlist, locale);
            return await this.requestBuilder()
                .shoppingLists()
                .post({
                body: body,
                queryArgs: {
                    expand: expandVariants,
                },
            })
                .execute()
                .then((response) => {
                return WishlistMapper.commercetoolsShoppingListToWishlist(response.body, locale, this.defaultLocale);
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.addToWishlist = async (wishlist, request) => {
            const locale = await this.getCommercetoolsLocal();
            return await this.requestBuilder()
                .shoppingLists()
                .withId({ ID: wishlist.wishlistId })
                .post({
                body: {
                    version: +wishlist.wishlistVersion,
                    actions: [
                        {
                            action: 'addLineItem',
                            sku: request.sku,
                            quantity: request.count,
                        },
                    ],
                },
                queryArgs: {
                    expand: expandVariants,
                },
            })
                .execute()
                .then((response) => {
                return WishlistMapper.commercetoolsShoppingListToWishlist(response.body, locale, this.defaultLocale);
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.removeLineItem = async (wishlist, lineItemId) => {
            const locale = await this.getCommercetoolsLocal();
            return await this.requestBuilder()
                .shoppingLists()
                .withId({ ID: wishlist.wishlistId })
                .post({
                body: {
                    version: +wishlist.wishlistVersion,
                    actions: [
                        {
                            action: 'removeLineItem',
                            lineItemId,
                        },
                    ],
                },
                queryArgs: {
                    expand: expandVariants,
                },
            })
                .execute()
                .then((response) => {
                return WishlistMapper.commercetoolsShoppingListToWishlist(response.body, locale, this.defaultLocale);
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.deleteWishlist = async (wishlist) => {
            await this.requestBuilder()
                .shoppingLists()
                .withId({ ID: wishlist.wishlistId })
                .delete({
                queryArgs: {
                    version: +wishlist.wishlistVersion,
                },
            })
                .execute()
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
        this.updateLineItemCount = async (wishlist, lineItemId, count) => {
            const locale = await this.getCommercetoolsLocal();
            return await this.requestBuilder()
                .shoppingLists()
                .withId({ ID: wishlist.wishlistId })
                .post({
                body: {
                    version: +wishlist.wishlistVersion,
                    actions: [
                        {
                            action: 'changeLineItemQuantity',
                            lineItemId,
                            quantity: count,
                        },
                    ],
                },
                queryArgs: {
                    expand: expandVariants,
                },
            })
                .execute()
                .then((response) => {
                return WishlistMapper.commercetoolsShoppingListToWishlist(response.body, locale, this.defaultLocale);
            })
                .catch((error) => {
                throw new ExternalError({ status: error.code, message: error.message, body: error.body });
            });
        };
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/actionControllers/WishlistController.ts




function getWishlistApi(request, actionContext) {
    return new WishlistApi_WishlistApi(actionContext.frontasticContext, getLocale(request), getCurrency(request), request);
}
function WishlistController_fetchAccountFromSession(request) {
    var _a;
    return (_a = request.sessionData) === null || _a === void 0 ? void 0 : _a.account;
}
function WishlistController_fetchAccountFromSessionEnsureLoggedIn(request) {
    const account = WishlistController_fetchAccountFromSession(request);
    if (!account) {
        throw new AccountAuthenticationError_AccountAuthenticationError({ message: 'Not logged in.' });
    }
    return account;
}
async function fetchWishlistFromSession(request, wishlistApi) {
    var _a, _b;
    if (((_a = request.sessionData) === null || _a === void 0 ? void 0 : _a.wishlistId) !== undefined) {
        try {
            return await wishlistApi.getById((_b = request.sessionData) === null || _b === void 0 ? void 0 : _b.wishlistId);
        }
        catch (error) {
            console.info(`Error fetching the wishlist ${request.sessionData.wishlistId}. ${error}`);
        }
    }
    return undefined;
}
async function fetchWishlist(request, wishlistApi) {
    var _a, _b;
    if (((_a = request.sessionData) === null || _a === void 0 ? void 0 : _a.wishlistId) !== undefined) {
        try {
            return await wishlistApi.getById((_b = request.sessionData) === null || _b === void 0 ? void 0 : _b.wishlistId);
        }
        catch (error) {
            console.info(`Error fetching the wishlist ${request.sessionData.wishlistId}, creating a new one. ${error}`);
        }
    }
    const account = WishlistController_fetchAccountFromSession(request);
    if (account) {
        const wishlistId = request.query.id;
        if (wishlistId !== undefined) {
            return await wishlistApi.getByIdForAccount(wishlistId, account.accountId);
        }
        const accountWishlists = await wishlistApi.getForAccount(account.accountId);
        if (accountWishlists.length > 0) {
            return accountWishlists[0];
        }
        return await wishlistApi.create({ accountId: account.accountId, name: 'Wishlist' });
    }
    return await wishlistApi.create({ anonymousId: Guid.newGuid(), name: 'Wishlist' });
}
const getWishlist = async (request, actionContext) => {
    const wishlistApi = getWishlistApi(request, actionContext);
    const wishlist = await fetchWishlistFromSession(request, wishlistApi);
    return {
        statusCode: 200,
        body: wishlist ? JSON.stringify(wishlist) : '',
        sessionData: {
            ...wishlistApi.getSessionData(),
        },
    };
};
const createWishlist = async (request, actionContext) => {
    var _a;
    const wishlistApi = getWishlistApi(request, actionContext);
    const body = JSON.parse(request.body);
    const account = WishlistController_fetchAccountFromSessionEnsureLoggedIn(request);
    const wishlist = await wishlistApi.create({ accountId: account.accountId, name: (_a = body.name) !== null && _a !== void 0 ? _a : 'Wishlist' });
    return {
        statusCode: 200,
        body: JSON.stringify(wishlist),
        sessionData: {
            ...wishlistApi.getSessionData(),
            wishlistId: wishlist.wishlistId,
        },
    };
};
const addToWishlist = async (request, actionContext) => {
    var _a;
    const wishlistApi = getWishlistApi(request, actionContext);
    const wishlist = await fetchWishlist(request, wishlistApi);
    const body = JSON.parse(request.body);
    const updatedWishlist = await wishlistApi.addToWishlist(wishlist, {
        sku: ((_a = body === null || body === void 0 ? void 0 : body.variant) === null || _a === void 0 ? void 0 : _a.sku) || undefined,
        count: body.count || 1,
    });
    return {
        statusCode: 200,
        body: JSON.stringify(updatedWishlist),
        sessionData: {
            ...wishlistApi.getSessionData(),
            wishlistId: updatedWishlist.wishlistId,
        },
    };
};
const WishlistController_removeLineItem = async (request, actionContext) => {
    var _a, _b;
    const wishlistApi = getWishlistApi(request, actionContext);
    const wishlist = await fetchWishlist(request, wishlistApi);
    const body = JSON.parse(request.body);
    const updatedWishlist = await wishlistApi.removeLineItem(wishlist, (_b = (_a = body.lineItem) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : undefined);
    return {
        statusCode: 200,
        body: JSON.stringify(updatedWishlist),
        sessionData: {
            ...wishlistApi.getSessionData(),
            wishlistId: updatedWishlist.wishlistId,
        },
    };
};
const deleteWishlist = async (request, actionContext) => {
    const wishlistApi = getWishlistApi(request, actionContext);
    const wishlist = await fetchWishlist(request, wishlistApi);
    await wishlistApi.deleteWishlist(wishlist);
    return {
        statusCode: 200,
        body: '',
        sessionData: {
            ...wishlistApi.getSessionData(),
            wishlistId: undefined,
        },
    };
};
const updateLineItemCount = async (request, actionContext) => {
    var _a, _b;
    const wishlistApi = getWishlistApi(request, actionContext);
    const wishlist = await fetchWishlist(request, wishlistApi);
    const body = JSON.parse(request.body);
    const updatedWishlist = await wishlistApi.updateLineItemCount(wishlist, (_b = (_a = body.lineItem) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : undefined, body.count || 1);
    return {
        statusCode: 200,
        body: JSON.stringify(updatedWishlist),
        sessionData: {
            ...wishlistApi.getSessionData(),
            wishlistId: updatedWishlist.wishlistId,
        },
    };
};

// CONCATENATED MODULE: ./commerce-commercetools/apis/ProjectApi.ts

class ProjectApi_ProjectApi extends BaseApi_BaseApi {
    constructor() {
        super(...arguments);
        this.getProjectSettings = async () => {
            return await this.getProject().then((response) => {
                const projectSettings = {
                    name: response.name,
                    countries: response.countries,
                    currencies: response.currencies,
                    languages: response.languages,
                    projectKey: response.key,
                };
                return projectSettings;
            });
        };
    }
}

// CONCATENATED MODULE: ./commerce-commercetools/actionControllers/ProjectController.ts


function getProjectApi(request, actionContext) {
    return new ProjectApi_ProjectApi(actionContext.frontasticContext, getLocale(request), getCurrency(request), request);
}
const getProjectSettings = async (request, actionContext) => {
    const projectApi = getProjectApi(request, actionContext);
    const project = await projectApi.getProjectSettings();
    const response = {
        statusCode: 200,
        body: JSON.stringify(project),
        sessionData: {
            ...projectApi.getSessionData(),
        },
    };
    return response;
};

// CONCATENATED MODULE: ./commerce-commercetools/utils/SearchRouter.ts
var SearchRouter_a;



class SearchRouter_SearchRouter {
    static identifyFrom(request) {
        var _b;
        const urlMatches = (_b = getPath(request)) === null || _b === void 0 ? void 0 : _b.match(/^\/search/);
        if (urlMatches) {
            return true;
        }
        return false;
    }
}
SearchRouter_a = SearchRouter_SearchRouter;
SearchRouter_SearchRouter.loadFor = async (request, frontasticContext) => {
    var _b;
    const productApi = new ProductApi_ProductApi(frontasticContext, getLocale(request), getCurrency(request));
    const urlMatches = (_b = getPath(request)) === null || _b === void 0 ? void 0 : _b.match(/\/search/);
    if (urlMatches) {
        const productQuery = ProductQueryFactory_ProductQueryFactory.queryFromParams({
            ...request,
            query: { ...request.query, query: request.query.query || request.query.q },
        });
        return productApi.query(productQuery);
    }
    return null;
};

// CONCATENATED MODULE: ./commerce-commercetools/utils/CategoryRouter.ts
var CategoryRouter_a;



class CategoryRouter_CategoryRouter {
    static identifyFrom(request) {
        var _b;
        if ((_b = getPath(request)) === null || _b === void 0 ? void 0 : _b.match(/[^/]+(?=\/$|$)/)) {
            return true;
        }
        return false;
    }
}
CategoryRouter_a = CategoryRouter_CategoryRouter;
CategoryRouter_CategoryRouter.loadFor = async (request, frontasticContext) => {
    var _b;
    const productApi = new ProductApi_ProductApi(frontasticContext, getLocale(request), getCurrency(request));
    const urlMatches = (_b = getPath(request)) === null || _b === void 0 ? void 0 : _b.match(/[^/]+(?=\/$|$)/);
    if (urlMatches) {
        const categoryQuery = {
            slug: urlMatches[0],
        };
        const categoryQueryResult = await productApi.queryCategories(categoryQuery);
        if (categoryQueryResult.items.length == 0) {
            return null;
        }
        request.query.categories = [categoryQueryResult.items[0].categoryId];
        const productQuery = ProductQueryFactory_ProductQueryFactory.queryFromParams({
            ...request,
        });
        return await productApi.query(productQuery);
    }
    return null;
};

// CONCATENATED MODULE: ./commerce-commercetools/index.ts












const getPreviewPayload = (queryResult) => {
    return queryResult.items.map((product) => {
        var _a;
        return {
            title: product.name,
            image: (_a = product === null || product === void 0 ? void 0 : product.variants[0]) === null || _a === void 0 ? void 0 : _a.images[0],
        };
    });
};
/* harmony default export */ var commerce_commercetools = ({
    'dynamic-page-handler': async (request, context) => {
        var _a;
        const staticPageMatch = (_a = getPath(request)) === null || _a === void 0 ? void 0 : _a.match(/^\/(cart|checkout|wishlist|account|login|register|reset-password|thank-you)$/);
        if (staticPageMatch) {
            return {
                dynamicPageType: `frontastic${staticPageMatch[0]}`,
                dataSourcePayload: {},
                pageMatchingPayload: {},
            };
        }
        if (ProductRouter_ProductRouter.identifyFrom(request)) {
            return ProductRouter_ProductRouter.loadFor(request, context.frontasticContext).then((product) => {
                if (product) {
                    return {
                        dynamicPageType: 'frontastic/product-detail-page',
                        dataSourcePayload: {
                            product: product,
                        },
                        pageMatchingPayload: {
                            product: product,
                        },
                    };
                }
                return null;
            });
        }
        if (SearchRouter_SearchRouter.identifyFrom(request)) {
            return SearchRouter_SearchRouter.loadFor(request, context.frontasticContext).then((result) => {
                if (result) {
                    return {
                        dynamicPageType: 'frontastic/search',
                        dataSourcePayload: result,
                        pageMatchingPayload: result,
                    };
                }
                return null;
            });
        }
        if (CategoryRouter_CategoryRouter.identifyFrom(request)) {
            return CategoryRouter_CategoryRouter.loadFor(request, context.frontasticContext).then((result) => {
                if (result) {
                    return {
                        dynamicPageType: 'frontastic/category',
                        dataSourcePayload: result,
                        pageMatchingPayload: result,
                    };
                }
                return null;
            });
        }
        return null;
    },
    'data-sources': {
        'frontastic/product-list': async (config, context) => {
            const productApi = new ProductApi_ProductApi(context.frontasticContext, getLocale(context.request), getCurrency(context.request));
            const productQuery = ProductQueryFactory_ProductQueryFactory.queryFromParams(context === null || context === void 0 ? void 0 : context.request, config);
            return await productApi.query(productQuery).then((queryResult) => {
                return !context.isPreview
                    ? { dataSourcePayload: queryResult }
                    : {
                        dataSourcePayload: queryResult,
                        previewPayload: getPreviewPayload(queryResult),
                    };
            });
        },
        'frontastic/similar-products': async (config, context) => {
            var _a, _b, _c, _d, _e;
            if (!context.hasOwnProperty('request')) {
                throw new Errors_ValidationError({
                    message: `Request is not defined in context ${context}`,
                });
            }
            const productApi = new ProductApi_ProductApi(context.frontasticContext, getLocale(context.request), getCurrency(context.request));
            const productQuery = ProductQueryFactory_ProductQueryFactory.queryFromParams(context.request, config);
            const query = {
                ...productQuery,
                categories: [
                    (_e = (_d = (_c = (_b = (_a = context.pageFolder.dataSourceConfigurations.find((stream) => stream.streamId === '__master')) === null || _a === void 0 ? void 0 : _a.preloadedValue) === null || _b === void 0 ? void 0 : _b.product) === null || _c === void 0 ? void 0 : _c.categories) === null || _d === void 0 ? void 0 : _d[0]) === null || _e === void 0 ? void 0 : _e.categoryId,
                ],
            };
            return await productApi.query(query).then((queryResult) => {
                return !context.isPreview
                    ? { dataSourcePayload: queryResult }
                    : {
                        dataSourcePayload: queryResult,
                        previewPayload: getPreviewPayload(queryResult),
                    };
            });
        },
        'frontastic/product': async (config, context) => {
            const productApi = new ProductApi_ProductApi(context.frontasticContext, getLocale(context.request), getCurrency(context.request));
            const productQuery = ProductQueryFactory_ProductQueryFactory.queryFromParams(context === null || context === void 0 ? void 0 : context.request, config);
            return await productApi.getProduct(productQuery).then((queryResult) => {
                var _a;
                const payLoadResult = { dataSourcePayload: { product: queryResult } };
                return !context.isPreview
                    ? payLoadResult
                    : {
                        payLoadResult,
                        previewPayload: [
                            {
                                title: queryResult.name,
                                image: (_a = queryResult === null || queryResult === void 0 ? void 0 : queryResult.variants[0]) === null || _a === void 0 ? void 0 : _a.images[0],
                            },
                        ],
                    };
            });
        },
        'frontastic/other-products': async (config, context) => {
            if (!context.hasOwnProperty('request')) {
                throw new Errors_ValidationError({
                    message: `Request is not defined in context ${context}`,
                });
            }
            const productApi = new ProductApi_ProductApi(context.frontasticContext, getLocale(context.request), getCurrency(context.request));
            const productQuery = ProductQueryFactory_ProductQueryFactory.queryFromParams(context.request, config);
            const shuffleArray = (array) => {
                for (let i = array.length - 1; i > 0; i--) {
                    const j = Math.floor(Math.random() * (i + 1));
                    const temp = array[i];
                    array[i] = array[j];
                    array[j] = temp;
                }
                return array;
            };
            return await productApi.query(productQuery).then((queryResult) => {
                return {
                    dataSourcePayload: {
                        ...queryResult,
                        items: shuffleArray(queryResult.items),
                    },
                };
            });
        },
        'frontastic/empty': async (config, context) => {
            return !context.isPreview
                ? { dataSourcePayload: {} }
                : {
                    dataSourcePayload: {},
                    previewPayload: [],
                };
        },
    },
    actions: {
        account: AccountController_namespaceObject,
        cart: CartController_namespaceObject,
        product: ProductController_namespaceObject,
        wishlist: WishlistController_namespaceObject,
        project: ProjectController_namespaceObject,
    },
});

// EXTERNAL MODULE: ./node_modules/contentful/dist/es-modules/contentful.js
var contentful = __webpack_require__(341);

// CONCATENATED MODULE: ./content-contentful/mappers/ContentfulMapper.ts
class ContentfulMapper {
    static contentfulEntryToContent(contentfulEntry, contentfulContentType) {
        const attributes = this.contentfulFieldsToAttributes(contentfulEntry.fields, contentfulContentType);
        return {
            contentId: contentfulEntry.sys.id,
            contentTypeId: contentfulEntry.sys.contentType.sys.id,
            name: attributes.hasOwnProperty(contentfulContentType.displayField) &&
                typeof attributes[contentfulContentType.displayField].content === 'string'
                ? attributes[contentfulContentType.displayField].content
                : undefined,
            attributes: attributes,
        };
    }
    static contentfulFieldsToAttributes(fields, contentfulContentType) {
        var _a;
        const attributes = {};
        for (const [key, value] of Object.entries(fields)) {
            attributes[key] = {
                attributeId: key,
                content: typeof value === 'string' || typeof value === 'number'
                    ? value.toString()
                    : this.contentfulCompoundAttributeToAttributeContent(value),
                type: (_a = contentfulContentType.fields.find((field) => {
                    return field.id === key;
                })) === null || _a === void 0 ? void 0 : _a.type,
            };
        }
        return attributes;
    }
    static contentfulCompoundAttributeToAttributeContent(value) {
        var _a;
        if (((_a = value.sys) === null || _a === void 0 ? void 0 : _a.type) === 'Asset') {
            return this.contentfulAsseToAsset(value);
        }
        if (value.data && value.content && value.nodeType == 'document') {
            return this.contentfulRichTextContentListToContentList(value.content);
        }
        const content = {};
        for (const [key, data] of Object.entries(value)) {
            content[key] = data;
        }
        return content;
    }
    static contentfulRichTextContentListToContentList(richTextContentList) {
        return richTextContentList.map((richTextContent) => {
            return richTextContent;
        });
    }
    static contentfulAsseToAsset(contentfulAsset) {
        return {
            url: contentfulAsset.fields.file.url,
            title: contentfulAsset.fields.title,
            description: contentfulAsset.fields.description,
        };
    }
}

// CONCATENATED MODULE: ./content-contentful/utils/Context.ts
const content_contentful_utils_Context_projectConfigurationOverrides = {};
const content_contentful_utils_Context_isDevEnv = (context) => {
    return context.environment === 'development' || context.environment === 'dev';
};
const content_contentful_utils_Context_getFromProjectConfig = (key, context) => {
    if (content_contentful_utils_Context_isDevEnv(context) && content_contentful_utils_Context_projectConfigurationOverrides[key]) {
        return content_contentful_utils_Context_projectConfigurationOverrides[key];
    }
    return context.projectConfiguration[key];
};

// CONCATENATED MODULE: ./content-contentful/apis/ContentApi.ts



class ContentApi_ContentApi {
    constructor(frontasticContext, locale) {
        var _a, _b, _c, _d;
        let space = content_contentful_utils_Context_getFromProjectConfig('EXTENSION_CONTENTFUL_SPACE_ID', frontasticContext);
        if (!space) {
            space = (_b = (_a = frontasticContext.project.configuration) === null || _a === void 0 ? void 0 : _a.contentful) === null || _b === void 0 ? void 0 : _b.space;
        }
        let accessToken = content_contentful_utils_Context_getFromProjectConfig('EXTENSION_CONTENTFUL_ACCESS_TOKEN', frontasticContext);
        if (!accessToken) {
            accessToken = (_d = (_c = frontasticContext.project.configuration) === null || _c === void 0 ? void 0 : _c.contentful) === null || _d === void 0 ? void 0 : _d.accessToken;
        }
        this.client = Object(contentful["createClient"])({
            space: space,
            accessToken: accessToken,
        });
        this.locale = this.formatLocale(locale !== null ? locale : frontasticContext.project.defaultLocale);
    }
    formatLocale(locale) {
        return locale.replace('_', '-');
    }
    async getContent(id) {
        const contentfulEntry = await this.client.getEntry(id, { locale: this.locale });
        const contentfulContentType = await this.client.getContentType(contentfulEntry.sys.contentType.sys.id);
        return ContentfulMapper.contentfulEntryToContent(contentfulEntry, contentfulContentType);
    }
}

// CONCATENATED MODULE: ./content-contentful/utils/Request.ts
const Request_getPath = (request) => {
    var _a;
    return (_a = Request_getHeader(request, 'frontastic-path')) !== null && _a !== void 0 ? _a : request.query.path;
};
const Request_getLocale = (request) => {
    var _a, _b;
    if (request !== undefined) {
        const locale = (_a = Request_getHeader(request, 'frontastic-locale')) !== null && _a !== void 0 ? _a : request.query.locale;
        if (locale !== undefined) {
            return (_b = Request_getHeader(request, 'frontastic-locale')) !== null && _b !== void 0 ? _b : request.query.locale;
        }
    }
    return null;
};
const Request_getHeader = (request, header) => {
    if (request.headers && header in request.headers) {
        const foundHeader = request.headers[header];
        if (Array.isArray(foundHeader)) {
            return foundHeader[0];
        }
        return foundHeader;
    }
    return null;
};

// CONCATENATED MODULE: ./content-contentful/actionControllers/ContentController.ts


const getContent = async (request, actionContext) => {
    const contentApi = new ContentApi_ContentApi(actionContext.frontasticContext, Request_getLocale(request));
    const data = await contentApi.getContent(request.query.id);
    const response = {
        statusCode: 200,
        body: JSON.stringify(data),
        sessionData: request.sessionData,
    };
    return response;
};

// CONCATENATED MODULE: ./content-contentful/index.ts



/* harmony default export */ var content_contentful = ({
    'data-sources': {
        'frontastic/content': async (config, context) => {
            const contentApi = new ContentApi_ContentApi(context.frontasticContext, Request_getLocale(context.request));
            return await contentApi.getContent(config.configuration.contentId).then((contentResult) => {
                return !context.isPreview
                    ? { dataSourcePayload: contentResult }
                    : {
                        dataSourcePayload: contentResult,
                        previewPayload: [
                            {
                                title: contentResult.name,
                            },
                        ],
                    };
            });
        },
    },
    actions: {
        content: ContentController_namespaceObject,
    },
});

// CONCATENATED MODULE: ./content-dynamicyield/apis/BaseApi.ts

class apis_BaseApi_BaseApi {
    constructor(frontasticContext, userId, sessionId) {
        this.userId = userId;
        this.sessionId = sessionId;
        this.dyClient = this.createDyClient(frontasticContext);
    }
    getSessionId() {
        return this.sessionId;
    }
    getUserId() {
        return this.userId;
    }
    getDyClient() {
        return this.dyClient;
    }
    createDyClient(frontasticContext) {
        var _a, _b, _c, _d;
        let apikey = getFromProjectConfig('EXTENSION_DYNAMICYIELD_API_KEY', frontasticContext);
        if (!apikey) {
            apikey = (_b = (_a = frontasticContext.project.configuration) === null || _a === void 0 ? void 0 : _a.dynamicyield) === null || _b === void 0 ? void 0 : _b.apiKey;
        }
        let host = getFromProjectConfig('EXTENSION_DYNAMICYIELD_HOST', frontasticContext);
        if (!host) {
            host = (_d = (_c = frontasticContext.project.configuration) === null || _c === void 0 ? void 0 : _c.dynamicyield) === null || _d === void 0 ? void 0 : _d.host;
        }
        const dyClient = {
            apiKey: apikey,
            url: `${host}/v2/serve/user/choose`,
        };
        return dyClient;
    }
}

// CONCATENATED MODULE: ./content-dynamicyield/mappers/DynamicYieldMapper.ts
class DynamicYieldMapper {
    static mapToVariants(slotItem, price) {
        var _a, _b;
        const variants = [];
        const variant = {
            sku: slotItem === null || slotItem === void 0 ? void 0 : slotItem.sku,
            price: price,
            groupId: (_a = slotItem === null || slotItem === void 0 ? void 0 : slotItem.productData) === null || _a === void 0 ? void 0 : _a.group_id,
            images: [(_b = slotItem === null || slotItem === void 0 ? void 0 : slotItem.productData) === null || _b === void 0 ? void 0 : _b.image_url],
        };
        variants.push(variant);
        return variants;
    }
    static mapToCategories(slotItem) {
        var _a;
        const categories = [];
        const categoriesText = (_a = slotItem === null || slotItem === void 0 ? void 0 : slotItem.productData) === null || _a === void 0 ? void 0 : _a.categories;
        categoriesText.forEach((categoryName) => {
            const category = {
                name: categoryName,
            };
            categories.push(category);
        });
        return categories;
    }
    static mapChooseResponseToProducts(result) {
        var _a, _b, _c;
        const products = [];
        const resultJson = JSON.parse(result);
        const variation = (_a = resultJson === null || resultJson === void 0 ? void 0 : resultJson.choices[0]) === null || _a === void 0 ? void 0 : _a.variations[0];
        const slots = (_c = (_b = variation === null || variation === void 0 ? void 0 : variation.payload) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.slots;
        slots.forEach((slotItem) => {
            var _a, _b, _c, _d;
            const price = {
                fractionDigits: 2,
                centAmount: (_a = slotItem === null || slotItem === void 0 ? void 0 : slotItem.productData) === null || _a === void 0 ? void 0 : _a.price,
            };
            const variants = this.mapToVariants(slotItem, price);
            const categories = this.mapToCategories(slotItem);
            const product = {
                name: (_b = slotItem === null || slotItem === void 0 ? void 0 : slotItem.productData) === null || _b === void 0 ? void 0 : _b.name,
                description: (_c = slotItem === null || slotItem === void 0 ? void 0 : slotItem.productData) === null || _c === void 0 ? void 0 : _c.description,
                _url: (_d = slotItem === null || slotItem === void 0 ? void 0 : slotItem.productData) === null || _d === void 0 ? void 0 : _d.url,
                categories,
                variants,
            };
            products.push(product);
        });
        return products;
    }
}

// CONCATENATED MODULE: ./content-dynamicyield/utils/Errors.ts
class Errors_ExtensionError extends Error {
    constructor({ message, errors }) {
        var _a;
        super(message || ((_a = errors === null || errors === void 0 ? void 0 : errors[0]) === null || _a === void 0 ? void 0 : _a.message));
        this.errors = errors || [{ message }];
    }
}
class utils_Errors_ValidationError extends Errors_ExtensionError {
    constructor(options) {
        super(options);
        this.code = 'validation_error';
    }
}
class Errors_ExternalError extends Errors_ExtensionError {
    constructor(options) {
        super(options);
        this.status = options.status;
        this.body = options.body;
        this.code = 'external_error';
    }
}

// CONCATENATED MODULE: ./content-dynamicyield/apis/DynamicYieldApi.ts




class DynamicYieldApi_DynamicYieldApi extends apis_BaseApi_BaseApi {
    async choose(dyContext, selectors = []) {
        const userId = this.getUserId();
        const sessionId = this.getSessionId();
        const body = {
            selector: {
                names: selectors,
            },
            user: {
                id: userId,
            },
            session: {
                custom: sessionId,
            },
            context: dyContext,
        };
        const headers = {
            'dy-api-key': this.getDyClient().apiKey,
            'Content-Type': 'application/json',
        };
        const resultBody = await Object(lib["default"])(this.getDyClient().url, {
            method: 'post',
            body: JSON.stringify(body),
            headers,
        })
            .then((response) => response.json())
            .catch((error) => {
            throw new Errors_ExternalError({ status: error.code, message: error.message, body: error.body });
        });
        const stringifyResultBody = JSON.stringify(resultBody);
        const items = DynamicYieldMapper.mapChooseResponseToProducts(stringifyResultBody);
        return items;
    }
}

// CONCATENATED MODULE: ./content-dynamicyield/utils/Request.ts
const utils_Request_getPath = (request) => {
    var _a;
    return (_a = utils_Request_getHeader(request, 'frontastic-path')) !== null && _a !== void 0 ? _a : request.query.path;
};
const utils_Request_getLocale = (request) => {
    var _a, _b;
    if (request !== undefined) {
        const locale = (_a = utils_Request_getHeader(request, 'frontastic-locale')) !== null && _a !== void 0 ? _a : request.query.locale;
        if (locale !== undefined) {
            return (_b = utils_Request_getHeader(request, 'frontastic-locale')) !== null && _b !== void 0 ? _b : request.query.locale;
        }
    }
    return null;
};
const getContext = (request, pageContextType) => {
    const referrer = utils_Request_getHeader(request, 'referrer');
    const userAgent = utils_Request_getHeader(request, 'userAgent');
    const ip = request === null || request === void 0 ? void 0 : request.clientIp;
    const hostname = request === null || request === void 0 ? void 0 : request.hostname;
    const path = utils_Request_getPath(request);
    const query = request === null || request === void 0 ? void 0 : request.query;
    const data = [];
    const dyContext = {
        page: {
            location: `https://${hostname}${path}`,
            referrer: referrer || '',
            type: pageContextType,
            data,
        },
        device: {
            userAgent: userAgent || '',
            ip,
        },
        pageAttributes: query,
    };
    return dyContext;
};
const utils_Request_getHeader = (request, header) => {
    if (request.headers && header in request.headers) {
        const foundHeader = request.headers[header];
        if (Array.isArray(foundHeader)) {
            return foundHeader[0];
        }
        return foundHeader;
    }
    return null;
};

// CONCATENATED MODULE: ./content-dynamicyield/index.ts



/* harmony default export */ var content_dynamicyield = ({
    'data-sources': {
        'dynamicyield/product-recommendations-campaign': async (config, context) => {
            var _a, _b, _c, _d, _e, _f, _g, _h;
            if (!context.hasOwnProperty('request')) {
                throw new utils_Errors_ValidationError({
                    message: `Request is not defined in context ${context}`,
                });
            }
            const userId = (_b = (_a = context.request) === null || _a === void 0 ? void 0 : _a.query) === null || _b === void 0 ? void 0 : _b.dyId;
            const sessionId = (_d = (_c = context.request) === null || _c === void 0 ? void 0 : _c.query) === null || _d === void 0 ? void 0 : _d.dySessionId;
            if (!userId) {
                throw new utils_Errors_ValidationError({
                    message: `dyId user ID is not defined in request query ${JSON.stringify((_e = context.request) === null || _e === void 0 ? void 0 : _e.query)}`,
                });
            }
            if (!sessionId) {
                throw new utils_Errors_ValidationError({
                    message: `dySessionId is not defined in request query ${JSON.stringify((_f = context.request) === null || _f === void 0 ? void 0 : _f.query)}`,
                });
            }
            const dyApi = new DynamicYieldApi_DynamicYieldApi(context.frontasticContext, userId, sessionId);
            const pageContextType = (_g = config === null || config === void 0 ? void 0 : config.configuration) === null || _g === void 0 ? void 0 : _g.pageContextType;
            if (!pageContextType) {
                throw new utils_Errors_ValidationError({
                    message: `Page context type is not defined in configuration ${config}`,
                });
            }
            const dyContext = getContext(context.request, pageContextType);
            const campaignSelectorName = (_h = config === null || config === void 0 ? void 0 : config.configuration) === null || _h === void 0 ? void 0 : _h.campaignSelectorName;
            if (!campaignSelectorName) {
                throw new utils_Errors_ValidationError({
                    message: `Dynamicyield campaign selector name is not defined in configuration ${config}`,
                });
            }
            const selector = [campaignSelectorName];
            const items = await dyApi.choose(dyContext, selector);
            return {
                dataSourcePayload: { items },
            };
        },
    },
});

// EXTERNAL MODULE: ./node_modules/dc-delivery-sdk-js/build/module/index.js
var build_module = __webpack_require__(344);

// CONCATENATED MODULE: ./content-amplience/mappers/ContentMapper.ts
class ContentMapper {
    static buildUrl(mediaObj, suffix) {
        var _a;
        return `https://${(_a = mediaObj.host) !== null && _a !== void 0 ? _a : mediaObj.defaultHost}/${suffix}/${mediaObj.endpoint}/${mediaObj.name}`;
    }
    static amplienceContentToContent({ _meta, ...attrs }) {
        const content = { _meta };
        for (const attr in attrs) {
            if (!attrs[attr]._meta) {
                content[attr] = attrs[attr];
                continue;
            }
            switch (attrs[attr]._meta.schema) {
                case 'http://bigcontent.io/cms/schema/v1/core#/definitions/image-link':
                    content[attr] = this.buildUrl(attrs[attr], 'i');
                    break;
                case 'http://bigcontent.io/cms/schema/v1/core#/definitions/video-link':
                    content[attr] = this.buildUrl(attrs[attr], 'v');
                    break;
                default:
                    content[attr] = attrs[attr];
            }
        }
        return content;
    }
}

// CONCATENATED MODULE: ./content-amplience/utils/Context.ts
const content_amplience_utils_Context_projectConfigurationOverrides = {};
const content_amplience_utils_Context_isDevEnv = (context) => {
    return context.environment === 'development' || context.environment === 'dev';
};
const content_amplience_utils_Context_getFromProjectConfig = (key, context) => {
    if (content_amplience_utils_Context_isDevEnv(context) && content_amplience_utils_Context_projectConfigurationOverrides[key]) {
        return content_amplience_utils_Context_projectConfigurationOverrides[key];
    }
    return context.projectConfiguration[key];
};

// CONCATENATED MODULE: ./content-amplience/apis/ContentApi.ts



class apis_ContentApi_ContentApi {
    constructor(frontasticContext, locale) {
        var _a, _b;
        this.locale = (locale !== null && locale !== void 0 ? locale : frontasticContext.project.defaultLocale).replace('_', '-');
        let hubName = content_amplience_utils_Context_getFromProjectConfig('EXTENSION_AMPLIENCE_HUB_NAME', frontasticContext);
        if (!hubName) {
            hubName = (_b = (_a = frontasticContext.project.configuration) === null || _a === void 0 ? void 0 : _a.amplience) === null || _b === void 0 ? void 0 : _b.hubName;
        }
        this.client = new build_module["ContentClient"]({
            hubName: hubName,
            locale: this.locale,
        });
    }
    async getContentById(contentId) {
        const response = await this.client.getContentItemById(contentId);
        return ContentMapper.amplienceContentToContent(response.body);
    }
    async getContentList({ contentType, filters, sorting, limit = 12, resolveHierarchyTree = false, }) {
        let query = this.client.filterByContentType(contentType);
        if (filters)
            filters.forEach(([key, val]) => (query = query.filterBy(`/${key}`, val)));
        if (sorting)
            sorting.forEach(([key, val]) => (query = query.filterBy(key, val.toUpperCase())));
        query = query.page(limit);
        const response = await query.request({
            depth: resolveHierarchyTree ? 'all' : 'root',
            format: 'inlined',
            locale: this.locale,
        });
        return response.responses.map(({ content }) => ContentMapper.amplienceContentToContent(content));
    }
}

// CONCATENATED MODULE: ./content-amplience/utils/Request.ts
const content_amplience_utils_Request_getPath = (request) => {
    var _a;
    return (_a = content_amplience_utils_Request_getHeader(request, 'frontastic-path')) !== null && _a !== void 0 ? _a : request.query.path;
};
const content_amplience_utils_Request_getLocale = (request) => {
    var _a, _b;
    if (request !== undefined) {
        const locale = (_a = content_amplience_utils_Request_getHeader(request, 'frontastic-locale')) !== null && _a !== void 0 ? _a : request.query.locale;
        if (locale !== undefined) {
            return (_b = content_amplience_utils_Request_getHeader(request, 'frontastic-locale')) !== null && _b !== void 0 ? _b : request.query.locale;
        }
    }
    return null;
};
const content_amplience_utils_Request_getHeader = (request, header) => {
    if (request.headers && header in request.headers) {
        const foundHeader = request.headers[header];
        if (Array.isArray(foundHeader)) {
            return foundHeader[0];
        }
        return foundHeader;
    }
    return null;
};

// CONCATENATED MODULE: ./content-amplience/index.ts


/* harmony default export */ var content_amplience = ({
    'data-sources': {
        'amplience/content': async (config, context) => {
            const contentApi = new apis_ContentApi_ContentApi(context.frontasticContext, content_amplience_utils_Request_getLocale(context.request));
            const { contentId } = config.configuration;
            const payload = await contentApi.getContentById(contentId);
            return {
                dataSourcePayload: payload,
            };
        },
        'amplience/content-list': async (config, context) => {
            const contentApi = new apis_ContentApi_ContentApi(context.frontasticContext, content_amplience_utils_Request_getLocale(context.request));
            const { contentType, filters, sorting, limit, resolveHierarchyTree } = config.configuration;
            const payload = await contentApi.getContentList({
                contentType,
                filters: filters ? filters.split(' ').map((token) => token.split('=')) : null,
                sorting: sorting ? sorting.split(' ').map((token) => token.split('=')) : null,
                limit,
                resolveHierarchyTree,
            });
            return {
                dataSourcePayload: payload,
            };
        },
    },
});

// EXTERNAL MODULE: ./node_modules/contentstack/dist/node/contentstack.js
var contentstack = __webpack_require__(346);

// CONCATENATED MODULE: ./content-contentstack/mappers/ContentMapper.ts
class ContentMapper_ContentMapper {
    static contentstackEntryToContent(response) {
        var _a;
        response = JSON.parse(JSON.stringify(response));
        delete response._version;
        delete response.created_at;
        delete response.created_by;
        delete response.updated_at;
        delete response.updated_by;
        delete response.publish_details;
        return {
            title: response.title,
            contentId: response.uid,
            contentTypeId: response.contentTypeUid,
            banner: (_a = response.featured_image) === null || _a === void 0 ? void 0 : _a.url,
            summary: response.multi_line,
        };
    }
}

// CONCATENATED MODULE: ./content-contentstack/apis/ContentApi.ts



class content_contentstack_apis_ContentApi_ContentApi {
    constructor(frontasticContext, locale) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        this.locale = (locale !== null && locale !== void 0 ? locale : frontasticContext.project.defaultLocale).replace('_', '-');
        let apiKey = content_contentful_utils_Context_getFromProjectConfig('EXTENSION_CONTENTSTACK_API_KEY', frontasticContext);
        let deliveryToken = content_contentful_utils_Context_getFromProjectConfig('EXTENSION_CONTENTSTACK_DELIVERY_TOKEN', frontasticContext);
        let environment = content_contentful_utils_Context_getFromProjectConfig('EXTENSION_CONTENTSTACK_ENVIRONMENT', frontasticContext);
        let region = content_contentful_utils_Context_getFromProjectConfig('EXTENSION_CONTENTSTACK_REGION', frontasticContext);
        if (!apiKey) {
            apiKey = (_b = (_a = frontasticContext.project.configuration) === null || _a === void 0 ? void 0 : _a.contentstack) === null || _b === void 0 ? void 0 : _b.apiKey;
        }
        if (!deliveryToken) {
            deliveryToken = (_d = (_c = frontasticContext.project.configuration) === null || _c === void 0 ? void 0 : _c.contentstack) === null || _d === void 0 ? void 0 : _d.deliveryToken;
        }
        if (!environment) {
            environment = (_f = (_e = frontasticContext.project.configuration) === null || _e === void 0 ? void 0 : _e.contentstack) === null || _f === void 0 ? void 0 : _f.environment;
        }
        if (!region) {
            region = (_h = (_g = frontasticContext.project.configuration) === null || _g === void 0 ? void 0 : _g.contentstack) === null || _h === void 0 ? void 0 : _h.region;
        }
        this.stack = contentstack["Stack"](apiKey, deliveryToken, environment, region);
    }
    async getContent({ contentTypeUid, entryUid }) {
        const Query = this.stack.ContentType(contentTypeUid).Entry(entryUid);
        return await Query.fetch().then(function success(entry) {
            return ContentMapper_ContentMapper.contentstackEntryToContent(entry);
        }, function error(err) {
            console.log('Failed to fetch ContentStack entry, Error log: ' + err);
            return { err };
        });
    }
    async getContentList({ contentTypeUid, limit }) {
        const dataQuery = this.stack.ContentType(contentTypeUid).Query();
        const Query = dataQuery.limit(parseInt(limit)).find();
        return await Query.then(function success(entries) {
            return entries[0].map((entry) => ContentMapper_ContentMapper.contentstackEntryToContent(entry));
        }, function error(err) {
            console.log('Failed to fetch ContentStack entries, Error log: ' + err);
            return { err };
        });
    }
}

// CONCATENATED MODULE: ./content-contentstack/utils/Request.ts
const content_contentstack_utils_Request_getPath = (request) => {
    var _a;
    return (_a = content_contentstack_utils_Request_getHeader(request, 'frontastic-path')) !== null && _a !== void 0 ? _a : request.query.path;
};
const content_contentstack_utils_Request_getLocale = (request) => {
    var _a, _b;
    if (request !== undefined) {
        const locale = (_a = content_contentstack_utils_Request_getHeader(request, 'frontastic-locale')) !== null && _a !== void 0 ? _a : request.query.locale;
        if (locale !== undefined) {
            return (_b = content_contentstack_utils_Request_getHeader(request, 'frontastic-locale')) !== null && _b !== void 0 ? _b : request.query.locale;
        }
    }
    return null;
};
const content_contentstack_utils_Request_getHeader = (request, header) => {
    if (request.headers && header in request.headers) {
        const foundHeader = request.headers[header];
        if (Array.isArray(foundHeader)) {
            return foundHeader[0];
        }
        return foundHeader;
    }
    return null;
};

// CONCATENATED MODULE: ./content-contentstack/actionControllers/ContentstackController.ts


const ContentstackController_getContent = async (request, actionContext) => {
    const { entryUid, contentTypeUid } = request.query;
    if (!contentTypeUid) {
        return {
            body: 'Missing contentTypeUid',
            statusCode: 400,
        };
    }
    if (!entryUid) {
        return {
            body: 'Missing entryUid',
            statusCode: 400,
        };
    }
    const contentApi = new content_contentstack_apis_ContentApi_ContentApi(actionContext.frontasticContext, content_contentstack_utils_Request_getLocale(request));
    const data = await contentApi.getContent({ contentTypeUid, entryUid });
    const response = {
        statusCode: 200,
        body: JSON.stringify(data),
        sessionData: request.sessionData,
    };
    return response;
};
const getContentList = async (request, actionContext) => {
    const { limit, contentTypeUid } = request.query;
    if (!contentTypeUid) {
        return {
            body: 'Missing contentTypeUid',
            statusCode: 400,
        };
    }
    const contentApi = new content_contentstack_apis_ContentApi_ContentApi(actionContext.frontasticContext, content_contentstack_utils_Request_getLocale(request));
    const data = await contentApi.getContentList({ contentTypeUid, limit });
    const response = {
        statusCode: 200,
        body: JSON.stringify(data),
        sessionData: request.sessionData,
    };
    return response;
};

// CONCATENATED MODULE: ./content-contentstack/index.ts



/* harmony default export */ var content_contentstack = ({
    'data-sources': {
        'contentstack/content': async (config, context) => {
            const contentApi = new content_contentstack_apis_ContentApi_ContentApi(context.frontasticContext, content_contentstack_utils_Request_getLocale(context.request));
            const { contentTypeUid, entryUid } = config.configuration;
            return {
                dataSourcePayload: await contentApi.getContent({ contentTypeUid, entryUid }),
            };
        },
        'contentstack/content-list': async (config, context) => {
            const contentApi = new content_contentstack_apis_ContentApi_ContentApi(context.frontasticContext, content_contentstack_utils_Request_getLocale(context.request));
            const { contentTypeUid, limit } = config.configuration;
            const payload = await contentApi.getContentList({
                contentTypeUid,
                limit,
            });
            return {
                dataSourcePayload: payload,
            };
        },
    },
    actions: {
        contentstack: ContentstackController_namespaceObject,
    },
});

// EXTERNAL MODULE: ./node_modules/axios/index.js
var axios = __webpack_require__(170);
var axios_default = /*#__PURE__*/__webpack_require__.n(axios);

// EXTERNAL MODULE: ./node_modules/inversify/lib/inversify.js
var inversify = __webpack_require__(1);

// EXTERNAL MODULE: ./node_modules/reflect-metadata/Reflect.js
var reflect_metadata_Reflect = __webpack_require__(777);

// EXTERNAL MODULE: ./node_modules/@bloomreach/spa-sdk/node_modules/emittery/index.js
var emittery = __webpack_require__(133);

// CONCATENATED MODULE: ./node_modules/domelementtype/lib/esm/index.js
/** Types of elements found in htmlparser2's DOM */
var ElementType;

(function (ElementType) {
  /** Type for the root element of a document */
  ElementType["Root"] = "root";
  /** Type for Text */

  ElementType["Text"] = "text";
  /** Type for <? ... ?> */

  ElementType["Directive"] = "directive";
  /** Type for <!-- ... --> */

  ElementType["Comment"] = "comment";
  /** Type for <script> tags */

  ElementType["Script"] = "script";
  /** Type for <style> tags */

  ElementType["Style"] = "style";
  /** Type for Any tag */

  ElementType["Tag"] = "tag";
  /** Type for <![CDATA[ ... ]]> */

  ElementType["CDATA"] = "cdata";
  /** Type for <!doctype ...> */

  ElementType["Doctype"] = "doctype";
})(ElementType || (ElementType = {}));
/**
 * Tests whether an element is a tag or not.
 *
 * @param elem Element to test
 */


function isTag(elem) {
  return elem.type === ElementType.Tag || elem.type === ElementType.Script || elem.type === ElementType.Style;
} // Exports for backwards compatibility

/** Type for the root element of a document */

var Root = ElementType.Root;
/** Type for Text */

var esm_Text = ElementType.Text;
/** Type for <? ... ?> */

var Directive = ElementType.Directive;
/** Type for <!-- ... --> */

var esm_Comment = ElementType.Comment;
/** Type for <script> tags */

var Script = ElementType.Script;
/** Type for <style> tags */

var Style = ElementType.Style;
/** Type for Any tag */

var Tag = ElementType.Tag;
/** Type for <![CDATA[ ... ]]> */

var esm_CDATA = ElementType.CDATA;
/** Type for <!doctype ...> */

var Doctype = ElementType.Doctype;
// CONCATENATED MODULE: ./node_modules/entities/lib/esm/generated/decode-data-html.js
// Generated using scripts/write-decode-map.ts
/* harmony default export */ var decode_data_html = (new Uint16Array( // prettier-ignore
"\u1D41<\xD5\u0131\u028A\u049D\u057B\u05D0\u0675\u06DE\u07A2\u07D6\u080F\u0A4A\u0A91\u0DA1\u0E6D\u0F09\u0F26\u10CA\u1228\u12E1\u1415\u149D\u14C3\u14DF\u1525\0\0\0\0\0\0\u156B\u16CD\u198D\u1C12\u1DDD\u1F7E\u2060\u21B0\u228D\u23C0\u23FB\u2442\u2824\u2912\u2D08\u2E48\u2FCE\u3016\u32BA\u3639\u37AC\u38FE\u3A28\u3A71\u3AE0\u3B2E\u0800EMabcfglmnoprstu\\bfms\x7F\x84\x8B\x90\x95\x98\xA6\xB3\xB9\xC8\xCFlig\u803B\xC6\u40C6P\u803B&\u4026cute\u803B\xC1\u40C1reve;\u4102\u0100iyx}rc\u803B\xC2\u40C2;\u4410r;\uC000\uD835\uDD04rave\u803B\xC0\u40C0pha;\u4391acr;\u4100d;\u6A53\u0100gp\x9D\xA1on;\u4104f;\uC000\uD835\uDD38plyFunction;\u6061ing\u803B\xC5\u40C5\u0100cs\xBE\xC3r;\uC000\uD835\uDC9Cign;\u6254ilde\u803B\xC3\u40C3ml\u803B\xC4\u40C4\u0400aceforsu\xE5\xFB\xFE\u0117\u011C\u0122\u0127\u012A\u0100cr\xEA\xF2kslash;\u6216\u0176\xF6\xF8;\u6AE7ed;\u6306y;\u4411\u0180crt\u0105\u010B\u0114ause;\u6235noullis;\u612Ca;\u4392r;\uC000\uD835\uDD05pf;\uC000\uD835\uDD39eve;\u42D8c\xF2\u0113mpeq;\u624E\u0700HOacdefhilorsu\u014D\u0151\u0156\u0180\u019E\u01A2\u01B5\u01B7\u01BA\u01DC\u0215\u0273\u0278\u027Ecy;\u4427PY\u803B\xA9\u40A9\u0180cpy\u015D\u0162\u017Aute;\u4106\u0100;i\u0167\u0168\u62D2talDifferentialD;\u6145leys;\u612D\u0200aeio\u0189\u018E\u0194\u0198ron;\u410Cdil\u803B\xC7\u40C7rc;\u4108nint;\u6230ot;\u410A\u0100dn\u01A7\u01ADilla;\u40B8terDot;\u40B7\xF2\u017Fi;\u43A7rcle\u0200DMPT\u01C7\u01CB\u01D1\u01D6ot;\u6299inus;\u6296lus;\u6295imes;\u6297o\u0100cs\u01E2\u01F8kwiseContourIntegral;\u6232eCurly\u0100DQ\u0203\u020FoubleQuote;\u601Duote;\u6019\u0200lnpu\u021E\u0228\u0247\u0255on\u0100;e\u0225\u0226\u6237;\u6A74\u0180git\u022F\u0236\u023Aruent;\u6261nt;\u622FourIntegral;\u622E\u0100fr\u024C\u024E;\u6102oduct;\u6210nterClockwiseContourIntegral;\u6233oss;\u6A2Fcr;\uC000\uD835\uDC9Ep\u0100;C\u0284\u0285\u62D3ap;\u624D\u0580DJSZacefios\u02A0\u02AC\u02B0\u02B4\u02B8\u02CB\u02D7\u02E1\u02E6\u0333\u048D\u0100;o\u0179\u02A5trahd;\u6911cy;\u4402cy;\u4405cy;\u440F\u0180grs\u02BF\u02C4\u02C7ger;\u6021r;\u61A1hv;\u6AE4\u0100ay\u02D0\u02D5ron;\u410E;\u4414l\u0100;t\u02DD\u02DE\u6207a;\u4394r;\uC000\uD835\uDD07\u0100af\u02EB\u0327\u0100cm\u02F0\u0322ritical\u0200ADGT\u0300\u0306\u0316\u031Ccute;\u40B4o\u0174\u030B\u030D;\u42D9bleAcute;\u42DDrave;\u4060ilde;\u42DCond;\u62C4ferentialD;\u6146\u0470\u033D\0\0\0\u0342\u0354\0\u0405f;\uC000\uD835\uDD3B\u0180;DE\u0348\u0349\u034D\u40A8ot;\u60DCqual;\u6250ble\u0300CDLRUV\u0363\u0372\u0382\u03CF\u03E2\u03F8ontourIntegra\xEC\u0239o\u0274\u0379\0\0\u037B\xBB\u0349nArrow;\u61D3\u0100eo\u0387\u03A4ft\u0180ART\u0390\u0396\u03A1rrow;\u61D0ightArrow;\u61D4e\xE5\u02CAng\u0100LR\u03AB\u03C4eft\u0100AR\u03B3\u03B9rrow;\u67F8ightArrow;\u67FAightArrow;\u67F9ight\u0100AT\u03D8\u03DErrow;\u61D2ee;\u62A8p\u0241\u03E9\0\0\u03EFrrow;\u61D1ownArrow;\u61D5erticalBar;\u6225n\u0300ABLRTa\u0412\u042A\u0430\u045E\u047F\u037Crrow\u0180;BU\u041D\u041E\u0422\u6193ar;\u6913pArrow;\u61F5reve;\u4311eft\u02D2\u043A\0\u0446\0\u0450ightVector;\u6950eeVector;\u695Eector\u0100;B\u0459\u045A\u61BDar;\u6956ight\u01D4\u0467\0\u0471eeVector;\u695Fector\u0100;B\u047A\u047B\u61C1ar;\u6957ee\u0100;A\u0486\u0487\u62A4rrow;\u61A7\u0100ct\u0492\u0497r;\uC000\uD835\uDC9Frok;\u4110\u0800NTacdfglmopqstux\u04BD\u04C0\u04C4\u04CB\u04DE\u04E2\u04E7\u04EE\u04F5\u0521\u052F\u0536\u0552\u055D\u0560\u0565G;\u414AH\u803B\xD0\u40D0cute\u803B\xC9\u40C9\u0180aiy\u04D2\u04D7\u04DCron;\u411Arc\u803B\xCA\u40CA;\u442Dot;\u4116r;\uC000\uD835\uDD08rave\u803B\xC8\u40C8ement;\u6208\u0100ap\u04FA\u04FEcr;\u4112ty\u0253\u0506\0\0\u0512mallSquare;\u65FBerySmallSquare;\u65AB\u0100gp\u0526\u052Aon;\u4118f;\uC000\uD835\uDD3Csilon;\u4395u\u0100ai\u053C\u0549l\u0100;T\u0542\u0543\u6A75ilde;\u6242librium;\u61CC\u0100ci\u0557\u055Ar;\u6130m;\u6A73a;\u4397ml\u803B\xCB\u40CB\u0100ip\u056A\u056Fsts;\u6203onentialE;\u6147\u0280cfios\u0585\u0588\u058D\u05B2\u05CCy;\u4424r;\uC000\uD835\uDD09lled\u0253\u0597\0\0\u05A3mallSquare;\u65FCerySmallSquare;\u65AA\u0370\u05BA\0\u05BF\0\0\u05C4f;\uC000\uD835\uDD3DAll;\u6200riertrf;\u6131c\xF2\u05CB\u0600JTabcdfgorst\u05E8\u05EC\u05EF\u05FA\u0600\u0612\u0616\u061B\u061D\u0623\u066C\u0672cy;\u4403\u803B>\u403Emma\u0100;d\u05F7\u05F8\u4393;\u43DCreve;\u411E\u0180eiy\u0607\u060C\u0610dil;\u4122rc;\u411C;\u4413ot;\u4120r;\uC000\uD835\uDD0A;\u62D9pf;\uC000\uD835\uDD3Eeater\u0300EFGLST\u0635\u0644\u064E\u0656\u065B\u0666qual\u0100;L\u063E\u063F\u6265ess;\u62DBullEqual;\u6267reater;\u6AA2ess;\u6277lantEqual;\u6A7Eilde;\u6273cr;\uC000\uD835\uDCA2;\u626B\u0400Aacfiosu\u0685\u068B\u0696\u069B\u069E\u06AA\u06BE\u06CARDcy;\u442A\u0100ct\u0690\u0694ek;\u42C7;\u405Eirc;\u4124r;\u610ClbertSpace;\u610B\u01F0\u06AF\0\u06B2f;\u610DizontalLine;\u6500\u0100ct\u06C3\u06C5\xF2\u06A9rok;\u4126mp\u0144\u06D0\u06D8ownHum\xF0\u012Fqual;\u624F\u0700EJOacdfgmnostu\u06FA\u06FE\u0703\u0707\u070E\u071A\u071E\u0721\u0728\u0744\u0778\u078B\u078F\u0795cy;\u4415lig;\u4132cy;\u4401cute\u803B\xCD\u40CD\u0100iy\u0713\u0718rc\u803B\xCE\u40CE;\u4418ot;\u4130r;\u6111rave\u803B\xCC\u40CC\u0180;ap\u0720\u072F\u073F\u0100cg\u0734\u0737r;\u412AinaryI;\u6148lie\xF3\u03DD\u01F4\u0749\0\u0762\u0100;e\u074D\u074E\u622C\u0100gr\u0753\u0758ral;\u622Bsection;\u62C2isible\u0100CT\u076C\u0772omma;\u6063imes;\u6062\u0180gpt\u077F\u0783\u0788on;\u412Ef;\uC000\uD835\uDD40a;\u4399cr;\u6110ilde;\u4128\u01EB\u079A\0\u079Ecy;\u4406l\u803B\xCF\u40CF\u0280cfosu\u07AC\u07B7\u07BC\u07C2\u07D0\u0100iy\u07B1\u07B5rc;\u4134;\u4419r;\uC000\uD835\uDD0Dpf;\uC000\uD835\uDD41\u01E3\u07C7\0\u07CCr;\uC000\uD835\uDCA5rcy;\u4408kcy;\u4404\u0380HJacfos\u07E4\u07E8\u07EC\u07F1\u07FD\u0802\u0808cy;\u4425cy;\u440Cppa;\u439A\u0100ey\u07F6\u07FBdil;\u4136;\u441Ar;\uC000\uD835\uDD0Epf;\uC000\uD835\uDD42cr;\uC000\uD835\uDCA6\u0580JTaceflmost\u0825\u0829\u082C\u0850\u0863\u09B3\u09B8\u09C7\u09CD\u0A37\u0A47cy;\u4409\u803B<\u403C\u0280cmnpr\u0837\u083C\u0841\u0844\u084Dute;\u4139bda;\u439Bg;\u67EAlacetrf;\u6112r;\u619E\u0180aey\u0857\u085C\u0861ron;\u413Ddil;\u413B;\u441B\u0100fs\u0868\u0970t\u0500ACDFRTUVar\u087E\u08A9\u08B1\u08E0\u08E6\u08FC\u092F\u095B\u0390\u096A\u0100nr\u0883\u088FgleBracket;\u67E8row\u0180;BR\u0899\u089A\u089E\u6190ar;\u61E4ightArrow;\u61C6eiling;\u6308o\u01F5\u08B7\0\u08C3bleBracket;\u67E6n\u01D4\u08C8\0\u08D2eeVector;\u6961ector\u0100;B\u08DB\u08DC\u61C3ar;\u6959loor;\u630Aight\u0100AV\u08EF\u08F5rrow;\u6194ector;\u694E\u0100er\u0901\u0917e\u0180;AV\u0909\u090A\u0910\u62A3rrow;\u61A4ector;\u695Aiangle\u0180;BE\u0924\u0925\u0929\u62B2ar;\u69CFqual;\u62B4p\u0180DTV\u0937\u0942\u094CownVector;\u6951eeVector;\u6960ector\u0100;B\u0956\u0957\u61BFar;\u6958ector\u0100;B\u0965\u0966\u61BCar;\u6952ight\xE1\u039Cs\u0300EFGLST\u097E\u098B\u0995\u099D\u09A2\u09ADqualGreater;\u62DAullEqual;\u6266reater;\u6276ess;\u6AA1lantEqual;\u6A7Dilde;\u6272r;\uC000\uD835\uDD0F\u0100;e\u09BD\u09BE\u62D8ftarrow;\u61DAidot;\u413F\u0180npw\u09D4\u0A16\u0A1Bg\u0200LRlr\u09DE\u09F7\u0A02\u0A10eft\u0100AR\u09E6\u09ECrrow;\u67F5ightArrow;\u67F7ightArrow;\u67F6eft\u0100ar\u03B3\u0A0Aight\xE1\u03BFight\xE1\u03CAf;\uC000\uD835\uDD43er\u0100LR\u0A22\u0A2CeftArrow;\u6199ightArrow;\u6198\u0180cht\u0A3E\u0A40\u0A42\xF2\u084C;\u61B0rok;\u4141;\u626A\u0400acefiosu\u0A5A\u0A5D\u0A60\u0A77\u0A7C\u0A85\u0A8B\u0A8Ep;\u6905y;\u441C\u0100dl\u0A65\u0A6FiumSpace;\u605Flintrf;\u6133r;\uC000\uD835\uDD10nusPlus;\u6213pf;\uC000\uD835\uDD44c\xF2\u0A76;\u439C\u0480Jacefostu\u0AA3\u0AA7\u0AAD\u0AC0\u0B14\u0B19\u0D91\u0D97\u0D9Ecy;\u440Acute;\u4143\u0180aey\u0AB4\u0AB9\u0ABEron;\u4147dil;\u4145;\u441D\u0180gsw\u0AC7\u0AF0\u0B0Eative\u0180MTV\u0AD3\u0ADF\u0AE8ediumSpace;\u600Bhi\u0100cn\u0AE6\u0AD8\xEB\u0AD9eryThi\xEE\u0AD9ted\u0100GL\u0AF8\u0B06reaterGreate\xF2\u0673essLes\xF3\u0A48Line;\u400Ar;\uC000\uD835\uDD11\u0200Bnpt\u0B22\u0B28\u0B37\u0B3Areak;\u6060BreakingSpace;\u40A0f;\u6115\u0680;CDEGHLNPRSTV\u0B55\u0B56\u0B6A\u0B7C\u0BA1\u0BEB\u0C04\u0C5E\u0C84\u0CA6\u0CD8\u0D61\u0D85\u6AEC\u0100ou\u0B5B\u0B64ngruent;\u6262pCap;\u626DoubleVerticalBar;\u6226\u0180lqx\u0B83\u0B8A\u0B9Bement;\u6209ual\u0100;T\u0B92\u0B93\u6260ilde;\uC000\u2242\u0338ists;\u6204reater\u0380;EFGLST\u0BB6\u0BB7\u0BBD\u0BC9\u0BD3\u0BD8\u0BE5\u626Fqual;\u6271ullEqual;\uC000\u2267\u0338reater;\uC000\u226B\u0338ess;\u6279lantEqual;\uC000\u2A7E\u0338ilde;\u6275ump\u0144\u0BF2\u0BFDownHump;\uC000\u224E\u0338qual;\uC000\u224F\u0338e\u0100fs\u0C0A\u0C27tTriangle\u0180;BE\u0C1A\u0C1B\u0C21\u62EAar;\uC000\u29CF\u0338qual;\u62ECs\u0300;EGLST\u0C35\u0C36\u0C3C\u0C44\u0C4B\u0C58\u626Equal;\u6270reater;\u6278ess;\uC000\u226A\u0338lantEqual;\uC000\u2A7D\u0338ilde;\u6274ested\u0100GL\u0C68\u0C79reaterGreater;\uC000\u2AA2\u0338essLess;\uC000\u2AA1\u0338recedes\u0180;ES\u0C92\u0C93\u0C9B\u6280qual;\uC000\u2AAF\u0338lantEqual;\u62E0\u0100ei\u0CAB\u0CB9verseElement;\u620CghtTriangle\u0180;BE\u0CCB\u0CCC\u0CD2\u62EBar;\uC000\u29D0\u0338qual;\u62ED\u0100qu\u0CDD\u0D0CuareSu\u0100bp\u0CE8\u0CF9set\u0100;E\u0CF0\u0CF3\uC000\u228F\u0338qual;\u62E2erset\u0100;E\u0D03\u0D06\uC000\u2290\u0338qual;\u62E3\u0180bcp\u0D13\u0D24\u0D4Eset\u0100;E\u0D1B\u0D1E\uC000\u2282\u20D2qual;\u6288ceeds\u0200;EST\u0D32\u0D33\u0D3B\u0D46\u6281qual;\uC000\u2AB0\u0338lantEqual;\u62E1ilde;\uC000\u227F\u0338erset\u0100;E\u0D58\u0D5B\uC000\u2283\u20D2qual;\u6289ilde\u0200;EFT\u0D6E\u0D6F\u0D75\u0D7F\u6241qual;\u6244ullEqual;\u6247ilde;\u6249erticalBar;\u6224cr;\uC000\uD835\uDCA9ilde\u803B\xD1\u40D1;\u439D\u0700Eacdfgmoprstuv\u0DBD\u0DC2\u0DC9\u0DD5\u0DDB\u0DE0\u0DE7\u0DFC\u0E02\u0E20\u0E22\u0E32\u0E3F\u0E44lig;\u4152cute\u803B\xD3\u40D3\u0100iy\u0DCE\u0DD3rc\u803B\xD4\u40D4;\u441Eblac;\u4150r;\uC000\uD835\uDD12rave\u803B\xD2\u40D2\u0180aei\u0DEE\u0DF2\u0DF6cr;\u414Cga;\u43A9cron;\u439Fpf;\uC000\uD835\uDD46enCurly\u0100DQ\u0E0E\u0E1AoubleQuote;\u601Cuote;\u6018;\u6A54\u0100cl\u0E27\u0E2Cr;\uC000\uD835\uDCAAash\u803B\xD8\u40D8i\u016C\u0E37\u0E3Cde\u803B\xD5\u40D5es;\u6A37ml\u803B\xD6\u40D6er\u0100BP\u0E4B\u0E60\u0100ar\u0E50\u0E53r;\u603Eac\u0100ek\u0E5A\u0E5C;\u63DEet;\u63B4arenthesis;\u63DC\u0480acfhilors\u0E7F\u0E87\u0E8A\u0E8F\u0E92\u0E94\u0E9D\u0EB0\u0EFCrtialD;\u6202y;\u441Fr;\uC000\uD835\uDD13i;\u43A6;\u43A0usMinus;\u40B1\u0100ip\u0EA2\u0EADncareplan\xE5\u069Df;\u6119\u0200;eio\u0EB9\u0EBA\u0EE0\u0EE4\u6ABBcedes\u0200;EST\u0EC8\u0EC9\u0ECF\u0EDA\u627Aqual;\u6AAFlantEqual;\u627Cilde;\u627Eme;\u6033\u0100dp\u0EE9\u0EEEuct;\u620Fortion\u0100;a\u0225\u0EF9l;\u621D\u0100ci\u0F01\u0F06r;\uC000\uD835\uDCAB;\u43A8\u0200Ufos\u0F11\u0F16\u0F1B\u0F1FOT\u803B\"\u4022r;\uC000\uD835\uDD14pf;\u611Acr;\uC000\uD835\uDCAC\u0600BEacefhiorsu\u0F3E\u0F43\u0F47\u0F60\u0F73\u0FA7\u0FAA\u0FAD\u1096\u10A9\u10B4\u10BEarr;\u6910G\u803B\xAE\u40AE\u0180cnr\u0F4E\u0F53\u0F56ute;\u4154g;\u67EBr\u0100;t\u0F5C\u0F5D\u61A0l;\u6916\u0180aey\u0F67\u0F6C\u0F71ron;\u4158dil;\u4156;\u4420\u0100;v\u0F78\u0F79\u611Cerse\u0100EU\u0F82\u0F99\u0100lq\u0F87\u0F8Eement;\u620Builibrium;\u61CBpEquilibrium;\u696Fr\xBB\u0F79o;\u43A1ght\u0400ACDFTUVa\u0FC1\u0FEB\u0FF3\u1022\u1028\u105B\u1087\u03D8\u0100nr\u0FC6\u0FD2gleBracket;\u67E9row\u0180;BL\u0FDC\u0FDD\u0FE1\u6192ar;\u61E5eftArrow;\u61C4eiling;\u6309o\u01F5\u0FF9\0\u1005bleBracket;\u67E7n\u01D4\u100A\0\u1014eeVector;\u695Dector\u0100;B\u101D\u101E\u61C2ar;\u6955loor;\u630B\u0100er\u102D\u1043e\u0180;AV\u1035\u1036\u103C\u62A2rrow;\u61A6ector;\u695Biangle\u0180;BE\u1050\u1051\u1055\u62B3ar;\u69D0qual;\u62B5p\u0180DTV\u1063\u106E\u1078ownVector;\u694FeeVector;\u695Cector\u0100;B\u1082\u1083\u61BEar;\u6954ector\u0100;B\u1091\u1092\u61C0ar;\u6953\u0100pu\u109B\u109Ef;\u611DndImplies;\u6970ightarrow;\u61DB\u0100ch\u10B9\u10BCr;\u611B;\u61B1leDelayed;\u69F4\u0680HOacfhimoqstu\u10E4\u10F1\u10F7\u10FD\u1119\u111E\u1151\u1156\u1161\u1167\u11B5\u11BB\u11BF\u0100Cc\u10E9\u10EEHcy;\u4429y;\u4428FTcy;\u442Ccute;\u415A\u0280;aeiy\u1108\u1109\u110E\u1113\u1117\u6ABCron;\u4160dil;\u415Erc;\u415C;\u4421r;\uC000\uD835\uDD16ort\u0200DLRU\u112A\u1134\u113E\u1149ownArrow\xBB\u041EeftArrow\xBB\u089AightArrow\xBB\u0FDDpArrow;\u6191gma;\u43A3allCircle;\u6218pf;\uC000\uD835\uDD4A\u0272\u116D\0\0\u1170t;\u621Aare\u0200;ISU\u117B\u117C\u1189\u11AF\u65A1ntersection;\u6293u\u0100bp\u118F\u119Eset\u0100;E\u1197\u1198\u628Fqual;\u6291erset\u0100;E\u11A8\u11A9\u6290qual;\u6292nion;\u6294cr;\uC000\uD835\uDCAEar;\u62C6\u0200bcmp\u11C8\u11DB\u1209\u120B\u0100;s\u11CD\u11CE\u62D0et\u0100;E\u11CD\u11D5qual;\u6286\u0100ch\u11E0\u1205eeds\u0200;EST\u11ED\u11EE\u11F4\u11FF\u627Bqual;\u6AB0lantEqual;\u627Dilde;\u627FTh\xE1\u0F8C;\u6211\u0180;es\u1212\u1213\u1223\u62D1rset\u0100;E\u121C\u121D\u6283qual;\u6287et\xBB\u1213\u0580HRSacfhiors\u123E\u1244\u1249\u1255\u125E\u1271\u1276\u129F\u12C2\u12C8\u12D1ORN\u803B\xDE\u40DEADE;\u6122\u0100Hc\u124E\u1252cy;\u440By;\u4426\u0100bu\u125A\u125C;\u4009;\u43A4\u0180aey\u1265\u126A\u126Fron;\u4164dil;\u4162;\u4422r;\uC000\uD835\uDD17\u0100ei\u127B\u1289\u01F2\u1280\0\u1287efore;\u6234a;\u4398\u0100cn\u128E\u1298kSpace;\uC000\u205F\u200ASpace;\u6009lde\u0200;EFT\u12AB\u12AC\u12B2\u12BC\u623Cqual;\u6243ullEqual;\u6245ilde;\u6248pf;\uC000\uD835\uDD4BipleDot;\u60DB\u0100ct\u12D6\u12DBr;\uC000\uD835\uDCAFrok;\u4166\u0AE1\u12F7\u130E\u131A\u1326\0\u132C\u1331\0\0\0\0\0\u1338\u133D\u1377\u1385\0\u13FF\u1404\u140A\u1410\u0100cr\u12FB\u1301ute\u803B\xDA\u40DAr\u0100;o\u1307\u1308\u619Fcir;\u6949r\u01E3\u1313\0\u1316y;\u440Eve;\u416C\u0100iy\u131E\u1323rc\u803B\xDB\u40DB;\u4423blac;\u4170r;\uC000\uD835\uDD18rave\u803B\xD9\u40D9acr;\u416A\u0100di\u1341\u1369er\u0100BP\u1348\u135D\u0100ar\u134D\u1350r;\u405Fac\u0100ek\u1357\u1359;\u63DFet;\u63B5arenthesis;\u63DDon\u0100;P\u1370\u1371\u62C3lus;\u628E\u0100gp\u137B\u137Fon;\u4172f;\uC000\uD835\uDD4C\u0400ADETadps\u1395\u13AE\u13B8\u13C4\u03E8\u13D2\u13D7\u13F3rrow\u0180;BD\u1150\u13A0\u13A4ar;\u6912ownArrow;\u61C5ownArrow;\u6195quilibrium;\u696Eee\u0100;A\u13CB\u13CC\u62A5rrow;\u61A5own\xE1\u03F3er\u0100LR\u13DE\u13E8eftArrow;\u6196ightArrow;\u6197i\u0100;l\u13F9\u13FA\u43D2on;\u43A5ing;\u416Ecr;\uC000\uD835\uDCB0ilde;\u4168ml\u803B\xDC\u40DC\u0480Dbcdefosv\u1427\u142C\u1430\u1433\u143E\u1485\u148A\u1490\u1496ash;\u62ABar;\u6AEBy;\u4412ash\u0100;l\u143B\u143C\u62A9;\u6AE6\u0100er\u1443\u1445;\u62C1\u0180bty\u144C\u1450\u147Aar;\u6016\u0100;i\u144F\u1455cal\u0200BLST\u1461\u1465\u146A\u1474ar;\u6223ine;\u407Ceparator;\u6758ilde;\u6240ThinSpace;\u600Ar;\uC000\uD835\uDD19pf;\uC000\uD835\uDD4Dcr;\uC000\uD835\uDCB1dash;\u62AA\u0280cefos\u14A7\u14AC\u14B1\u14B6\u14BCirc;\u4174dge;\u62C0r;\uC000\uD835\uDD1Apf;\uC000\uD835\uDD4Ecr;\uC000\uD835\uDCB2\u0200fios\u14CB\u14D0\u14D2\u14D8r;\uC000\uD835\uDD1B;\u439Epf;\uC000\uD835\uDD4Fcr;\uC000\uD835\uDCB3\u0480AIUacfosu\u14F1\u14F5\u14F9\u14FD\u1504\u150F\u1514\u151A\u1520cy;\u442Fcy;\u4407cy;\u442Ecute\u803B\xDD\u40DD\u0100iy\u1509\u150Drc;\u4176;\u442Br;\uC000\uD835\uDD1Cpf;\uC000\uD835\uDD50cr;\uC000\uD835\uDCB4ml;\u4178\u0400Hacdefos\u1535\u1539\u153F\u154B\u154F\u155D\u1560\u1564cy;\u4416cute;\u4179\u0100ay\u1544\u1549ron;\u417D;\u4417ot;\u417B\u01F2\u1554\0\u155BoWidt\xE8\u0AD9a;\u4396r;\u6128pf;\u6124cr;\uC000\uD835\uDCB5\u0BE1\u1583\u158A\u1590\0\u15B0\u15B6\u15BF\0\0\0\0\u15C6\u15DB\u15EB\u165F\u166D\0\u1695\u169B\u16B2\u16B9\0\u16BEcute\u803B\xE1\u40E1reve;\u4103\u0300;Ediuy\u159C\u159D\u15A1\u15A3\u15A8\u15AD\u623E;\uC000\u223E\u0333;\u623Frc\u803B\xE2\u40E2te\u80BB\xB4\u0306;\u4430lig\u803B\xE6\u40E6\u0100;r\xB2\u15BA;\uC000\uD835\uDD1Erave\u803B\xE0\u40E0\u0100ep\u15CA\u15D6\u0100fp\u15CF\u15D4sym;\u6135\xE8\u15D3ha;\u43B1\u0100ap\u15DFc\u0100cl\u15E4\u15E7r;\u4101g;\u6A3F\u0264\u15F0\0\0\u160A\u0280;adsv\u15FA\u15FB\u15FF\u1601\u1607\u6227nd;\u6A55;\u6A5Clope;\u6A58;\u6A5A\u0380;elmrsz\u1618\u1619\u161B\u161E\u163F\u164F\u1659\u6220;\u69A4e\xBB\u1619sd\u0100;a\u1625\u1626\u6221\u0461\u1630\u1632\u1634\u1636\u1638\u163A\u163C\u163E;\u69A8;\u69A9;\u69AA;\u69AB;\u69AC;\u69AD;\u69AE;\u69AFt\u0100;v\u1645\u1646\u621Fb\u0100;d\u164C\u164D\u62BE;\u699D\u0100pt\u1654\u1657h;\u6222\xBB\xB9arr;\u637C\u0100gp\u1663\u1667on;\u4105f;\uC000\uD835\uDD52\u0380;Eaeiop\u12C1\u167B\u167D\u1682\u1684\u1687\u168A;\u6A70cir;\u6A6F;\u624Ad;\u624Bs;\u4027rox\u0100;e\u12C1\u1692\xF1\u1683ing\u803B\xE5\u40E5\u0180cty\u16A1\u16A6\u16A8r;\uC000\uD835\uDCB6;\u402Amp\u0100;e\u12C1\u16AF\xF1\u0288ilde\u803B\xE3\u40E3ml\u803B\xE4\u40E4\u0100ci\u16C2\u16C8onin\xF4\u0272nt;\u6A11\u0800Nabcdefiklnoprsu\u16ED\u16F1\u1730\u173C\u1743\u1748\u1778\u177D\u17E0\u17E6\u1839\u1850\u170D\u193D\u1948\u1970ot;\u6AED\u0100cr\u16F6\u171Ek\u0200ceps\u1700\u1705\u170D\u1713ong;\u624Cpsilon;\u43F6rime;\u6035im\u0100;e\u171A\u171B\u623Dq;\u62CD\u0176\u1722\u1726ee;\u62BDed\u0100;g\u172C\u172D\u6305e\xBB\u172Drk\u0100;t\u135C\u1737brk;\u63B6\u0100oy\u1701\u1741;\u4431quo;\u601E\u0280cmprt\u1753\u175B\u1761\u1764\u1768aus\u0100;e\u010A\u0109ptyv;\u69B0s\xE9\u170Cno\xF5\u0113\u0180ahw\u176F\u1771\u1773;\u43B2;\u6136een;\u626Cr;\uC000\uD835\uDD1Fg\u0380costuvw\u178D\u179D\u17B3\u17C1\u17D5\u17DB\u17DE\u0180aiu\u1794\u1796\u179A\xF0\u0760rc;\u65EFp\xBB\u1371\u0180dpt\u17A4\u17A8\u17ADot;\u6A00lus;\u6A01imes;\u6A02\u0271\u17B9\0\0\u17BEcup;\u6A06ar;\u6605riangle\u0100du\u17CD\u17D2own;\u65BDp;\u65B3plus;\u6A04e\xE5\u1444\xE5\u14ADarow;\u690D\u0180ako\u17ED\u1826\u1835\u0100cn\u17F2\u1823k\u0180lst\u17FA\u05AB\u1802ozenge;\u69EBriangle\u0200;dlr\u1812\u1813\u1818\u181D\u65B4own;\u65BEeft;\u65C2ight;\u65B8k;\u6423\u01B1\u182B\0\u1833\u01B2\u182F\0\u1831;\u6592;\u65914;\u6593ck;\u6588\u0100eo\u183E\u184D\u0100;q\u1843\u1846\uC000=\u20E5uiv;\uC000\u2261\u20E5t;\u6310\u0200ptwx\u1859\u185E\u1867\u186Cf;\uC000\uD835\uDD53\u0100;t\u13CB\u1863om\xBB\u13CCtie;\u62C8\u0600DHUVbdhmptuv\u1885\u1896\u18AA\u18BB\u18D7\u18DB\u18EC\u18FF\u1905\u190A\u1910\u1921\u0200LRlr\u188E\u1890\u1892\u1894;\u6557;\u6554;\u6556;\u6553\u0280;DUdu\u18A1\u18A2\u18A4\u18A6\u18A8\u6550;\u6566;\u6569;\u6564;\u6567\u0200LRlr\u18B3\u18B5\u18B7\u18B9;\u655D;\u655A;\u655C;\u6559\u0380;HLRhlr\u18CA\u18CB\u18CD\u18CF\u18D1\u18D3\u18D5\u6551;\u656C;\u6563;\u6560;\u656B;\u6562;\u655Fox;\u69C9\u0200LRlr\u18E4\u18E6\u18E8\u18EA;\u6555;\u6552;\u6510;\u650C\u0280;DUdu\u06BD\u18F7\u18F9\u18FB\u18FD;\u6565;\u6568;\u652C;\u6534inus;\u629Flus;\u629Eimes;\u62A0\u0200LRlr\u1919\u191B\u191D\u191F;\u655B;\u6558;\u6518;\u6514\u0380;HLRhlr\u1930\u1931\u1933\u1935\u1937\u1939\u193B\u6502;\u656A;\u6561;\u655E;\u653C;\u6524;\u651C\u0100ev\u0123\u1942bar\u803B\xA6\u40A6\u0200ceio\u1951\u1956\u195A\u1960r;\uC000\uD835\uDCB7mi;\u604Fm\u0100;e\u171A\u171Cl\u0180;bh\u1968\u1969\u196B\u405C;\u69C5sub;\u67C8\u016C\u1974\u197El\u0100;e\u1979\u197A\u6022t\xBB\u197Ap\u0180;Ee\u012F\u1985\u1987;\u6AAE\u0100;q\u06DC\u06DB\u0CE1\u19A7\0\u19E8\u1A11\u1A15\u1A32\0\u1A37\u1A50\0\0\u1AB4\0\0\u1AC1\0\0\u1B21\u1B2E\u1B4D\u1B52\0\u1BFD\0\u1C0C\u0180cpr\u19AD\u19B2\u19DDute;\u4107\u0300;abcds\u19BF\u19C0\u19C4\u19CA\u19D5\u19D9\u6229nd;\u6A44rcup;\u6A49\u0100au\u19CF\u19D2p;\u6A4Bp;\u6A47ot;\u6A40;\uC000\u2229\uFE00\u0100eo\u19E2\u19E5t;\u6041\xEE\u0693\u0200aeiu\u19F0\u19FB\u1A01\u1A05\u01F0\u19F5\0\u19F8s;\u6A4Don;\u410Ddil\u803B\xE7\u40E7rc;\u4109ps\u0100;s\u1A0C\u1A0D\u6A4Cm;\u6A50ot;\u410B\u0180dmn\u1A1B\u1A20\u1A26il\u80BB\xB8\u01ADptyv;\u69B2t\u8100\xA2;e\u1A2D\u1A2E\u40A2r\xE4\u01B2r;\uC000\uD835\uDD20\u0180cei\u1A3D\u1A40\u1A4Dy;\u4447ck\u0100;m\u1A47\u1A48\u6713ark\xBB\u1A48;\u43C7r\u0380;Ecefms\u1A5F\u1A60\u1A62\u1A6B\u1AA4\u1AAA\u1AAE\u65CB;\u69C3\u0180;el\u1A69\u1A6A\u1A6D\u42C6q;\u6257e\u0261\u1A74\0\0\u1A88rrow\u0100lr\u1A7C\u1A81eft;\u61BAight;\u61BB\u0280RSacd\u1A92\u1A94\u1A96\u1A9A\u1A9F\xBB\u0F47;\u64C8st;\u629Birc;\u629Aash;\u629Dnint;\u6A10id;\u6AEFcir;\u69C2ubs\u0100;u\u1ABB\u1ABC\u6663it\xBB\u1ABC\u02EC\u1AC7\u1AD4\u1AFA\0\u1B0Aon\u0100;e\u1ACD\u1ACE\u403A\u0100;q\xC7\xC6\u026D\u1AD9\0\0\u1AE2a\u0100;t\u1ADE\u1ADF\u402C;\u4040\u0180;fl\u1AE8\u1AE9\u1AEB\u6201\xEE\u1160e\u0100mx\u1AF1\u1AF6ent\xBB\u1AE9e\xF3\u024D\u01E7\u1AFE\0\u1B07\u0100;d\u12BB\u1B02ot;\u6A6Dn\xF4\u0246\u0180fry\u1B10\u1B14\u1B17;\uC000\uD835\uDD54o\xE4\u0254\u8100\xA9;s\u0155\u1B1Dr;\u6117\u0100ao\u1B25\u1B29rr;\u61B5ss;\u6717\u0100cu\u1B32\u1B37r;\uC000\uD835\uDCB8\u0100bp\u1B3C\u1B44\u0100;e\u1B41\u1B42\u6ACF;\u6AD1\u0100;e\u1B49\u1B4A\u6AD0;\u6AD2dot;\u62EF\u0380delprvw\u1B60\u1B6C\u1B77\u1B82\u1BAC\u1BD4\u1BF9arr\u0100lr\u1B68\u1B6A;\u6938;\u6935\u0270\u1B72\0\0\u1B75r;\u62DEc;\u62DFarr\u0100;p\u1B7F\u1B80\u61B6;\u693D\u0300;bcdos\u1B8F\u1B90\u1B96\u1BA1\u1BA5\u1BA8\u622Arcap;\u6A48\u0100au\u1B9B\u1B9Ep;\u6A46p;\u6A4Aot;\u628Dr;\u6A45;\uC000\u222A\uFE00\u0200alrv\u1BB5\u1BBF\u1BDE\u1BE3rr\u0100;m\u1BBC\u1BBD\u61B7;\u693Cy\u0180evw\u1BC7\u1BD4\u1BD8q\u0270\u1BCE\0\0\u1BD2re\xE3\u1B73u\xE3\u1B75ee;\u62CEedge;\u62CFen\u803B\xA4\u40A4earrow\u0100lr\u1BEE\u1BF3eft\xBB\u1B80ight\xBB\u1BBDe\xE4\u1BDD\u0100ci\u1C01\u1C07onin\xF4\u01F7nt;\u6231lcty;\u632D\u0980AHabcdefhijlorstuwz\u1C38\u1C3B\u1C3F\u1C5D\u1C69\u1C75\u1C8A\u1C9E\u1CAC\u1CB7\u1CFB\u1CFF\u1D0D\u1D7B\u1D91\u1DAB\u1DBB\u1DC6\u1DCDr\xF2\u0381ar;\u6965\u0200glrs\u1C48\u1C4D\u1C52\u1C54ger;\u6020eth;\u6138\xF2\u1133h\u0100;v\u1C5A\u1C5B\u6010\xBB\u090A\u016B\u1C61\u1C67arow;\u690Fa\xE3\u0315\u0100ay\u1C6E\u1C73ron;\u410F;\u4434\u0180;ao\u0332\u1C7C\u1C84\u0100gr\u02BF\u1C81r;\u61CAtseq;\u6A77\u0180glm\u1C91\u1C94\u1C98\u803B\xB0\u40B0ta;\u43B4ptyv;\u69B1\u0100ir\u1CA3\u1CA8sht;\u697F;\uC000\uD835\uDD21ar\u0100lr\u1CB3\u1CB5\xBB\u08DC\xBB\u101E\u0280aegsv\u1CC2\u0378\u1CD6\u1CDC\u1CE0m\u0180;os\u0326\u1CCA\u1CD4nd\u0100;s\u0326\u1CD1uit;\u6666amma;\u43DDin;\u62F2\u0180;io\u1CE7\u1CE8\u1CF8\u40F7de\u8100\xF7;o\u1CE7\u1CF0ntimes;\u62C7n\xF8\u1CF7cy;\u4452c\u026F\u1D06\0\0\u1D0Arn;\u631Eop;\u630D\u0280lptuw\u1D18\u1D1D\u1D22\u1D49\u1D55lar;\u4024f;\uC000\uD835\uDD55\u0280;emps\u030B\u1D2D\u1D37\u1D3D\u1D42q\u0100;d\u0352\u1D33ot;\u6251inus;\u6238lus;\u6214quare;\u62A1blebarwedg\xE5\xFAn\u0180adh\u112E\u1D5D\u1D67ownarrow\xF3\u1C83arpoon\u0100lr\u1D72\u1D76ef\xF4\u1CB4igh\xF4\u1CB6\u0162\u1D7F\u1D85karo\xF7\u0F42\u026F\u1D8A\0\0\u1D8Ern;\u631Fop;\u630C\u0180cot\u1D98\u1DA3\u1DA6\u0100ry\u1D9D\u1DA1;\uC000\uD835\uDCB9;\u4455l;\u69F6rok;\u4111\u0100dr\u1DB0\u1DB4ot;\u62F1i\u0100;f\u1DBA\u1816\u65BF\u0100ah\u1DC0\u1DC3r\xF2\u0429a\xF2\u0FA6angle;\u69A6\u0100ci\u1DD2\u1DD5y;\u445Fgrarr;\u67FF\u0900Dacdefglmnopqrstux\u1E01\u1E09\u1E19\u1E38\u0578\u1E3C\u1E49\u1E61\u1E7E\u1EA5\u1EAF\u1EBD\u1EE1\u1F2A\u1F37\u1F44\u1F4E\u1F5A\u0100Do\u1E06\u1D34o\xF4\u1C89\u0100cs\u1E0E\u1E14ute\u803B\xE9\u40E9ter;\u6A6E\u0200aioy\u1E22\u1E27\u1E31\u1E36ron;\u411Br\u0100;c\u1E2D\u1E2E\u6256\u803B\xEA\u40EAlon;\u6255;\u444Dot;\u4117\u0100Dr\u1E41\u1E45ot;\u6252;\uC000\uD835\uDD22\u0180;rs\u1E50\u1E51\u1E57\u6A9Aave\u803B\xE8\u40E8\u0100;d\u1E5C\u1E5D\u6A96ot;\u6A98\u0200;ils\u1E6A\u1E6B\u1E72\u1E74\u6A99nters;\u63E7;\u6113\u0100;d\u1E79\u1E7A\u6A95ot;\u6A97\u0180aps\u1E85\u1E89\u1E97cr;\u4113ty\u0180;sv\u1E92\u1E93\u1E95\u6205et\xBB\u1E93p\u01001;\u1E9D\u1EA4\u0133\u1EA1\u1EA3;\u6004;\u6005\u6003\u0100gs\u1EAA\u1EAC;\u414Bp;\u6002\u0100gp\u1EB4\u1EB8on;\u4119f;\uC000\uD835\uDD56\u0180als\u1EC4\u1ECE\u1ED2r\u0100;s\u1ECA\u1ECB\u62D5l;\u69E3us;\u6A71i\u0180;lv\u1EDA\u1EDB\u1EDF\u43B5on\xBB\u1EDB;\u43F5\u0200csuv\u1EEA\u1EF3\u1F0B\u1F23\u0100io\u1EEF\u1E31rc\xBB\u1E2E\u0269\u1EF9\0\0\u1EFB\xED\u0548ant\u0100gl\u1F02\u1F06tr\xBB\u1E5Dess\xBB\u1E7A\u0180aei\u1F12\u1F16\u1F1Als;\u403Dst;\u625Fv\u0100;D\u0235\u1F20D;\u6A78parsl;\u69E5\u0100Da\u1F2F\u1F33ot;\u6253rr;\u6971\u0180cdi\u1F3E\u1F41\u1EF8r;\u612Fo\xF4\u0352\u0100ah\u1F49\u1F4B;\u43B7\u803B\xF0\u40F0\u0100mr\u1F53\u1F57l\u803B\xEB\u40EBo;\u60AC\u0180cip\u1F61\u1F64\u1F67l;\u4021s\xF4\u056E\u0100eo\u1F6C\u1F74ctatio\xEE\u0559nential\xE5\u0579\u09E1\u1F92\0\u1F9E\0\u1FA1\u1FA7\0\0\u1FC6\u1FCC\0\u1FD3\0\u1FE6\u1FEA\u2000\0\u2008\u205Allingdotse\xF1\u1E44y;\u4444male;\u6640\u0180ilr\u1FAD\u1FB3\u1FC1lig;\u8000\uFB03\u0269\u1FB9\0\0\u1FBDg;\u8000\uFB00ig;\u8000\uFB04;\uC000\uD835\uDD23lig;\u8000\uFB01lig;\uC000fj\u0180alt\u1FD9\u1FDC\u1FE1t;\u666Dig;\u8000\uFB02ns;\u65B1of;\u4192\u01F0\u1FEE\0\u1FF3f;\uC000\uD835\uDD57\u0100ak\u05BF\u1FF7\u0100;v\u1FFC\u1FFD\u62D4;\u6AD9artint;\u6A0D\u0100ao\u200C\u2055\u0100cs\u2011\u2052\u03B1\u201A\u2030\u2038\u2045\u2048\0\u2050\u03B2\u2022\u2025\u2027\u202A\u202C\0\u202E\u803B\xBD\u40BD;\u6153\u803B\xBC\u40BC;\u6155;\u6159;\u615B\u01B3\u2034\0\u2036;\u6154;\u6156\u02B4\u203E\u2041\0\0\u2043\u803B\xBE\u40BE;\u6157;\u615C5;\u6158\u01B6\u204C\0\u204E;\u615A;\u615D8;\u615El;\u6044wn;\u6322cr;\uC000\uD835\uDCBB\u0880Eabcdefgijlnorstv\u2082\u2089\u209F\u20A5\u20B0\u20B4\u20F0\u20F5\u20FA\u20FF\u2103\u2112\u2138\u0317\u213E\u2152\u219E\u0100;l\u064D\u2087;\u6A8C\u0180cmp\u2090\u2095\u209Dute;\u41F5ma\u0100;d\u209C\u1CDA\u43B3;\u6A86reve;\u411F\u0100iy\u20AA\u20AErc;\u411D;\u4433ot;\u4121\u0200;lqs\u063E\u0642\u20BD\u20C9\u0180;qs\u063E\u064C\u20C4lan\xF4\u0665\u0200;cdl\u0665\u20D2\u20D5\u20E5c;\u6AA9ot\u0100;o\u20DC\u20DD\u6A80\u0100;l\u20E2\u20E3\u6A82;\u6A84\u0100;e\u20EA\u20ED\uC000\u22DB\uFE00s;\u6A94r;\uC000\uD835\uDD24\u0100;g\u0673\u061Bmel;\u6137cy;\u4453\u0200;Eaj\u065A\u210C\u210E\u2110;\u6A92;\u6AA5;\u6AA4\u0200Eaes\u211B\u211D\u2129\u2134;\u6269p\u0100;p\u2123\u2124\u6A8Arox\xBB\u2124\u0100;q\u212E\u212F\u6A88\u0100;q\u212E\u211Bim;\u62E7pf;\uC000\uD835\uDD58\u0100ci\u2143\u2146r;\u610Am\u0180;el\u066B\u214E\u2150;\u6A8E;\u6A90\u8300>;cdlqr\u05EE\u2160\u216A\u216E\u2173\u2179\u0100ci\u2165\u2167;\u6AA7r;\u6A7Aot;\u62D7Par;\u6995uest;\u6A7C\u0280adels\u2184\u216A\u2190\u0656\u219B\u01F0\u2189\0\u218Epro\xF8\u209Er;\u6978q\u0100lq\u063F\u2196les\xF3\u2088i\xED\u066B\u0100en\u21A3\u21ADrtneqq;\uC000\u2269\uFE00\xC5\u21AA\u0500Aabcefkosy\u21C4\u21C7\u21F1\u21F5\u21FA\u2218\u221D\u222F\u2268\u227Dr\xF2\u03A0\u0200ilmr\u21D0\u21D4\u21D7\u21DBrs\xF0\u1484f\xBB\u2024il\xF4\u06A9\u0100dr\u21E0\u21E4cy;\u444A\u0180;cw\u08F4\u21EB\u21EFir;\u6948;\u61ADar;\u610Firc;\u4125\u0180alr\u2201\u220E\u2213rts\u0100;u\u2209\u220A\u6665it\xBB\u220Alip;\u6026con;\u62B9r;\uC000\uD835\uDD25s\u0100ew\u2223\u2229arow;\u6925arow;\u6926\u0280amopr\u223A\u223E\u2243\u225E\u2263rr;\u61FFtht;\u623Bk\u0100lr\u2249\u2253eftarrow;\u61A9ightarrow;\u61AAf;\uC000\uD835\uDD59bar;\u6015\u0180clt\u226F\u2274\u2278r;\uC000\uD835\uDCBDas\xE8\u21F4rok;\u4127\u0100bp\u2282\u2287ull;\u6043hen\xBB\u1C5B\u0AE1\u22A3\0\u22AA\0\u22B8\u22C5\u22CE\0\u22D5\u22F3\0\0\u22F8\u2322\u2367\u2362\u237F\0\u2386\u23AA\u23B4cute\u803B\xED\u40ED\u0180;iy\u0771\u22B0\u22B5rc\u803B\xEE\u40EE;\u4438\u0100cx\u22BC\u22BFy;\u4435cl\u803B\xA1\u40A1\u0100fr\u039F\u22C9;\uC000\uD835\uDD26rave\u803B\xEC\u40EC\u0200;ino\u073E\u22DD\u22E9\u22EE\u0100in\u22E2\u22E6nt;\u6A0Ct;\u622Dfin;\u69DCta;\u6129lig;\u4133\u0180aop\u22FE\u231A\u231D\u0180cgt\u2305\u2308\u2317r;\u412B\u0180elp\u071F\u230F\u2313in\xE5\u078Ear\xF4\u0720h;\u4131f;\u62B7ed;\u41B5\u0280;cfot\u04F4\u232C\u2331\u233D\u2341are;\u6105in\u0100;t\u2338\u2339\u621Eie;\u69DDdo\xF4\u2319\u0280;celp\u0757\u234C\u2350\u235B\u2361al;\u62BA\u0100gr\u2355\u2359er\xF3\u1563\xE3\u234Darhk;\u6A17rod;\u6A3C\u0200cgpt\u236F\u2372\u2376\u237By;\u4451on;\u412Ff;\uC000\uD835\uDD5Aa;\u43B9uest\u803B\xBF\u40BF\u0100ci\u238A\u238Fr;\uC000\uD835\uDCBEn\u0280;Edsv\u04F4\u239B\u239D\u23A1\u04F3;\u62F9ot;\u62F5\u0100;v\u23A6\u23A7\u62F4;\u62F3\u0100;i\u0777\u23AElde;\u4129\u01EB\u23B8\0\u23BCcy;\u4456l\u803B\xEF\u40EF\u0300cfmosu\u23CC\u23D7\u23DC\u23E1\u23E7\u23F5\u0100iy\u23D1\u23D5rc;\u4135;\u4439r;\uC000\uD835\uDD27ath;\u4237pf;\uC000\uD835\uDD5B\u01E3\u23EC\0\u23F1r;\uC000\uD835\uDCBFrcy;\u4458kcy;\u4454\u0400acfghjos\u240B\u2416\u2422\u2427\u242D\u2431\u2435\u243Bppa\u0100;v\u2413\u2414\u43BA;\u43F0\u0100ey\u241B\u2420dil;\u4137;\u443Ar;\uC000\uD835\uDD28reen;\u4138cy;\u4445cy;\u445Cpf;\uC000\uD835\uDD5Ccr;\uC000\uD835\uDCC0\u0B80ABEHabcdefghjlmnoprstuv\u2470\u2481\u2486\u248D\u2491\u250E\u253D\u255A\u2580\u264E\u265E\u2665\u2679\u267D\u269A\u26B2\u26D8\u275D\u2768\u278B\u27C0\u2801\u2812\u0180art\u2477\u247A\u247Cr\xF2\u09C6\xF2\u0395ail;\u691Barr;\u690E\u0100;g\u0994\u248B;\u6A8Bar;\u6962\u0963\u24A5\0\u24AA\0\u24B1\0\0\0\0\0\u24B5\u24BA\0\u24C6\u24C8\u24CD\0\u24F9ute;\u413Amptyv;\u69B4ra\xEE\u084Cbda;\u43BBg\u0180;dl\u088E\u24C1\u24C3;\u6991\xE5\u088E;\u6A85uo\u803B\xAB\u40ABr\u0400;bfhlpst\u0899\u24DE\u24E6\u24E9\u24EB\u24EE\u24F1\u24F5\u0100;f\u089D\u24E3s;\u691Fs;\u691D\xEB\u2252p;\u61ABl;\u6939im;\u6973l;\u61A2\u0180;ae\u24FF\u2500\u2504\u6AABil;\u6919\u0100;s\u2509\u250A\u6AAD;\uC000\u2AAD\uFE00\u0180abr\u2515\u2519\u251Drr;\u690Crk;\u6772\u0100ak\u2522\u252Cc\u0100ek\u2528\u252A;\u407B;\u405B\u0100es\u2531\u2533;\u698Bl\u0100du\u2539\u253B;\u698F;\u698D\u0200aeuy\u2546\u254B\u2556\u2558ron;\u413E\u0100di\u2550\u2554il;\u413C\xEC\u08B0\xE2\u2529;\u443B\u0200cqrs\u2563\u2566\u256D\u257Da;\u6936uo\u0100;r\u0E19\u1746\u0100du\u2572\u2577har;\u6967shar;\u694Bh;\u61B2\u0280;fgqs\u258B\u258C\u0989\u25F3\u25FF\u6264t\u0280ahlrt\u2598\u25A4\u25B7\u25C2\u25E8rrow\u0100;t\u0899\u25A1a\xE9\u24F6arpoon\u0100du\u25AF\u25B4own\xBB\u045Ap\xBB\u0966eftarrows;\u61C7ight\u0180ahs\u25CD\u25D6\u25DErrow\u0100;s\u08F4\u08A7arpoon\xF3\u0F98quigarro\xF7\u21F0hreetimes;\u62CB\u0180;qs\u258B\u0993\u25FAlan\xF4\u09AC\u0280;cdgs\u09AC\u260A\u260D\u261D\u2628c;\u6AA8ot\u0100;o\u2614\u2615\u6A7F\u0100;r\u261A\u261B\u6A81;\u6A83\u0100;e\u2622\u2625\uC000\u22DA\uFE00s;\u6A93\u0280adegs\u2633\u2639\u263D\u2649\u264Bppro\xF8\u24C6ot;\u62D6q\u0100gq\u2643\u2645\xF4\u0989gt\xF2\u248C\xF4\u099Bi\xED\u09B2\u0180ilr\u2655\u08E1\u265Asht;\u697C;\uC000\uD835\uDD29\u0100;E\u099C\u2663;\u6A91\u0161\u2669\u2676r\u0100du\u25B2\u266E\u0100;l\u0965\u2673;\u696Alk;\u6584cy;\u4459\u0280;acht\u0A48\u2688\u268B\u2691\u2696r\xF2\u25C1orne\xF2\u1D08ard;\u696Bri;\u65FA\u0100io\u269F\u26A4dot;\u4140ust\u0100;a\u26AC\u26AD\u63B0che\xBB\u26AD\u0200Eaes\u26BB\u26BD\u26C9\u26D4;\u6268p\u0100;p\u26C3\u26C4\u6A89rox\xBB\u26C4\u0100;q\u26CE\u26CF\u6A87\u0100;q\u26CE\u26BBim;\u62E6\u0400abnoptwz\u26E9\u26F4\u26F7\u271A\u272F\u2741\u2747\u2750\u0100nr\u26EE\u26F1g;\u67ECr;\u61FDr\xEB\u08C1g\u0180lmr\u26FF\u270D\u2714eft\u0100ar\u09E6\u2707ight\xE1\u09F2apsto;\u67FCight\xE1\u09FDparrow\u0100lr\u2725\u2729ef\xF4\u24EDight;\u61AC\u0180afl\u2736\u2739\u273Dr;\u6985;\uC000\uD835\uDD5Dus;\u6A2Dimes;\u6A34\u0161\u274B\u274Fst;\u6217\xE1\u134E\u0180;ef\u2757\u2758\u1800\u65CAnge\xBB\u2758ar\u0100;l\u2764\u2765\u4028t;\u6993\u0280achmt\u2773\u2776\u277C\u2785\u2787r\xF2\u08A8orne\xF2\u1D8Car\u0100;d\u0F98\u2783;\u696D;\u600Eri;\u62BF\u0300achiqt\u2798\u279D\u0A40\u27A2\u27AE\u27BBquo;\u6039r;\uC000\uD835\uDCC1m\u0180;eg\u09B2\u27AA\u27AC;\u6A8D;\u6A8F\u0100bu\u252A\u27B3o\u0100;r\u0E1F\u27B9;\u601Arok;\u4142\u8400<;cdhilqr\u082B\u27D2\u2639\u27DC\u27E0\u27E5\u27EA\u27F0\u0100ci\u27D7\u27D9;\u6AA6r;\u6A79re\xE5\u25F2mes;\u62C9arr;\u6976uest;\u6A7B\u0100Pi\u27F5\u27F9ar;\u6996\u0180;ef\u2800\u092D\u181B\u65C3r\u0100du\u2807\u280Dshar;\u694Ahar;\u6966\u0100en\u2817\u2821rtneqq;\uC000\u2268\uFE00\xC5\u281E\u0700Dacdefhilnopsu\u2840\u2845\u2882\u288E\u2893\u28A0\u28A5\u28A8\u28DA\u28E2\u28E4\u0A83\u28F3\u2902Dot;\u623A\u0200clpr\u284E\u2852\u2863\u287Dr\u803B\xAF\u40AF\u0100et\u2857\u2859;\u6642\u0100;e\u285E\u285F\u6720se\xBB\u285F\u0100;s\u103B\u2868to\u0200;dlu\u103B\u2873\u2877\u287Bow\xEE\u048Cef\xF4\u090F\xF0\u13D1ker;\u65AE\u0100oy\u2887\u288Cmma;\u6A29;\u443Cash;\u6014asuredangle\xBB\u1626r;\uC000\uD835\uDD2Ao;\u6127\u0180cdn\u28AF\u28B4\u28C9ro\u803B\xB5\u40B5\u0200;acd\u1464\u28BD\u28C0\u28C4s\xF4\u16A7ir;\u6AF0ot\u80BB\xB7\u01B5us\u0180;bd\u28D2\u1903\u28D3\u6212\u0100;u\u1D3C\u28D8;\u6A2A\u0163\u28DE\u28E1p;\u6ADB\xF2\u2212\xF0\u0A81\u0100dp\u28E9\u28EEels;\u62A7f;\uC000\uD835\uDD5E\u0100ct\u28F8\u28FDr;\uC000\uD835\uDCC2pos\xBB\u159D\u0180;lm\u2909\u290A\u290D\u43BCtimap;\u62B8\u0C00GLRVabcdefghijlmoprstuvw\u2942\u2953\u297E\u2989\u2998\u29DA\u29E9\u2A15\u2A1A\u2A58\u2A5D\u2A83\u2A95\u2AA4\u2AA8\u2B04\u2B07\u2B44\u2B7F\u2BAE\u2C34\u2C67\u2C7C\u2CE9\u0100gt\u2947\u294B;\uC000\u22D9\u0338\u0100;v\u2950\u0BCF\uC000\u226B\u20D2\u0180elt\u295A\u2972\u2976ft\u0100ar\u2961\u2967rrow;\u61CDightarrow;\u61CE;\uC000\u22D8\u0338\u0100;v\u297B\u0C47\uC000\u226A\u20D2ightarrow;\u61CF\u0100Dd\u298E\u2993ash;\u62AFash;\u62AE\u0280bcnpt\u29A3\u29A7\u29AC\u29B1\u29CCla\xBB\u02DEute;\u4144g;\uC000\u2220\u20D2\u0280;Eiop\u0D84\u29BC\u29C0\u29C5\u29C8;\uC000\u2A70\u0338d;\uC000\u224B\u0338s;\u4149ro\xF8\u0D84ur\u0100;a\u29D3\u29D4\u666El\u0100;s\u29D3\u0B38\u01F3\u29DF\0\u29E3p\u80BB\xA0\u0B37mp\u0100;e\u0BF9\u0C00\u0280aeouy\u29F4\u29FE\u2A03\u2A10\u2A13\u01F0\u29F9\0\u29FB;\u6A43on;\u4148dil;\u4146ng\u0100;d\u0D7E\u2A0Aot;\uC000\u2A6D\u0338p;\u6A42;\u443Dash;\u6013\u0380;Aadqsx\u0B92\u2A29\u2A2D\u2A3B\u2A41\u2A45\u2A50rr;\u61D7r\u0100hr\u2A33\u2A36k;\u6924\u0100;o\u13F2\u13F0ot;\uC000\u2250\u0338ui\xF6\u0B63\u0100ei\u2A4A\u2A4Ear;\u6928\xED\u0B98ist\u0100;s\u0BA0\u0B9Fr;\uC000\uD835\uDD2B\u0200Eest\u0BC5\u2A66\u2A79\u2A7C\u0180;qs\u0BBC\u2A6D\u0BE1\u0180;qs\u0BBC\u0BC5\u2A74lan\xF4\u0BE2i\xED\u0BEA\u0100;r\u0BB6\u2A81\xBB\u0BB7\u0180Aap\u2A8A\u2A8D\u2A91r\xF2\u2971rr;\u61AEar;\u6AF2\u0180;sv\u0F8D\u2A9C\u0F8C\u0100;d\u2AA1\u2AA2\u62FC;\u62FAcy;\u445A\u0380AEadest\u2AB7\u2ABA\u2ABE\u2AC2\u2AC5\u2AF6\u2AF9r\xF2\u2966;\uC000\u2266\u0338rr;\u619Ar;\u6025\u0200;fqs\u0C3B\u2ACE\u2AE3\u2AEFt\u0100ar\u2AD4\u2AD9rro\xF7\u2AC1ightarro\xF7\u2A90\u0180;qs\u0C3B\u2ABA\u2AEAlan\xF4\u0C55\u0100;s\u0C55\u2AF4\xBB\u0C36i\xED\u0C5D\u0100;r\u0C35\u2AFEi\u0100;e\u0C1A\u0C25i\xE4\u0D90\u0100pt\u2B0C\u2B11f;\uC000\uD835\uDD5F\u8180\xAC;in\u2B19\u2B1A\u2B36\u40ACn\u0200;Edv\u0B89\u2B24\u2B28\u2B2E;\uC000\u22F9\u0338ot;\uC000\u22F5\u0338\u01E1\u0B89\u2B33\u2B35;\u62F7;\u62F6i\u0100;v\u0CB8\u2B3C\u01E1\u0CB8\u2B41\u2B43;\u62FE;\u62FD\u0180aor\u2B4B\u2B63\u2B69r\u0200;ast\u0B7B\u2B55\u2B5A\u2B5Flle\xEC\u0B7Bl;\uC000\u2AFD\u20E5;\uC000\u2202\u0338lint;\u6A14\u0180;ce\u0C92\u2B70\u2B73u\xE5\u0CA5\u0100;c\u0C98\u2B78\u0100;e\u0C92\u2B7D\xF1\u0C98\u0200Aait\u2B88\u2B8B\u2B9D\u2BA7r\xF2\u2988rr\u0180;cw\u2B94\u2B95\u2B99\u619B;\uC000\u2933\u0338;\uC000\u219D\u0338ghtarrow\xBB\u2B95ri\u0100;e\u0CCB\u0CD6\u0380chimpqu\u2BBD\u2BCD\u2BD9\u2B04\u0B78\u2BE4\u2BEF\u0200;cer\u0D32\u2BC6\u0D37\u2BC9u\xE5\u0D45;\uC000\uD835\uDCC3ort\u026D\u2B05\0\0\u2BD6ar\xE1\u2B56m\u0100;e\u0D6E\u2BDF\u0100;q\u0D74\u0D73su\u0100bp\u2BEB\u2BED\xE5\u0CF8\xE5\u0D0B\u0180bcp\u2BF6\u2C11\u2C19\u0200;Ees\u2BFF\u2C00\u0D22\u2C04\u6284;\uC000\u2AC5\u0338et\u0100;e\u0D1B\u2C0Bq\u0100;q\u0D23\u2C00c\u0100;e\u0D32\u2C17\xF1\u0D38\u0200;Ees\u2C22\u2C23\u0D5F\u2C27\u6285;\uC000\u2AC6\u0338et\u0100;e\u0D58\u2C2Eq\u0100;q\u0D60\u2C23\u0200gilr\u2C3D\u2C3F\u2C45\u2C47\xEC\u0BD7lde\u803B\xF1\u40F1\xE7\u0C43iangle\u0100lr\u2C52\u2C5Ceft\u0100;e\u0C1A\u2C5A\xF1\u0C26ight\u0100;e\u0CCB\u2C65\xF1\u0CD7\u0100;m\u2C6C\u2C6D\u43BD\u0180;es\u2C74\u2C75\u2C79\u4023ro;\u6116p;\u6007\u0480DHadgilrs\u2C8F\u2C94\u2C99\u2C9E\u2CA3\u2CB0\u2CB6\u2CD3\u2CE3ash;\u62ADarr;\u6904p;\uC000\u224D\u20D2ash;\u62AC\u0100et\u2CA8\u2CAC;\uC000\u2265\u20D2;\uC000>\u20D2nfin;\u69DE\u0180Aet\u2CBD\u2CC1\u2CC5rr;\u6902;\uC000\u2264\u20D2\u0100;r\u2CCA\u2CCD\uC000<\u20D2ie;\uC000\u22B4\u20D2\u0100At\u2CD8\u2CDCrr;\u6903rie;\uC000\u22B5\u20D2im;\uC000\u223C\u20D2\u0180Aan\u2CF0\u2CF4\u2D02rr;\u61D6r\u0100hr\u2CFA\u2CFDk;\u6923\u0100;o\u13E7\u13E5ear;\u6927\u1253\u1A95\0\0\0\0\0\0\0\0\0\0\0\0\0\u2D2D\0\u2D38\u2D48\u2D60\u2D65\u2D72\u2D84\u1B07\0\0\u2D8D\u2DAB\0\u2DC8\u2DCE\0\u2DDC\u2E19\u2E2B\u2E3E\u2E43\u0100cs\u2D31\u1A97ute\u803B\xF3\u40F3\u0100iy\u2D3C\u2D45r\u0100;c\u1A9E\u2D42\u803B\xF4\u40F4;\u443E\u0280abios\u1AA0\u2D52\u2D57\u01C8\u2D5Alac;\u4151v;\u6A38old;\u69BClig;\u4153\u0100cr\u2D69\u2D6Dir;\u69BF;\uC000\uD835\uDD2C\u036F\u2D79\0\0\u2D7C\0\u2D82n;\u42DBave\u803B\xF2\u40F2;\u69C1\u0100bm\u2D88\u0DF4ar;\u69B5\u0200acit\u2D95\u2D98\u2DA5\u2DA8r\xF2\u1A80\u0100ir\u2D9D\u2DA0r;\u69BEoss;\u69BBn\xE5\u0E52;\u69C0\u0180aei\u2DB1\u2DB5\u2DB9cr;\u414Dga;\u43C9\u0180cdn\u2DC0\u2DC5\u01CDron;\u43BF;\u69B6pf;\uC000\uD835\uDD60\u0180ael\u2DD4\u2DD7\u01D2r;\u69B7rp;\u69B9\u0380;adiosv\u2DEA\u2DEB\u2DEE\u2E08\u2E0D\u2E10\u2E16\u6228r\xF2\u1A86\u0200;efm\u2DF7\u2DF8\u2E02\u2E05\u6A5Dr\u0100;o\u2DFE\u2DFF\u6134f\xBB\u2DFF\u803B\xAA\u40AA\u803B\xBA\u40BAgof;\u62B6r;\u6A56lope;\u6A57;\u6A5B\u0180clo\u2E1F\u2E21\u2E27\xF2\u2E01ash\u803B\xF8\u40F8l;\u6298i\u016C\u2E2F\u2E34de\u803B\xF5\u40F5es\u0100;a\u01DB\u2E3As;\u6A36ml\u803B\xF6\u40F6bar;\u633D\u0AE1\u2E5E\0\u2E7D\0\u2E80\u2E9D\0\u2EA2\u2EB9\0\0\u2ECB\u0E9C\0\u2F13\0\0\u2F2B\u2FBC\0\u2FC8r\u0200;ast\u0403\u2E67\u2E72\u0E85\u8100\xB6;l\u2E6D\u2E6E\u40B6le\xEC\u0403\u0269\u2E78\0\0\u2E7Bm;\u6AF3;\u6AFDy;\u443Fr\u0280cimpt\u2E8B\u2E8F\u2E93\u1865\u2E97nt;\u4025od;\u402Eil;\u6030enk;\u6031r;\uC000\uD835\uDD2D\u0180imo\u2EA8\u2EB0\u2EB4\u0100;v\u2EAD\u2EAE\u43C6;\u43D5ma\xF4\u0A76ne;\u660E\u0180;tv\u2EBF\u2EC0\u2EC8\u43C0chfork\xBB\u1FFD;\u43D6\u0100au\u2ECF\u2EDFn\u0100ck\u2ED5\u2EDDk\u0100;h\u21F4\u2EDB;\u610E\xF6\u21F4s\u0480;abcdemst\u2EF3\u2EF4\u1908\u2EF9\u2EFD\u2F04\u2F06\u2F0A\u2F0E\u402Bcir;\u6A23ir;\u6A22\u0100ou\u1D40\u2F02;\u6A25;\u6A72n\u80BB\xB1\u0E9Dim;\u6A26wo;\u6A27\u0180ipu\u2F19\u2F20\u2F25ntint;\u6A15f;\uC000\uD835\uDD61nd\u803B\xA3\u40A3\u0500;Eaceinosu\u0EC8\u2F3F\u2F41\u2F44\u2F47\u2F81\u2F89\u2F92\u2F7E\u2FB6;\u6AB3p;\u6AB7u\xE5\u0ED9\u0100;c\u0ECE\u2F4C\u0300;acens\u0EC8\u2F59\u2F5F\u2F66\u2F68\u2F7Eppro\xF8\u2F43urlye\xF1\u0ED9\xF1\u0ECE\u0180aes\u2F6F\u2F76\u2F7Approx;\u6AB9qq;\u6AB5im;\u62E8i\xED\u0EDFme\u0100;s\u2F88\u0EAE\u6032\u0180Eas\u2F78\u2F90\u2F7A\xF0\u2F75\u0180dfp\u0EEC\u2F99\u2FAF\u0180als\u2FA0\u2FA5\u2FAAlar;\u632Eine;\u6312urf;\u6313\u0100;t\u0EFB\u2FB4\xEF\u0EFBrel;\u62B0\u0100ci\u2FC0\u2FC5r;\uC000\uD835\uDCC5;\u43C8ncsp;\u6008\u0300fiopsu\u2FDA\u22E2\u2FDF\u2FE5\u2FEB\u2FF1r;\uC000\uD835\uDD2Epf;\uC000\uD835\uDD62rime;\u6057cr;\uC000\uD835\uDCC6\u0180aeo\u2FF8\u3009\u3013t\u0100ei\u2FFE\u3005rnion\xF3\u06B0nt;\u6A16st\u0100;e\u3010\u3011\u403F\xF1\u1F19\xF4\u0F14\u0A80ABHabcdefhilmnoprstux\u3040\u3051\u3055\u3059\u30E0\u310E\u312B\u3147\u3162\u3172\u318E\u3206\u3215\u3224\u3229\u3258\u326E\u3272\u3290\u32B0\u32B7\u0180art\u3047\u304A\u304Cr\xF2\u10B3\xF2\u03DDail;\u691Car\xF2\u1C65ar;\u6964\u0380cdenqrt\u3068\u3075\u3078\u307F\u308F\u3094\u30CC\u0100eu\u306D\u3071;\uC000\u223D\u0331te;\u4155i\xE3\u116Emptyv;\u69B3g\u0200;del\u0FD1\u3089\u308B\u308D;\u6992;\u69A5\xE5\u0FD1uo\u803B\xBB\u40BBr\u0580;abcfhlpstw\u0FDC\u30AC\u30AF\u30B7\u30B9\u30BC\u30BE\u30C0\u30C3\u30C7\u30CAp;\u6975\u0100;f\u0FE0\u30B4s;\u6920;\u6933s;\u691E\xEB\u225D\xF0\u272El;\u6945im;\u6974l;\u61A3;\u619D\u0100ai\u30D1\u30D5il;\u691Ao\u0100;n\u30DB\u30DC\u6236al\xF3\u0F1E\u0180abr\u30E7\u30EA\u30EEr\xF2\u17E5rk;\u6773\u0100ak\u30F3\u30FDc\u0100ek\u30F9\u30FB;\u407D;\u405D\u0100es\u3102\u3104;\u698Cl\u0100du\u310A\u310C;\u698E;\u6990\u0200aeuy\u3117\u311C\u3127\u3129ron;\u4159\u0100di\u3121\u3125il;\u4157\xEC\u0FF2\xE2\u30FA;\u4440\u0200clqs\u3134\u3137\u313D\u3144a;\u6937dhar;\u6969uo\u0100;r\u020E\u020Dh;\u61B3\u0180acg\u314E\u315F\u0F44l\u0200;ips\u0F78\u3158\u315B\u109Cn\xE5\u10BBar\xF4\u0FA9t;\u65AD\u0180ilr\u3169\u1023\u316Esht;\u697D;\uC000\uD835\uDD2F\u0100ao\u3177\u3186r\u0100du\u317D\u317F\xBB\u047B\u0100;l\u1091\u3184;\u696C\u0100;v\u318B\u318C\u43C1;\u43F1\u0180gns\u3195\u31F9\u31FCht\u0300ahlrst\u31A4\u31B0\u31C2\u31D8\u31E4\u31EErrow\u0100;t\u0FDC\u31ADa\xE9\u30C8arpoon\u0100du\u31BB\u31BFow\xEE\u317Ep\xBB\u1092eft\u0100ah\u31CA\u31D0rrow\xF3\u0FEAarpoon\xF3\u0551ightarrows;\u61C9quigarro\xF7\u30CBhreetimes;\u62CCg;\u42DAingdotse\xF1\u1F32\u0180ahm\u320D\u3210\u3213r\xF2\u0FEAa\xF2\u0551;\u600Foust\u0100;a\u321E\u321F\u63B1che\xBB\u321Fmid;\u6AEE\u0200abpt\u3232\u323D\u3240\u3252\u0100nr\u3237\u323Ag;\u67EDr;\u61FEr\xEB\u1003\u0180afl\u3247\u324A\u324Er;\u6986;\uC000\uD835\uDD63us;\u6A2Eimes;\u6A35\u0100ap\u325D\u3267r\u0100;g\u3263\u3264\u4029t;\u6994olint;\u6A12ar\xF2\u31E3\u0200achq\u327B\u3280\u10BC\u3285quo;\u603Ar;\uC000\uD835\uDCC7\u0100bu\u30FB\u328Ao\u0100;r\u0214\u0213\u0180hir\u3297\u329B\u32A0re\xE5\u31F8mes;\u62CAi\u0200;efl\u32AA\u1059\u1821\u32AB\u65B9tri;\u69CEluhar;\u6968;\u611E\u0D61\u32D5\u32DB\u32DF\u332C\u3338\u3371\0\u337A\u33A4\0\0\u33EC\u33F0\0\u3428\u3448\u345A\u34AD\u34B1\u34CA\u34F1\0\u3616\0\0\u3633cute;\u415Bqu\xEF\u27BA\u0500;Eaceinpsy\u11ED\u32F3\u32F5\u32FF\u3302\u330B\u330F\u331F\u3326\u3329;\u6AB4\u01F0\u32FA\0\u32FC;\u6AB8on;\u4161u\xE5\u11FE\u0100;d\u11F3\u3307il;\u415Frc;\u415D\u0180Eas\u3316\u3318\u331B;\u6AB6p;\u6ABAim;\u62E9olint;\u6A13i\xED\u1204;\u4441ot\u0180;be\u3334\u1D47\u3335\u62C5;\u6A66\u0380Aacmstx\u3346\u334A\u3357\u335B\u335E\u3363\u336Drr;\u61D8r\u0100hr\u3350\u3352\xEB\u2228\u0100;o\u0A36\u0A34t\u803B\xA7\u40A7i;\u403Bwar;\u6929m\u0100in\u3369\xF0nu\xF3\xF1t;\u6736r\u0100;o\u3376\u2055\uC000\uD835\uDD30\u0200acoy\u3382\u3386\u3391\u33A0rp;\u666F\u0100hy\u338B\u338Fcy;\u4449;\u4448rt\u026D\u3399\0\0\u339Ci\xE4\u1464ara\xEC\u2E6F\u803B\xAD\u40AD\u0100gm\u33A8\u33B4ma\u0180;fv\u33B1\u33B2\u33B2\u43C3;\u43C2\u0400;deglnpr\u12AB\u33C5\u33C9\u33CE\u33D6\u33DE\u33E1\u33E6ot;\u6A6A\u0100;q\u12B1\u12B0\u0100;E\u33D3\u33D4\u6A9E;\u6AA0\u0100;E\u33DB\u33DC\u6A9D;\u6A9Fe;\u6246lus;\u6A24arr;\u6972ar\xF2\u113D\u0200aeit\u33F8\u3408\u340F\u3417\u0100ls\u33FD\u3404lsetm\xE9\u336Ahp;\u6A33parsl;\u69E4\u0100dl\u1463\u3414e;\u6323\u0100;e\u341C\u341D\u6AAA\u0100;s\u3422\u3423\u6AAC;\uC000\u2AAC\uFE00\u0180flp\u342E\u3433\u3442tcy;\u444C\u0100;b\u3438\u3439\u402F\u0100;a\u343E\u343F\u69C4r;\u633Ff;\uC000\uD835\uDD64a\u0100dr\u344D\u0402es\u0100;u\u3454\u3455\u6660it\xBB\u3455\u0180csu\u3460\u3479\u349F\u0100au\u3465\u346Fp\u0100;s\u1188\u346B;\uC000\u2293\uFE00p\u0100;s\u11B4\u3475;\uC000\u2294\uFE00u\u0100bp\u347F\u348F\u0180;es\u1197\u119C\u3486et\u0100;e\u1197\u348D\xF1\u119D\u0180;es\u11A8\u11AD\u3496et\u0100;e\u11A8\u349D\xF1\u11AE\u0180;af\u117B\u34A6\u05B0r\u0165\u34AB\u05B1\xBB\u117Car\xF2\u1148\u0200cemt\u34B9\u34BE\u34C2\u34C5r;\uC000\uD835\uDCC8tm\xEE\xF1i\xEC\u3415ar\xE6\u11BE\u0100ar\u34CE\u34D5r\u0100;f\u34D4\u17BF\u6606\u0100an\u34DA\u34EDight\u0100ep\u34E3\u34EApsilo\xEE\u1EE0h\xE9\u2EAFs\xBB\u2852\u0280bcmnp\u34FB\u355E\u1209\u358B\u358E\u0480;Edemnprs\u350E\u350F\u3511\u3515\u351E\u3523\u352C\u3531\u3536\u6282;\u6AC5ot;\u6ABD\u0100;d\u11DA\u351Aot;\u6AC3ult;\u6AC1\u0100Ee\u3528\u352A;\u6ACB;\u628Alus;\u6ABFarr;\u6979\u0180eiu\u353D\u3552\u3555t\u0180;en\u350E\u3545\u354Bq\u0100;q\u11DA\u350Feq\u0100;q\u352B\u3528m;\u6AC7\u0100bp\u355A\u355C;\u6AD5;\u6AD3c\u0300;acens\u11ED\u356C\u3572\u3579\u357B\u3326ppro\xF8\u32FAurlye\xF1\u11FE\xF1\u11F3\u0180aes\u3582\u3588\u331Bppro\xF8\u331Aq\xF1\u3317g;\u666A\u0680123;Edehlmnps\u35A9\u35AC\u35AF\u121C\u35B2\u35B4\u35C0\u35C9\u35D5\u35DA\u35DF\u35E8\u35ED\u803B\xB9\u40B9\u803B\xB2\u40B2\u803B\xB3\u40B3;\u6AC6\u0100os\u35B9\u35BCt;\u6ABEub;\u6AD8\u0100;d\u1222\u35C5ot;\u6AC4s\u0100ou\u35CF\u35D2l;\u67C9b;\u6AD7arr;\u697Bult;\u6AC2\u0100Ee\u35E4\u35E6;\u6ACC;\u628Blus;\u6AC0\u0180eiu\u35F4\u3609\u360Ct\u0180;en\u121C\u35FC\u3602q\u0100;q\u1222\u35B2eq\u0100;q\u35E7\u35E4m;\u6AC8\u0100bp\u3611\u3613;\u6AD4;\u6AD6\u0180Aan\u361C\u3620\u362Drr;\u61D9r\u0100hr\u3626\u3628\xEB\u222E\u0100;o\u0A2B\u0A29war;\u692Alig\u803B\xDF\u40DF\u0BE1\u3651\u365D\u3660\u12CE\u3673\u3679\0\u367E\u36C2\0\0\0\0\0\u36DB\u3703\0\u3709\u376C\0\0\0\u3787\u0272\u3656\0\0\u365Bget;\u6316;\u43C4r\xEB\u0E5F\u0180aey\u3666\u366B\u3670ron;\u4165dil;\u4163;\u4442lrec;\u6315r;\uC000\uD835\uDD31\u0200eiko\u3686\u369D\u36B5\u36BC\u01F2\u368B\0\u3691e\u01004f\u1284\u1281a\u0180;sv\u3698\u3699\u369B\u43B8ym;\u43D1\u0100cn\u36A2\u36B2k\u0100as\u36A8\u36AEppro\xF8\u12C1im\xBB\u12ACs\xF0\u129E\u0100as\u36BA\u36AE\xF0\u12C1rn\u803B\xFE\u40FE\u01EC\u031F\u36C6\u22E7es\u8180\xD7;bd\u36CF\u36D0\u36D8\u40D7\u0100;a\u190F\u36D5r;\u6A31;\u6A30\u0180eps\u36E1\u36E3\u3700\xE1\u2A4D\u0200;bcf\u0486\u36EC\u36F0\u36F4ot;\u6336ir;\u6AF1\u0100;o\u36F9\u36FC\uC000\uD835\uDD65rk;\u6ADA\xE1\u3362rime;\u6034\u0180aip\u370F\u3712\u3764d\xE5\u1248\u0380adempst\u3721\u374D\u3740\u3751\u3757\u375C\u375Fngle\u0280;dlqr\u3730\u3731\u3736\u3740\u3742\u65B5own\xBB\u1DBBeft\u0100;e\u2800\u373E\xF1\u092E;\u625Cight\u0100;e\u32AA\u374B\xF1\u105Aot;\u65ECinus;\u6A3Alus;\u6A39b;\u69CDime;\u6A3Bezium;\u63E2\u0180cht\u3772\u377D\u3781\u0100ry\u3777\u377B;\uC000\uD835\uDCC9;\u4446cy;\u445Brok;\u4167\u0100io\u378B\u378Ex\xF4\u1777head\u0100lr\u3797\u37A0eftarro\xF7\u084Fightarrow\xBB\u0F5D\u0900AHabcdfghlmoprstuw\u37D0\u37D3\u37D7\u37E4\u37F0\u37FC\u380E\u381C\u3823\u3834\u3851\u385D\u386B\u38A9\u38CC\u38D2\u38EA\u38F6r\xF2\u03EDar;\u6963\u0100cr\u37DC\u37E2ute\u803B\xFA\u40FA\xF2\u1150r\u01E3\u37EA\0\u37EDy;\u445Eve;\u416D\u0100iy\u37F5\u37FArc\u803B\xFB\u40FB;\u4443\u0180abh\u3803\u3806\u380Br\xF2\u13ADlac;\u4171a\xF2\u13C3\u0100ir\u3813\u3818sht;\u697E;\uC000\uD835\uDD32rave\u803B\xF9\u40F9\u0161\u3827\u3831r\u0100lr\u382C\u382E\xBB\u0957\xBB\u1083lk;\u6580\u0100ct\u3839\u384D\u026F\u383F\0\0\u384Arn\u0100;e\u3845\u3846\u631Cr\xBB\u3846op;\u630Fri;\u65F8\u0100al\u3856\u385Acr;\u416B\u80BB\xA8\u0349\u0100gp\u3862\u3866on;\u4173f;\uC000\uD835\uDD66\u0300adhlsu\u114B\u3878\u387D\u1372\u3891\u38A0own\xE1\u13B3arpoon\u0100lr\u3888\u388Cef\xF4\u382Digh\xF4\u382Fi\u0180;hl\u3899\u389A\u389C\u43C5\xBB\u13FAon\xBB\u389Aparrows;\u61C8\u0180cit\u38B0\u38C4\u38C8\u026F\u38B6\0\0\u38C1rn\u0100;e\u38BC\u38BD\u631Dr\xBB\u38BDop;\u630Eng;\u416Fri;\u65F9cr;\uC000\uD835\uDCCA\u0180dir\u38D9\u38DD\u38E2ot;\u62F0lde;\u4169i\u0100;f\u3730\u38E8\xBB\u1813\u0100am\u38EF\u38F2r\xF2\u38A8l\u803B\xFC\u40FCangle;\u69A7\u0780ABDacdeflnoprsz\u391C\u391F\u3929\u392D\u39B5\u39B8\u39BD\u39DF\u39E4\u39E8\u39F3\u39F9\u39FD\u3A01\u3A20r\xF2\u03F7ar\u0100;v\u3926\u3927\u6AE8;\u6AE9as\xE8\u03E1\u0100nr\u3932\u3937grt;\u699C\u0380eknprst\u34E3\u3946\u394B\u3952\u395D\u3964\u3996app\xE1\u2415othin\xE7\u1E96\u0180hir\u34EB\u2EC8\u3959op\xF4\u2FB5\u0100;h\u13B7\u3962\xEF\u318D\u0100iu\u3969\u396Dgm\xE1\u33B3\u0100bp\u3972\u3984setneq\u0100;q\u397D\u3980\uC000\u228A\uFE00;\uC000\u2ACB\uFE00setneq\u0100;q\u398F\u3992\uC000\u228B\uFE00;\uC000\u2ACC\uFE00\u0100hr\u399B\u399Fet\xE1\u369Ciangle\u0100lr\u39AA\u39AFeft\xBB\u0925ight\xBB\u1051y;\u4432ash\xBB\u1036\u0180elr\u39C4\u39D2\u39D7\u0180;be\u2DEA\u39CB\u39CFar;\u62BBq;\u625Alip;\u62EE\u0100bt\u39DC\u1468a\xF2\u1469r;\uC000\uD835\uDD33tr\xE9\u39AEsu\u0100bp\u39EF\u39F1\xBB\u0D1C\xBB\u0D59pf;\uC000\uD835\uDD67ro\xF0\u0EFBtr\xE9\u39B4\u0100cu\u3A06\u3A0Br;\uC000\uD835\uDCCB\u0100bp\u3A10\u3A18n\u0100Ee\u3980\u3A16\xBB\u397En\u0100Ee\u3992\u3A1E\xBB\u3990igzag;\u699A\u0380cefoprs\u3A36\u3A3B\u3A56\u3A5B\u3A54\u3A61\u3A6Airc;\u4175\u0100di\u3A40\u3A51\u0100bg\u3A45\u3A49ar;\u6A5Fe\u0100;q\u15FA\u3A4F;\u6259erp;\u6118r;\uC000\uD835\uDD34pf;\uC000\uD835\uDD68\u0100;e\u1479\u3A66at\xE8\u1479cr;\uC000\uD835\uDCCC\u0AE3\u178E\u3A87\0\u3A8B\0\u3A90\u3A9B\0\0\u3A9D\u3AA8\u3AAB\u3AAF\0\0\u3AC3\u3ACE\0\u3AD8\u17DC\u17DFtr\xE9\u17D1r;\uC000\uD835\uDD35\u0100Aa\u3A94\u3A97r\xF2\u03C3r\xF2\u09F6;\u43BE\u0100Aa\u3AA1\u3AA4r\xF2\u03B8r\xF2\u09EBa\xF0\u2713is;\u62FB\u0180dpt\u17A4\u3AB5\u3ABE\u0100fl\u3ABA\u17A9;\uC000\uD835\uDD69im\xE5\u17B2\u0100Aa\u3AC7\u3ACAr\xF2\u03CEr\xF2\u0A01\u0100cq\u3AD2\u17B8r;\uC000\uD835\uDCCD\u0100pt\u17D6\u3ADCr\xE9\u17D4\u0400acefiosu\u3AF0\u3AFD\u3B08\u3B0C\u3B11\u3B15\u3B1B\u3B21c\u0100uy\u3AF6\u3AFBte\u803B\xFD\u40FD;\u444F\u0100iy\u3B02\u3B06rc;\u4177;\u444Bn\u803B\xA5\u40A5r;\uC000\uD835\uDD36cy;\u4457pf;\uC000\uD835\uDD6Acr;\uC000\uD835\uDCCE\u0100cm\u3B26\u3B29y;\u444El\u803B\xFF\u40FF\u0500acdefhiosw\u3B42\u3B48\u3B54\u3B58\u3B64\u3B69\u3B6D\u3B74\u3B7A\u3B80cute;\u417A\u0100ay\u3B4D\u3B52ron;\u417E;\u4437ot;\u417C\u0100et\u3B5D\u3B61tr\xE6\u155Fa;\u43B6r;\uC000\uD835\uDD37cy;\u4436grarr;\u61DDpf;\uC000\uD835\uDD6Bcr;\uC000\uD835\uDCCF\u0100jn\u3B85\u3B87;\u600Dj;\u600C".split("").map(function (c) {
  return c.charCodeAt(0);
})));
// CONCATENATED MODULE: ./node_modules/entities/lib/esm/generated/decode-data-xml.js
// Generated using scripts/write-decode-map.ts
/* harmony default export */ var decode_data_xml = (new Uint16Array( // prettier-ignore
"\u0200aglq\t\x15\x18\x1B\u026D\x0F\0\0\x12p;\u4026os;\u4027t;\u403Et;\u403Cuot;\u4022".split("").map(function (c) {
  return c.charCodeAt(0);
})));
// CONCATENATED MODULE: ./node_modules/entities/lib/esm/decode_codepoint.js
// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134
var decode_codepoint_a;

var decodeMap = new Map([[0, 65533], // C1 Unicode control character reference replacements
[128, 8364], [130, 8218], [131, 402], [132, 8222], [133, 8230], [134, 8224], [135, 8225], [136, 710], [137, 8240], [138, 352], [139, 8249], [140, 338], [142, 381], [145, 8216], [146, 8217], [147, 8220], [148, 8221], [149, 8226], [150, 8211], [151, 8212], [152, 732], [153, 8482], [154, 353], [155, 8250], [156, 339], [158, 382], [159, 376]]);
/**
 * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.
 */

var fromCodePoint = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins
(decode_codepoint_a = String.fromCodePoint) !== null && decode_codepoint_a !== void 0 ? decode_codepoint_a : function (codePoint) {
  var output = "";

  if (codePoint > 0xffff) {
    codePoint -= 0x10000;
    output += String.fromCharCode(codePoint >>> 10 & 0x3ff | 0xd800);
    codePoint = 0xdc00 | codePoint & 0x3ff;
  }

  output += String.fromCharCode(codePoint);
  return output;
};
/**
 * Replace the given code point with a replacement character if it is a
 * surrogate or is outside the valid range. Otherwise return the code
 * point unchanged.
 */

function replaceCodePoint(codePoint) {
  var _a;

  if (codePoint >= 0xd800 && codePoint <= 0xdfff || codePoint > 0x10ffff) {
    return 0xfffd;
  }

  return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;
}
/**
 * Replace the code point if relevant, then convert it to a string.
 *
 * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.
 * @param codePoint The code point to decode.
 * @returns The decoded code point.
 */

function decodeCodePoint(codePoint) {
  return fromCodePoint(replaceCodePoint(codePoint));
}
// CONCATENATED MODULE: ./node_modules/entities/lib/esm/decode.js
function decode_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function decode_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function decode_createClass(Constructor, protoProps, staticProps) { if (protoProps) decode_defineProperties(Constructor.prototype, protoProps); if (staticProps) decode_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }



 // Re-export for use by eg. htmlparser2



var CharCodes;

(function (CharCodes) {
  CharCodes[CharCodes["NUM"] = 35] = "NUM";
  CharCodes[CharCodes["SEMI"] = 59] = "SEMI";
  CharCodes[CharCodes["EQUALS"] = 61] = "EQUALS";
  CharCodes[CharCodes["ZERO"] = 48] = "ZERO";
  CharCodes[CharCodes["NINE"] = 57] = "NINE";
  CharCodes[CharCodes["LOWER_A"] = 97] = "LOWER_A";
  CharCodes[CharCodes["LOWER_F"] = 102] = "LOWER_F";
  CharCodes[CharCodes["LOWER_X"] = 120] = "LOWER_X";
  CharCodes[CharCodes["LOWER_Z"] = 122] = "LOWER_Z";
  CharCodes[CharCodes["UPPER_A"] = 65] = "UPPER_A";
  CharCodes[CharCodes["UPPER_F"] = 70] = "UPPER_F";
  CharCodes[CharCodes["UPPER_Z"] = 90] = "UPPER_Z";
})(CharCodes || (CharCodes = {}));
/** Bit that needs to be set to convert an upper case ASCII character to lower case */


var TO_LOWER_BIT = 32;
var BinTrieFlags;

(function (BinTrieFlags) {
  BinTrieFlags[BinTrieFlags["VALUE_LENGTH"] = 49152] = "VALUE_LENGTH";
  BinTrieFlags[BinTrieFlags["BRANCH_LENGTH"] = 16256] = "BRANCH_LENGTH";
  BinTrieFlags[BinTrieFlags["JUMP_TABLE"] = 127] = "JUMP_TABLE";
})(BinTrieFlags || (BinTrieFlags = {}));

function isNumber(code) {
  return code >= CharCodes.ZERO && code <= CharCodes.NINE;
}

function isHexadecimalCharacter(code) {
  return code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F || code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F;
}

function isAsciiAlphaNumeric(code) {
  return code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z || code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z || isNumber(code);
}
/**
 * Checks if the given character is a valid end character for an entity in an attribute.
 *
 * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.
 * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state
 */


function isEntityInAttributeInvalidEnd(code) {
  return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);
}

var EntityDecoderState;

(function (EntityDecoderState) {
  EntityDecoderState[EntityDecoderState["EntityStart"] = 0] = "EntityStart";
  EntityDecoderState[EntityDecoderState["NumericStart"] = 1] = "NumericStart";
  EntityDecoderState[EntityDecoderState["NumericDecimal"] = 2] = "NumericDecimal";
  EntityDecoderState[EntityDecoderState["NumericHex"] = 3] = "NumericHex";
  EntityDecoderState[EntityDecoderState["NamedEntity"] = 4] = "NamedEntity";
})(EntityDecoderState || (EntityDecoderState = {}));

var DecodingMode;

(function (DecodingMode) {
  /** Entities in text nodes that can end with any character. */
  DecodingMode[DecodingMode["Legacy"] = 0] = "Legacy";
  /** Only allow entities terminated with a semicolon. */

  DecodingMode[DecodingMode["Strict"] = 1] = "Strict";
  /** Entities in attributes have limitations on ending characters. */

  DecodingMode[DecodingMode["Attribute"] = 2] = "Attribute";
})(DecodingMode || (DecodingMode = {}));
/**
 * Token decoder with support of writing partial entities.
 */


var decode_EntityDecoder = /*#__PURE__*/function () {
  function EntityDecoder(
  /** The tree used to decode entities. */
  decodeTree,
  /**
   * The function that is called when a codepoint is decoded.
   *
   * For multi-byte named entities, this will be called multiple times,
   * with the second codepoint, and the same `consumed` value.
   *
   * @param codepoint The decoded codepoint.
   * @param consumed The number of bytes consumed by the decoder.
   */
  emitCodePoint,
  /** An object that is used to produce errors. */
  errors) {
    decode_classCallCheck(this, EntityDecoder);

    this.decodeTree = decodeTree;
    this.emitCodePoint = emitCodePoint;
    this.errors = errors;
    /** The current state of the decoder. */

    this.state = EntityDecoderState.EntityStart;
    /** Characters that were consumed while parsing an entity. */

    this.consumed = 1;
    /**
     * The result of the entity.
     *
     * Either the result index of a numeric entity, or the codepoint of a
     * numeric entity.
     */

    this.result = 0;
    /** The current index in the decode tree. */

    this.treeIndex = 0;
    /** The number of characters that were consumed in excess. */

    this.excess = 1;
    /** The mode in which the decoder is operating. */

    this.decodeMode = DecodingMode.Strict;
  }
  /** Resets the instance to make it reusable. */


  decode_createClass(EntityDecoder, [{
    key: "startEntity",
    value: function startEntity(decodeMode) {
      this.decodeMode = decodeMode;
      this.state = EntityDecoderState.EntityStart;
      this.result = 0;
      this.treeIndex = 0;
      this.excess = 1;
      this.consumed = 1;
    }
    /**
     * Write an entity to the decoder. This can be called multiple times with partial entities.
     * If the entity is incomplete, the decoder will return -1.
     *
     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the
     * entity is incomplete, and resume when the next string is written.
     *
     * @param string The string containing the entity (or a continuation of the entity).
     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.
     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
     */

  }, {
    key: "write",
    value: function write(str, offset) {
      switch (this.state) {
        case EntityDecoderState.EntityStart:
          {
            if (str.charCodeAt(offset) === CharCodes.NUM) {
              this.state = EntityDecoderState.NumericStart;
              this.consumed += 1;
              return this.stateNumericStart(str, offset + 1);
            }

            this.state = EntityDecoderState.NamedEntity;
            return this.stateNamedEntity(str, offset);
          }

        case EntityDecoderState.NumericStart:
          {
            return this.stateNumericStart(str, offset);
          }

        case EntityDecoderState.NumericDecimal:
          {
            return this.stateNumericDecimal(str, offset);
          }

        case EntityDecoderState.NumericHex:
          {
            return this.stateNumericHex(str, offset);
          }

        case EntityDecoderState.NamedEntity:
          {
            return this.stateNamedEntity(str, offset);
          }
      }
    }
    /**
     * Switches between the numeric decimal and hexadecimal states.
     *
     * Equivalent to the `Numeric character reference state` in the HTML spec.
     *
     * @param str The string containing the entity (or a continuation of the entity).
     * @param offset The current offset.
     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
     */

  }, {
    key: "stateNumericStart",
    value: function stateNumericStart(str, offset) {
      if (offset >= str.length) {
        return -1;
      }

      if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {
        this.state = EntityDecoderState.NumericHex;
        this.consumed += 1;
        return this.stateNumericHex(str, offset + 1);
      }

      this.state = EntityDecoderState.NumericDecimal;
      return this.stateNumericDecimal(str, offset);
    }
  }, {
    key: "addToNumericResult",
    value: function addToNumericResult(str, start, end, base) {
      if (start !== end) {
        var digitCount = end - start;
        this.result = this.result * Math.pow(base, digitCount) + parseInt(str.substr(start, digitCount), base);
        this.consumed += digitCount;
      }
    }
    /**
     * Parses a hexadecimal numeric entity.
     *
     * Equivalent to the `Hexademical character reference state` in the HTML spec.
     *
     * @param str The string containing the entity (or a continuation of the entity).
     * @param offset The current offset.
     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
     */

  }, {
    key: "stateNumericHex",
    value: function stateNumericHex(str, offset) {
      var startIdx = offset;

      while (offset < str.length) {
        var _char = str.charCodeAt(offset);

        if (isNumber(_char) || isHexadecimalCharacter(_char)) {
          offset += 1;
        } else {
          this.addToNumericResult(str, startIdx, offset, 16);
          return this.emitNumericEntity(_char, 3);
        }
      }

      this.addToNumericResult(str, startIdx, offset, 16);
      return -1;
    }
    /**
     * Parses a decimal numeric entity.
     *
     * Equivalent to the `Decimal character reference state` in the HTML spec.
     *
     * @param str The string containing the entity (or a continuation of the entity).
     * @param offset The current offset.
     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
     */

  }, {
    key: "stateNumericDecimal",
    value: function stateNumericDecimal(str, offset) {
      var startIdx = offset;

      while (offset < str.length) {
        var _char2 = str.charCodeAt(offset);

        if (isNumber(_char2)) {
          offset += 1;
        } else {
          this.addToNumericResult(str, startIdx, offset, 10);
          return this.emitNumericEntity(_char2, 2);
        }
      }

      this.addToNumericResult(str, startIdx, offset, 10);
      return -1;
    }
    /**
     * Validate and emit a numeric entity.
     *
     * Implements the logic from the `Hexademical character reference start
     * state` and `Numeric character reference end state` in the HTML spec.
     *
     * @param lastCp The last code point of the entity. Used to see if the
     *               entity was terminated with a semicolon.
     * @param expectedLength The minimum number of characters that should be
     *                       consumed. Used to validate that at least one digit
     *                       was consumed.
     * @returns The number of characters that were consumed.
     */

  }, {
    key: "emitNumericEntity",
    value: function emitNumericEntity(lastCp, expectedLength) {
      var _a; // Ensure we consumed at least one digit.


      if (this.consumed <= expectedLength) {
        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);
        return 0;
      } // Figure out if this is a legit end of the entity


      if (lastCp === CharCodes.SEMI) {
        this.consumed += 1;
      } else if (this.decodeMode === DecodingMode.Strict) {
        return 0;
      }

      this.emitCodePoint(replaceCodePoint(this.result), this.consumed);

      if (this.errors) {
        if (lastCp !== CharCodes.SEMI) {
          this.errors.missingSemicolonAfterCharacterReference();
        }

        this.errors.validateNumericCharacterReference(this.result);
      }

      return this.consumed;
    }
    /**
     * Parses a named entity.
     *
     * Equivalent to the `Named character reference state` in the HTML spec.
     *
     * @param str The string containing the entity (or a continuation of the entity).
     * @param offset The current offset.
     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.
     */

  }, {
    key: "stateNamedEntity",
    value: function stateNamedEntity(str, offset) {
      var decodeTree = this.decodeTree;
      var current = decodeTree[this.treeIndex]; // The mask is the number of bytes of the value, including the current byte.

      var valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;

      for (; offset < str.length; offset++, this.excess++) {
        var _char3 = str.charCodeAt(offset);

        this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), _char3);

        if (this.treeIndex < 0) {
          return this.result === 0 || // If we are parsing an attribute
          this.decodeMode === DecodingMode.Attribute && ( // We shouldn't have consumed any characters after the entity,
          valueLength === 0 || // And there should be no invalid characters.
          isEntityInAttributeInvalidEnd(_char3)) ? 0 : this.emitNotTerminatedNamedEntity();
        }

        current = decodeTree[this.treeIndex];
        valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14; // If the branch is a value, store it and continue

        if (valueLength !== 0) {
          // If the entity is terminated by a semicolon, we are done.
          if (_char3 === CharCodes.SEMI) {
            return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);
          } // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.


          if (this.decodeMode !== DecodingMode.Strict) {
            this.result = this.treeIndex;
            this.consumed += this.excess;
            this.excess = 0;
          }
        }
      }

      return -1;
    }
    /**
     * Emit a named entity that was not terminated with a semicolon.
     *
     * @returns The number of characters consumed.
     */

  }, {
    key: "emitNotTerminatedNamedEntity",
    value: function emitNotTerminatedNamedEntity() {
      var _a;

      var result = this.result,
          decodeTree = this.decodeTree;
      var valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;
      this.emitNamedEntityData(result, valueLength, this.consumed);
      (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();
      return this.consumed;
    }
    /**
     * Emit a named entity.
     *
     * @param result The index of the entity in the decode tree.
     * @param valueLength The number of bytes in the entity.
     * @param consumed The number of characters consumed.
     *
     * @returns The number of characters consumed.
     */

  }, {
    key: "emitNamedEntityData",
    value: function emitNamedEntityData(result, valueLength, consumed) {
      var decodeTree = this.decodeTree;
      this.emitCodePoint(valueLength === 1 ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH : decodeTree[result + 1], consumed);

      if (valueLength === 3) {
        // For multi-byte values, we need to emit the second byte.
        this.emitCodePoint(decodeTree[result + 2], consumed);
      }

      return consumed;
    }
    /**
     * Signal to the parser that the end of the input was reached.
     *
     * Remaining data will be emitted and relevant errors will be produced.
     *
     * @returns The number of characters consumed.
     */

  }, {
    key: "end",
    value: function end() {
      var _a;

      switch (this.state) {
        case EntityDecoderState.NamedEntity:
          {
            // Emit a named entity if we have one.
            return this.result !== 0 && (this.decodeMode !== DecodingMode.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;
          }
        // Otherwise, emit a numeric entity if we have one.

        case EntityDecoderState.NumericDecimal:
          {
            return this.emitNumericEntity(0, 2);
          }

        case EntityDecoderState.NumericHex:
          {
            return this.emitNumericEntity(0, 3);
          }

        case EntityDecoderState.NumericStart:
          {
            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);
            return 0;
          }

        case EntityDecoderState.EntityStart:
          {
            // Return 0 if we have no entity.
            return 0;
          }
      }
    }
  }]);

  return EntityDecoder;
}();
/**
 * Creates a function that decodes entities in a string.
 *
 * @param decodeTree The decode tree.
 * @returns A function that decodes entities in a string.
 */

function getDecoder(decodeTree) {
  var ret = "";
  var decoder = new decode_EntityDecoder(decodeTree, function (str) {
    return ret += fromCodePoint(str);
  });
  return function decodeWithTrie(str, decodeMode) {
    var lastIndex = 0;
    var offset = 0;

    while ((offset = str.indexOf("&", offset)) >= 0) {
      ret += str.slice(lastIndex, offset);
      decoder.startEntity(decodeMode);
      var len = decoder.write(str, // Skip the "&"
      offset + 1);

      if (len < 0) {
        lastIndex = offset + decoder.end();
        break;
      }

      lastIndex = offset + len; // If `len` is 0, skip the current `&` and continue.

      offset = len === 0 ? lastIndex + 1 : lastIndex;
    }

    var result = ret + str.slice(lastIndex); // Make sure we don't keep a reference to the final string.

    ret = "";
    return result;
  };
}
/**
 * Determines the branch of the current node that is taken given the current
 * character. This function is used to traverse the trie.
 *
 * @param decodeTree The trie.
 * @param current The current node.
 * @param nodeIdx The index right after the current node and its value.
 * @param char The current character.
 * @returns The index of the next node, or -1 if no branch is taken.
 */


function determineBranch(decodeTree, current, nodeIdx, _char4) {
  var branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;
  var jumpOffset = current & BinTrieFlags.JUMP_TABLE; // Case 1: Single branch encoded in jump offset

  if (branchCount === 0) {
    return jumpOffset !== 0 && _char4 === jumpOffset ? nodeIdx : -1;
  } // Case 2: Multiple branches encoded in jump table


  if (jumpOffset) {
    var value = _char4 - jumpOffset;
    return value < 0 || value >= branchCount ? -1 : decodeTree[nodeIdx + value] - 1;
  } // Case 3: Multiple branches encoded in dictionary
  // Binary search for the character.


  var lo = nodeIdx;
  var hi = lo + branchCount - 1;

  while (lo <= hi) {
    var mid = lo + hi >>> 1;
    var midVal = decodeTree[mid];

    if (midVal < _char4) {
      lo = mid + 1;
    } else if (midVal > _char4) {
      hi = mid - 1;
    } else {
      return decodeTree[mid + branchCount];
    }
  }

  return -1;
}
var htmlDecoder = getDecoder(decode_data_html);
var xmlDecoder = getDecoder(decode_data_xml);
/**
 * Decodes an HTML string.
 *
 * @param str The string to decode.
 * @param mode The decoding mode.
 * @returns The decoded string.
 */

function decodeHTML(str) {
  var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DecodingMode.Legacy;
  return htmlDecoder(str, mode);
}
/**
 * Decodes an HTML string in an attribute.
 *
 * @param str The string to decode.
 * @returns The decoded string.
 */

function decodeHTMLAttribute(str) {
  return htmlDecoder(str, DecodingMode.Attribute);
}
/**
 * Decodes an HTML string, requiring all entities to be terminated by a semicolon.
 *
 * @param str The string to decode.
 * @returns The decoded string.
 */

function decodeHTMLStrict(str) {
  return htmlDecoder(str, DecodingMode.Strict);
}
/**
 * Decodes an XML string, requiring all entities to be terminated by a semicolon.
 *
 * @param str The string to decode.
 * @returns The decoded string.
 */

function decodeXML(str) {
  return xmlDecoder(str, DecodingMode.Strict);
}
// CONCATENATED MODULE: ./node_modules/entities/lib/esm/generated/encode-html.js
// Generated using scripts/write-encode-map.ts
function restoreDiff(arr) {
  for (var i = 1; i < arr.length; i++) {
    arr[i][0] += arr[i - 1][0] + 1;
  }

  return arr;
} // prettier-ignore


/* harmony default export */ var encode_html = (new Map( /* #__PURE__ */restoreDiff([[9, "&Tab;"], [0, "&NewLine;"], [22, "&excl;"], [0, "&quot;"], [0, "&num;"], [0, "&dollar;"], [0, "&percnt;"], [0, "&amp;"], [0, "&apos;"], [0, "&lpar;"], [0, "&rpar;"], [0, "&ast;"], [0, "&plus;"], [0, "&comma;"], [1, "&period;"], [0, "&sol;"], [10, "&colon;"], [0, "&semi;"], [0, {
  v: "&lt;",
  n: 8402,
  o: "&nvlt;"
}], [0, {
  v: "&equals;",
  n: 8421,
  o: "&bne;"
}], [0, {
  v: "&gt;",
  n: 8402,
  o: "&nvgt;"
}], [0, "&quest;"], [0, "&commat;"], [26, "&lbrack;"], [0, "&bsol;"], [0, "&rbrack;"], [0, "&Hat;"], [0, "&lowbar;"], [0, "&DiacriticalGrave;"], [5, {
  n: 106,
  o: "&fjlig;"
}], [20, "&lbrace;"], [0, "&verbar;"], [0, "&rbrace;"], [34, "&nbsp;"], [0, "&iexcl;"], [0, "&cent;"], [0, "&pound;"], [0, "&curren;"], [0, "&yen;"], [0, "&brvbar;"], [0, "&sect;"], [0, "&die;"], [0, "&copy;"], [0, "&ordf;"], [0, "&laquo;"], [0, "&not;"], [0, "&shy;"], [0, "&circledR;"], [0, "&macr;"], [0, "&deg;"], [0, "&PlusMinus;"], [0, "&sup2;"], [0, "&sup3;"], [0, "&acute;"], [0, "&micro;"], [0, "&para;"], [0, "&centerdot;"], [0, "&cedil;"], [0, "&sup1;"], [0, "&ordm;"], [0, "&raquo;"], [0, "&frac14;"], [0, "&frac12;"], [0, "&frac34;"], [0, "&iquest;"], [0, "&Agrave;"], [0, "&Aacute;"], [0, "&Acirc;"], [0, "&Atilde;"], [0, "&Auml;"], [0, "&angst;"], [0, "&AElig;"], [0, "&Ccedil;"], [0, "&Egrave;"], [0, "&Eacute;"], [0, "&Ecirc;"], [0, "&Euml;"], [0, "&Igrave;"], [0, "&Iacute;"], [0, "&Icirc;"], [0, "&Iuml;"], [0, "&ETH;"], [0, "&Ntilde;"], [0, "&Ograve;"], [0, "&Oacute;"], [0, "&Ocirc;"], [0, "&Otilde;"], [0, "&Ouml;"], [0, "&times;"], [0, "&Oslash;"], [0, "&Ugrave;"], [0, "&Uacute;"], [0, "&Ucirc;"], [0, "&Uuml;"], [0, "&Yacute;"], [0, "&THORN;"], [0, "&szlig;"], [0, "&agrave;"], [0, "&aacute;"], [0, "&acirc;"], [0, "&atilde;"], [0, "&auml;"], [0, "&aring;"], [0, "&aelig;"], [0, "&ccedil;"], [0, "&egrave;"], [0, "&eacute;"], [0, "&ecirc;"], [0, "&euml;"], [0, "&igrave;"], [0, "&iacute;"], [0, "&icirc;"], [0, "&iuml;"], [0, "&eth;"], [0, "&ntilde;"], [0, "&ograve;"], [0, "&oacute;"], [0, "&ocirc;"], [0, "&otilde;"], [0, "&ouml;"], [0, "&div;"], [0, "&oslash;"], [0, "&ugrave;"], [0, "&uacute;"], [0, "&ucirc;"], [0, "&uuml;"], [0, "&yacute;"], [0, "&thorn;"], [0, "&yuml;"], [0, "&Amacr;"], [0, "&amacr;"], [0, "&Abreve;"], [0, "&abreve;"], [0, "&Aogon;"], [0, "&aogon;"], [0, "&Cacute;"], [0, "&cacute;"], [0, "&Ccirc;"], [0, "&ccirc;"], [0, "&Cdot;"], [0, "&cdot;"], [0, "&Ccaron;"], [0, "&ccaron;"], [0, "&Dcaron;"], [0, "&dcaron;"], [0, "&Dstrok;"], [0, "&dstrok;"], [0, "&Emacr;"], [0, "&emacr;"], [2, "&Edot;"], [0, "&edot;"], [0, "&Eogon;"], [0, "&eogon;"], [0, "&Ecaron;"], [0, "&ecaron;"], [0, "&Gcirc;"], [0, "&gcirc;"], [0, "&Gbreve;"], [0, "&gbreve;"], [0, "&Gdot;"], [0, "&gdot;"], [0, "&Gcedil;"], [1, "&Hcirc;"], [0, "&hcirc;"], [0, "&Hstrok;"], [0, "&hstrok;"], [0, "&Itilde;"], [0, "&itilde;"], [0, "&Imacr;"], [0, "&imacr;"], [2, "&Iogon;"], [0, "&iogon;"], [0, "&Idot;"], [0, "&imath;"], [0, "&IJlig;"], [0, "&ijlig;"], [0, "&Jcirc;"], [0, "&jcirc;"], [0, "&Kcedil;"], [0, "&kcedil;"], [0, "&kgreen;"], [0, "&Lacute;"], [0, "&lacute;"], [0, "&Lcedil;"], [0, "&lcedil;"], [0, "&Lcaron;"], [0, "&lcaron;"], [0, "&Lmidot;"], [0, "&lmidot;"], [0, "&Lstrok;"], [0, "&lstrok;"], [0, "&Nacute;"], [0, "&nacute;"], [0, "&Ncedil;"], [0, "&ncedil;"], [0, "&Ncaron;"], [0, "&ncaron;"], [0, "&napos;"], [0, "&ENG;"], [0, "&eng;"], [0, "&Omacr;"], [0, "&omacr;"], [2, "&Odblac;"], [0, "&odblac;"], [0, "&OElig;"], [0, "&oelig;"], [0, "&Racute;"], [0, "&racute;"], [0, "&Rcedil;"], [0, "&rcedil;"], [0, "&Rcaron;"], [0, "&rcaron;"], [0, "&Sacute;"], [0, "&sacute;"], [0, "&Scirc;"], [0, "&scirc;"], [0, "&Scedil;"], [0, "&scedil;"], [0, "&Scaron;"], [0, "&scaron;"], [0, "&Tcedil;"], [0, "&tcedil;"], [0, "&Tcaron;"], [0, "&tcaron;"], [0, "&Tstrok;"], [0, "&tstrok;"], [0, "&Utilde;"], [0, "&utilde;"], [0, "&Umacr;"], [0, "&umacr;"], [0, "&Ubreve;"], [0, "&ubreve;"], [0, "&Uring;"], [0, "&uring;"], [0, "&Udblac;"], [0, "&udblac;"], [0, "&Uogon;"], [0, "&uogon;"], [0, "&Wcirc;"], [0, "&wcirc;"], [0, "&Ycirc;"], [0, "&ycirc;"], [0, "&Yuml;"], [0, "&Zacute;"], [0, "&zacute;"], [0, "&Zdot;"], [0, "&zdot;"], [0, "&Zcaron;"], [0, "&zcaron;"], [19, "&fnof;"], [34, "&imped;"], [63, "&gacute;"], [65, "&jmath;"], [142, "&circ;"], [0, "&caron;"], [16, "&breve;"], [0, "&DiacriticalDot;"], [0, "&ring;"], [0, "&ogon;"], [0, "&DiacriticalTilde;"], [0, "&dblac;"], [51, "&DownBreve;"], [127, "&Alpha;"], [0, "&Beta;"], [0, "&Gamma;"], [0, "&Delta;"], [0, "&Epsilon;"], [0, "&Zeta;"], [0, "&Eta;"], [0, "&Theta;"], [0, "&Iota;"], [0, "&Kappa;"], [0, "&Lambda;"], [0, "&Mu;"], [0, "&Nu;"], [0, "&Xi;"], [0, "&Omicron;"], [0, "&Pi;"], [0, "&Rho;"], [1, "&Sigma;"], [0, "&Tau;"], [0, "&Upsilon;"], [0, "&Phi;"], [0, "&Chi;"], [0, "&Psi;"], [0, "&ohm;"], [7, "&alpha;"], [0, "&beta;"], [0, "&gamma;"], [0, "&delta;"], [0, "&epsi;"], [0, "&zeta;"], [0, "&eta;"], [0, "&theta;"], [0, "&iota;"], [0, "&kappa;"], [0, "&lambda;"], [0, "&mu;"], [0, "&nu;"], [0, "&xi;"], [0, "&omicron;"], [0, "&pi;"], [0, "&rho;"], [0, "&sigmaf;"], [0, "&sigma;"], [0, "&tau;"], [0, "&upsi;"], [0, "&phi;"], [0, "&chi;"], [0, "&psi;"], [0, "&omega;"], [7, "&thetasym;"], [0, "&Upsi;"], [2, "&phiv;"], [0, "&piv;"], [5, "&Gammad;"], [0, "&digamma;"], [18, "&kappav;"], [0, "&rhov;"], [3, "&epsiv;"], [0, "&backepsilon;"], [10, "&IOcy;"], [0, "&DJcy;"], [0, "&GJcy;"], [0, "&Jukcy;"], [0, "&DScy;"], [0, "&Iukcy;"], [0, "&YIcy;"], [0, "&Jsercy;"], [0, "&LJcy;"], [0, "&NJcy;"], [0, "&TSHcy;"], [0, "&KJcy;"], [1, "&Ubrcy;"], [0, "&DZcy;"], [0, "&Acy;"], [0, "&Bcy;"], [0, "&Vcy;"], [0, "&Gcy;"], [0, "&Dcy;"], [0, "&IEcy;"], [0, "&ZHcy;"], [0, "&Zcy;"], [0, "&Icy;"], [0, "&Jcy;"], [0, "&Kcy;"], [0, "&Lcy;"], [0, "&Mcy;"], [0, "&Ncy;"], [0, "&Ocy;"], [0, "&Pcy;"], [0, "&Rcy;"], [0, "&Scy;"], [0, "&Tcy;"], [0, "&Ucy;"], [0, "&Fcy;"], [0, "&KHcy;"], [0, "&TScy;"], [0, "&CHcy;"], [0, "&SHcy;"], [0, "&SHCHcy;"], [0, "&HARDcy;"], [0, "&Ycy;"], [0, "&SOFTcy;"], [0, "&Ecy;"], [0, "&YUcy;"], [0, "&YAcy;"], [0, "&acy;"], [0, "&bcy;"], [0, "&vcy;"], [0, "&gcy;"], [0, "&dcy;"], [0, "&iecy;"], [0, "&zhcy;"], [0, "&zcy;"], [0, "&icy;"], [0, "&jcy;"], [0, "&kcy;"], [0, "&lcy;"], [0, "&mcy;"], [0, "&ncy;"], [0, "&ocy;"], [0, "&pcy;"], [0, "&rcy;"], [0, "&scy;"], [0, "&tcy;"], [0, "&ucy;"], [0, "&fcy;"], [0, "&khcy;"], [0, "&tscy;"], [0, "&chcy;"], [0, "&shcy;"], [0, "&shchcy;"], [0, "&hardcy;"], [0, "&ycy;"], [0, "&softcy;"], [0, "&ecy;"], [0, "&yucy;"], [0, "&yacy;"], [1, "&iocy;"], [0, "&djcy;"], [0, "&gjcy;"], [0, "&jukcy;"], [0, "&dscy;"], [0, "&iukcy;"], [0, "&yicy;"], [0, "&jsercy;"], [0, "&ljcy;"], [0, "&njcy;"], [0, "&tshcy;"], [0, "&kjcy;"], [1, "&ubrcy;"], [0, "&dzcy;"], [7074, "&ensp;"], [0, "&emsp;"], [0, "&emsp13;"], [0, "&emsp14;"], [1, "&numsp;"], [0, "&puncsp;"], [0, "&ThinSpace;"], [0, "&hairsp;"], [0, "&NegativeMediumSpace;"], [0, "&zwnj;"], [0, "&zwj;"], [0, "&lrm;"], [0, "&rlm;"], [0, "&dash;"], [2, "&ndash;"], [0, "&mdash;"], [0, "&horbar;"], [0, "&Verbar;"], [1, "&lsquo;"], [0, "&CloseCurlyQuote;"], [0, "&lsquor;"], [1, "&ldquo;"], [0, "&CloseCurlyDoubleQuote;"], [0, "&bdquo;"], [1, "&dagger;"], [0, "&Dagger;"], [0, "&bull;"], [2, "&nldr;"], [0, "&hellip;"], [9, "&permil;"], [0, "&pertenk;"], [0, "&prime;"], [0, "&Prime;"], [0, "&tprime;"], [0, "&backprime;"], [3, "&lsaquo;"], [0, "&rsaquo;"], [3, "&oline;"], [2, "&caret;"], [1, "&hybull;"], [0, "&frasl;"], [10, "&bsemi;"], [7, "&qprime;"], [7, {
  v: "&MediumSpace;",
  n: 8202,
  o: "&ThickSpace;"
}], [0, "&NoBreak;"], [0, "&af;"], [0, "&InvisibleTimes;"], [0, "&ic;"], [72, "&euro;"], [46, "&tdot;"], [0, "&DotDot;"], [37, "&complexes;"], [2, "&incare;"], [4, "&gscr;"], [0, "&hamilt;"], [0, "&Hfr;"], [0, "&Hopf;"], [0, "&planckh;"], [0, "&hbar;"], [0, "&imagline;"], [0, "&Ifr;"], [0, "&lagran;"], [0, "&ell;"], [1, "&naturals;"], [0, "&numero;"], [0, "&copysr;"], [0, "&weierp;"], [0, "&Popf;"], [0, "&Qopf;"], [0, "&realine;"], [0, "&real;"], [0, "&reals;"], [0, "&rx;"], [3, "&trade;"], [1, "&integers;"], [2, "&mho;"], [0, "&zeetrf;"], [0, "&iiota;"], [2, "&bernou;"], [0, "&Cayleys;"], [1, "&escr;"], [0, "&Escr;"], [0, "&Fouriertrf;"], [1, "&Mellintrf;"], [0, "&order;"], [0, "&alefsym;"], [0, "&beth;"], [0, "&gimel;"], [0, "&daleth;"], [12, "&CapitalDifferentialD;"], [0, "&dd;"], [0, "&ee;"], [0, "&ii;"], [10, "&frac13;"], [0, "&frac23;"], [0, "&frac15;"], [0, "&frac25;"], [0, "&frac35;"], [0, "&frac45;"], [0, "&frac16;"], [0, "&frac56;"], [0, "&frac18;"], [0, "&frac38;"], [0, "&frac58;"], [0, "&frac78;"], [49, "&larr;"], [0, "&ShortUpArrow;"], [0, "&rarr;"], [0, "&darr;"], [0, "&harr;"], [0, "&updownarrow;"], [0, "&nwarr;"], [0, "&nearr;"], [0, "&LowerRightArrow;"], [0, "&LowerLeftArrow;"], [0, "&nlarr;"], [0, "&nrarr;"], [1, {
  v: "&rarrw;",
  n: 824,
  o: "&nrarrw;"
}], [0, "&Larr;"], [0, "&Uarr;"], [0, "&Rarr;"], [0, "&Darr;"], [0, "&larrtl;"], [0, "&rarrtl;"], [0, "&LeftTeeArrow;"], [0, "&mapstoup;"], [0, "&map;"], [0, "&DownTeeArrow;"], [1, "&hookleftarrow;"], [0, "&hookrightarrow;"], [0, "&larrlp;"], [0, "&looparrowright;"], [0, "&harrw;"], [0, "&nharr;"], [1, "&lsh;"], [0, "&rsh;"], [0, "&ldsh;"], [0, "&rdsh;"], [1, "&crarr;"], [0, "&cularr;"], [0, "&curarr;"], [2, "&circlearrowleft;"], [0, "&circlearrowright;"], [0, "&leftharpoonup;"], [0, "&DownLeftVector;"], [0, "&RightUpVector;"], [0, "&LeftUpVector;"], [0, "&rharu;"], [0, "&DownRightVector;"], [0, "&dharr;"], [0, "&dharl;"], [0, "&RightArrowLeftArrow;"], [0, "&udarr;"], [0, "&LeftArrowRightArrow;"], [0, "&leftleftarrows;"], [0, "&upuparrows;"], [0, "&rightrightarrows;"], [0, "&ddarr;"], [0, "&leftrightharpoons;"], [0, "&Equilibrium;"], [0, "&nlArr;"], [0, "&nhArr;"], [0, "&nrArr;"], [0, "&DoubleLeftArrow;"], [0, "&DoubleUpArrow;"], [0, "&DoubleRightArrow;"], [0, "&dArr;"], [0, "&DoubleLeftRightArrow;"], [0, "&DoubleUpDownArrow;"], [0, "&nwArr;"], [0, "&neArr;"], [0, "&seArr;"], [0, "&swArr;"], [0, "&lAarr;"], [0, "&rAarr;"], [1, "&zigrarr;"], [6, "&larrb;"], [0, "&rarrb;"], [15, "&DownArrowUpArrow;"], [7, "&loarr;"], [0, "&roarr;"], [0, "&hoarr;"], [0, "&forall;"], [0, "&comp;"], [0, {
  v: "&part;",
  n: 824,
  o: "&npart;"
}], [0, "&exist;"], [0, "&nexist;"], [0, "&empty;"], [1, "&Del;"], [0, "&Element;"], [0, "&NotElement;"], [1, "&ni;"], [0, "&notni;"], [2, "&prod;"], [0, "&coprod;"], [0, "&sum;"], [0, "&minus;"], [0, "&MinusPlus;"], [0, "&dotplus;"], [1, "&Backslash;"], [0, "&lowast;"], [0, "&compfn;"], [1, "&radic;"], [2, "&prop;"], [0, "&infin;"], [0, "&angrt;"], [0, {
  v: "&ang;",
  n: 8402,
  o: "&nang;"
}], [0, "&angmsd;"], [0, "&angsph;"], [0, "&mid;"], [0, "&nmid;"], [0, "&DoubleVerticalBar;"], [0, "&NotDoubleVerticalBar;"], [0, "&and;"], [0, "&or;"], [0, {
  v: "&cap;",
  n: 65024,
  o: "&caps;"
}], [0, {
  v: "&cup;",
  n: 65024,
  o: "&cups;"
}], [0, "&int;"], [0, "&Int;"], [0, "&iiint;"], [0, "&conint;"], [0, "&Conint;"], [0, "&Cconint;"], [0, "&cwint;"], [0, "&ClockwiseContourIntegral;"], [0, "&awconint;"], [0, "&there4;"], [0, "&becaus;"], [0, "&ratio;"], [0, "&Colon;"], [0, "&dotminus;"], [1, "&mDDot;"], [0, "&homtht;"], [0, {
  v: "&sim;",
  n: 8402,
  o: "&nvsim;"
}], [0, {
  v: "&backsim;",
  n: 817,
  o: "&race;"
}], [0, {
  v: "&ac;",
  n: 819,
  o: "&acE;"
}], [0, "&acd;"], [0, "&VerticalTilde;"], [0, "&NotTilde;"], [0, {
  v: "&eqsim;",
  n: 824,
  o: "&nesim;"
}], [0, "&sime;"], [0, "&NotTildeEqual;"], [0, "&cong;"], [0, "&simne;"], [0, "&ncong;"], [0, "&ap;"], [0, "&nap;"], [0, "&ape;"], [0, {
  v: "&apid;",
  n: 824,
  o: "&napid;"
}], [0, "&backcong;"], [0, {
  v: "&asympeq;",
  n: 8402,
  o: "&nvap;"
}], [0, {
  v: "&bump;",
  n: 824,
  o: "&nbump;"
}], [0, {
  v: "&bumpe;",
  n: 824,
  o: "&nbumpe;"
}], [0, {
  v: "&doteq;",
  n: 824,
  o: "&nedot;"
}], [0, "&doteqdot;"], [0, "&efDot;"], [0, "&erDot;"], [0, "&Assign;"], [0, "&ecolon;"], [0, "&ecir;"], [0, "&circeq;"], [1, "&wedgeq;"], [0, "&veeeq;"], [1, "&triangleq;"], [2, "&equest;"], [0, "&ne;"], [0, {
  v: "&Congruent;",
  n: 8421,
  o: "&bnequiv;"
}], [0, "&nequiv;"], [1, {
  v: "&le;",
  n: 8402,
  o: "&nvle;"
}], [0, {
  v: "&ge;",
  n: 8402,
  o: "&nvge;"
}], [0, {
  v: "&lE;",
  n: 824,
  o: "&nlE;"
}], [0, {
  v: "&gE;",
  n: 824,
  o: "&ngE;"
}], [0, {
  v: "&lnE;",
  n: 65024,
  o: "&lvertneqq;"
}], [0, {
  v: "&gnE;",
  n: 65024,
  o: "&gvertneqq;"
}], [0, {
  v: "&ll;",
  n: new Map( /* #__PURE__ */restoreDiff([[824, "&nLtv;"], [7577, "&nLt;"]]))
}], [0, {
  v: "&gg;",
  n: new Map( /* #__PURE__ */restoreDiff([[824, "&nGtv;"], [7577, "&nGt;"]]))
}], [0, "&between;"], [0, "&NotCupCap;"], [0, "&nless;"], [0, "&ngt;"], [0, "&nle;"], [0, "&nge;"], [0, "&lesssim;"], [0, "&GreaterTilde;"], [0, "&nlsim;"], [0, "&ngsim;"], [0, "&LessGreater;"], [0, "&gl;"], [0, "&NotLessGreater;"], [0, "&NotGreaterLess;"], [0, "&pr;"], [0, "&sc;"], [0, "&prcue;"], [0, "&sccue;"], [0, "&PrecedesTilde;"], [0, {
  v: "&scsim;",
  n: 824,
  o: "&NotSucceedsTilde;"
}], [0, "&NotPrecedes;"], [0, "&NotSucceeds;"], [0, {
  v: "&sub;",
  n: 8402,
  o: "&NotSubset;"
}], [0, {
  v: "&sup;",
  n: 8402,
  o: "&NotSuperset;"
}], [0, "&nsub;"], [0, "&nsup;"], [0, "&sube;"], [0, "&supe;"], [0, "&NotSubsetEqual;"], [0, "&NotSupersetEqual;"], [0, {
  v: "&subne;",
  n: 65024,
  o: "&varsubsetneq;"
}], [0, {
  v: "&supne;",
  n: 65024,
  o: "&varsupsetneq;"
}], [1, "&cupdot;"], [0, "&UnionPlus;"], [0, {
  v: "&sqsub;",
  n: 824,
  o: "&NotSquareSubset;"
}], [0, {
  v: "&sqsup;",
  n: 824,
  o: "&NotSquareSuperset;"
}], [0, "&sqsube;"], [0, "&sqsupe;"], [0, {
  v: "&sqcap;",
  n: 65024,
  o: "&sqcaps;"
}], [0, {
  v: "&sqcup;",
  n: 65024,
  o: "&sqcups;"
}], [0, "&CirclePlus;"], [0, "&CircleMinus;"], [0, "&CircleTimes;"], [0, "&osol;"], [0, "&CircleDot;"], [0, "&circledcirc;"], [0, "&circledast;"], [1, "&circleddash;"], [0, "&boxplus;"], [0, "&boxminus;"], [0, "&boxtimes;"], [0, "&dotsquare;"], [0, "&RightTee;"], [0, "&dashv;"], [0, "&DownTee;"], [0, "&bot;"], [1, "&models;"], [0, "&DoubleRightTee;"], [0, "&Vdash;"], [0, "&Vvdash;"], [0, "&VDash;"], [0, "&nvdash;"], [0, "&nvDash;"], [0, "&nVdash;"], [0, "&nVDash;"], [0, "&prurel;"], [1, "&LeftTriangle;"], [0, "&RightTriangle;"], [0, {
  v: "&LeftTriangleEqual;",
  n: 8402,
  o: "&nvltrie;"
}], [0, {
  v: "&RightTriangleEqual;",
  n: 8402,
  o: "&nvrtrie;"
}], [0, "&origof;"], [0, "&imof;"], [0, "&multimap;"], [0, "&hercon;"], [0, "&intcal;"], [0, "&veebar;"], [1, "&barvee;"], [0, "&angrtvb;"], [0, "&lrtri;"], [0, "&bigwedge;"], [0, "&bigvee;"], [0, "&bigcap;"], [0, "&bigcup;"], [0, "&diam;"], [0, "&sdot;"], [0, "&sstarf;"], [0, "&divideontimes;"], [0, "&bowtie;"], [0, "&ltimes;"], [0, "&rtimes;"], [0, "&leftthreetimes;"], [0, "&rightthreetimes;"], [0, "&backsimeq;"], [0, "&curlyvee;"], [0, "&curlywedge;"], [0, "&Sub;"], [0, "&Sup;"], [0, "&Cap;"], [0, "&Cup;"], [0, "&fork;"], [0, "&epar;"], [0, "&lessdot;"], [0, "&gtdot;"], [0, {
  v: "&Ll;",
  n: 824,
  o: "&nLl;"
}], [0, {
  v: "&Gg;",
  n: 824,
  o: "&nGg;"
}], [0, {
  v: "&leg;",
  n: 65024,
  o: "&lesg;"
}], [0, {
  v: "&gel;",
  n: 65024,
  o: "&gesl;"
}], [2, "&cuepr;"], [0, "&cuesc;"], [0, "&NotPrecedesSlantEqual;"], [0, "&NotSucceedsSlantEqual;"], [0, "&NotSquareSubsetEqual;"], [0, "&NotSquareSupersetEqual;"], [2, "&lnsim;"], [0, "&gnsim;"], [0, "&precnsim;"], [0, "&scnsim;"], [0, "&nltri;"], [0, "&NotRightTriangle;"], [0, "&nltrie;"], [0, "&NotRightTriangleEqual;"], [0, "&vellip;"], [0, "&ctdot;"], [0, "&utdot;"], [0, "&dtdot;"], [0, "&disin;"], [0, "&isinsv;"], [0, "&isins;"], [0, {
  v: "&isindot;",
  n: 824,
  o: "&notindot;"
}], [0, "&notinvc;"], [0, "&notinvb;"], [1, {
  v: "&isinE;",
  n: 824,
  o: "&notinE;"
}], [0, "&nisd;"], [0, "&xnis;"], [0, "&nis;"], [0, "&notnivc;"], [0, "&notnivb;"], [6, "&barwed;"], [0, "&Barwed;"], [1, "&lceil;"], [0, "&rceil;"], [0, "&LeftFloor;"], [0, "&rfloor;"], [0, "&drcrop;"], [0, "&dlcrop;"], [0, "&urcrop;"], [0, "&ulcrop;"], [0, "&bnot;"], [1, "&profline;"], [0, "&profsurf;"], [1, "&telrec;"], [0, "&target;"], [5, "&ulcorn;"], [0, "&urcorn;"], [0, "&dlcorn;"], [0, "&drcorn;"], [2, "&frown;"], [0, "&smile;"], [9, "&cylcty;"], [0, "&profalar;"], [7, "&topbot;"], [6, "&ovbar;"], [1, "&solbar;"], [60, "&angzarr;"], [51, "&lmoustache;"], [0, "&rmoustache;"], [2, "&OverBracket;"], [0, "&bbrk;"], [0, "&bbrktbrk;"], [37, "&OverParenthesis;"], [0, "&UnderParenthesis;"], [0, "&OverBrace;"], [0, "&UnderBrace;"], [2, "&trpezium;"], [4, "&elinters;"], [59, "&blank;"], [164, "&circledS;"], [55, "&boxh;"], [1, "&boxv;"], [9, "&boxdr;"], [3, "&boxdl;"], [3, "&boxur;"], [3, "&boxul;"], [3, "&boxvr;"], [7, "&boxvl;"], [7, "&boxhd;"], [7, "&boxhu;"], [7, "&boxvh;"], [19, "&boxH;"], [0, "&boxV;"], [0, "&boxdR;"], [0, "&boxDr;"], [0, "&boxDR;"], [0, "&boxdL;"], [0, "&boxDl;"], [0, "&boxDL;"], [0, "&boxuR;"], [0, "&boxUr;"], [0, "&boxUR;"], [0, "&boxuL;"], [0, "&boxUl;"], [0, "&boxUL;"], [0, "&boxvR;"], [0, "&boxVr;"], [0, "&boxVR;"], [0, "&boxvL;"], [0, "&boxVl;"], [0, "&boxVL;"], [0, "&boxHd;"], [0, "&boxhD;"], [0, "&boxHD;"], [0, "&boxHu;"], [0, "&boxhU;"], [0, "&boxHU;"], [0, "&boxvH;"], [0, "&boxVh;"], [0, "&boxVH;"], [19, "&uhblk;"], [3, "&lhblk;"], [3, "&block;"], [8, "&blk14;"], [0, "&blk12;"], [0, "&blk34;"], [13, "&square;"], [8, "&blacksquare;"], [0, "&EmptyVerySmallSquare;"], [1, "&rect;"], [0, "&marker;"], [2, "&fltns;"], [1, "&bigtriangleup;"], [0, "&blacktriangle;"], [0, "&triangle;"], [2, "&blacktriangleright;"], [0, "&rtri;"], [3, "&bigtriangledown;"], [0, "&blacktriangledown;"], [0, "&dtri;"], [2, "&blacktriangleleft;"], [0, "&ltri;"], [6, "&loz;"], [0, "&cir;"], [32, "&tridot;"], [2, "&bigcirc;"], [8, "&ultri;"], [0, "&urtri;"], [0, "&lltri;"], [0, "&EmptySmallSquare;"], [0, "&FilledSmallSquare;"], [8, "&bigstar;"], [0, "&star;"], [7, "&phone;"], [49, "&female;"], [1, "&male;"], [29, "&spades;"], [2, "&clubs;"], [1, "&hearts;"], [0, "&diamondsuit;"], [3, "&sung;"], [2, "&flat;"], [0, "&natural;"], [0, "&sharp;"], [163, "&check;"], [3, "&cross;"], [8, "&malt;"], [21, "&sext;"], [33, "&VerticalSeparator;"], [25, "&lbbrk;"], [0, "&rbbrk;"], [84, "&bsolhsub;"], [0, "&suphsol;"], [28, "&LeftDoubleBracket;"], [0, "&RightDoubleBracket;"], [0, "&lang;"], [0, "&rang;"], [0, "&Lang;"], [0, "&Rang;"], [0, "&loang;"], [0, "&roang;"], [7, "&longleftarrow;"], [0, "&longrightarrow;"], [0, "&longleftrightarrow;"], [0, "&DoubleLongLeftArrow;"], [0, "&DoubleLongRightArrow;"], [0, "&DoubleLongLeftRightArrow;"], [1, "&longmapsto;"], [2, "&dzigrarr;"], [258, "&nvlArr;"], [0, "&nvrArr;"], [0, "&nvHarr;"], [0, "&Map;"], [6, "&lbarr;"], [0, "&bkarow;"], [0, "&lBarr;"], [0, "&dbkarow;"], [0, "&drbkarow;"], [0, "&DDotrahd;"], [0, "&UpArrowBar;"], [0, "&DownArrowBar;"], [2, "&Rarrtl;"], [2, "&latail;"], [0, "&ratail;"], [0, "&lAtail;"], [0, "&rAtail;"], [0, "&larrfs;"], [0, "&rarrfs;"], [0, "&larrbfs;"], [0, "&rarrbfs;"], [2, "&nwarhk;"], [0, "&nearhk;"], [0, "&hksearow;"], [0, "&hkswarow;"], [0, "&nwnear;"], [0, "&nesear;"], [0, "&seswar;"], [0, "&swnwar;"], [8, {
  v: "&rarrc;",
  n: 824,
  o: "&nrarrc;"
}], [1, "&cudarrr;"], [0, "&ldca;"], [0, "&rdca;"], [0, "&cudarrl;"], [0, "&larrpl;"], [2, "&curarrm;"], [0, "&cularrp;"], [7, "&rarrpl;"], [2, "&harrcir;"], [0, "&Uarrocir;"], [0, "&lurdshar;"], [0, "&ldrushar;"], [2, "&LeftRightVector;"], [0, "&RightUpDownVector;"], [0, "&DownLeftRightVector;"], [0, "&LeftUpDownVector;"], [0, "&LeftVectorBar;"], [0, "&RightVectorBar;"], [0, "&RightUpVectorBar;"], [0, "&RightDownVectorBar;"], [0, "&DownLeftVectorBar;"], [0, "&DownRightVectorBar;"], [0, "&LeftUpVectorBar;"], [0, "&LeftDownVectorBar;"], [0, "&LeftTeeVector;"], [0, "&RightTeeVector;"], [0, "&RightUpTeeVector;"], [0, "&RightDownTeeVector;"], [0, "&DownLeftTeeVector;"], [0, "&DownRightTeeVector;"], [0, "&LeftUpTeeVector;"], [0, "&LeftDownTeeVector;"], [0, "&lHar;"], [0, "&uHar;"], [0, "&rHar;"], [0, "&dHar;"], [0, "&luruhar;"], [0, "&ldrdhar;"], [0, "&ruluhar;"], [0, "&rdldhar;"], [0, "&lharul;"], [0, "&llhard;"], [0, "&rharul;"], [0, "&lrhard;"], [0, "&udhar;"], [0, "&duhar;"], [0, "&RoundImplies;"], [0, "&erarr;"], [0, "&simrarr;"], [0, "&larrsim;"], [0, "&rarrsim;"], [0, "&rarrap;"], [0, "&ltlarr;"], [1, "&gtrarr;"], [0, "&subrarr;"], [1, "&suplarr;"], [0, "&lfisht;"], [0, "&rfisht;"], [0, "&ufisht;"], [0, "&dfisht;"], [5, "&lopar;"], [0, "&ropar;"], [4, "&lbrke;"], [0, "&rbrke;"], [0, "&lbrkslu;"], [0, "&rbrksld;"], [0, "&lbrksld;"], [0, "&rbrkslu;"], [0, "&langd;"], [0, "&rangd;"], [0, "&lparlt;"], [0, "&rpargt;"], [0, "&gtlPar;"], [0, "&ltrPar;"], [3, "&vzigzag;"], [1, "&vangrt;"], [0, "&angrtvbd;"], [6, "&ange;"], [0, "&range;"], [0, "&dwangle;"], [0, "&uwangle;"], [0, "&angmsdaa;"], [0, "&angmsdab;"], [0, "&angmsdac;"], [0, "&angmsdad;"], [0, "&angmsdae;"], [0, "&angmsdaf;"], [0, "&angmsdag;"], [0, "&angmsdah;"], [0, "&bemptyv;"], [0, "&demptyv;"], [0, "&cemptyv;"], [0, "&raemptyv;"], [0, "&laemptyv;"], [0, "&ohbar;"], [0, "&omid;"], [0, "&opar;"], [1, "&operp;"], [1, "&olcross;"], [0, "&odsold;"], [1, "&olcir;"], [0, "&ofcir;"], [0, "&olt;"], [0, "&ogt;"], [0, "&cirscir;"], [0, "&cirE;"], [0, "&solb;"], [0, "&bsolb;"], [3, "&boxbox;"], [3, "&trisb;"], [0, "&rtriltri;"], [0, {
  v: "&LeftTriangleBar;",
  n: 824,
  o: "&NotLeftTriangleBar;"
}], [0, {
  v: "&RightTriangleBar;",
  n: 824,
  o: "&NotRightTriangleBar;"
}], [11, "&iinfin;"], [0, "&infintie;"], [0, "&nvinfin;"], [4, "&eparsl;"], [0, "&smeparsl;"], [0, "&eqvparsl;"], [5, "&blacklozenge;"], [8, "&RuleDelayed;"], [1, "&dsol;"], [9, "&bigodot;"], [0, "&bigoplus;"], [0, "&bigotimes;"], [1, "&biguplus;"], [1, "&bigsqcup;"], [5, "&iiiint;"], [0, "&fpartint;"], [2, "&cirfnint;"], [0, "&awint;"], [0, "&rppolint;"], [0, "&scpolint;"], [0, "&npolint;"], [0, "&pointint;"], [0, "&quatint;"], [0, "&intlarhk;"], [10, "&pluscir;"], [0, "&plusacir;"], [0, "&simplus;"], [0, "&plusdu;"], [0, "&plussim;"], [0, "&plustwo;"], [1, "&mcomma;"], [0, "&minusdu;"], [2, "&loplus;"], [0, "&roplus;"], [0, "&Cross;"], [0, "&timesd;"], [0, "&timesbar;"], [1, "&smashp;"], [0, "&lotimes;"], [0, "&rotimes;"], [0, "&otimesas;"], [0, "&Otimes;"], [0, "&odiv;"], [0, "&triplus;"], [0, "&triminus;"], [0, "&tritime;"], [0, "&intprod;"], [2, "&amalg;"], [0, "&capdot;"], [1, "&ncup;"], [0, "&ncap;"], [0, "&capand;"], [0, "&cupor;"], [0, "&cupcap;"], [0, "&capcup;"], [0, "&cupbrcap;"], [0, "&capbrcup;"], [0, "&cupcup;"], [0, "&capcap;"], [0, "&ccups;"], [0, "&ccaps;"], [2, "&ccupssm;"], [2, "&And;"], [0, "&Or;"], [0, "&andand;"], [0, "&oror;"], [0, "&orslope;"], [0, "&andslope;"], [1, "&andv;"], [0, "&orv;"], [0, "&andd;"], [0, "&ord;"], [1, "&wedbar;"], [6, "&sdote;"], [3, "&simdot;"], [2, {
  v: "&congdot;",
  n: 824,
  o: "&ncongdot;"
}], [0, "&easter;"], [0, "&apacir;"], [0, {
  v: "&apE;",
  n: 824,
  o: "&napE;"
}], [0, "&eplus;"], [0, "&pluse;"], [0, "&Esim;"], [0, "&Colone;"], [0, "&Equal;"], [1, "&ddotseq;"], [0, "&equivDD;"], [0, "&ltcir;"], [0, "&gtcir;"], [0, "&ltquest;"], [0, "&gtquest;"], [0, {
  v: "&leqslant;",
  n: 824,
  o: "&nleqslant;"
}], [0, {
  v: "&geqslant;",
  n: 824,
  o: "&ngeqslant;"
}], [0, "&lesdot;"], [0, "&gesdot;"], [0, "&lesdoto;"], [0, "&gesdoto;"], [0, "&lesdotor;"], [0, "&gesdotol;"], [0, "&lap;"], [0, "&gap;"], [0, "&lne;"], [0, "&gne;"], [0, "&lnap;"], [0, "&gnap;"], [0, "&lEg;"], [0, "&gEl;"], [0, "&lsime;"], [0, "&gsime;"], [0, "&lsimg;"], [0, "&gsiml;"], [0, "&lgE;"], [0, "&glE;"], [0, "&lesges;"], [0, "&gesles;"], [0, "&els;"], [0, "&egs;"], [0, "&elsdot;"], [0, "&egsdot;"], [0, "&el;"], [0, "&eg;"], [2, "&siml;"], [0, "&simg;"], [0, "&simlE;"], [0, "&simgE;"], [0, {
  v: "&LessLess;",
  n: 824,
  o: "&NotNestedLessLess;"
}], [0, {
  v: "&GreaterGreater;",
  n: 824,
  o: "&NotNestedGreaterGreater;"
}], [1, "&glj;"], [0, "&gla;"], [0, "&ltcc;"], [0, "&gtcc;"], [0, "&lescc;"], [0, "&gescc;"], [0, "&smt;"], [0, "&lat;"], [0, {
  v: "&smte;",
  n: 65024,
  o: "&smtes;"
}], [0, {
  v: "&late;",
  n: 65024,
  o: "&lates;"
}], [0, "&bumpE;"], [0, {
  v: "&PrecedesEqual;",
  n: 824,
  o: "&NotPrecedesEqual;"
}], [0, {
  v: "&sce;",
  n: 824,
  o: "&NotSucceedsEqual;"
}], [2, "&prE;"], [0, "&scE;"], [0, "&precneqq;"], [0, "&scnE;"], [0, "&prap;"], [0, "&scap;"], [0, "&precnapprox;"], [0, "&scnap;"], [0, "&Pr;"], [0, "&Sc;"], [0, "&subdot;"], [0, "&supdot;"], [0, "&subplus;"], [0, "&supplus;"], [0, "&submult;"], [0, "&supmult;"], [0, "&subedot;"], [0, "&supedot;"], [0, {
  v: "&subE;",
  n: 824,
  o: "&nsubE;"
}], [0, {
  v: "&supE;",
  n: 824,
  o: "&nsupE;"
}], [0, "&subsim;"], [0, "&supsim;"], [2, {
  v: "&subnE;",
  n: 65024,
  o: "&varsubsetneqq;"
}], [0, {
  v: "&supnE;",
  n: 65024,
  o: "&varsupsetneqq;"
}], [2, "&csub;"], [0, "&csup;"], [0, "&csube;"], [0, "&csupe;"], [0, "&subsup;"], [0, "&supsub;"], [0, "&subsub;"], [0, "&supsup;"], [0, "&suphsub;"], [0, "&supdsub;"], [0, "&forkv;"], [0, "&topfork;"], [0, "&mlcp;"], [8, "&Dashv;"], [1, "&Vdashl;"], [0, "&Barv;"], [0, "&vBar;"], [0, "&vBarv;"], [1, "&Vbar;"], [0, "&Not;"], [0, "&bNot;"], [0, "&rnmid;"], [0, "&cirmid;"], [0, "&midcir;"], [0, "&topcir;"], [0, "&nhpar;"], [0, "&parsim;"], [9, {
  v: "&parsl;",
  n: 8421,
  o: "&nparsl;"
}], [44343, {
  n: new Map( /* #__PURE__ */restoreDiff([[56476, "&Ascr;"], [1, "&Cscr;"], [0, "&Dscr;"], [2, "&Gscr;"], [2, "&Jscr;"], [0, "&Kscr;"], [2, "&Nscr;"], [0, "&Oscr;"], [0, "&Pscr;"], [0, "&Qscr;"], [1, "&Sscr;"], [0, "&Tscr;"], [0, "&Uscr;"], [0, "&Vscr;"], [0, "&Wscr;"], [0, "&Xscr;"], [0, "&Yscr;"], [0, "&Zscr;"], [0, "&ascr;"], [0, "&bscr;"], [0, "&cscr;"], [0, "&dscr;"], [1, "&fscr;"], [1, "&hscr;"], [0, "&iscr;"], [0, "&jscr;"], [0, "&kscr;"], [0, "&lscr;"], [0, "&mscr;"], [0, "&nscr;"], [1, "&pscr;"], [0, "&qscr;"], [0, "&rscr;"], [0, "&sscr;"], [0, "&tscr;"], [0, "&uscr;"], [0, "&vscr;"], [0, "&wscr;"], [0, "&xscr;"], [0, "&yscr;"], [0, "&zscr;"], [52, "&Afr;"], [0, "&Bfr;"], [1, "&Dfr;"], [0, "&Efr;"], [0, "&Ffr;"], [0, "&Gfr;"], [2, "&Jfr;"], [0, "&Kfr;"], [0, "&Lfr;"], [0, "&Mfr;"], [0, "&Nfr;"], [0, "&Ofr;"], [0, "&Pfr;"], [0, "&Qfr;"], [1, "&Sfr;"], [0, "&Tfr;"], [0, "&Ufr;"], [0, "&Vfr;"], [0, "&Wfr;"], [0, "&Xfr;"], [0, "&Yfr;"], [1, "&afr;"], [0, "&bfr;"], [0, "&cfr;"], [0, "&dfr;"], [0, "&efr;"], [0, "&ffr;"], [0, "&gfr;"], [0, "&hfr;"], [0, "&ifr;"], [0, "&jfr;"], [0, "&kfr;"], [0, "&lfr;"], [0, "&mfr;"], [0, "&nfr;"], [0, "&ofr;"], [0, "&pfr;"], [0, "&qfr;"], [0, "&rfr;"], [0, "&sfr;"], [0, "&tfr;"], [0, "&ufr;"], [0, "&vfr;"], [0, "&wfr;"], [0, "&xfr;"], [0, "&yfr;"], [0, "&zfr;"], [0, "&Aopf;"], [0, "&Bopf;"], [1, "&Dopf;"], [0, "&Eopf;"], [0, "&Fopf;"], [0, "&Gopf;"], [1, "&Iopf;"], [0, "&Jopf;"], [0, "&Kopf;"], [0, "&Lopf;"], [0, "&Mopf;"], [1, "&Oopf;"], [3, "&Sopf;"], [0, "&Topf;"], [0, "&Uopf;"], [0, "&Vopf;"], [0, "&Wopf;"], [0, "&Xopf;"], [0, "&Yopf;"], [1, "&aopf;"], [0, "&bopf;"], [0, "&copf;"], [0, "&dopf;"], [0, "&eopf;"], [0, "&fopf;"], [0, "&gopf;"], [0, "&hopf;"], [0, "&iopf;"], [0, "&jopf;"], [0, "&kopf;"], [0, "&lopf;"], [0, "&mopf;"], [0, "&nopf;"], [0, "&oopf;"], [0, "&popf;"], [0, "&qopf;"], [0, "&ropf;"], [0, "&sopf;"], [0, "&topf;"], [0, "&uopf;"], [0, "&vopf;"], [0, "&wopf;"], [0, "&xopf;"], [0, "&yopf;"], [0, "&zopf;"]]))
}], [8906, "&fflig;"], [0, "&filig;"], [0, "&fllig;"], [0, "&ffilig;"], [0, "&ffllig;"]])));
// CONCATENATED MODULE: ./node_modules/entities/lib/esm/escape.js
var xmlReplacer = /["&'<>$\x80-\uFFFF]/g;
var xmlCodeMap = new Map([[34, "&quot;"], [38, "&amp;"], [39, "&apos;"], [60, "&lt;"], [62, "&gt;"]]); // For compatibility with node < 4, we wrap `codePointAt`

var getCodePoint = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
String.prototype.codePointAt != null ? function (str, index) {
  return str.codePointAt(index);
} : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
function (c, index) {
  return (c.charCodeAt(index) & 0xfc00) === 0xd800 ? (c.charCodeAt(index) - 0xd800) * 0x400 + c.charCodeAt(index + 1) - 0xdc00 + 0x10000 : c.charCodeAt(index);
};
/**
 * Encodes all non-ASCII characters, as well as characters not valid in XML
 * documents using XML entities.
 *
 * If a character has no equivalent entity, a
 * numeric hexadecimal reference (eg. `&#xfc;`) will be used.
 */

function encodeXML(str) {
  var ret = "";
  var lastIdx = 0;
  var match;

  while ((match = xmlReplacer.exec(str)) !== null) {
    var i = match.index;

    var _char = str.charCodeAt(i);

    var next = xmlCodeMap.get(_char);

    if (next !== undefined) {
      ret += str.substring(lastIdx, i) + next;
      lastIdx = i + 1;
    } else {
      ret += "".concat(str.substring(lastIdx, i), "&#x").concat(getCodePoint(str, i).toString(16), ";"); // Increase by 1 if we have a surrogate pair

      lastIdx = xmlReplacer.lastIndex += Number((_char & 0xfc00) === 0xd800);
    }
  }

  return ret + str.substr(lastIdx);
}
/**
 * Encodes all non-ASCII characters, as well as characters not valid in XML
 * documents using numeric hexadecimal reference (eg. `&#xfc;`).
 *
 * Have a look at `escapeUTF8` if you want a more concise output at the expense
 * of reduced transportability.
 *
 * @param data String to escape.
 */

var escape_escape = encodeXML;
/**
 * Creates a function that escapes all characters matched by the given regular
 * expression using the given map of characters to escape to their entities.
 *
 * @param regex Regular expression to match characters to escape.
 * @param map Map of characters to escape to their entities.
 *
 * @returns Function that escapes all characters matched by the given regular
 * expression using the given map of characters to escape to their entities.
 */

function getEscaper(regex, map) {
  return function escape(data) {
    var match;
    var lastIdx = 0;
    var result = "";

    while (match = regex.exec(data)) {
      if (lastIdx !== match.index) {
        result += data.substring(lastIdx, match.index);
      } // We know that this character will be in the map.


      result += map.get(match[0].charCodeAt(0)); // Every match will be of length 1

      lastIdx = match.index + 1;
    }

    return result + data.substring(lastIdx);
  };
}
/**
 * Encodes all characters not valid in XML documents using XML entities.
 *
 * Note that the output will be character-set dependent.
 *
 * @param data String to escape.
 */


var escapeUTF8 = getEscaper(/[&<>'"]/g, xmlCodeMap);
/**
 * Encodes all characters that have to be escaped in HTML attributes,
 * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.
 *
 * @param data String to escape.
 */

var escapeAttribute = getEscaper(/["&\u00A0]/g, new Map([[34, "&quot;"], [38, "&amp;"], [160, "&nbsp;"]]));
/**
 * Encodes all characters that have to be escaped in HTML text,
 * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.
 *
 * @param data String to escape.
 */

var escapeText = getEscaper(/[&<>\u00A0]/g, new Map([[38, "&amp;"], [60, "&lt;"], [62, "&gt;"], [160, "&nbsp;"]]));
// CONCATENATED MODULE: ./node_modules/entities/lib/esm/encode.js
function encode_typeof(obj) { "@babel/helpers - typeof"; return encode_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, encode_typeof(obj); }



var htmlReplacer = /[\t\n!-,./:-@[-`\f{-}$\x80-\uFFFF]/g;
/**
 * Encodes all characters in the input using HTML entities. This includes
 * characters that are valid ASCII characters in HTML documents, such as `#`.
 *
 * To get a more compact output, consider using the `encodeNonAsciiHTML`
 * function, which will only encode characters that are not valid in HTML
 * documents, as well as non-ASCII characters.
 *
 * If a character has no equivalent entity, a numeric hexadecimal reference
 * (eg. `&#xfc;`) will be used.
 */

function encodeHTML(data) {
  return encodeHTMLTrieRe(htmlReplacer, data);
}
/**
 * Encodes all non-ASCII characters, as well as characters not valid in HTML
 * documents using HTML entities. This function will not encode characters that
 * are valid in HTML documents, such as `#`.
 *
 * If a character has no equivalent entity, a numeric hexadecimal reference
 * (eg. `&#xfc;`) will be used.
 */

function encodeNonAsciiHTML(data) {
  return encodeHTMLTrieRe(xmlReplacer, data);
}

function encodeHTMLTrieRe(regExp, str) {
  var ret = "";
  var lastIdx = 0;
  var match;

  while ((match = regExp.exec(str)) !== null) {
    var i = match.index;
    ret += str.substring(lastIdx, i);

    var _char = str.charCodeAt(i);

    var next = encode_html.get(_char);

    if (encode_typeof(next) === "object") {
      // We are in a branch. Try to match the next char.
      if (i + 1 < str.length) {
        var nextChar = str.charCodeAt(i + 1);
        var value = typeof next.n === "number" ? next.n === nextChar ? next.o : undefined : next.n.get(nextChar);

        if (value !== undefined) {
          ret += value;
          lastIdx = regExp.lastIndex += 1;
          continue;
        }
      }

      next = next.v;
    } // We might have a tree node without a value; skip and use a numeric entity.


    if (next !== undefined) {
      ret += next;
      lastIdx = i + 1;
    } else {
      var cp = getCodePoint(str, i);
      ret += "&#x".concat(cp.toString(16), ";"); // Increase by 1 if we have a surrogate pair

      lastIdx = regExp.lastIndex += Number(cp !== _char);
    }
  }

  return ret + str.substr(lastIdx);
}
// CONCATENATED MODULE: ./node_modules/entities/lib/esm/index.js
function esm_typeof(obj) { "@babel/helpers - typeof"; return esm_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, esm_typeof(obj); }




/** The level of entities to support. */

var EntityLevel;

(function (EntityLevel) {
  /** Support only XML entities. */
  EntityLevel[EntityLevel["XML"] = 0] = "XML";
  /** Support HTML entities, which are a superset of XML entities. */

  EntityLevel[EntityLevel["HTML"] = 1] = "HTML";
})(EntityLevel || (EntityLevel = {}));

var EncodingMode;

(function (EncodingMode) {
  /**
   * The output is UTF-8 encoded. Only characters that need escaping within
   * XML will be escaped.
   */
  EncodingMode[EncodingMode["UTF8"] = 0] = "UTF8";
  /**
   * The output consists only of ASCII characters. Characters that need
   * escaping within HTML, and characters that aren't ASCII characters will
   * be escaped.
   */

  EncodingMode[EncodingMode["ASCII"] = 1] = "ASCII";
  /**
   * Encode all characters that have an equivalent entity, as well as all
   * characters that are not ASCII characters.
   */

  EncodingMode[EncodingMode["Extensive"] = 2] = "Extensive";
  /**
   * Encode all characters that have to be escaped in HTML attributes,
   * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.
   */

  EncodingMode[EncodingMode["Attribute"] = 3] = "Attribute";
  /**
   * Encode all characters that have to be escaped in HTML text,
   * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.
   */

  EncodingMode[EncodingMode["Text"] = 4] = "Text";
})(EncodingMode || (EncodingMode = {}));
/**
 * Decodes a string with entities.
 *
 * @param data String to decode.
 * @param options Decoding options.
 */


function decode(data) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EntityLevel.XML;
  var level = typeof options === "number" ? options : options.level;

  if (level === EntityLevel.HTML) {
    var mode = esm_typeof(options) === "object" ? options.mode : undefined;
    return decodeHTML(data, mode);
  }

  return decodeXML(data);
}
/**
 * Decodes a string with entities. Does not allow missing trailing semicolons for entities.
 *
 * @param data String to decode.
 * @param options Decoding options.
 * @deprecated Use `decode` with the `mode` set to `Strict`.
 */

function decodeStrict(data) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EntityLevel.XML;

  var _a;

  var opts = typeof options === "number" ? {
    level: options
  } : options;
  (_a = opts.mode) !== null && _a !== void 0 ? _a : opts.mode = DecodingMode.Strict;
  return decode(data, opts);
}
/**
 * Encodes a string with entities.
 *
 * @param data String to encode.
 * @param options Encoding options.
 */

function esm_encode(data) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EntityLevel.XML;
  var opts = typeof options === "number" ? {
    level: options
  } : options; // Mode `UTF8` just escapes XML entities

  if (opts.mode === EncodingMode.UTF8) return escapeUTF8(data);
  if (opts.mode === EncodingMode.Attribute) return escapeAttribute(data);
  if (opts.mode === EncodingMode.Text) return escapeText(data);

  if (opts.level === EntityLevel.HTML) {
    if (opts.mode === EncodingMode.ASCII) {
      return encodeNonAsciiHTML(data);
    }

    return encodeHTML(data);
  } // ASCII and Extensive are equivalent


  return encodeXML(data);
}



// CONCATENATED MODULE: ./node_modules/dom-serializer/lib/esm/foreignNames.js
var elementNames = new Map(["altGlyph", "altGlyphDef", "altGlyphItem", "animateColor", "animateMotion", "animateTransform", "clipPath", "feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence", "foreignObject", "glyphRef", "linearGradient", "radialGradient", "textPath"].map(function (val) {
  return [val.toLowerCase(), val];
}));
var attributeNames = new Map(["definitionURL", "attributeName", "attributeType", "baseFrequency", "baseProfile", "calcMode", "clipPathUnits", "diffuseConstant", "edgeMode", "filterUnits", "glyphRef", "gradientTransform", "gradientUnits", "kernelMatrix", "kernelUnitLength", "keyPoints", "keySplines", "keyTimes", "lengthAdjust", "limitingConeAngle", "markerHeight", "markerUnits", "markerWidth", "maskContentUnits", "maskUnits", "numOctaves", "pathLength", "patternContentUnits", "patternTransform", "patternUnits", "pointsAtX", "pointsAtY", "pointsAtZ", "preserveAlpha", "preserveAspectRatio", "primitiveUnits", "refX", "refY", "repeatCount", "repeatDur", "requiredExtensions", "requiredFeatures", "specularConstant", "specularExponent", "spreadMethod", "startOffset", "stdDeviation", "stitchTiles", "surfaceScale", "systemLanguage", "tableValues", "targetX", "targetY", "textLength", "viewBox", "viewTarget", "xChannelSelector", "yChannelSelector", "zoomAndPan"].map(function (val) {
  return [val.toLowerCase(), val];
}));
// CONCATENATED MODULE: ./node_modules/dom-serializer/lib/esm/index.js
function esm_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function esm_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? esm_ownKeys(Object(source), !0).forEach(function (key) { esm_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : esm_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function esm_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/*
 * Module dependencies
 */


/**
 * Mixed-case SVG and MathML tags & attributes
 * recognized by the HTML parser.
 *
 * @see https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign
 */


var unencodedElements = new Set(["style", "script", "xmp", "iframe", "noembed", "noframes", "plaintext", "noscript"]);

function replaceQuotes(value) {
  return value.replace(/"/g, "&quot;");
}
/**
 * Format attributes
 */


function formatAttributes(attributes, opts) {
  var _a;

  if (!attributes) return;
  var encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false ? replaceQuotes : opts.xmlMode || opts.encodeEntities !== "utf8" ? encodeXML : escapeAttribute;
  return Object.keys(attributes).map(function (key) {
    var _a, _b;

    var value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : "";

    if (opts.xmlMode === "foreign") {
      /* Fix up mixed-case attribute names */
      key = (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;
    }

    if (!opts.emptyAttrs && !opts.xmlMode && value === "") {
      return key;
    }

    return "".concat(key, "=\"").concat(encode(value), "\"");
  }).join(" ");
}
/**
 * Self-enclosing tags
 */


var singleTag = new Set(["area", "base", "basefont", "br", "col", "command", "embed", "frame", "hr", "img", "input", "isindex", "keygen", "link", "meta", "param", "source", "track", "wbr"]);
/**
 * Renders a DOM node or an array of DOM nodes to a string.
 *
 * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).
 *
 * @param node Node to be rendered.
 * @param options Changes serialization behavior
 */

function render(node) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var nodes = "length" in node ? node : [node];
  var output = "";

  for (var i = 0; i < nodes.length; i++) {
    output += renderNode(nodes[i], options);
  }

  return output;
}
/* harmony default export */ var esm = (render);

function renderNode(node, options) {
  switch (node.type) {
    case Root:
      return render(node.children, options);
    // @ts-expect-error We don't use `Doctype` yet

    case Doctype:
    case Directive:
      return renderDirective(node);

    case esm_Comment:
      return renderComment(node);

    case esm_CDATA:
      return renderCdata(node);

    case Script:
    case Style:
    case Tag:
      return renderTag(node, options);

    case esm_Text:
      return renderText(node, options);
  }
}

var foreignModeIntegrationPoints = new Set(["mi", "mo", "mn", "ms", "mtext", "annotation-xml", "foreignObject", "desc", "title"]);
var foreignElements = new Set(["svg", "math"]);

function renderTag(elem, opts) {
  var _a; // Handle SVG / MathML in HTML


  if (opts.xmlMode === "foreign") {
    /* Fix up mixed-case element names */
    elem.name = (_a = elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;
    /* Exit foreign mode at integration points */

    if (elem.parent && foreignModeIntegrationPoints.has(elem.parent.name)) {
      opts = esm_objectSpread(esm_objectSpread({}, opts), {}, {
        xmlMode: false
      });
    }
  }

  if (!opts.xmlMode && foreignElements.has(elem.name)) {
    opts = esm_objectSpread(esm_objectSpread({}, opts), {}, {
      xmlMode: "foreign"
    });
  }

  var tag = "<".concat(elem.name);
  var attribs = formatAttributes(elem.attribs, opts);

  if (attribs) {
    tag += " ".concat(attribs);
  }

  if (elem.children.length === 0 && (opts.xmlMode ? // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags
  opts.selfClosingTags !== false : // User explicitly asked for self-closing tags, even in HTML mode
  opts.selfClosingTags && singleTag.has(elem.name))) {
    if (!opts.xmlMode) tag += " ";
    tag += "/>";
  } else {
    tag += ">";

    if (elem.children.length > 0) {
      tag += render(elem.children, opts);
    }

    if (opts.xmlMode || !singleTag.has(elem.name)) {
      tag += "</".concat(elem.name, ">");
    }
  }

  return tag;
}

function renderDirective(elem) {
  return "<".concat(elem.data, ">");
}

function renderText(elem, opts) {
  var _a;

  var data = elem.data || ""; // If entities weren't decoded, no need to encode them back

  if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false && !(!opts.xmlMode && elem.parent && unencodedElements.has(elem.parent.name))) {
    data = opts.xmlMode || opts.encodeEntities !== "utf8" ? encodeXML(data) : escapeText(data);
  }

  return data;
}

function renderCdata(elem) {
  return "<![CDATA[".concat(elem.children[0].data, "]]>");
}

function renderComment(elem) {
  return "<!--".concat(elem.data, "-->");
}
// CONCATENATED MODULE: ./node_modules/domhandler/lib/esm/node.js
function node_typeof(obj) { "@babel/helpers - typeof"; return node_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, node_typeof(obj); }

function node_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function node_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? node_ownKeys(Object(source), !0).forEach(function (key) { node_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : node_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function node_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (node_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function node_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function node_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function node_createClass(Constructor, protoProps, staticProps) { if (protoProps) node_defineProperties(Constructor.prototype, protoProps); if (staticProps) node_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }


/**
 * This object will be used as the prototype for Nodes when creating a
 * DOM-Level-1-compliant structure.
 */

var Node = /*#__PURE__*/function () {
  function Node() {
    node_classCallCheck(this, Node);

    /** Parent of the node */
    this.parent = null;
    /** Previous sibling */

    this.prev = null;
    /** Next sibling */

    this.next = null;
    /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */

    this.startIndex = null;
    /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */

    this.endIndex = null;
  } // Read-write aliases for properties

  /**
   * Same as {@link parent}.
   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
   */


  node_createClass(Node, [{
    key: "parentNode",
    get: function get() {
      return this.parent;
    },
    set: function set(parent) {
      this.parent = parent;
    }
    /**
     * Same as {@link prev}.
     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
     */

  }, {
    key: "previousSibling",
    get: function get() {
      return this.prev;
    },
    set: function set(prev) {
      this.prev = prev;
    }
    /**
     * Same as {@link next}.
     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
     */

  }, {
    key: "nextSibling",
    get: function get() {
      return this.next;
    },
    set: function set(next) {
      this.next = next;
    }
    /**
     * Clone this node, and optionally its children.
     *
     * @param recursive Clone child nodes as well.
     * @returns A clone of the node.
     */

  }, {
    key: "cloneNode",
    value: function cloneNode() {
      var recursive = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      return _cloneNode(this, recursive);
    }
  }]);

  return Node;
}();
/**
 * A node that contains some data.
 */

var DataNode = /*#__PURE__*/function (_Node) {
  _inherits(DataNode, _Node);

  var _super = _createSuper(DataNode);

  /**
   * @param data The content of the data node
   */
  function DataNode(data) {
    var _this;

    node_classCallCheck(this, DataNode);

    _this = _super.call(this);
    _this.data = data;
    return _this;
  }
  /**
   * Same as {@link data}.
   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
   */


  node_createClass(DataNode, [{
    key: "nodeValue",
    get: function get() {
      return this.data;
    },
    set: function set(data) {
      this.data = data;
    }
  }]);

  return DataNode;
}(Node);
/**
 * Text within the document.
 */

var node_Text = /*#__PURE__*/function (_DataNode) {
  _inherits(Text, _DataNode);

  var _super2 = _createSuper(Text);

  function Text() {
    var _this2;

    node_classCallCheck(this, Text);

    _this2 = _super2.apply(this, arguments);
    _this2.type = ElementType.Text;
    return _this2;
  }

  node_createClass(Text, [{
    key: "nodeType",
    get: function get() {
      return 3;
    }
  }]);

  return Text;
}(DataNode);
/**
 * Comments within the document.
 */

var node_Comment = /*#__PURE__*/function (_DataNode2) {
  _inherits(Comment, _DataNode2);

  var _super3 = _createSuper(Comment);

  function Comment() {
    var _this3;

    node_classCallCheck(this, Comment);

    _this3 = _super3.apply(this, arguments);
    _this3.type = ElementType.Comment;
    return _this3;
  }

  node_createClass(Comment, [{
    key: "nodeType",
    get: function get() {
      return 8;
    }
  }]);

  return Comment;
}(DataNode);
/**
 * Processing instructions, including doc types.
 */

var node_ProcessingInstruction = /*#__PURE__*/function (_DataNode3) {
  _inherits(ProcessingInstruction, _DataNode3);

  var _super4 = _createSuper(ProcessingInstruction);

  function ProcessingInstruction(name, data) {
    var _this4;

    node_classCallCheck(this, ProcessingInstruction);

    _this4 = _super4.call(this, data);
    _this4.name = name;
    _this4.type = ElementType.Directive;
    return _this4;
  }

  node_createClass(ProcessingInstruction, [{
    key: "nodeType",
    get: function get() {
      return 1;
    }
  }]);

  return ProcessingInstruction;
}(DataNode);
/**
 * A `Node` that can have children.
 */

var NodeWithChildren = /*#__PURE__*/function (_Node2) {
  _inherits(NodeWithChildren, _Node2);

  var _super5 = _createSuper(NodeWithChildren);

  /**
   * @param children Children of the node. Only certain node types can have children.
   */
  function NodeWithChildren(children) {
    var _this5;

    node_classCallCheck(this, NodeWithChildren);

    _this5 = _super5.call(this);
    _this5.children = children;
    return _this5;
  } // Aliases

  /** First child of the node. */


  node_createClass(NodeWithChildren, [{
    key: "firstChild",
    get: function get() {
      var _a;

      return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;
    }
    /** Last child of the node. */

  }, {
    key: "lastChild",
    get: function get() {
      return this.children.length > 0 ? this.children[this.children.length - 1] : null;
    }
    /**
     * Same as {@link children}.
     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
     */

  }, {
    key: "childNodes",
    get: function get() {
      return this.children;
    },
    set: function set(children) {
      this.children = children;
    }
  }]);

  return NodeWithChildren;
}(Node);
var node_CDATA = /*#__PURE__*/function (_NodeWithChildren) {
  _inherits(CDATA, _NodeWithChildren);

  var _super6 = _createSuper(CDATA);

  function CDATA() {
    var _this6;

    node_classCallCheck(this, CDATA);

    _this6 = _super6.apply(this, arguments);
    _this6.type = ElementType.CDATA;
    return _this6;
  }

  node_createClass(CDATA, [{
    key: "nodeType",
    get: function get() {
      return 4;
    }
  }]);

  return CDATA;
}(NodeWithChildren);
/**
 * The root node of the document.
 */

var node_Document = /*#__PURE__*/function (_NodeWithChildren2) {
  _inherits(Document, _NodeWithChildren2);

  var _super7 = _createSuper(Document);

  function Document() {
    var _this7;

    node_classCallCheck(this, Document);

    _this7 = _super7.apply(this, arguments);
    _this7.type = ElementType.Root;
    return _this7;
  }

  node_createClass(Document, [{
    key: "nodeType",
    get: function get() {
      return 9;
    }
  }]);

  return Document;
}(NodeWithChildren);
/**
 * An element within the DOM.
 */

var node_Element = /*#__PURE__*/function (_NodeWithChildren3) {
  _inherits(Element, _NodeWithChildren3);

  var _super8 = _createSuper(Element);

  /**
   * @param name Name of the tag, eg. `div`, `span`.
   * @param attribs Object mapping attribute names to attribute values.
   * @param children Children of the node.
   */
  function Element(name, attribs) {
    var _this8;

    var children = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : name === "script" ? ElementType.Script : name === "style" ? ElementType.Style : ElementType.Tag;

    node_classCallCheck(this, Element);

    _this8 = _super8.call(this, children);
    _this8.name = name;
    _this8.attribs = attribs;
    _this8.type = type;
    return _this8;
  }

  node_createClass(Element, [{
    key: "nodeType",
    get: function get() {
      return 1;
    } // DOM Level 1 aliases

    /**
     * Same as {@link name}.
     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
     */

  }, {
    key: "tagName",
    get: function get() {
      return this.name;
    },
    set: function set(name) {
      this.name = name;
    }
  }, {
    key: "attributes",
    get: function get() {
      var _this9 = this;

      return Object.keys(this.attribs).map(function (name) {
        var _a, _b;

        return {
          name: name,
          value: _this9.attribs[name],
          namespace: (_a = _this9["x-attribsNamespace"]) === null || _a === void 0 ? void 0 : _a[name],
          prefix: (_b = _this9["x-attribsPrefix"]) === null || _b === void 0 ? void 0 : _b[name]
        };
      });
    }
  }]);

  return Element;
}(NodeWithChildren);
/**
 * @param node Node to check.
 * @returns `true` if the node is a `Element`, `false` otherwise.
 */

function node_isTag(node) {
  return isTag(node);
}
/**
 * @param node Node to check.
 * @returns `true` if the node has the type `CDATA`, `false` otherwise.
 */

function isCDATA(node) {
  return node.type === ElementType.CDATA;
}
/**
 * @param node Node to check.
 * @returns `true` if the node has the type `Text`, `false` otherwise.
 */

function isText(node) {
  return node.type === ElementType.Text;
}
/**
 * @param node Node to check.
 * @returns `true` if the node has the type `Comment`, `false` otherwise.
 */

function isComment(node) {
  return node.type === ElementType.Comment;
}
/**
 * @param node Node to check.
 * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.
 */

function isDirective(node) {
  return node.type === ElementType.Directive;
}
/**
 * @param node Node to check.
 * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.
 */

function isDocument(node) {
  return node.type === ElementType.Root;
}
/**
 * @param node Node to check.
 * @returns `true` if the node has children, `false` otherwise.
 */

function hasChildren(node) {
  return Object.prototype.hasOwnProperty.call(node, "children");
}
/**
 * Clone a node, and optionally its children.
 *
 * @param recursive Clone child nodes as well.
 * @returns A clone of the node.
 */

function _cloneNode(node) {
  var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var result;

  if (isText(node)) {
    result = new node_Text(node.data);
  } else if (isComment(node)) {
    result = new node_Comment(node.data);
  } else if (node_isTag(node)) {
    var children = recursive ? cloneChildren(node.children) : [];
    var clone = new node_Element(node.name, node_objectSpread({}, node.attribs), children);
    children.forEach(function (child) {
      return child.parent = clone;
    });

    if (node.namespace != null) {
      clone.namespace = node.namespace;
    }

    if (node["x-attribsNamespace"]) {
      clone["x-attribsNamespace"] = node_objectSpread({}, node["x-attribsNamespace"]);
    }

    if (node["x-attribsPrefix"]) {
      clone["x-attribsPrefix"] = node_objectSpread({}, node["x-attribsPrefix"]);
    }

    result = clone;
  } else if (isCDATA(node)) {
    var _children = recursive ? cloneChildren(node.children) : [];

    var _clone = new node_CDATA(_children);

    _children.forEach(function (child) {
      return child.parent = _clone;
    });

    result = _clone;
  } else if (isDocument(node)) {
    var _children2 = recursive ? cloneChildren(node.children) : [];

    var _clone2 = new node_Document(_children2);

    _children2.forEach(function (child) {
      return child.parent = _clone2;
    });

    if (node["x-mode"]) {
      _clone2["x-mode"] = node["x-mode"];
    }

    result = _clone2;
  } else if (isDirective(node)) {
    var instruction = new node_ProcessingInstruction(node.name, node.data);

    if (node["x-name"] != null) {
      instruction["x-name"] = node["x-name"];
      instruction["x-publicId"] = node["x-publicId"];
      instruction["x-systemId"] = node["x-systemId"];
    }

    result = instruction;
  } else {
    throw new Error("Not implemented yet: ".concat(node.type));
  }

  result.startIndex = node.startIndex;
  result.endIndex = node.endIndex;

  if (node.sourceCodeLocation != null) {
    result.sourceCodeLocation = node.sourceCodeLocation;
  }

  return result;
}



function cloneChildren(childs) {
  var children = childs.map(function (child) {
    return _cloneNode(child, true);
  });

  for (var i = 1; i < children.length; i++) {
    children[i].prev = children[i - 1];
    children[i - 1].next = children[i];
  }

  return children;
}
// CONCATENATED MODULE: ./node_modules/domhandler/lib/esm/index.js
function lib_esm_typeof(obj) { "@babel/helpers - typeof"; return lib_esm_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, lib_esm_typeof(obj); }

function esm_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function esm_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function esm_createClass(Constructor, protoProps, staticProps) { if (protoProps) esm_defineProperties(Constructor.prototype, protoProps); if (staticProps) esm_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }



 // Default options

var defaultOpts = {
  withStartIndices: false,
  withEndIndices: false,
  xmlMode: false
};
var esm_DomHandler = /*#__PURE__*/function () {
  /**
   * @param callback Called once parsing has completed.
   * @param options Settings for the handler.
   * @param elementCB Callback whenever a tag is closed.
   */
  function DomHandler(callback, options, elementCB) {
    esm_classCallCheck(this, DomHandler);

    /** The elements of the DOM */
    this.dom = [];
    /** The root element for the DOM */

    this.root = new node_Document(this.dom);
    /** Indicated whether parsing has been completed. */

    this.done = false;
    /** Stack of open tags. */

    this.tagStack = [this.root];
    /** A data node that is still being written to. */

    this.lastNode = null;
    /** Reference to the parser instance. Used for location information. */

    this.parser = null; // Make it possible to skip arguments, for backwards-compatibility

    if (typeof options === "function") {
      elementCB = options;
      options = defaultOpts;
    }

    if (lib_esm_typeof(callback) === "object") {
      options = callback;
      callback = undefined;
    }

    this.callback = callback !== null && callback !== void 0 ? callback : null;
    this.options = options !== null && options !== void 0 ? options : defaultOpts;
    this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;
  }

  esm_createClass(DomHandler, [{
    key: "onparserinit",
    value: function onparserinit(parser) {
      this.parser = parser;
    } // Resets the handler back to starting state

  }, {
    key: "onreset",
    value: function onreset() {
      this.dom = [];
      this.root = new node_Document(this.dom);
      this.done = false;
      this.tagStack = [this.root];
      this.lastNode = null;
      this.parser = null;
    } // Signals the handler that parsing is done

  }, {
    key: "onend",
    value: function onend() {
      if (this.done) return;
      this.done = true;
      this.parser = null;
      this.handleCallback(null);
    }
  }, {
    key: "onerror",
    value: function onerror(error) {
      this.handleCallback(error);
    }
  }, {
    key: "onclosetag",
    value: function onclosetag() {
      this.lastNode = null;
      var elem = this.tagStack.pop();

      if (this.options.withEndIndices) {
        elem.endIndex = this.parser.endIndex;
      }

      if (this.elementCB) this.elementCB(elem);
    }
  }, {
    key: "onopentag",
    value: function onopentag(name, attribs) {
      var type = this.options.xmlMode ? ElementType.Tag : undefined;
      var element = new node_Element(name, attribs, undefined, type);
      this.addNode(element);
      this.tagStack.push(element);
    }
  }, {
    key: "ontext",
    value: function ontext(data) {
      var lastNode = this.lastNode;

      if (lastNode && lastNode.type === ElementType.Text) {
        lastNode.data += data;

        if (this.options.withEndIndices) {
          lastNode.endIndex = this.parser.endIndex;
        }
      } else {
        var node = new node_Text(data);
        this.addNode(node);
        this.lastNode = node;
      }
    }
  }, {
    key: "oncomment",
    value: function oncomment(data) {
      if (this.lastNode && this.lastNode.type === ElementType.Comment) {
        this.lastNode.data += data;
        return;
      }

      var node = new node_Comment(data);
      this.addNode(node);
      this.lastNode = node;
    }
  }, {
    key: "oncommentend",
    value: function oncommentend() {
      this.lastNode = null;
    }
  }, {
    key: "oncdatastart",
    value: function oncdatastart() {
      var text = new node_Text("");
      var node = new node_CDATA([text]);
      this.addNode(node);
      text.parent = node;
      this.lastNode = text;
    }
  }, {
    key: "oncdataend",
    value: function oncdataend() {
      this.lastNode = null;
    }
  }, {
    key: "onprocessinginstruction",
    value: function onprocessinginstruction(name, data) {
      var node = new node_ProcessingInstruction(name, data);
      this.addNode(node);
    }
  }, {
    key: "handleCallback",
    value: function handleCallback(error) {
      if (typeof this.callback === "function") {
        this.callback(error, this.dom);
      } else if (error) {
        throw error;
      }
    }
  }, {
    key: "addNode",
    value: function addNode(node) {
      var parent = this.tagStack[this.tagStack.length - 1];
      var previousSibling = parent.children[parent.children.length - 1];

      if (this.options.withStartIndices) {
        node.startIndex = this.parser.startIndex;
      }

      if (this.options.withEndIndices) {
        node.endIndex = this.parser.endIndex;
      }

      parent.children.push(node);

      if (previousSibling) {
        node.prev = previousSibling;
        previousSibling.next = node;
      }

      node.parent = parent;
      this.lastNode = null;
    }
  }]);

  return DomHandler;
}();
/* harmony default export */ var lib_esm = (esm_DomHandler);
// CONCATENATED MODULE: ./node_modules/domutils/lib/esm/stringify.js



/**
 * @category Stringify
 * @deprecated Use the `dom-serializer` module directly.
 * @param node Node to get the outer HTML of.
 * @param options Options for serialization.
 * @returns `node`'s outer HTML.
 */

function getOuterHTML(node, options) {
  return esm(node, options);
}
/**
 * @category Stringify
 * @deprecated Use the `dom-serializer` module directly.
 * @param node Node to get the inner HTML of.
 * @param options Options for serialization.
 * @returns `node`'s inner HTML.
 */

function getInnerHTML(node, options) {
  return hasChildren(node) ? node.children.map(function (node) {
    return getOuterHTML(node, options);
  }).join("") : "";
}
/**
 * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags.
 *
 * @category Stringify
 * @deprecated Use `textContent` instead.
 * @param node Node to get the inner text of.
 * @returns `node`'s inner text.
 */

function getText(node) {
  if (Array.isArray(node)) return node.map(getText).join("");
  if (node_isTag(node)) return node.name === "br" ? "\n" : getText(node.children);
  if (isCDATA(node)) return getText(node.children);
  if (isText(node)) return node.data;
  return "";
}
/**
 * Get a node's text content.
 *
 * @category Stringify
 * @param node Node to get the text content of.
 * @returns `node`'s text content.
 * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}
 */

function textContent(node) {
  if (Array.isArray(node)) return node.map(textContent).join("");

  if (hasChildren(node) && !isComment(node)) {
    return textContent(node.children);
  }

  if (isText(node)) return node.data;
  return "";
}
/**
 * Get a node's inner text.
 *
 * @category Stringify
 * @param node Node to get the inner text of.
 * @returns `node`'s inner text.
 * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}
 */

function innerText(node) {
  if (Array.isArray(node)) return node.map(innerText).join("");

  if (hasChildren(node) && (node.type === ElementType.Tag || isCDATA(node))) {
    return innerText(node.children);
  }

  if (isText(node)) return node.data;
  return "";
}
// CONCATENATED MODULE: ./node_modules/domutils/lib/esm/traversal.js

/**
 * Get a node's children.
 *
 * @category Traversal
 * @param elem Node to get the children of.
 * @returns `elem`'s children, or an empty array.
 */

function getChildren(elem) {
  return hasChildren(elem) ? elem.children : [];
}
/**
 * Get a node's parent.
 *
 * @category Traversal
 * @param elem Node to get the parent of.
 * @returns `elem`'s parent node.
 */

function getParent(elem) {
  return elem.parent || null;
}
/**
 * Gets an elements siblings, including the element itself.
 *
 * Attempts to get the children through the element's parent first. If we don't
 * have a parent (the element is a root node), we walk the element's `prev` &
 * `next` to get all remaining nodes.
 *
 * @category Traversal
 * @param elem Element to get the siblings of.
 * @returns `elem`'s siblings.
 */

function getSiblings(elem) {
  var parent = getParent(elem);
  if (parent != null) return getChildren(parent);
  var siblings = [elem];
  var prev = elem.prev,
      next = elem.next;

  while (prev != null) {
    siblings.unshift(prev);
    var _prev = prev;
    prev = _prev.prev;
  }

  while (next != null) {
    siblings.push(next);
    var _next = next;
    next = _next.next;
  }

  return siblings;
}
/**
 * Gets an attribute from an element.
 *
 * @category Traversal
 * @param elem Element to check.
 * @param name Attribute name to retrieve.
 * @returns The element's attribute value, or `undefined`.
 */

function getAttributeValue(elem, name) {
  var _a;

  return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];
}
/**
 * Checks whether an element has an attribute.
 *
 * @category Traversal
 * @param elem Element to check.
 * @param name Attribute name to look for.
 * @returns Returns whether `elem` has the attribute `name`.
 */

function hasAttrib(elem, name) {
  return elem.attribs != null && Object.prototype.hasOwnProperty.call(elem.attribs, name) && elem.attribs[name] != null;
}
/**
 * Get the tag name of an element.
 *
 * @category Traversal
 * @param elem The element to get the name for.
 * @returns The tag name of `elem`.
 */

function getName(elem) {
  return elem.name;
}
/**
 * Returns the next element sibling of a node.
 *
 * @category Traversal
 * @param elem The element to get the next sibling of.
 * @returns `elem`'s next sibling that is a tag.
 */

function nextElementSibling(elem) {
  var next = elem.next;

  while (next !== null && !node_isTag(next)) {
    var _next2 = next;
    next = _next2.next;
  }

  return next;
}
/**
 * Returns the previous element sibling of a node.
 *
 * @category Traversal
 * @param elem The element to get the previous sibling of.
 * @returns `elem`'s previous sibling that is a tag.
 */

function prevElementSibling(elem) {
  var prev = elem.prev;

  while (prev !== null && !node_isTag(prev)) {
    var _prev2 = prev;
    prev = _prev2.prev;
  }

  return prev;
}
// CONCATENATED MODULE: ./node_modules/domutils/lib/esm/manipulation.js
/**
 * Remove an element from the dom
 *
 * @category Manipulation
 * @param elem The element to be removed
 */
function removeElement(elem) {
  if (elem.prev) elem.prev.next = elem.next;
  if (elem.next) elem.next.prev = elem.prev;

  if (elem.parent) {
    var childs = elem.parent.children;
    childs.splice(childs.lastIndexOf(elem), 1);
  }
}
/**
 * Replace an element in the dom
 *
 * @category Manipulation
 * @param elem The element to be replaced
 * @param replacement The element to be added
 */

function replaceElement(elem, replacement) {
  var prev = replacement.prev = elem.prev;

  if (prev) {
    prev.next = replacement;
  }

  var next = replacement.next = elem.next;

  if (next) {
    next.prev = replacement;
  }

  var parent = replacement.parent = elem.parent;

  if (parent) {
    var childs = parent.children;
    childs[childs.lastIndexOf(elem)] = replacement;
    elem.parent = null;
  }
}
/**
 * Append a child to an element.
 *
 * @category Manipulation
 * @param elem The element to append to.
 * @param child The element to be added as a child.
 */

function appendChild(elem, child) {
  removeElement(child);
  child.next = null;
  child.parent = elem;

  if (elem.children.push(child) > 1) {
    var sibling = elem.children[elem.children.length - 2];
    sibling.next = child;
    child.prev = sibling;
  } else {
    child.prev = null;
  }
}
/**
 * Append an element after another.
 *
 * @category Manipulation
 * @param elem The element to append after.
 * @param next The element be added.
 */

function append(elem, next) {
  removeElement(next);
  var parent = elem.parent;
  var currNext = elem.next;
  next.next = currNext;
  next.prev = elem;
  elem.next = next;
  next.parent = parent;

  if (currNext) {
    currNext.prev = next;

    if (parent) {
      var childs = parent.children;
      childs.splice(childs.lastIndexOf(currNext), 0, next);
    }
  } else if (parent) {
    parent.children.push(next);
  }
}
/**
 * Prepend a child to an element.
 *
 * @category Manipulation
 * @param elem The element to prepend before.
 * @param child The element to be added as a child.
 */

function prependChild(elem, child) {
  removeElement(child);
  child.parent = elem;
  child.prev = null;

  if (elem.children.unshift(child) !== 1) {
    var sibling = elem.children[1];
    sibling.prev = child;
    child.next = sibling;
  } else {
    child.next = null;
  }
}
/**
 * Prepend an element before another.
 *
 * @category Manipulation
 * @param elem The element to prepend before.
 * @param prev The element be added.
 */

function prepend(elem, prev) {
  removeElement(prev);
  var parent = elem.parent;

  if (parent) {
    var childs = parent.children;
    childs.splice(childs.indexOf(elem), 0, prev);
  }

  if (elem.prev) {
    elem.prev.next = prev;
  }

  prev.parent = parent;
  prev.prev = elem.prev;
  prev.next = elem;
  elem.prev = prev;
}
// CONCATENATED MODULE: ./node_modules/domutils/lib/esm/querying.js
function querying_toConsumableArray(arr) { return querying_arrayWithoutHoles(arr) || querying_iterableToArray(arr) || querying_unsupportedIterableToArray(arr) || querying_nonIterableSpread(); }

function querying_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function querying_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function querying_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return querying_arrayLikeToArray(arr); }

function querying_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = querying_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function querying_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return querying_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return querying_arrayLikeToArray(o, minLen); }

function querying_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }


/**
 * Search a node and its children for nodes passing a test function.
 *
 * @category Querying
 * @param test Function to test nodes on.
 * @param node Node to search. Will be included in the result set if it matches.
 * @param recurse Also consider child nodes.
 * @param limit Maximum number of nodes to return.
 * @returns All nodes passing `test`.
 */

function querying_filter(test, node) {
  var recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;
  if (!Array.isArray(node)) node = [node];
  return find(test, node, recurse, limit);
}
/**
 * Search an array of node and its children for nodes passing a test function.
 *
 * @category Querying
 * @param test Function to test nodes on.
 * @param nodes Array of nodes to search.
 * @param recurse Also consider child nodes.
 * @param limit Maximum number of nodes to return.
 * @returns All nodes passing `test`.
 */

function find(test, nodes, recurse, limit) {
  var result = [];

  var _iterator = querying_createForOfIteratorHelper(nodes),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var elem = _step.value;

      if (test(elem)) {
        result.push(elem);
        if (--limit <= 0) break;
      }

      if (recurse && hasChildren(elem) && elem.children.length > 0) {
        var children = find(test, elem.children, recurse, limit);
        result.push.apply(result, querying_toConsumableArray(children));
        limit -= children.length;
        if (limit <= 0) break;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return result;
}
/**
 * Finds the first element inside of an array that matches a test function.
 *
 * @category Querying
 * @param test Function to test nodes on.
 * @param nodes Array of nodes to search.
 * @returns The first node in the array that passes `test`.
 * @deprecated Use `Array.prototype.find` directly.
 */

function findOneChild(test, nodes) {
  return nodes.find(test);
}
/**
 * Finds one element in a tree that passes a test.
 *
 * @category Querying
 * @param test Function to test nodes on.
 * @param nodes Array of nodes to search.
 * @param recurse Also consider child nodes.
 * @returns The first child node that passes `test`.
 */

function findOne(test, nodes) {
  var recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var elem = null;

  for (var i = 0; i < nodes.length && !elem; i++) {
    var checked = nodes[i];

    if (!node_isTag(checked)) {
      continue;
    } else if (test(checked)) {
      elem = checked;
    } else if (recurse && checked.children.length > 0) {
      elem = findOne(test, checked.children, true);
    }
  }

  return elem;
}
/**
 * @category Querying
 * @param test Function to test nodes on.
 * @param nodes Array of nodes to search.
 * @returns Whether a tree of nodes contains at least one node passing the test.
 */

function existsOne(test, nodes) {
  return nodes.some(function (checked) {
    return node_isTag(checked) && (test(checked) || checked.children.length > 0 && existsOne(test, checked.children));
  });
}
/**
 * Search and array of nodes and its children for elements passing a test function.
 *
 * Same as `find`, but limited to elements and with less options, leading to reduced complexity.
 *
 * @category Querying
 * @param test Function to test nodes on.
 * @param nodes Array of nodes to search.
 * @returns All nodes passing `test`.
 */

function findAll(test, nodes) {
  var _a;

  var result = [];
  var stack = nodes.filter(node_isTag);
  var elem;

  while (elem = stack.shift()) {
    var children = (_a = elem.children) === null || _a === void 0 ? void 0 : _a.filter(node_isTag);

    if (children && children.length > 0) {
      stack.unshift.apply(stack, querying_toConsumableArray(children));
    }

    if (test(elem)) result.push(elem);
  }

  return result;
}
// CONCATENATED MODULE: ./node_modules/domutils/lib/esm/legacy.js


var Checks = {
  tag_name: function tag_name(name) {
    if (typeof name === "function") {
      return function (elem) {
        return node_isTag(elem) && name(elem.name);
      };
    } else if (name === "*") {
      return node_isTag;
    }

    return function (elem) {
      return node_isTag(elem) && elem.name === name;
    };
  },
  tag_type: function tag_type(type) {
    if (typeof type === "function") {
      return function (elem) {
        return type(elem.type);
      };
    }

    return function (elem) {
      return elem.type === type;
    };
  },
  tag_contains: function tag_contains(data) {
    if (typeof data === "function") {
      return function (elem) {
        return isText(elem) && data(elem.data);
      };
    }

    return function (elem) {
      return isText(elem) && elem.data === data;
    };
  }
};
/**
 * @param attrib Attribute to check.
 * @param value Attribute value to look for.
 * @returns A function to check whether the a node has an attribute with a
 *   particular value.
 */

function getAttribCheck(attrib, value) {
  if (typeof value === "function") {
    return function (elem) {
      return node_isTag(elem) && value(elem.attribs[attrib]);
    };
  }

  return function (elem) {
    return node_isTag(elem) && elem.attribs[attrib] === value;
  };
}
/**
 * @param a First function to combine.
 * @param b Second function to combine.
 * @returns A function taking a node and returning `true` if either of the input
 *   functions returns `true` for the node.
 */


function combineFuncs(a, b) {
  return function (elem) {
    return a(elem) || b(elem);
  };
}
/**
 * @param options An object describing nodes to look for.
 * @returns A function executing all checks in `options` and returning `true` if
 *   any of them match a node.
 */


function compileTest(options) {
  var funcs = Object.keys(options).map(function (key) {
    var value = options[key];
    return Object.prototype.hasOwnProperty.call(Checks, key) ? Checks[key](value) : getAttribCheck(key, value);
  });
  return funcs.length === 0 ? null : funcs.reduce(combineFuncs);
}
/**
 * @category Legacy Query Functions
 * @param options An object describing nodes to look for.
 * @param node The element to test.
 * @returns Whether the element matches the description in `options`.
 */


function testElement(options, node) {
  var test = compileTest(options);
  return test ? test(node) : true;
}
/**
 * @category Legacy Query Functions
 * @param options An object describing nodes to look for.
 * @param nodes Nodes to search through.
 * @param recurse Also consider child nodes.
 * @param limit Maximum number of nodes to return.
 * @returns All nodes that match `options`.
 */

function getElements(options, nodes, recurse) {
  var limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;
  var test = compileTest(options);
  return test ? querying_filter(test, nodes, recurse, limit) : [];
}
/**
 * @category Legacy Query Functions
 * @param id The unique ID attribute value to look for.
 * @param nodes Nodes to search through.
 * @param recurse Also consider child nodes.
 * @returns The node with the supplied ID.
 */

function getElementById(id, nodes) {
  var recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  if (!Array.isArray(nodes)) nodes = [nodes];
  return findOne(getAttribCheck("id", id), nodes, recurse);
}
/**
 * @category Legacy Query Functions
 * @param tagName Tag name to search for.
 * @param nodes Nodes to search through.
 * @param recurse Also consider child nodes.
 * @param limit Maximum number of nodes to return.
 * @returns All nodes with the supplied `tagName`.
 */

function getElementsByTagName(tagName, nodes) {
  var recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;
  return querying_filter(Checks["tag_name"](tagName), nodes, recurse, limit);
}
/**
 * @category Legacy Query Functions
 * @param type Element type to look for.
 * @param nodes Nodes to search through.
 * @param recurse Also consider child nodes.
 * @param limit Maximum number of nodes to return.
 * @returns All nodes with the supplied `type`.
 */

function getElementsByTagType(type, nodes) {
  var recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;
  return querying_filter(Checks["tag_type"](type), nodes, recurse, limit);
}
// CONCATENATED MODULE: ./node_modules/domutils/lib/esm/helpers.js

/**
 * Given an array of nodes, remove any member that is contained by another.
 *
 * @category Helpers
 * @param nodes Nodes to filter.
 * @returns Remaining nodes that aren't subtrees of each other.
 */

function removeSubsets(nodes) {
  var idx = nodes.length;
  /*
   * Check if each node (or one of its ancestors) is already contained in the
   * array.
   */

  while (--idx >= 0) {
    var node = nodes[idx];
    /*
     * Remove the node if it is not unique.
     * We are going through the array from the end, so we only
     * have to check nodes that preceed the node under consideration in the array.
     */

    if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {
      nodes.splice(idx, 1);
      continue;
    }

    for (var ancestor = node.parent; ancestor; ancestor = ancestor.parent) {
      if (nodes.includes(ancestor)) {
        nodes.splice(idx, 1);
        break;
      }
    }
  }

  return nodes;
}
/**
 * @category Helpers
 * @see {@link http://dom.spec.whatwg.org/#dom-node-comparedocumentposition}
 */

var DocumentPosition;

(function (DocumentPosition) {
  DocumentPosition[DocumentPosition["DISCONNECTED"] = 1] = "DISCONNECTED";
  DocumentPosition[DocumentPosition["PRECEDING"] = 2] = "PRECEDING";
  DocumentPosition[DocumentPosition["FOLLOWING"] = 4] = "FOLLOWING";
  DocumentPosition[DocumentPosition["CONTAINS"] = 8] = "CONTAINS";
  DocumentPosition[DocumentPosition["CONTAINED_BY"] = 16] = "CONTAINED_BY";
})(DocumentPosition || (DocumentPosition = {}));
/**
 * Compare the position of one node against another node in any other document.
 * The return value is a bitmask with the values from {@link DocumentPosition}.
 *
 * Document order:
 * > There is an ordering, document order, defined on all the nodes in the
 * > document corresponding to the order in which the first character of the
 * > XML representation of each node occurs in the XML representation of the
 * > document after expansion of general entities. Thus, the document element
 * > node will be the first node. Element nodes occur before their children.
 * > Thus, document order orders element nodes in order of the occurrence of
 * > their start-tag in the XML (after expansion of entities). The attribute
 * > nodes of an element occur after the element and before its children. The
 * > relative order of attribute nodes is implementation-dependent.
 *
 * Source:
 * http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order
 *
 * @category Helpers
 * @param nodeA The first node to use in the comparison
 * @param nodeB The second node to use in the comparison
 * @returns A bitmask describing the input nodes' relative position.
 *
 * See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for
 * a description of these values.
 */


function compareDocumentPosition(nodeA, nodeB) {
  var aParents = [];
  var bParents = [];

  if (nodeA === nodeB) {
    return 0;
  }

  var current = hasChildren(nodeA) ? nodeA : nodeA.parent;

  while (current) {
    aParents.unshift(current);
    current = current.parent;
  }

  current = hasChildren(nodeB) ? nodeB : nodeB.parent;

  while (current) {
    bParents.unshift(current);
    current = current.parent;
  }

  var maxIdx = Math.min(aParents.length, bParents.length);
  var idx = 0;

  while (idx < maxIdx && aParents[idx] === bParents[idx]) {
    idx++;
  }

  if (idx === 0) {
    return DocumentPosition.DISCONNECTED;
  }

  var sharedParent = aParents[idx - 1];
  var siblings = sharedParent.children;
  var aSibling = aParents[idx];
  var bSibling = bParents[idx];

  if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {
    if (sharedParent === nodeB) {
      return DocumentPosition.FOLLOWING | DocumentPosition.CONTAINED_BY;
    }

    return DocumentPosition.FOLLOWING;
  }

  if (sharedParent === nodeA) {
    return DocumentPosition.PRECEDING | DocumentPosition.CONTAINS;
  }

  return DocumentPosition.PRECEDING;
}
/**
 * Sort an array of nodes based on their relative position in the document and
 * remove any duplicate nodes. If the array contains nodes that do not belong to
 * the same document, sort order is unspecified.
 *
 * @category Helpers
 * @param nodes Array of DOM nodes.
 * @returns Collection of unique nodes, sorted in document order.
 */

function uniqueSort(nodes) {
  nodes = nodes.filter(function (node, i, arr) {
    return !arr.includes(node, i + 1);
  });
  nodes.sort(function (a, b) {
    var relative = compareDocumentPosition(a, b);

    if (relative & DocumentPosition.PRECEDING) {
      return -1;
    } else if (relative & DocumentPosition.FOLLOWING) {
      return 1;
    }

    return 0;
  });
  return nodes;
}
// CONCATENATED MODULE: ./node_modules/domutils/lib/esm/feeds.js
function feeds_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = feeds_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function feeds_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return feeds_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return feeds_arrayLikeToArray(o, minLen); }

function feeds_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }



/**
 * Get the feed object from the root of a DOM tree.
 *
 * @category Feeds
 * @param doc - The DOM to to extract the feed from.
 * @returns The feed.
 */

function getFeed(doc) {
  var feedRoot = getOneElement(isValidFeed, doc);
  return !feedRoot ? null : feedRoot.name === "feed" ? getAtomFeed(feedRoot) : getRssFeed(feedRoot);
}
/**
 * Parse an Atom feed.
 *
 * @param feedRoot The root of the feed.
 * @returns The parsed feed.
 */

function getAtomFeed(feedRoot) {
  var _a;

  var childs = feedRoot.children;
  var feed = {
    type: "atom",
    items: getElementsByTagName("entry", childs).map(function (item) {
      var _a;

      var children = item.children;
      var entry = {
        media: getMediaElements(children)
      };
      addConditionally(entry, "id", "id", children);
      addConditionally(entry, "title", "title", children);
      var href = (_a = getOneElement("link", children)) === null || _a === void 0 ? void 0 : _a.attribs["href"];

      if (href) {
        entry.link = href;
      }

      var description = feeds_fetch("summary", children) || feeds_fetch("content", children);

      if (description) {
        entry.description = description;
      }

      var pubDate = feeds_fetch("updated", children);

      if (pubDate) {
        entry.pubDate = new Date(pubDate);
      }

      return entry;
    })
  };
  addConditionally(feed, "id", "id", childs);
  addConditionally(feed, "title", "title", childs);
  var href = (_a = getOneElement("link", childs)) === null || _a === void 0 ? void 0 : _a.attribs["href"];

  if (href) {
    feed.link = href;
  }

  addConditionally(feed, "description", "subtitle", childs);
  var updated = feeds_fetch("updated", childs);

  if (updated) {
    feed.updated = new Date(updated);
  }

  addConditionally(feed, "author", "email", childs, true);
  return feed;
}
/**
 * Parse a RSS feed.
 *
 * @param feedRoot The root of the feed.
 * @returns The parsed feed.
 */


function getRssFeed(feedRoot) {
  var _a, _b;

  var childs = (_b = (_a = getOneElement("channel", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];
  var feed = {
    type: feedRoot.name.substr(0, 3),
    id: "",
    items: getElementsByTagName("item", feedRoot.children).map(function (item) {
      var children = item.children;
      var entry = {
        media: getMediaElements(children)
      };
      addConditionally(entry, "id", "guid", children);
      addConditionally(entry, "title", "title", children);
      addConditionally(entry, "link", "link", children);
      addConditionally(entry, "description", "description", children);
      var pubDate = feeds_fetch("pubDate", children);
      if (pubDate) entry.pubDate = new Date(pubDate);
      return entry;
    })
  };
  addConditionally(feed, "title", "title", childs);
  addConditionally(feed, "link", "link", childs);
  addConditionally(feed, "description", "description", childs);
  var updated = feeds_fetch("lastBuildDate", childs);

  if (updated) {
    feed.updated = new Date(updated);
  }

  addConditionally(feed, "author", "managingEditor", childs, true);
  return feed;
}

var MEDIA_KEYS_STRING = ["url", "type", "lang"];
var MEDIA_KEYS_INT = ["fileSize", "bitrate", "framerate", "samplingrate", "channels", "duration", "height", "width"];
/**
 * Get all media elements of a feed item.
 *
 * @param where Nodes to search in.
 * @returns Media elements.
 */

function getMediaElements(where) {
  return getElementsByTagName("media:content", where).map(function (elem) {
    var attribs = elem.attribs;
    var media = {
      medium: attribs["medium"],
      isDefault: !!attribs["isDefault"]
    };

    var _iterator = feeds_createForOfIteratorHelper(MEDIA_KEYS_STRING),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var attrib = _step.value;

        if (attribs[attrib]) {
          media[attrib] = attribs[attrib];
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    var _iterator2 = feeds_createForOfIteratorHelper(MEDIA_KEYS_INT),
        _step2;

    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var _attrib = _step2.value;

        if (attribs[_attrib]) {
          media[_attrib] = parseInt(attribs[_attrib], 10);
        }
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }

    if (attribs["expression"]) {
      media.expression = attribs["expression"];
    }

    return media;
  });
}
/**
 * Get one element by tag name.
 *
 * @param tagName Tag name to look for
 * @param node Node to search in
 * @returns The element or null
 */


function getOneElement(tagName, node) {
  return getElementsByTagName(tagName, node, true, 1)[0];
}
/**
 * Get the text content of an element with a certain tag name.
 *
 * @param tagName Tag name to look for.
 * @param where Node to search in.
 * @param recurse Whether to recurse into child nodes.
 * @returns The text content of the element.
 */


function feeds_fetch(tagName, where) {
  var recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  return textContent(getElementsByTagName(tagName, where, recurse, 1)).trim();
}
/**
 * Adds a property to an object if it has a value.
 *
 * @param obj Object to be extended
 * @param prop Property name
 * @param tagName Tag name that contains the conditionally added property
 * @param where Element to search for the property
 * @param recurse Whether to recurse into child nodes.
 */


function addConditionally(obj, prop, tagName, where) {
  var recurse = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  var val = feeds_fetch(tagName, where, recurse);
  if (val) obj[prop] = val;
}
/**
 * Checks if an element is a feed root node.
 *
 * @param value The name of the element to check.
 * @returns Whether an element is a feed root node.
 */


function isValidFeed(value) {
  return value === "rss" || value === "feed" || value === "rdf:RDF";
}
// CONCATENATED MODULE: ./node_modules/domutils/lib/esm/index.js







/** @deprecated Use these methods from `domhandler` directly. */


// EXTERNAL MODULE: ./node_modules/entities/lib/decode.js
var lib_decode = __webpack_require__(51);

// CONCATENATED MODULE: ./node_modules/htmlparser2/lib/esm/Tokenizer.js
function Tokenizer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function Tokenizer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function Tokenizer_createClass(Constructor, protoProps, staticProps) { if (protoProps) Tokenizer_defineProperties(Constructor.prototype, protoProps); if (staticProps) Tokenizer_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }


var Tokenizer_CharCodes;

(function (CharCodes) {
  CharCodes[CharCodes["Tab"] = 9] = "Tab";
  CharCodes[CharCodes["NewLine"] = 10] = "NewLine";
  CharCodes[CharCodes["FormFeed"] = 12] = "FormFeed";
  CharCodes[CharCodes["CarriageReturn"] = 13] = "CarriageReturn";
  CharCodes[CharCodes["Space"] = 32] = "Space";
  CharCodes[CharCodes["ExclamationMark"] = 33] = "ExclamationMark";
  CharCodes[CharCodes["Number"] = 35] = "Number";
  CharCodes[CharCodes["Amp"] = 38] = "Amp";
  CharCodes[CharCodes["SingleQuote"] = 39] = "SingleQuote";
  CharCodes[CharCodes["DoubleQuote"] = 34] = "DoubleQuote";
  CharCodes[CharCodes["Dash"] = 45] = "Dash";
  CharCodes[CharCodes["Slash"] = 47] = "Slash";
  CharCodes[CharCodes["Zero"] = 48] = "Zero";
  CharCodes[CharCodes["Nine"] = 57] = "Nine";
  CharCodes[CharCodes["Semi"] = 59] = "Semi";
  CharCodes[CharCodes["Lt"] = 60] = "Lt";
  CharCodes[CharCodes["Eq"] = 61] = "Eq";
  CharCodes[CharCodes["Gt"] = 62] = "Gt";
  CharCodes[CharCodes["Questionmark"] = 63] = "Questionmark";
  CharCodes[CharCodes["UpperA"] = 65] = "UpperA";
  CharCodes[CharCodes["LowerA"] = 97] = "LowerA";
  CharCodes[CharCodes["UpperF"] = 70] = "UpperF";
  CharCodes[CharCodes["LowerF"] = 102] = "LowerF";
  CharCodes[CharCodes["UpperZ"] = 90] = "UpperZ";
  CharCodes[CharCodes["LowerZ"] = 122] = "LowerZ";
  CharCodes[CharCodes["LowerX"] = 120] = "LowerX";
  CharCodes[CharCodes["OpeningSquareBracket"] = 91] = "OpeningSquareBracket";
})(Tokenizer_CharCodes || (Tokenizer_CharCodes = {}));
/** All the states the tokenizer can be in. */


var State;

(function (State) {
  State[State["Text"] = 1] = "Text";
  State[State["BeforeTagName"] = 2] = "BeforeTagName";
  State[State["InTagName"] = 3] = "InTagName";
  State[State["InSelfClosingTag"] = 4] = "InSelfClosingTag";
  State[State["BeforeClosingTagName"] = 5] = "BeforeClosingTagName";
  State[State["InClosingTagName"] = 6] = "InClosingTagName";
  State[State["AfterClosingTagName"] = 7] = "AfterClosingTagName"; // Attributes

  State[State["BeforeAttributeName"] = 8] = "BeforeAttributeName";
  State[State["InAttributeName"] = 9] = "InAttributeName";
  State[State["AfterAttributeName"] = 10] = "AfterAttributeName";
  State[State["BeforeAttributeValue"] = 11] = "BeforeAttributeValue";
  State[State["InAttributeValueDq"] = 12] = "InAttributeValueDq";
  State[State["InAttributeValueSq"] = 13] = "InAttributeValueSq";
  State[State["InAttributeValueNq"] = 14] = "InAttributeValueNq"; // Declarations

  State[State["BeforeDeclaration"] = 15] = "BeforeDeclaration";
  State[State["InDeclaration"] = 16] = "InDeclaration"; // Processing instructions

  State[State["InProcessingInstruction"] = 17] = "InProcessingInstruction"; // Comments & CDATA

  State[State["BeforeComment"] = 18] = "BeforeComment";
  State[State["CDATASequence"] = 19] = "CDATASequence";
  State[State["InSpecialComment"] = 20] = "InSpecialComment";
  State[State["InCommentLike"] = 21] = "InCommentLike"; // Special tags

  State[State["BeforeSpecialS"] = 22] = "BeforeSpecialS";
  State[State["SpecialStartSequence"] = 23] = "SpecialStartSequence";
  State[State["InSpecialTag"] = 24] = "InSpecialTag";
  State[State["BeforeEntity"] = 25] = "BeforeEntity";
  State[State["BeforeNumericEntity"] = 26] = "BeforeNumericEntity";
  State[State["InNamedEntity"] = 27] = "InNamedEntity";
  State[State["InNumericEntity"] = 28] = "InNumericEntity";
  State[State["InHexEntity"] = 29] = "InHexEntity";
})(State || (State = {}));

function isWhitespace(c) {
  return c === Tokenizer_CharCodes.Space || c === Tokenizer_CharCodes.NewLine || c === Tokenizer_CharCodes.Tab || c === Tokenizer_CharCodes.FormFeed || c === Tokenizer_CharCodes.CarriageReturn;
}

function isEndOfTagSection(c) {
  return c === Tokenizer_CharCodes.Slash || c === Tokenizer_CharCodes.Gt || isWhitespace(c);
}

function Tokenizer_isNumber(c) {
  return c >= Tokenizer_CharCodes.Zero && c <= Tokenizer_CharCodes.Nine;
}

function isASCIIAlpha(c) {
  return c >= Tokenizer_CharCodes.LowerA && c <= Tokenizer_CharCodes.LowerZ || c >= Tokenizer_CharCodes.UpperA && c <= Tokenizer_CharCodes.UpperZ;
}

function isHexDigit(c) {
  return c >= Tokenizer_CharCodes.UpperA && c <= Tokenizer_CharCodes.UpperF || c >= Tokenizer_CharCodes.LowerA && c <= Tokenizer_CharCodes.LowerF;
}

var QuoteType;

(function (QuoteType) {
  QuoteType[QuoteType["NoValue"] = 0] = "NoValue";
  QuoteType[QuoteType["Unquoted"] = 1] = "Unquoted";
  QuoteType[QuoteType["Single"] = 2] = "Single";
  QuoteType[QuoteType["Double"] = 3] = "Double";
})(QuoteType || (QuoteType = {}));
/**
 * Sequences used to match longer strings.
 *
 * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End
 * sequences with an increased offset.
 */


var Sequences = {
  Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]),
  CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]),
  CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]),
  ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]),
  StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]),
  TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]) // `</title`

};

var Tokenizer_Tokenizer = /*#__PURE__*/function () {
  function Tokenizer(_ref, cbs) {
    var _ref$xmlMode = _ref.xmlMode,
        xmlMode = _ref$xmlMode === void 0 ? false : _ref$xmlMode,
        _ref$decodeEntities = _ref.decodeEntities,
        decodeEntities = _ref$decodeEntities === void 0 ? true : _ref$decodeEntities;

    Tokenizer_classCallCheck(this, Tokenizer);

    this.cbs = cbs;
    /** The current state the tokenizer is in. */

    this.state = State.Text;
    /** The read buffer. */

    this.buffer = "";
    /** The beginning of the section that is currently being read. */

    this.sectionStart = 0;
    /** The index within the buffer that we are currently looking at. */

    this.index = 0;
    /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */

    this.baseState = State.Text;
    /** For special parsing behavior inside of script and style tags. */

    this.isSpecial = false;
    /** Indicates whether the tokenizer has been paused. */

    this.running = true;
    /** The offset of the current buffer. */

    this.offset = 0;
    this.currentSequence = undefined;
    this.sequenceIndex = 0;
    this.trieIndex = 0;
    this.trieCurrent = 0;
    /** For named entities, the index of the value. For numeric entities, the code point. */

    this.entityResult = 0;
    this.entityExcess = 0;
    this.xmlMode = xmlMode;
    this.decodeEntities = decodeEntities;
    this.entityTrie = xmlMode ? lib_decode["xmlDecodeTree"] : lib_decode["htmlDecodeTree"];
  }

  Tokenizer_createClass(Tokenizer, [{
    key: "reset",
    value: function reset() {
      this.state = State.Text;
      this.buffer = "";
      this.sectionStart = 0;
      this.index = 0;
      this.baseState = State.Text;
      this.currentSequence = undefined;
      this.running = true;
      this.offset = 0;
    }
  }, {
    key: "write",
    value: function write(chunk) {
      this.offset += this.buffer.length;
      this.buffer = chunk;
      this.parse();
    }
  }, {
    key: "end",
    value: function end() {
      if (this.running) this.finish();
    }
  }, {
    key: "pause",
    value: function pause() {
      this.running = false;
    }
  }, {
    key: "resume",
    value: function resume() {
      this.running = true;

      if (this.index < this.buffer.length + this.offset) {
        this.parse();
      }
    }
    /**
     * The current index within all of the written data.
     */

  }, {
    key: "getIndex",
    value: function getIndex() {
      return this.index;
    }
    /**
     * The start of the current section.
     */

  }, {
    key: "getSectionStart",
    value: function getSectionStart() {
      return this.sectionStart;
    }
  }, {
    key: "stateText",
    value: function stateText(c) {
      if (c === Tokenizer_CharCodes.Lt || !this.decodeEntities && this.fastForwardTo(Tokenizer_CharCodes.Lt)) {
        if (this.index > this.sectionStart) {
          this.cbs.ontext(this.sectionStart, this.index);
        }

        this.state = State.BeforeTagName;
        this.sectionStart = this.index;
      } else if (this.decodeEntities && c === Tokenizer_CharCodes.Amp) {
        this.state = State.BeforeEntity;
      }
    }
  }, {
    key: "stateSpecialStartSequence",
    value: function stateSpecialStartSequence(c) {
      var isEnd = this.sequenceIndex === this.currentSequence.length;
      var isMatch = isEnd ? // If we are at the end of the sequence, make sure the tag name has ended
      isEndOfTagSection(c) : // Otherwise, do a case-insensitive comparison
      (c | 0x20) === this.currentSequence[this.sequenceIndex];

      if (!isMatch) {
        this.isSpecial = false;
      } else if (!isEnd) {
        this.sequenceIndex++;
        return;
      }

      this.sequenceIndex = 0;
      this.state = State.InTagName;
      this.stateInTagName(c);
    }
    /** Look for an end tag. For <title> tags, also decode entities. */

  }, {
    key: "stateInSpecialTag",
    value: function stateInSpecialTag(c) {
      if (this.sequenceIndex === this.currentSequence.length) {
        if (c === Tokenizer_CharCodes.Gt || isWhitespace(c)) {
          var endOfText = this.index - this.currentSequence.length;

          if (this.sectionStart < endOfText) {
            // Spoof the index so that reported locations match up.
            var actualIndex = this.index;
            this.index = endOfText;
            this.cbs.ontext(this.sectionStart, endOfText);
            this.index = actualIndex;
          }

          this.isSpecial = false;
          this.sectionStart = endOfText + 2; // Skip over the `</`

          this.stateInClosingTagName(c);
          return; // We are done; skip the rest of the function.
        }

        this.sequenceIndex = 0;
      }

      if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {
        this.sequenceIndex += 1;
      } else if (this.sequenceIndex === 0) {
        if (this.currentSequence === Sequences.TitleEnd) {
          // We have to parse entities in <title> tags.
          if (this.decodeEntities && c === Tokenizer_CharCodes.Amp) {
            this.state = State.BeforeEntity;
          }
        } else if (this.fastForwardTo(Tokenizer_CharCodes.Lt)) {
          // Outside of <title> tags, we can fast-forward.
          this.sequenceIndex = 1;
        }
      } else {
        // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.
        this.sequenceIndex = Number(c === Tokenizer_CharCodes.Lt);
      }
    }
  }, {
    key: "stateCDATASequence",
    value: function stateCDATASequence(c) {
      if (c === Sequences.Cdata[this.sequenceIndex]) {
        if (++this.sequenceIndex === Sequences.Cdata.length) {
          this.state = State.InCommentLike;
          this.currentSequence = Sequences.CdataEnd;
          this.sequenceIndex = 0;
          this.sectionStart = this.index + 1;
        }
      } else {
        this.sequenceIndex = 0;
        this.state = State.InDeclaration;
        this.stateInDeclaration(c); // Reconsume the character
      }
    }
    /**
     * When we wait for one specific character, we can speed things up
     * by skipping through the buffer until we find it.
     *
     * @returns Whether the character was found.
     */

  }, {
    key: "fastForwardTo",
    value: function fastForwardTo(c) {
      while (++this.index < this.buffer.length + this.offset) {
        if (this.buffer.charCodeAt(this.index - this.offset) === c) {
          return true;
        }
      }
      /*
       * We increment the index at the end of the `parse` loop,
       * so set it to `buffer.length - 1` here.
       *
       * TODO: Refactor `parse` to increment index before calling states.
       */


      this.index = this.buffer.length + this.offset - 1;
      return false;
    }
    /**
     * Comments and CDATA end with `-->` and `]]>`.
     *
     * Their common qualities are:
     * - Their end sequences have a distinct character they start with.
     * - That character is then repeated, so we have to check multiple repeats.
     * - All characters but the start character of the sequence can be skipped.
     */

  }, {
    key: "stateInCommentLike",
    value: function stateInCommentLike(c) {
      if (c === this.currentSequence[this.sequenceIndex]) {
        if (++this.sequenceIndex === this.currentSequence.length) {
          if (this.currentSequence === Sequences.CdataEnd) {
            this.cbs.oncdata(this.sectionStart, this.index, 2);
          } else {
            this.cbs.oncomment(this.sectionStart, this.index, 2);
          }

          this.sequenceIndex = 0;
          this.sectionStart = this.index + 1;
          this.state = State.Text;
        }
      } else if (this.sequenceIndex === 0) {
        // Fast-forward to the first character of the sequence
        if (this.fastForwardTo(this.currentSequence[0])) {
          this.sequenceIndex = 1;
        }
      } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {
        // Allow long sequences, eg. --->, ]]]>
        this.sequenceIndex = 0;
      }
    }
    /**
     * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.
     *
     * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).
     * We allow anything that wouldn't end the tag.
     */

  }, {
    key: "isTagStartChar",
    value: function isTagStartChar(c) {
      return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);
    }
  }, {
    key: "startSpecial",
    value: function startSpecial(sequence, offset) {
      this.isSpecial = true;
      this.currentSequence = sequence;
      this.sequenceIndex = offset;
      this.state = State.SpecialStartSequence;
    }
  }, {
    key: "stateBeforeTagName",
    value: function stateBeforeTagName(c) {
      if (c === Tokenizer_CharCodes.ExclamationMark) {
        this.state = State.BeforeDeclaration;
        this.sectionStart = this.index + 1;
      } else if (c === Tokenizer_CharCodes.Questionmark) {
        this.state = State.InProcessingInstruction;
        this.sectionStart = this.index + 1;
      } else if (this.isTagStartChar(c)) {
        var lower = c | 0x20;
        this.sectionStart = this.index;

        if (!this.xmlMode && lower === Sequences.TitleEnd[2]) {
          this.startSpecial(Sequences.TitleEnd, 3);
        } else {
          this.state = !this.xmlMode && lower === Sequences.ScriptEnd[2] ? State.BeforeSpecialS : State.InTagName;
        }
      } else if (c === Tokenizer_CharCodes.Slash) {
        this.state = State.BeforeClosingTagName;
      } else {
        this.state = State.Text;
        this.stateText(c);
      }
    }
  }, {
    key: "stateInTagName",
    value: function stateInTagName(c) {
      if (isEndOfTagSection(c)) {
        this.cbs.onopentagname(this.sectionStart, this.index);
        this.sectionStart = -1;
        this.state = State.BeforeAttributeName;
        this.stateBeforeAttributeName(c);
      }
    }
  }, {
    key: "stateBeforeClosingTagName",
    value: function stateBeforeClosingTagName(c) {
      if (isWhitespace(c)) {// Ignore
      } else if (c === Tokenizer_CharCodes.Gt) {
        this.state = State.Text;
      } else {
        this.state = this.isTagStartChar(c) ? State.InClosingTagName : State.InSpecialComment;
        this.sectionStart = this.index;
      }
    }
  }, {
    key: "stateInClosingTagName",
    value: function stateInClosingTagName(c) {
      if (c === Tokenizer_CharCodes.Gt || isWhitespace(c)) {
        this.cbs.onclosetag(this.sectionStart, this.index);
        this.sectionStart = -1;
        this.state = State.AfterClosingTagName;
        this.stateAfterClosingTagName(c);
      }
    }
  }, {
    key: "stateAfterClosingTagName",
    value: function stateAfterClosingTagName(c) {
      // Skip everything until ">"
      if (c === Tokenizer_CharCodes.Gt || this.fastForwardTo(Tokenizer_CharCodes.Gt)) {
        this.state = State.Text;
        this.baseState = State.Text;
        this.sectionStart = this.index + 1;
      }
    }
  }, {
    key: "stateBeforeAttributeName",
    value: function stateBeforeAttributeName(c) {
      if (c === Tokenizer_CharCodes.Gt) {
        this.cbs.onopentagend(this.index);

        if (this.isSpecial) {
          this.state = State.InSpecialTag;
          this.sequenceIndex = 0;
        } else {
          this.state = State.Text;
        }

        this.baseState = this.state;
        this.sectionStart = this.index + 1;
      } else if (c === Tokenizer_CharCodes.Slash) {
        this.state = State.InSelfClosingTag;
      } else if (!isWhitespace(c)) {
        this.state = State.InAttributeName;
        this.sectionStart = this.index;
      }
    }
  }, {
    key: "stateInSelfClosingTag",
    value: function stateInSelfClosingTag(c) {
      if (c === Tokenizer_CharCodes.Gt) {
        this.cbs.onselfclosingtag(this.index);
        this.state = State.Text;
        this.baseState = State.Text;
        this.sectionStart = this.index + 1;
        this.isSpecial = false; // Reset special state, in case of self-closing special tags
      } else if (!isWhitespace(c)) {
        this.state = State.BeforeAttributeName;
        this.stateBeforeAttributeName(c);
      }
    }
  }, {
    key: "stateInAttributeName",
    value: function stateInAttributeName(c) {
      if (c === Tokenizer_CharCodes.Eq || isEndOfTagSection(c)) {
        this.cbs.onattribname(this.sectionStart, this.index);
        this.sectionStart = -1;
        this.state = State.AfterAttributeName;
        this.stateAfterAttributeName(c);
      }
    }
  }, {
    key: "stateAfterAttributeName",
    value: function stateAfterAttributeName(c) {
      if (c === Tokenizer_CharCodes.Eq) {
        this.state = State.BeforeAttributeValue;
      } else if (c === Tokenizer_CharCodes.Slash || c === Tokenizer_CharCodes.Gt) {
        this.cbs.onattribend(QuoteType.NoValue, this.index);
        this.state = State.BeforeAttributeName;
        this.stateBeforeAttributeName(c);
      } else if (!isWhitespace(c)) {
        this.cbs.onattribend(QuoteType.NoValue, this.index);
        this.state = State.InAttributeName;
        this.sectionStart = this.index;
      }
    }
  }, {
    key: "stateBeforeAttributeValue",
    value: function stateBeforeAttributeValue(c) {
      if (c === Tokenizer_CharCodes.DoubleQuote) {
        this.state = State.InAttributeValueDq;
        this.sectionStart = this.index + 1;
      } else if (c === Tokenizer_CharCodes.SingleQuote) {
        this.state = State.InAttributeValueSq;
        this.sectionStart = this.index + 1;
      } else if (!isWhitespace(c)) {
        this.sectionStart = this.index;
        this.state = State.InAttributeValueNq;
        this.stateInAttributeValueNoQuotes(c); // Reconsume token
      }
    }
  }, {
    key: "handleInAttributeValue",
    value: function handleInAttributeValue(c, quote) {
      if (c === quote || !this.decodeEntities && this.fastForwardTo(quote)) {
        this.cbs.onattribdata(this.sectionStart, this.index);
        this.sectionStart = -1;
        this.cbs.onattribend(quote === Tokenizer_CharCodes.DoubleQuote ? QuoteType.Double : QuoteType.Single, this.index);
        this.state = State.BeforeAttributeName;
      } else if (this.decodeEntities && c === Tokenizer_CharCodes.Amp) {
        this.baseState = this.state;
        this.state = State.BeforeEntity;
      }
    }
  }, {
    key: "stateInAttributeValueDoubleQuotes",
    value: function stateInAttributeValueDoubleQuotes(c) {
      this.handleInAttributeValue(c, Tokenizer_CharCodes.DoubleQuote);
    }
  }, {
    key: "stateInAttributeValueSingleQuotes",
    value: function stateInAttributeValueSingleQuotes(c) {
      this.handleInAttributeValue(c, Tokenizer_CharCodes.SingleQuote);
    }
  }, {
    key: "stateInAttributeValueNoQuotes",
    value: function stateInAttributeValueNoQuotes(c) {
      if (isWhitespace(c) || c === Tokenizer_CharCodes.Gt) {
        this.cbs.onattribdata(this.sectionStart, this.index);
        this.sectionStart = -1;
        this.cbs.onattribend(QuoteType.Unquoted, this.index);
        this.state = State.BeforeAttributeName;
        this.stateBeforeAttributeName(c);
      } else if (this.decodeEntities && c === Tokenizer_CharCodes.Amp) {
        this.baseState = this.state;
        this.state = State.BeforeEntity;
      }
    }
  }, {
    key: "stateBeforeDeclaration",
    value: function stateBeforeDeclaration(c) {
      if (c === Tokenizer_CharCodes.OpeningSquareBracket) {
        this.state = State.CDATASequence;
        this.sequenceIndex = 0;
      } else {
        this.state = c === Tokenizer_CharCodes.Dash ? State.BeforeComment : State.InDeclaration;
      }
    }
  }, {
    key: "stateInDeclaration",
    value: function stateInDeclaration(c) {
      if (c === Tokenizer_CharCodes.Gt || this.fastForwardTo(Tokenizer_CharCodes.Gt)) {
        this.cbs.ondeclaration(this.sectionStart, this.index);
        this.state = State.Text;
        this.sectionStart = this.index + 1;
      }
    }
  }, {
    key: "stateInProcessingInstruction",
    value: function stateInProcessingInstruction(c) {
      if (c === Tokenizer_CharCodes.Gt || this.fastForwardTo(Tokenizer_CharCodes.Gt)) {
        this.cbs.onprocessinginstruction(this.sectionStart, this.index);
        this.state = State.Text;
        this.sectionStart = this.index + 1;
      }
    }
  }, {
    key: "stateBeforeComment",
    value: function stateBeforeComment(c) {
      if (c === Tokenizer_CharCodes.Dash) {
        this.state = State.InCommentLike;
        this.currentSequence = Sequences.CommentEnd; // Allow short comments (eg. <!-->)

        this.sequenceIndex = 2;
        this.sectionStart = this.index + 1;
      } else {
        this.state = State.InDeclaration;
      }
    }
  }, {
    key: "stateInSpecialComment",
    value: function stateInSpecialComment(c) {
      if (c === Tokenizer_CharCodes.Gt || this.fastForwardTo(Tokenizer_CharCodes.Gt)) {
        this.cbs.oncomment(this.sectionStart, this.index, 0);
        this.state = State.Text;
        this.sectionStart = this.index + 1;
      }
    }
  }, {
    key: "stateBeforeSpecialS",
    value: function stateBeforeSpecialS(c) {
      var lower = c | 0x20;

      if (lower === Sequences.ScriptEnd[3]) {
        this.startSpecial(Sequences.ScriptEnd, 4);
      } else if (lower === Sequences.StyleEnd[3]) {
        this.startSpecial(Sequences.StyleEnd, 4);
      } else {
        this.state = State.InTagName;
        this.stateInTagName(c); // Consume the token again
      }
    }
  }, {
    key: "stateBeforeEntity",
    value: function stateBeforeEntity(c) {
      // Start excess with 1 to include the '&'
      this.entityExcess = 1;
      this.entityResult = 0;

      if (c === Tokenizer_CharCodes.Number) {
        this.state = State.BeforeNumericEntity;
      } else if (c === Tokenizer_CharCodes.Amp) {// We have two `&` characters in a row. Stay in the current state.
      } else {
        this.trieIndex = 0;
        this.trieCurrent = this.entityTrie[0];
        this.state = State.InNamedEntity;
        this.stateInNamedEntity(c);
      }
    }
  }, {
    key: "stateInNamedEntity",
    value: function stateInNamedEntity(c) {
      this.entityExcess += 1;
      this.trieIndex = Object(lib_decode["determineBranch"])(this.entityTrie, this.trieCurrent, this.trieIndex + 1, c);

      if (this.trieIndex < 0) {
        this.emitNamedEntity();
        this.index--;
        return;
      }

      this.trieCurrent = this.entityTrie[this.trieIndex];
      var masked = this.trieCurrent & lib_decode["BinTrieFlags"].VALUE_LENGTH; // If the branch is a value, store it and continue

      if (masked) {
        // The mask is the number of bytes of the value, including the current byte.
        var valueLength = (masked >> 14) - 1; // If we have a legacy entity while parsing strictly, just skip the number of bytes

        if (!this.allowLegacyEntity() && c !== Tokenizer_CharCodes.Semi) {
          this.trieIndex += valueLength;
        } else {
          // Add 1 as we have already incremented the excess
          var entityStart = this.index - this.entityExcess + 1;

          if (entityStart > this.sectionStart) {
            this.emitPartial(this.sectionStart, entityStart);
          } // If this is a surrogate pair, consume the next two bytes


          this.entityResult = this.trieIndex;
          this.trieIndex += valueLength;
          this.entityExcess = 0;
          this.sectionStart = this.index + 1;

          if (valueLength === 0) {
            this.emitNamedEntity();
          }
        }
      }
    }
  }, {
    key: "emitNamedEntity",
    value: function emitNamedEntity() {
      this.state = this.baseState;

      if (this.entityResult === 0) {
        return;
      }

      var valueLength = (this.entityTrie[this.entityResult] & lib_decode["BinTrieFlags"].VALUE_LENGTH) >> 14;

      switch (valueLength) {
        case 1:
          {
            this.emitCodePoint(this.entityTrie[this.entityResult] & ~lib_decode["BinTrieFlags"].VALUE_LENGTH);
            break;
          }

        case 2:
          {
            this.emitCodePoint(this.entityTrie[this.entityResult + 1]);
            break;
          }

        case 3:
          {
            this.emitCodePoint(this.entityTrie[this.entityResult + 1]);
            this.emitCodePoint(this.entityTrie[this.entityResult + 2]);
          }
      }
    }
  }, {
    key: "stateBeforeNumericEntity",
    value: function stateBeforeNumericEntity(c) {
      if ((c | 0x20) === Tokenizer_CharCodes.LowerX) {
        this.entityExcess++;
        this.state = State.InHexEntity;
      } else {
        this.state = State.InNumericEntity;
        this.stateInNumericEntity(c);
      }
    }
  }, {
    key: "emitNumericEntity",
    value: function emitNumericEntity(strict) {
      var entityStart = this.index - this.entityExcess - 1;
      var numberStart = entityStart + 2 + Number(this.state === State.InHexEntity);

      if (numberStart !== this.index) {
        // Emit leading data if any
        if (entityStart > this.sectionStart) {
          this.emitPartial(this.sectionStart, entityStart);
        }

        this.sectionStart = this.index + Number(strict);
        this.emitCodePoint(Object(lib_decode["replaceCodePoint"])(this.entityResult));
      }

      this.state = this.baseState;
    }
  }, {
    key: "stateInNumericEntity",
    value: function stateInNumericEntity(c) {
      if (c === Tokenizer_CharCodes.Semi) {
        this.emitNumericEntity(true);
      } else if (Tokenizer_isNumber(c)) {
        this.entityResult = this.entityResult * 10 + (c - Tokenizer_CharCodes.Zero);
        this.entityExcess++;
      } else {
        if (this.allowLegacyEntity()) {
          this.emitNumericEntity(false);
        } else {
          this.state = this.baseState;
        }

        this.index--;
      }
    }
  }, {
    key: "stateInHexEntity",
    value: function stateInHexEntity(c) {
      if (c === Tokenizer_CharCodes.Semi) {
        this.emitNumericEntity(true);
      } else if (Tokenizer_isNumber(c)) {
        this.entityResult = this.entityResult * 16 + (c - Tokenizer_CharCodes.Zero);
        this.entityExcess++;
      } else if (isHexDigit(c)) {
        this.entityResult = this.entityResult * 16 + ((c | 0x20) - Tokenizer_CharCodes.LowerA + 10);
        this.entityExcess++;
      } else {
        if (this.allowLegacyEntity()) {
          this.emitNumericEntity(false);
        } else {
          this.state = this.baseState;
        }

        this.index--;
      }
    }
  }, {
    key: "allowLegacyEntity",
    value: function allowLegacyEntity() {
      return !this.xmlMode && (this.baseState === State.Text || this.baseState === State.InSpecialTag);
    }
    /**
     * Remove data that has already been consumed from the buffer.
     */

  }, {
    key: "cleanup",
    value: function cleanup() {
      // If we are inside of text or attributes, emit what we already have.
      if (this.running && this.sectionStart !== this.index) {
        if (this.state === State.Text || this.state === State.InSpecialTag && this.sequenceIndex === 0) {
          this.cbs.ontext(this.sectionStart, this.index);
          this.sectionStart = this.index;
        } else if (this.state === State.InAttributeValueDq || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueNq) {
          this.cbs.onattribdata(this.sectionStart, this.index);
          this.sectionStart = this.index;
        }
      }
    }
  }, {
    key: "shouldContinue",
    value: function shouldContinue() {
      return this.index < this.buffer.length + this.offset && this.running;
    }
    /**
     * Iterates through the buffer, calling the function corresponding to the current state.
     *
     * States that are more likely to be hit are higher up, as a performance improvement.
     */

  }, {
    key: "parse",
    value: function parse() {
      while (this.shouldContinue()) {
        var c = this.buffer.charCodeAt(this.index - this.offset);

        switch (this.state) {
          case State.Text:
            {
              this.stateText(c);
              break;
            }

          case State.SpecialStartSequence:
            {
              this.stateSpecialStartSequence(c);
              break;
            }

          case State.InSpecialTag:
            {
              this.stateInSpecialTag(c);
              break;
            }

          case State.CDATASequence:
            {
              this.stateCDATASequence(c);
              break;
            }

          case State.InAttributeValueDq:
            {
              this.stateInAttributeValueDoubleQuotes(c);
              break;
            }

          case State.InAttributeName:
            {
              this.stateInAttributeName(c);
              break;
            }

          case State.InCommentLike:
            {
              this.stateInCommentLike(c);
              break;
            }

          case State.InSpecialComment:
            {
              this.stateInSpecialComment(c);
              break;
            }

          case State.BeforeAttributeName:
            {
              this.stateBeforeAttributeName(c);
              break;
            }

          case State.InTagName:
            {
              this.stateInTagName(c);
              break;
            }

          case State.InClosingTagName:
            {
              this.stateInClosingTagName(c);
              break;
            }

          case State.BeforeTagName:
            {
              this.stateBeforeTagName(c);
              break;
            }

          case State.AfterAttributeName:
            {
              this.stateAfterAttributeName(c);
              break;
            }

          case State.InAttributeValueSq:
            {
              this.stateInAttributeValueSingleQuotes(c);
              break;
            }

          case State.BeforeAttributeValue:
            {
              this.stateBeforeAttributeValue(c);
              break;
            }

          case State.BeforeClosingTagName:
            {
              this.stateBeforeClosingTagName(c);
              break;
            }

          case State.AfterClosingTagName:
            {
              this.stateAfterClosingTagName(c);
              break;
            }

          case State.BeforeSpecialS:
            {
              this.stateBeforeSpecialS(c);
              break;
            }

          case State.InAttributeValueNq:
            {
              this.stateInAttributeValueNoQuotes(c);
              break;
            }

          case State.InSelfClosingTag:
            {
              this.stateInSelfClosingTag(c);
              break;
            }

          case State.InDeclaration:
            {
              this.stateInDeclaration(c);
              break;
            }

          case State.BeforeDeclaration:
            {
              this.stateBeforeDeclaration(c);
              break;
            }

          case State.BeforeComment:
            {
              this.stateBeforeComment(c);
              break;
            }

          case State.InProcessingInstruction:
            {
              this.stateInProcessingInstruction(c);
              break;
            }

          case State.InNamedEntity:
            {
              this.stateInNamedEntity(c);
              break;
            }

          case State.BeforeEntity:
            {
              this.stateBeforeEntity(c);
              break;
            }

          case State.InHexEntity:
            {
              this.stateInHexEntity(c);
              break;
            }

          case State.InNumericEntity:
            {
              this.stateInNumericEntity(c);
              break;
            }

          default:
            {
              // `this._state === State.BeforeNumericEntity`
              this.stateBeforeNumericEntity(c);
            }
        }

        this.index++;
      }

      this.cleanup();
    }
  }, {
    key: "finish",
    value: function finish() {
      if (this.state === State.InNamedEntity) {
        this.emitNamedEntity();
      } // If there is remaining data, emit it in a reasonable way


      if (this.sectionStart < this.index) {
        this.handleTrailingData();
      }

      this.cbs.onend();
    }
    /** Handle any trailing data. */

  }, {
    key: "handleTrailingData",
    value: function handleTrailingData() {
      var endIndex = this.buffer.length + this.offset;

      if (this.state === State.InCommentLike) {
        if (this.currentSequence === Sequences.CdataEnd) {
          this.cbs.oncdata(this.sectionStart, endIndex, 0);
        } else {
          this.cbs.oncomment(this.sectionStart, endIndex, 0);
        }
      } else if (this.state === State.InNumericEntity && this.allowLegacyEntity()) {
        this.emitNumericEntity(false); // All trailing data will have been consumed
      } else if (this.state === State.InHexEntity && this.allowLegacyEntity()) {
        this.emitNumericEntity(false); // All trailing data will have been consumed
      } else if (this.state === State.InTagName || this.state === State.BeforeAttributeName || this.state === State.BeforeAttributeValue || this.state === State.AfterAttributeName || this.state === State.InAttributeName || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueDq || this.state === State.InAttributeValueNq || this.state === State.InClosingTagName) {
        /*
         * If we are currently in an opening or closing tag, us not calling the
         * respective callback signals that the tag should be ignored.
         */
      } else {
        this.cbs.ontext(this.sectionStart, endIndex);
      }
    }
  }, {
    key: "emitPartial",
    value: function emitPartial(start, endIndex) {
      if (this.baseState !== State.Text && this.baseState !== State.InSpecialTag) {
        this.cbs.onattribdata(start, endIndex);
      } else {
        this.cbs.ontext(start, endIndex);
      }
    }
  }, {
    key: "emitCodePoint",
    value: function emitCodePoint(cp) {
      if (this.baseState !== State.Text && this.baseState !== State.InSpecialTag) {
        this.cbs.onattribentity(cp);
      } else {
        this.cbs.ontextentity(cp);
      }
    }
  }]);

  return Tokenizer;
}();


// CONCATENATED MODULE: ./node_modules/htmlparser2/lib/esm/Parser.js
function Parser_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function Parser_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function Parser_createClass(Constructor, protoProps, staticProps) { if (protoProps) Parser_defineProperties(Constructor.prototype, protoProps); if (staticProps) Parser_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }



var formTags = new Set(["input", "option", "optgroup", "select", "button", "datalist", "textarea"]);
var pTag = new Set(["p"]);
var tableSectionTags = new Set(["thead", "tbody"]);
var ddtTags = new Set(["dd", "dt"]);
var rtpTags = new Set(["rt", "rp"]);
var openImpliesClose = new Map([["tr", new Set(["tr", "th", "td"])], ["th", new Set(["th"])], ["td", new Set(["thead", "th", "td"])], ["body", new Set(["head", "link", "script"])], ["li", new Set(["li"])], ["p", pTag], ["h1", pTag], ["h2", pTag], ["h3", pTag], ["h4", pTag], ["h5", pTag], ["h6", pTag], ["select", formTags], ["input", formTags], ["output", formTags], ["button", formTags], ["datalist", formTags], ["textarea", formTags], ["option", new Set(["option"])], ["optgroup", new Set(["optgroup", "option"])], ["dd", ddtTags], ["dt", ddtTags], ["address", pTag], ["article", pTag], ["aside", pTag], ["blockquote", pTag], ["details", pTag], ["div", pTag], ["dl", pTag], ["fieldset", pTag], ["figcaption", pTag], ["figure", pTag], ["footer", pTag], ["form", pTag], ["header", pTag], ["hr", pTag], ["main", pTag], ["nav", pTag], ["ol", pTag], ["pre", pTag], ["section", pTag], ["table", pTag], ["ul", pTag], ["rt", rtpTags], ["rp", rtpTags], ["tbody", tableSectionTags], ["tfoot", tableSectionTags]]);
var voidElements = new Set(["area", "base", "basefont", "br", "col", "command", "embed", "frame", "hr", "img", "input", "isindex", "keygen", "link", "meta", "param", "source", "track", "wbr"]);
var foreignContextElements = new Set(["math", "svg"]);
var htmlIntegrationElements = new Set(["mi", "mo", "mn", "ms", "mtext", "annotation-xml", "foreignobject", "desc", "title"]);
var reNameEnd = /\s|\//;
var Parser_Parser = /*#__PURE__*/function () {
  function Parser(cbs) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    Parser_classCallCheck(this, Parser);

    var _a, _b, _c, _d, _e;

    this.options = options;
    /** The start index of the last event. */

    this.startIndex = 0;
    /** The end index of the last event. */

    this.endIndex = 0;
    /**
     * Store the start index of the current open tag,
     * so we can update the start index for attributes.
     */

    this.openTagStart = 0;
    this.tagname = "";
    this.attribname = "";
    this.attribvalue = "";
    this.attribs = null;
    this.stack = [];
    this.foreignContext = [];
    this.buffers = [];
    this.bufferOffset = 0;
    /** The index of the last written buffer. Used when resuming after a `pause()`. */

    this.writeIndex = 0;
    /** Indicates whether the parser has finished running / `.end` has been called. */

    this.ended = false;
    this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};
    this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : !options.xmlMode;
    this.lowerCaseAttributeNames = (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : !options.xmlMode;
    this.tokenizer = new ((_c = options.Tokenizer) !== null && _c !== void 0 ? _c : Tokenizer_Tokenizer)(this.options, this);
    (_e = (_d = this.cbs).onparserinit) === null || _e === void 0 ? void 0 : _e.call(_d, this);
  } // Tokenizer event handlers

  /** @internal */


  Parser_createClass(Parser, [{
    key: "ontext",
    value: function ontext(start, endIndex) {
      var _a, _b;

      var data = this.getSlice(start, endIndex);
      this.endIndex = endIndex - 1;
      (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);
      this.startIndex = endIndex;
    }
    /** @internal */

  }, {
    key: "ontextentity",
    value: function ontextentity(cp) {
      var _a, _b;
      /*
       * Entities can be emitted on the character, or directly after.
       * We use the section start here to get accurate indices.
       */


      var index = this.tokenizer.getSectionStart();
      this.endIndex = index - 1;
      (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, Object(lib_decode["fromCodePoint"])(cp));
      this.startIndex = index;
    }
  }, {
    key: "isVoidElement",
    value: function isVoidElement(name) {
      return !this.options.xmlMode && voidElements.has(name);
    }
    /** @internal */

  }, {
    key: "onopentagname",
    value: function onopentagname(start, endIndex) {
      this.endIndex = endIndex;
      var name = this.getSlice(start, endIndex);

      if (this.lowerCaseTagNames) {
        name = name.toLowerCase();
      }

      this.emitOpenTag(name);
    }
  }, {
    key: "emitOpenTag",
    value: function emitOpenTag(name) {
      var _a, _b, _c, _d;

      this.openTagStart = this.startIndex;
      this.tagname = name;
      var impliesClose = !this.options.xmlMode && openImpliesClose.get(name);

      if (impliesClose) {
        while (this.stack.length > 0 && impliesClose.has(this.stack[this.stack.length - 1])) {
          var element = this.stack.pop();
          (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, true);
        }
      }

      if (!this.isVoidElement(name)) {
        this.stack.push(name);

        if (foreignContextElements.has(name)) {
          this.foreignContext.push(true);
        } else if (htmlIntegrationElements.has(name)) {
          this.foreignContext.push(false);
        }
      }

      (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);
      if (this.cbs.onopentag) this.attribs = {};
    }
  }, {
    key: "endOpenTag",
    value: function endOpenTag(isImplied) {
      var _a, _b;

      this.startIndex = this.openTagStart;

      if (this.attribs) {
        (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);
        this.attribs = null;
      }

      if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {
        this.cbs.onclosetag(this.tagname, true);
      }

      this.tagname = "";
    }
    /** @internal */

  }, {
    key: "onopentagend",
    value: function onopentagend(endIndex) {
      this.endIndex = endIndex;
      this.endOpenTag(false); // Set `startIndex` for next node

      this.startIndex = endIndex + 1;
    }
    /** @internal */

  }, {
    key: "onclosetag",
    value: function onclosetag(start, endIndex) {
      var _a, _b, _c, _d, _e, _f;

      this.endIndex = endIndex;
      var name = this.getSlice(start, endIndex);

      if (this.lowerCaseTagNames) {
        name = name.toLowerCase();
      }

      if (foreignContextElements.has(name) || htmlIntegrationElements.has(name)) {
        this.foreignContext.pop();
      }

      if (!this.isVoidElement(name)) {
        var pos = this.stack.lastIndexOf(name);

        if (pos !== -1) {
          if (this.cbs.onclosetag) {
            var count = this.stack.length - pos;

            while (count--) {
              // We know the stack has sufficient elements.
              this.cbs.onclosetag(this.stack.pop(), count !== 0);
            }
          } else this.stack.length = pos;
        } else if (!this.options.xmlMode && name === "p") {
          // Implicit open before close
          this.emitOpenTag("p");
          this.closeCurrentTag(true);
        }
      } else if (!this.options.xmlMode && name === "br") {
        // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.
        (_b = (_a = this.cbs).onopentagname) === null || _b === void 0 ? void 0 : _b.call(_a, "br");
        (_d = (_c = this.cbs).onopentag) === null || _d === void 0 ? void 0 : _d.call(_c, "br", {}, true);
        (_f = (_e = this.cbs).onclosetag) === null || _f === void 0 ? void 0 : _f.call(_e, "br", false);
      } // Set `startIndex` for next node


      this.startIndex = endIndex + 1;
    }
    /** @internal */

  }, {
    key: "onselfclosingtag",
    value: function onselfclosingtag(endIndex) {
      this.endIndex = endIndex;

      if (this.options.xmlMode || this.options.recognizeSelfClosing || this.foreignContext[this.foreignContext.length - 1]) {
        this.closeCurrentTag(false); // Set `startIndex` for next node

        this.startIndex = endIndex + 1;
      } else {
        // Ignore the fact that the tag is self-closing.
        this.onopentagend(endIndex);
      }
    }
  }, {
    key: "closeCurrentTag",
    value: function closeCurrentTag(isOpenImplied) {
      var _a, _b;

      var name = this.tagname;
      this.endOpenTag(isOpenImplied); // Self-closing tags will be on the top of the stack

      if (this.stack[this.stack.length - 1] === name) {
        // If the opening tag isn't implied, the closing tag has to be implied.
        (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);
        this.stack.pop();
      }
    }
    /** @internal */

  }, {
    key: "onattribname",
    value: function onattribname(start, endIndex) {
      this.startIndex = start;
      var name = this.getSlice(start, endIndex);
      this.attribname = this.lowerCaseAttributeNames ? name.toLowerCase() : name;
    }
    /** @internal */

  }, {
    key: "onattribdata",
    value: function onattribdata(start, endIndex) {
      this.attribvalue += this.getSlice(start, endIndex);
    }
    /** @internal */

  }, {
    key: "onattribentity",
    value: function onattribentity(cp) {
      this.attribvalue += Object(lib_decode["fromCodePoint"])(cp);
    }
    /** @internal */

  }, {
    key: "onattribend",
    value: function onattribend(quote, endIndex) {
      var _a, _b;

      this.endIndex = endIndex;
      (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote === QuoteType.Double ? '"' : quote === QuoteType.Single ? "'" : quote === QuoteType.NoValue ? undefined : null);

      if (this.attribs && !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {
        this.attribs[this.attribname] = this.attribvalue;
      }

      this.attribvalue = "";
    }
  }, {
    key: "getInstructionName",
    value: function getInstructionName(value) {
      var index = value.search(reNameEnd);
      var name = index < 0 ? value : value.substr(0, index);

      if (this.lowerCaseTagNames) {
        name = name.toLowerCase();
      }

      return name;
    }
    /** @internal */

  }, {
    key: "ondeclaration",
    value: function ondeclaration(start, endIndex) {
      this.endIndex = endIndex;
      var value = this.getSlice(start, endIndex);

      if (this.cbs.onprocessinginstruction) {
        var name = this.getInstructionName(value);
        this.cbs.onprocessinginstruction("!".concat(name), "!".concat(value));
      } // Set `startIndex` for next node


      this.startIndex = endIndex + 1;
    }
    /** @internal */

  }, {
    key: "onprocessinginstruction",
    value: function onprocessinginstruction(start, endIndex) {
      this.endIndex = endIndex;
      var value = this.getSlice(start, endIndex);

      if (this.cbs.onprocessinginstruction) {
        var name = this.getInstructionName(value);
        this.cbs.onprocessinginstruction("?".concat(name), "?".concat(value));
      } // Set `startIndex` for next node


      this.startIndex = endIndex + 1;
    }
    /** @internal */

  }, {
    key: "oncomment",
    value: function oncomment(start, endIndex, offset) {
      var _a, _b, _c, _d;

      this.endIndex = endIndex;
      (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, this.getSlice(start, endIndex - offset));
      (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c); // Set `startIndex` for next node

      this.startIndex = endIndex + 1;
    }
    /** @internal */

  }, {
    key: "oncdata",
    value: function oncdata(start, endIndex, offset) {
      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;

      this.endIndex = endIndex;
      var value = this.getSlice(start, endIndex - offset);

      if (this.options.xmlMode || this.options.recognizeCDATA) {
        (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);
        (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);
        (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);
      } else {
        (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, "[CDATA[".concat(value, "]]"));
        (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);
      } // Set `startIndex` for next node


      this.startIndex = endIndex + 1;
    }
    /** @internal */

  }, {
    key: "onend",
    value: function onend() {
      var _a, _b;

      if (this.cbs.onclosetag) {
        // Set the end index for all remaining tags
        this.endIndex = this.startIndex;

        for (var index = this.stack.length; index > 0; this.cbs.onclosetag(this.stack[--index], true)) {
          ;
        }
      }

      (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);
    }
    /**
     * Resets the parser to a blank state, ready to parse a new HTML document
     */

  }, {
    key: "reset",
    value: function reset() {
      var _a, _b, _c, _d;

      (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);
      this.tokenizer.reset();
      this.tagname = "";
      this.attribname = "";
      this.attribs = null;
      this.stack.length = 0;
      this.startIndex = 0;
      this.endIndex = 0;
      (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);
      this.buffers.length = 0;
      this.bufferOffset = 0;
      this.writeIndex = 0;
      this.ended = false;
    }
    /**
     * Resets the parser, then parses a complete document and
     * pushes it to the handler.
     *
     * @param data Document to parse.
     */

  }, {
    key: "parseComplete",
    value: function parseComplete(data) {
      this.reset();
      this.end(data);
    }
  }, {
    key: "getSlice",
    value: function getSlice(start, end) {
      while (start - this.bufferOffset >= this.buffers[0].length) {
        this.shiftBuffer();
      }

      var slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);

      while (end - this.bufferOffset > this.buffers[0].length) {
        this.shiftBuffer();
        slice += this.buffers[0].slice(0, end - this.bufferOffset);
      }

      return slice;
    }
  }, {
    key: "shiftBuffer",
    value: function shiftBuffer() {
      this.bufferOffset += this.buffers[0].length;
      this.writeIndex--;
      this.buffers.shift();
    }
    /**
     * Parses a chunk of data and calls the corresponding callbacks.
     *
     * @param chunk Chunk to parse.
     */

  }, {
    key: "write",
    value: function write(chunk) {
      var _a, _b;

      if (this.ended) {
        (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(".write() after done!"));
        return;
      }

      this.buffers.push(chunk);

      if (this.tokenizer.running) {
        this.tokenizer.write(chunk);
        this.writeIndex++;
      }
    }
    /**
     * Parses the end of the buffer and clears the stack, calls onend.
     *
     * @param chunk Optional final chunk to parse.
     */

  }, {
    key: "end",
    value: function end(chunk) {
      var _a, _b;

      if (this.ended) {
        (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(".end() after done!"));
        return;
      }

      if (chunk) this.write(chunk);
      this.ended = true;
      this.tokenizer.end();
    }
    /**
     * Pauses parsing. The parser won't emit events until `resume` is called.
     */

  }, {
    key: "pause",
    value: function pause() {
      this.tokenizer.pause();
    }
    /**
     * Resumes parsing after `pause` was called.
     */

  }, {
    key: "resume",
    value: function resume() {
      this.tokenizer.resume();

      while (this.tokenizer.running && this.writeIndex < this.buffers.length) {
        this.tokenizer.write(this.buffers[this.writeIndex++]);
      }

      if (this.ended) this.tokenizer.end();
    }
    /**
     * Alias of `write`, for backwards compatibility.
     *
     * @param chunk Chunk to parse.
     * @deprecated
     */

  }, {
    key: "parseChunk",
    value: function parseChunk(chunk) {
      this.write(chunk);
    }
    /**
     * Alias of `end`, for backwards compatibility.
     *
     * @param chunk Optional final chunk to parse.
     * @deprecated
     */

  }, {
    key: "done",
    value: function done(chunk) {
      this.end(chunk);
    }
  }]);

  return Parser;
}();
// CONCATENATED MODULE: ./node_modules/htmlparser2/node_modules/domutils/lib/esm/stringify.js



/**
 * @category Stringify
 * @deprecated Use the `dom-serializer` module directly.
 * @param node Node to get the outer HTML of.
 * @param options Options for serialization.
 * @returns `node`'s outer HTML.
 */

function stringify_getOuterHTML(node, options) {
  return esm(node, options);
}
/**
 * @category Stringify
 * @deprecated Use the `dom-serializer` module directly.
 * @param node Node to get the inner HTML of.
 * @param options Options for serialization.
 * @returns `node`'s inner HTML.
 */

function stringify_getInnerHTML(node, options) {
  return hasChildren(node) ? node.children.map(function (node) {
    return stringify_getOuterHTML(node, options);
  }).join("") : "";
}
/**
 * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags. Ignores comments.
 *
 * @category Stringify
 * @deprecated Use `textContent` instead.
 * @param node Node to get the inner text of.
 * @returns `node`'s inner text.
 */

function stringify_getText(node) {
  if (Array.isArray(node)) return node.map(stringify_getText).join("");
  if (node_isTag(node)) return node.name === "br" ? "\n" : stringify_getText(node.children);
  if (isCDATA(node)) return stringify_getText(node.children);
  if (isText(node)) return node.data;
  return "";
}
/**
 * Get a node's text content. Ignores comments.
 *
 * @category Stringify
 * @param node Node to get the text content of.
 * @returns `node`'s text content.
 * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}
 */

function stringify_textContent(node) {
  if (Array.isArray(node)) return node.map(stringify_textContent).join("");

  if (hasChildren(node) && !isComment(node)) {
    return stringify_textContent(node.children);
  }

  if (isText(node)) return node.data;
  return "";
}
/**
 * Get a node's inner text, ignoring `<script>` and `<style>` tags. Ignores comments.
 *
 * @category Stringify
 * @param node Node to get the inner text of.
 * @returns `node`'s inner text.
 * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}
 */

function stringify_innerText(node) {
  if (Array.isArray(node)) return node.map(stringify_innerText).join("");

  if (hasChildren(node) && (node.type === ElementType.Tag || isCDATA(node))) {
    return stringify_innerText(node.children);
  }

  if (isText(node)) return node.data;
  return "";
}
// CONCATENATED MODULE: ./node_modules/htmlparser2/node_modules/domutils/lib/esm/traversal.js

/**
 * Get a node's children.
 *
 * @category Traversal
 * @param elem Node to get the children of.
 * @returns `elem`'s children, or an empty array.
 */

function traversal_getChildren(elem) {
  return hasChildren(elem) ? elem.children : [];
}
/**
 * Get a node's parent.
 *
 * @category Traversal
 * @param elem Node to get the parent of.
 * @returns `elem`'s parent node, or `null` if `elem` is a root node.
 */

function traversal_getParent(elem) {
  return elem.parent || null;
}
/**
 * Gets an elements siblings, including the element itself.
 *
 * Attempts to get the children through the element's parent first. If we don't
 * have a parent (the element is a root node), we walk the element's `prev` &
 * `next` to get all remaining nodes.
 *
 * @category Traversal
 * @param elem Element to get the siblings of.
 * @returns `elem`'s siblings, including `elem`.
 */

function traversal_getSiblings(elem) {
  var parent = traversal_getParent(elem);
  if (parent != null) return traversal_getChildren(parent);
  var siblings = [elem];
  var prev = elem.prev,
      next = elem.next;

  while (prev != null) {
    siblings.unshift(prev);
    var _prev = prev;
    prev = _prev.prev;
  }

  while (next != null) {
    siblings.push(next);
    var _next = next;
    next = _next.next;
  }

  return siblings;
}
/**
 * Gets an attribute from an element.
 *
 * @category Traversal
 * @param elem Element to check.
 * @param name Attribute name to retrieve.
 * @returns The element's attribute value, or `undefined`.
 */

function traversal_getAttributeValue(elem, name) {
  var _a;

  return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];
}
/**
 * Checks whether an element has an attribute.
 *
 * @category Traversal
 * @param elem Element to check.
 * @param name Attribute name to look for.
 * @returns Returns whether `elem` has the attribute `name`.
 */

function traversal_hasAttrib(elem, name) {
  return elem.attribs != null && Object.prototype.hasOwnProperty.call(elem.attribs, name) && elem.attribs[name] != null;
}
/**
 * Get the tag name of an element.
 *
 * @category Traversal
 * @param elem The element to get the name for.
 * @returns The tag name of `elem`.
 */

function traversal_getName(elem) {
  return elem.name;
}
/**
 * Returns the next element sibling of a node.
 *
 * @category Traversal
 * @param elem The element to get the next sibling of.
 * @returns `elem`'s next sibling that is a tag, or `null` if there is no next
 * sibling.
 */

function traversal_nextElementSibling(elem) {
  var next = elem.next;

  while (next !== null && !node_isTag(next)) {
    var _next2 = next;
    next = _next2.next;
  }

  return next;
}
/**
 * Returns the previous element sibling of a node.
 *
 * @category Traversal
 * @param elem The element to get the previous sibling of.
 * @returns `elem`'s previous sibling that is a tag, or `null` if there is no
 * previous sibling.
 */

function traversal_prevElementSibling(elem) {
  var prev = elem.prev;

  while (prev !== null && !node_isTag(prev)) {
    var _prev2 = prev;
    prev = _prev2.prev;
  }

  return prev;
}
// CONCATENATED MODULE: ./node_modules/htmlparser2/node_modules/domutils/lib/esm/manipulation.js
/**
 * Remove an element from the dom
 *
 * @category Manipulation
 * @param elem The element to be removed
 */
function manipulation_removeElement(elem) {
  if (elem.prev) elem.prev.next = elem.next;
  if (elem.next) elem.next.prev = elem.prev;

  if (elem.parent) {
    var childs = elem.parent.children;
    var childsIndex = childs.lastIndexOf(elem);

    if (childsIndex >= 0) {
      childs.splice(childsIndex, 1);
    }
  }

  elem.next = null;
  elem.prev = null;
  elem.parent = null;
}
/**
 * Replace an element in the dom
 *
 * @category Manipulation
 * @param elem The element to be replaced
 * @param replacement The element to be added
 */

function manipulation_replaceElement(elem, replacement) {
  var prev = replacement.prev = elem.prev;

  if (prev) {
    prev.next = replacement;
  }

  var next = replacement.next = elem.next;

  if (next) {
    next.prev = replacement;
  }

  var parent = replacement.parent = elem.parent;

  if (parent) {
    var childs = parent.children;
    childs[childs.lastIndexOf(elem)] = replacement;
    elem.parent = null;
  }
}
/**
 * Append a child to an element.
 *
 * @category Manipulation
 * @param parent The element to append to.
 * @param child The element to be added as a child.
 */

function manipulation_appendChild(parent, child) {
  manipulation_removeElement(child);
  child.next = null;
  child.parent = parent;

  if (parent.children.push(child) > 1) {
    var sibling = parent.children[parent.children.length - 2];
    sibling.next = child;
    child.prev = sibling;
  } else {
    child.prev = null;
  }
}
/**
 * Append an element after another.
 *
 * @category Manipulation
 * @param elem The element to append after.
 * @param next The element be added.
 */

function manipulation_append(elem, next) {
  manipulation_removeElement(next);
  var parent = elem.parent;
  var currNext = elem.next;
  next.next = currNext;
  next.prev = elem;
  elem.next = next;
  next.parent = parent;

  if (currNext) {
    currNext.prev = next;

    if (parent) {
      var childs = parent.children;
      childs.splice(childs.lastIndexOf(currNext), 0, next);
    }
  } else if (parent) {
    parent.children.push(next);
  }
}
/**
 * Prepend a child to an element.
 *
 * @category Manipulation
 * @param parent The element to prepend before.
 * @param child The element to be added as a child.
 */

function manipulation_prependChild(parent, child) {
  manipulation_removeElement(child);
  child.parent = parent;
  child.prev = null;

  if (parent.children.unshift(child) !== 1) {
    var sibling = parent.children[1];
    sibling.prev = child;
    child.next = sibling;
  } else {
    child.next = null;
  }
}
/**
 * Prepend an element before another.
 *
 * @category Manipulation
 * @param elem The element to prepend before.
 * @param prev The element be added.
 */

function manipulation_prepend(elem, prev) {
  manipulation_removeElement(prev);
  var parent = elem.parent;

  if (parent) {
    var childs = parent.children;
    childs.splice(childs.indexOf(elem), 0, prev);
  }

  if (elem.prev) {
    elem.prev.next = prev;
  }

  prev.parent = parent;
  prev.prev = elem.prev;
  prev.next = elem;
  elem.prev = prev;
}
// CONCATENATED MODULE: ./node_modules/htmlparser2/node_modules/domutils/lib/esm/querying.js

/**
 * Search a node and its children for nodes passing a test function. If `node` is not an array, it will be wrapped in one.
 *
 * @category Querying
 * @param test Function to test nodes on.
 * @param node Node to search. Will be included in the result set if it matches.
 * @param recurse Also consider child nodes.
 * @param limit Maximum number of nodes to return.
 * @returns All nodes passing `test`.
 */

function esm_querying_filter(test, node) {
  var recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;
  return querying_find(test, Array.isArray(node) ? node : [node], recurse, limit);
}
/**
 * Search an array of nodes and their children for nodes passing a test function.
 *
 * @category Querying
 * @param test Function to test nodes on.
 * @param nodes Array of nodes to search.
 * @param recurse Also consider child nodes.
 * @param limit Maximum number of nodes to return.
 * @returns All nodes passing `test`.
 */

function querying_find(test, nodes, recurse, limit) {
  var result = [];
  /** Stack of the arrays we are looking at. */

  var nodeStack = [nodes];
  /** Stack of the indices within the arrays. */

  var indexStack = [0];

  for (;;) {
    // First, check if the current array has any more elements to look at.
    if (indexStack[0] >= nodeStack[0].length) {
      // If we have no more arrays to look at, we are done.
      if (indexStack.length === 1) {
        return result;
      } // Otherwise, remove the current array from the stack.


      nodeStack.shift();
      indexStack.shift(); // Loop back to the start to continue with the next array.

      continue;
    }

    var elem = nodeStack[0][indexStack[0]++];

    if (test(elem)) {
      result.push(elem);
      if (--limit <= 0) return result;
    }

    if (recurse && hasChildren(elem) && elem.children.length > 0) {
      /*
       * Add the children to the stack. We are depth-first, so this is
       * the next array we look at.
       */
      indexStack.unshift(0);
      nodeStack.unshift(elem.children);
    }
  }
}
/**
 * Finds the first element inside of an array that matches a test function. This is an alias for `Array.prototype.find`.
 *
 * @category Querying
 * @param test Function to test nodes on.
 * @param nodes Array of nodes to search.
 * @returns The first node in the array that passes `test`.
 * @deprecated Use `Array.prototype.find` directly.
 */

function querying_findOneChild(test, nodes) {
  return nodes.find(test);
}
/**
 * Finds one element in a tree that passes a test.
 *
 * @category Querying
 * @param test Function to test nodes on.
 * @param nodes Node or array of nodes to search.
 * @param recurse Also consider child nodes.
 * @returns The first node that passes `test`.
 */

function querying_findOne(test, nodes) {
  var recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var elem = null;

  for (var i = 0; i < nodes.length && !elem; i++) {
    var node = nodes[i];

    if (!node_isTag(node)) {
      continue;
    } else if (test(node)) {
      elem = node;
    } else if (recurse && node.children.length > 0) {
      elem = querying_findOne(test, node.children, true);
    }
  }

  return elem;
}
/**
 * Checks if a tree of nodes contains at least one node passing a test.
 *
 * @category Querying
 * @param test Function to test nodes on.
 * @param nodes Array of nodes to search.
 * @returns Whether a tree of nodes contains at least one node passing the test.
 */

function querying_existsOne(test, nodes) {
  return nodes.some(function (checked) {
    return node_isTag(checked) && (test(checked) || querying_existsOne(test, checked.children));
  });
}
/**
 * Search an array of nodes and their children for elements passing a test function.
 *
 * Same as `find`, but limited to elements and with less options, leading to reduced complexity.
 *
 * @category Querying
 * @param test Function to test nodes on.
 * @param nodes Array of nodes to search.
 * @returns All nodes passing `test`.
 */

function querying_findAll(test, nodes) {
  var result = [];
  var nodeStack = [nodes];
  var indexStack = [0];

  for (;;) {
    if (indexStack[0] >= nodeStack[0].length) {
      if (nodeStack.length === 1) {
        return result;
      } // Otherwise, remove the current array from the stack.


      nodeStack.shift();
      indexStack.shift(); // Loop back to the start to continue with the next array.

      continue;
    }

    var elem = nodeStack[0][indexStack[0]++];
    if (!node_isTag(elem)) continue;
    if (test(elem)) result.push(elem);

    if (elem.children.length > 0) {
      indexStack.unshift(0);
      nodeStack.unshift(elem.children);
    }
  }
}
// CONCATENATED MODULE: ./node_modules/htmlparser2/node_modules/domutils/lib/esm/legacy.js


/**
 * A map of functions to check nodes against.
 */

var legacy_Checks = {
  tag_name: function tag_name(name) {
    if (typeof name === "function") {
      return function (elem) {
        return node_isTag(elem) && name(elem.name);
      };
    } else if (name === "*") {
      return node_isTag;
    }

    return function (elem) {
      return node_isTag(elem) && elem.name === name;
    };
  },
  tag_type: function tag_type(type) {
    if (typeof type === "function") {
      return function (elem) {
        return type(elem.type);
      };
    }

    return function (elem) {
      return elem.type === type;
    };
  },
  tag_contains: function tag_contains(data) {
    if (typeof data === "function") {
      return function (elem) {
        return isText(elem) && data(elem.data);
      };
    }

    return function (elem) {
      return isText(elem) && elem.data === data;
    };
  }
};
/**
 * Returns a function to check whether a node has an attribute with a particular
 * value.
 *
 * @param attrib Attribute to check.
 * @param value Attribute value to look for.
 * @returns A function to check whether the a node has an attribute with a
 *   particular value.
 */

function legacy_getAttribCheck(attrib, value) {
  if (typeof value === "function") {
    return function (elem) {
      return node_isTag(elem) && value(elem.attribs[attrib]);
    };
  }

  return function (elem) {
    return node_isTag(elem) && elem.attribs[attrib] === value;
  };
}
/**
 * Returns a function that returns `true` if either of the input functions
 * returns `true` for a node.
 *
 * @param a First function to combine.
 * @param b Second function to combine.
 * @returns A function taking a node and returning `true` if either of the input
 *   functions returns `true` for the node.
 */


function legacy_combineFuncs(a, b) {
  return function (elem) {
    return a(elem) || b(elem);
  };
}
/**
 * Returns a function that executes all checks in `options` and returns `true`
 * if any of them match a node.
 *
 * @param options An object describing nodes to look for.
 * @returns A function that executes all checks in `options` and returns `true`
 *   if any of them match a node.
 */


function legacy_compileTest(options) {
  var funcs = Object.keys(options).map(function (key) {
    var value = options[key];
    return Object.prototype.hasOwnProperty.call(legacy_Checks, key) ? legacy_Checks[key](value) : legacy_getAttribCheck(key, value);
  });
  return funcs.length === 0 ? null : funcs.reduce(legacy_combineFuncs);
}
/**
 * Checks whether a node matches the description in `options`.
 *
 * @category Legacy Query Functions
 * @param options An object describing nodes to look for.
 * @param node The element to test.
 * @returns Whether the element matches the description in `options`.
 */


function legacy_testElement(options, node) {
  var test = legacy_compileTest(options);
  return test ? test(node) : true;
}
/**
 * Returns all nodes that match `options`.
 *
 * @category Legacy Query Functions
 * @param options An object describing nodes to look for.
 * @param nodes Nodes to search through.
 * @param recurse Also consider child nodes.
 * @param limit Maximum number of nodes to return.
 * @returns All nodes that match `options`.
 */

function legacy_getElements(options, nodes, recurse) {
  var limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;
  var test = legacy_compileTest(options);
  return test ? esm_querying_filter(test, nodes, recurse, limit) : [];
}
/**
 * Returns the node with the supplied ID.
 *
 * @category Legacy Query Functions
 * @param id The unique ID attribute value to look for.
 * @param nodes Nodes to search through.
 * @param recurse Also consider child nodes.
 * @returns The node with the supplied ID.
 */

function legacy_getElementById(id, nodes) {
  var recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  if (!Array.isArray(nodes)) nodes = [nodes];
  return querying_findOne(legacy_getAttribCheck("id", id), nodes, recurse);
}
/**
 * Returns all nodes with the supplied `tagName`.
 *
 * @category Legacy Query Functions
 * @param tagName Tag name to search for.
 * @param nodes Nodes to search through.
 * @param recurse Also consider child nodes.
 * @param limit Maximum number of nodes to return.
 * @returns All nodes with the supplied `tagName`.
 */

function legacy_getElementsByTagName(tagName, nodes) {
  var recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;
  return esm_querying_filter(legacy_Checks["tag_name"](tagName), nodes, recurse, limit);
}
/**
 * Returns all nodes with the supplied `type`.
 *
 * @category Legacy Query Functions
 * @param type Element type to look for.
 * @param nodes Nodes to search through.
 * @param recurse Also consider child nodes.
 * @param limit Maximum number of nodes to return.
 * @returns All nodes with the supplied `type`.
 */

function legacy_getElementsByTagType(type, nodes) {
  var recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;
  return esm_querying_filter(legacy_Checks["tag_type"](type), nodes, recurse, limit);
}
// CONCATENATED MODULE: ./node_modules/htmlparser2/node_modules/domutils/lib/esm/helpers.js

/**
 * Given an array of nodes, remove any member that is contained by another
 * member.
 *
 * @category Helpers
 * @param nodes Nodes to filter.
 * @returns Remaining nodes that aren't contained by other nodes.
 */

function helpers_removeSubsets(nodes) {
  var idx = nodes.length;
  /*
   * Check if each node (or one of its ancestors) is already contained in the
   * array.
   */

  while (--idx >= 0) {
    var node = nodes[idx];
    /*
     * Remove the node if it is not unique.
     * We are going through the array from the end, so we only
     * have to check nodes that preceed the node under consideration in the array.
     */

    if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {
      nodes.splice(idx, 1);
      continue;
    }

    for (var ancestor = node.parent; ancestor; ancestor = ancestor.parent) {
      if (nodes.includes(ancestor)) {
        nodes.splice(idx, 1);
        break;
      }
    }
  }

  return nodes;
}
/**
 * @category Helpers
 * @see {@link http://dom.spec.whatwg.org/#dom-node-comparedocumentposition}
 */

var helpers_DocumentPosition;

(function (DocumentPosition) {
  DocumentPosition[DocumentPosition["DISCONNECTED"] = 1] = "DISCONNECTED";
  DocumentPosition[DocumentPosition["PRECEDING"] = 2] = "PRECEDING";
  DocumentPosition[DocumentPosition["FOLLOWING"] = 4] = "FOLLOWING";
  DocumentPosition[DocumentPosition["CONTAINS"] = 8] = "CONTAINS";
  DocumentPosition[DocumentPosition["CONTAINED_BY"] = 16] = "CONTAINED_BY";
})(helpers_DocumentPosition || (helpers_DocumentPosition = {}));
/**
 * Compare the position of one node against another node in any other document,
 * returning a bitmask with the values from {@link DocumentPosition}.
 *
 * Document order:
 * > There is an ordering, document order, defined on all the nodes in the
 * > document corresponding to the order in which the first character of the
 * > XML representation of each node occurs in the XML representation of the
 * > document after expansion of general entities. Thus, the document element
 * > node will be the first node. Element nodes occur before their children.
 * > Thus, document order orders element nodes in order of the occurrence of
 * > their start-tag in the XML (after expansion of entities). The attribute
 * > nodes of an element occur after the element and before its children. The
 * > relative order of attribute nodes is implementation-dependent.
 *
 * Source:
 * http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order
 *
 * @category Helpers
 * @param nodeA The first node to use in the comparison
 * @param nodeB The second node to use in the comparison
 * @returns A bitmask describing the input nodes' relative position.
 *
 * See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for
 * a description of these values.
 */


function helpers_compareDocumentPosition(nodeA, nodeB) {
  var aParents = [];
  var bParents = [];

  if (nodeA === nodeB) {
    return 0;
  }

  var current = hasChildren(nodeA) ? nodeA : nodeA.parent;

  while (current) {
    aParents.unshift(current);
    current = current.parent;
  }

  current = hasChildren(nodeB) ? nodeB : nodeB.parent;

  while (current) {
    bParents.unshift(current);
    current = current.parent;
  }

  var maxIdx = Math.min(aParents.length, bParents.length);
  var idx = 0;

  while (idx < maxIdx && aParents[idx] === bParents[idx]) {
    idx++;
  }

  if (idx === 0) {
    return helpers_DocumentPosition.DISCONNECTED;
  }

  var sharedParent = aParents[idx - 1];
  var siblings = sharedParent.children;
  var aSibling = aParents[idx];
  var bSibling = bParents[idx];

  if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {
    if (sharedParent === nodeB) {
      return helpers_DocumentPosition.FOLLOWING | helpers_DocumentPosition.CONTAINED_BY;
    }

    return helpers_DocumentPosition.FOLLOWING;
  }

  if (sharedParent === nodeA) {
    return helpers_DocumentPosition.PRECEDING | helpers_DocumentPosition.CONTAINS;
  }

  return helpers_DocumentPosition.PRECEDING;
}
/**
 * Sort an array of nodes based on their relative position in the document,
 * removing any duplicate nodes. If the array contains nodes that do not belong
 * to the same document, sort order is unspecified.
 *
 * @category Helpers
 * @param nodes Array of DOM nodes.
 * @returns Collection of unique nodes, sorted in document order.
 */

function helpers_uniqueSort(nodes) {
  nodes = nodes.filter(function (node, i, arr) {
    return !arr.includes(node, i + 1);
  });
  nodes.sort(function (a, b) {
    var relative = helpers_compareDocumentPosition(a, b);

    if (relative & helpers_DocumentPosition.PRECEDING) {
      return -1;
    } else if (relative & helpers_DocumentPosition.FOLLOWING) {
      return 1;
    }

    return 0;
  });
  return nodes;
}
// CONCATENATED MODULE: ./node_modules/htmlparser2/node_modules/domutils/lib/esm/feeds.js
function esm_feeds_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = esm_feeds_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function esm_feeds_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return esm_feeds_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return esm_feeds_arrayLikeToArray(o, minLen); }

function esm_feeds_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }



/**
 * Get the feed object from the root of a DOM tree.
 *
 * @category Feeds
 * @param doc - The DOM to to extract the feed from.
 * @returns The feed.
 */

function feeds_getFeed(doc) {
  var feedRoot = feeds_getOneElement(feeds_isValidFeed, doc);
  return !feedRoot ? null : feedRoot.name === "feed" ? feeds_getAtomFeed(feedRoot) : feeds_getRssFeed(feedRoot);
}
/**
 * Parse an Atom feed.
 *
 * @param feedRoot The root of the feed.
 * @returns The parsed feed.
 */

function feeds_getAtomFeed(feedRoot) {
  var _a;

  var childs = feedRoot.children;
  var feed = {
    type: "atom",
    items: legacy_getElementsByTagName("entry", childs).map(function (item) {
      var _a;

      var children = item.children;
      var entry = {
        media: feeds_getMediaElements(children)
      };
      feeds_addConditionally(entry, "id", "id", children);
      feeds_addConditionally(entry, "title", "title", children);
      var href = (_a = feeds_getOneElement("link", children)) === null || _a === void 0 ? void 0 : _a.attribs["href"];

      if (href) {
        entry.link = href;
      }

      var description = esm_feeds_fetch("summary", children) || esm_feeds_fetch("content", children);

      if (description) {
        entry.description = description;
      }

      var pubDate = esm_feeds_fetch("updated", children);

      if (pubDate) {
        entry.pubDate = new Date(pubDate);
      }

      return entry;
    })
  };
  feeds_addConditionally(feed, "id", "id", childs);
  feeds_addConditionally(feed, "title", "title", childs);
  var href = (_a = feeds_getOneElement("link", childs)) === null || _a === void 0 ? void 0 : _a.attribs["href"];

  if (href) {
    feed.link = href;
  }

  feeds_addConditionally(feed, "description", "subtitle", childs);
  var updated = esm_feeds_fetch("updated", childs);

  if (updated) {
    feed.updated = new Date(updated);
  }

  feeds_addConditionally(feed, "author", "email", childs, true);
  return feed;
}
/**
 * Parse a RSS feed.
 *
 * @param feedRoot The root of the feed.
 * @returns The parsed feed.
 */


function feeds_getRssFeed(feedRoot) {
  var _a, _b;

  var childs = (_b = (_a = feeds_getOneElement("channel", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];
  var feed = {
    type: feedRoot.name.substr(0, 3),
    id: "",
    items: legacy_getElementsByTagName("item", feedRoot.children).map(function (item) {
      var children = item.children;
      var entry = {
        media: feeds_getMediaElements(children)
      };
      feeds_addConditionally(entry, "id", "guid", children);
      feeds_addConditionally(entry, "title", "title", children);
      feeds_addConditionally(entry, "link", "link", children);
      feeds_addConditionally(entry, "description", "description", children);
      var pubDate = esm_feeds_fetch("pubDate", children) || esm_feeds_fetch("dc:date", children);
      if (pubDate) entry.pubDate = new Date(pubDate);
      return entry;
    })
  };
  feeds_addConditionally(feed, "title", "title", childs);
  feeds_addConditionally(feed, "link", "link", childs);
  feeds_addConditionally(feed, "description", "description", childs);
  var updated = esm_feeds_fetch("lastBuildDate", childs);

  if (updated) {
    feed.updated = new Date(updated);
  }

  feeds_addConditionally(feed, "author", "managingEditor", childs, true);
  return feed;
}

var feeds_MEDIA_KEYS_STRING = ["url", "type", "lang"];
var feeds_MEDIA_KEYS_INT = ["fileSize", "bitrate", "framerate", "samplingrate", "channels", "duration", "height", "width"];
/**
 * Get all media elements of a feed item.
 *
 * @param where Nodes to search in.
 * @returns Media elements.
 */

function feeds_getMediaElements(where) {
  return legacy_getElementsByTagName("media:content", where).map(function (elem) {
    var attribs = elem.attribs;
    var media = {
      medium: attribs["medium"],
      isDefault: !!attribs["isDefault"]
    };

    var _iterator = esm_feeds_createForOfIteratorHelper(feeds_MEDIA_KEYS_STRING),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var attrib = _step.value;

        if (attribs[attrib]) {
          media[attrib] = attribs[attrib];
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    var _iterator2 = esm_feeds_createForOfIteratorHelper(feeds_MEDIA_KEYS_INT),
        _step2;

    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var _attrib = _step2.value;

        if (attribs[_attrib]) {
          media[_attrib] = parseInt(attribs[_attrib], 10);
        }
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }

    if (attribs["expression"]) {
      media.expression = attribs["expression"];
    }

    return media;
  });
}
/**
 * Get one element by tag name.
 *
 * @param tagName Tag name to look for
 * @param node Node to search in
 * @returns The element or null
 */


function feeds_getOneElement(tagName, node) {
  return legacy_getElementsByTagName(tagName, node, true, 1)[0];
}
/**
 * Get the text content of an element with a certain tag name.
 *
 * @param tagName Tag name to look for.
 * @param where Node to search in.
 * @param recurse Whether to recurse into child nodes.
 * @returns The text content of the element.
 */


function esm_feeds_fetch(tagName, where) {
  var recurse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  return stringify_textContent(legacy_getElementsByTagName(tagName, where, recurse, 1)).trim();
}
/**
 * Adds a property to an object if it has a value.
 *
 * @param obj Object to be extended
 * @param prop Property name
 * @param tagName Tag name that contains the conditionally added property
 * @param where Element to search for the property
 * @param recurse Whether to recurse into child nodes.
 */


function feeds_addConditionally(obj, prop, tagName, where) {
  var recurse = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  var val = esm_feeds_fetch(tagName, where, recurse);
  if (val) obj[prop] = val;
}
/**
 * Checks if an element is a feed root node.
 *
 * @param value The name of the element to check.
 * @returns Whether an element is a feed root node.
 */


function feeds_isValidFeed(value) {
  return value === "rss" || value === "feed" || value === "rdf:RDF";
}
// CONCATENATED MODULE: ./node_modules/htmlparser2/node_modules/domutils/lib/esm/index.js







/** @deprecated Use these methods from `domhandler` directly. */


// CONCATENATED MODULE: ./node_modules/htmlparser2/lib/esm/index.js



 // Helper methods

/**
 * Parses the data, returns the resulting document.
 *
 * @param data The data that should be parsed.
 * @param options Optional options for the parser and DOM builder.
 */

function parseDocument(data, options) {
  var handler = new esm_DomHandler(undefined, options);
  new Parser_Parser(handler, options).end(data);
  return handler.root;
}
/**
 * Parses data, returns an array of the root nodes.
 *
 * Note that the root nodes still have a `Document` node as their parent.
 * Use `parseDocument` to get the `Document` node instead.
 *
 * @param data The data that should be parsed.
 * @param options Optional options for the parser and DOM builder.
 * @deprecated Use `parseDocument` instead.
 */

function parseDOM(data, options) {
  return parseDocument(data, options).children;
}
/**
 * Creates a parser instance, with an attached DOM handler.
 *
 * @param callback A callback that will be called once parsing has been completed.
 * @param options Optional options for the parser and DOM builder.
 * @param elementCallback An optional callback that will be called every time a tag has been completed inside of the DOM.
 */

function createDomStream(callback, options, elementCallback) {
  var handler = new esm_DomHandler(callback, options, elementCallback);
  return new Parser_Parser(handler, options);
}

/*
 * All of the following exports exist for backwards-compatibility.
 * They should probably be removed eventually.
 */





var parseFeedDefaultOptions = {
  xmlMode: true
};
/**
 * Parse a feed.
 *
 * @param feed The feed that should be parsed, as a string.
 * @param options Optionally, options for parsing. When using this, you should set `xmlMode` to `true`.
 */

function parseFeed(feed) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : parseFeedDefaultOptions;
  return feeds_getFeed(parseDOM(feed, options));
}


// EXTERNAL MODULE: ./node_modules/cookie/index.js
var cookie = __webpack_require__(134);
var cookie_default = /*#__PURE__*/__webpack_require__.n(cookie);

// CONCATENATED MODULE: ./node_modules/@bloomreach/spa-sdk/dist/index.js
function dist_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, dist_getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return dist_setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (dist_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) dist_setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = dist_getPrototypeOf(object); if (object === null) break; } return object; }

function dist_toConsumableArray(arr) { return dist_arrayWithoutHoles(arr) || dist_iterableToArray(arr) || dist_unsupportedIterableToArray(arr) || dist_nonIterableSpread(); }

function dist_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function dist_iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function dist_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return dist_arrayLikeToArray(arr); }

function dist_slicedToArray(arr, i) { return dist_arrayWithHoles(arr) || dist_iterableToArrayLimit(arr, i) || dist_unsupportedIterableToArray(arr, i) || dist_nonIterableRest(); }

function dist_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function dist_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return dist_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return dist_arrayLikeToArray(o, minLen); }

function dist_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function dist_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function dist_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function dist_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } Object.defineProperty(subClass, "prototype", { value: Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }), writable: false }); if (superClass) dist_setPrototypeOf(subClass, superClass); }

function dist_setPrototypeOf(o, p) { dist_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return dist_setPrototypeOf(o, p); }

function dist_createSuper(Derived) { var hasNativeReflectConstruct = dist_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = dist_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = dist_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return dist_possibleConstructorReturn(this, result); }; }

function dist_possibleConstructorReturn(self, call) { if (call && (dist_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return dist_assertThisInitialized(self); }

function dist_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function dist_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function dist_getPrototypeOf(o) { dist_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return dist_getPrototypeOf(o); }

function dist_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function dist_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function dist_createClass(Constructor, protoProps, staticProps) { if (protoProps) dist_defineProperties(Constructor.prototype, protoProps); if (staticProps) dist_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function dist_typeof(obj) { "@babel/helpers - typeof"; return dist_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, dist_typeof(obj); }








/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __decorate(decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : dist_typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}

function __metadata(metadataKey, metadataValue) {
  if ((typeof Reflect === "undefined" ? "undefined" : dist_typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}

var Level;

(function (Level) {
  Level["Debug"] = "debug";
  Level["Info"] = "info";
  Level["Warn"] = "warn";
  Level["Error"] = "error";
})(Level || (Level = {}));

var Logger = /*#__PURE__*/function () {
  function Logger() {
    dist_classCallCheck(this, Logger);

    this.level = Level.Error;
    this.debug = this.log.bind(this, Level.Debug);
    this.info = this.log.bind(this, Level.Info);
    this.warn = this.log.bind(this, Level.Warn);
    this.error = this.log.bind(this, Level.Error);
  }

  dist_createClass(Logger, [{
    key: "log",
    value: function log(level) {
      var levels = Object.values(Level);

      if (!levels.includes(level) || levels.indexOf(level) < levels.indexOf(this.level)) {
        return;
      }

      for (var _len = arguments.length, message = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        message[_key - 1] = arguments[_key];
      }

      this.write.apply(this, [level, "[SPA]", "[".concat(level.toUpperCase(), "]")].concat(message));
    }
  }]);

  return Logger;
}();

Logger = __decorate([Object(inversify["injectable"])(), __metadata("design:paramtypes", [])], Logger);
var ConsoleToken = Symbol["for"]("ConsoleToken");

var ConsoleLogger = /*#__PURE__*/function (_Logger) {
  dist_inherits(ConsoleLogger, _Logger);

  var _super = dist_createSuper(ConsoleLogger);

  function ConsoleLogger(console) {
    var _this;

    dist_classCallCheck(this, ConsoleLogger);

    _this = _super.call(this);
    _this.console = console;
    return _this;
  }

  dist_createClass(ConsoleLogger, [{
    key: "write",
    value: function write(level) {
      var _this$console;

      for (var _len2 = arguments.length, message = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        message[_key2 - 1] = arguments[_key2];
      }

      (_this$console = this.console)[level].apply(_this$console, message);
    }
  }]);

  return ConsoleLogger;
}(Logger);

ConsoleLogger = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(ConsoleToken)), __metadata("design:paramtypes", [Object])], ConsoleLogger);

function LoggerModule() {
  return new inversify["ContainerModule"](function (bind) {
    bind(ConsoleToken).toConstantValue(console);
    bind(ConsoleLogger).toSelf().inSingletonScope();
    bind(Logger).toService(ConsoleLogger);
  });
}

var CmsEventBusService = Symbol("CmsEventBusService");

function dist_EmitterMixin(Super) {
  return /*#__PURE__*/function (_Super) {
    dist_inherits(EmitterMixin, _Super);

    var _super2 = dist_createSuper(EmitterMixin);

    function EmitterMixin() {
      var _this2;

      dist_classCallCheck(this, EmitterMixin);

      _this2 = _super2.apply(this, arguments);
      /**
       * @todo should be private
       * @see https://github.com/Microsoft/TypeScript/issues/17293
       */

      _this2.emitter = new emittery["Typed"]();
      _this2.on = _this2.emitter.on.bind(_this2.emitter);
      _this2.off = _this2.emitter.off.bind(_this2.emitter);
      /**
       * @todo should be private
       * @see https://github.com/Microsoft/TypeScript/issues/17293
       */

      _this2.emit = _this2.emitter.emit.bind(_this2.emitter);
      return _this2;
    }

    return dist_createClass(EmitterMixin);
  }(Super);
}

var RpcClientService = Symbol["for"]("RpcClientService");
var RpcServerService = Symbol["for"]("RpcServerService");
var TYPE_EVENT = "brxm:event";
var TYPE_RESPONSE = "brxm:response";
var TYPE_REQUEST = "brxm:request";
var STATE_FULFILLED = "fulfilled";
var STATE_REJECTED = "rejected";

var Dummy = /*#__PURE__*/dist_createClass(function Dummy() {
  dist_classCallCheck(this, Dummy);
});

var Rpc = /*#__PURE__*/function (_EmitterMixin) {
  dist_inherits(Rpc, _EmitterMixin);

  var _super3 = dist_createSuper(Rpc);

  function Rpc() {
    var _this3;

    dist_classCallCheck(this, Rpc);

    _this3 = _super3.apply(this, arguments);
    _this3.calls = new Map();
    _this3.callbacks = new Map();
    return _this3;
  }

  dist_createClass(Rpc, [{
    key: "generateId",
    value: function generateId() {
      var id;

      do {
        id = "".concat(Math.random()).slice(2);
      } while (this.calls.has(id));

      return id;
    }
  }, {
    key: "call",
    value: function call(command) {
      var _this4 = this;

      for (var _len3 = arguments.length, payload = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
        payload[_key3 - 1] = arguments[_key3];
      }

      return new Promise(function (resolve, reject) {
        var id = _this4.generateId();

        _this4.calls.set(id, [resolve, reject]);

        _this4.send({
          id: id,
          command: command,
          payload: payload,
          type: TYPE_REQUEST
        });
      });
    }
  }, {
    key: "register",
    value: function register(command, callback) {
      this.callbacks.set(command, callback);
    }
  }, {
    key: "trigger",
    value: function trigger(event, payload) {
      this.send({
        event: event,
        payload: payload,
        type: TYPE_EVENT
      });
    }
  }, {
    key: "process",
    value: function process(message) {
      switch (message === null || message === void 0 ? void 0 : message.type) {
        case TYPE_EVENT:
          this.processEvent(message);
          break;

        case TYPE_RESPONSE:
          this.processResponse(message);
          break;

        case TYPE_REQUEST:
          this.processRequest(message);
          break;
      }
    }
  }, {
    key: "processEvent",
    value: function processEvent(event) {
      this.emit(event.event, event.payload);
    }
  }, {
    key: "processResponse",
    value: function processResponse(response) {
      if (!this.calls.has(response.id)) {
        return;
      }

      var _this$calls$get = this.calls.get(response.id),
          _this$calls$get2 = dist_slicedToArray(_this$calls$get, 2),
          resolve = _this$calls$get2[0],
          reject = _this$calls$get2[1];

      this.calls["delete"](response.id);

      if (response.state === STATE_REJECTED) {
        reject(response.result);
      }

      resolve(response.result);
    }
  }, {
    key: "processRequest",
    value: function processRequest(request) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var callback;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                callback = this.callbacks.get(request.command);

                if (callback) {
                  _context.next = 3;
                  break;
                }

                return _context.abrupt("return");

              case 3:
                _context.prev = 3;
                _context.t0 = this;
                _context.t1 = TYPE_RESPONSE;
                _context.t2 = request.id;
                _context.t3 = STATE_FULFILLED;
                _context.next = 10;
                return callback.apply(void 0, dist_toConsumableArray(request.payload));

              case 10:
                _context.t4 = _context.sent;
                _context.t5 = {
                  type: _context.t1,
                  id: _context.t2,
                  state: _context.t3,
                  result: _context.t4
                };

                _context.t0.send.call(_context.t0, _context.t5);

                _context.next = 18;
                break;

              case 15:
                _context.prev = 15;
                _context.t6 = _context["catch"](3);
                this.send({
                  result: _context.t6,
                  type: TYPE_RESPONSE,
                  id: request.id,
                  state: STATE_REJECTED
                });

              case 18:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[3, 15]]);
      }));
    }
  }]);

  return Rpc;
}(dist_EmitterMixin(Dummy));

var CmsService = Symbol["for"]("CmsService");
var GLOBAL_WINDOW$2 = typeof window === "undefined" ? undefined : window;

var CmsImpl = /*#__PURE__*/function () {
  function CmsImpl(rpcClient, rpcServer, cmsEventBus, logger) {
    dist_classCallCheck(this, CmsImpl);

    var _a;

    this.rpcClient = rpcClient;
    this.rpcServer = rpcServer;
    this.cmsEventBus = cmsEventBus;
    this.logger = logger;
    this.onStateChange = this.onStateChange.bind(this);
    (_a = this.cmsEventBus) === null || _a === void 0 ? void 0 : _a.on("page.ready", this.onPageReady.bind(this));
    this.rpcClient.on("update", this.onUpdate.bind(this));
    this.rpcServer.register("inject", this.inject.bind(this));
  }

  dist_createClass(CmsImpl, [{
    key: "initialize",
    value: function initialize(_ref) {
      var _ref$window = _ref.window,
          window = _ref$window === void 0 ? GLOBAL_WINDOW$2 : _ref$window;

      var _a, _b, _c, _d;

      if (this.window === window) {
        return;
      }

      this.window = window;

      if (((_b = (_a = this.window) === null || _a === void 0 ? void 0 : _a.document) === null || _b === void 0 ? void 0 : _b.readyState) !== "loading") {
        this.onInitialize();
        return;
      }

      (_d = (_c = this.window) === null || _c === void 0 ? void 0 : _c.document) === null || _d === void 0 ? void 0 : _d.addEventListener("readystatechange", this.onStateChange);
    }
  }, {
    key: "onInitialize",
    value: function onInitialize() {
      var _a;

      (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug("The page is ready to accept incoming messages.");
      this.rpcServer.trigger("ready", undefined);
    }
  }, {
    key: "onStateChange",
    value: function onStateChange() {
      if (this.window.document.readyState === "loading") {
        return;
      }

      this.onInitialize();
      this.window.document.removeEventListener("readystatechange", this.onStateChange);
    }
  }, {
    key: "onPageReady",
    value: function onPageReady() {
      var _a;

      (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug("Synchronizing the page.");
      this.rpcClient.call("sync");
    }
  }, {
    key: "onUpdate",
    value: function onUpdate(event) {
      var _a, _b, _c;

      (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug("Received update event.");
      (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug("Event:", event);
      (_c = this.cmsEventBus) === null || _c === void 0 ? void 0 : _c.emit("cms.update", event);
    }
  }, {
    key: "inject",
    value: function inject(resource) {
      var _this5 = this;

      var _a, _b, _c;

      if (!((_a = this.window) === null || _a === void 0 ? void 0 : _a.document)) {
        return Promise.reject(new Error("SPA document is not ready."));
      }

      (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug("Received request to inject a resource.");
      (_c = this.logger) === null || _c === void 0 ? void 0 : _c.debug("Resource:", resource);
      return new Promise(function (resolve, reject) {
        var script = _this5.window.document.createElement("script");

        script.type = "text/javascript";
        script.src = resource;
        script.addEventListener("load", function () {
          return resolve();
        });
        script.addEventListener("error", function () {
          return reject(new Error("Failed to load resource '".concat(resource, "'.")));
        });

        _this5.window.document.body.appendChild(script);
      });
    }
  }]);

  return CmsImpl;
}();

CmsImpl = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(RpcClientService)), __param(1, Object(inversify["inject"])(RpcServerService)), __param(2, Object(inversify["inject"])(CmsEventBusService)), __param(2, Object(inversify["optional"])()), __param(3, Object(inversify["inject"])(Logger)), __param(3, Object(inversify["optional"])()), __metadata("design:paramtypes", [Object, Object, Object, Logger])], CmsImpl);
var GLOBAL_WINDOW$1 = typeof window === "undefined" ? undefined : window;

var Cms14Impl = /*#__PURE__*/function () {
  function Cms14Impl(eventBus, logger) {
    dist_classCallCheck(this, Cms14Impl);

    this.eventBus = eventBus;
    this.logger = logger;
    this.postponed = [];
  }

  dist_createClass(Cms14Impl, [{
    key: "flush",
    value: function flush() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this.postponed.splice(0).forEach(function (task) {
                  return task();
                });

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
    }
  }, {
    key: "postpone",
    value: function postpone(task) {
      var _this6 = this;

      return function () {
        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }

        if (_this6.api) {
          return task.apply(_this6, args);
        }

        _this6.postponed.push(task.bind.apply(task, [_this6].concat(args)));

        return undefined;
      };
    }
  }, {
    key: "initialize",
    value: function initialize(_ref2) {
      var _ref2$window = _ref2.window,
          window = _ref2$window === void 0 ? GLOBAL_WINDOW$1 : _ref2$window;

      var _a, _b;

      if (this.api || !window || window.SPA) {
        return;
      }

      (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug("Initiating a handshake with the Experience Manager.");
      (_b = this.eventBus) === null || _b === void 0 ? void 0 : _b.on("page.ready", this.postpone(this.sync));
      window.SPA = {
        init: this.onInit.bind(this),
        renderComponent: this.onRenderComponent.bind(this)
      };
    }
  }, {
    key: "onInit",
    value: function onInit(api) {
      var _a;

      (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug("Completed the handshake with the Experience Manager.");
      this.api = api;
      this.flush();
    }
  }, {
    key: "onRenderComponent",
    value: function onRenderComponent(id, properties) {
      var _a, _b, _c, _d;

      (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug("Received component rendering request.");
      (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug("Component:", id);
      (_c = this.logger) === null || _c === void 0 ? void 0 : _c.debug("Properties", properties);
      (_d = this.eventBus) === null || _d === void 0 ? void 0 : _d.emit("cms.update", {
        id: id,
        properties: properties
      });
    }
  }, {
    key: "sync",
    value: function sync() {
      var _a;

      (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug("Synchronizing the page.");
      this.api.sync();
    }
  }]);

  return Cms14Impl;
}();

Cms14Impl = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(CmsEventBusService)), __param(0, Object(inversify["optional"])()), __param(1, Object(inversify["inject"])(Logger)), __param(1, Object(inversify["optional"])()), __metadata("design:paramtypes", [Object, Logger])], Cms14Impl);

function parseUrl(url) {
  var DUMMY_BASE_URL = "http://example.com";
  var parsedUrl = new URL(url, DUMMY_BASE_URL);
  var hash = parsedUrl.hash,
      search = parsedUrl.search,
      searchParams = parsedUrl.searchParams;
  var origin = parsedUrl.origin,
      pathname = parsedUrl.pathname;
  origin = origin !== DUMMY_BASE_URL ? origin : "";

  if (url.startsWith("//")) {
    origin = origin.replace(parsedUrl.protocol, "");
  }

  if (url.startsWith(origin) && !url.replace(origin, "").startsWith("/") && pathname.startsWith("/")) {
    pathname = pathname.substring(1);
  }

  return {
    hash: hash,
    origin: origin,
    pathname: pathname,
    search: search,
    searchParams: searchParams,
    path: "".concat(pathname).concat(search).concat(hash)
  };
}

function buildUrl(url) {
  var _a, _b, _c, _d, _e, _f, _g;

  var searchParams = (_b = (_a = url.searchParams) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : "";
  var search = (_c = url.search) !== null && _c !== void 0 ? _c : "".concat(searchParams && "?".concat(searchParams));
  var path = (_d = url.path) !== null && _d !== void 0 ? _d : "".concat((_e = url.pathname) !== null && _e !== void 0 ? _e : "").concat(search).concat((_f = url.hash) !== null && _f !== void 0 ? _f : "");
  return "".concat((_g = url.origin) !== null && _g !== void 0 ? _g : "").concat(path);
}

function mergeSearchParams(params) {
  var result = new URLSearchParams(params);

  for (var _len5 = arguments.length, rest = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
    rest[_key5 - 1] = arguments[_key5];
  }

  rest.forEach(function (restParams) {
    return restParams.forEach(function (value, key) {
      return result.set(key, value);
    });
  });
  return result;
}

function appendSearchParams(url, params) {
  var _parseUrl = parseUrl(url),
      hash = _parseUrl.hash,
      origin = _parseUrl.origin,
      pathname = _parseUrl.pathname,
      searchParams = _parseUrl.searchParams;

  return buildUrl({
    hash: hash,
    origin: origin,
    pathname: pathname,
    searchParams: mergeSearchParams(searchParams, params)
  });
}
/**
 * Extracts query parameters from URL and returns URL object that contains URL path and extracted parameters
 *
 * @param url The URL of the page.
 * @param params Parameters to extract.
 */


function extractSearchParams(url, params) {
  var _parseUrl2 = parseUrl(url),
      hash = _parseUrl2.hash,
      origin = _parseUrl2.origin,
      pathname = _parseUrl2.pathname,
      searchParams = _parseUrl2.searchParams;

  var extracted = new URLSearchParams();
  params.forEach(function (param) {
    if (searchParams.has(param)) {
      extracted.set(param, searchParams.get(param));
      searchParams["delete"](param);
    }
  });
  return {
    searchParams: extracted,
    url: buildUrl({
      hash: hash,
      origin: origin,
      pathname: pathname,
      searchParams: searchParams
    })
  };
}

function isAbsoluteUrl(url) {
  var _parseUrl3 = parseUrl(url),
      origin = _parseUrl3.origin,
      pathname = _parseUrl3.pathname;

  return !!origin || pathname.startsWith("/");
}

function isMatchedOrigin(origin, baseOrigin) {
  var _origin$split = origin.split("//", 2),
      _origin$split2 = dist_slicedToArray(_origin$split, 2),
      schema = _origin$split2[0],
      _origin$split2$ = _origin$split2[1],
      host = _origin$split2$ === void 0 ? "" : _origin$split2$;

  var _baseOrigin$split = baseOrigin.split("//", 2),
      _baseOrigin$split2 = dist_slicedToArray(_baseOrigin$split, 2),
      baseSchema = _baseOrigin$split2[0],
      _baseOrigin$split2$ = _baseOrigin$split2[1],
      baseHost = _baseOrigin$split2$ === void 0 ? "" : _baseOrigin$split2$;

  return !baseOrigin || !origin || (!schema || !baseSchema || schema === baseSchema) && baseHost === host;
}

function isMatchedPathname(pathname, basePathname) {
  return !basePathname || pathname.startsWith(basePathname);
}

function isMatchedQuery(search, baseSearch) {
  var match = true;
  baseSearch.forEach(function (value, key) {
    match = match && (!value && search.has(key) || search.getAll(key).includes(value));
  });
  return match;
}

function isMatched(link) {
  var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
  var linkUrl = parseUrl(link);
  var baseUrl = parseUrl(base);
  return isMatchedOrigin(linkUrl.origin, baseUrl.origin) && isMatchedPathname(linkUrl.pathname, baseUrl.pathname) && isMatchedQuery(linkUrl.searchParams, baseUrl.searchParams);
}

function resolveUrl(url, base) {
  var baseUrl = parseUrl(base);
  var sourceUrl = parseUrl(url);
  var pathname = sourceUrl.pathname.startsWith("/") ? sourceUrl.pathname : "".concat(baseUrl.pathname).concat(baseUrl.pathname.endsWith("/") || !sourceUrl.pathname ? "" : "/").concat(sourceUrl.pathname);
  return buildUrl({
    pathname: pathname,
    hash: sourceUrl.hash || baseUrl.hash,
    origin: sourceUrl.origin || baseUrl.origin,
    searchParams: mergeSearchParams(baseUrl.searchParams, sourceUrl.searchParams)
  });
}

var UrlBuilderOptionsToken = Symbol["for"]("UrlBuilderOptionsToken");
var UrlBuilderService = Symbol["for"]("UrlBuilderService");

var UrlBuilderImpl$1 = /*#__PURE__*/function () {
  function UrlBuilderImpl(options) {
    dist_classCallCheck(this, UrlBuilderImpl);

    var _a, _b;

    this.endpoint = parseUrl((_a = options.endpoint) !== null && _a !== void 0 ? _a : "");
    this.baseUrl = parseUrl((_b = options.baseUrl) !== null && _b !== void 0 ? _b : "");
  }

  dist_createClass(UrlBuilderImpl, [{
    key: "getApiUrl",
    value: function getApiUrl(link) {
      var _parseUrl4 = parseUrl(link),
          pathname = _parseUrl4.pathname,
          searchParams = _parseUrl4.searchParams;

      if (this.baseUrl.pathname && !pathname.startsWith(this.baseUrl.pathname)) {
        throw new Error("The path \"".concat(pathname, "\" does not start with the base path \"").concat(this.baseUrl.pathname, "\"."));
      }

      var route = pathname.substring(this.baseUrl.pathname.length);
      return buildUrl({
        origin: this.endpoint.origin,
        pathname: "".concat(this.endpoint.pathname).concat(route),
        searchParams: mergeSearchParams(searchParams, this.endpoint.searchParams)
      });
    }
  }, {
    key: "getSpaUrl",
    value: function getSpaUrl(link) {
      var _parseUrl5 = parseUrl(link),
          hash = _parseUrl5.hash,
          pathname = _parseUrl5.pathname,
          searchParams = _parseUrl5.searchParams;

      var route = !pathname.startsWith("/") && !this.baseUrl.pathname ? "/".concat(pathname) : pathname;
      return buildUrl({
        origin: this.baseUrl.origin,
        pathname: "".concat(this.baseUrl.pathname).concat(route),
        searchParams: mergeSearchParams(searchParams, this.baseUrl.searchParams),
        hash: hash || this.baseUrl.hash
      });
    }
  }]);

  return UrlBuilderImpl;
}();

UrlBuilderImpl$1 = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(UrlBuilderOptionsToken)), __metadata("design:paramtypes", [Object])], UrlBuilderImpl$1);

function UrlModule$1() {
  return new inversify["ContainerModule"](function (bind) {
    bind(UrlBuilderService).to(UrlBuilderImpl$1).inSingletonScope();
  });
}

var DEFAULT_API_BASE_URL = "/resourceapi";
var DEFAULT_SPA_BASE_URL = "";

var UrlBuilderImpl = /*#__PURE__*/function () {
  function UrlBuilderImpl(options) {
    dist_classCallCheck(this, UrlBuilderImpl);

    var _a, _b, _c, _d;

    this.apiBaseUrl = parseUrl((_a = options.apiBaseUrl) !== null && _a !== void 0 ? _a : "".concat((_b = options.cmsBaseUrl) !== null && _b !== void 0 ? _b : "").concat(DEFAULT_API_BASE_URL));
    this.cmsBaseUrl = parseUrl((_c = options.cmsBaseUrl) !== null && _c !== void 0 ? _c : "");
    this.spaBaseUrl = parseUrl((_d = options.spaBaseUrl) !== null && _d !== void 0 ? _d : DEFAULT_SPA_BASE_URL);
  }

  dist_createClass(UrlBuilderImpl, [{
    key: "getApiUrl",
    value: function getApiUrl(link) {
      var _parseUrl6 = parseUrl(link),
          pathname = _parseUrl6.pathname,
          searchParams = _parseUrl6.searchParams;

      if (this.apiBaseUrl.pathname && pathname.startsWith(this.apiBaseUrl.pathname)) {
        return buildUrl({
          pathname: pathname,
          origin: this.apiBaseUrl.origin,
          searchParams: mergeSearchParams(this.apiBaseUrl.searchParams, searchParams)
        });
      }

      if (this.spaBaseUrl.pathname && !pathname.startsWith(this.spaBaseUrl.pathname)) {
        throw new Error("The path \"".concat(pathname, "\" does not start with the base path \"").concat(this.spaBaseUrl.pathname, "\"."));
      }

      var route = pathname.substring(this.spaBaseUrl.pathname.length);
      return buildUrl({
        origin: this.apiBaseUrl.origin,
        pathname: "".concat(this.apiBaseUrl.pathname).concat(route),
        searchParams: mergeSearchParams(searchParams, this.apiBaseUrl.searchParams)
      });
    }
  }, {
    key: "getSpaUrl",
    value: function getSpaUrl(link) {
      var _parseUrl7 = parseUrl(link),
          hash = _parseUrl7.hash,
          pathname = _parseUrl7.pathname,
          searchParams = _parseUrl7.searchParams;

      var route = pathname.startsWith(this.cmsBaseUrl.pathname) ? pathname.substring(this.cmsBaseUrl.pathname.length) : pathname;

      if (!route.startsWith("/") && !this.spaBaseUrl.pathname) {
        route = "/".concat(route);
      }

      return buildUrl({
        origin: this.spaBaseUrl.origin,
        pathname: "".concat(this.spaBaseUrl.pathname).concat(route),
        searchParams: mergeSearchParams(searchParams, this.spaBaseUrl.searchParams),
        hash: hash || this.spaBaseUrl.hash
      });
    }
  }]);

  return UrlBuilderImpl;
}();

UrlBuilderImpl = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(UrlBuilderOptionsToken)), __metadata("design:paramtypes", [Object])], UrlBuilderImpl);

function UrlModule() {
  return new inversify["ContainerModule"](function (bind) {
    bind(UrlBuilderService).to(UrlBuilderImpl).inSingletonScope();
  });
}

var PostMessageService = Symbol["for"]("PostMessageService");
var GLOBAL_WINDOW = typeof window === "undefined" ? undefined : window;

var PostMessage = /*#__PURE__*/function (_Rpc) {
  dist_inherits(PostMessage, _Rpc);

  var _super4 = dist_createSuper(PostMessage);

  function PostMessage(logger) {
    var _this7;

    dist_classCallCheck(this, PostMessage);

    _this7 = _super4.call(this);
    _this7.logger = logger;
    _this7.onMessage = _this7.onMessage.bind(dist_assertThisInitialized(_this7));
    return _this7;
  }

  dist_createClass(PostMessage, [{
    key: "initialize",
    value: function initialize(_ref3) {
      var origin = _ref3.origin,
          _ref3$window = _ref3.window,
          window = _ref3$window === void 0 ? GLOBAL_WINDOW : _ref3$window;

      var _a, _b;

      (_a = this.window) === null || _a === void 0 ? void 0 : _a.removeEventListener("message", this.onMessage, false);
      this.origin = origin;
      this.window = window;
      (_b = this.window) === null || _b === void 0 ? void 0 : _b.addEventListener("message", this.onMessage, false);
    }
  }, {
    key: "send",
    value: function send(message) {
      var _a, _b, _c;

      if (!this.origin) {
        return;
      }

      (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug("[OUTGOING]", "[".concat(this.origin, "]"), message);
      (_c = (_b = this.window) === null || _b === void 0 ? void 0 : _b.parent) === null || _c === void 0 ? void 0 : _c.postMessage(message, this.origin);
    }
  }, {
    key: "onMessage",
    value: function onMessage(event) {
      var _a, _b;

      if (!event.data || !isMatched(event.origin, this.origin === "*" ? "" : this.origin)) {
        return;
      }

      if ((_a = event.data) === null || _a === void 0 ? void 0 : _a.type) {
        (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug("[INCOMING]", "[".concat(event.origin, "]"), event.data);
      }

      this.process(event.data);
    }
  }]);

  return PostMessage;
}(Rpc);

PostMessage = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(Logger)), __param(0, Object(inversify["optional"])()), __metadata("design:paramtypes", [Logger])], PostMessage);

function CmsModule() {
  return new inversify["ContainerModule"](function (bind) {
    bind(CmsEventBusService).toDynamicValue(function () {
      return new emittery["Typed"]();
    }).inSingletonScope().when(function () {
      return typeof window !== "undefined";
    });
    bind(PostMessageService).to(PostMessage).inSingletonScope();
    bind(RpcClientService).toService(PostMessageService);
    bind(RpcServerService).toService(PostMessageService);
    bind(CmsService).to(CmsImpl).inSingletonScope().whenTargetIsDefault();
    bind(CmsService).to(Cms14Impl).inSingletonScope().whenTargetNamed("cms14");
  });
}

function isConfigurationWithProxy(value) {
  var _a, _b;

  return !!(((_a = value === null || value === void 0 ? void 0 : value.options) === null || _a === void 0 ? void 0 : _a.live) && ((_b = value === null || value === void 0 ? void 0 : value.options) === null || _b === void 0 ? void 0 : _b.preview));
}

function isConfigurationWithJwt09(value) {
  return !!(value === null || value === void 0 ? void 0 : value.cmsBaseUrl);
}
/**
 * Link to a page outside the current application.
 */


var TYPE_LINK_EXTERNAL = "external";
/**
 * Link to a page inside the current application.
 */

var TYPE_LINK_INTERNAL = "internal";
/**
 * Link to a CMS resource.
 */

var TYPE_LINK_RESOURCE = "resource";
/**
 * Unresolved link.
 */

var TYPE_LINK_UNKNOWN = "unknown";
/**
 * Checks whether a value is a link.
 * @param value The value to check.
 */

function isLink(value) {
  return !!value && (Object.prototype.hasOwnProperty.call(value, "href") || Object.prototype.hasOwnProperty.call(value, "type") && [TYPE_LINK_EXTERNAL, TYPE_LINK_INTERNAL, TYPE_LINK_RESOURCE, TYPE_LINK_UNKNOWN].includes(value.type));
}

var SimpleFactory = /*#__PURE__*/function () {
  function SimpleFactory() {
    dist_classCallCheck(this, SimpleFactory);

    this.mapping = new Map();
  }
  /**
   * Registers a builder for the specified type.
   * @param type The entity type.
   * @param builder The entity builder.
   */


  dist_createClass(SimpleFactory, [{
    key: "register",
    value: function register(type, builder) {
      this.mapping.set(type, builder);
      return this;
    }
  }]);

  return SimpleFactory;
}();

var LinkFactory = /*#__PURE__*/function (_SimpleFactory) {
  dist_inherits(LinkFactory, _SimpleFactory);

  var _super5 = dist_createSuper(LinkFactory);

  function LinkFactory() {
    dist_classCallCheck(this, LinkFactory);

    return _super5.apply(this, arguments);
  }

  dist_createClass(LinkFactory, [{
    key: "create",
    value: function create(link) {
      if (isLink(link)) {
        return this.createLink(link);
      }

      return this.createPath(link);
    }
  }, {
    key: "createLink",
    value: function createLink(link) {
      if (!link.type || typeof link.href === "undefined" || !this.mapping.has(link.type)) {
        return link.href;
      }

      var builder = this.mapping.get(link.type);
      return builder(link.href);
    }
  }, {
    key: "createPath",
    value: function createPath(path) {
      return this.createLink({
        href: path,
        type: TYPE_LINK_INTERNAL
      });
    }
  }]);

  return LinkFactory;
}(SimpleFactory);

LinkFactory = __decorate([Object(inversify["injectable"])()], LinkFactory);
var MetaCollectionFactory = Symbol["for"]("MetaCollectionFactory");
var ComponentChildrenToken = Symbol["for"]("ComponentChildrenToken");
var ComponentModelToken = Symbol["for"]("ComponentModelToken");
/**
 * Generic component type.
 */

var TYPE_COMPONENT$1 = "component";
/**
 * Container type.
 */

var TYPE_COMPONENT_CONTAINER$1 = "container";
/**
 * Container item type.
 */

var TYPE_COMPONENT_CONTAINER_ITEM$1 = "container-item";
/**
 * Container item content type.
 */

var TYPE_COMPONENT_CONTAINER_ITEM_CONTENT = "componentcontent";

var ComponentImpl$1 = /*#__PURE__*/function () {
  function ComponentImpl(model, children, linkFactory, metaFactory) {
    dist_classCallCheck(this, ComponentImpl);

    this.model = model;
    this.children = children;
    this.linkFactory = linkFactory;
    this.meta = metaFactory(this.model.meta);
  }

  dist_createClass(ComponentImpl, [{
    key: "getId",
    value: function getId() {
      return this.model.id;
    }
  }, {
    key: "getMeta",
    value: function getMeta() {
      return this.meta;
    }
  }, {
    key: "getModels",
    value: function getModels() {
      return this.model.models || {};
    }
  }, {
    key: "getUrl",
    value: function getUrl() {
      return this.linkFactory.create(this.model.links.self);
    }
  }, {
    key: "getName",
    value: function getName() {
      return this.model.name || "";
    }
  }, {
    key: "getParameters",
    value: function getParameters() {
      var _a;

      return (_a = this.model.meta.params) !== null && _a !== void 0 ? _a : {};
    }
  }, {
    key: "getProperties",
    value: function getProperties() {
      return this.getParameters();
    }
  }, {
    key: "getChildren",
    value: function getChildren() {
      return this.children;
    }
  }, {
    key: "getComponent",
    value: function getComponent() {
      var component = this;

      for (var _len6 = arguments.length, componentNames = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        componentNames[_key6] = arguments[_key6];
      }

      var _loop = function _loop() {
        var name = componentNames.shift();
        component = component.getChildren().find(function (childComponent) {
          return childComponent.getName() === name;
        });
      };

      while (componentNames.length && component) {
        _loop();
      }

      return component;
    }
  }, {
    key: "getComponentById",
    value: function getComponentById(id) {
      var queue = [this];

      while (queue.length) {
        var component = queue.shift();

        if (component.getId() === id) {
          return component;
        }

        queue.push.apply(queue, dist_toConsumableArray(component.getChildren()));
      }

      return undefined;
    }
  }]);

  return ComponentImpl;
}();

ComponentImpl$1 = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(ComponentModelToken)), __param(1, Object(inversify["inject"])(ComponentChildrenToken)), __param(2, Object(inversify["inject"])(LinkFactory)), __param(3, Object(inversify["inject"])(MetaCollectionFactory)), __metadata("design:paramtypes", [Object, Array, LinkFactory, Function])], ComponentImpl$1);
/**
 * Checks whether a value is a page component.
 * @param value The value to check.
 */

function isComponent$2(value) {
  return value instanceof ComponentImpl$1;
}
/**
 * Generic component type.
 */


var TYPE_COMPONENT = "COMPONENT";
/**
 * Container item type.
 */

var TYPE_COMPONENT_CONTAINER_ITEM = "CONTAINER_ITEM_COMPONENT";
/**
 * Container type.
 */

var TYPE_COMPONENT_CONTAINER = "CONTAINER_COMPONENT";

var ComponentImpl = /*#__PURE__*/function () {
  function ComponentImpl(model, children, metaFactory, urlBuilder) {
    dist_classCallCheck(this, ComponentImpl);

    this.model = model;
    this.children = children;
    this.urlBuilder = urlBuilder;
    this.meta = metaFactory(this.model._meta);
  }

  dist_createClass(ComponentImpl, [{
    key: "getId",
    value: function getId() {
      return this.model.id;
    }
  }, {
    key: "getMeta",
    value: function getMeta() {
      return this.meta;
    }
  }, {
    key: "getModels",
    value: function getModels() {
      return this.model.models || {};
    }
  }, {
    key: "getUrl",
    value: function getUrl() {
      return this.urlBuilder.getApiUrl(this.model._links.componentRendering.href);
    }
  }, {
    key: "getName",
    value: function getName() {
      return this.model.name || "";
    }
  }, {
    key: "getParameters",
    value: function getParameters() {
      var _a;

      return (_a = this.model._meta.params) !== null && _a !== void 0 ? _a : {};
    }
  }, {
    key: "getProperties",
    value: function getProperties() {
      return this.getParameters();
    }
  }, {
    key: "getChildren",
    value: function getChildren() {
      return this.children;
    }
  }, {
    key: "getComponent",
    value: function getComponent() {
      var component = this;

      for (var _len7 = arguments.length, componentNames = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        componentNames[_key7] = arguments[_key7];
      }

      var _loop2 = function _loop2() {
        var name = componentNames.shift();
        component = component.getChildren().find(function (childComponent) {
          return childComponent.getName() === name;
        });
      };

      while (componentNames.length && component) {
        _loop2();
      }

      return component;
    }
  }, {
    key: "getComponentById",
    value: function getComponentById(id) {
      var queue = [this];

      while (queue.length) {
        var component = queue.shift();

        if (component.getId() === id) {
          return component;
        }

        queue.push.apply(queue, dist_toConsumableArray(component.getChildren()));
      }

      return undefined;
    }
  }]);

  return ComponentImpl;
}();

ComponentImpl = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(ComponentModelToken)), __param(1, Object(inversify["inject"])(ComponentChildrenToken)), __param(2, Object(inversify["inject"])(MetaCollectionFactory)), __param(3, Object(inversify["inject"])(UrlBuilderService)), __metadata("design:paramtypes", [Object, Array, Function, Object])], ComponentImpl);
/**
 * Checks whether a value is a page component.
 * @param value The value to check.
 */

function isComponent$1(value) {
  return value instanceof ComponentImpl;
}
/**
 * A blocked container with blocked items.
 */


var TYPE_CONTAINER_BOX = "hst.vbox";
/**
 * An unordered list container.
 */

var TYPE_CONTAINER_UNORDERED_LIST = "hst.unorderedlist";
/**
 * An ordered list container.
 */

var TYPE_CONTAINER_ORDERED_LIST = "hst.orderedlist";
/**
 * A blocked container with inline items.
 */

var TYPE_CONTAINER_INLINE = "hst.span";
/**
 * A container without surrounding markup.
 */

var TYPE_CONTAINER_NO_MARKUP = "hst.nomarkup";

var ContainerImpl$1 = /*#__PURE__*/function (_ComponentImpl$) {
  dist_inherits(ContainerImpl, _ComponentImpl$);

  var _super6 = dist_createSuper(ContainerImpl);

  function ContainerImpl() {
    dist_classCallCheck(this, ContainerImpl);

    return _super6.apply(this, arguments);
  }

  dist_createClass(ContainerImpl, [{
    key: "getChildren",
    value: function getChildren() {
      return this.children;
    }
  }, {
    key: "getType",
    value: function getType() {
      var _a;

      return (_a = this.model.xtype) === null || _a === void 0 ? void 0 : _a.toLowerCase();
    }
  }]);

  return ContainerImpl;
}(ComponentImpl$1);

ContainerImpl$1 = __decorate([Object(inversify["injectable"])()], ContainerImpl$1);
/**
 * Checks whether a value is a page container.
 * @param value The value to check.
 */

function isContainer$2(value) {
  return value instanceof ContainerImpl$1;
}

var ContainerImpl = /*#__PURE__*/function (_ComponentImpl) {
  dist_inherits(ContainerImpl, _ComponentImpl);

  var _super7 = dist_createSuper(ContainerImpl);

  function ContainerImpl() {
    dist_classCallCheck(this, ContainerImpl);

    return _super7.apply(this, arguments);
  }

  dist_createClass(ContainerImpl, [{
    key: "getChildren",
    value: function getChildren() {
      return this.children;
    }
  }, {
    key: "getType",
    value: function getType() {
      var _a;

      return (_a = this.model.xtype) === null || _a === void 0 ? void 0 : _a.toLowerCase();
    }
  }]);

  return ContainerImpl;
}(ComponentImpl);

ContainerImpl = __decorate([Object(inversify["injectable"])()], ContainerImpl);
/**
 * Checks whether a value is a page container.
 * @param value The value to check.
 */

function isContainer$1(value) {
  return value instanceof ContainerImpl;
}

var PageEventBusService = Symbol("PageEventBusService");
/**
 * Checks whether a value is a reference.
 * @param value The value to check.
 */

function isReference(value) {
  return !!(value === null || value === void 0 ? void 0 : value.$ref);
}

function resolve(object, reference) {
  return reference.$ref.split("/").reduce(function (value, key) {
    return key ? value === null || value === void 0 ? void 0 : value[key] : object;
  }, object);
}
/**
 * A container item without mapping.
 */


var TYPE_CONTAINER_ITEM_UNDEFINED = Symbol["for"]("ContainerItemUndefined");
/**
 * Returns the content of this component.
 *
 * @param component The component that references the content
 * @param page The page that contains the content
 */

function getContainerItemContent(component, page) {
  var contentRef = component.getContentReference();

  if (!contentRef) {
    return null;
  }

  var componentContent = page.getContent(contentRef);

  if (!componentContent) {
    return null;
  }

  if ((componentContent === null || componentContent === void 0 ? void 0 : componentContent.type) !== TYPE_COMPONENT_CONTAINER_ITEM_CONTENT) {
    return null;
  }

  return componentContent.data;
}

var ContainerItemImpl$1 = /*#__PURE__*/function (_EmitterMixin2) {
  dist_inherits(ContainerItemImpl, _EmitterMixin2);

  var _super8 = dist_createSuper(ContainerItemImpl);

  function ContainerItemImpl(model, linkFactory, metaFactory, eventBus, logger) {
    var _this8;

    dist_classCallCheck(this, ContainerItemImpl);

    _this8 = _super8.call(this, model, [], linkFactory, metaFactory);
    _this8.model = model;
    _this8.metaFactory = metaFactory;
    _this8.logger = logger;
    eventBus === null || eventBus === void 0 ? void 0 : eventBus.on("page.update", _this8.onPageUpdate.bind(dist_assertThisInitialized(_this8)));
    return _this8;
  }

  dist_createClass(ContainerItemImpl, [{
    key: "onPageUpdate",
    value: function onPageUpdate(event) {
      var _a, _b;

      var page = event.page;
      var model = resolve(page, page.root);

      if ((model === null || model === void 0 ? void 0 : model.id) !== this.getId()) {
        return;
      }

      (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug("Received container item update event.");
      (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug("Event:", event);
      this.model = model;
      this.meta = this.metaFactory(model.meta);
      this.emit("update", {});
    }
  }, {
    key: "getLabel",
    value: function getLabel() {
      return this.model.label;
    }
  }, {
    key: "getType",
    value: function getType() {
      var _a;

      return (_a = this.model.ctype) !== null && _a !== void 0 ? _a : this.model.label;
    }
  }, {
    key: "isHidden",
    value: function isHidden() {
      return !!this.model.meta.hidden;
    }
  }, {
    key: "getParameters",
    value: function getParameters() {
      var _a;

      return (_a = this.model.meta.paramsInfo) !== null && _a !== void 0 ? _a : {};
    }
  }, {
    key: "getContent",
    value: function getContent(page) {
      return getContainerItemContent(this, page);
    }
  }, {
    key: "getContentReference",
    value: function getContentReference() {
      return this.model.content;
    }
  }]);

  return ContainerItemImpl;
}(dist_EmitterMixin(ComponentImpl$1));

ContainerItemImpl$1 = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(ComponentModelToken)), __param(1, Object(inversify["inject"])(LinkFactory)), __param(2, Object(inversify["inject"])(MetaCollectionFactory)), __param(3, Object(inversify["inject"])(PageEventBusService)), __param(3, Object(inversify["optional"])()), __param(4, Object(inversify["inject"])(Logger)), __param(4, Object(inversify["optional"])()), __metadata("design:paramtypes", [Object, LinkFactory, Function, Object, Logger])], ContainerItemImpl$1);
/**
 * Checks whether a value is a page container item.
 * @param value The value to check.
 */

function isContainerItem$2(value) {
  return value instanceof ContainerItemImpl$1;
}

var ContainerItemImpl = /*#__PURE__*/function (_EmitterMixin3) {
  dist_inherits(ContainerItemImpl, _EmitterMixin3);

  var _super9 = dist_createSuper(ContainerItemImpl);

  function ContainerItemImpl(model, metaFactory, urlBuilder, eventBus, logger) {
    var _this9;

    dist_classCallCheck(this, ContainerItemImpl);

    _this9 = _super9.call(this, model, [], metaFactory, urlBuilder);
    _this9.model = model;
    _this9.metaFactory = metaFactory;
    _this9.logger = logger;
    eventBus === null || eventBus === void 0 ? void 0 : eventBus.on("page.update", _this9.onPageUpdate.bind(dist_assertThisInitialized(_this9)));
    return _this9;
  }

  dist_createClass(ContainerItemImpl, [{
    key: "onPageUpdate",
    value: function onPageUpdate(event) {
      var _a, _b;

      var model = event.page.page;

      if (model.id !== this.getId()) {
        return;
      }

      (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug("Received container item update event.");
      (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug("Event:", event);
      this.model = model;
      this.meta = this.metaFactory(model._meta);
      this.emit("update", {});
    }
  }, {
    key: "getLabel",
    value: function getLabel() {
      return this.model.label;
    }
  }, {
    key: "getType",
    value: function getType() {
      var _a;

      return (_a = this.model.ctype) !== null && _a !== void 0 ? _a : this.model.label;
    }
  }, {
    key: "isHidden",
    value: function isHidden() {
      return !!this.model._meta.hidden;
    }
  }, {
    key: "getParameters",
    value: function getParameters() {
      var _a;

      return (_a = this.model._meta.paramsInfo) !== null && _a !== void 0 ? _a : {};
    }
  }, {
    key: "getContent",
    value: function getContent() {
      var _a;

      (_a = this.logger) === null || _a === void 0 ? void 0 : _a.warn('The method "getContent" is not supported in PMA 0.9 and always returns "null".');
      return null;
    }
  }, {
    key: "getContentReference",
    value: function getContentReference() {
      var _a;

      (_a = this.logger) === null || _a === void 0 ? void 0 : _a.warn('The method "getContentReference" is not supported in PMA 0.9 and always returns "undefined".');
      return undefined;
    }
  }]);

  return ContainerItemImpl;
}(dist_EmitterMixin(ComponentImpl));

ContainerItemImpl = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(ComponentModelToken)), __param(1, Object(inversify["inject"])(MetaCollectionFactory)), __param(2, Object(inversify["inject"])(UrlBuilderService)), __param(3, Object(inversify["inject"])(PageEventBusService)), __param(3, Object(inversify["optional"])()), __param(4, Object(inversify["inject"])(Logger)), __param(4, Object(inversify["optional"])()), __metadata("design:paramtypes", [Object, Function, Object, Object, Logger])], ContainerItemImpl);
/**
 * Checks whether a value is a page container item.
 * @param value The value to check.
 */

function isContainerItem$1(value) {
  return value instanceof ContainerItemImpl;
}

var TYPE_META_COMMENT = "comment";
/**
 * Meta-data following before a page component.
 */

var META_POSITION_BEGIN = "begin";
/**
 * Meta-data following after a page component.
 */

var META_POSITION_END = "end";

var MetaImpl = /*#__PURE__*/function () {
  function MetaImpl(model, position) {
    dist_classCallCheck(this, MetaImpl);

    this.model = model;
    this.position = position;
  }

  dist_createClass(MetaImpl, [{
    key: "getData",
    value: function getData() {
      return this.model.data;
    }
  }, {
    key: "getPosition",
    value: function getPosition() {
      return this.position;
    }
  }]);

  return MetaImpl;
}();
/**
 * Checks whether a value is a meta-data object.
 * @param value The value to check.
 */


function isMeta(value) {
  return value instanceof MetaImpl;
}

var HTML_COMMENT = /^<!--(.*)-->$/;
/**
 * Meta information stored in HST-comments.
 */

var MetaCommentImpl = /*#__PURE__*/function (_MetaImpl) {
  dist_inherits(MetaCommentImpl, _MetaImpl);

  var _super10 = dist_createSuper(MetaCommentImpl);

  function MetaCommentImpl() {
    dist_classCallCheck(this, MetaCommentImpl);

    return _super10.apply(this, arguments);
  }

  dist_createClass(MetaCommentImpl, [{
    key: "getData",
    value: function getData() {
      var data = _get(dist_getPrototypeOf(MetaCommentImpl.prototype), "getData", this).call(this);

      var _ref4 = data.match(HTML_COMMENT) || [],
          _ref5 = dist_slicedToArray(_ref4, 2),
          _ref5$ = _ref5[1],
          payload = _ref5$ === void 0 ? data : _ref5$;

      return payload;
    }
  }]);

  return MetaCommentImpl;
}(MetaImpl);
/**
 * Checks whether a value is a meta-data comment.
 * @param value The value to check.
 */


function isMetaComment(value) {
  return value instanceof MetaCommentImpl;
}
/**
 * The factory to produce meta-data collection from the page model meta-data.
 */


var MetaFactory = /*#__PURE__*/function (_SimpleFactory2) {
  dist_inherits(MetaFactory, _SimpleFactory2);

  var _super11 = dist_createSuper(MetaFactory);

  function MetaFactory() {
    dist_classCallCheck(this, MetaFactory);

    return _super11.apply(this, arguments);
  }

  dist_createClass(MetaFactory, [{
    key: "create",
    value: function create(meta, position) {
      var builder = this.mapping.get(meta.type);

      if (!builder) {
        throw new Error("Unsupported meta type: '".concat(meta.type, "'."));
      }

      return builder(meta, position);
    }
  }]);

  return MetaFactory;
}(SimpleFactory);

MetaFactory = __decorate([Object(inversify["injectable"])()], MetaFactory);
var MetaCollectionImpl_1;
var MetaCollectionModelToken = Symbol["for"]("MetaCollectionModelToken");

var MetaCollectionImpl = MetaCollectionImpl_1 = /*#__PURE__*/function (_Array) {
  dist_inherits(MetaCollectionImpl, _Array);

  var _super12 = dist_createSuper(MetaCollectionImpl);

  function MetaCollectionImpl(model, metaFactory) {
    var _this10;

    dist_classCallCheck(this, MetaCollectionImpl);

    _this10 = _super12.call.apply(_super12, [this].concat(dist_toConsumableArray((model.beginNodeSpan || []).map(function (beginModel) {
      return metaFactory.create(beginModel, META_POSITION_BEGIN);
    })), dist_toConsumableArray((model.endNodeSpan || []).map(function (endModel) {
      return metaFactory.create(endModel, META_POSITION_END);
    }))));
    _this10.comments = [];
    var prototype = Object.create(MetaCollectionImpl_1.prototype);
    prototype.constructor = Array.prototype.constructor;
    Object.setPrototypeOf(dist_assertThisInitialized(_this10), prototype);
    Object.freeze(dist_assertThisInitialized(_this10));
    return _this10;
  }

  dist_createClass(MetaCollectionImpl, [{
    key: "clear",
    value: function clear() {
      var _this11 = this;

      var comments = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : dist_toConsumableArray(this.comments);
      comments.forEach(function (comment) {
        comment.remove();

        var index = _this11.comments.indexOf(comment);

        if (index > -1) {
          _this11.comments.splice(index, 1);
        }
      });
    }
  }, {
    key: "render",
    value: function render(head, tail) {
      var _this$comments;

      var _a;

      var document = (_a = head.ownerDocument) !== null && _a !== void 0 ? _a : tail.ownerDocument;
      var comments = document ? [].concat(dist_toConsumableArray(this.filter(isMetaComment).filter(function (meta) {
        return meta.getPosition() === META_POSITION_BEGIN;
      }).map(function (meta) {
        return document.createComment(meta.getData());
      }).map(function (comment) {
        var _a;

        (_a = head.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(comment, head);
        return comment;
      })), dist_toConsumableArray(this.filter(isMetaComment).filter(function (meta) {
        return meta.getPosition() === META_POSITION_END;
      }).reverse().map(function (meta) {
        return document.createComment(meta.getData());
      }).map(function (comment) {
        var _a, _b;

        if (tail.nextSibling) {
          (_a = tail.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(comment, tail.nextSibling);
        } else {
          (_b = tail.parentNode) === null || _b === void 0 ? void 0 : _b.appendChild(comment);
        }

        return comment;
      }))) : [];

      (_this$comments = this.comments).push.apply(_this$comments, dist_toConsumableArray(comments));

      return this.clear.bind(this, comments);
    }
  }]);

  return MetaCollectionImpl;
}( /*#__PURE__*/_wrapNativeSuper(Array));

MetaCollectionImpl = MetaCollectionImpl_1 = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(MetaCollectionModelToken)), __param(1, Object(inversify["inject"])(MetaFactory)), __metadata("design:paramtypes", [Object, MetaFactory])], MetaCollectionImpl);
/**
 * Checks whether a value is a meta-data collection.
 * @param value The value to check.
 */

function isMetaCollection(value) {
  return value instanceof MetaCollectionImpl;
}

var ButtonFactory = /*#__PURE__*/function (_SimpleFactory3) {
  dist_inherits(ButtonFactory, _SimpleFactory3);

  var _super13 = dist_createSuper(ButtonFactory);

  function ButtonFactory(metaCollectionFactory) {
    var _this12;

    dist_classCallCheck(this, ButtonFactory);

    _this12 = _super13.call(this);
    _this12.metaCollectionFactory = metaCollectionFactory;
    return _this12;
  }

  dist_createClass(ButtonFactory, [{
    key: "create",
    value: function create(type) {
      if (!this.mapping.has(type)) {
        throw new Error("Unsupported button type: '".concat(type, "'."));
      }

      for (var _len8 = arguments.length, params = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {
        params[_key8 - 1] = arguments[_key8];
      }

      var meta = this.mapping.get(type).apply(void 0, params);
      return isMetaCollection(meta) ? meta : this.metaCollectionFactory(meta);
    }
  }]);

  return ButtonFactory;
}(SimpleFactory);

ButtonFactory = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(MetaCollectionFactory)), __metadata("design:paramtypes", [Function])], ButtonFactory);
/**
 * A component factory producing components based on a type.
 */

var ComponentFactory$1 = /*#__PURE__*/function (_SimpleFactory4) {
  dist_inherits(ComponentFactory, _SimpleFactory4);

  var _super14 = dist_createSuper(ComponentFactory);

  function ComponentFactory() {
    dist_classCallCheck(this, ComponentFactory);

    return _super14.apply(this, arguments);
  }

  dist_createClass(ComponentFactory, [{
    key: "create",
    value:
    /**
     * Produces a component based on the page model.
     * @param page The page model.
     */
    function create(page) {
      var _this13 = this;

      var _a, _b;

      var heap = [page.root];
      var pool = new Map();

      for (var i = 0; i < heap.length; i++) {
        heap.push.apply(heap, dist_toConsumableArray((_b = (_a = resolve(page, heap[i])) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : []));
      }

      return heap.reverse().reduce(function (previous, reference) {
        var _a, _b;

        var model = resolve(page, reference);
        var children = (_b = (_a = model === null || model === void 0 ? void 0 : model.children) === null || _a === void 0 ? void 0 : _a.map(function (child) {
          return pool.get(resolve(page, child));
        })) !== null && _b !== void 0 ? _b : [];

        var component = _this13.buildComponent(model, children);

        pool.set(model, component);
        return component;
      }, undefined);
    }
  }, {
    key: "buildComponent",
    value: function buildComponent(model, children) {
      var builder = this.mapping.get(model.type);

      if (!builder) {
        throw new Error("Unsupported component type: '".concat(model.type, "'."));
      }

      return builder(model, children);
    }
  }]);

  return ComponentFactory;
}(SimpleFactory);

ComponentFactory$1 = __decorate([Object(inversify["injectable"])()], ComponentFactory$1);

var ContentFactory$1 = /*#__PURE__*/function (_SimpleFactory5) {
  dist_inherits(ContentFactory, _SimpleFactory5);

  var _super15 = dist_createSuper(ContentFactory);

  function ContentFactory() {
    dist_classCallCheck(this, ContentFactory);

    return _super15.apply(this, arguments);
  }

  dist_createClass(ContentFactory, [{
    key: "create",
    value: function create(model) {
      if (!this.mapping.has(model.type)) {
        return model;
      }

      return this.mapping.get(model.type)(model);
    }
  }]);

  return ContentFactory;
}(SimpleFactory);

ContentFactory$1 = __decorate([Object(inversify["injectable"])()], ContentFactory$1);
var LinkRewriterService = Symbol["for"]("LinkRewriterService");

var dist_LinkRewriterImpl = /*#__PURE__*/function () {
  function LinkRewriterImpl(linkFactory) {
    dist_classCallCheck(this, LinkRewriterImpl);

    this.linkFactory = linkFactory;
  }

  dist_createClass(LinkRewriterImpl, [{
    key: "rewrite",
    value: function rewrite(content) {
      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "text/html";
      var document = parseDocument(content, {
        xmlMode: type !== "text/html"
      });
      this.rewriteAnchors(document);
      this.rewriteImages(document);
      return esm(document, {
        selfClosingTags: true
      });
    }
  }, {
    key: "rewriteAnchors",
    value: function rewriteAnchors(document) {
      var _this14 = this;

      Array.from(getElementsByTagName("a", document)).filter(function (element) {
        return hasAttrib(element, "href") && hasAttrib(element, "data-type");
      }).forEach(function (element) {
        var url = _this14.linkFactory.create({
          href: getAttributeValue(element, "href"),
          type: getAttributeValue(element, "data-type")
        });

        if (url) {
          element.attribs.href = url;
        }

        return element;
      });
    }
  }, {
    key: "rewriteImages",
    value: function rewriteImages(document) {
      var _this15 = this;

      Array.from(getElementsByTagName("img", document)).filter(function (element) {
        return hasAttrib(element, "src");
      }).forEach(function (element) {
        var url = _this15.linkFactory.create({
          href: getAttributeValue(element, "src"),
          type: TYPE_LINK_RESOURCE
        });

        if (url) {
          element.attribs.src = url;
        }
      });
    }
  }]);

  return LinkRewriterImpl;
}();

dist_LinkRewriterImpl = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(LinkFactory)), __metadata("design:paramtypes", [LinkFactory])], dist_LinkRewriterImpl);
var PageModelToken = Symbol["for"]("PageModelToken");

var PageImpl$1 = /*#__PURE__*/function () {
  function PageImpl(model, buttonFactory, componentFactory, contentFactory, linkFactory, linkRewriter, metaFactory, cmsEventBus, pageEventBus, logger) {
    dist_classCallCheck(this, PageImpl);

    this.model = model;
    this.buttonFactory = buttonFactory;
    this.contentFactory = contentFactory;
    this.linkFactory = linkFactory;
    this.linkRewriter = linkRewriter;
    this.metaFactory = metaFactory;
    this.cmsEventBus = cmsEventBus;
    this.logger = logger;
    this.content = new WeakMap();
    pageEventBus === null || pageEventBus === void 0 ? void 0 : pageEventBus.on("page.update", this.onPageUpdate.bind(this));
    this.root = componentFactory.create(model);
  }

  dist_createClass(PageImpl, [{
    key: "onPageUpdate",
    value: function onPageUpdate(event) {
      Object.assign(this.model.page, event.page.page);
    }
  }, {
    key: "getButton",
    value: function getButton(type) {
      var _this$buttonFactory;

      for (var _len9 = arguments.length, params = new Array(_len9 > 1 ? _len9 - 1 : 0), _key9 = 1; _key9 < _len9; _key9++) {
        params[_key9 - 1] = arguments[_key9];
      }

      return (_this$buttonFactory = this.buttonFactory).create.apply(_this$buttonFactory, [type].concat(params));
    }
  }, {
    key: "getChannelParameters",
    value: function getChannelParameters() {
      return this.model.channel.info.props;
    }
  }, {
    key: "getComponent",
    value: function getComponent() {
      var _a2;

      var _a;

      return (_a = this.root) === null || _a === void 0 ? void 0 : (_a2 = _a).getComponent.apply(_a2, arguments);
    }
  }, {
    key: "getContent",
    value: function getContent(reference) {
      var model = resolve(this.model, isReference(reference) ? reference : {
        $ref: "/page/".concat(reference)
      });

      if (!model) {
        return undefined;
      }

      if (!this.content.has(model)) {
        this.content.set(model, this.contentFactory.create(model));
      }

      return this.content.get(model);
    }
  }, {
    key: "getDocument",
    value: function getDocument() {
      return this.model.document && this.getContent(this.model.document);
    }
  }, {
    key: "getLocale",
    value: function getLocale() {
      return this.model.meta.locale || "en_US";
    }
  }, {
    key: "getMeta",
    value: function getMeta(meta) {
      return this.metaFactory(meta);
    }
  }, {
    key: "getTitle",
    value: function getTitle() {
      var _a, _b;

      return (_b = (_a = resolve(this.model, this.model.root)) === null || _a === void 0 ? void 0 : _a.meta) === null || _b === void 0 ? void 0 : _b.pageTitle;
    }
  }, {
    key: "getUrl",
    value: function getUrl(link) {
      var _a, _b, _c;

      if (typeof link === "undefined" || isLink(link) || isAbsoluteUrl(link)) {
        return this.linkFactory.create((_b = (_a = link) !== null && _a !== void 0 ? _a : this.model.links.site) !== null && _b !== void 0 ? _b : "");
      }

      return resolveUrl(link, (_c = this.linkFactory.create(this.model.links.site)) !== null && _c !== void 0 ? _c : "");
    }
  }, {
    key: "getVersion",
    value: function getVersion() {
      return this.model.meta.version;
    }
  }, {
    key: "getVisitor",
    value: function getVisitor() {
      return this.model.meta.visitor;
    }
  }, {
    key: "getVisit",
    value: function getVisit() {
      return this.model.meta.visit;
    }
  }, {
    key: "isPreview",
    value: function isPreview() {
      return !!this.model.meta.preview;
    }
  }, {
    key: "rewriteLinks",
    value: function rewriteLinks(content) {
      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "text/html";
      return this.linkRewriter.rewrite(content, type);
    }
  }, {
    key: "sync",
    value: function sync() {
      var _a;

      (_a = this.cmsEventBus) === null || _a === void 0 ? void 0 : _a.emit("page.ready", {});
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.model;
    }
  }]);

  return PageImpl;
}();

PageImpl$1 = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(PageModelToken)), __param(1, Object(inversify["inject"])(ButtonFactory)), __param(2, Object(inversify["inject"])(ComponentFactory$1)), __param(3, Object(inversify["inject"])(ContentFactory$1)), __param(4, Object(inversify["inject"])(LinkFactory)), __param(5, Object(inversify["inject"])(LinkRewriterService)), __param(6, Object(inversify["inject"])(MetaCollectionFactory)), __param(7, Object(inversify["inject"])(CmsEventBusService)), __param(7, Object(inversify["optional"])()), __param(8, Object(inversify["inject"])(PageEventBusService)), __param(8, Object(inversify["optional"])()), __param(9, Object(inversify["inject"])(Logger)), __param(9, Object(inversify["optional"])()), __metadata("design:paramtypes", [Object, ButtonFactory, ComponentFactory$1, ContentFactory$1, LinkFactory, Object, Function, Object, Object, Logger])], PageImpl$1);
/**
 * Checks whether a value is a page.
 * @param value The value to check.
 */

function isPage$2(value) {
  return value instanceof PageImpl$1;
}
/**
 * A component factory producing components based on a type.
 */


var ComponentFactory = /*#__PURE__*/function (_SimpleFactory6) {
  dist_inherits(ComponentFactory, _SimpleFactory6);

  var _super16 = dist_createSuper(ComponentFactory);

  function ComponentFactory() {
    dist_classCallCheck(this, ComponentFactory);

    return _super16.apply(this, arguments);
  }

  dist_createClass(ComponentFactory, [{
    key: "create",
    value:
    /**
     * Produces a component based on the model.
     * @param model The component model.
     */
    function create(model) {
      var _this16 = this;

      var _a, _b;

      var component;
      var queue = [{
        model: model
      }];

      var _loop3 = function _loop3() {
        var head = queue.shift();

        if (!head.children && ((_a = head.model.components) === null || _a === void 0 ? void 0 : _a.length)) {
          head.children = [];
          queue.unshift.apply(queue, dist_toConsumableArray(head.model.components.map(function (componentModel) {
            return {
              model: componentModel,
              siblings: head.children
            };
          })).concat([head]));
          return "continue";
        }

        component = _this16.buildComponent(head.model, (_b = head.children) !== null && _b !== void 0 ? _b : []);

        if (head.siblings) {
          head.siblings.push(component);
        }
      };

      while (queue.length) {
        var _ret = _loop3();

        if (_ret === "continue") continue;
      }

      return component;
    }
  }, {
    key: "buildComponent",
    value: function buildComponent(model, children) {
      var builder = this.mapping.get(model.type);

      if (!builder) {
        throw new Error("Unsupported component type: '".concat(model.type, "'."));
      }

      return builder(model, children);
    }
  }]);

  return ComponentFactory;
}(SimpleFactory);

ComponentFactory = __decorate([Object(inversify["injectable"])()], ComponentFactory);
var ContentFactory = Symbol["for"]("ContentFactory");
var PageImpl_1;

var PageImpl = PageImpl_1 = /*#__PURE__*/function () {
  function PageImpl(model, buttonFactory, componentFactory, contentFactory, linkFactory, linkRewriter, metaFactory, cmsEventBus, eventBus, logger) {
    var _this17 = this;

    dist_classCallCheck(this, PageImpl);

    this.model = model;
    this.buttonFactory = buttonFactory;
    this.contentFactory = contentFactory;
    this.linkFactory = linkFactory;
    this.linkRewriter = linkRewriter;
    this.metaFactory = metaFactory;
    this.cmsEventBus = cmsEventBus;
    this.logger = logger;
    eventBus === null || eventBus === void 0 ? void 0 : eventBus.on("page.update", this.onPageUpdate.bind(this));
    this.root = componentFactory.create(model.page);
    this.content = new Map(Object.entries(model.content || {}).map(function (_ref6) {
      var _ref7 = dist_slicedToArray(_ref6, 2),
          alias = _ref7[0],
          m = _ref7[1];

      return [alias, _this17.contentFactory(m)];
    }));
  }

  dist_createClass(PageImpl, [{
    key: "onPageUpdate",
    value: function onPageUpdate(event) {
      var _this18 = this;

      Object.entries(event.page.content || {}).forEach(function (_ref8) {
        var _ref9 = dist_slicedToArray(_ref8, 2),
            alias = _ref9[0],
            model = _ref9[1];

        return _this18.content.set(alias, _this18.contentFactory(model));
      });
    }
  }, {
    key: "getButton",
    value: function getButton(type) {
      var _this$buttonFactory2;

      for (var _len10 = arguments.length, params = new Array(_len10 > 1 ? _len10 - 1 : 0), _key10 = 1; _key10 < _len10; _key10++) {
        params[_key10 - 1] = arguments[_key10];
      }

      return (_this$buttonFactory2 = this.buttonFactory).create.apply(_this$buttonFactory2, [type].concat(params));
    }
  }, {
    key: "getChannelParameters",
    value: function getChannelParameters() {
      var _a, _b;

      return (_b = (_a = this.model.channel) === null || _a === void 0 ? void 0 : _a.info.props) !== null && _b !== void 0 ? _b : {};
    }
  }, {
    key: "getComponent",
    value: function getComponent() {
      var _this$root;

      return (_this$root = this.root).getComponent.apply(_this$root, arguments);
    }
  }, {
    key: "getContent",
    value: function getContent(reference) {
      var contentReference = isReference(reference) ? PageImpl_1.getContentReference(reference) : reference;
      return this.content.get(contentReference);
    }
  }, {
    key: "getDocument",
    value: function getDocument() {
      throw new Error("The page document is not supported by this version of the Page Model API.");
    }
  }, {
    key: "getLocale",
    value: function getLocale() {
      throw new Error("The locale is not supported by this version of the Page Model API.");
    }
  }, {
    key: "getMeta",
    value: function getMeta(meta) {
      return this.metaFactory(meta);
    }
  }, {
    key: "getTitle",
    value: function getTitle() {
      return this.model.page._meta.pageTitle;
    }
  }, {
    key: "getUrl",
    value: function getUrl(link) {
      var _a;

      return this.linkFactory.create((_a = link) !== null && _a !== void 0 ? _a : Object.assign(Object.assign({}, this.model._links.site), {
        type: TYPE_LINK_INTERNAL
      }));
    }
  }, {
    key: "getVersion",
    value: function getVersion() {
      return this.model._meta.version;
    }
  }, {
    key: "getVisitor",
    value: function getVisitor() {
      return this.model._meta.visitor;
    }
  }, {
    key: "getVisit",
    value: function getVisit() {
      return this.model._meta.visit;
    }
  }, {
    key: "isPreview",
    value: function isPreview() {
      return !!this.model._meta.preview;
    }
  }, {
    key: "rewriteLinks",
    value: function rewriteLinks(content) {
      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "text/html";
      return this.linkRewriter.rewrite(content, type);
    }
  }, {
    key: "sync",
    value: function sync() {
      var _a;

      (_a = this.cmsEventBus) === null || _a === void 0 ? void 0 : _a.emit("page.ready", {});
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.model;
    }
  }], [{
    key: "getContentReference",
    value: function getContentReference(reference) {
      return reference.$ref.split("/", 3)[2] || "";
    }
  }]);

  return PageImpl;
}();

PageImpl = PageImpl_1 = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(PageModelToken)), __param(1, Object(inversify["inject"])(ButtonFactory)), __param(2, Object(inversify["inject"])(ComponentFactory)), __param(3, Object(inversify["inject"])(ContentFactory)), __param(4, Object(inversify["inject"])(LinkFactory)), __param(5, Object(inversify["inject"])(LinkRewriterService)), __param(6, Object(inversify["inject"])(MetaCollectionFactory)), __param(7, Object(inversify["inject"])(CmsEventBusService)), __param(8, Object(inversify["inject"])(PageEventBusService)), __param(8, Object(inversify["optional"])()), __param(9, Object(inversify["inject"])(Logger)), __param(9, Object(inversify["optional"])()), __metadata("design:paramtypes", [Object, ButtonFactory, ComponentFactory, Function, LinkFactory, Object, Function, Object, Object, Logger])], PageImpl);
/**
 * Checks whether a value is a page.
 * @param value The value to check.
 */

function isPage$1(value) {
  return value instanceof PageImpl;
}

var ContentModelToken = Symbol["for"]("ContentModelToken");

var ContentImpl = /*#__PURE__*/function () {
  function ContentImpl(model, linkFactory, metaFactory) {
    dist_classCallCheck(this, ContentImpl);

    var _a;

    this.model = model;
    this.linkFactory = linkFactory;
    this.meta = metaFactory((_a = this.model._meta) !== null && _a !== void 0 ? _a : {});
  }

  dist_createClass(ContentImpl, [{
    key: "getId",
    value: function getId() {
      return this.model.id;
    }
  }, {
    key: "getLocale",
    value: function getLocale() {
      return this.model.localeString;
    }
  }, {
    key: "getMeta",
    value: function getMeta() {
      return this.meta;
    }
  }, {
    key: "getName",
    value: function getName() {
      return this.model.name;
    }
  }, {
    key: "getData",
    value: function getData() {
      return this.model;
    }
  }, {
    key: "getUrl",
    value: function getUrl() {
      return this.linkFactory.create(this.model._links.site);
    }
  }]);

  return ContentImpl;
}();

ContentImpl = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(ContentModelToken)), __param(1, Object(inversify["inject"])(LinkFactory)), __param(2, Object(inversify["inject"])(MetaCollectionFactory)), __metadata("design:paramtypes", [Object, LinkFactory, Function])], ContentImpl);
/**
 * Checks whether a value is a content.
 * @param value The value to check.
 */

function isContent(value) {
  return value instanceof ContentImpl;
}

var DocumentModelToken = Symbol["for"]("DocumentModelToken");
var TYPE_DOCUMENT = "document";

var DocumentImpl = /*#__PURE__*/function () {
  function DocumentImpl(model, linkFactory, metaFactory) {
    dist_classCallCheck(this, DocumentImpl);

    var _a;

    this.model = model;
    this.linkFactory = linkFactory;
    this.meta = metaFactory((_a = this.model.meta) !== null && _a !== void 0 ? _a : {});
  }

  dist_createClass(DocumentImpl, [{
    key: "getId",
    value: function getId() {
      return this.model.data.id;
    }
  }, {
    key: "getLocale",
    value: function getLocale() {
      return this.model.data.localeString;
    }
  }, {
    key: "getMeta",
    value: function getMeta() {
      return this.meta;
    }
  }, {
    key: "getName",
    value: function getName() {
      return this.model.data.name;
    }
  }, {
    key: "getData",
    value: function getData() {
      return this.model.data;
    }
  }, {
    key: "getUrl",
    value: function getUrl() {
      return this.linkFactory.create(this.model.links.site);
    }
  }]);

  return DocumentImpl;
}();

DocumentImpl = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(DocumentModelToken)), __param(1, Object(inversify["inject"])(LinkFactory)), __param(2, Object(inversify["inject"])(MetaCollectionFactory)), __metadata("design:paramtypes", [Object, LinkFactory, Function])], DocumentImpl);
/**
 * Checks whether a value is a document.
 * @param value The value to check.
 */

function dist_isDocument(value) {
  return value instanceof DocumentImpl;
}

var ImageFactory = Symbol["for"]("ImageFactory");
var ImageModelToken = Symbol["for"]("ImageModelToken");

var ImageImpl = /*#__PURE__*/function () {
  function ImageImpl(model, linkFactory) {
    dist_classCallCheck(this, ImageImpl);

    this.model = model;
    this.linkFactory = linkFactory;
  }

  dist_createClass(ImageImpl, [{
    key: "getDisplayName",
    value: function getDisplayName() {
      return this.model.displayName;
    }
  }, {
    key: "getFileName",
    value: function getFileName() {
      var _a;

      return (_a = this.model.fileName) !== null && _a !== void 0 ? _a : undefined;
    }
  }, {
    key: "getHeight",
    value: function getHeight() {
      return this.model.height;
    }
  }, {
    key: "getMimeType",
    value: function getMimeType() {
      return this.model.mimeType;
    }
  }, {
    key: "getName",
    value: function getName() {
      return this.model.name;
    }
  }, {
    key: "getSize",
    value: function getSize() {
      return this.model.size;
    }
  }, {
    key: "getUrl",
    value: function getUrl() {
      return this.model.links.site && this.linkFactory.create(this.model.links.site);
    }
  }, {
    key: "getWidth",
    value: function getWidth() {
      return this.model.width;
    }
  }]);

  return ImageImpl;
}();

ImageImpl = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(ImageModelToken)), __param(1, Object(inversify["inject"])(LinkFactory)), __metadata("design:paramtypes", [Object, LinkFactory])], ImageImpl);
var ImageSetModelToken = Symbol["for"]("ImageSetModelToken");
var TYPE_IMAGE_SET = "imageset";

var ImageSetImpl = /*#__PURE__*/function () {
  function ImageSetImpl(model, imageFactory) {
    dist_classCallCheck(this, ImageSetImpl);

    this.model = model;
    this.original = model.data.original ? imageFactory(model.data.original) : undefined;
    this.thumbnail = model.data.thumbnail ? imageFactory(model.data.thumbnail) : undefined;
  }

  dist_createClass(ImageSetImpl, [{
    key: "getDescription",
    value: function getDescription() {
      var _a;

      return (_a = this.model.data.description) !== null && _a !== void 0 ? _a : undefined;
    }
  }, {
    key: "getDisplayName",
    value: function getDisplayName() {
      return this.model.data.displayName;
    }
  }, {
    key: "getFileName",
    value: function getFileName() {
      var _a;

      return (_a = this.model.data.fileName) !== null && _a !== void 0 ? _a : undefined;
    }
  }, {
    key: "getId",
    value: function getId() {
      return this.model.data.id;
    }
  }, {
    key: "getLocale",
    value: function getLocale() {
      var _a;

      return (_a = this.model.data.localeString) !== null && _a !== void 0 ? _a : undefined;
    }
  }, {
    key: "getName",
    value: function getName() {
      return this.model.data.name;
    }
  }, {
    key: "getOriginal",
    value: function getOriginal() {
      return this.original;
    }
  }, {
    key: "getThumbnail",
    value: function getThumbnail() {
      return this.thumbnail;
    }
  }]);

  return ImageSetImpl;
}();

ImageSetImpl = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(ImageSetModelToken)), __param(1, Object(inversify["inject"])(ImageFactory)), __metadata("design:paramtypes", [Object, Function])], ImageSetImpl);
/**
 * Checks whether a value is an image set.
 * @param value The value to check.
 */

function isImageSet(value) {
  return value instanceof ImageSetImpl;
}
/**
 * A manage content button.
 */


var TYPE_MANAGE_CONTENT_BUTTON = "MANAGE_CONTENT_LINK";

function createManageContentButton(params) {
  var _a;

  var meta = (_a = params.content) === null || _a === void 0 ? void 0 : _a.getMeta();
  var entries = [["defaultPath", params.path], ["documentTemplateQuery", params.documentTemplateQuery], ["folderTemplateQuery", params.folderTemplateQuery], ["rootPath", params.root], ["parameterName", params.parameter], ["parameterValueIsRelativePath", params.relative ? "true" : undefined], ["pickerEnableUpload", params.pickerEnableUpload], ["pickerConfiguration", params.pickerConfiguration], ["pickerInitialPath", params.pickerInitialPath], ["pickerRemembersLastVisited", params.pickerRemembersLastVisited ? "true" : undefined], ["pickerRootPath", params.pickerRootPath], ["pickerSelectableNodeTypes", params.pickerSelectableNodeTypes]].filter(function (_ref10) {
    var _ref11 = dist_slicedToArray(_ref10, 2),
        value = _ref11[1];

    return !!value;
  });

  if (!entries.length) {
    return meta !== null && meta !== void 0 ? meta : {};
  }

  var model = Object.fromEntries(entries);

  if (!meta) {
    return {
      beginNodeSpan: [{
        type: TYPE_META_COMMENT,
        data: JSON.stringify(Object.assign({
          "HST-Type": TYPE_MANAGE_CONTENT_BUTTON
        }, model))
      }]
    };
  }

  var merge = function merge(item) {
    return {
      type: TYPE_META_COMMENT,
      data: JSON.stringify(Object.assign(JSON.parse(item.getData()), model))
    };
  };

  return {
    beginNodeSpan: meta.filter(function (item) {
      return item.getPosition() === META_POSITION_BEGIN;
    }).map(merge),
    endNodeSpan: meta.filter(function (item) {
      return item.getPosition() === META_POSITION_END;
    }).map(merge)
  };
}

var MenuItemFactory = Symbol["for"]("MenuItemFactory");
var MenuItemModelToken = Symbol["for"]("MenuItemModelToken");

var MenuItemImpl = /*#__PURE__*/function () {
  function MenuItemImpl(model, linkFactory, menuItemFactory) {
    dist_classCallCheck(this, MenuItemImpl);

    this.model = model;
    this.linkFactory = linkFactory;
    this.children = model.childMenuItems.map(menuItemFactory);
  }

  dist_createClass(MenuItemImpl, [{
    key: "getChildren",
    value: function getChildren() {
      return this.children;
    }
  }, {
    key: "getDepth",
    value: function getDepth() {
      return this.model.depth;
    }
  }, {
    key: "getLink",
    value: function getLink() {
      return this.model.links.site;
    }
  }, {
    key: "getName",
    value: function getName() {
      return this.model.name;
    }
  }, {
    key: "getParameters",
    value: function getParameters() {
      return this.model.parameters;
    }
  }, {
    key: "getUrl",
    value: function getUrl() {
      return this.model.links.site && this.linkFactory.create(this.model.links.site);
    }
  }, {
    key: "isExpanded",
    value: function isExpanded() {
      return this.model.expanded;
    }
  }, {
    key: "isRepositoryBased",
    value: function isRepositoryBased() {
      return this.model.repositoryBased;
    }
  }, {
    key: "isSelected",
    value: function isSelected() {
      return this.model.selected;
    }
  }]);

  return MenuItemImpl;
}();

MenuItemImpl = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(MenuItemModelToken)), __param(1, Object(inversify["inject"])(LinkFactory)), __param(2, Object(inversify["inject"])(MenuItemFactory)), __metadata("design:paramtypes", [Object, LinkFactory, Function])], MenuItemImpl);
var MenuModelToken = Symbol["for"]("MenuModelToken");
/**
 * A manage menu button.
 */

var TYPE_MANAGE_MENU_BUTTON = "EDIT_MENU_LINK";
var TYPE_MENU = "menu";

var MenuImpl = /*#__PURE__*/function () {
  function MenuImpl(model, metaFactory, menuItemFactory) {
    dist_classCallCheck(this, MenuImpl);

    this.model = model;
    this.items = model.data.siteMenuItems.map(menuItemFactory);
    this.meta = metaFactory(model.meta);
    this.selected = model.data.selectSiteMenuItem ? menuItemFactory(model.data.selectSiteMenuItem) : undefined;
  }

  dist_createClass(MenuImpl, [{
    key: "getItems",
    value: function getItems() {
      return this.items;
    }
  }, {
    key: "getMeta",
    value: function getMeta() {
      return this.meta;
    }
  }, {
    key: "getName",
    value: function getName() {
      return this.model.data.name;
    }
  }, {
    key: "getSelected",
    value: function getSelected() {
      return this.selected;
    }
  }]);

  return MenuImpl;
}();

MenuImpl = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(MenuModelToken)), __param(1, Object(inversify["inject"])(MetaCollectionFactory)), __param(2, Object(inversify["inject"])(MenuItemFactory)), __metadata("design:paramtypes", [Object, Function, Function])], MenuImpl);
/**
 * Checks whether a value is a menu.
 * @param value The value to check.
 */

function isMenu(value) {
  return value instanceof MenuImpl;
}

var PageFactory = Symbol["for"]("PageFactory");
var PaginationItemFactory = Symbol["for"]("PaginationItemFactory");
var PaginationItemModelToken = Symbol["for"]("PaginationItemModelToken");

var PaginationItemImpl = /*#__PURE__*/function () {
  function PaginationItemImpl(model, linkFactory) {
    dist_classCallCheck(this, PaginationItemImpl);

    this.model = model;
    this.linkFactory = linkFactory;
  }

  dist_createClass(PaginationItemImpl, [{
    key: "getNumber",
    value: function getNumber() {
      return this.model.number;
    }
  }, {
    key: "getUrl",
    value: function getUrl() {
      return this.linkFactory.create(this.model.links.site);
    }
  }]);

  return PaginationItemImpl;
}();

PaginationItemImpl = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(PaginationItemModelToken)), __param(1, Object(inversify["inject"])(LinkFactory)), __metadata("design:paramtypes", [Object, LinkFactory])], PaginationItemImpl);
var PaginationModelToken = Symbol["for"]("PaginationModelToken");
var TYPE_PAGINATION = "pagination";

var PaginationImpl = /*#__PURE__*/function () {
  function PaginationImpl(model, paginationItemFactory) {
    dist_classCallCheck(this, PaginationImpl);

    this.model = model;
    this.current = paginationItemFactory(model.current);
    this.first = paginationItemFactory(model.first);
    this.last = paginationItemFactory(model.last);
    this.next = model.next ? paginationItemFactory(model.next) : undefined;
    this.previous = model.previous ? paginationItemFactory(model.previous) : undefined;
    this.pages = model.pages.map(paginationItemFactory);
  }

  dist_createClass(PaginationImpl, [{
    key: "getCurrent",
    value: function getCurrent() {
      return this.current;
    }
  }, {
    key: "getFirst",
    value: function getFirst() {
      return this.first;
    }
  }, {
    key: "getItems",
    value: function getItems() {
      return this.model.items;
    }
  }, {
    key: "getLast",
    value: function getLast() {
      return this.last;
    }
  }, {
    key: "getNext",
    value: function getNext() {
      return this.next;
    }
  }, {
    key: "getOffset",
    value: function getOffset() {
      return this.model.offset;
    }
  }, {
    key: "getPages",
    value: function getPages() {
      return this.pages;
    }
  }, {
    key: "getPrevious",
    value: function getPrevious() {
      return this.previous;
    }
  }, {
    key: "getSize",
    value: function getSize() {
      return this.model.size;
    }
  }, {
    key: "getTotal",
    value: function getTotal() {
      return this.model.total;
    }
  }, {
    key: "isEnabled",
    value: function isEnabled() {
      return this.model.enabled;
    }
  }]);

  return PaginationImpl;
}();

PaginationImpl = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(PaginationModelToken)), __param(1, Object(inversify["inject"])(PaginationItemFactory)), __metadata("design:paramtypes", [Object, Function])], PaginationImpl);
/**
 * Checks whether a value is a pagination.
 * @param value The value to check.
 */

function isPagination(value) {
  return value instanceof PaginationImpl;
}

function PageModule$1() {
  return new inversify["ContainerModule"](function (bind) {
    bind(PageEventBusService).toDynamicValue(function () {
      return new emittery["Typed"]();
    }).inSingletonScope().when(function () {
      return typeof window !== "undefined";
    });
    bind(LinkRewriterService).to(dist_LinkRewriterImpl).inSingletonScope();
    bind(ButtonFactory).toSelf().inSingletonScope().onActivation(function (context, factory) {
      return factory.register(TYPE_MANAGE_CONTENT_BUTTON, createManageContentButton).register(TYPE_MANAGE_MENU_BUTTON, function (menu) {
        return menu.getMeta();
      });
    });
    bind(LinkFactory).toSelf().inSingletonScope().onActivation(function (_ref12, factory) {
      var container = _ref12.container;
      var url = container.get(UrlBuilderService);
      return factory.register(TYPE_LINK_INTERNAL, url.getSpaUrl.bind(url));
    });
    bind(MetaCollectionFactory).toFactory(function (_ref13) {
      var container = _ref13.container;
      return function (model) {
        var scope = container.createChild();
        scope.bind(MetaCollectionImpl).toSelf();
        scope.bind(MetaCollectionModelToken).toConstantValue(model);
        return scope.get(MetaCollectionImpl);
      };
    });
    bind(MetaFactory).toSelf().inSingletonScope().onActivation(function (context, factory) {
      return factory.register(TYPE_META_COMMENT, function (model, position) {
        return new MetaCommentImpl(model, position);
      });
    });
    bind(MenuItemFactory).toFactory(function (_ref14) {
      var container = _ref14.container;
      return function (model) {
        var scope = container.createChild();
        scope.bind(MenuItemImpl).toSelf();
        scope.bind(MenuItemModelToken).toConstantValue(model);
        return scope.get(MenuItemImpl);
      };
    });
    bind(ImageFactory).toFactory(function (_ref15) {
      var container = _ref15.container;
      return function (model) {
        var scope = container.createChild();
        scope.bind(ImageImpl).toSelf();
        scope.bind(ImageModelToken).toConstantValue(model);
        return scope.get(ImageImpl);
      };
    });
    bind(PaginationItemFactory).toFactory(function (_ref16) {
      var container = _ref16.container;
      return function (model) {
        var scope = container.createChild();
        scope.bind(PaginationItemImpl).toSelf();
        scope.bind(PaginationItemModelToken).toConstantValue(model);
        return scope.get(PaginationItemImpl);
      };
    });
    bind(ContentFactory$1).toSelf().inSingletonScope().onActivation(function (_ref17, factory) {
      var container = _ref17.container;
      return factory.register(TYPE_DOCUMENT, function (model) {
        var scope = container.createChild();
        scope.bind(DocumentImpl).toSelf();
        scope.bind(DocumentModelToken).toConstantValue(model);
        return scope.get(DocumentImpl);
      }).register(TYPE_IMAGE_SET, function (model) {
        var scope = container.createChild();
        scope.bind(ImageSetImpl).toSelf();
        scope.bind(ImageSetModelToken).toConstantValue(model);
        return scope.get(ImageSetImpl);
      }).register(TYPE_MENU, function (model) {
        var scope = container.createChild();
        scope.bind(MenuImpl).toSelf();
        scope.bind(MenuModelToken).toConstantValue(model);
        return scope.get(MenuImpl);
      }).register(TYPE_PAGINATION, function (model) {
        var scope = container.createChild();
        scope.bind(PaginationImpl).toSelf();
        scope.bind(PaginationModelToken).toConstantValue(model);
        return scope.get(PaginationImpl);
      });
    });
    bind(ComponentFactory$1).toSelf().inSingletonScope().onActivation(function (_ref18, factory) {
      var container = _ref18.container;
      return factory.register(TYPE_COMPONENT$1, function (model, children) {
        var scope = container.createChild();
        scope.bind(ComponentImpl$1).toSelf();
        scope.bind(ComponentModelToken).toConstantValue(model);
        scope.bind(ComponentChildrenToken).toConstantValue(children);
        return scope.get(ComponentImpl$1);
      }).register(TYPE_COMPONENT_CONTAINER$1, function (model, children) {
        var scope = container.createChild();
        scope.bind(ContainerImpl$1).toSelf();
        scope.bind(ComponentModelToken).toConstantValue(model);
        scope.bind(ComponentChildrenToken).toConstantValue(children);
        return scope.get(ContainerImpl$1);
      }).register(TYPE_COMPONENT_CONTAINER_ITEM$1, function (model) {
        var scope = container.createChild();
        scope.bind(ContainerItemImpl$1).toSelf();
        scope.bind(ComponentModelToken).toConstantValue(model);
        return scope.get(ContainerItemImpl$1);
      });
    });
    bind(PageFactory).toFactory(function (_ref19) {
      var container = _ref19.container;
      return function (model) {
        var scope = container.createChild();
        scope.bind(PageImpl$1).toSelf();
        scope.bind(PageModelToken).toConstantValue(model);
        return scope.get(PageImpl$1);
      };
    });
  });
}

function PageModule() {
  return new inversify["ContainerModule"](function (bind) {
    bind(PageEventBusService).toDynamicValue(function () {
      return new emittery["Typed"]();
    }).inSingletonScope().when(function () {
      return typeof window !== "undefined";
    });
    bind(LinkRewriterService).to(dist_LinkRewriterImpl).inSingletonScope();
    bind(ButtonFactory).toSelf().inSingletonScope().onActivation(function (context, factory) {
      return factory.register(TYPE_MANAGE_CONTENT_BUTTON, createManageContentButton).register(TYPE_MANAGE_MENU_BUTTON, function (_ref20) {
        var _meta = _ref20._meta;
        return _meta !== null && _meta !== void 0 ? _meta : {};
      });
    });
    bind(LinkFactory).toSelf().inSingletonScope().onActivation(function (_ref21, factory) {
      var container = _ref21.container;
      var url = container.get(UrlBuilderService);
      return factory.register(TYPE_LINK_INTERNAL, url.getSpaUrl.bind(url));
    });
    bind(MetaCollectionFactory).toFactory(function (_ref22) {
      var container = _ref22.container;
      return function (model) {
        var scope = container.createChild();
        scope.bind(MetaCollectionImpl).toSelf();
        scope.bind(MetaCollectionModelToken).toConstantValue(model);
        return scope.get(MetaCollectionImpl);
      };
    });
    bind(MetaFactory).toSelf().inSingletonScope().onActivation(function (context, factory) {
      return factory.register(TYPE_META_COMMENT, function (model, position) {
        return new MetaCommentImpl(model, position);
      });
    });
    bind(ContentFactory).toFactory(function (_ref23) {
      var container = _ref23.container;
      return function (model) {
        var scope = container.createChild();
        scope.bind(ContentImpl).toSelf();
        scope.bind(ContentModelToken).toConstantValue(model);
        return scope.get(ContentImpl);
      };
    });
    bind(ComponentFactory).toSelf().inSingletonScope().onActivation(function (_ref24, factory) {
      var container = _ref24.container;
      return factory.register(TYPE_COMPONENT, function (model, children) {
        var scope = container.createChild();
        scope.bind(ComponentImpl).toSelf();
        scope.bind(ComponentModelToken).toConstantValue(model);
        scope.bind(ComponentChildrenToken).toConstantValue(children);
        return scope.get(ComponentImpl);
      }).register(TYPE_COMPONENT_CONTAINER, function (model, children) {
        var scope = container.createChild();
        scope.bind(ContainerImpl).toSelf();
        scope.bind(ComponentModelToken).toConstantValue(model);
        scope.bind(ComponentChildrenToken).toConstantValue(children);
        return scope.get(ContainerImpl);
      }).register(TYPE_COMPONENT_CONTAINER_ITEM, function (model) {
        var scope = container.createChild();
        scope.bind(ContainerItemImpl).toSelf();
        scope.bind(ComponentModelToken).toConstantValue(model);
        return scope.get(ContainerItemImpl);
      });
    });
    bind(PageFactory).toFactory(function (_ref25) {
      var container = _ref25.container;
      return function (model) {
        var scope = container.createChild();
        scope.bind(PageImpl).toSelf();
        scope.bind(PageModelToken).toConstantValue(model);
        return scope.get(PageImpl);
      };
    });
  });
}
/**
 * Checks whether a value is a page component.
 * @param value The value to check.
 */


function isComponent(value) {
  return isComponent$2(value) || isComponent$1(value);
}
/**
 * Checks whether a value is a page container.
 * @param value The value to check.
 */


function isContainer(value) {
  return isContainer$2(value) || isContainer$1(value);
}
/**
 * Checks whether a value is a page container item.
 * @param value The value to check.
 */


function isContainerItem(value) {
  return isContainerItem$2(value) || isContainerItem$1(value);
}
/**
 * Checks whether a value is a page.
 * @param value The value to check.
 */


function isPage(value) {
  return isPage$2(value) || isPage$1(value);
}

var dist_Cookie = /*#__PURE__*/function () {
  function Cookie() {
    dist_classCallCheck(this, Cookie);
  }

  dist_createClass(Cookie, null, [{
    key: "SET_COOKIE",
    value:
    /**
     * Set cookie in the document
     * @param name Cookie name
     * @param value Cookie value
     * @param ttl  Sets the cookie max-age in days
     */
    function SET_COOKIE(name, value, ttl) {
      if (this.isWindowAvailable() && name && value) {
        var maxAge = ttl > this.MAX_TTL_DAYS ? this.getSeconds(this.MAX_TTL_DAYS) : this.getSeconds(ttl);
        document.cookie = cookie_default.a.serialize(name, value, {
          maxAge: maxAge
        });
      }
    }
    /**
     * Retrieve data from cookies
     * @return Cookie object.
     */

  }, {
    key: "GET_COOKIE",
    value: function GET_COOKIE() {
      var _a;

      return this.isWindowAvailable() ? cookie_default.a.parse((_a = document.cookie) !== null && _a !== void 0 ? _a : "") : {};
    }
    /**
     * Retrieve data from request cookies
     * @param request Current user's request.
     * @return Cookie object.
     */

  }, {
    key: "GET_COOKIE_FROM_REQUEST",
    value: function GET_COOKIE_FROM_REQUEST(request) {
      var _a, _b;

      return cookie_default.a.parse((_b = (_a = request.headers) === null || _a === void 0 ? void 0 : _a.cookie) !== null && _b !== void 0 ? _b : "");
    }
    /**
     * Erase cookie in the document
     * @param name Cookie name
     */

  }, {
    key: "ERASE_COOKIE",
    value: function ERASE_COOKIE(name) {
      if (this.isWindowAvailable()) {
        document.cookie = cookie_default.a.serialize(name, "", {
          maxAge: 0
        });
      }
    }
    /**
     * Check if Window is available
     */

  }, {
    key: "isWindowAvailable",
    value: function isWindowAvailable() {
      return typeof window !== "undefined";
    }
    /**
     * Convert days to seconds
     * @param days Time in days
     * @return number
     */

  }, {
    key: "getSeconds",
    value: function getSeconds(days) {
      return days * 24 * 60 * 60;
    }
  }]);

  return Cookie;
}();

dist_Cookie.MAX_TTL_DAYS = 28;

var Campaign = /*#__PURE__*/function () {
  function Campaign() {
    dist_classCallCheck(this, Campaign);
  }

  dist_createClass(Campaign, null, [{
    key: "GET_VARIANT_ID",
    value:
    /**
     * Get the campaign variant from URL or cookie
     * @param campaignId Campaign id from URL
     * @param segmentId Segment id from URL
     * @param ttl TTL param in days from URL
     * @param request Current user's request
     * @return string
     */
    function GET_VARIANT_ID(campaignId, segmentId, ttl, request) {
      var TTL = this.getCookieTTL(ttl);

      if (TTL === 0) {
        return "";
      }

      if (campaignId && segmentId) {
        return "".concat(campaignId, ":").concat(segmentId);
      }

      var _ref26 = (request === null || request === void 0 ? void 0 : request.headers) ? dist_Cookie.GET_COOKIE_FROM_REQUEST(request) : dist_Cookie.GET_COOKIE(),
          _campaignId = _ref26[this.CAMPAIGN_PARAMETER],
          _segmentId = _ref26[this.SEGMENT_PARAMETER];

      if (_campaignId && _segmentId) {
        return "".concat(_campaignId, ":").concat(_segmentId);
      }

      return "";
    }
    /**
     * Get cookie TTL value
     * @param ttl TTL param in days
     * @return number
     */

  }, {
    key: "getCookieTTL",
    value: function getCookieTTL(ttl) {
      var TTL = Number(ttl);
      return Number.isNaN(TTL) ? this.DEFAULT_TTL_DAYS : TTL;
    }
  }]);

  return Campaign;
}();

Campaign.CAMPAIGN_PARAMETER = "__br__campaign_id";
Campaign.SEGMENT_PARAMETER = "__br__segment";
Campaign.TTL_PARAMETER = "__br__ttl";
Campaign.DEFAULT_TTL_DAYS = 7;

var Segmentation = /*#__PURE__*/function () {
  function Segmentation() {
    dist_classCallCheck(this, Segmentation);
  }

  dist_createClass(Segmentation, null, [{
    key: "GET_SEGMENT_IDS",
    value:
    /**
     * Get the segmentIds from cookie
     * @return string
     */
    function GET_SEGMENT_IDS(request) {
      var _a;

      var cookie = (request === null || request === void 0 ? void 0 : request.headers) ? dist_Cookie.GET_COOKIE_FROM_REQUEST(request) : dist_Cookie.GET_COOKIE();
      return (_a = cookie[this.SEGMENT_IDS_PARAMETER]) !== null && _a !== void 0 ? _a : "";
    }
  }]);

  return Segmentation;
}();

Segmentation.SEGMENT_IDS_PARAMETER = "__br__segment_ids";
var ApiImpl_1;
var DEFAULT_API_VERSION_HEADER = "Accept-Version";
var DEFAULT_AUTHORIZATION_HEADER = "Authorization";
var DEFAULT_SERVER_ID_HEADER = "Server-Id";
var ApiOptionsToken = Symbol["for"]("ApiOptionsToken");
var ApiService = Symbol["for"]("ApiService");

var ApiImpl = ApiImpl_1 = /*#__PURE__*/function () {
  function ApiImpl(urlBuilder, options, logger) {
    dist_classCallCheck(this, ApiImpl);

    this.urlBuilder = urlBuilder;
    this.logger = logger;
    this.headers = ApiImpl_1.getHeaders(options);
    this.httpClient = options.httpClient;
  }

  dist_createClass(ApiImpl, [{
    key: "getPage",
    value: function getPage(path) {
      var url = this.urlBuilder.getApiUrl(path);
      return this.send({
        url: url,
        method: "GET"
      });
    }
  }, {
    key: "getComponent",
    value: function getComponent(url, payload) {
      var data = new URLSearchParams(payload);
      return this.send({
        url: url,
        data: data.toString(),
        headers: {
          "Content-Type": "application/x-www-form-urlencoded"
        },
        method: Object.keys(payload || {}).length ? "POST" : "GET"
      });
    }
  }, {
    key: "send",
    value: function send(config) {
      var _a, _b, _c;

      return __awaiter(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
        var response;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug("Request:", config.method, config.url);
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug("Headers:", Object.assign(Object.assign({}, this.headers), config.headers));

                if (config.data) {
                  (_c = this.logger) === null || _c === void 0 ? void 0 : _c.debug("Body:", config.data);
                }

                _context3.next = 5;
                return this.httpClient(Object.assign(Object.assign({}, config), {
                  headers: Object.assign(Object.assign({}, this.headers), config.headers)
                }));

              case 5:
                response = _context3.sent;
                return _context3.abrupt("return", response.data);

              case 7:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
    }
  }], [{
    key: "getHeaders",
    value: function getHeaders(options) {
      var _a, _b, _c, _d;

      var _ref27 = ((_c = options.request) === null || _c === void 0 ? void 0 : _c.headers) || {},
          cookie = _ref27.cookie,
          referer = _ref27.referer,
          _ref27$xForwardedFo = _ref27["x-forwarded-for"],
          ip = _ref27$xForwardedFo === void 0 ? (_b = (_a = options.request) === null || _a === void 0 ? void 0 : _a.connection) === null || _b === void 0 ? void 0 : _b.remoteAddress : _ref27$xForwardedFo,
          userAgent = _ref27["user-agent"];

      var _options$apiVersionHe = options.apiVersionHeader,
          apiVersionHeader = _options$apiVersionHe === void 0 ? DEFAULT_API_VERSION_HEADER : _options$apiVersionHe,
          apiVersion = options.apiVersion,
          _options$authorizatio = options.authorizationHeader,
          authorizationHeader = _options$authorizatio === void 0 ? DEFAULT_AUTHORIZATION_HEADER : _options$authorizatio,
          authorizationToken = options.authorizationToken,
          _options$serverIdHead = options.serverIdHeader,
          serverIdHeader = _options$serverIdHead === void 0 ? DEFAULT_SERVER_ID_HEADER : _options$serverIdHead,
          serverId = options.serverId,
          _options$visitor = options.visitor,
          visitor = _options$visitor === void 0 ? (_d = options.request) === null || _d === void 0 ? void 0 : _d.visitor : _options$visitor;
      return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ip && {
        "X-Forwarded-For": ip
      }), apiVersion && dist_defineProperty({}, apiVersionHeader, apiVersion)), authorizationToken && dist_defineProperty({}, authorizationHeader, "Bearer ".concat(authorizationToken))), isConfigurationWithProxy(options) && cookie && {
        Cookie: cookie
      }), referer && {
        Referer: referer
      }), serverId && dist_defineProperty({}, serverIdHeader, serverId)), userAgent && {
        "User-Agent": userAgent
      }), visitor && dist_defineProperty({}, visitor.header, visitor.id));
    }
  }]);

  return ApiImpl;
}();

ApiImpl = ApiImpl_1 = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(UrlBuilderService)), __param(1, Object(inversify["inject"])(ApiOptionsToken)), __param(2, Object(inversify["inject"])(Logger)), __param(2, Object(inversify["optional"])()), __metadata("design:paramtypes", [Object, Object, Logger])], ApiImpl);
var SpaService = Symbol["for"]("SpaService");
/**
 * SPA entry point interacting with the Channel Manager and the Page Model API.
 */

var Spa = /*#__PURE__*/function () {
  /**
   * @param pageEventBus Event bus to exchange data between submodules.
   * @param api Api client.
   * @param pageFactory Factory to produce page instances.
   */
  function Spa(api, pageFactory, cmsEventBus, pageEventBus, logger) {
    dist_classCallCheck(this, Spa);

    this.api = api;
    this.pageFactory = pageFactory;
    this.cmsEventBus = cmsEventBus;
    this.pageEventBus = pageEventBus;
    this.logger = logger;
    this.onCmsUpdate = this.onCmsUpdate.bind(this);
  }

  dist_createClass(Spa, [{
    key: "onCmsUpdate",
    value: function onCmsUpdate(event) {
      var _a, _b, _c, _d, _e, _f;

      return __awaiter(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
        var root, component, url, model;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug("Received CMS update event.");
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug("Event:", event);
                root = this.page.getComponent();
                component = root.getComponentById(event.id);
                url = component === null || component === void 0 ? void 0 : component.getUrl();

                if (url) {
                  _context4.next = 8;
                  break;
                }

                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.debug("Skipping the update event.");
                return _context4.abrupt("return");

              case 8:
                (_d = this.logger) === null || _d === void 0 ? void 0 : _d.debug("Trying to request the component model.");
                _context4.next = 11;
                return this.api.getComponent(url, event.properties);

              case 11:
                model = _context4.sent;
                (_e = this.logger) === null || _e === void 0 ? void 0 : _e.debug("Model:", model);
                (_f = this.pageEventBus) === null || _f === void 0 ? void 0 : _f.emit("page.update", {
                  page: model
                });

              case 14:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
    }
    /**
     * Initializes the SPA.
     * @param modelOrPath A preloaded page model or URL to a page model.
     */

  }, {
    key: "initialize",
    value: function initialize(modelOrPath) {
      var _a, _b;

      if (typeof modelOrPath === "string") {
        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug("Trying to request the page model.");
        return this.api.getPage(modelOrPath).then(this.hydrate.bind(this));
      }

      (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug("Received dehydrated model.");
      return this.hydrate(modelOrPath);
    }
  }, {
    key: "hydrate",
    value: function hydrate(model) {
      var _a, _b, _c;

      (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug("Model:", model);
      (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug("Hydrating.");
      this.page = this.pageFactory(model);

      if (this.page.isPreview()) {
        (_c = this.cmsEventBus) === null || _c === void 0 ? void 0 : _c.on("cms.update", this.onCmsUpdate);
      }

      return this.page;
    }
    /**
     * Destroys the integration with the SPA page.
     */

  }, {
    key: "destroy",
    value: function destroy() {
      var _a, _b, _c;

      (_a = this.cmsEventBus) === null || _a === void 0 ? void 0 : _a.off("cms.update", this.onCmsUpdate);
      (_b = this.pageEventBus) === null || _b === void 0 ? void 0 : _b.clearListeners();
      delete this.page;
      (_c = this.logger) === null || _c === void 0 ? void 0 : _c.debug("Destroyed page.");
    }
  }]);

  return Spa;
}();

Spa = __decorate([Object(inversify["injectable"])(), __param(0, Object(inversify["inject"])(ApiService)), __param(1, Object(inversify["inject"])(PageFactory)), __param(2, Object(inversify["inject"])(CmsEventBusService)), __param(2, Object(inversify["optional"])()), __param(3, Object(inversify["inject"])(PageEventBusService)), __param(3, Object(inversify["optional"])()), __param(4, Object(inversify["inject"])(Logger)), __param(4, Object(inversify["optional"])()), __metadata("design:paramtypes", [Object, Function, Object, Object, Logger])], Spa);

function SpaModule() {
  return new inversify["ContainerModule"](function (bind) {
    bind(ApiService).to(ApiImpl).inSingletonScope();
    bind(SpaService).to(Spa).inSingletonScope();
  });
}

var DEFAULT_AUTHORIZATION_PARAMETER = "token";
var DEFAULT_SERVER_ID_PARAMETER = "server-id";
var BTM_PREFIX = "btm_";
var DEFAULT_CAMPAIGN_VARIANT_PARAMETER_URL = "".concat(BTM_PREFIX, "campaign_id");
var DEFAULT_SEGMENT_PARAMETER_URL = "".concat(BTM_PREFIX, "segment");
var DEFAULT_TTL_PARAMETER_URL = "".concat(BTM_PREFIX, "ttl");
var BR_PREFIX = "__br__";
var DEFAULT_CAMPAIGN_VARIANT_PARAMETER_API = "".concat(BR_PREFIX, "campaignVariant");
var DEFAULT_SEGMENT_IDS_PARAMETER_API = "".concat(BR_PREFIX, "segmentIds");
var container = new inversify["Container"]({
  skipBaseClassChecks: true
});
var dist_pages = new WeakMap();
container.load(CmsModule(), LoggerModule(), UrlModule$1());

function onReady(value, callback) {
  var wrapper = function wrapper(result) {
    return callback(result), result;
  };

  return value instanceof Promise ? value.then(wrapper) : wrapper(value);
}

function initializeWithProxy(scope, configuration, model) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _j;

  var logger = scope.get(Logger);
  logger.info("Enabled reverse-proxy based setup.");
  logger.warn("This setup is deprecated and will not work in the next major release.");
  logger.debug("Path:", (_c = (_a = configuration.path) !== null && _a !== void 0 ? _a : (_b = configuration.request) === null || _b === void 0 ? void 0 : _b.path) !== null && _c !== void 0 ? _c : "/");
  logger.debug("Base URL:", configuration.options.preview.spaBaseUrl);
  var options = isMatched((_f = (_d = configuration.path) !== null && _d !== void 0 ? _d : (_e = configuration.request) === null || _e === void 0 ? void 0 : _e.path) !== null && _f !== void 0 ? _f : "/", configuration.options.preview.spaBaseUrl) ? configuration.options.preview : configuration.options.live;
  logger.info("Using ".concat(options === configuration.options.preview ? "preview" : "live", " configuration."));
  var config = Object.assign(Object.assign({}, configuration), {
    NBRMode: configuration.NBRMode || false
  });
  scope.load(PageModule(), SpaModule(), UrlModule());
  scope.bind(ApiOptionsToken).toConstantValue(config);
  scope.bind(UrlBuilderOptionsToken).toConstantValue(options);
  scope.getNamed(CmsService, "cms14").initialize(configuration);
  return onReady(scope.get(SpaService).initialize((_j = (_g = model !== null && model !== void 0 ? model : configuration.path) !== null && _g !== void 0 ? _g : (_h = configuration.request) === null || _h === void 0 ? void 0 : _h.path) !== null && _j !== void 0 ? _j : "/"), function () {
    scope.unbind(ApiOptionsToken);
    scope.unbind(UrlBuilderOptionsToken);
  });
}

function initializeWithJwt09(scope, configuration, model) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;

  var logger = scope.get(Logger);
  logger.info("Enabled token-based setup.");
  logger.info("Using Page Model API 0.9.");
  logger.warn("This version of the Page Model API is deprecated and will be removed in the next major release.");
  var authorizationParameter = (_a = configuration.authorizationQueryParameter) !== null && _a !== void 0 ? _a : DEFAULT_AUTHORIZATION_PARAMETER;
  var serverIdParameter = (_b = configuration.serverIdQueryParameter) !== null && _b !== void 0 ? _b : DEFAULT_SERVER_ID_PARAMETER;

  var _extractSearchParams = extractSearchParams((_e = (_c = configuration.path) !== null && _c !== void 0 ? _c : (_d = configuration.request) === null || _d === void 0 ? void 0 : _d.path) !== null && _e !== void 0 ? _e : "/", [authorizationParameter, serverIdParameter].filter(Boolean)),
      path = _extractSearchParams.url,
      searchParams = _extractSearchParams.searchParams;

  var authorizationToken = (_f = searchParams.get(authorizationParameter)) !== null && _f !== void 0 ? _f : undefined;
  var serverId = (_g = searchParams.get(serverIdParameter)) !== null && _g !== void 0 ? _g : undefined;
  var config = Object.assign(Object.assign({}, configuration), {
    origin: (_h = configuration.origin) !== null && _h !== void 0 ? _h : parseUrl((_k = (_j = configuration.apiBaseUrl) !== null && _j !== void 0 ? _j : configuration.cmsBaseUrl) !== null && _k !== void 0 ? _k : "").origin,
    spaBaseUrl: appendSearchParams((_l = configuration.spaBaseUrl) !== null && _l !== void 0 ? _l : "", searchParams),
    NBRMode: configuration.NBRMode || false
  });

  if (authorizationToken) {
    logger.debug("Token:", authorizationToken);
  }

  if (serverId) {
    logger.debug("Server Id:", serverId);
  }

  logger.debug("Origin:", config.origin);
  logger.debug("Path:", path);
  logger.debug("Base URL:", config.spaBaseUrl);
  scope.load(PageModule(), SpaModule(), UrlModule());
  scope.bind(ApiOptionsToken).toConstantValue(Object.assign({
    authorizationToken: authorizationToken,
    serverId: serverId
  }, config));
  scope.bind(UrlBuilderOptionsToken).toConstantValue(config);
  return onReady(scope.get(SpaService).initialize(model !== null && model !== void 0 ? model : path), function (page) {
    if (page.isPreview() && config.cmsBaseUrl) {
      logger.info("Running in preview mode.");
      scope.get(PostMessageService).initialize(config);
      scope.get(CmsService).initialize(config);
    } else {
      logger.info("Running in live mode.");
    }

    scope.unbind(ApiOptionsToken);
    scope.unbind(UrlBuilderOptionsToken);
  });
}

function initializeWithJwt10(scope, configuration, model) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;

  var logger = scope.get(Logger);
  logger.info("Enabled token-based setup.");
  logger.info("Using Page Model API 1.0.");
  var authorizationParameter = (_a = configuration.authorizationQueryParameter) !== null && _a !== void 0 ? _a : DEFAULT_AUTHORIZATION_PARAMETER;
  var serverIdParameter = (_b = configuration.serverIdQueryParameter) !== null && _b !== void 0 ? _b : DEFAULT_SERVER_ID_PARAMETER;
  var campaignParameter = DEFAULT_CAMPAIGN_VARIANT_PARAMETER_URL;
  var segmentParameter = DEFAULT_SEGMENT_PARAMETER_URL;
  var ttlParameter = DEFAULT_TTL_PARAMETER_URL;

  var _extractSearchParams2 = extractSearchParams((_e = (_c = configuration.path) !== null && _c !== void 0 ? _c : (_d = configuration.request) === null || _d === void 0 ? void 0 : _d.path) !== null && _e !== void 0 ? _e : "/", [authorizationParameter, serverIdParameter, campaignParameter, segmentParameter, ttlParameter].filter(Boolean)),
      path = _extractSearchParams2.url,
      searchParams = _extractSearchParams2.searchParams;

  var authorizationToken = (_f = searchParams.get(authorizationParameter)) !== null && _f !== void 0 ? _f : undefined;
  var serverId = (_g = searchParams.get(serverIdParameter)) !== null && _g !== void 0 ? _g : undefined;
  var campaignId = (_h = searchParams.get(campaignParameter)) !== null && _h !== void 0 ? _h : undefined;
  var segmentId = (_j = searchParams.get(segmentParameter)) !== null && _j !== void 0 ? _j : undefined;
  var ttl = (_k = searchParams.get(ttlParameter)) !== null && _k !== void 0 ? _k : undefined;
  var endpointUrl = configuration.endpoint;
  var campaignVariantId = Campaign.GET_VARIANT_ID(campaignId, segmentId, ttl, configuration.request);
  var segmentIds = Segmentation.GET_SEGMENT_IDS(configuration.request);
  var params = new URLSearchParams();

  if (campaignVariantId) {
    params.append(DEFAULT_CAMPAIGN_VARIANT_PARAMETER_API, campaignVariantId);
  }

  if (segmentIds) {
    params.append(DEFAULT_SEGMENT_IDS_PARAMETER_API, segmentIds);
  }

  endpointUrl = appendSearchParams(endpointUrl !== null && endpointUrl !== void 0 ? endpointUrl : "", params);
  var config = Object.assign(Object.assign({}, configuration), {
    endpoint: endpointUrl,
    baseUrl: appendSearchParams((_l = configuration.baseUrl) !== null && _l !== void 0 ? _l : "", searchParams),
    origin: (_m = configuration.origin) !== null && _m !== void 0 ? _m : parseUrl((_o = configuration.endpoint) !== null && _o !== void 0 ? _o : "").origin,
    NBRMode: configuration.NBRMode || false
  });

  if (authorizationToken) {
    logger.debug("Token:", authorizationToken);
  }

  if (serverId) {
    logger.debug("Server Id:", serverId);
  }

  if (campaignId) {
    logger.debug("Campaign Id:", campaignId);
  }

  if (segmentId) {
    logger.debug("Segment Id:", segmentId);
  }

  if (ttl) {
    logger.debug("TTL:", ttl);
  }

  if (campaignVariantId) {
    logger.debug("Campaign variant Id:", campaignVariantId);
  }

  logger.debug("Endpoint:", config.endpoint);
  logger.debug("Origin:", config.origin);
  logger.debug("Path:", path);
  logger.debug("Base URL:", config.baseUrl);
  scope.load(PageModule$1(), SpaModule(), UrlModule$1());
  scope.bind(ApiOptionsToken).toConstantValue(Object.assign({
    authorizationToken: authorizationToken,
    serverId: serverId
  }, config));
  scope.bind(UrlBuilderOptionsToken).toConstantValue(config);
  return onReady(scope.get(SpaService).initialize(model !== null && model !== void 0 ? model : path), function (page) {
    if (page.isPreview() && config.endpoint) {
      logger.info("Running in preview mode.");
      scope.get(PostMessageService).initialize(config);
      scope.get(CmsService).initialize(config);
    } else {
      logger.info("Running in live mode.");
    }

    scope.unbind(ApiOptionsToken);
    scope.unbind(UrlBuilderOptionsToken);
  });
}

function initialize(configuration, model) {
  if (isPage(model)) {
    return model;
  }

  var scope = container.createChild();
  var logger = scope.get(Logger);
  logger.level = configuration.debug ? Level.Debug : Level.Error;
  logger.debug("Configuration:", configuration);
  return onReady(isConfigurationWithProxy(configuration) ? initializeWithProxy(scope, configuration, model) : isConfigurationWithJwt09(configuration) ? initializeWithJwt09(scope, configuration, model) : initializeWithJwt10(scope, configuration, model), function (page) {
    var _a, _b;

    dist_pages.set(page, scope);
    (_b = (_a = configuration.request) === null || _a === void 0 ? void 0 : _a.emit) === null || _b === void 0 ? void 0 : _b.call(_a, "br:spa:initialized", page);
  });
}
/**
 * Destroys the integration with the SPA page.
 * @param page Page instance to destroy.
 */


function destroy(page) {
  var scope = dist_pages.get(page);
  dist_pages["delete"](page);
  scope === null || scope === void 0 ? void 0 : scope.get(SpaService).destroy();
}


// CONCATENATED MODULE: ./content-bloomreach/mappers/ContentMapper.ts
class mappers_ContentMapper_ContentMapper {
    static bloomreachDocumentToContent(response) {
        var _a, _b, _c;
        response = JSON.parse(JSON.stringify(response));
        const pageRef = response.root.$ref.split('/').pop();
        const pageData = response.page[pageRef];
        const documentRef = (_a = response.document) === null || _a === void 0 ? void 0 : _a.$ref.split('/').pop();
        const documentData = response.page[documentRef];
        const { id, title, introduction, image } = documentData.data;
        const imageRef = image.$ref.split('/').pop();
        const imageLinks = (_b = response.page[imageRef].data.original) === null || _b === void 0 ? void 0 : _b.links;
        return {
            contentId: pageData.id,
            contentTypeId: id,
            title: title,
            banner: (_c = imageLinks === null || imageLinks === void 0 ? void 0 : imageLinks.site) === null || _c === void 0 ? void 0 : _c.href,
            summary: introduction,
        };
    }
}

// CONCATENATED MODULE: ./content-bloomreach/utils/Context.ts
const content_bloomreach_utils_Context_projectConfigurationOverrides = {};
const content_bloomreach_utils_Context_isDevEnv = (context) => {
    return context.environment === 'development' || context.environment === 'dev';
};
const content_bloomreach_utils_Context_getFromProjectConfig = (key, context) => {
    if (content_bloomreach_utils_Context_isDevEnv(context) && content_bloomreach_utils_Context_projectConfigurationOverrides[key]) {
        return content_bloomreach_utils_Context_projectConfigurationOverrides[key];
    }
    return context.projectConfiguration[key];
};

// CONCATENATED MODULE: ./content-bloomreach/apis/ContentApi.ts




class content_bloomreach_apis_ContentApi_ContentApi {
    constructor(frontasticContext, locale) {
        var _a, _b;
        this.locale = (locale !== null && locale !== void 0 ? locale : frontasticContext.project.defaultLocale).replace('_', '-');
        this.deliveryApiUrl = content_bloomreach_utils_Context_getFromProjectConfig('EXTENSION_BLOOMREACH_DELIVERY_API_URL', frontasticContext);
        if (!this.deliveryApiUrl) {
            this.deliveryApiUrl = (_b = (_a = frontasticContext.project.configuration) === null || _a === void 0 ? void 0 : _a.bloomreach) === null || _b === void 0 ? void 0 : _b.deliveryApiUrl;
        }
    }
    async getContent(channel, page) {
        const path = '';
        const pageData = await initialize({
            path,
            endpoint: `${this.deliveryApiUrl}channels/${channel}/pages/${page}`,
            httpClient: axios_default.a,
        });
        return mappers_ContentMapper_ContentMapper.bloomreachDocumentToContent(pageData);
    }
    async getContentList(channel, pages) {
        const path = '';
        const pageResults = [];
        await Promise.all(pages.map(async (page) => {
            const pageData = await initialize({
                path,
                endpoint: `${this.deliveryApiUrl}channels/${channel}/pages/${page}`,
                httpClient: axios_default.a,
            });
            await pageResults.push(mappers_ContentMapper_ContentMapper.bloomreachDocumentToContent(pageData));
        }));
        return pageResults;
    }
}

// CONCATENATED MODULE: ./content-bloomreach/utils/Request.ts
const content_bloomreach_utils_Request_getPath = (request) => {
    var _a;
    return (_a = content_bloomreach_utils_Request_getHeader(request, 'frontastic-path')) !== null && _a !== void 0 ? _a : request.query.path;
};
const content_bloomreach_utils_Request_getLocale = (request) => {
    var _a, _b;
    if (request !== undefined) {
        const locale = (_a = content_bloomreach_utils_Request_getHeader(request, 'frontastic-locale')) !== null && _a !== void 0 ? _a : request.query.locale;
        if (locale !== undefined) {
            return (_b = content_bloomreach_utils_Request_getHeader(request, 'frontastic-locale')) !== null && _b !== void 0 ? _b : request.query.locale;
        }
    }
    return null;
};
const content_bloomreach_utils_Request_getHeader = (request, header) => {
    if (request.headers && header in request.headers) {
        const foundHeader = request.headers[header];
        if (Array.isArray(foundHeader)) {
            return foundHeader[0];
        }
        return foundHeader;
    }
    return null;
};

// CONCATENATED MODULE: ./content-bloomreach/actionControllers/BloomreachController.ts


const BloomreachController_getContent = async (request, actionContext) => {
    const { channel, page } = request.query;
    if (!channel) {
        return {
            body: 'Missing channel info',
            statusCode: 400,
        };
    }
    if (!page) {
        return {
            body: 'Missing page name/path info',
            statusCode: 400,
        };
    }
    const contentApi = new content_bloomreach_apis_ContentApi_ContentApi(actionContext.frontasticContext, content_bloomreach_utils_Request_getLocale(request));
    const data = await contentApi.getContent(channel, page);
    const response = {
        statusCode: 200,
        body: JSON.stringify(data),
        sessionData: request.sessionData,
    };
    return response;
};
const BloomreachController_getContentList = async (request, actionContext) => {
    const { channel, pages } = request.query;
    let pageList;
    if (!channel) {
        return {
            body: 'Missing channel info',
            statusCode: 400,
        };
    }
    if (!pages) {
        return {
            body: 'Missing page name/path List',
            statusCode: 400,
        };
    }
    else {
        pageList = pages.split(',');
    }
    const contentApi = new content_bloomreach_apis_ContentApi_ContentApi(actionContext.frontasticContext, content_bloomreach_utils_Request_getLocale(request));
    const data = await contentApi.getContentList(channel, pageList);
    const response = {
        statusCode: 200,
        body: JSON.stringify(data),
        sessionData: request.sessionData,
    };
    return response;
};

// CONCATENATED MODULE: ./content-bloomreach/index.ts



/* harmony default export */ var content_bloomreach = ({
    'data-sources': {
        'bloomreach/content': async (config, context) => {
            const contentApi = new content_bloomreach_apis_ContentApi_ContentApi(context.frontasticContext, content_bloomreach_utils_Request_getLocale(context.request));
            const { channel, page } = config.configuration;
            return {
                dataSourcePayload: await contentApi.getContent(channel, page),
            };
        },
        'bloomreach/content-list': async (config, context) => {
            const contentApi = new content_bloomreach_apis_ContentApi_ContentApi(context.frontasticContext, content_bloomreach_utils_Request_getLocale(context.request));
            const { channel, pages } = config.configuration;
            const payload = await contentApi.getContentList(channel, pages);
            return {
                dataSourcePayload: payload,
            };
        },
    },
    actions: {
        bloomreach: BloomreachController_namespaceObject,
    },
});

// CONCATENATED MODULE: ./content-nosto/utils/Errors.ts
class utils_Errors_ExtensionError extends Error {
    constructor({ message, errors }) {
        var _a;
        super(message || ((_a = errors === null || errors === void 0 ? void 0 : errors[0]) === null || _a === void 0 ? void 0 : _a.message));
        this.errors = errors || [{ message }];
    }
}
class content_nosto_utils_Errors_ValidationError extends utils_Errors_ExtensionError {
    constructor(options) {
        super(options);
        this.code = 'validation_error';
    }
}
class utils_Errors_ExternalError extends utils_Errors_ExtensionError {
    constructor(options) {
        super(options);
        this.status = options.status;
        this.body = options.body;
        this.code = 'external_error';
    }
}

// CONCATENATED MODULE: ./content-nosto/utils/Context.ts
const content_nosto_utils_Context_projectConfigurationOverrides = {};
const content_nosto_utils_Context_isDevEnv = (context) => {
    return context.environment === 'development' || context.environment === 'dev';
};
const content_nosto_utils_Context_getFromProjectConfig = (key, context) => {
    if (content_nosto_utils_Context_isDevEnv(context) && content_nosto_utils_Context_projectConfigurationOverrides[key]) {
        return content_nosto_utils_Context_projectConfigurationOverrides[key];
    }
    return context.projectConfiguration[key];
};

// CONCATENATED MODULE: ./content-nosto/apis/BaseApi.ts


class content_nosto_apis_BaseApi_BaseApi {
    constructor(frontasticContext, nostoSessionId) {
        var _a, _b, _c, _d;
        this.graphqlQueryFields = `{
    divId
    resultId
    primary {
      productId
      name
      listPrice
      imageUrl
      categories
      url
    }
  }`;
        this.graphqlQueryImageVersion = `VERSION_8_400_400`;
        this.apiToken = content_nosto_utils_Context_getFromProjectConfig('EXTENSION_NOSTO_API_TOKEN', frontasticContext);
        if (!this.apiToken) {
            this.apiToken = (_b = (_a = frontasticContext.project.configuration) === null || _a === void 0 ? void 0 : _a.nosto) === null || _b === void 0 ? void 0 : _b.apiToken;
        }
        this.apiUrl = content_nosto_utils_Context_getFromProjectConfig('EXTENSION_NOSTO_API_URL', frontasticContext);
        if (!this.apiUrl) {
            this.apiUrl = (_d = (_c = frontasticContext.project.configuration) === null || _c === void 0 ? void 0 : _c.nosto) === null || _d === void 0 ? void 0 : _d.apiUrl;
        }
        this.sessionId = nostoSessionId;
    }
    getSessionId() {
        return this.sessionId;
    }
    getQueryFields() {
        return this.graphqlQueryFields;
    }
    getQueryImageVersion() {
        return this.graphqlQueryImageVersion;
    }
    fetch(body) {
        const headers = {
            'Content-Type': 'application/graphql',
            Authorization: 'Basic ' + Buffer.from(`:${this.apiToken}`).toString('base64'),
        };
        try {
            const responseJson = Object(lib["default"])(this.apiUrl, {
                method: 'POST',
                body,
                headers,
            }).then((response) => {
                return response.json();
            });
            return responseJson;
        }
        catch (error) {
            throw error;
        }
    }
}

// CONCATENATED MODULE: ./content-nosto/mappers/NostoMapper.ts
class NostoMapper {
    static mapToVariant(recommendedProduct, price) {
        const variant = {
            sku: recommendedProduct === null || recommendedProduct === void 0 ? void 0 : recommendedProduct.productId,
            price: price,
            images: [recommendedProduct === null || recommendedProduct === void 0 ? void 0 : recommendedProduct.imageUrl],
        };
        return variant;
    }
    static mapToCategories(recommendedProduct) {
        return recommendedProduct === null || recommendedProduct === void 0 ? void 0 : recommendedProduct.categories.map((categoryName) => {
            return {
                name: categoryName,
            };
        });
    }
    static mapNostoResponseToProducts(recommendedProducts) {
        const products = [];
        recommendedProducts.forEach((recommendedProduct) => {
            const price = {
                fractionDigits: 0,
                centAmount: recommendedProduct === null || recommendedProduct === void 0 ? void 0 : recommendedProduct.listPrice,
            };
            const variant = this.mapToVariant(recommendedProduct, price);
            const categories = this.mapToCategories(recommendedProduct);
            const product = {
                name: recommendedProduct === null || recommendedProduct === void 0 ? void 0 : recommendedProduct.name,
                categories,
                variants: [variant],
                _url: recommendedProduct.url,
            };
            products.push(product);
        });
        return products;
    }
}

// CONCATENATED MODULE: ./content-nosto/apis/ProductPageRecommendationApi.ts


class ProductPageRecommendationApi_ProductPageRecommendationApi extends content_nosto_apis_BaseApi_BaseApi {
    async fetchRecommendation(target, placementId) {
        var _a, _b, _c;
        const sessionId = this.getSessionId();
        const body = `mutation {
      updateSession(by: BY_CID, id: "${sessionId}",
        params: {
          event: {
            type: VIEWED_PRODUCT
            target: "${target}"
            ref: "front-page-slot-1"
          }
        }
      ) {
        pages {
          forProductPage(params: {
            isPreview: false, imageVersion:   ${this.getQueryImageVersion()}
          }, product: "${target}") ${this.getQueryFields()}
        }
      }
    }`;
        const recommendationResult = await this.fetch(body);
        const placementList = (_c = (_b = (_a = recommendationResult === null || recommendationResult === void 0 ? void 0 : recommendationResult.data) === null || _a === void 0 ? void 0 : _a.updateSession) === null || _b === void 0 ? void 0 : _b.pages) === null || _c === void 0 ? void 0 : _c.forProductPage;
        const recommendations = placementList.filter((obj) => (obj === null || obj === void 0 ? void 0 : obj.resultId) == placementId)[0];
        const recommendedProducts = recommendations === null || recommendations === void 0 ? void 0 : recommendations.primary;
        const mappedProducts = NostoMapper.mapNostoResponseToProducts(recommendedProducts);
        return mappedProducts;
    }
}

// CONCATENATED MODULE: ./content-nosto/apis/CategoryPageRecommendationApi.ts


class CategoryPageRecommendationApi_CategoryPageRecommendationApi extends content_nosto_apis_BaseApi_BaseApi {
    async fetchRecommendation(target, placementId) {
        var _a, _b, _c;
        const sessionId = this.getSessionId();
        const body = `mutation {
      updateSession(by: BY_CID, id: "${sessionId}",
        params: {
          event: {
            type: VIEWED_CATEGORY
            target: "/${target}"
          }
        }
      ) {
        pages {
          forCategoryPage(params: {
            isPreview: false, imageVersion:   ${this.getQueryImageVersion()}
          }, category: "${target}") ${this.getQueryFields()}
        }
      }
    }`;
        const recommendationResult = await this.fetch(body);
        const placementList = (_c = (_b = (_a = recommendationResult === null || recommendationResult === void 0 ? void 0 : recommendationResult.data) === null || _a === void 0 ? void 0 : _a.updateSession) === null || _b === void 0 ? void 0 : _b.pages) === null || _c === void 0 ? void 0 : _c.forCategoryPage;
        const recommendations = placementList.filter((obj) => (obj === null || obj === void 0 ? void 0 : obj.resultId) == placementId)[0];
        const recommendedProducts = recommendations === null || recommendations === void 0 ? void 0 : recommendations.primary;
        const mappedProducts = NostoMapper.mapNostoResponseToProducts(recommendedProducts);
        return mappedProducts;
    }
}

// CONCATENATED MODULE: ./content-nosto/apis/SearchPageRecommendationApi.ts


class SearchPageRecommendationApi_SearchPageRecommendationApi extends content_nosto_apis_BaseApi_BaseApi {
    async fetchRecommendation(target, placementId) {
        var _a, _b, _c;
        const sessionId = this.getSessionId();
        const body = `mutation {
      updateSession(by: BY_CID, id: "${sessionId}",
        params: {
          event: {
            type: SEARCHED_FOR
            target: "${target}"
          }
        }
      ) {
        pages {
          forSearchPage(params: {
            isPreview: false, imageVersion:   ${this.getQueryImageVersion()}
          }, term: "${target}") ${this.getQueryFields()}
        }
      }
    }`;
        const recommendationResult = await this.fetch(body);
        const placementList = (_c = (_b = (_a = recommendationResult === null || recommendationResult === void 0 ? void 0 : recommendationResult.data) === null || _a === void 0 ? void 0 : _a.updateSession) === null || _b === void 0 ? void 0 : _b.pages) === null || _c === void 0 ? void 0 : _c.forSearchPage;
        const recommendations = placementList.filter((obj) => (obj === null || obj === void 0 ? void 0 : obj.resultId) == placementId)[0];
        const recommendedProducts = recommendations === null || recommendations === void 0 ? void 0 : recommendations.primary;
        const mappedProducts = NostoMapper.mapNostoResponseToProducts(recommendedProducts);
        return mappedProducts;
    }
}

// CONCATENATED MODULE: ./content-nosto/apis/CartPageRecommendationApi.ts


class CartPageRecommendationApi_CartPageRecommendationApi extends content_nosto_apis_BaseApi_BaseApi {
    async fetchRecommendation(target, placementId) {
        var _a, _b, _c;
        const sessionId = this.getSessionId();
        const body = `mutation {
      updateSession(by: BY_CID, id: "${sessionId}",
        params: {
          event: {
            type: VIEWED_PAGE
            target: "${target}"
          }
        }
      ) {
        pages {
          forCartPage(params: {
            isPreview: false, imageVersion:  ${this.getQueryImageVersion()}
          }, value: 100) ${this.getQueryFields()}
        }
      }
    }`;
        const recommendationResult = await this.fetch(body);
        const placementList = (_c = (_b = (_a = recommendationResult === null || recommendationResult === void 0 ? void 0 : recommendationResult.data) === null || _a === void 0 ? void 0 : _a.updateSession) === null || _b === void 0 ? void 0 : _b.pages) === null || _c === void 0 ? void 0 : _c.forCartPage;
        const recommendations = placementList.filter((obj) => (obj === null || obj === void 0 ? void 0 : obj.resultId) == placementId)[0];
        const recommendedProducts = recommendations === null || recommendations === void 0 ? void 0 : recommendations.primary;
        const mappedProducts = NostoMapper.mapNostoResponseToProducts(recommendedProducts);
        return mappedProducts;
    }
}

// CONCATENATED MODULE: ./content-nosto/apis/FrontPageRecommendationApi.ts


class FrontPageRecommendationApi_FrontPageRecommendationApi extends content_nosto_apis_BaseApi_BaseApi {
    async fetchRecommendation(target, placementId) {
        var _a, _b, _c;
        const sessionId = this.getSessionId();
        const body = `mutation {
      updateSession(by: BY_CID, id: "${sessionId}",
        params: {
          event: {
            type: VIEWED_PAGE
            target: "${target}"
          }
        }
      ) {
        pages {
          forFrontPage(params: {
            isPreview: false, imageVersion:  ${this.getQueryImageVersion()}
          }) ${this.getQueryFields()}
        }
      }
    }`;
        const recommendationResult = await this.fetch(body);
        const placementList = (_c = (_b = (_a = recommendationResult === null || recommendationResult === void 0 ? void 0 : recommendationResult.data) === null || _a === void 0 ? void 0 : _a.updateSession) === null || _b === void 0 ? void 0 : _b.pages) === null || _c === void 0 ? void 0 : _c.forFrontPage;
        const recommendations = placementList.filter((obj) => (obj === null || obj === void 0 ? void 0 : obj.resultId) == placementId)[0];
        const recommendedProducts = recommendations === null || recommendations === void 0 ? void 0 : recommendations.primary;
        return NostoMapper.mapNostoResponseToProducts(recommendedProducts);
    }
}

// CONCATENATED MODULE: ./content-nosto/apis/RecommendationApiFactory.ts






class RecommendationApiFactory_RecommendationApiFactory {
    static getInstance(frontasticContext, nostoSessionId, pageType) {
        switch (pageType) {
            case 'PRODUCT':
                return new ProductPageRecommendationApi_ProductPageRecommendationApi(frontasticContext, nostoSessionId);
            case 'CATEGORY':
                return new CategoryPageRecommendationApi_CategoryPageRecommendationApi(frontasticContext, nostoSessionId);
            case 'SEARCH':
                return new SearchPageRecommendationApi_SearchPageRecommendationApi(frontasticContext, nostoSessionId);
            case 'CART':
                return new CartPageRecommendationApi_CartPageRecommendationApi(frontasticContext, nostoSessionId);
            case 'FRONT':
                return new FrontPageRecommendationApi_FrontPageRecommendationApi(frontasticContext, nostoSessionId);
            default:
                throw new content_nosto_utils_Errors_ValidationError({
                    message: `pageType is not valid. ${pageType} is not included within [PRODUCT, CATEGORY, SEARCH, CART, FRONT]`,
                });
        }
    }
}

// CONCATENATED MODULE: ./content-nosto/index.ts


/* harmony default export */ var content_nosto = ({
    'data-sources': {
        'nosto/product-recommendations': async (config, context) => {
            content_nosto_validate(config, context);
            const { target, nostoSessionId } = context.request.query;
            const { pageType, placementId } = config.configuration;
            const recommendApi = RecommendationApiFactory_RecommendationApiFactory.getInstance(context.frontasticContext, nostoSessionId, pageType);
            const recommendedProducts = await recommendApi.fetchRecommendation(target, placementId);
            return {
                dataSourcePayload: { recommendedProducts },
            };
        },
    },
});
function content_nosto_validate(config, context) {
    var _a, _b, _c;
    if (!context.hasOwnProperty('request')) {
        throw new content_nosto_utils_Errors_ValidationError({
            message: `Request is not defined in context ${context}`,
        });
    }
    if (!config.hasOwnProperty('configuration')) {
        throw new content_nosto_utils_Errors_ValidationError({
            message: `Configuration is not defined in data source configuration ${config}`,
        });
    }
    const target = (_b = (_a = context.request) === null || _a === void 0 ? void 0 : _a.query) === null || _b === void 0 ? void 0 : _b.target;
    const pageType = (_c = config.configuration) === null || _c === void 0 ? void 0 : _c.pageType;
    const nostoSessionId = context.request.query.nostoSessionId;
    if (!target) {
        throw new content_nosto_utils_Errors_ValidationError({
            message: `target is not defined in context request ${context.request}`,
        });
    }
    if (!pageType) {
        throw new content_nosto_utils_Errors_ValidationError({
            message: `pageType is not defined in data source configuration ${config.configuration}`,
        });
    }
    if (!nostoSessionId) {
        throw new content_nosto_utils_Errors_ValidationError({
            message: `nostoSessionId is not defined in context request ${context.request}`,
        });
    }
}

// CONCATENATED MODULE: ./promotion-talon-one/index.ts
/* harmony default export */ var promotion_talon_one = ({
    'data-sources': {},
    actions: {},
});

// CONCATENATED MODULE: ./extensions-runner-test/api-source.ts
class SportsAPI {
    constructor() {
        this.sportTeam = [
            {
                id: 1,
                team_name: 'Manchester United',
                location: 'Manchester, England',
                net_worth: '5 Billion',
            },
            {
                id: 2,
                team_name: 'Manchester City',
                location: 'Manchester, England',
                net_worth: '2 Billion',
            },
            {
                id: 3,
                team_name: 'Arsenal',
                location: 'London, England',
                net_worth: '4.5 Billion',
            },
        ];
    }
    async getTeams() {
        return this.sportTeam;
    }
    async getTeam(id) {
        return this.sportTeam.find((team) => team.id === id);
    }
}
/* harmony default export */ var api_source = (SportsAPI);

// CONCATENATED MODULE: ./extensions-runner-test/actions.ts

const getTeams = async (request) => {
    const contentApi = new api_source();
    const data = await contentApi.getTeams();
    const response = {
        statusCode: 200,
        body: JSON.stringify(data),
        sessionData: request.sessionData,
    };
    return response;
};
const getTeam = async (request) => {
    const contentApi = new api_source();
    const teamId = request.query.id;
    if (!teamId) {
        return {
            statusCode: 400,
            body: 'Team ID was no provided',
            sessionData: request.sessionData,
        };
    }
    const data = await contentApi.getTeam(request.query.id);
    const response = {
        statusCode: 200,
        body: JSON.stringify(data),
        sessionData: request.sessionData,
    };
    return response;
};


// CONCATENATED MODULE: ./extensions-runner-test/index.ts


/* harmony default export */ var extensions_runner_test = ({
    'data-sources': {
        'integration/test': async () => {
            const contentApi = new api_source();
            return {
                dataSourcePayload: await contentApi.getTeams(),
            };
        },
    },
    actions: {
        teams: actions_namespaceObject,
    },
});

// CONCATENATED MODULE: ./index.ts











const extensionsToMerge = [
    commerce_commercetools,
    content_contentful,
    content_dynamicyield,
    content_amplience,
    content_contentstack,
    content_bloomreach,
    promotion_talon_one,
    extensions_runner_test,
    content_nosto,
];
const mergeActions = (extensions) => {
    const actionNamespaces = {};
    for (const extension of extensions) {
        for (const actionNamespace in extension['actions'] || {}) {
            if (!actionNamespaces[actionNamespace]) {
                actionNamespaces[actionNamespace] = {};
            }
            actionNamespaces[actionNamespace] = Object.assign({}, actionNamespaces[actionNamespace], extension['actions'][actionNamespace]);
        }
    }
    return actionNamespaces;
};
const mergeDynamicPageHandlers = (extensions) => {
    return async (request, dynamicPageContext) => {
        for (const extension of extensions) {
            if (extension['dynamic-page-handler']) {
                const result = await extension['dynamic-page-handler'](request, dynamicPageContext);
                if (result !== null) {
                    return result;
                }
            }
        }
        return null;
    };
};
/* harmony default export */ var index_0 = __webpack_exports__["default"] = ({
    'dynamic-page-handler': mergeDynamicPageHandlers(extensionsToMerge),
    'data-sources': extensionsToMerge
        .map((extension) => {
        return extension['data-sources'] || {};
    })
        .reduce(Object.assign, {}),
    actions: mergeActions(extensionsToMerge),
});


/***/ })
/******/ ]);
});
//# sourceMappingURL=bundle.min.js.map